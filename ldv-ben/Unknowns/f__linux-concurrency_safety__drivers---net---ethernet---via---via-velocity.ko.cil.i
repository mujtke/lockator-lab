/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 796 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct pdev_archdata {
   
};

#line 15 
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct user_struct;

#line 66 
struct writeback_control;

#line 67 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_183 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_183 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_186 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_187 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_188 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_190 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_189 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_190 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_191 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_192 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_184 {
   int _pad[28U] ;
   struct __anonstruct__kill_185 _kill ;
   struct __anonstruct__timer_186 _timer ;
   struct __anonstruct__rt_187 _rt ;
   struct __anonstruct__sigchld_188 _sigchld ;
   struct __anonstruct__sigfault_189 _sigfault ;
   struct __anonstruct__sigpoll_191 _sigpoll ;
   struct __anonstruct__sigsys_192 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_184 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_199 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_200 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_202 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   struct keyring_index_key index_key ;
   struct __anonstruct_202 __anonCompField___anonunion_201_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_203 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_205 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_204 {
   union __anonunion_payload_205 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_199 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_200 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_201 __anonCompField_key_53 ;
   union __anonunion_type_data_203 type_data ;
   union __anonunion_204 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_220 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_220 __anonCompField_pci_dev_58 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_221 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_221 __anonCompField_iov_iter_59 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_223 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_223 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_224 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_224 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_225 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_225 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_226 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_226 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_227 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_227 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_228 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_228 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_229 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_229 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_230 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_230 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_231 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_232 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_231 ifr_ifrn ;
   union __anonunion_ifr_ifru_232 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_237 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_236 {
   struct __anonstruct_237 __anonCompField___anonunion_236_60 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_236 __anonCompField_lockref_61 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_239 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_238 {
   struct __anonstruct_239 __anonCompField___anonunion_238_62 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_238 __anonCompField_qstr_63 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_240 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_240 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_244 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_243 {
   struct __anonstruct_244 __anonCompField___anonunion_243_64 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_243 __anonCompField_radix_tree_node_65 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_248 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_248 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_249 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_249 __anonCompField_kqid_67 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_252 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_253 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_254 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_252 __anonCompField_inode_68 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_253 __anonCompField_inode_69 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_254 __anonCompField_inode_70 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_255 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_255 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_257 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_256 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_257 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_256 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_25574 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_25574 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_272 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_272 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_26420 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_277 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_278 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_26420 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_277 __anonCompField_nf_bridge_info_74 ;
   union __anonunion_278 __anonCompField_nf_bridge_info_75 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_279 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_279 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_281 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_280 {
   u64 v64 ;
   struct __anonstruct_281 __anonCompField___anonunion_280_76 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_280 __anonCompField_skb_mstamp_77 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_283 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_284 __anonCompField___anonstruct_283_78 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_282 {
   struct __anonstruct_283 __anonCompField___anonunion_282_79 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_286 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __wsum csum ;
   struct __anonstruct_286 __anonCompField___anonunion_285_81 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_287 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_289 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_282 __anonCompField_sk_buff_80 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_285 __anonCompField_sk_buff_82 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_287 __anonCompField_sk_buff_83 ;
   __u32 secmark ;
   union __anonunion_288 __anonCompField_sk_buff_84 ;
   union __anonunion_289 __anonCompField_sk_buff_85 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29194 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29194 phy_interface_t;

#line 126 
enum ldv_29247 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29247 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30957 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30958 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30957 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30958 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpu.h"
struct mfd_cell;

#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpu.h"
struct platform_device {
   char const *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id const *id_entry ;
   char *driver_override ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};

#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device *) ;
   int (*remove)(struct platform_device *) ;
   void (*shutdown)(struct platform_device *) ;
   int (*suspend)(struct platform_device *, pm_message_t ) ;
   int (*resume)(struct platform_device *) ;
   struct device_driver driver ;
   struct platform_device_id const *id_table ;
   bool prevent_deferred_probe ;
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_irq.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct ipv4_devconf {
   void *sysctl ;
   int data[29U] ;
   unsigned long state[1U] ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_ifaddr;

#line 20 
struct ip_mc_list;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_device {
   struct net_device *dev ;
   atomic_t refcnt ;
   int dead ;
   struct in_ifaddr *ifa_list ;
   struct ip_mc_list *mc_list ;
   struct ip_mc_list **mc_hash ;
   int mc_count ;
   spinlock_t mc_tomb_lock ;
   struct ip_mc_list *mc_tomb ;
   unsigned long mr_v1_seen ;
   unsigned long mr_v2_seen ;
   unsigned long mr_maxdelay ;
   unsigned char mr_qrv ;
   unsigned char mr_gq_running ;
   unsigned char mr_ifc_count ;
   struct timer_list mr_gq_timer ;
   struct timer_list mr_ifc_timer ;
   struct neigh_parms *arp_parms ;
   struct ipv4_devconf cnf ;
   struct callback_head callback_head ;
};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_ifaddr {
   struct hlist_node hash ;
   struct in_ifaddr *ifa_next ;
   struct in_device *ifa_dev ;
   struct callback_head callback_head ;
   __be32 ifa_local ;
   __be32 ifa_address ;
   __be32 ifa_mask ;
   __be32 ifa_broadcast ;
   unsigned char ifa_scope ;
   unsigned char ifa_prefixlen ;
   __u32 ifa_flags ;
   char ifa_label[16U] ;
   __u32 ifa_valid_lft ;
   __u32 ifa_preferred_lft ;
   unsigned long ifa_cstamp ;
   unsigned long ifa_tstamp ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
union __anonunion___u_331 {
   struct in_device * const __val ;
   char __c[1U] ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_339 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_339 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_347 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_347 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_348 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_348 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_350 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_349 {
   __addrpair skc_addrpair ;
   struct __anonstruct_350 __anonCompField___anonunion_349_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_351 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_353 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_352 {
   __portpair skc_portpair ;
   struct __anonstruct_353 __anonCompField___anonunion_352_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_354 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_355 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_349 __anonCompField_sock_common_103 ;
   union __anonunion_351 __anonCompField_sock_common_104 ;
   union __anonunion_352 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_354 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_355 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_356 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_356 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_359 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_359 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
struct rdesc0 {
   __le16 RSR ;
   __le16 len ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct rdesc1 {
   __le16 PQTAG ;
   u8 CSM ;
   u8 IPKT ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct rx_desc {
   struct rdesc0 rdesc0 ;
   struct rdesc1 rdesc1 ;
   __le32 pa_low ;
   __le16 pa_high ;
   __le16 size ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct tdesc0 {
   __le16 TSR ;
   __le16 len ;
};

#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct tdesc1 {
   __le16 vlan ;
   u8 TCR ;
   u8 cmd ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct td_buf {
   __le32 pa_low ;
   __le16 pa_high ;
   __le16 size ;
};

#line 222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct tx_desc {
   struct tdesc0 tdesc0 ;
   struct tdesc1 tdesc1 ;
   struct td_buf td_buf[7U] ;
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct velocity_rd_info {
   struct sk_buff *skb ;
   dma_addr_t skb_dma ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct velocity_td_info {
   struct sk_buff *skb ;
   int nskb_dma ;
   dma_addr_t skb_dma[7U] ;
};

#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct mac_regs {
   u8 volatile PAR[6U] ;
   u8 volatile RCR ;
   u8 volatile TCR ;
   __le32 volatile CR0Set ;
   __le32 volatile CR0Clr ;
   u8 volatile MARCAM[8U] ;
   __le32 volatile DecBaseHi ;
   __le16 volatile DbfBaseHi ;
   __le16 volatile reserved_1E ;
   __le16 volatile ISRCTL ;
   u8 volatile TXESR ;
   u8 volatile RXESR ;
   __le32 volatile ISR ;
   __le32 volatile IMR ;
   __le32 volatile TDStatusPort ;
   __le16 volatile TDCSRSet ;
   u8 volatile RDCSRSet ;
   u8 volatile reserved_33 ;
   __le16 volatile TDCSRClr ;
   u8 volatile RDCSRClr ;
   u8 volatile reserved_37 ;
   __le32 volatile RDBaseLo ;
   __le16 volatile RDIdx ;
   u8 volatile TQETMR ;
   u8 volatile RQETMR ;
   __le32 volatile TDBaseLo[4U] ;
   __le16 volatile RDCSize ;
   __le16 volatile TDCSize ;
   __le16 volatile TDIdx[4U] ;
   __le16 volatile tx_pause_timer ;
   __le16 volatile RBRDU ;
   __le32 volatile FIFOTest0 ;
   __le32 volatile FIFOTest1 ;
   u8 volatile CAMADDR ;
   u8 volatile CAMCR ;
   u8 volatile GFTEST ;
   u8 volatile FTSTCMD ;
   u8 volatile MIICFG ;
   u8 volatile MIISR ;
   u8 volatile PHYSR0 ;
   u8 volatile PHYSR1 ;
   u8 volatile MIICR ;
   u8 volatile MIIADR ;
   __le16 volatile MIIDATA ;
   __le16 volatile SoftTimer0 ;
   __le16 volatile SoftTimer1 ;
   u8 volatile CFGA ;
   u8 volatile CFGB ;
   u8 volatile CFGC ;
   u8 volatile CFGD ;
   __le16 volatile DCFG ;
   __le16 volatile MCFG ;
   u8 volatile TBIST ;
   u8 volatile RBIST ;
   u8 volatile PMCPORT ;
   u8 volatile STICKHW ;
   u8 volatile MIBCR ;
   u8 volatile reserved_85 ;
   u8 volatile rev_id ;
   u8 volatile PORSTS ;
   __le32 volatile MIBData ;
   __le16 volatile EEWrData ;
   u8 volatile reserved_8E ;
   u8 volatile BPMDWr ;
   u8 volatile BPCMD ;
   u8 volatile BPMDRd ;
   u8 volatile EECHKSUM ;
   u8 volatile EECSR ;
   __le16 volatile EERdData ;
   u8 volatile EADDR ;
   u8 volatile EMBCMD ;
   u8 volatile JMPSR0 ;
   u8 volatile JMPSR1 ;
   u8 volatile JMPSR2 ;
   u8 volatile JMPSR3 ;
   u8 volatile CHIPGSR ;
   u8 volatile TESTCFG ;
   u8 volatile DEBUG ;
   u8 volatile CHIPGCR ;
   __le16 volatile WOLCRSet ;
   u8 volatile PWCFGSet ;
   u8 volatile WOLCFGSet ;
   __le16 volatile WOLCRClr ;
   u8 volatile PWCFGCLR ;
   u8 volatile WOLCFGClr ;
   __le16 volatile WOLSRSet ;
   __le16 volatile reserved_AA ;
   __le16 volatile WOLSRClr ;
   __le16 volatile reserved_AE ;
   __le16 volatile PatternCRC[8U] ;
   __le32 volatile ByteMask[4U][4U] ;
};

#line 1136 
enum chip_type {
    CHIP_TYPE_VT6110 = 1
};

#line 1140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct velocity_info_tbl {
   enum chip_type chip_id ;
   char const *name ;
   int txqueue ;
   u32 flags ;
};

#line 1204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
typedef u8 MCAM_ADDR[6U];

#line 1205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct arp_packet {
   u8 dest_mac[6U] ;
   u8 src_mac[6U] ;
   __be16 type ;
   __be16 ar_hrd ;
   __be16 ar_pro ;
   u8 ar_hln ;
   u8 ar_pln ;
   __be16 ar_op ;
   u8 ar_sha[6U] ;
   u8 ar_sip[4U] ;
   u8 ar_tha[6U] ;
   u8 ar_tip[4U] ;
};

#line 1228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct velocity_context {
   u8 mac_reg[256U] ;
   MCAM_ADDR cam_addr[64U][6U] ;
   u16 vcam[64U] ;
   u32 cammask[2U] ;
   u32 patcrc[2U] ;
   u32 pattern[8U] ;
};

#line 1250 
enum speed_opt {
    SPD_DPX_AUTO = 0,
    SPD_DPX_100_HALF = 1,
    SPD_DPX_100_FULL = 2,
    SPD_DPX_10_HALF = 3,
    SPD_DPX_10_FULL = 4,
    SPD_DPX_1000_FULL = 5
};

#line 1259 
enum velocity_init_type {
    VELOCITY_INIT_COLD = 0,
    VELOCITY_INIT_RESET = 1,
    VELOCITY_INIT_WOL = 2
};

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct velocity_opt {
   int numrx ;
   int numtx ;
   enum speed_opt spd_dpx ;
   int DMA_length ;
   int rx_thresh ;
   int flow_cntl ;
   int wol_opts ;
   int td_int_count ;
   int int_works ;
   int rx_bandwidth_hi ;
   int rx_bandwidth_lo ;
   int rx_bandwidth_en ;
   int rxqueue_timer ;
   int txqueue_timer ;
   int tx_intsup ;
   int rx_intsup ;
   u32 flags ;
};

#line 1431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct tx_info {
   int numq ;
   int used[4U] ;
   int curr[4U] ;
   int tail[4U] ;
   struct tx_desc *rings[4U] ;
   struct velocity_td_info *infos[4U] ;
   dma_addr_t pool_dma[4U] ;
};

#line 1461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct rx_info {
   int buf_sz ;
   int dirty ;
   int curr ;
   u32 filled ;
   struct rx_desc *ring ;
   struct velocity_rd_info *info ;
   dma_addr_t pool_dma ;
};

#line 1472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
struct velocity_info {
   struct device *dev ;
   struct pci_dev *pdev ;
   struct net_device *netdev ;
   int no_eeprom ;
   unsigned long active_vlans[64U] ;
   u8 ip_addr[4U] ;
   enum chip_type chip_id ;
   struct mac_regs *mac_regs ;
   unsigned long memaddr ;
   unsigned long ioaddr ;
   struct tx_info tx ;
   struct rx_info rx ;
   u32 mib_counter[32U] ;
   struct velocity_opt options ;
   u32 int_mask ;
   u32 flags ;
   u32 mii_status ;
   u32 phy_id ;
   int multicast_limit ;
   u8 vCAMmask[8U] ;
   u8 mCAMmask[8U] ;
   spinlock_t lock ;
   int wol_opts ;
   u8 wol_passwd[6U] ;
   struct velocity_context context ;
   u32 ticks ;
   u8 rev_id ;
   struct napi_struct napi ;
};

#line 1579 
enum velocity_bus_type {
    BUS_PCI = 0,
    BUS_PLATFORM = 1
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_14 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_16 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_platform_instance_12 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};

#line 36  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_15 {
   struct net_device *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

void *__builtin_memcpy(void *, void const *, unsigned long);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/fvtp/.tmp_via-velocity.c"
void ldv_inline_asm(void);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_next_bit(unsigned long const *, unsigned long, unsigned long);


#line 42 
unsigned long find_first_bit(unsigned long const *, unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 60 
void *memmove(void *, void const *, size_t);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 31 
void _raw_spin_lock_irq(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 43 
void _raw_spin_unlock_irq(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_79(spinlock_t *lock);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_irq(spinlock_t *lock)
{
  
#line 346 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 347 
  return;
}


#line 366 
static void ldv_spin_lock_irq_73(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_irq_75(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_irq_87(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_irq_103(spinlock_t *lock);


#line 379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 381 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 382 
  return;
}


#line 423 
static void ldv_spin_unlock_80(spinlock_t *lock);


#line 427 
static void ldv_spin_unlock_81(spinlock_t *lock);


#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irq(spinlock_t *lock)
{
  
#line 459 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 460 
  return;
}


#line 473 
static void ldv_spin_unlock_irq_74(spinlock_t *lock);


#line 477 
static void ldv_spin_unlock_irq_76(spinlock_t *lock);


#line 481 
static void ldv_spin_unlock_irq_88(spinlock_t *lock);


#line 485 
static void ldv_spin_unlock_irq_104(spinlock_t *lock);


#line 486  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 488 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 489 
  return;
}


#line 518 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 522 
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags);


#line 526 
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags);


#line 534 
static void ldv_spin_unlock_irqrestore_98(spinlock_t *lock, unsigned long flags);


#line 538 
static void ldv_spin_unlock_irqrestore_100(spinlock_t *lock, unsigned long flags);


#line 542 
static void ldv_spin_unlock_irqrestore_102(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_97(spinlock_t *ldv_func_arg1);


#line 90 
static void ldv___ldv_spin_lock_99(spinlock_t *ldv_func_arg1);


#line 94 
static void ldv___ldv_spin_lock_101(spinlock_t *ldv_func_arg1);


#line 102 
void ldv_spin_model_lock(char *);


#line 103 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  
#line 270 
  __preempt_count_add(1);
  
#line 271 
  ldv_inline_asm();
  
#line 272 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  
#line 275 
  ldv_inline_asm();
  
#line 275 
  __preempt_count_sub(1);
  
#line 276 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 463 
int rcu_read_lock_held(void);


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  __rcu_read_lock();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  __rcu_read_unlock();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ioport.h"
__inline static resource_size_t resource_size(struct resource const *res)
{
  resource_size_t __retres;
  
#line 166 
  __retres = (res->end - res->start) + 1ULL;
  
#line 166 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char readb(void const volatile *addr)
{
  unsigned char ret;
  
#line 57 
  ldv_inline_asm();
  
#line 56 
  return ret;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned short readw(void const volatile *addr)
{
  unsigned short ret;
  
#line 58 
  ldv_inline_asm();
  
#line 57 
  return ret;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeb(unsigned char val, void volatile *addr)
{
  
#line 66 
  ldv_inline_asm();
  
#line 67 
  return;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writew(unsigned short val, void volatile *addr)
{
  
#line 67 
  ldv_inline_asm();
  
#line 68 
  return;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 181 
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1062 
char const *dev_driver_string(struct device const *);


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1087 
void dev_notice(struct device const *, char const * , ...);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1044 
int __pci_enable_wake(struct pci_dev *, pci_power_t, bool, bool);


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_wake(struct pci_dev *dev, pci_power_t state, bool enable)
{
  int tmp;
  
#line 1056 
  tmp = __pci_enable_wake(dev,state,(_Bool)0,(_Bool)((bool)((int)enable) != 0));
  
#line 1056 
  return tmp;
}


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_105(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_107(struct pci_driver *ldv_func_arg1);


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 862 
int skb_pad(struct sk_buff *, int);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1719 
unsigned char *__pskb_pull_tail(struct sk_buff *, int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_padto(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  int tmp;
  
#line 2485 
  unsigned int size = skb->len;
  
#line 2486 
  if ((long)(size >= len) != 0L) {
    
#line 2487 
    __retres = 0;
    
#line 2487 
    goto return_label;
  }
  else ;
  
#line 2488 
  tmp = skb_pad(skb,(int)(len - size));
  
#line 2488 
  __retres = tmp;
  return_label: 
#line 2488 
                return __retres;
}


#line 2545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_linearize(struct sk_buff *skb)
{
  int tmp_0;
  unsigned char *tmp;
  
#line 2547 
  tmp = __pskb_pull_tail(skb,(int)skb->data_len);
  
#line 2547 
  if (tmp != (unsigned char *)0U) 
#line 2547 
                                  tmp_0 = 0; else 
#line 2547 
                                                  tmp_0 = -12;
  
#line 2547 
  return tmp_0;
}


#line 2789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data(struct sk_buff const *skb, void *to, unsigned int const len)
{
  
#line 2793 
  memcpy(to,(void const *)skb->data,(unsigned long)len);
  
#line 2794 
  return;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_82(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_89(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file_net.h"
extern struct net init_net;


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
__inline static struct net *read_pnet(possible_net_t const *pnet)
{
  struct net *__retres;
  
#line 253 
  __retres = pnet->net;
  
#line 253 
  return __retres;
}


#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
void const *of_get_property(struct device_node const *, char const *, int *);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  struct mii_ioctl_data *__retres;
  
#line 47 
  __retres = (struct mii_ioctl_data *)(& rq->ifr_ifru);
  
#line 47 
  return __retres;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct net *dev_net(struct net_device const *dev)
{
  struct net *tmp;
  
#line 1856 
  tmp = read_pnet(& dev->nd_net);
  
#line 1856 
  return tmp;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2205 
static void ldv_free_netdev_94(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_96(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3355 
static int ldv_register_netdev_93(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_95(struct net_device *ldv_func_arg1);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 45 
int eth_mac_addr(struct net_device *, void *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_92(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_address.h"
int of_address_to_resource(struct device_node *, int, struct resource *);


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
static int ldv___platform_driver_register_106(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2);


#line 202 
static void ldv_platform_driver_unregister_108(struct platform_driver *ldv_func_arg1);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_device.h"
struct of_device_id const *of_match_device(struct of_device_id const *, struct device const *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_irq.h"
unsigned int irq_of_parse_and_map(struct device_node *, int);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
int register_inetaddr_notifier(struct notifier_block *);


#line 154 
int unregister_inetaddr_notifier(struct notifier_block *);


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
__inline static struct in_device *__in_dev_get_rcu(struct net_device const *dev)
{
  struct in_device *tmp_3;
  {
    struct in_device *tmp_0;
    {
      struct in_device *tmp;
      {
        union __anonunion___u_331 __u;
        
#line 205 
        __read_once_size((void const volatile *)(& dev->ip_ptr),(void *)(& __u.__c),8);
        
#line 205 
        tmp = __u.__val;
      }
      
#line 205 
      struct in_device * const _________p1 = tmp;
      
#line 205 
      tmp_0 = _________p1;
    }
    
#line 205 
    struct in_device *________p1 = tmp_0;
    {
      bool __warned;
      int tmp_1;
      
#line 205 
      tmp_1 = debug_lockdep_rcu_enabled();
      
#line 205 
      if (tmp_1 != 0) {
        
#line 205 
        if (! __warned) {
          int tmp_2;
          
#line 205 
          tmp_2 = rcu_read_lock_held();
          
#line 205 
          if (tmp_2 == 0) {
            
#line 205 
            __warned = (_Bool)1;
            
#line 205 
            lockdep_rcu_suspicious("include/linux/inetdevice.h",205,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 205 
    tmp_3 = ________p1;
  }
  
#line 205 
  return tmp_3;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 8  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc-ccitt.h"
u16 crc_ccitt(u16, u8 const *, size_t);


#line 14 
extern u8 const byte_rev_table[256U];


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc-ccitt.h"
__inline static u8 __bitrev8(u8 byte)
{
  u8 __retres;
  
#line 17 
  __retres = byte_rev_table[(int)byte];
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u16 __bitrev16(u16 x)
{
  u16 __retres;
  u8 tmp;
  u8 tmp_0;
  
#line 22 
  tmp = __bitrev8((unsigned char)((int)((unsigned char)x)));
  
#line 22 
  tmp_0 = __bitrev8((unsigned char)((int)((unsigned char)((int)x >> 8))));
  
#line 22 
  __retres = (unsigned short)(((int)tmp << 8) | (int)tmp_0);
  
#line 22 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u32 __bitrev32(u32 x)
{
  u32 __retres;
  u16 tmp;
  u16 tmp_0;
  
#line 27 
  tmp = __bitrev16((unsigned short)((int)((unsigned short)x)));
  
#line 27 
  tmp_0 = __bitrev16((unsigned short)((int)((unsigned short)(x >> 16))));
  
#line 27 
  __retres = (unsigned int)(((int)tmp << 16) | (int)tmp_0);
  
#line 27 
  return __retres;
}


#line 1189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
__inline static void mac_eeprom_reload(struct mac_regs *regs)
{
  unsigned char tmp;
  int tmp_0;
  unsigned char tmp_1;
  
#line 1190 
  int i = 0;
  
#line 1192 
  ;
  
#line 1192 
  tmp = readb((void const volatile *)(& regs->EECSR));
  
#line 1192 
  writeb((unsigned char)((int)((unsigned int)tmp | 32U)),(void volatile *)(& regs->EECSR));
  ldv_52569: 
#line 1193 
  ;
  
#line 1194 
  __const_udelay(42950UL);
  
#line 1195 
  tmp_0 = i;
  
#line 1195 
  i += 1;
  
#line 1195 
  ;
  
#line 1195 
  if (tmp_0 > 4096) 
#line 1196 
                    goto ldv_52568; else ;
  
#line 1197 
  tmp_1 = readb((void const volatile *)(& regs->EECSR));
  
#line 1197 
  if (((int)tmp_1 & 32) != 0) 
#line 1199 
                              goto ldv_52569; else 
#line 1202 
                                                   goto ldv_52568;
  ldv_52568: 
#line 1203 
  ;
  
#line 1204 
  return;
}


#line 1512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
__inline static int velocity_get_ip(struct velocity_info *vptr)
{
  struct in_device *in_dev;
  struct in_ifaddr *ifa;
  
#line 1516 
  int res = -2;
  
#line 1518 
  rcu_read_lock();
  
#line 1519 
  in_dev = __in_dev_get_rcu((struct net_device const *)vptr->netdev);
  
#line 1520 
  if (in_dev != (struct in_device *)0) {
    
#line 1521 
    ifa = in_dev->ifa_list;
    
#line 1522 
    if (ifa != (struct in_ifaddr *)0) {
      
#line 1523 
      memcpy((void *)(& vptr->ip_addr),(void const *)(& ifa->ifa_address),4UL);
      
#line 1524 
      res = 0;
    }
    else ;
  }
  else ;
  
#line 1527 
  rcu_read_unlock();
  
#line 1528 
  return res;
}


#line 1542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
__inline static void velocity_update_hw_mibs(struct velocity_info *vptr)
{
  u32 tmp;
  int i;
  unsigned char tmp_0;
  unsigned char tmp_1;
  unsigned char tmp_2;
  unsigned int tmp_3;
  
#line 1546 
  ;
  
#line 1546 
  tmp_0 = readb((void const volatile *)(& (vptr->mac_regs)->MIBCR));
  
#line 1546 
  writeb((unsigned char)((int)((unsigned int)tmp_0 | 4U)),(void volatile *)(& (vptr->mac_regs)->MIBCR));
  
#line 1548 
  goto ldv_52695;
  ldv_52694: 
#line 1549 
  ;
  ldv_52695: 
#line 1550 
  ;
  
#line 1548 
  tmp_1 = readb((void const volatile *)(& (vptr->mac_regs)->MIBCR));
  
#line 1548 
  if (((int)tmp_1 & 4) != 0) 
#line 1550 
                             goto ldv_52694; else 
#line 1553 
                                                  goto ldv_52696;
  ldv_52696: 
#line 1554 
  ;
  
#line 1550 
  ;
  
#line 1550 
  tmp_2 = readb((void const volatile *)(& (vptr->mac_regs)->MIBCR));
  
#line 1550 
  writeb((unsigned char)((int)((unsigned int)tmp_2 | 2U)),(void volatile *)(& (vptr->mac_regs)->MIBCR));
  
#line 1551 
  i = 0;
  
#line 1551 
  goto ldv_52698;
  ldv_52697: 
#line 1552 
  ;
  
#line 1552 
  tmp_3 = readl((void const volatile *)(& (vptr->mac_regs)->MIBData));
  
#line 1552 
  tmp = tmp_3 & 16777215U;
  
#line 1553 
  vptr->mib_counter[i] += tmp;
  
#line 1551 
  i += 1;
  ldv_52698: 
#line 1552 
  ;
  
#line 1551 
  if (i <= 31) 
#line 1553 
               goto ldv_52697; else 
#line 1556 
                                    goto ldv_52699;
  ldv_52699: 
#line 1557 
  ;
  
#line 1558 
  return;
}


#line 1564  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.h"
__inline static void init_flow_control_register(struct velocity_info *vptr)
{
  
#line 1566 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 1570 
  writel(9109504U,(void volatile *)(& regs->CR0Set));
  
#line 1571 
  writel(7602176U,(void volatile *)(& regs->CR0Clr));
  
#line 1574 
  writew((unsigned short)65535,(void volatile *)(& regs->tx_pause_timer));
  
#line 1577 
  writew((unsigned short)((int)((unsigned short)vptr->options.numrx)),(void volatile *)(& regs->RBRDU));
  
#line 1578 
  return;
}


#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_nics;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int msglevel = 2;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_set_power_state(struct velocity_info *vptr, char state)
{
  
#line 97 
  void *addr = (void *)vptr->mac_regs;
  
#line 99 
  if (vptr->pdev != (struct pci_dev *)0) 
#line 100 
                                         pci_set_power_state(vptr->pdev,(int)state); else 
                                                                    
#line 102 
                                                                    writeb((unsigned char)((int)((unsigned char)state)),(void volatile *)(addr + 340U));
  
#line 103 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void mac_get_cam_mask(struct mac_regs *regs, u8 *mask)
{
  int i;
  unsigned char tmp;
  u8 *tmp_0;
  unsigned char tmp_1;
  
#line 118 
  ;
  
#line 118 
  tmp = readb((void const volatile *)(& regs->CAMCR));
  
#line 118 
  writeb((unsigned char)((int)((unsigned char)(((int)tmp & 63) | 64))),(void volatile *)(& regs->CAMCR));
  
#line 120 
  writeb((unsigned char)0,(void volatile *)(& regs->CAMADDR));
  
#line 123 
  i = 0;
  
#line 123 
  goto ldv_52720;
  ldv_52719: 
#line 124 
  ;
  
#line 124 
  tmp_0 = mask;
  
#line 124 
  mask += 1;
  
#line 124 
  *tmp_0 = readb((void const volatile *)(& regs->MARCAM[i]));
  
#line 123 
  i += 1;
  ldv_52720: 
#line 124 
  ;
  
#line 123 
  if (i <= 7) 
#line 125 
              goto ldv_52719; else 
#line 128 
                                   goto ldv_52721;
  ldv_52721: 
#line 129 
  ;
  
#line 127 
  writeb((unsigned char)0,(void volatile *)(& regs->CAMADDR));
  
#line 130 
  ;
  
#line 130 
  tmp_1 = readb((void const volatile *)(& regs->CAMCR));
  
#line 130 
  writeb((unsigned char)((int)tmp_1 & 63),(void volatile *)(& regs->CAMCR));
  
#line 131 
  return;
}


#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void mac_set_cam_mask(struct mac_regs *regs, u8 *mask)
{
  int i;
  unsigned char tmp;
  u8 *tmp_0;
  unsigned char tmp_1;
  
#line 144 
  ;
  
#line 144 
  tmp = readb((void const volatile *)(& regs->CAMCR));
  
#line 144 
  writeb((unsigned char)((int)((unsigned char)(((int)tmp & 63) | 64))),(void volatile *)(& regs->CAMCR));
  
#line 146 
  writeb((unsigned char)128,(void volatile *)(& regs->CAMADDR));
  
#line 148 
  i = 0;
  
#line 148 
  goto ldv_52728;
  ldv_52727: 
#line 149 
  ;
  
#line 149 
  ;
  
#line 149 
  tmp_0 = mask;
  
#line 149 
  mask += 1;
  
#line 149 
  ;
  
#line 149 
  writeb((unsigned char)((int)*tmp_0),(void volatile *)(& regs->MARCAM[i]));
  
#line 148 
  i += 1;
  ldv_52728: 
#line 149 
  ;
  
#line 148 
  if (i <= 7) 
#line 150 
              goto ldv_52727; else 
#line 153 
                                   goto ldv_52729;
  ldv_52729: 
#line 154 
  ;
  
#line 152 
  writeb((unsigned char)0,(void volatile *)(& regs->CAMADDR));
  
#line 155 
  ;
  
#line 155 
  tmp_1 = readb((void const volatile *)(& regs->CAMCR));
  
#line 155 
  writeb((unsigned char)((int)tmp_1 & 63),(void volatile *)(& regs->CAMCR));
  
#line 156 
  return;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void mac_set_vlan_cam_mask(struct mac_regs *regs, u8 *mask)
{
  int i;
  unsigned char tmp;
  u8 *tmp_0;
  unsigned char tmp_1;
  
#line 162 
  ;
  
#line 162 
  tmp = readb((void const volatile *)(& regs->CAMCR));
  
#line 162 
  writeb((unsigned char)((int)((unsigned char)(((int)tmp & 63) | 64))),(void volatile *)(& regs->CAMCR));
  
#line 164 
  writeb((unsigned char)192,(void volatile *)(& regs->CAMADDR));
  
#line 166 
  i = 0;
  
#line 166 
  goto ldv_52736;
  ldv_52735: 
#line 167 
  ;
  
#line 167 
  ;
  
#line 167 
  tmp_0 = mask;
  
#line 167 
  mask += 1;
  
#line 167 
  ;
  
#line 167 
  writeb((unsigned char)((int)*tmp_0),(void volatile *)(& regs->MARCAM[i]));
  
#line 166 
  i += 1;
  ldv_52736: 
#line 167 
  ;
  
#line 166 
  if (i <= 7) 
#line 168 
              goto ldv_52735; else 
#line 171 
                                   goto ldv_52737;
  ldv_52737: 
#line 172 
  ;
  
#line 170 
  writeb((unsigned char)0,(void volatile *)(& regs->CAMADDR));
  
#line 173 
  ;
  
#line 173 
  tmp_1 = readb((void const volatile *)(& regs->CAMCR));
  
#line 173 
  writeb((unsigned char)((int)tmp_1 & 63),(void volatile *)(& regs->CAMCR));
  
#line 174 
  return;
}


#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void mac_set_cam(struct mac_regs *regs, int idx, u8 const *addr)
{
  int i;
  unsigned char tmp;
  u8 const *tmp_0;
  unsigned char tmp_1;
  unsigned char tmp_2;
  
#line 189 
  ;
  
#line 189 
  tmp = readb((void const volatile *)(& regs->CAMCR));
  
#line 189 
  writeb((unsigned char)((int)((unsigned char)(((int)tmp & 63) | -128))),(void volatile *)(& regs->CAMCR));
  
#line 191 
  idx &= 63;
  
#line 193 
  writeb((unsigned char)((int)((unsigned char)(idx | -128))),(void volatile *)(& regs->CAMADDR));
  
#line 195 
  i = 0;
  
#line 195 
  goto ldv_52745;
  ldv_52744: 
#line 196 
  ;
  
#line 196 
  ;
  
#line 196 
  tmp_0 = addr;
  
#line 196 
  addr += 1;
  
#line 196 
  ;
  
#line 196 
  writeb((unsigned char)((int)*tmp_0),(void volatile *)(& regs->MARCAM[i]));
  
#line 195 
  i += 1;
  ldv_52745: 
#line 196 
  ;
  
#line 195 
  if (i <= 5) 
#line 197 
              goto ldv_52744; else 
#line 200 
                                   goto ldv_52746;
  ldv_52746: 
#line 201 
  ;
  
#line 198 
  ;
  
#line 198 
  tmp_1 = readb((void const volatile *)(& regs->CAMCR));
  
#line 198 
  writeb((unsigned char)((int)((unsigned int)tmp_1 | 4U)),(void volatile *)(& regs->CAMCR));
  
#line 200 
  __const_udelay(42950UL);
  
#line 202 
  writeb((unsigned char)0,(void volatile *)(& regs->CAMADDR));
  
#line 205 
  ;
  
#line 205 
  tmp_2 = readb((void const volatile *)(& regs->CAMCR));
  
#line 205 
  writeb((unsigned char)((int)tmp_2 & 63),(void volatile *)(& regs->CAMCR));
  
#line 206 
  return;
}


#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void mac_set_vlan_cam(struct mac_regs *regs, int idx, u8 const *addr)
{
  unsigned char tmp;
  unsigned char tmp_0;
  unsigned char tmp_1;
  
#line 213 
  ;
  
#line 213 
  tmp = readb((void const volatile *)(& regs->CAMCR));
  
#line 213 
  writeb((unsigned char)((int)((unsigned char)(((int)tmp & 63) | -128))),(void volatile *)(& regs->CAMCR));
  
#line 215 
  idx &= 63;
  
#line 217 
  writeb((unsigned char)((int)((unsigned char)(idx | -64))),(void volatile *)(& regs->CAMADDR));
  
#line 218 
  writew((unsigned short)((int)*((u16 *)addr)),(void volatile *)(& regs->MARCAM[0]));
  
#line 220 
  ;
  
#line 220 
  tmp_0 = readb((void const volatile *)(& regs->CAMCR));
  
#line 220 
  writeb((unsigned char)((int)((unsigned int)tmp_0 | 4U)),(void volatile *)(& regs->CAMCR));
  
#line 222 
  __const_udelay(42950UL);
  
#line 224 
  writeb((unsigned char)0,(void volatile *)(& regs->CAMADDR));
  
#line 227 
  ;
  
#line 227 
  tmp_1 = readb((void const volatile *)(& regs->CAMCR));
  
#line 227 
  writeb((unsigned char)((int)tmp_1 & 63),(void volatile *)(& regs->CAMCR));
  
#line 228 
  return;
}


#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void mac_wol_reset(struct mac_regs *regs)
{
  unsigned char tmp;
  unsigned char tmp_0;
  unsigned char tmp_1;
  unsigned char tmp_2;
  
#line 243 
  ;
  
#line 243 
  tmp = readb((void const volatile *)(& regs->STICKHW));
  
#line 243 
  writeb((unsigned char)((int)tmp & 239),(void volatile *)(& regs->STICKHW));
  
#line 245 
  ;
  
#line 245 
  tmp_0 = readb((void const volatile *)(& regs->STICKHW));
  
#line 245 
  writeb((unsigned char)((int)tmp_0 & 252),(void volatile *)(& regs->STICKHW));
  
#line 247 
  ;
  
#line 247 
  tmp_1 = readb((void const volatile *)(& regs->CHIPGCR));
  
#line 247 
  writeb((unsigned char)((int)tmp_1 & 127),(void volatile *)(& regs->CHIPGCR));
  
#line 248 
  ;
  
#line 248 
  tmp_2 = readb((void const volatile *)(& regs->CHIPGCR));
  
#line 248 
  writeb((unsigned char)((int)tmp_2 & 239),(void volatile *)(& regs->CHIPGCR));
  
#line 250 
  writeb((unsigned char)128,(void volatile *)(& regs->WOLCFGClr));
  
#line 252 
  writew((unsigned short)65535,(void volatile *)(& regs->WOLCRClr));
  
#line 254 
  writew((unsigned short)65535,(void volatile *)(& regs->WOLSRClr));
  
#line 255 
  return;
}


#line 257 
static struct ethtool_ops const velocity_ethtool_ops;


#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int RxDescriptors[8U] = {-1, -1, -1, -1, -1, -1, -1, -1};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int TxDescriptors[8U] = {-1, -1, -1, -1, -1, -1, -1, -1};

#line 291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int rx_thresh[8U] = {-1, -1, -1, -1, -1, -1, -1, -1};

#line 307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int DMA_length[8U] = {-1, -1, -1, -1, -1, -1, -1, -1};

#line 316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int IP_byte_align[8U] = {-1, -1, -1, -1, -1, -1, -1, -1};

#line 329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int flow_control[8U] = {-1, -1, -1, -1, -1, -1, -1, -1};

#line 346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int speed_duplex[8U] = {-1, -1, -1, -1, -1, -1, -1, -1};

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int ValPktLen[8U] = {-1, -1, -1, -1, -1, -1, -1, -1};

#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int wol_opts[8U] = {-1, -1, -1, -1, -1, -1, -1, -1};

#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int rx_copybreak = 200;

#line 374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct velocity_info_tbl chip_info_table[2U] = {{.chip_id = CHIP_TYPE_VT6110, .name = "VIA Networking Velocity Family Gigabit Ethernet Adapter", .txqueue = 1, .flags = 16777215U}, {.chip_id = 0, .name = (char const *)0, .txqueue = 0, .flags = 0U}};

#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct pci_device_id const velocity_pci_id_table[2U] = {{.vendor = 4358U, .device = 12569U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
struct pci_device_id const __mod_pci__velocity_pci_id_table_device_table[2U];

#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct of_device_id const velocity_of_ids[2U] = {{.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'v', (char)'i', (char)'a', (char)',', (char)'v', (char)'e', (char)'l', (char)'o', (char)'c', (char)'i', (char)'t', (char)'y', (char)'-', (char)'v', (char)'t', (char)'6', (char)'1', (char)'1', (char)'0', (char)'\000'}, .data = (void const *)(&(chip_info_table[0]))}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .data = (void const *)0}};

#line 399  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
struct of_device_id const __mod_of__velocity_of_ids_device_table[2U];

#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static char const *get_chip_name(enum chip_type chip_id)
{
  char const *__retres;
  int i;
  
#line 411 
  i = 0;
  
#line 411 
  goto ldv_53066;
  ldv_53065: 
#line 412 
  ;
  
#line 412 
  if (chip_info_table[i].chip_id == chip_id) 
#line 413 
                                             goto ldv_53064; else ;
  
#line 411 
  i += 1;
  ldv_53066: 
#line 412 
  ;
  
#line 411 
  if (chip_info_table[i].name != (char const *)0) 
#line 413 
                                                  goto ldv_53065; else 
                                                                    
#line 416 
                                                                    goto ldv_53064;
  ldv_53064: 
#line 417 
  ;
  
#line 414 
  __retres = chip_info_table[i].name;
  
#line 414 
  return __retres;
}


#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_set_int_opt(int *opt, int val, int min, int max, int def, char *name, char const *devname)
{
  
#line 434 
  if (val == -1) 
#line 435 
                 *opt = def;
  else 
    
#line 436 
    if (val < min || val > max) {
      
#line 437 
      if (msglevel > 1) 
#line 437 
                        printk("\001",devname,name,min,max); else ;
      
#line 439 
      *opt = def;
    }
    else {
      
#line 441 
      if (msglevel > 1) 
#line 441 
                        printk("\001",devname,name,val); else ;
      
#line 443 
      *opt = val;
    }
  
#line 445 
  return;
}


#line 460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_set_bool_opt(u32 *opt, int val, int def, u32 flag, char *name, char const *devname)
{
  
#line 463 
  *opt &= ~ flag;
  
#line 464 
  if (val == -1) {
    u32 tmp;
    
#line 465 
    if (def != 0) 
#line 465 
                  tmp = flag; else 
#line 465 
                                   tmp = 0U;
    
#line 465 
    *opt |= tmp;
  }
  else 
    
#line 466 
    if ((unsigned int)val > 1U) {
      u32 tmp_0;
      
#line 467 
      printk("\001",devname,name);
      
#line 469 
      if (def != 0) 
#line 469 
                    tmp_0 = flag; else 
#line 469 
                                       tmp_0 = 0U;
      
#line 469 
      *opt |= tmp_0;
    }
    else {
      char *tmp_1;
      u32 tmp_2;
      
#line 471 
      if (val != 0) 
#line 471 
                    tmp_1 = (char *)"TRUE"; else 
#line 471 
                                                 tmp_1 = (char *)"FALSE";
      
#line 471 
      ;
      
#line 471 
      ;
      
#line 471 
      printk("\001",devname,name,tmp_1);
      
#line 473 
      if (val != 0) 
#line 473 
                    tmp_2 = flag; else 
#line 473 
                                       tmp_2 = 0U;
      
#line 473 
      *opt |= tmp_2;
    }
  
#line 475 
  return;
}


#line 486  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_get_options(struct velocity_opt *opts, int index, char const *devname)
{
  
#line 490 
  velocity_set_int_opt(& opts->rx_thresh,rx_thresh[index],0,3,0,(char *)"rx_thresh",devname);
  
#line 491 
  velocity_set_int_opt(& opts->DMA_length,DMA_length[index],0,7,6,(char *)"DMA_length",devname);
  
#line 492 
  velocity_set_int_opt(& opts->numrx,RxDescriptors[index],64,255,64,(char *)"RxDescriptors",devname);
  
#line 493 
  velocity_set_int_opt(& opts->numtx,TxDescriptors[index],16,256,64,(char *)"TxDescriptors",devname);
  
#line 495 
  velocity_set_int_opt(& opts->flow_cntl,flow_control[index],1,5,1,(char *)"flow_control",devname);
  
#line 496 
  velocity_set_bool_opt(& opts->flags,IP_byte_align[index],0,8U,(char *)"IP_byte_align",devname);
  
#line 497 
  velocity_set_bool_opt(& opts->flags,ValPktLen[index],0,16U,(char *)"ValPktLen",devname);
  
#line 498 
  velocity_set_int_opt((int *)(& opts->spd_dpx),speed_duplex[index],0,5,0,(char *)"Media link mode",devname);
  
#line 499 
  velocity_set_int_opt(& opts->wol_opts,wol_opts[index],0,7,0,(char *)"Wake On Lan options",devname);
  
#line 500 
  opts->numrx &= -4;
  
#line 501 
  return;
}


#line 510  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_init_cam_filter(struct velocity_info *vptr)
{
  unsigned int vid;
  unsigned short tmp;
  unsigned short tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 512 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 513 
  unsigned int i = 0U;
  
#line 516 
  ;
  
#line 516 
  tmp = readw((void const volatile *)(& regs->MCFG));
  
#line 516 
  writew((unsigned short)((int)((unsigned short)(((int)tmp & -7) | 4))),(void volatile *)(& regs->MCFG));
  
#line 517 
  ;
  
#line 517 
  tmp_0 = readw((void const volatile *)(& regs->MCFG));
  
#line 517 
  writew((unsigned short)((int)((unsigned int)tmp_0 | 1U)),(void volatile *)(& regs->MCFG));
  
#line 520 
  memset((void *)(& vptr->vCAMmask),0,8UL);
  
#line 521 
  memset((void *)(& vptr->mCAMmask),0,8UL);
  
#line 522 
  mac_set_vlan_cam_mask(regs,(u8 *)(& vptr->vCAMmask));
  
#line 523 
  mac_set_cam_mask(regs,(u8 *)(& vptr->mCAMmask));
  
#line 526 
  tmp_1 = find_first_bit((unsigned long const *)(& vptr->active_vlans),4096UL);
  
#line 526 
  vid = (unsigned int)tmp_1;
  
#line 526 
  goto ldv_53097;
  ldv_53096: 
#line 527 
  ;
  
#line 527 
  mac_set_vlan_cam(regs,(int)i,(u8 const *)(& vid));
  
#line 528 
  vptr->vCAMmask[i / 8U] = (unsigned char)((int)vptr->vCAMmask[i / 8U] | (1 << (i & 7U)));
  
#line 529 
  i += 1U;
  
#line 529 
  if (i > 63U) 
#line 530 
               goto ldv_53095; else ;
  
#line 526 
  tmp_2 = find_next_bit((unsigned long const *)(& vptr->active_vlans),4096UL,(unsigned long)(vid + 1U));
  
#line 526 
  vid = (unsigned int)tmp_2;
  ldv_53097: 
#line 527 
  ;
  
#line 526 
  if (vid <= 4095U) 
#line 528 
                    goto ldv_53096; else 
#line 531 
                                         goto ldv_53095;
  ldv_53095: 
#line 532 
  ;
  
#line 532 
  mac_set_vlan_cam_mask(regs,(u8 *)(& vptr->vCAMmask));
  
#line 533 
  return;
}


#line 535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_vlan_rx_add_vid(struct net_device *dev, __be16 proto, u16 vid)
{
  int __retres;
  
#line 538 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 540 
  ldv_spin_lock_irq_73(& vptr->lock);
  
#line 541 
  set_bit((long)vid,(unsigned long volatile *)(& vptr->active_vlans));
  
#line 542 
  velocity_init_cam_filter(vptr);
  
#line 543 
  ldv_spin_unlock_irq_74(& vptr->lock);
  
#line 544 
  __retres = 0;
  
#line 544 
  return __retres;
}


#line 547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_vlan_rx_kill_vid(struct net_device *dev, __be16 proto, u16 vid)
{
  int __retres;
  
#line 550 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 552 
  ldv_spin_lock_irq_75(& vptr->lock);
  
#line 553 
  set_bit((long)vid,(unsigned long volatile *)(& vptr->active_vlans));
  
#line 554 
  velocity_init_cam_filter(vptr);
  
#line 555 
  ldv_spin_unlock_irq_76(& vptr->lock);
  
#line 556 
  __retres = 0;
  
#line 556 
  return __retres;
}


#line 559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_init_rx_ring_indexes(struct velocity_info *vptr)
{
  u32 tmp;
  
#line 561 
  vptr->rx.curr = 0;
  
#line 561 
  tmp = 0U;
  
#line 561 
  vptr->rx.filled = tmp;
  
#line 561 
  vptr->rx.dirty = (int)tmp;
  
#line 562 
  return;
}


#line 571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_rx_reset(struct velocity_info *vptr)
{
  int i;
  
#line 574 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 577 
  velocity_init_rx_ring_indexes(vptr);
  
#line 582 
  i = 0;
  
#line 582 
  goto ldv_53119;
  ldv_53118: 
#line 583 
  ;
  
#line 583 
  (vptr->rx.ring + i)->rdesc0.len = (unsigned short)((unsigned int)(vptr->rx.ring + i)->rdesc0.len | 32768U);
  
#line 582 
  i += 1;
  ldv_53119: 
#line 583 
  ;
  
#line 582 
  if (vptr->options.numrx > i) 
#line 584 
                               goto ldv_53118; else 
#line 587 
                                                    goto ldv_53120;
  ldv_53120: 
#line 588 
  ;
  
#line 585 
  writew((unsigned short)((int)((unsigned short)vptr->options.numrx)),(void volatile *)(& regs->RBRDU));
  
#line 586 
  writel((unsigned int)vptr->rx.pool_dma,(void volatile *)(& regs->RDBaseLo));
  
#line 587 
  writew((unsigned short)0,(void volatile *)(& regs->RDIdx));
  
#line 588 
  writew((unsigned short)((int)((unsigned int)((unsigned short)vptr->options.numrx) + 65535U)),(void volatile *)(& regs->RDCSize));
  
#line 589 
  return;
}


#line 599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static u32 velocity_get_opt_media_mode(struct velocity_info *vptr)
{
  
#line 601 
  u32 status = 0U;
  
#line 603 
  switch ((unsigned int)vptr->options.spd_dpx) {
    case (unsigned int)0: 
#line 604 
    ;
    
#line 605 
    status = 32U;
    
#line 606 
    goto ldv_53126;
    case (unsigned int)2: 
#line 607 
    ;
    
#line 608 
    status = 20U;
    
#line 609 
    goto ldv_53126;
    case (unsigned int)4: 
#line 610 
    ;
    
#line 611 
    status = 18U;
    
#line 612 
    goto ldv_53126;
    case (unsigned int)1: 
#line 613 
    ;
    
#line 614 
    status = 4U;
    
#line 615 
    goto ldv_53126;
    case (unsigned int)3: 
#line 616 
    ;
    
#line 617 
    status = 2U;
    
#line 618 
    goto ldv_53126;
    case (unsigned int)5: 
#line 619 
    ;
    
#line 620 
    status = 24U;
    
#line 621 
    goto ldv_53126;
  }
  ldv_53126: 
#line 623 
  ;
  
#line 623 
  vptr->mii_status = status;
  
#line 624 
  return status;
}


#line 633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void safe_disable_mii_autopoll(struct mac_regs *regs)
{
  u16 ww;
  unsigned char tmp;
  
#line 638 
  writeb((unsigned char)0,(void volatile *)(& regs->MIICR));
  
#line 639 
  ww = (unsigned short)0U;
  
#line 639 
  goto ldv_53138;
  ldv_53137: 
#line 640 
  ;
  
#line 640 
  __const_udelay(4295UL);
  
#line 641 
  tmp = readb((void const volatile *)(& regs->MIISR));
  
#line 641 
  if ((int)tmp < 0) 
#line 642 
                    goto ldv_53136; else ;
  
#line 639 
  ww = (u16)((int)ww + 1);
  ldv_53138: 
#line 640 
  ;
  
#line 639 
  if ((unsigned int)ww <= 4094U) 
#line 641 
                                 goto ldv_53137; else 
#line 644 
                                                      goto ldv_53136;
  ldv_53136: 
#line 645 
  ;
  
#line 646 
  return;
}


#line 653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void enable_mii_autopoll(struct mac_regs *regs)
{
  int ii;
  unsigned char tmp;
  unsigned char tmp_0;
  
#line 657 
  writeb((unsigned char)0,(void volatile *)(& regs->MIICR));
  
#line 658 
  writeb((unsigned char)128,(void volatile *)(& regs->MIIADR));
  
#line 660 
  ii = 0;
  
#line 660 
  goto ldv_53145;
  ldv_53144: 
#line 661 
  ;
  
#line 661 
  __const_udelay(4295UL);
  
#line 662 
  tmp = readb((void const volatile *)(& regs->MIISR));
  
#line 662 
  if ((int)tmp < 0) 
#line 663 
                    goto ldv_53143; else ;
  
#line 660 
  ii += 1;
  ldv_53145: 
#line 661 
  ;
  
#line 660 
  if ((unsigned int)ii <= 4094U) 
#line 662 
                                 goto ldv_53144; else 
#line 665 
                                                      goto ldv_53143;
  ldv_53143: 
#line 666 
  ;
  
#line 666 
  writeb((unsigned char)128,(void volatile *)(& regs->MIICR));
  
#line 668 
  ii = 0;
  
#line 668 
  goto ldv_53148;
  ldv_53147: 
#line 669 
  ;
  
#line 669 
  __const_udelay(4295UL);
  
#line 670 
  tmp_0 = readb((void const volatile *)(& regs->MIISR));
  
#line 670 
  if ((int)tmp_0 >= 0) 
#line 671 
                       goto ldv_53146; else ;
  
#line 668 
  ii += 1;
  ldv_53148: 
#line 669 
  ;
  
#line 668 
  if ((unsigned int)ii <= 4094U) 
#line 670 
                                 goto ldv_53147; else 
#line 673 
                                                      goto ldv_53146;
  ldv_53146: 
#line 674 
  ;
  
#line 675 
  return;
}


#line 685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_mii_read(struct mac_regs *regs, u8 index, u16 *data)
{
  int __retres;
  u16 ww;
  unsigned char tmp;
  unsigned char tmp_0;
  
#line 692 
  safe_disable_mii_autopoll(regs);
  
#line 694 
  writeb((unsigned char)((int)index),(void volatile *)(& regs->MIIADR));
  
#line 696 
  ;
  
#line 696 
  tmp = readb((void const volatile *)(& regs->MIICR));
  
#line 696 
  writeb((unsigned char)((int)((unsigned int)tmp | 64U)),(void volatile *)(& regs->MIICR));
  
#line 698 
  ww = (unsigned short)0U;
  
#line 698 
  goto ldv_53157;
  ldv_53156: 
#line 699 
  ;
  
#line 699 
  tmp_0 = readb((void const volatile *)(& regs->MIICR));
  
#line 699 
  if (((int)tmp_0 & 64) == 0) 
#line 700 
                              goto ldv_53155; else ;
  
#line 698 
  ww = (u16)((int)ww + 1);
  ldv_53157: 
#line 699 
  ;
  
#line 698 
  if ((unsigned int)ww <= 4094U) 
#line 700 
                                 goto ldv_53156; else 
#line 703 
                                                      goto ldv_53155;
  ldv_53155: 
#line 704 
  ;
  
#line 703 
  *data = readw((void const volatile *)(& regs->MIIDATA));
  
#line 705 
  enable_mii_autopoll(regs);
  
#line 706 
  if ((unsigned int)ww == 4095U) {
    
#line 707 
    __retres = -110;
    
#line 707 
    goto return_label;
  }
  else ;
  
#line 708 
  __retres = 0;
  return_label: 
#line 708 
                return __retres;
}


#line 718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static u32 mii_check_media_mode(struct mac_regs *regs)
{
  u16 ANAR;
  int tmp;
  int tmp_1;
  int tmp_3;
  
#line 720 
  u32 status = 0U;
  {
    u16 w;
    
#line 723 
    velocity_mii_read(regs,(unsigned char)1,& w);
    
#line 723 
    tmp = (int)w & 4;
  }
  
#line 723 
  if (tmp == 0) 
#line 724 
                status |= 1U; else ;
  {
    u16 w_1;
    
#line 726 
    velocity_mii_read(regs,(unsigned char)9,& w_1);
    
#line 726 
    tmp_1 = (int)w_1 & 512;
  }
  
#line 726 
  if (tmp_1 != 0) 
#line 727 
                  status |= 24U;
  else {
    int tmp_0;
    {
      u16 w_0;
      
#line 728 
      velocity_mii_read(regs,(unsigned char)9,& w_0);
      
#line 728 
      tmp_0 = (int)w_0 & 256;
    }
    
#line 728 
    if (tmp_0 != 0) 
#line 729 
                    status |= 8U;
    else {
      
#line 731 
      velocity_mii_read(regs,(unsigned char)4,& ANAR);
      
#line 732 
      if (((int)ANAR & 256) != 0) 
#line 733 
                                  status |= 20U;
      else 
        
#line 734 
        if (((int)ANAR & 128) != 0) 
#line 735 
                                    status |= 4U;
        else 
          
#line 736 
          if (((int)ANAR & 64) != 0) 
#line 737 
                                     status |= 18U; else 
#line 739 
                                                         status |= 2U;
    }
  }
  {
    u16 w_3;
    
#line 742 
    velocity_mii_read(regs,(unsigned char)0,& w_3);
    
#line 742 
    tmp_3 = (int)w_3 & 4096;
  }
  
#line 742 
  if (tmp_3 != 0) {
    
#line 743 
    velocity_mii_read(regs,(unsigned char)4,& ANAR);
    
#line 744 
    if (((int)ANAR & 480) == 480) {
      int tmp_2;
      {
        u16 w_2;
        
#line 746 
        velocity_mii_read(regs,(unsigned char)9,& w_2);
        
#line 746 
        tmp_2 = (int)w_2 & 768;
      }
      
#line 746 
      if (tmp_2 != 0) 
#line 747 
                      status |= 32U; else ;
    }
    else ;
  }
  else ;
  
#line 751 
  return status;
}


#line 763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_mii_write(struct mac_regs *regs, u8 mii_addr, u16 data)
{
  int __retres;
  u16 ww;
  unsigned char tmp;
  unsigned char tmp_0;
  
#line 770 
  safe_disable_mii_autopoll(regs);
  
#line 773 
  writeb((unsigned char)((int)mii_addr),(void volatile *)(& regs->MIIADR));
  
#line 775 
  writew((unsigned short)((int)data),(void volatile *)(& regs->MIIDATA));
  
#line 778 
  ;
  
#line 778 
  tmp = readb((void const volatile *)(& regs->MIICR));
  
#line 778 
  writeb((unsigned char)((int)((unsigned int)tmp | 32U)),(void volatile *)(& regs->MIICR));
  
#line 781 
  ww = (unsigned short)0U;
  
#line 781 
  goto ldv_53181;
  ldv_53180: 
#line 782 
  ;
  
#line 782 
  __const_udelay(21475UL);
  
#line 783 
  tmp_0 = readb((void const volatile *)(& regs->MIICR));
  
#line 783 
  if (((int)tmp_0 & 32) == 0) 
#line 784 
                              goto ldv_53179; else ;
  
#line 781 
  ww = (u16)((int)ww + 1);
  ldv_53181: 
#line 782 
  ;
  
#line 781 
  if ((unsigned int)ww <= 4094U) 
#line 783 
                                 goto ldv_53180; else 
#line 786 
                                                      goto ldv_53179;
  ldv_53179: 
#line 787 
  ;
  
#line 786 
  enable_mii_autopoll(regs);
  
#line 788 
  if ((unsigned int)ww == 4095U) {
    
#line 789 
    __retres = -110;
    
#line 789 
    goto return_label;
  }
  else ;
  
#line 790 
  __retres = 0;
  return_label: 
#line 790 
                return __retres;
}


#line 800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void set_mii_flow_control(struct velocity_info *vptr)
{
  
#line 803 
  switch (vptr->options.flow_cntl) {
    case 2: 
#line 804 
    ;
    {
      u16 w;
      
#line 805 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w);
      
#line 805 
      w = (unsigned short)((unsigned int)w & 64511U);
      
#line 805 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w));
    }
    {
      u16 w_0;
      
#line 806 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_0);
      
#line 806 
      w_0 = (unsigned short)((unsigned int)w_0 | 2048U);
      
#line 806 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_0));
    }
    
#line 807 
    goto ldv_53188;
    case 3: 
#line 809 
    ;
    {
      u16 w_1;
      
#line 810 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_1);
      
#line 810 
      w_1 = (unsigned short)((unsigned int)w_1 | 1024U);
      
#line 810 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_1));
    }
    {
      u16 w_2;
      
#line 811 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_2);
      
#line 811 
      w_2 = (unsigned short)((unsigned int)w_2 | 2048U);
      
#line 811 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_2));
    }
    
#line 812 
    goto ldv_53188;
    case 4: 
#line 814 
    ;
    {
      u16 w_3;
      
#line 815 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_3);
      
#line 815 
      w_3 = (unsigned short)((unsigned int)w_3 | 1024U);
      
#line 815 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_3));
    }
    {
      u16 w_4;
      
#line 816 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_4);
      
#line 816 
      w_4 = (unsigned short)((unsigned int)w_4 & 63487U);
      
#line 816 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_4));
    }
    
#line 817 
    goto ldv_53188;
    case 5: 
#line 819 
    ;
    {
      u16 w_5;
      
#line 820 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_5);
      
#line 820 
      w_5 = (unsigned short)((unsigned int)w_5 & 64511U);
      
#line 820 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_5));
    }
    {
      u16 w_6;
      
#line 821 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_6);
      
#line 821 
      w_6 = (unsigned short)((unsigned int)w_6 & 63487U);
      
#line 821 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_6));
    }
    
#line 822 
    goto ldv_53188;
    default: 
#line 823 
    ;
    
#line 824 
    goto ldv_53188;
  }
  ldv_53188: 
#line 826 
  ;
  
#line 827 
  return;
}


#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void mii_set_auto_on(struct velocity_info *vptr)
{
  int tmp;
  {
    u16 w_1;
    
#line 836 
    velocity_mii_read(vptr->mac_regs,(unsigned char)0,& w_1);
    
#line 836 
    tmp = (int)w_1 & 4096;
  }
  
#line 836 
  if (tmp != 0) {
    u16 w;
    
#line 837 
    velocity_mii_read(vptr->mac_regs,(unsigned char)0,& w);
    
#line 837 
    w = (unsigned short)((unsigned int)w | 512U);
    
#line 837 
    velocity_mii_write(vptr->mac_regs,(unsigned char)0,(unsigned short)((int)w));
  }
  else {
    u16 w_0;
    
#line 839 
    velocity_mii_read(vptr->mac_regs,(unsigned char)0,& w_0);
    
#line 839 
    w_0 = (unsigned short)((unsigned int)w_0 | 4096U);
    
#line 839 
    velocity_mii_write(vptr->mac_regs,(unsigned char)0,(unsigned short)((int)w_0));
  }
  
#line 841 
  return;
}


#line 842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static u32 check_connection_type(struct mac_regs *regs)
{
  u8 PHYSR0;
  u16 ANAR;
  int tmp_0;
  
#line 844 
  u32 status = 0U;
  
#line 847 
  PHYSR0 = readb((void const volatile *)(& regs->PHYSR0));
  
#line 854 
  if (((int)PHYSR0 & 16) != 0) 
#line 855 
                               status |= 16U; else ;
  
#line 857 
  if (((int)PHYSR0 & 8) != 0) 
#line 858 
                              status |= 8U;
  else 
    
#line 859 
    if (((int)PHYSR0 & 4) != 0) 
#line 860 
                                status |= 2U; else 
#line 862 
                                                   status |= 4U;
  {
    u16 w_0;
    
#line 864 
    velocity_mii_read(regs,(unsigned char)0,& w_0);
    
#line 864 
    tmp_0 = (int)w_0 & 4096;
  }
  
#line 864 
  if (tmp_0 != 0) {
    
#line 865 
    velocity_mii_read(regs,(unsigned char)4,& ANAR);
    
#line 866 
    if (((int)ANAR & 480) == 480) {
      int tmp;
      {
        u16 w;
        
#line 868 
        velocity_mii_read(regs,(unsigned char)9,& w);
        
#line 868 
        tmp = (int)w & 768;
      }
      
#line 868 
      if (tmp != 0) 
#line 869 
                    status |= 32U; else ;
    }
    else ;
  }
  else ;
  
#line 873 
  return status;
}


#line 884  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_set_media_mode(struct velocity_info *vptr, u32 mii_status)
{
  int __retres;
  u32 curr_status;
  
#line 887 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 889 
  vptr->mii_status = mii_check_media_mode(vptr->mac_regs);
  
#line 890 
  curr_status = vptr->mii_status & 4294967294U;
  
#line 893 
  set_mii_flow_control(vptr);
  
#line 906 
  if (((unsigned long)vptr->phy_id & 18446744073709551600UL) == 1033232UL) {
    u16 w;
    
#line 907 
    velocity_mii_read(vptr->mac_regs,(unsigned char)28,& w);
    
#line 907 
    w = (unsigned short)((unsigned int)w | 4U);
    
#line 907 
    velocity_mii_write(vptr->mac_regs,(unsigned char)28,(unsigned short)((int)w));
  }
  else ;
  
#line 912 
  if (((unsigned long)mii_status & 32UL) != 0UL) {
    unsigned char tmp;
    
#line 913 
    if (msglevel > 1) 
#line 913 
                      printk("Velocity is AUTO mode\n"); else ;
    
#line 915 
    ;
    
#line 915 
    tmp = readb((void const volatile *)(& regs->CHIPGCR));
    
#line 915 
    writeb((unsigned char)((int)tmp & 239),(void volatile *)(& regs->CHIPGCR));
    {
      u16 w_0;
      
#line 917 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_0);
      
#line 917 
      w_0 = (unsigned short)((unsigned int)w_0 | 480U);
      
#line 917 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_0));
    }
    {
      u16 w_1;
      
#line 918 
      velocity_mii_read(vptr->mac_regs,(unsigned char)9,& w_1);
      
#line 918 
      w_1 = (unsigned short)((unsigned int)w_1 | 768U);
      
#line 918 
      velocity_mii_write(vptr->mac_regs,(unsigned char)9,(unsigned short)((int)w_1));
    }
    {
      u16 w_2;
      
#line 919 
      velocity_mii_read(vptr->mac_regs,(unsigned char)0,& w_2);
      
#line 919 
      w_2 = (unsigned short)((unsigned int)w_2 | 64U);
      
#line 919 
      velocity_mii_write(vptr->mac_regs,(unsigned char)0,(unsigned short)((int)w_2));
    }
    
#line 922 
    mii_set_auto_on(vptr);
  }
  else {
    u16 CTRL1000;
    u16 ANAR;
    u8 CHIPGCR;
    unsigned char tmp_0;
    
#line 936 
    ;
    
#line 936 
    tmp_0 = readb((void const volatile *)(& regs->CHIPGCR));
    
#line 936 
    writeb((unsigned char)((int)((unsigned int)tmp_0 | 16U)),(void volatile *)(& regs->CHIPGCR));
    
#line 938 
    CHIPGCR = readb((void const volatile *)(& regs->CHIPGCR));
    
#line 940 
    if (((unsigned long)mii_status & 8UL) != 0UL) 
#line 941 
                                                  CHIPGCR = (unsigned char)((unsigned int)CHIPGCR | 128U); else 
                                                                    
#line 943 
                                                                    CHIPGCR = (unsigned char)((unsigned int)CHIPGCR & 127U);
    
#line 945 
    if (((unsigned long)mii_status & 16UL) != 0UL) {
      
#line 946 
      CHIPGCR = (unsigned char)((unsigned int)CHIPGCR | 64U);
      
#line 947 
      writeb((unsigned char)((int)CHIPGCR),(void volatile *)(& regs->CHIPGCR));
      
#line 948 
      if (msglevel > 1) 
#line 948 
                        printk("set Velocity to forced full mode\n"); else ;
      
#line 949 
      if ((unsigned int)vptr->rev_id <= 15U) {
        unsigned char tmp_1;
        
#line 950 
        ;
        
#line 950 
        tmp_1 = readb((void const volatile *)(& regs->TCR));
        
#line 950 
        writeb((unsigned char)((int)tmp_1 & 127),(void volatile *)(& regs->TCR));
      }
      else ;
    }
    else {
      
#line 952 
      CHIPGCR = (unsigned char)((unsigned int)CHIPGCR & 191U);
      
#line 953 
      if (msglevel > 1) 
#line 953 
                        printk("set Velocity to forced half mode\n"); else ;
      
#line 954 
      writeb((unsigned char)((int)CHIPGCR),(void volatile *)(& regs->CHIPGCR));
      
#line 955 
      if ((unsigned int)vptr->rev_id <= 15U) {
        unsigned char tmp_2;
        
#line 956 
        ;
        
#line 956 
        tmp_2 = readb((void const volatile *)(& regs->TCR));
        
#line 956 
        writeb((unsigned char)((int)((unsigned int)tmp_2 | 128U)),(void volatile *)(& regs->TCR));
      }
      else ;
    }
    
#line 959 
    velocity_mii_read(vptr->mac_regs,(unsigned char)9,& CTRL1000);
    
#line 960 
    CTRL1000 = (unsigned short)((unsigned int)CTRL1000 & 64767U);
    
#line 961 
    if (((unsigned long)mii_status & 8UL) != 0UL && ((unsigned long)mii_status & 16UL) != 0UL) 
      
#line 963 
      CTRL1000 = (unsigned short)((unsigned int)CTRL1000 | 512U); else ;
    
#line 965 
    velocity_mii_write(vptr->mac_regs,(unsigned char)9,(unsigned short)((int)CTRL1000));
    
#line 967 
    if (((unsigned long)mii_status & 16UL) == 0UL && ((unsigned long)mii_status & 2UL) != 0UL) {
      unsigned char tmp_3;
      
#line 968 
      ;
      
#line 968 
      tmp_3 = readb((void const volatile *)(& regs->TESTCFG));
      
#line 968 
      writeb((unsigned char)((int)tmp_3 & 127),(void volatile *)(& regs->TESTCFG));
    }
    else {
      unsigned char tmp_4;
      
#line 970 
      ;
      
#line 970 
      tmp_4 = readb((void const volatile *)(& regs->TESTCFG));
      
#line 970 
      writeb((unsigned char)((int)((unsigned int)tmp_4 | 128U)),(void volatile *)(& regs->TESTCFG));
    }
    
#line 973 
    velocity_mii_read(vptr->mac_regs,(unsigned char)4,& ANAR);
    
#line 974 
    ANAR = (unsigned short)((unsigned int)ANAR & 65055U);
    
#line 975 
    if (((unsigned long)mii_status & 4UL) != 0UL) 
      
#line 976 
      if (((unsigned long)mii_status & 16UL) != 0UL) 
#line 977 
                                                     ANAR = (unsigned short)((unsigned int)ANAR | 256U); else 
                                                                    
#line 979 
                                                                    ANAR = (unsigned short)((unsigned int)ANAR | 128U);
    else 
      
#line 980 
      if (((unsigned long)mii_status & 2UL) != 0UL) 
        
#line 981 
        if (((unsigned long)mii_status & 16UL) != 0UL) 
#line 982 
                                                       ANAR = (unsigned short)((unsigned int)ANAR | 64U); else 
                                                                    
#line 984 
                                                                    ANAR = (unsigned short)((unsigned int)ANAR | 32U);
      else ;
    
#line 986 
    velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)ANAR));
    
#line 988 
    mii_set_auto_on(vptr);
  }
  
#line 993 
  __retres = 1;
  
#line 993 
  return __retres;
}


#line 1004  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_print_link_status(struct velocity_info *vptr)
{
  
#line 1007 
  if (((unsigned long)vptr->mii_status & 1UL) != 0UL) {
    
#line 1008 
    if (msglevel > 1) 
#line 1008 
                      printk("\001",(char *)(& (vptr->netdev)->name)); else ;
  }
  else 
    
#line 1009 
    if (vptr->options.spd_dpx == (unsigned int)SPD_DPX_AUTO) {
      
#line 1010 
      if (msglevel > 1) 
#line 1010 
                        printk("\001",(char *)(& (vptr->netdev)->name)); else ;
      
#line 1012 
      if (((unsigned long)vptr->mii_status & 8UL) != 0UL) {
        
#line 1013 
        if (msglevel > 1) 
#line 1013 
                          printk(" speed 1000M bps"); else ;
      }
      else 
        
#line 1014 
        if (((unsigned long)vptr->mii_status & 4UL) != 0UL) {
          
#line 1015 
          if (msglevel > 1) 
#line 1015 
                            printk(" speed 100M bps"); else ;
        }
        else 
          
#line 1017 
          if (msglevel > 1) 
#line 1017 
                            printk(" speed 10M bps"); else ;
      
#line 1019 
      if (((unsigned long)vptr->mii_status & 16UL) != 0UL) {
        
#line 1020 
        if (msglevel > 1) 
#line 1020 
                          printk(" full duplex\n"); else ;
      }
      else 
        
#line 1022 
        if (msglevel > 1) 
#line 1022 
                          printk(" half duplex\n"); else ;
    }
    else {
      
#line 1024 
      if (msglevel > 1) 
#line 1024 
                        printk("\001",(char *)(& (vptr->netdev)->name)); else ;
      
#line 1025 
      switch ((unsigned int)vptr->options.spd_dpx) {
        case (unsigned int)5: 
#line 1026 
        ;
        
#line 1027 
        if (msglevel > 1) 
#line 1027 
                          printk(" speed 1000M bps full duplex\n"); else ;
        
#line 1028 
        goto ldv_53233;
        case (unsigned int)1: 
#line 1029 
        ;
        
#line 1030 
        if (msglevel > 1) 
#line 1030 
                          printk(" speed 100M bps half duplex\n"); else ;
        
#line 1031 
        goto ldv_53233;
        case (unsigned int)2: 
#line 1032 
        ;
        
#line 1033 
        if (msglevel > 1) 
#line 1033 
                          printk(" speed 100M bps full duplex\n"); else ;
        
#line 1034 
        goto ldv_53233;
        case (unsigned int)3: 
#line 1035 
        ;
        
#line 1036 
        if (msglevel > 1) 
#line 1036 
                          printk(" speed 10M bps half duplex\n"); else ;
        
#line 1037 
        goto ldv_53233;
        case (unsigned int)4: 
#line 1038 
        ;
        
#line 1039 
        if (msglevel > 1) 
#line 1039 
                          printk(" speed 10M bps full duplex\n"); else ;
        
#line 1040 
        goto ldv_53233;
        default: 
#line 1041 
        ;
        
#line 1042 
        goto ldv_53233;
      }
      ldv_53233: 
#line 1044 
      ;
    }
  
#line 1046 
  return;
}


#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void enable_flow_control_ability(struct velocity_info *vptr)
{
  
#line 1057 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 1059 
  switch (vptr->options.flow_cntl) {
    unsigned char tmp;
    unsigned char tmp_0;
    case 1: 
#line 1061 
    ;
    
#line 1062 
    tmp = readb((void const volatile *)(& regs->PHYSR0));
    
#line 1062 
    if (((int)tmp & 2) != 0) 
#line 1063 
                             writel(2097152U,(void volatile *)(& regs->CR0Set)); else 
                                                                    
#line 1065 
                                                                    writel(2097152U,(void volatile *)(& regs->CR0Clr));
    
#line 1067 
    tmp_0 = readb((void const volatile *)(& regs->PHYSR0));
    
#line 1067 
    if (((int)tmp_0 & 1) != 0) 
#line 1068 
                               writel(4194304U,(void volatile *)(& regs->CR0Set)); else 
                                                                    
#line 1070 
                                                                    writel(4194304U,(void volatile *)(& regs->CR0Clr));
    
#line 1071 
    goto ldv_53244;
    case 2: 
#line 1073 
    ;
    
#line 1074 
    writel(4194304U,(void volatile *)(& regs->CR0Set));
    
#line 1075 
    writel(2097152U,(void volatile *)(& regs->CR0Clr));
    
#line 1076 
    goto ldv_53244;
    case 3: 
#line 1078 
    ;
    
#line 1079 
    writel(2097152U,(void volatile *)(& regs->CR0Set));
    
#line 1080 
    writel(4194304U,(void volatile *)(& regs->CR0Clr));
    
#line 1081 
    goto ldv_53244;
    case 4: 
#line 1083 
    ;
    
#line 1084 
    writel(4194304U,(void volatile *)(& regs->CR0Set));
    
#line 1085 
    writel(2097152U,(void volatile *)(& regs->CR0Set));
    
#line 1086 
    goto ldv_53244;
    case 5: 
#line 1088 
    ;
    
#line 1089 
    writel(2097152U,(void volatile *)(& regs->CR0Clr));
    
#line 1090 
    writel(4194304U,(void volatile *)(& regs->CR0Clr));
    
#line 1091 
    goto ldv_53244;
    default: 
#line 1093 
    ;
    
#line 1094 
    goto ldv_53244;
  }
  ldv_53244: 
#line 1097 
  ;
  
#line 1098 
  return;
}


#line 1106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_soft_reset(struct velocity_info *vptr)
{
  int __retres;
  unsigned int tmp;
  
#line 1108 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 1109 
  int i = 0;
  
#line 1111 
  writel(32768U,(void volatile *)(& regs->CR0Set));
  
#line 1113 
  i = 0;
  
#line 1113 
  goto ldv_53257;
  ldv_53256: 
#line 1114 
  ;
  
#line 1114 
  __const_udelay(21475UL);
  
#line 1115 
  tmp = readl((void const volatile *)(& regs->CR0Set));
  
#line 1115 
  if (((unsigned long)tmp & 32768UL) == 0UL) 
#line 1116 
                                             goto ldv_53255; else ;
  
#line 1113 
  i += 1;
  ldv_53257: 
#line 1114 
  ;
  
#line 1113 
  if ((unsigned int)i <= 4094U) 
#line 1115 
                                goto ldv_53256; else 
#line 1118 
                                                     goto ldv_53255;
  ldv_53255: 
#line 1119 
  ;
  
#line 1119 
  if (i == 4095) {
    
#line 1120 
    writel(1073741824U,(void volatile *)(& regs->CR0Set));
    
#line 1123 
    if (1) 
#line 1123 
           __const_udelay(8590000UL);
    else {
      
#line 1123 
      unsigned long __ms = 2UL;
      {
        unsigned long tmp_0;
        
#line 1123 
        goto ldv_53260;
        ldv_53259: 
#line 1124 
        ;
        
#line 1123 
        __const_udelay(4295000UL);
        ldv_53260: 
#line 1125 
        ;
        
#line 1123 
        tmp_0 = __ms;
        
#line 1123 
        __ms -= 1UL;
        
#line 1123 
        ;
        
#line 1123 
        if (tmp_0 != 0UL) 
#line 1125 
                          goto ldv_53259; else 
#line 1128 
                                               goto ldv_53261;
        ldv_53261: 
#line 1129 
        ;
      }
    }
  }
  else ;
  
#line 1125 
  __retres = 0;
  
#line 1125 
  return __retres;
}


#line 1136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_set_multi(struct net_device *dev)
{
  u8 rx_mode;
  int i;
  struct netdev_hw_addr *ha;
  unsigned char tmp_2;
  
#line 1138 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 1139 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 1144 
  if ((dev->flags & 256U) != 0U) {
    
#line 1145 
    writel(4294967295U,(void volatile *)(& regs->MARCAM[0]));
    
#line 1146 
    writel(4294967295U,(void volatile *)(& regs->MARCAM[4]));
    
#line 1147 
    rx_mode = (unsigned char)28U;
  }
  else 
    
#line 1148 
    if (dev->mc.count > vptr->multicast_limit || (dev->flags & 512U) != 0U) {
      
#line 1150 
      writel(4294967295U,(void volatile *)(& regs->MARCAM[0]));
      
#line 1151 
      writel(4294967295U,(void volatile *)(& regs->MARCAM[4]));
      
#line 1152 
      rx_mode = (unsigned char)12U;
    }
    else {
      struct netdev_hw_addr *tmp_0;
      struct netdev_hw_addr *tmp_1;
      
#line 1154 
      int offset = 64 - vptr->multicast_limit;
      
#line 1155 
      mac_get_cam_mask(regs,(u8 *)(& vptr->mCAMmask));
      
#line 1157 
      i = 0;
      {
        
#line 1158 
        struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
        
#line 1158 
        tmp_0 = (struct netdev_hw_addr *)__mptr;
      }
      
#line 1158 
      ha = tmp_0;
      
#line 1158 
      goto ldv_53276;
      ldv_53275: 
#line 1159 
      ;
      
#line 1159 
      mac_set_cam(regs,i + offset,(u8 const *)(& ha->addr));
      
#line 1160 
      vptr->mCAMmask[(offset + i) / 8] = (unsigned char)((int)vptr->mCAMmask[(offset + i) / 8] | (1 << ((offset + i) & 7)));
      
#line 1161 
      i += 1;
      {
        
#line 1158 
        struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
        
#line 1158 
        tmp_1 = (struct netdev_hw_addr *)__mptr_0;
      }
      
#line 1158 
      ha = tmp_1;
      ldv_53276: 
#line 1160 
      ;
      
#line 1158 
      if (& ha->list != & dev->mc.list) 
#line 1160 
                                        goto ldv_53275; else 
#line 1163 
                                                             goto ldv_53277;
      ldv_53277: 
#line 1164 
      ;
      
#line 1164 
      mac_set_cam_mask(regs,(u8 *)(& vptr->mCAMmask));
      
#line 1165 
      rx_mode = (unsigned char)76U;
    }
  
#line 1167 
  if (dev->mtu > 1500U) 
#line 1168 
                        rx_mode = (unsigned char)((unsigned int)rx_mode | 32U); else ;
  
#line 1170 
  ;
  
#line 1170 
  tmp_2 = readb((void const volatile *)(& regs->RCR));
  
#line 1170 
  ;
  
#line 1170 
  writeb((unsigned char)((int)tmp_2 | (int)rx_mode),(void volatile *)(& regs->RCR));
  
#line 1171 
  return;
}


#line 1185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void mii_init(struct velocity_info *vptr, u32 mii_status)
{
  u16 BMCR;
  
#line 1189 
  switch ((unsigned long)vptr->phy_id & 18446744073709551600UL) {
    case (unsigned long)37948500: 
#line 1190 
    ;
    {
      u16 w;
      
#line 1191 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w);
      
#line 1191 
      w = (unsigned short)((unsigned int)w | 3072U);
      
#line 1191 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w));
    }
    
#line 1193 
    if (((unsigned long)vptr->mii_status & 16UL) != 0UL) {
      u16 w_0;
      
#line 1194 
      velocity_mii_read(vptr->mac_regs,(unsigned char)22,& w_0);
      
#line 1194 
      w_0 = (unsigned short)((unsigned int)w_0 | 8192U);
      
#line 1194 
      velocity_mii_write(vptr->mac_regs,(unsigned char)22,(unsigned short)((int)w_0));
    }
    else {
      u16 w_1;
      
#line 1197 
      velocity_mii_read(vptr->mac_regs,(unsigned char)22,& w_1);
      
#line 1197 
      w_1 = (unsigned short)((unsigned int)w_1 & 57343U);
      
#line 1197 
      velocity_mii_write(vptr->mac_regs,(unsigned char)22,(unsigned short)((int)w_1));
    }
    {
      u16 w_2;
      
#line 1199 
      velocity_mii_read(vptr->mac_regs,(unsigned char)27,& w_2);
      
#line 1199 
      w_2 = (unsigned short)((unsigned int)w_2 | 4U);
      
#line 1199 
      velocity_mii_write(vptr->mac_regs,(unsigned char)27,(unsigned short)((int)w_2));
    }
    
#line 1200 
    goto ldv_53288;
    case (unsigned long)1033232: 
#line 1201 
    ;
    {
      u16 w_3;
      
#line 1205 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_3);
      
#line 1205 
      w_3 = (unsigned short)((unsigned int)w_3 & 62463U);
      
#line 1205 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_3));
    }
    
#line 1211 
    if (((unsigned long)vptr->mii_status & 16UL) != 0UL) {
      u16 w_4;
      
#line 1212 
      velocity_mii_read(vptr->mac_regs,(unsigned char)22,& w_4);
      
#line 1212 
      w_4 = (unsigned short)((unsigned int)w_4 | 8192U);
      
#line 1212 
      velocity_mii_write(vptr->mac_regs,(unsigned char)22,(unsigned short)((int)w_4));
    }
    else {
      u16 w_5;
      
#line 1214 
      velocity_mii_read(vptr->mac_regs,(unsigned char)22,& w_5);
      
#line 1214 
      w_5 = (unsigned short)((unsigned int)w_5 & 57343U);
      
#line 1214 
      velocity_mii_write(vptr->mac_regs,(unsigned char)22,(unsigned short)((int)w_5));
    }
    {
      u16 w_6;
      
#line 1218 
      velocity_mii_read(vptr->mac_regs,(unsigned char)27,& w_6);
      
#line 1218 
      w_6 = (unsigned short)((unsigned int)w_6 | 4U);
      
#line 1218 
      velocity_mii_write(vptr->mac_regs,(unsigned char)27,(unsigned short)((int)w_6));
    }
    
#line 1219 
    goto ldv_53288;
    case (unsigned long)1033744: 
#line 1220 
    ;
    case (unsigned long)1033728: 
#line 1221 
    ;
    {
      u16 w_7;
      
#line 1225 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_7);
      
#line 1225 
      w_7 = (unsigned short)((unsigned int)w_7 | 3072U);
      
#line 1225 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_7));
    }
    
#line 1231 
    if (((unsigned long)vptr->mii_status & 16UL) != 0UL) {
      u16 w_8;
      
#line 1232 
      velocity_mii_read(vptr->mac_regs,(unsigned char)22,& w_8);
      
#line 1232 
      w_8 = (unsigned short)((unsigned int)w_8 | 8192U);
      
#line 1232 
      velocity_mii_write(vptr->mac_regs,(unsigned char)22,(unsigned short)((int)w_8));
    }
    else {
      u16 w_9;
      
#line 1234 
      velocity_mii_read(vptr->mac_regs,(unsigned char)22,& w_9);
      
#line 1234 
      w_9 = (unsigned short)((unsigned int)w_9 & 57343U);
      
#line 1234 
      velocity_mii_write(vptr->mac_regs,(unsigned char)22,(unsigned short)((int)w_9));
    }
    
#line 1235 
    goto ldv_53288;
    case (unsigned long)21040208: 
#line 1237 
    ;
    case (unsigned long)21040192: 
#line 1238 
    ;
    {
      u16 w_10;
      
#line 1242 
      velocity_mii_read(vptr->mac_regs,(unsigned char)16,& w_10);
      
#line 1242 
      w_10 = (unsigned short)((unsigned int)w_10 | 2048U);
      
#line 1242 
      velocity_mii_write(vptr->mac_regs,(unsigned char)16,(unsigned short)((int)w_10));
    }
    {
      u16 w_11;
      
#line 1246 
      velocity_mii_read(vptr->mac_regs,(unsigned char)4,& w_11);
      
#line 1246 
      w_11 = (unsigned short)((unsigned int)w_11 | 3072U);
      
#line 1246 
      velocity_mii_write(vptr->mac_regs,(unsigned char)4,(unsigned short)((int)w_11));
    }
    
#line 1247 
    goto ldv_53288;
    default: 
#line 1248 
    ;
  }
  ldv_53288: 
#line 1251 
  ;
  
#line 1251 
  velocity_mii_read(vptr->mac_regs,(unsigned char)0,& BMCR);
  
#line 1252 
  if (((int)BMCR & 1024) != 0) {
    
#line 1253 
    BMCR = (unsigned short)((unsigned int)BMCR & 64511U);
    
#line 1254 
    velocity_mii_write(vptr->mac_regs,(unsigned char)0,(unsigned short)((int)BMCR));
  }
  else ;
  
#line 1256 
  return;
}


#line 1264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void setup_queue_timers(struct velocity_info *vptr)
{
  
#line 1267 
  if ((unsigned int)vptr->rev_id > 15U) {
    
#line 1268 
    u8 txqueue_timer = (unsigned char)0U;
    
#line 1269 
    u8 rxqueue_timer = (unsigned char)0U;
    
#line 1271 
    if (((unsigned long)vptr->mii_status & 12UL) != 0UL) {
      
#line 1273 
      txqueue_timer = (unsigned char)vptr->options.txqueue_timer;
      
#line 1274 
      rxqueue_timer = (unsigned char)vptr->options.rxqueue_timer;
    }
    else ;
    
#line 1277 
    writeb((unsigned char)((int)txqueue_timer),(void volatile *)(& (vptr->mac_regs)->TQETMR));
    
#line 1278 
    writeb((unsigned char)((int)rxqueue_timer),(void volatile *)(& (vptr->mac_regs)->RQETMR));
  }
  else ;
  
#line 1280 
  return;
}


#line 1290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void setup_adaptive_interrupts(struct velocity_info *vptr)
{
  
#line 1292 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 1293 
  u16 tx_intsup = (unsigned short)vptr->options.tx_intsup;
  
#line 1294 
  u16 rx_intsup = (unsigned short)vptr->options.rx_intsup;
  
#line 1297 
  vptr->int_mask = 37223183U;
  
#line 1300 
  writeb((unsigned char)64,(void volatile *)(& regs->CAMCR));
  
#line 1301 
  if ((unsigned int)tx_intsup != 0U) {
    
#line 1302 
    vptr->int_mask &= 4294967047U;
    
#line 1304 
    writew((unsigned short)((int)tx_intsup),(void volatile *)(& regs->ISRCTL));
  }
  else 
#line 1306 
       writew((unsigned short)16384,(void volatile *)(& regs->ISRCTL));
  
#line 1309 
  writeb((unsigned char)128,(void volatile *)(& regs->CAMCR));
  
#line 1310 
  if ((unsigned int)rx_intsup != 0U) {
    
#line 1311 
    vptr->int_mask &= 4294967291U;
    
#line 1312 
    writew((unsigned short)((int)rx_intsup),(void volatile *)(& regs->ISRCTL));
  }
  else 
#line 1314 
       writew((unsigned short)8192,(void volatile *)(& regs->ISRCTL));
  
#line 1317 
  writeb((unsigned char)0,(void volatile *)(& regs->CAMCR));
  
#line 1318 
  return;
}


#line 1328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_init_registers(struct velocity_info *vptr, enum velocity_init_type type)
{
  int i;
  int mii_status;
  
#line 1331 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 1332 
  struct net_device *netdev = vptr->netdev;
  
#line 1335 
  mac_wol_reset(regs);
  
#line 1337 
  switch ((unsigned int)type) {
    u32 tmp;
    int tmp_0;
    unsigned char tmp_2;
    unsigned char tmp_3;
    unsigned char tmp_4;
    unsigned char tmp_5;
    u32 tmp_6;
    int tmp_7;
    unsigned char tmp_8;
    unsigned char tmp_9;
    unsigned char tmp_10;
    unsigned char tmp_11;
    case (unsigned int)1: 
#line 1338 
    ;
    case (unsigned int)2: 
#line 1339 
    ;
    
#line 1341 
    netif_start_queue(netdev);
    
#line 1346 
    velocity_rx_reset(vptr);
    
#line 1347 
    writeb((unsigned char)1,(void volatile *)(& regs->RDCSRSet));
    
#line 1348 
    writeb((unsigned char)4,(void volatile *)(& regs->RDCSRSet));
    
#line 1350 
    tmp = velocity_get_opt_media_mode(vptr);
    
#line 1350 
    mii_status = (int)tmp;
    
#line 1351 
    tmp_0 = velocity_set_media_mode(vptr,(unsigned int)mii_status);
    
#line 1351 
    if (tmp_0 != 1) {
      
#line 1352 
      velocity_print_link_status(vptr);
      
#line 1353 
      if (((unsigned long)vptr->mii_status & 1UL) == 0UL) 
#line 1354 
                                                          netif_wake_queue(netdev); else ;
    }
    else ;
    
#line 1357 
    enable_flow_control_ability(vptr);
    
#line 1359 
    writel(4294967295U,(void volatile *)(& regs->ISR));
    
#line 1360 
    writel(2U,(void volatile *)(& regs->CR0Clr));
    
#line 1361 
    writel(2061U,(void volatile *)(& regs->CR0Set));
    
#line 1364 
    goto ldv_53325;
    case (unsigned int)0: 
#line 1366 
    ;
    default: 
#line 1367 
    ;
    
#line 1371 
    velocity_soft_reset(vptr);
    
#line 1372 
    if (1) 
#line 1372 
           __const_udelay(21475000UL);
    else {
      
#line 1372 
      unsigned long __ms = 5UL;
      {
        unsigned long tmp_1;
        
#line 1372 
        goto ldv_53330;
        ldv_53329: 
#line 1373 
        ;
        
#line 1372 
        __const_udelay(4295000UL);
        ldv_53330: 
#line 1374 
        ;
        
#line 1372 
        tmp_1 = __ms;
        
#line 1372 
        __ms -= 1UL;
        
#line 1372 
        ;
        
#line 1372 
        if (tmp_1 != 0UL) 
#line 1374 
                          goto ldv_53329; else 
#line 1377 
                                               goto ldv_53331;
        ldv_53331: 
#line 1378 
        ;
      }
    }
    
#line 1374 
    if (vptr->no_eeprom == 0) {
      
#line 1375 
      mac_eeprom_reload(regs);
      
#line 1376 
      i = 0;
      
#line 1376 
      goto ldv_53333;
      ldv_53332: 
#line 1377 
      ;
      
#line 1377 
      writeb((unsigned char)((int)*(netdev->dev_addr + i)),(void volatile *)(& regs->PAR) + i);
      
#line 1376 
      i += 1;
      ldv_53333: 
#line 1377 
      ;
      
#line 1376 
      if (i <= 5) 
#line 1378 
                  goto ldv_53332; else 
#line 1381 
                                       goto ldv_53334;
      ldv_53334: 
#line 1382 
      ;
    }
    else ;
    
#line 1383 
    ;
    
#line 1383 
    tmp_2 = readb((void const volatile *)(& regs->CFGA));
    
#line 1383 
    writeb((unsigned char)((int)tmp_2 & 254),(void volatile *)(& regs->CFGA));
    
#line 1384 
    ;
    
#line 1384 
    tmp_3 = readb((void const volatile *)(& regs->MCFG));
    
#line 1384 
    ;
    
#line 1384 
    writeb((unsigned char)((int)((unsigned char)(((int)tmp_3 & -49) | vptr->options.rx_thresh))),(void volatile *)(& regs->MCFG));
    
#line 1385 
    ;
    
#line 1385 
    tmp_4 = readb((void const volatile *)(& regs->DCFG));
    
#line 1385 
    ;
    
#line 1385 
    writeb((unsigned char)((int)((unsigned char)(((int)tmp_4 & -8) | vptr->options.DMA_length))),(void volatile *)(& regs->DCFG));
    
#line 1387 
    writeb((unsigned char)48,(void volatile *)(& regs->WOLCFGSet));
    
#line 1391 
    ;
    
#line 1391 
    tmp_5 = readb((void const volatile *)(& regs->CFGB));
    
#line 1391 
    writeb((unsigned char)((int)((unsigned char)(((int)tmp_5 & -32) | 16))),(void volatile *)(& regs->CFGB));
    
#line 1396 
    velocity_init_cam_filter(vptr);
    
#line 1401 
    velocity_set_multi(netdev);
    
#line 1406 
    enable_mii_autopoll(regs);
    
#line 1408 
    setup_adaptive_interrupts(vptr);
    
#line 1410 
    writel((unsigned int)vptr->rx.pool_dma,(void volatile *)(& regs->RDBaseLo));
    
#line 1411 
    writew((unsigned short)((int)((unsigned int)((unsigned short)vptr->options.numrx) + 65535U)),(void volatile *)(& regs->RDCSize));
    
#line 1412 
    writeb((unsigned char)1,(void volatile *)(& regs->RDCSRSet));
    
#line 1413 
    writeb((unsigned char)4,(void volatile *)(& regs->RDCSRSet));
    
#line 1415 
    writew((unsigned short)((int)((unsigned int)((unsigned short)vptr->options.numtx) + 65535U)),(void volatile *)(& regs->TDCSize));
    
#line 1417 
    i = 0;
    
#line 1417 
    goto ldv_53336;
    ldv_53335: 
#line 1418 
    ;
    
#line 1418 
    writel((unsigned int)vptr->tx.pool_dma[i],(void volatile *)(& regs->TDBaseLo[i]));
    
#line 1419 
    writew((unsigned short)((int)((unsigned short)(1 << i * 4))),(void volatile *)(& regs->TDCSRSet));
    
#line 1417 
    i += 1;
    ldv_53336: 
#line 1418 
    ;
    
#line 1417 
    if (vptr->tx.numq > i) 
#line 1419 
                           goto ldv_53335; else 
#line 1422 
                                                goto ldv_53337;
    ldv_53337: 
#line 1423 
    ;
    
#line 1422 
    init_flow_control_register(vptr);
    
#line 1424 
    writel(2U,(void volatile *)(& regs->CR0Clr));
    
#line 1425 
    writel(2061U,(void volatile *)(& regs->CR0Set));
    
#line 1427 
    tmp_6 = velocity_get_opt_media_mode(vptr);
    
#line 1427 
    mii_status = (int)tmp_6;
    
#line 1428 
    netif_start_queue(netdev);
    
#line 1430 
    mii_init(vptr,(unsigned int)mii_status);
    
#line 1432 
    tmp_7 = velocity_set_media_mode(vptr,(unsigned int)mii_status);
    
#line 1432 
    if (tmp_7 != 1) {
      
#line 1433 
      velocity_print_link_status(vptr);
      
#line 1434 
      if (((unsigned long)vptr->mii_status & 1UL) == 0UL) 
#line 1435 
                                                          netif_wake_queue(netdev); else ;
    }
    else ;
    
#line 1438 
    enable_flow_control_ability(vptr);
    
#line 1439 
    ;
    
#line 1439 
    tmp_8 = readb((void const volatile *)(& regs->MIBCR));
    
#line 1439 
    writeb((unsigned char)((int)((unsigned int)tmp_8 | 8U)),(void volatile *)(& regs->MIBCR));
    
#line 1439 
    ;
    
#line 1439 
    tmp_9 = readb((void const volatile *)(& regs->MIBCR));
    
#line 1439 
    writeb((unsigned char)((int)((unsigned int)tmp_9 | 1U)),(void volatile *)(& regs->MIBCR));
    ldv_53338: 
#line 1440 
    ;
    
#line 1439 
    tmp_10 = readb((void const volatile *)(& regs->MIBCR));
    
#line 1439 
    if (((int)tmp_10 & 1) != 0) 
#line 1441 
                                goto ldv_53338; else 
#line 1444 
                                                     goto ldv_53339;
    ldv_53339: 
#line 1445 
    ;
    
#line 1439 
    ;
    
#line 1439 
    tmp_11 = readb((void const volatile *)(& regs->MIBCR));
    
#line 1439 
    writeb((unsigned char)((int)tmp_11 & 247),(void volatile *)(& regs->MIBCR));
    
#line 1440 
    writel(vptr->int_mask,(void volatile *)(& regs->IMR));
    
#line 1441 
    writel(4294967295U,(void volatile *)(& regs->ISR));
  }
  ldv_53325: 
#line 1444 
  ;
  
#line 1445 
  return;
}


#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_give_many_rx_descs(struct velocity_info *vptr)
{
  int avail;
  int dirty;
  int unusable;
  
#line 1448 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 1455 
  if (vptr->rx.filled <= 3U) 
#line 1456 
                             goto return_label; else ;
  
#line 1457 
  ldv_inline_asm();
  
#line 1460 
  unusable = (int)vptr->rx.filled & 3;
  
#line 1461 
  dirty = vptr->rx.dirty - unusable;
  
#line 1462 
  avail = (int)vptr->rx.filled & 65532;
  
#line 1462 
  goto ldv_53348;
  ldv_53347: 
#line 1463 
  ;
  
#line 1463 
  if (dirty > 0) 
#line 1463 
                 dirty += -1; else 
#line 1463 
                                   dirty = vptr->options.numrx + -1;
  
#line 1464 
  (vptr->rx.ring + dirty)->rdesc0.len = (unsigned short)((unsigned int)(vptr->rx.ring + dirty)->rdesc0.len | 32768U);
  
#line 1462 
  avail -= 1;
  ldv_53348: 
#line 1463 
  ;
  
#line 1462 
  if (avail != 0) 
#line 1464 
                  goto ldv_53347; else 
#line 1467 
                                       goto ldv_53349;
  ldv_53349: 
#line 1468 
  ;
  
#line 1467 
  writew((unsigned short)((int)((unsigned short)vptr->rx.filled) & 65532),(void volatile *)(& regs->RBRDU));
  
#line 1468 
  vptr->rx.filled = (unsigned int)unusable;
  return_label: 
#line 1469 
                return;
}


#line 1478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_init_dma_rings(struct velocity_info *vptr)
{
  int __retres;
  dma_addr_t pool_dma;
  void *pool;
  unsigned int i;
  
#line 1480 
  struct velocity_opt *opt = & vptr->options;
  
#line 1481 
  unsigned int const rx_ring_size = (unsigned int)((unsigned long)opt->numrx) * 16U;
  
#line 1482 
  unsigned int const tx_ring_size = (unsigned int)((unsigned long)opt->numtx) * 64U;
  
#line 1493 
  pool = dma_alloc_attrs(vptr->dev,(unsigned long)((unsigned int)vptr->tx.numq * tx_ring_size + rx_ring_size),& pool_dma,32U,(struct dma_attrs *)0);
  
#line 1495 
  if (pool == (void *)0) {
    
#line 1496 
    dev_err((struct device const *)vptr->dev,"%s : DMA memory allocation failed.\n",(char *)(& (vptr->netdev)->name));
    
#line 1498 
    __retres = -12;
    
#line 1498 
    goto return_label;
  }
  else ;
  
#line 1501 
  vptr->rx.ring = (struct rx_desc *)pool;
  
#line 1502 
  vptr->rx.pool_dma = pool_dma;
  
#line 1504 
  pool += rx_ring_size;
  
#line 1505 
  pool_dma = (unsigned long long)rx_ring_size + pool_dma;
  
#line 1507 
  i = 0U;
  
#line 1507 
  goto ldv_53360;
  ldv_53359: 
#line 1508 
  ;
  
#line 1508 
  vptr->tx.rings[i] = (struct tx_desc *)pool;
  
#line 1509 
  vptr->tx.pool_dma[i] = pool_dma;
  
#line 1510 
  pool += tx_ring_size;
  
#line 1511 
  pool_dma = (unsigned long long)tx_ring_size + pool_dma;
  
#line 1507 
  i += 1U;
  ldv_53360: 
#line 1508 
  ;
  
#line 1507 
  if ((unsigned int)vptr->tx.numq > i) 
#line 1509 
                                       goto ldv_53359; else 
#line 1512 
                                                            goto ldv_53361;
  ldv_53361: 
#line 1513 
  ;
  
#line 1514 
  __retres = 0;
  return_label: 
#line 1514 
                return __retres;
}


#line 1517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_set_rxbufsize(struct velocity_info *vptr, int mtu)
{
  
#line 1519 
  if (mtu > 1500) 
#line 1519 
                  vptr->rx.buf_sz = mtu + 32; else 
#line 1519 
                                                   vptr->rx.buf_sz = 1540;
  
#line 1520 
  return;
}


#line 1532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_alloc_rx_buf(struct velocity_info *vptr, int idx)
{
  int __retres;
  
#line 1534 
  struct rx_desc *rd = vptr->rx.ring + idx;
  
#line 1535 
  struct velocity_rd_info *rd_info = vptr->rx.info + idx;
  
#line 1537 
  rd_info->skb = netdev_alloc_skb(vptr->netdev,(unsigned int)(vptr->rx.buf_sz + 64));
  
#line 1538 
  if (rd_info->skb == (struct sk_buff *)0) {
    
#line 1539 
    __retres = -12;
    
#line 1539 
    goto return_label;
  }
  else ;
  
#line 1545 
  skb_reserve(rd_info->skb,(int)((long)64U - ((long)(rd_info->skb)->data & (long)63U)));
  
#line 1547 
  rd_info->skb_dma = dma_map_single_attrs(vptr->dev,(void *)(rd_info->skb)->data,(unsigned long)vptr->rx.buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 1554 
  *((u32 *)(& rd->rdesc0)) = 0U;
  
#line 1555 
  rd->size = (unsigned short)((unsigned int)((unsigned short)vptr->rx.buf_sz) | 32768U);
  
#line 1556 
  rd->pa_low = (unsigned int)rd_info->skb_dma;
  
#line 1557 
  rd->pa_high = (unsigned short)0U;
  
#line 1558 
  __retres = 0;
  return_label: 
#line 1558 
                return __retres;
}


#line 1562  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_rx_refill(struct velocity_info *vptr)
{
  
#line 1564 
  int dirty = vptr->rx.dirty;
  
#line 1564 
  int done = 0;
  ldv_53379: 
#line 1565 
  ;
  {
    
#line 1567 
    struct rx_desc *rd = vptr->rx.ring + dirty;
    
#line 1570 
    if ((int)rd->rdesc0.len < 0) 
#line 1571 
                                 goto ldv_53378; else ;
    
#line 1573 
    if ((vptr->rx.info + dirty)->skb == (struct sk_buff *)0) {
      int tmp;
      
#line 1574 
      tmp = velocity_alloc_rx_buf(vptr,dirty);
      
#line 1574 
      if (tmp < 0) 
#line 1575 
                   goto ldv_53378; else ;
    }
    else ;
    
#line 1577 
    done += 1;
    
#line 1578 
    if (vptr->options.numrx + -1 > dirty) 
#line 1578 
                                          dirty += 1; else 
#line 1578 
                                                           dirty = 0;
  }
  
#line 1579 
  if (vptr->rx.curr != dirty) 
#line 1581 
                              goto ldv_53379; else 
#line 1584 
                                                   goto ldv_53378;
  ldv_53378: 
#line 1585 
  ;
  
#line 1581 
  if (done != 0) {
    
#line 1582 
    vptr->rx.dirty = dirty;
    
#line 1583 
    vptr->rx.filled += (unsigned int)done;
  }
  else ;
  
#line 1586 
  return done;
}


#line 1596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_free_rd_ring(struct velocity_info *vptr)
{
  int i;
  
#line 1600 
  if (vptr->rx.info == (struct velocity_rd_info *)0) 
#line 1601 
                                                     goto return_label; else ;
  
#line 1603 
  i = 0;
  
#line 1603 
  goto ldv_53388;
  ldv_53387: 
#line 1604 
  ;
  {
    
#line 1604 
    struct velocity_rd_info *rd_info = vptr->rx.info + i;
    
#line 1605 
    struct rx_desc *rd = vptr->rx.ring + i;
    
#line 1607 
    memset((void *)rd,0,16UL);
    
#line 1609 
    if (rd_info->skb == (struct sk_buff *)0) 
#line 1610 
                                             goto ldv_53386; else ;
    
#line 1611 
    dma_unmap_single_attrs(vptr->dev,rd_info->skb_dma,(unsigned long)vptr->rx.buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 1613 
    rd_info->skb_dma = 0ULL;
    
#line 1615 
    consume_skb(rd_info->skb);
    
#line 1616 
    rd_info->skb = (struct sk_buff *)0;
  }
  ldv_53386: 
#line 1618 
  ;
  
#line 1603 
  i += 1;
  ldv_53388: 
#line 1604 
  ;
  
#line 1603 
  if (vptr->options.numrx > i) 
#line 1605 
                               goto ldv_53387; else 
#line 1608 
                                                    goto ldv_53389;
  ldv_53389: 
#line 1609 
  ;
  
#line 1619 
  kfree((void const *)vptr->rx.info);
  
#line 1620 
  vptr->rx.info = (struct velocity_rd_info *)0;
  return_label: 
#line 1621 
                return;
}


#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_init_rd_ring(struct velocity_info *vptr)
{
  int tmp_0;
  
#line 1632 
  int ret = -12;
  
#line 1634 
  vptr->rx.info = (struct velocity_rd_info *)kcalloc((unsigned long)vptr->options.numrx,16UL,208U);
  
#line 1636 
  if (vptr->rx.info == (struct velocity_rd_info *)0) 
#line 1637 
                                                     goto out; else ;
  
#line 1639 
  velocity_init_rx_ring_indexes(vptr);
  
#line 1641 
  tmp_0 = velocity_rx_refill(vptr);
  
#line 1641 
  ;
  
#line 1641 
  if (tmp_0 != vptr->options.numrx) {
    
#line 1642 
    if (msglevel >= 0) 
#line 1642 
                       printk("\001",(char *)(& (vptr->netdev)->name)); else ;
    
#line 1644 
    velocity_free_rd_ring(vptr);
    
#line 1645 
    goto out;
  }
  else ;
  
#line 1648 
  ret = 0;
  out: 
#line 1649 
  ;
  
#line 1650 
  return ret;
}


#line 1661  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_init_td_ring(struct velocity_info *vptr)
{
  int __retres;
  int j;
  int tmp_1;
  int tmp_0;
  
#line 1666 
  j = 0;
  
#line 1666 
  goto ldv_53403;
  ldv_53402: 
#line 1667 
  ;
  
#line 1668 
  vptr->tx.infos[j] = (struct velocity_td_info *)kcalloc((unsigned long)vptr->options.numtx,72UL,208U);
  
#line 1671 
  if (vptr->tx.infos[j] == (struct velocity_td_info *)0) {
    
#line 1672 
    goto ldv_53400;
    ldv_53399: 
#line 1673 
    ;
    
#line 1673 
    kfree((void const *)vptr->tx.infos[j]);
    ldv_53400: 
#line 1674 
    ;
    
#line 1672 
    j -= 1;
    
#line 1672 
    if (j >= 0) 
#line 1674 
                goto ldv_53399; else 
#line 1677 
                                     goto ldv_53401;
    ldv_53401: 
#line 1678 
    ;
    
#line 1674 
    __retres = -12;
    
#line 1674 
    goto return_label;
  }
  else ;
  
#line 1677 
  tmp_1 = 0;
  
#line 1677 
  vptr->tx.used[j] = tmp_1;
  
#line 1677 
  tmp_0 = tmp_1;
  
#line 1677 
  vptr->tx.curr[j] = tmp_0;
  
#line 1677 
  vptr->tx.tail[j] = tmp_0;
  
#line 1666 
  j += 1;
  ldv_53403: 
#line 1667 
  ;
  
#line 1666 
  if (vptr->tx.numq > j) 
#line 1668 
                         goto ldv_53402; else 
#line 1671 
                                              goto ldv_53404;
  ldv_53404: 
#line 1672 
  ;
  
#line 1679 
  __retres = 0;
  return_label: 
#line 1679 
                return __retres;
}


#line 1688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_free_dma_rings(struct velocity_info *vptr)
{
  
#line 1690 
  int const size = (int)(((unsigned long)vptr->options.numrx + ((unsigned long)vptr->options.numtx * (unsigned long)vptr->tx.numq) * 4UL) * (unsigned long)16U);
  
#line 1693 
  dma_free_attrs(vptr->dev,(unsigned long)size,(void *)vptr->rx.ring,vptr->rx.pool_dma,(struct dma_attrs *)0);
  
#line 1694 
  return;
}


#line 1696  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_init_rings(struct velocity_info *vptr, int mtu)
{
  int __retres;
  int ret;
  
#line 1700 
  velocity_set_rxbufsize(vptr,mtu);
  
#line 1702 
  ret = velocity_init_dma_rings(vptr);
  
#line 1703 
  if (ret < 0) 
#line 1704 
               goto out; else ;
  
#line 1706 
  ret = velocity_init_rd_ring(vptr);
  
#line 1707 
  if (ret < 0) 
#line 1708 
               goto err_free_dma_rings_0; else ;
  
#line 1710 
  ret = velocity_init_td_ring(vptr);
  
#line 1711 
  if (ret < 0) 
#line 1712 
               goto err_free_rd_ring_1; else ;
  out: 
#line 1713 
  ;
  
#line 1714 
  __retres = ret;
  
#line 1714 
  goto return_label;
  err_free_rd_ring_1: 
#line 1716 
  ;
  
#line 1717 
  velocity_free_rd_ring(vptr);
  err_free_dma_rings_0: 
#line 1718 
  ;
  
#line 1719 
  velocity_free_dma_rings(vptr);
  
#line 1720 
  goto out;
  return_label: 
#line 1720 
                return __retres;
}


#line 1731  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_free_tx_buf(struct velocity_info *vptr, struct velocity_td_info *tdinfo, struct tx_desc *td)
{
  
#line 1734 
  struct sk_buff *skb = tdinfo->skb;
  
#line 1739 
  if (& tdinfo->skb_dma != (dma_addr_t (*)[7U])0) {
    int i;
    
#line 1742 
    i = 0;
    
#line 1742 
    goto ldv_53432;
    ldv_53431: 
#line 1743 
    ;
    {
      size_t tmp_0;
      unsigned char *tmp_3;
      {
        size_t tmp;
        
#line 1743 
        size_t __max1 = (unsigned long)skb->len;
        
#line 1743 
        size_t __max2 = 60UL;
        
#line 1743 
        if (__max1 > __max2) 
#line 1743 
                             tmp = __max1; else 
#line 1743 
                                                tmp = __max2;
        
#line 1743 
        tmp_0 = tmp;
      }
      
#line 1743 
      size_t pktlen = tmp_0;
      
#line 1746 
      tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 1746 
      ;
      
#line 1746 
      if ((unsigned int)((struct skb_shared_info *)tmp_3)->nr_frags != 0U) {
        size_t tmp_2;
        {
          size_t tmp_1;
          
#line 1747 
          size_t __max1_0 = pktlen;
          
#line 1747 
          size_t __max2_0 = (unsigned long)((int)td->td_buf[i].size & -32769);
          
#line 1747 
          if (__max1_0 > __max2_0) 
#line 1747 
                                   tmp_1 = __max1_0; else 
#line 1747 
                                                          tmp_1 = __max2_0;
          
#line 1747 
          tmp_2 = tmp_1;
        }
        
#line 1747 
        pktlen = tmp_2;
      }
      else ;
      
#line 1750 
      dma_unmap_single_attrs(vptr->dev,tdinfo->skb_dma[i],(unsigned long)((unsigned short)pktlen),(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    }
    
#line 1742 
    i += 1;
    ldv_53432: 
#line 1743 
    ;
    
#line 1742 
    if (tdinfo->nskb_dma > i) 
#line 1744 
                              goto ldv_53431; else 
#line 1747 
                                                   goto ldv_53433;
    ldv_53433: 
#line 1748 
    ;
  }
  else ;
  
#line 1754 
  dev_kfree_skb_irq(skb);
  
#line 1755 
  tdinfo->skb = (struct sk_buff *)0;
  
#line 1756 
  return;
}


#line 1761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_free_td_ring_entry(struct velocity_info *vptr, int q, int n)
{
  int i;
  
#line 1764 
  struct velocity_td_info *td_info = vptr->tx.infos[q] + n;
  
#line 1767 
  if (td_info == (struct velocity_td_info *)0) 
#line 1768 
                                               goto return_label; else ;
  
#line 1770 
  if (td_info->skb != (struct sk_buff *)0) {
    
#line 1771 
    i = 0;
    
#line 1771 
    goto ldv_53442;
    ldv_53441: 
#line 1772 
    ;
    
#line 1772 
    if (td_info->skb_dma[i] != 0ULL) {
      
#line 1773 
      dma_unmap_single_attrs(vptr->dev,td_info->skb_dma[i],(unsigned long)(td_info->skb)->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      
#line 1775 
      td_info->skb_dma[i] = 0ULL;
    }
    else ;
    
#line 1771 
    i += 1;
    ldv_53442: 
#line 1772 
    ;
    
#line 1771 
    if (td_info->nskb_dma > i) 
#line 1773 
                               goto ldv_53441; else 
#line 1776 
                                                    goto ldv_53443;
    ldv_53443: 
#line 1777 
    ;
    
#line 1778 
    consume_skb(td_info->skb);
    
#line 1779 
    td_info->skb = (struct sk_buff *)0;
  }
  else ;
  return_label: 
#line 1781 
                return;
}


#line 1790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_free_td_ring(struct velocity_info *vptr)
{
  int i;
  int j;
  
#line 1794 
  j = 0;
  
#line 1794 
  goto ldv_53454;
  ldv_53453: 
#line 1795 
  ;
  
#line 1795 
  if (vptr->tx.infos[j] == (struct velocity_td_info *)0) 
#line 1796 
                                                         goto ldv_53449; else ;
  
#line 1797 
  i = 0;
  
#line 1797 
  goto ldv_53451;
  ldv_53450: 
#line 1798 
  ;
  
#line 1798 
  velocity_free_td_ring_entry(vptr,j,i);
  
#line 1797 
  i += 1;
  ldv_53451: 
#line 1798 
  ;
  
#line 1797 
  if (vptr->options.numtx > i) 
#line 1799 
                               goto ldv_53450; else 
#line 1802 
                                                    goto ldv_53452;
  ldv_53452: 
#line 1803 
  ;
  
#line 1800 
  kfree((void const *)vptr->tx.infos[j]);
  
#line 1801 
  vptr->tx.infos[j] = (struct velocity_td_info *)0;
  ldv_53449: 
#line 1802 
  ;
  
#line 1794 
  j += 1;
  ldv_53454: 
#line 1795 
  ;
  
#line 1794 
  if (vptr->tx.numq > j) 
#line 1796 
                         goto ldv_53453; else 
#line 1799 
                                              goto ldv_53455;
  ldv_53455: 
#line 1800 
  ;
  
#line 1801 
  return;
}


#line 1805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_free_rings(struct velocity_info *vptr)
{
  
#line 1807 
  velocity_free_td_ring(vptr);
  
#line 1808 
  velocity_free_rd_ring(vptr);
  
#line 1809 
  velocity_free_dma_rings(vptr);
  
#line 1810 
  return;
}


#line 1823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_error(struct velocity_info *vptr, int status)
{
  
#line 1826 
  if (((unsigned long)status & 33554432UL) != 0UL) {
    unsigned short tmp;
    unsigned char tmp_0;
    
#line 1827 
    struct mac_regs *regs = vptr->mac_regs;
    
#line 1829 
    tmp = readw((void const volatile *)(& regs->TDIdx[0]));
    
#line 1829 
    printk("\001",(int)tmp);
    
#line 1830 
    ;
    
#line 1830 
    tmp_0 = readb((void const volatile *)(& regs->TXESR));
    
#line 1830 
    writeb((unsigned char)((int)((unsigned int)tmp_0 | 1U)),(void volatile *)(& regs->TXESR));
    
#line 1831 
    writew((unsigned short)1,(void volatile *)(& regs->TDCSRClr));
    
#line 1832 
    netif_start_queue(vptr->netdev);
  }
  else ;
  
#line 1838 
  if (((unsigned long)status & 32768UL) != 0UL) {
    int linked;
    unsigned char tmp_5;
    
#line 1839 
    struct mac_regs *regs_0 = vptr->mac_regs;
    
#line 1842 
    if (vptr->options.spd_dpx == (unsigned int)SPD_DPX_AUTO) {
      
#line 1843 
      vptr->mii_status = check_connection_type(regs_0);
      
#line 1850 
      if ((unsigned int)vptr->rev_id <= 15U) 
        
#line 1851 
        if (((unsigned long)vptr->mii_status & 16UL) != 0UL) {
          unsigned char tmp_1;
          
#line 1852 
          ;
          
#line 1852 
          tmp_1 = readb((void const volatile *)(& regs_0->TCR));
          
#line 1852 
          writeb((unsigned char)((int)((unsigned int)tmp_1 | 128U)),(void volatile *)(& regs_0->TCR));
        }
        else {
          unsigned char tmp_2;
          
#line 1854 
          ;
          
#line 1854 
          tmp_2 = readb((void const volatile *)(& regs_0->TCR));
          
#line 1854 
          writeb((unsigned char)((int)tmp_2 & 127),(void volatile *)(& regs_0->TCR));
        }
      else ;
      
#line 1859 
      if (((unsigned long)vptr->mii_status & 16UL) == 0UL && ((unsigned long)vptr->mii_status & 2UL) != 0UL) {
        unsigned char tmp_3;
        
#line 1860 
        ;
        
#line 1860 
        tmp_3 = readb((void const volatile *)(& regs_0->TESTCFG));
        
#line 1860 
        writeb((unsigned char)((int)tmp_3 & 127),(void volatile *)(& regs_0->TESTCFG));
      }
      else {
        unsigned char tmp_4;
        
#line 1862 
        ;
        
#line 1862 
        tmp_4 = readb((void const volatile *)(& regs_0->TESTCFG));
        
#line 1862 
        writeb((unsigned char)((int)((unsigned int)tmp_4 | 128U)),(void volatile *)(& regs_0->TESTCFG));
      }
      
#line 1864 
      setup_queue_timers(vptr);
    }
    else ;
    
#line 1869 
    tmp_5 = readb((void const volatile *)(& regs_0->PHYSR0));
    
#line 1869 
    linked = (int)tmp_5 & 64;
    
#line 1871 
    if (linked != 0) {
      
#line 1872 
      vptr->mii_status &= 4294967294U;
      
#line 1873 
      netif_carrier_on(vptr->netdev);
    }
    else {
      
#line 1875 
      vptr->mii_status |= 1U;
      
#line 1876 
      netif_carrier_off(vptr->netdev);
    }
    
#line 1879 
    velocity_print_link_status(vptr);
    
#line 1880 
    enable_flow_control_ability(vptr);
    
#line 1887 
    enable_mii_autopoll(regs_0);
    
#line 1889 
    if (((unsigned long)vptr->mii_status & 1UL) != 0UL) 
#line 1890 
                                                        netif_start_queue(vptr->netdev); else 
                                                                    
#line 1892 
                                                                    netif_wake_queue(vptr->netdev);
  }
  else ;
  
#line 1895 
  if (((unsigned long)status & 2097152UL) != 0UL) 
#line 1896 
                                                  velocity_update_hw_mibs(vptr); else ;
  
#line 1897 
  if (((unsigned long)status & 8192UL) != 0UL) 
#line 1898 
                                               writeb((unsigned char)4,(void volatile *)(& (vptr->mac_regs)->RDCSRSet)); else ;
  
#line 1899 
  return;
}


#line 1909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_tx_srv(struct velocity_info *vptr)
{
  struct tx_desc *td;
  int qnum;
  int idx;
  struct velocity_td_info *tdinfo;
  int tmp;
  bool tmp_0;
  
#line 1913 
  int full = 0;
  
#line 1915 
  int works = 0;
  
#line 1917 
  struct net_device_stats *stats = & (vptr->netdev)->stats;
  
#line 1919 
  qnum = 0;
  
#line 1919 
  goto ldv_53480;
  ldv_53479: 
#line 1920 
  ;
  
#line 1920 
  idx = vptr->tx.tail[qnum];
  
#line 1920 
  goto ldv_53478;
  ldv_53477: 
#line 1921 
  ;
  
#line 1926 
  td = vptr->tx.rings[qnum] + idx;
  
#line 1927 
  tdinfo = vptr->tx.infos[qnum] + idx;
  
#line 1929 
  if ((int)td->tdesc0.len < 0) 
#line 1930 
                               goto ldv_53476; else ;
  
#line 1932 
  tmp = works;
  
#line 1932 
  works += 1;
  
#line 1932 
  ;
  
#line 1932 
  if (tmp > 15) 
#line 1933 
                goto ldv_53476; else ;
  
#line 1935 
  if ((int)td->tdesc0.TSR < 0) {
    
#line 1936 
    stats->tx_errors += 1UL;
    
#line 1937 
    stats->tx_dropped += 1UL;
    
#line 1938 
    if (((int)td->tdesc0.TSR & 256) != 0) 
#line 1939 
                                          stats->tx_heartbeat_errors += 1UL; else ;
    
#line 1940 
    if (((int)td->tdesc0.TSR & 512) != 0) 
#line 1941 
                                          stats->tx_carrier_errors += 1UL; else ;
    
#line 1942 
    if (((int)td->tdesc0.TSR & 128) != 0) 
#line 1943 
                                          stats->tx_aborted_errors += 1UL; else ;
    
#line 1944 
    if (((int)td->tdesc0.TSR & 32) != 0) 
#line 1945 
                                         stats->tx_window_errors += 1UL; else ;
  }
  else {
    
#line 1947 
    stats->tx_packets += 1UL;
    
#line 1948 
    stats->tx_bytes += (unsigned long)(tdinfo->skb)->len;
  }
  
#line 1950 
  velocity_free_tx_buf(vptr,tdinfo,td);
  
#line 1951 
  vptr->tx.used[qnum] -= 1;
  
#line 1921 
  idx = (idx + 1) % vptr->options.numtx;
  ldv_53478: 
#line 1922 
  ;
  
#line 1920 
  if (vptr->tx.used[qnum] > 0) 
#line 1922 
                               goto ldv_53477; else 
#line 1925 
                                                    goto ldv_53476;
  ldv_53476: 
#line 1926 
  ;
  
#line 1953 
  vptr->tx.tail[qnum] = idx;
  
#line 1955 
  if (vptr->options.numtx - vptr->tx.used[qnum] <= 0) 
#line 1956 
                                                      full = 1; else ;
  
#line 1919 
  qnum += 1;
  ldv_53480: 
#line 1920 
  ;
  
#line 1919 
  if (vptr->tx.numq > qnum) 
#line 1921 
                            goto ldv_53479; else 
#line 1924 
                                                 goto ldv_53481;
  ldv_53481: 
#line 1925 
  ;
  
#line 1962 
  tmp_0 = netif_queue_stopped((struct net_device const *)vptr->netdev);
  
#line 1962 
  if ((int)tmp_0 != 0) {
    
#line 1962 
    if (full == 0) {
      
#line 1962 
      if (((unsigned long)vptr->mii_status & 1UL) == 0UL) 
#line 1964 
                                                          netif_wake_queue(vptr->netdev); else ;
    }
    else ;
  }
  else ;
  
#line 1966 
  return works;
}


#line 1977  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
__inline static void velocity_rx_csum(struct rx_desc *rd, struct sk_buff *skb)
{
  
#line 1979 
  skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 1981 
  if (((int)rd->rdesc1.CSM & 4) != 0) {
    
#line 1982 
    if (((int)rd->rdesc1.CSM & 64) != 0) {
      
#line 1983 
      if (((int)rd->rdesc1.CSM & 2) != 0 || ((int)rd->rdesc1.CSM & 1) != 0) {
        
#line 1985 
        if (((int)rd->rdesc1.CSM & 32) == 0) 
#line 1986 
                                             goto return_label; else ;
      }
      else ;
      
#line 1988 
      skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
    }
    else ;
  }
  else ;
  return_label: 
#line 1990 
                return;
}


#line 2005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_rx_copy(struct sk_buff **rx_skb, int pkt_size, struct velocity_info *vptr)
{
  
#line 2008 
  int ret = -1;
  
#line 2009 
  if (pkt_size < rx_copybreak) {
    struct sk_buff *new_skb;
    
#line 2012 
    new_skb = netdev_alloc_skb_ip_align(vptr->netdev,(unsigned int)pkt_size);
    
#line 2013 
    if (new_skb != (struct sk_buff *)0) {
      
#line 2014 
      new_skb->ip_summed = (*rx_skb)->ip_summed;
      
#line 2015 
      skb_copy_from_linear_data((struct sk_buff const *)*rx_skb,(void *)new_skb->data,(unsigned int)pkt_size);
      
#line 2016 
      *rx_skb = new_skb;
      
#line 2017 
      ret = 0;
    }
    else ;
  }
  else ;
  
#line 2021 
  return ret;
}


#line 2033  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
__inline static void velocity_iph_realign(struct velocity_info *vptr, struct sk_buff *skb, int pkt_size)
{
  
#line 2036 
  if (((unsigned long)vptr->flags & 8UL) != 0UL) {
    
#line 2037 
    memmove((void *)(skb->data + 2U),(void const *)skb->data,(unsigned long)pkt_size);
    
#line 2038 
    skb_reserve(skb,2);
  }
  else ;
  
#line 2040 
  return;
}


#line 2050  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_receive_frame(struct velocity_info *vptr, int idx)
{
  int __retres;
  struct sk_buff *skb;
  int tmp;
  
#line 2052 
  struct net_device_stats *stats = & (vptr->netdev)->stats;
  
#line 2053 
  struct velocity_rd_info *rd_info = vptr->rx.info + idx;
  
#line 2054 
  struct rx_desc *rd = vptr->rx.ring + idx;
  
#line 2055 
  int pkt_len = (int)rd->rdesc0.len & 16383;
  
#line 2058 
  if (((int)rd->rdesc0.RSR & 768) != 0) {
    
#line 2059 
    if (msglevel > 2) 
#line 2059 
                      printk("\001",(char *)(& (vptr->netdev)->name)); else ;
    
#line 2060 
    stats->rx_length_errors += 1UL;
    
#line 2061 
    __retres = -22;
    
#line 2061 
    goto return_label;
  }
  else ;
  
#line 2064 
  if (((int)rd->rdesc0.RSR & 8192) != 0) 
#line 2065 
                                         stats->multicast += 1UL; else ;
  
#line 2067 
  skb = rd_info->skb;
  
#line 2069 
  dma_sync_single_for_cpu(vptr->dev,rd_info->skb_dma,(unsigned long)vptr->rx.buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 2076 
  if (((unsigned long)vptr->flags & 16UL) != 0UL) {
    
#line 2077 
    if (((int)rd->rdesc0.RSR & 16) != 0) {
      
#line 2078 
      stats->rx_length_errors += 1UL;
      
#line 2079 
      __retres = -22;
      
#line 2079 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2083 
  velocity_rx_csum(rd,skb);
  
#line 2085 
  tmp = velocity_rx_copy(& skb,pkt_len,vptr);
  
#line 2085 
  if (tmp < 0) {
    
#line 2086 
    velocity_iph_realign(vptr,skb,pkt_len);
    
#line 2087 
    rd_info->skb = (struct sk_buff *)0;
    
#line 2088 
    dma_unmap_single_attrs(vptr->dev,rd_info->skb_dma,(unsigned long)vptr->rx.buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  }
  else 
#line 2091 
       dma_sync_single_for_device(vptr->dev,rd_info->skb_dma,(unsigned long)vptr->rx.buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 2095 
  skb_put(skb,(unsigned int)(pkt_len + -4));
  
#line 2096 
  skb->protocol = eth_type_trans(skb,vptr->netdev);
  
#line 2098 
  if (((int)rd->rdesc0.RSR & 128) != 0) {
    int tmp_1;
    
#line 2099 
    if (0 != 0) 
#line 2099 
                tmp_1 = (int)((unsigned short)(((int)rd->rdesc1.PQTAG << 8) | ((int)rd->rdesc1.PQTAG >> 8)));
    else {
      __u16 tmp_0;
      
#line 2099 
      tmp_0 = __fswab16((unsigned short)((int)rd->rdesc1.PQTAG));
      
#line 2099 
      tmp_1 = (int)tmp_0;
    }
    
#line 2099 
    u16 vid = (unsigned short)tmp_1;
    
#line 2101 
    __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)vid));
  }
  else ;
  
#line 2103 
  netif_receive_skb(skb);
  
#line 2105 
  stats->rx_bytes += (unsigned long)pkt_len;
  
#line 2106 
  stats->rx_packets += 1UL;
  
#line 2108 
  __retres = 0;
  return_label: 
#line 2108 
                return __retres;
}


#line 2119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_rx_srv(struct velocity_info *vptr, int budget_left)
{
  
#line 2121 
  struct net_device_stats *stats = & (vptr->netdev)->stats;
  
#line 2122 
  int rd_curr = vptr->rx.curr;
  
#line 2123 
  int works = 0;
  
#line 2125 
  goto ldv_53518;
  ldv_53517: 
#line 2126 
  ;
  {
    
#line 2126 
    struct rx_desc *rd = vptr->rx.ring + rd_curr;
    
#line 2128 
    if ((vptr->rx.info + rd_curr)->skb == (struct sk_buff *)0) 
#line 2129 
                                                               goto ldv_53516; else ;
    
#line 2131 
    if ((int)rd->rdesc0.len < 0) 
#line 2132 
                                 goto ldv_53516; else ;
    
#line 2133 
    ldv_inline_asm();
    
#line 2139 
    if (((int)rd->rdesc0.RSR & 32792) != 0) {
      int tmp;
      
#line 2140 
      tmp = velocity_receive_frame(vptr,rd_curr);
      
#line 2140 
      if (tmp < 0) 
#line 2141 
                   stats->rx_dropped += 1UL; else ;
    }
    else {
      
#line 2143 
      if (((int)rd->rdesc0.RSR & 2) != 0) 
#line 2144 
                                          stats->rx_crc_errors += 1UL; else ;
      
#line 2145 
      if (((int)rd->rdesc0.RSR & 4) != 0) 
#line 2146 
                                          stats->rx_frame_errors += 1UL; else ;
      
#line 2148 
      stats->rx_dropped += 1UL;
    }
    
#line 2151 
    rd->size = (unsigned short)((unsigned int)rd->size | 32768U);
    
#line 2153 
    rd_curr += 1;
    
#line 2154 
    if (vptr->options.numrx <= rd_curr) 
#line 2155 
                                        rd_curr = 0; else ;
    
#line 2156 
    works += 1;
  }
  ldv_53518: 
#line 2158 
  ;
  
#line 2125 
  if (works < budget_left) 
#line 2127 
                           goto ldv_53517; else 
#line 2130 
                                                goto ldv_53516;
  ldv_53516: 
#line 2131 
  ;
  
#line 2159 
  vptr->rx.curr = rd_curr;
  
#line 2161 
  if (works > 0) {
    int tmp_0;
    
#line 2161 
    tmp_0 = velocity_rx_refill(vptr);
    
#line 2161 
    if (tmp_0 > 0) 
#line 2162 
                   velocity_give_many_rx_descs(vptr); else ;
  }
  else ;
  
#line 2164 
  stats = stats;
  
#line 2165 
  return works;
}


#line 2168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_poll(struct napi_struct *napi, int budget)
{
  int __retres;
  struct velocity_info *tmp;
  unsigned int rx_done;
  unsigned long flags;
  int tmp_0;
  {
    
#line 2170 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 2170 
    tmp = (struct velocity_info *)__mptr + 18446744073709549704U;
  }
  
#line 2170 
  struct velocity_info *vptr = tmp;
  
#line 2179 
  tmp_0 = velocity_rx_srv(vptr,budget);
  
#line 2179 
  rx_done = (unsigned int)tmp_0;
  
#line 2180 
  ldv___ldv_spin_lock_77(& vptr->lock);
  
#line 2181 
  velocity_tx_srv(vptr);
  
#line 2183 
  if (rx_done < (unsigned int)budget) {
    
#line 2184 
    napi_complete(napi);
    
#line 2185 
    writel(33554432U,(void volatile *)(& (vptr->mac_regs)->CR0Set));
  }
  else ;
  
#line 2187 
  ldv_spin_unlock_irqrestore_78(& vptr->lock,flags);
  
#line 2189 
  __retres = (int)rx_done;
  
#line 2189 
  return __retres;
}


#line 2202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static irqreturn_t velocity_intr(int irq, void *dev_instance)
{
  irqreturn_t __retres;
  u32 isr_status;
  bool tmp_0;
  
#line 2204 
  struct net_device *dev = (struct net_device *)dev_instance;
  
#line 2205 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 2208 
  ldv_spin_lock_79(& vptr->lock);
  
#line 2209 
  isr_status = readl((void const volatile *)(& (vptr->mac_regs)->ISR));
  
#line 2212 
  if (isr_status == 0U) {
    
#line 2213 
    ldv_spin_unlock_80(& vptr->lock);
    
#line 2214 
    __retres = IRQ_NONE;
    
#line 2214 
    goto return_label;
  }
  else ;
  
#line 2218 
  writel(isr_status,(void volatile *)(& (vptr->mac_regs)->ISR));
  
#line 2220 
  tmp_0 = napi_schedule_prep(& vptr->napi);
  
#line 2220 
  if ((long)((int)tmp_0 != 0) != 0L) {
    
#line 2221 
    writel(33554432U,(void volatile *)(& (vptr->mac_regs)->CR0Clr));
    
#line 2222 
    __napi_schedule(& vptr->napi);
  }
  else ;
  
#line 2225 
  if (((unsigned long)isr_status & 18446744073709551600UL) != 0UL) 
#line 2226 
                                                                   velocity_error(vptr,(int)isr_status); else ;
  
#line 2228 
  ldv_spin_unlock_81(& vptr->lock);
  
#line 2230 
  __retres = IRQ_HANDLED;
  return_label: 
#line 2230 
                return __retres;
}


#line 2243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_open(struct net_device *dev)
{
  int ret;
  
#line 2245 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 2248 
  ret = velocity_init_rings(vptr,(int)dev->mtu);
  
#line 2249 
  if (ret < 0) 
#line 2250 
               goto out; else ;
  
#line 2253 
  velocity_set_power_state(vptr,(char)0);
  
#line 2255 
  velocity_init_registers(vptr,(enum velocity_init_type)VELOCITY_INIT_COLD);
  
#line 2257 
  ret = ldv_request_irq_82((unsigned int)dev->irq,& velocity_intr,128UL,(char const *)(& dev->name),(void *)dev);
  
#line 2259 
  if (ret < 0) {
    
#line 2261 
    velocity_set_power_state(vptr,(char)3);
    
#line 2262 
    velocity_free_rings(vptr);
    
#line 2263 
    goto out;
  }
  else ;
  
#line 2266 
  velocity_give_many_rx_descs(vptr);
  
#line 2268 
  writel(33554432U,(void volatile *)(& (vptr->mac_regs)->CR0Set));
  
#line 2269 
  netif_start_queue(dev);
  
#line 2270 
  napi_enable(& vptr->napi);
  
#line 2271 
  vptr->flags |= 65536U;
  out: 
#line 2272 
  ;
  
#line 2273 
  return ret;
}


#line 2283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_shutdown(struct velocity_info *vptr)
{
  
#line 2285 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 2286 
  writel(33554432U,(void volatile *)(& regs->CR0Clr));
  
#line 2287 
  writel(2U,(void volatile *)(& regs->CR0Set));
  
#line 2288 
  writew((unsigned short)65535,(void volatile *)(& regs->TDCSRClr));
  
#line 2289 
  writeb((unsigned char)255,(void volatile *)(& regs->RDCSRClr));
  
#line 2290 
  safe_disable_mii_autopoll(regs);
  
#line 2291 
  writel(4294967295U,(void volatile *)(& regs->ISR));
  
#line 2292 
  return;
}


#line 2303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_change_mtu(struct net_device *dev, int new_mtu)
{
  int tmp_1;
  bool tmp_0;
  
#line 2305 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 2306 
  int ret = 0;
  
#line 2308 
  if ((unsigned int)new_mtu + 4294967232U > 8936U) {
    
#line 2309 
    if (msglevel >= 0) 
#line 2309 
                       printk("\001",(char *)(& (vptr->netdev)->name)); else ;
    
#line 2311 
    ret = -22;
    
#line 2312 
    goto out_0;
  }
  else ;
  
#line 2315 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2315 
  if (tmp_0) 
#line 2315 
             tmp_1 = 0; else 
#line 2315 
                             tmp_1 = 1;
  
#line 2315 
  if (tmp_1) {
    
#line 2316 
    dev->mtu = (unsigned int)new_mtu;
    
#line 2317 
    goto out_0;
  }
  else ;
  
#line 2320 
  if (dev->mtu != (unsigned int)new_mtu) {
    struct velocity_info *tmp_vptr;
    unsigned long flags;
    struct rx_info rx;
    struct tx_info tx;
    
#line 2326 
    tmp_vptr = (struct velocity_info *)kzalloc(2192UL,208U);
    
#line 2327 
    if (tmp_vptr == (struct velocity_info *)0) {
      
#line 2328 
      ret = -12;
      
#line 2329 
      goto out_0;
    }
    else ;
    
#line 2332 
    tmp_vptr->netdev = dev;
    
#line 2333 
    tmp_vptr->pdev = vptr->pdev;
    
#line 2334 
    tmp_vptr->dev = vptr->dev;
    
#line 2335 
    tmp_vptr->options = vptr->options;
    
#line 2336 
    tmp_vptr->tx.numq = vptr->tx.numq;
    
#line 2338 
    ret = velocity_init_rings(tmp_vptr,new_mtu);
    
#line 2339 
    if (ret < 0) 
#line 2340 
                 goto out_free_tmp_vptr_1; else ;
    
#line 2342 
    napi_disable(& vptr->napi);
    
#line 2344 
    ldv___ldv_spin_lock_83(& vptr->lock);
    
#line 2346 
    netif_start_queue(dev);
    
#line 2347 
    velocity_shutdown(vptr);
    
#line 2349 
    rx = vptr->rx;
    
#line 2350 
    tx = vptr->tx;
    
#line 2352 
    vptr->rx = tmp_vptr->rx;
    
#line 2353 
    vptr->tx = tmp_vptr->tx;
    
#line 2355 
    tmp_vptr->rx = rx;
    
#line 2356 
    tmp_vptr->tx = tx;
    
#line 2358 
    dev->mtu = (unsigned int)new_mtu;
    
#line 2360 
    velocity_init_registers(vptr,(enum velocity_init_type)VELOCITY_INIT_COLD);
    
#line 2362 
    velocity_give_many_rx_descs(vptr);
    
#line 2364 
    napi_enable(& vptr->napi);
    
#line 2366 
    writel(33554432U,(void volatile *)(& (vptr->mac_regs)->CR0Set));
    
#line 2367 
    netif_start_queue(dev);
    
#line 2369 
    ldv_spin_unlock_irqrestore_84(& vptr->lock,flags);
    
#line 2371 
    velocity_free_rings(tmp_vptr);
    out_free_tmp_vptr_1: 
#line 2373 
    ;
    
#line 2374 
    kfree((void const *)tmp_vptr);
  }
  else ;
  out_0: 
#line 2376 
  ;
  
#line 2377 
  return ret;
}


#line 2389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_poll_controller(struct net_device *dev)
{
  
#line 2391 
  disable_irq((unsigned int)dev->irq);
  
#line 2392 
  velocity_intr(dev->irq,(void *)dev);
  
#line 2393 
  enable_irq((unsigned int)dev->irq);
  
#line 2394 
  return;
}


#line 2407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_mii_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
{
  int __retres;
  unsigned long flags;
  int err;
  
#line 2409 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 2410 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 2412 
  struct mii_ioctl_data *miidata = if_mii(ifr);
  
#line 2415 
  switch (cmd) {
    unsigned char tmp_1;
    int tmp_2;
    case 35143: 
#line 2416 
    ;
    
#line 2417 
    tmp_1 = readb((void const volatile *)(& regs->MIIADR));
    
#line 2417 
    miidata->phy_id = (unsigned short)((unsigned int)((unsigned short)tmp_1) & 31U);
    
#line 2418 
    goto ldv_53571;
    case 35144: 
#line 2419 
    ;
    
#line 2420 
    tmp_2 = velocity_mii_read(vptr->mac_regs,(unsigned char)((int)((unsigned char)miidata->reg_num) & 31),& miidata->val_out);
    
#line 2420 
    if (tmp_2 < 0) {
      
#line 2421 
      __retres = -110;
      
#line 2421 
      goto return_label;
    }
    else ;
    
#line 2422 
    goto ldv_53571;
    case 35145: 
#line 2423 
    ;
    
#line 2424 
    ldv___ldv_spin_lock_85(& vptr->lock);
    
#line 2425 
    err = velocity_mii_write(vptr->mac_regs,(unsigned char)((int)((unsigned char)miidata->reg_num) & 31),(unsigned short)((int)miidata->val_in));
    
#line 2426 
    ldv_spin_unlock_irqrestore_86(& vptr->lock,flags);
    
#line 2427 
    check_connection_type(vptr->mac_regs);
    
#line 2428 
    if (err != 0) {
      
#line 2429 
      __retres = err;
      
#line 2429 
      goto return_label;
    }
    else ;
    
#line 2430 
    goto ldv_53571;
    default: 
#line 2431 
    ;
    
#line 2432 
    __retres = -95;
    
#line 2432 
    goto return_label;
  }
  ldv_53571: 
#line 2434 
  ;
  
#line 2434 
  __retres = 0;
  return_label: 
#line 2434 
                return __retres;
}


#line 2446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
{
  int ret;
  int tmp_1;
  bool tmp_0;
  int tmp_3;
  bool tmp_2;
  
#line 2448 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 2454 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2454 
  if (tmp_0) 
#line 2454 
             tmp_1 = 0; else 
#line 2454 
                             tmp_1 = 1;
  
#line 2454 
  if (tmp_1) 
#line 2455 
             velocity_set_power_state(vptr,(char)0); else ;
  
#line 2457 
  switch (cmd) {
    case 35143: 
#line 2458 
    ;
    case 35144: 
#line 2459 
    ;
    case 35145: 
#line 2460 
    ;
    
#line 2461 
    ret = velocity_mii_ioctl(dev,rq,cmd);
    
#line 2462 
    goto ldv_53585;
    default: 
#line 2464 
    ;
    
#line 2465 
    ret = -95;
  }
  ldv_53585: 
#line 2467 
  ;
  
#line 2467 
  tmp_2 = netif_running((struct net_device const *)dev);
  
#line 2467 
  if (tmp_2) 
#line 2467 
             tmp_3 = 0; else 
#line 2467 
                             tmp_3 = 1;
  
#line 2467 
  if (tmp_3) 
#line 2468 
             velocity_set_power_state(vptr,(char)3); else ;
  
#line 2471 
  return ret;
}


#line 2484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct net_device_stats *velocity_get_stats(struct net_device *dev)
{
  struct net_device_stats *__retres;
  int tmp_1;
  bool tmp_0;
  
#line 2486 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 2489 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2489 
  if (tmp_0) 
#line 2489 
             tmp_1 = 0; else 
#line 2489 
                             tmp_1 = 1;
  
#line 2489 
  if (tmp_1) {
    
#line 2490 
    __retres = & dev->stats;
    
#line 2490 
    goto return_label;
  }
  else ;
  
#line 2492 
  ldv_spin_lock_irq_87(& vptr->lock);
  
#line 2493 
  velocity_update_hw_mibs(vptr);
  
#line 2494 
  ldv_spin_unlock_irq_88(& vptr->lock);
  
#line 2496 
  dev->stats.rx_packets = (unsigned long)vptr->mib_counter[0];
  
#line 2497 
  dev->stats.rx_errors = (unsigned long)vptr->mib_counter[3];
  
#line 2498 
  dev->stats.rx_length_errors = (unsigned long)vptr->mib_counter[30];
  
#line 2501 
  dev->stats.collisions = (unsigned long)vptr->mib_counter[18];
  
#line 2505 
  dev->stats.rx_crc_errors = (unsigned long)vptr->mib_counter[19];
  
#line 2513 
  __retres = & dev->stats;
  return_label: 
#line 2513 
                return __retres;
}


#line 2523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_close(struct net_device *dev)
{
  int __retres;
  
#line 2525 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 2527 
  napi_disable(& vptr->napi);
  
#line 2528 
  netif_start_queue(dev);
  
#line 2529 
  velocity_shutdown(vptr);
  
#line 2531 
  if (((unsigned long)vptr->flags & 524288UL) != 0UL) 
#line 2532 
                                                      velocity_get_ip(vptr); else ;
  
#line 2534 
  ldv_free_irq_89((unsigned int)dev->irq,(void *)dev);
  
#line 2536 
  velocity_free_rings(vptr);
  
#line 2538 
  vptr->flags &= 4294901759U;
  
#line 2539 
  __retres = 0;
  
#line 2539 
  return __retres;
}


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static netdev_tx_t velocity_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  struct tx_desc *td_ptr;
  struct velocity_td_info *tdinfo;
  unsigned long flags;
  int pktlen;
  int index;
  int prev;
  int tmp_0;
  unsigned char *tmp_1;
  unsigned int tmp_7;
  unsigned char *tmp_3;
  unsigned char *tmp_11;
  
#line 2553 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 2554 
  int qnum = 0;
  
#line 2560 
  int i = 0;
  
#line 2562 
  tmp_0 = skb_padto(skb,60U);
  
#line 2562 
  if (tmp_0 != 0) 
#line 2563 
                  goto out; else ;
  
#line 2567 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2567 
  ;
  
#line 2567 
  if ((unsigned int)((struct skb_shared_info *)tmp_1)->nr_frags > 6U) {
    int tmp_2;
    
#line 2567 
    tmp_2 = __skb_linearize(skb);
    
#line 2567 
    if (tmp_2 != 0) {
      
#line 2568 
      dev_kfree_skb_any(skb);
      
#line 2569 
      __retres = NETDEV_TX_OK;
      
#line 2569 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2572 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2573 
  ;
  
#line 2573 
  if ((unsigned int)((struct skb_shared_info *)tmp_3)->nr_frags == 0U) {
    unsigned int tmp_5;
    {
      unsigned int tmp_4;
      
#line 2573 
      unsigned int __max1 = skb->len;
      
#line 2573 
      unsigned int __max2 = 60U;
      
#line 2573 
      if (__max1 > __max2) 
#line 2573 
                           tmp_4 = __max1; else 
#line 2573 
                                                tmp_4 = __max2;
      
#line 2573 
      tmp_5 = tmp_4;
    }
    
#line 2573 
    tmp_7 = tmp_5;
  }
  else 
#line 2573 
       tmp_7 = skb_headlen((struct sk_buff const *)skb);
  
#line 2572 
  pktlen = (int)tmp_7;
  
#line 2576 
  ldv___ldv_spin_lock_90(& vptr->lock);
  
#line 2578 
  index = vptr->tx.curr[qnum];
  
#line 2579 
  td_ptr = vptr->tx.rings[qnum] + index;
  
#line 2580 
  tdinfo = vptr->tx.infos[qnum] + index;
  
#line 2582 
  td_ptr->tdesc1.TCR = (unsigned char)128U;
  
#line 2583 
  td_ptr->td_buf[0].size = (unsigned short)((unsigned int)td_ptr->td_buf[0].size & 32767U);
  
#line 2589 
  tdinfo->skb = skb;
  
#line 2590 
  tdinfo->skb_dma[0] = dma_map_single_attrs(vptr->dev,(void *)skb->data,(unsigned long)pktlen,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 2592 
  td_ptr->tdesc0.len = (unsigned short)pktlen;
  
#line 2593 
  td_ptr->td_buf[0].pa_low = (unsigned int)tdinfo->skb_dma[0];
  
#line 2594 
  td_ptr->td_buf[0].pa_high = (unsigned short)0U;
  
#line 2595 
  td_ptr->td_buf[0].size = (unsigned short)pktlen;
  
#line 2598 
  i = 0;
  
#line 2598 
  goto ldv_53614;
  ldv_53613: 
#line 2599 
  ;
  {
    unsigned char *tmp_8;
    unsigned int tmp_9;
    unsigned int tmp_10;
    
#line 2599 
    tmp_8 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2599 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_8)->frags[i]);
    
#line 2603 
    tmp_9 = skb_frag_size(frag);
    
#line 2601 
    ;
    
#line 2601 
    ;
    
#line 2601 
    tdinfo->skb_dma[i + 1] = skb_frag_dma_map(vptr->dev,frag,0UL,(unsigned long)tmp_9,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 2606 
    td_ptr->td_buf[i + 1].pa_low = (unsigned int)tdinfo->skb_dma[i + 1];
    
#line 2607 
    td_ptr->td_buf[i + 1].pa_high = (unsigned short)0U;
    
#line 2608 
    tmp_10 = skb_frag_size(frag);
    
#line 2608 
    td_ptr->td_buf[i + 1].size = (unsigned short)tmp_10;
  }
  
#line 2598 
  i += 1;
  ldv_53614: 
#line 2599 
  ;
  
#line 2598 
  tmp_11 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2598 
  ;
  
#line 2598 
  if ((int)((struct skb_shared_info *)tmp_11)->nr_frags > i) 
#line 2600 
                                                             goto ldv_53613; else 
                                                                    
#line 2603 
                                                                    goto ldv_53615;
  ldv_53615: 
#line 2604 
  ;
  
#line 2610 
  tdinfo->nskb_dma = i + 1;
  
#line 2612 
  td_ptr->tdesc1.cmd = (unsigned char)((unsigned int)((unsigned char)(tdinfo->nskb_dma + 1)) * 16U + 3U);
  
#line 2614 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 2615 
    td_ptr->tdesc1.vlan = (unsigned short)((unsigned int)skb->vlan_tci & 61439U);
    
#line 2616 
    td_ptr->tdesc1.TCR = (unsigned char)((unsigned int)td_ptr->tdesc1.TCR | 32U);
  }
  else ;
  
#line 2622 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
    
#line 2623 
    struct iphdr const *ip = ip_hdr((struct sk_buff const *)skb);
    
#line 2624 
    if ((unsigned int)ip->protocol == 6U) 
#line 2625 
                                          td_ptr->tdesc1.TCR = (unsigned char)((unsigned int)td_ptr->tdesc1.TCR | 4U);
    else 
      
#line 2626 
      if ((unsigned int)ip->protocol == 17U) 
#line 2627 
                                             td_ptr->tdesc1.TCR = (unsigned char)((unsigned int)td_ptr->tdesc1.TCR | 8U); else ;
    
#line 2628 
    td_ptr->tdesc1.TCR = (unsigned char)((unsigned int)td_ptr->tdesc1.TCR | 16U);
  }
  else ;
  
#line 2631 
  prev = index + -1;
  
#line 2632 
  if (prev < 0) 
#line 2633 
                prev = vptr->options.numtx + -1; else ;
  
#line 2634 
  td_ptr->tdesc0.len = (unsigned short)((unsigned int)td_ptr->tdesc0.len | 32768U);
  
#line 2635 
  vptr->tx.used[qnum] += 1;
  
#line 2636 
  vptr->tx.curr[qnum] = (index + 1) % vptr->options.numtx;
  
#line 2638 
  if (vptr->options.numtx - vptr->tx.used[qnum] <= 0) 
#line 2639 
                                                      netif_start_queue(dev); else ;
  
#line 2641 
  td_ptr = vptr->tx.rings[qnum] + prev;
  
#line 2642 
  td_ptr->td_buf[0].size = (unsigned short)((unsigned int)td_ptr->td_buf[0].size | 32768U);
  
#line 2643 
  writew((unsigned short)((int)((unsigned short)(4 << qnum * 4))),(void volatile *)(& (vptr->mac_regs)->TDCSRSet));
  
#line 2645 
  ldv_spin_unlock_irqrestore_91(& vptr->lock,flags);
  out: 
#line 2646 
  ;
  
#line 2647 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 2647 
                return __retres;
}


#line 2650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct net_device_ops const velocity_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & velocity_open, .ndo_stop = & velocity_close, .ndo_start_xmit = & velocity_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & velocity_set_multi, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & velocity_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & velocity_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & velocity_get_stats, .ndo_vlan_rx_add_vid = & velocity_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & velocity_vlan_rx_kill_vid, .ndo_poll_controller = & velocity_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_init_info(struct velocity_info *vptr, struct velocity_info_tbl const *info)
{
  
#line 2679 
  vptr->chip_id = info->chip_id;
  
#line 2680 
  vptr->tx.numq = info->txqueue;
  
#line 2681 
  vptr->multicast_limit = 64;
  
#line 2682 
  spinlock_check(& vptr->lock);
  {
    struct lock_class_key __key;
    
#line 2682 
    __raw_spin_lock_init(& vptr->lock.__anonCompField_spinlock_18.rlock,"&(&vptr->lock)->rlock",& __key);
  }
  
#line 2684 
  return;
}


#line 2693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_get_pci_info(struct velocity_info *vptr)
{
  int __retres;
  
#line 2695 
  struct pci_dev *pdev = vptr->pdev;
  
#line 2697 
  pci_set_master(pdev);
  
#line 2699 
  vptr->ioaddr = (unsigned long)pdev->resource[0].start;
  
#line 2700 
  vptr->memaddr = (unsigned long)pdev->resource[1].start;
  
#line 2702 
  if ((pdev->resource[0].flags & 256UL) == 0UL) {
    
#line 2703 
    dev_err((struct device const *)(& pdev->dev),"region #0 is not an I/O resource, aborting.\n");
    
#line 2705 
    __retres = -22;
    
#line 2705 
    goto return_label;
  }
  else ;
  
#line 2708 
  if ((pdev->resource[1].flags & 256UL) != 0UL) {
    
#line 2709 
    dev_err((struct device const *)(& pdev->dev),"region #1 is an I/O resource, aborting.\n");
    
#line 2711 
    __retres = -22;
    
#line 2711 
    goto return_label;
  }
  else ;
  
#line 2714 
  if ((pdev->resource[1].start == 0ULL && pdev->resource[1].end == pdev->resource[1].start) || (pdev->resource[1].end - pdev->resource[1].start) + 1ULL <= 255ULL) {
    
#line 2715 
    dev_err((struct device const *)(& pdev->dev),"region #1 is too small.\n");
    
#line 2716 
    __retres = -22;
    
#line 2716 
    goto return_label;
  }
  else ;
  
#line 2719 
  __retres = 0;
  return_label: 
#line 2719 
                return __retres;
}


#line 2729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_get_platform_info(struct velocity_info *vptr)
{
  int __retres;
  struct resource res;
  int ret;
  void const *tmp;
  resource_size_t tmp_0;
  
#line 2734 
  tmp = of_get_property((struct device_node const *)(vptr->dev)->of_node,"no-eeprom",(int *)0);
  
#line 2734 
  if (tmp != (void const *)0) 
#line 2735 
                              vptr->no_eeprom = 1; else ;
  
#line 2737 
  ret = of_address_to_resource((vptr->dev)->of_node,0,& res);
  
#line 2738 
  if (ret != 0) {
    
#line 2739 
    dev_err((struct device const *)vptr->dev,"unable to find memory address\n");
    
#line 2740 
    __retres = ret;
    
#line 2740 
    goto return_label;
  }
  else ;
  
#line 2743 
  vptr->memaddr = (unsigned long)res.start;
  
#line 2745 
  tmp_0 = resource_size((struct resource const *)(& res));
  
#line 2745 
  if (tmp_0 <= 255ULL) {
    
#line 2746 
    dev_err((struct device const *)vptr->dev,"memory region is too small.\n");
    
#line 2747 
    __retres = -22;
    
#line 2747 
    goto return_label;
  }
  else ;
  
#line 2750 
  __retres = 0;
  return_label: 
#line 2750 
                return __retres;
}


#line 2760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_print_info(struct velocity_info *vptr)
{
  char const *tmp;
  
#line 2762 
  struct net_device *dev = vptr->netdev;
  
#line 2764 
  tmp = get_chip_name(vptr->chip_id);
  
#line 2764 
  ;
  
#line 2764 
  printk("\001",(char *)(& dev->name),tmp);
  
#line 2765 
  printk("\001",(char *)(& dev->name),dev->dev_addr);
  
#line 2767 
  return;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static u32 velocity_get_link(struct net_device *dev)
{
  u32 __retres;
  unsigned char tmp_0;
  
#line 2771 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 2772 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 2773 
  tmp_0 = readb((void const volatile *)(& regs->PHYSR0));
  
#line 2773 
  __retres = (unsigned int)(((int)tmp_0 & 64) != 0);
  
#line 2773 
  return __retres;
}


#line 2785  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_probe(struct device *dev, int irq, struct velocity_info_tbl const *info, enum velocity_bus_type bustype)
{
  int __retres;
  struct net_device *netdev;
  int i;
  char const *drv_string;
  struct velocity_info *vptr;
  struct mac_regs *regs;
  u32 tmp_2;
  u32 tmp_3;
  
#line 2789 
  int first = 1;
  
#line 2795 
  int ret = -12;
  
#line 2800 
  if (velocity_nics > 7) {
    
#line 2801 
    dev_notice((struct device const *)dev,"already found %d NICs.\n",velocity_nics);
    
#line 2802 
    __retres = -19;
    
#line 2802 
    goto return_label;
  }
  else ;
  
#line 2805 
  netdev = ldv_alloc_etherdev_mqs_92(2192,1U,1U);
  
#line 2806 
  if (netdev == (struct net_device *)0) 
#line 2807 
                                        goto out; else ;
  
#line 2811 
  netdev->dev.parent = dev;
  
#line 2812 
  vptr = (struct velocity_info *)netdev_priv((struct net_device const *)netdev);
  
#line 2814 
  if (first != 0) {
    
#line 2815 
    printk("\001",(char *)"VIA Networking Velocity Family Gigabit Ethernet Adapter Driver",(char *)"1.15");
    
#line 2817 
    printk("\001");
    
#line 2818 
    printk("\001");
    
#line 2819 
    first = 0;
  }
  else ;
  
#line 2822 
  netdev->irq = irq;
  
#line 2823 
  vptr->netdev = netdev;
  
#line 2824 
  vptr->dev = dev;
  
#line 2826 
  velocity_init_info(vptr,info);
  
#line 2828 
  if (bustype == (unsigned int)BUS_PCI) {
    struct pci_dev *tmp_0;
    {
      
#line 2829 
      struct device const *__mptr = (struct device const *)dev;
      
#line 2829 
      tmp_0 = (struct pci_dev *)__mptr + 18446744073709551464U;
    }
    
#line 2829 
    vptr->pdev = tmp_0;
    
#line 2831 
    ret = velocity_get_pci_info(vptr);
    
#line 2832 
    if (ret < 0) 
#line 2833 
                 goto err_free_dev; else ;
  }
  else {
    
#line 2835 
    vptr->pdev = (struct pci_dev *)0;
    
#line 2836 
    ret = velocity_get_platform_info(vptr);
    
#line 2837 
    if (ret < 0) 
#line 2838 
                 goto err_free_dev; else ;
  }
  
#line 2841 
  regs = (struct mac_regs *)ioremap((unsigned long long)vptr->memaddr,256UL);
  
#line 2842 
  if (regs == (struct mac_regs *)0) {
    
#line 2843 
    ret = -5;
    
#line 2844 
    goto err_free_dev;
  }
  else ;
  
#line 2847 
  vptr->mac_regs = regs;
  
#line 2848 
  vptr->rev_id = readb((void const volatile *)(& regs->rev_id));
  
#line 2850 
  mac_wol_reset(regs);
  
#line 2852 
  i = 0;
  
#line 2852 
  goto ldv_53659;
  ldv_53658: 
#line 2853 
  ;
  
#line 2853 
  *(netdev->dev_addr + i) = readb((void const volatile *)(& regs->PAR[i]));
  
#line 2852 
  i += 1;
  ldv_53659: 
#line 2853 
  ;
  
#line 2852 
  if (i <= 5) 
#line 2854 
              goto ldv_53658; else 
#line 2857 
                                   goto ldv_53660;
  ldv_53660: 
#line 2858 
  ;
  
#line 2856 
  drv_string = dev_driver_string((struct device const *)dev);
  
#line 2858 
  velocity_get_options(& vptr->options,velocity_nics,drv_string);
  
#line 2864 
  vptr->options.flags &= info->flags;
  
#line 2870 
  vptr->flags = vptr->options.flags | (info->flags & 4278190080U);
  
#line 2872 
  vptr->wol_opts = vptr->options.wol_opts;
  
#line 2873 
  vptr->flags |= 524288U;
  {
    u32 id;
    
#line 2875 
    velocity_mii_read(vptr->mac_regs,(unsigned char)3,(u16 *)(& id));
    
#line 2875 
    velocity_mii_read(vptr->mac_regs,(unsigned char)2,(u16 *)(& id) + 1U);
    
#line 2875 
    tmp_2 = id;
  }
  
#line 2875 
  vptr->phy_id = tmp_2;
  
#line 2877 
  netdev->netdev_ops = & velocity_netdev_ops;
  
#line 2878 
  netdev->ethtool_ops = & velocity_ethtool_ops;
  
#line 2879 
  netif_napi_add(netdev,& vptr->napi,& velocity_poll,64);
  
#line 2882 
  netdev->hw_features = 131ULL;
  
#line 2884 
  netdev->features |= 898ULL;
  
#line 2888 
  ret = ldv_register_netdev_93(netdev);
  
#line 2889 
  if (ret < 0) 
#line 2890 
               goto err_iounmap; else ;
  
#line 2892 
  tmp_3 = velocity_get_link(netdev);
  
#line 2892 
  if (tmp_3 == 0U) {
    
#line 2893 
    netif_carrier_off(netdev);
    
#line 2894 
    vptr->mii_status |= 1U;
  }
  else ;
  
#line 2897 
  velocity_print_info(vptr);
  
#line 2898 
  dev_set_drvdata(vptr->dev,(void *)netdev);
  
#line 2902 
  velocity_set_power_state(vptr,(char)3);
  
#line 2903 
  velocity_nics += 1;
  out: 
#line 2904 
  ;
  
#line 2905 
  __retres = ret;
  
#line 2905 
  goto return_label;
  err_iounmap: 
#line 2907 
  ;
  
#line 2908 
  netif_napi_del(& vptr->napi);
  
#line 2909 
  iounmap((void volatile *)regs);
  err_free_dev: 
#line 2910 
  ;
  
#line 2911 
  ldv_free_netdev_94(netdev);
  
#line 2912 
  goto out;
  return_label: 
#line 2912 
                return __retres;
}


#line 2923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_remove(struct device *dev)
{
  int __retres;
  
#line 2925 
  struct net_device *netdev = dev_get_drvdata((struct device const *)dev);
  
#line 2926 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)netdev);
  
#line 2928 
  ldv_unregister_netdev_95(netdev);
  
#line 2929 
  netif_napi_del(& vptr->napi);
  
#line 2930 
  iounmap((void volatile *)vptr->mac_regs);
  
#line 2931 
  ldv_free_netdev_96(netdev);
  
#line 2932 
  velocity_nics -= 1;
  
#line 2934 
  __retres = 0;
  
#line 2934 
  return __retres;
}


#line 2937  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_pci_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  int ret;
  
#line 2940 
  struct velocity_info_tbl const *info = (struct velocity_info_tbl const *)(& chip_info_table[ent->driver_data]);
  
#line 2944 
  ret = pci_enable_device(pdev);
  
#line 2945 
  if (ret < 0) {
    
#line 2946 
    __retres = ret;
    
#line 2946 
    goto return_label;
  }
  else ;
  
#line 2948 
  ret = pci_request_regions(pdev,"via-velocity");
  
#line 2949 
  if (ret < 0) {
    
#line 2950 
    dev_err((struct device const *)(& pdev->dev),"No PCI resources.\n");
    
#line 2951 
    goto fail1;
  }
  else ;
  
#line 2954 
  ret = velocity_probe(& pdev->dev,(int)pdev->irq,info,(enum velocity_bus_type)BUS_PCI);
  
#line 2955 
  if (ret == 0) {
    
#line 2956 
    __retres = 0;
    
#line 2956 
    goto return_label;
  }
  else ;
  
#line 2958 
  pci_release_regions(pdev);
  fail1: 
#line 2959 
  ;
  
#line 2960 
  pci_disable_device(pdev);
  
#line 2961 
  __retres = ret;
  return_label: 
#line 2961 
                return __retres;
}


#line 2964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_pci_remove(struct pci_dev *pdev)
{
  
#line 2966 
  velocity_remove(& pdev->dev);
  
#line 2968 
  pci_release_regions(pdev);
  
#line 2969 
  pci_disable_device(pdev);
  
#line 2970 
  return;
}


#line 2972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_platform_probe(struct platform_device *pdev)
{
  int __retres;
  struct of_device_id const *of_id;
  struct velocity_info_tbl const *info;
  int irq;
  unsigned int tmp;
  int tmp_0;
  
#line 2978 
  of_id = of_match_device((struct of_device_id const *)(& velocity_of_ids),(struct device const *)(& pdev->dev));
  
#line 2979 
  if (of_id == (struct of_device_id const *)0) {
    
#line 2980 
    __retres = -22;
    
#line 2980 
    goto return_label;
  }
  else ;
  
#line 2981 
  info = (struct velocity_info_tbl const *)of_id->data;
  
#line 2983 
  tmp = irq_of_parse_and_map(pdev->dev.of_node,0);
  
#line 2983 
  irq = (int)tmp;
  
#line 2984 
  if (irq == 0) {
    
#line 2985 
    __retres = -22;
    
#line 2985 
    goto return_label;
  }
  else ;
  
#line 2987 
  tmp_0 = velocity_probe(& pdev->dev,irq,info,(enum velocity_bus_type)BUS_PLATFORM);
  
#line 2987 
  __retres = tmp_0;
  return_label: 
#line 2987 
                return __retres;
}


#line 2990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_platform_remove(struct platform_device *pdev)
{
  int __retres;
  
#line 2992 
  velocity_remove(& pdev->dev);
  
#line 2994 
  __retres = 0;
  
#line 2994 
  return __retres;
}


#line 3006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static u16 wol_calc_crc(int size, u8 *pattern, u8 *mask_pattern)
{
  u16 __retres;
  u8 mask;
  int i;
  int j;
  u32 tmp_2;
  
#line 3008 
  u16 crc = (unsigned short)65535U;
  
#line 3012 
  i = 0;
  
#line 3012 
  goto ldv_53703;
  ldv_53702: 
#line 3013 
  ;
  
#line 3013 
  mask = *(mask_pattern + i);
  
#line 3016 
  if ((unsigned int)mask == 0U) 
#line 3017 
                                goto ldv_53697; else ;
  
#line 3019 
  j = 0;
  
#line 3019 
  goto ldv_53700;
  ldv_53699: 
#line 3020 
  ;
  
#line 3020 
  if (((int)mask & 1) == 0) {
    
#line 3021 
    mask = (unsigned char)((int)mask >> 1);
    
#line 3022 
    goto ldv_53698;
  }
  else ;
  
#line 3024 
  mask = (unsigned char)((int)mask >> 1);
  
#line 3025 
  crc = crc_ccitt((unsigned short)((int)crc),(u8 const *)(pattern + (i * 8 + j)),1UL);
  ldv_53698: 
#line 3026 
  ;
  
#line 3019 
  j += 1;
  ldv_53700: 
#line 3020 
  ;
  
#line 3019 
  if (j <= 7) 
#line 3021 
              goto ldv_53699; else 
#line 3024 
                                   goto ldv_53701;
  ldv_53701: 
#line 3025 
  ;
  ldv_53697: 
#line 3026 
  ;
  
#line 3012 
  i += 1;
  ldv_53703: 
#line 3013 
  ;
  
#line 3012 
  if (i < size) 
#line 3014 
                goto ldv_53702; else 
#line 3017 
                                     goto ldv_53704;
  ldv_53704: 
#line 3018 
  ;
  
#line 3029 
  crc = (unsigned short)(~ ((int)crc));
  {
    u32 tmp_1;
    
#line 3030 
    u32 __x = (unsigned int)crc;
    
#line 3030 
    if (0 != 0) {
      u32 tmp;
      {
        
#line 3030 
        u32 __x_0 = __x_0;
        
#line 3030 
        __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
        
#line 3030 
        __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
        
#line 3030 
        __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
        
#line 3030 
        __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
        
#line 3030 
        __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
        
#line 3030 
        tmp = __x_0;
      }
      
#line 3030 
      tmp_1 = tmp;
    }
    else 
#line 3030 
         tmp_1 = __bitrev32(__x);
    
#line 3030 
    tmp_2 = tmp_1;
  }
  
#line 3030 
  __retres = (unsigned short)(tmp_2 >> 16);
  
#line 3030 
  return __retres;
}


#line 3042  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_set_wol(struct velocity_info *vptr)
{
  int __retres;
  u8 buf[256U];
  int i;
  unsigned char tmp;
  unsigned char tmp_0;
  unsigned char tmp_1;
  unsigned char tmp_2;
  unsigned char tmp_3;
  unsigned char tmp_4;
  
#line 3044 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 3045 
  enum speed_opt spd_dpx = vptr->options.spd_dpx;
  
#line 3049 
  u32 mask_pattern[2U][4U] = {{2109440U, 960U, 0U, 0U}, {4294963200U, 4294967295U, 4294967295U, 65535U}};
  
#line 3054 
  writew((unsigned short)65535,(void volatile *)(& regs->WOLCRClr));
  
#line 3055 
  writeb((unsigned char)48,(void volatile *)(& regs->WOLCFGSet));
  
#line 3056 
  writew((unsigned short)512,(void volatile *)(& regs->WOLCRSet));
  
#line 3063 
  if (((unsigned long)vptr->wol_opts & 4UL) != 0UL) 
#line 3064 
                                                    writew((unsigned short)256,(void volatile *)(& regs->WOLCRSet)); else ;
  
#line 3066 
  if (((unsigned long)vptr->wol_opts & 2UL) != 0UL) {
    u16 crc;
    
#line 3067 
    struct arp_packet *arp = (struct arp_packet *)(& buf);
    
#line 3069 
    memset((void *)(& buf),0,49UL);
    
#line 3071 
    i = 0;
    
#line 3071 
    goto ldv_53720;
    ldv_53719: 
#line 3072 
    ;
    
#line 3072 
    writel(mask_pattern[0][i],(void volatile *)(& regs->ByteMask[0][i]));
    
#line 3071 
    i += 1;
    ldv_53720: 
#line 3072 
    ;
    
#line 3071 
    if (i <= 3) 
#line 3073 
                goto ldv_53719; else 
#line 3076 
                                     goto ldv_53721;
    ldv_53721: 
#line 3077 
    ;
    
#line 3074 
    arp->type = (unsigned short)1544U;
    
#line 3075 
    arp->ar_op = (unsigned short)256U;
    
#line 3077 
    memcpy((void *)(& arp->ar_tip),(void const *)(& vptr->ip_addr),4UL);
    
#line 3079 
    crc = wol_calc_crc(6,(u8 *)(& buf),(u8 *)(& mask_pattern[0][0]));
    
#line 3082 
    writew((unsigned short)((int)crc),(void volatile *)(& regs->PatternCRC[0]));
    
#line 3083 
    writew((unsigned short)1,(void volatile *)(& regs->WOLCRSet));
  }
  else ;
  
#line 3086 
  ;
  
#line 3086 
  tmp = readb((void const volatile *)(& regs->PWCFGSet));
  
#line 3086 
  writeb((unsigned char)((int)((unsigned int)tmp | 32U)),(void volatile *)(& regs->PWCFGSet));
  
#line 3087 
  ;
  
#line 3087 
  tmp_0 = readb((void const volatile *)(& regs->PWCFGSet));
  
#line 3087 
  writeb((unsigned char)((int)((unsigned int)tmp_0 | 1U)),(void volatile *)(& regs->PWCFGSet));
  
#line 3089 
  writew((unsigned short)4095,(void volatile *)(& regs->WOLSRClr));
  
#line 3091 
  if (spd_dpx == (unsigned int)SPD_DPX_1000_FULL) 
#line 3092 
                                                  goto mac_done; else ;
  
#line 3094 
  if (spd_dpx != (unsigned int)SPD_DPX_AUTO) 
#line 3095 
                                             goto advertise_done; else ;
  
#line 3097 
  if (((unsigned long)vptr->mii_status & 32UL) != 0UL) {
    
#line 3098 
    if (((unsigned long)vptr->phy_id & 18446744073709551600UL) == 1033232UL) {
      u16 w;
      
#line 3099 
      velocity_mii_read(vptr->mac_regs,(unsigned char)28,& w);
      
#line 3099 
      w = (unsigned short)((unsigned int)w | 4U);
      
#line 3099 
      velocity_mii_write(vptr->mac_regs,(unsigned char)28,(unsigned short)((int)w));
    }
    else ;
    {
      u16 w_0;
      
#line 3101 
      velocity_mii_read(vptr->mac_regs,(unsigned char)9,& w_0);
      
#line 3101 
      w_0 = (unsigned short)((unsigned int)w_0 & 64767U);
      
#line 3101 
      velocity_mii_write(vptr->mac_regs,(unsigned char)9,(unsigned short)((int)w_0));
    }
  }
  else ;
  
#line 3104 
  if (((unsigned long)vptr->mii_status & 8UL) != 0UL) {
    u16 w_1;
    
#line 3105 
    velocity_mii_read(vptr->mac_regs,(unsigned char)0,& w_1);
    
#line 3105 
    w_1 = (unsigned short)((unsigned int)w_1 | 512U);
    
#line 3105 
    velocity_mii_write(vptr->mac_regs,(unsigned char)0,(unsigned short)((int)w_1));
  }
  else ;
  advertise_done: 
#line 3107 
  ;
  
#line 3108 
  ;
  
#line 3108 
  tmp_1 = readb((void const volatile *)(& regs->CHIPGCR));
  
#line 3108 
  writeb((unsigned char)((int)((unsigned int)tmp_1 | 16U)),(void volatile *)(& regs->CHIPGCR));
  {
    u8 GCR;
    
#line 3112 
    GCR = readb((void const volatile *)(& regs->CHIPGCR));
    
#line 3113 
    GCR = (unsigned char)(((int)GCR & 63) | 64);
    
#line 3114 
    writeb((unsigned char)((int)GCR),(void volatile *)(& regs->CHIPGCR));
  }
  mac_done: 
#line 3117 
  ;
  
#line 3118 
  ;
  
#line 3118 
  tmp_2 = readb((void const volatile *)(& regs->ISR));
  
#line 3118 
  writeb((unsigned char)((int)tmp_2),(void volatile *)(& regs->ISR));
  
#line 3120 
  ;
  
#line 3120 
  tmp_3 = readb((void const volatile *)(& regs->STICKHW));
  
#line 3120 
  writeb((unsigned char)((int)((unsigned int)tmp_3 | 16U)),(void volatile *)(& regs->STICKHW));
  
#line 3122 
  ;
  
#line 3122 
  tmp_4 = readb((void const volatile *)(& regs->STICKHW));
  
#line 3122 
  writeb((unsigned char)((int)((unsigned int)tmp_4 | 3U)),(void volatile *)(& regs->STICKHW));
  
#line 3124 
  __retres = 0;
  
#line 3124 
  return __retres;
}


#line 3137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_save_context(struct velocity_info *vptr, struct velocity_context *context)
{
  u16 i;
  
#line 3139 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 3141 
  u8 *ptr = (u8 *)regs;
  
#line 3143 
  i = (unsigned short)0U;
  
#line 3143 
  goto ldv_53736;
  ldv_53735: 
#line 3144 
  ;
  
#line 3144 
  *((u32 *)(& context->mac_reg) + (int)i) = readl((void const volatile *)(ptr + (int)i));
  
#line 3143 
  i = (unsigned short)((unsigned int)i + 4U);
  ldv_53736: 
#line 3144 
  ;
  
#line 3143 
  if ((unsigned int)i <= 11U) 
#line 3145 
                              goto ldv_53735; else 
#line 3148 
                                                   goto ldv_53737;
  ldv_53737: 
#line 3149 
  ;
  
#line 3146 
  i = (unsigned short)16U;
  
#line 3146 
  goto ldv_53739;
  ldv_53738: 
#line 3147 
  ;
  
#line 3147 
  *((u32 *)(& context->mac_reg) + (int)i) = readl((void const volatile *)(ptr + (int)i));
  
#line 3146 
  i = (unsigned short)((unsigned int)i + 4U);
  ldv_53739: 
#line 3147 
  ;
  
#line 3146 
  if ((unsigned int)i <= 51U) 
#line 3148 
                              goto ldv_53738; else 
#line 3151 
                                                   goto ldv_53740;
  ldv_53740: 
#line 3152 
  ;
  
#line 3149 
  i = (unsigned short)56U;
  
#line 3149 
  goto ldv_53742;
  ldv_53741: 
#line 3150 
  ;
  
#line 3150 
  *((u32 *)(& context->mac_reg) + (int)i) = readl((void const volatile *)(ptr + (int)i));
  
#line 3149 
  i = (unsigned short)((unsigned int)i + 4U);
  ldv_53742: 
#line 3150 
  ;
  
#line 3149 
  if ((unsigned int)i <= 95U) 
#line 3151 
                              goto ldv_53741; else 
#line 3154 
                                                   goto ldv_53743;
  ldv_53743: 
#line 3155 
  ;
  
#line 3156 
  return;
}


#line 3154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_suspend(struct device *dev)
{
  int __retres;
  unsigned long flags;
  int tmp_2;
  bool tmp_1;
  
#line 3156 
  struct net_device *netdev = dev_get_drvdata((struct device const *)dev);
  
#line 3157 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)netdev);
  
#line 3160 
  tmp_1 = netif_running((struct net_device const *)vptr->netdev);
  
#line 3160 
  if (tmp_1) 
#line 3160 
             tmp_2 = 0; else 
#line 3160 
                             tmp_2 = 1;
  
#line 3160 
  if (tmp_2) {
    
#line 3161 
    __retres = 0;
    
#line 3161 
    goto return_label;
  }
  else ;
  
#line 3163 
  netif_device_detach(vptr->netdev);
  
#line 3165 
  ldv___ldv_spin_lock_97(& vptr->lock);
  
#line 3166 
  if (vptr->pdev != (struct pci_dev *)0) 
#line 3167 
                                         pci_save_state(vptr->pdev); else ;
  
#line 3169 
  if (((unsigned long)vptr->flags & 524288UL) != 0UL) {
    
#line 3170 
    velocity_get_ip(vptr);
    
#line 3171 
    velocity_save_context(vptr,& vptr->context);
    
#line 3172 
    velocity_shutdown(vptr);
    
#line 3173 
    velocity_set_wol(vptr);
    
#line 3174 
    if (vptr->pdev != (struct pci_dev *)0) 
#line 3175 
                                           pci_enable_wake(vptr->pdev,3,(_Bool)1); else ;
    
#line 3176 
    velocity_set_power_state(vptr,(char)3);
  }
  else {
    
#line 3178 
    velocity_save_context(vptr,& vptr->context);
    
#line 3179 
    velocity_shutdown(vptr);
    
#line 3180 
    if (vptr->pdev != (struct pci_dev *)0) 
#line 3181 
                                           pci_disable_device(vptr->pdev); else ;
    
#line 3182 
    velocity_set_power_state(vptr,(char)3);
  }
  
#line 3185 
  ldv_spin_unlock_irqrestore_98(& vptr->lock,flags);
  
#line 3186 
  __retres = 0;
  return_label: 
#line 3186 
                return __retres;
}


#line 3197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_restore_context(struct velocity_info *vptr, struct velocity_context *context)
{
  int i;
  
#line 3199 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 3201 
  u8 *ptr = (u8 *)regs;
  
#line 3203 
  i = 0;
  
#line 3203 
  goto ldv_53758;
  ldv_53757: 
#line 3204 
  ;
  
#line 3204 
  writel(*((u32 *)(& context->mac_reg) + i),(void volatile *)(ptr + i));
  
#line 3203 
  i += 4;
  ldv_53758: 
#line 3204 
  ;
  
#line 3203 
  if (i <= 7) 
#line 3205 
              goto ldv_53757; else 
#line 3208 
                                   goto ldv_53759;
  ldv_53759: 
#line 3209 
  ;
  
#line 3207 
  i = 9;
  
#line 3207 
  goto ldv_53761;
  ldv_53760: 
#line 3208 
  ;
  
#line 3209 
  writeb((unsigned char)(~ ((int)*((u8 *)(& context->mac_reg) + i))),(void volatile *)(ptr + ((unsigned int)i + 4U)));
  
#line 3211 
  writeb((unsigned char)((int)*((u8 *)(& context->mac_reg) + i)),(void volatile *)(ptr + i));
  
#line 3207 
  i += 1;
  ldv_53761: 
#line 3208 
  ;
  
#line 3207 
  if (i <= 11) 
#line 3209 
               goto ldv_53760; else 
#line 3212 
                                    goto ldv_53762;
  ldv_53762: 
#line 3213 
  ;
  
#line 3214 
  i = 16;
  
#line 3214 
  goto ldv_53764;
  ldv_53763: 
#line 3215 
  ;
  
#line 3215 
  writel(*((u32 *)(& context->mac_reg) + i),(void volatile *)(ptr + i));
  
#line 3214 
  i += 4;
  ldv_53764: 
#line 3215 
  ;
  
#line 3214 
  if (i <= 39) 
#line 3216 
               goto ldv_53763; else 
#line 3219 
                                    goto ldv_53765;
  ldv_53765: 
#line 3220 
  ;
  
#line 3217 
  i = 56;
  
#line 3217 
  goto ldv_53767;
  ldv_53766: 
#line 3218 
  ;
  
#line 3218 
  writel(*((u32 *)(& context->mac_reg) + i),(void volatile *)(ptr + i));
  
#line 3217 
  i += 4;
  ldv_53767: 
#line 3218 
  ;
  
#line 3217 
  if (i <= 95) 
#line 3219 
               goto ldv_53766; else 
#line 3222 
                                    goto ldv_53768;
  ldv_53768: 
#line 3223 
  ;
  
#line 3220 
  i = 48;
  
#line 3220 
  goto ldv_53770;
  ldv_53769: 
#line 3221 
  ;
  
#line 3221 
  writeb((unsigned char)((int)*((u8 *)(& context->mac_reg) + i)),(void volatile *)(ptr + i));
  
#line 3220 
  i += 1;
  ldv_53770: 
#line 3221 
  ;
  
#line 3220 
  if (i <= 50) 
#line 3222 
               goto ldv_53769; else 
#line 3225 
                                    goto ldv_53771;
  ldv_53771: 
#line 3226 
  ;
  
#line 3227 
  return;
}


#line 3224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_resume(struct device *dev)
{
  int __retres;
  unsigned long flags;
  int i;
  int tmp_2;
  bool tmp_1;
  
#line 3226 
  struct net_device *netdev = dev_get_drvdata((struct device const *)dev);
  
#line 3227 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)netdev);
  
#line 3231 
  tmp_1 = netif_running((struct net_device const *)vptr->netdev);
  
#line 3231 
  if (tmp_1) 
#line 3231 
             tmp_2 = 0; else 
#line 3231 
                             tmp_2 = 1;
  
#line 3231 
  if (tmp_2) {
    
#line 3232 
    __retres = 0;
    
#line 3232 
    goto return_label;
  }
  else ;
  
#line 3234 
  velocity_set_power_state(vptr,(char)0);
  
#line 3236 
  if (vptr->pdev != (struct pci_dev *)0) {
    
#line 3237 
    pci_enable_wake(vptr->pdev,0,(_Bool)0);
    
#line 3238 
    pci_restore_state(vptr->pdev);
  }
  else ;
  
#line 3241 
  mac_wol_reset(vptr->mac_regs);
  
#line 3243 
  ldv___ldv_spin_lock_99(& vptr->lock);
  
#line 3244 
  velocity_restore_context(vptr,& vptr->context);
  
#line 3245 
  velocity_init_registers(vptr,(enum velocity_init_type)VELOCITY_INIT_WOL);
  
#line 3246 
  writel(33554432U,(void volatile *)(& (vptr->mac_regs)->CR0Clr));
  
#line 3248 
  velocity_tx_srv(vptr);
  
#line 3250 
  i = 0;
  
#line 3250 
  goto ldv_53780;
  ldv_53779: 
#line 3251 
  ;
  
#line 3251 
  if (vptr->tx.used[i] != 0) 
#line 3252 
                             writew((unsigned short)((int)((unsigned short)(4 << i * 4))),(void volatile *)(& (vptr->mac_regs)->TDCSRSet)); else ;
  
#line 3250 
  i += 1;
  ldv_53780: 
#line 3251 
  ;
  
#line 3250 
  if (vptr->tx.numq > i) 
#line 3252 
                         goto ldv_53779; else 
#line 3255 
                                              goto ldv_53781;
  ldv_53781: 
#line 3256 
  ;
  
#line 3255 
  writel(33554432U,(void volatile *)(& (vptr->mac_regs)->CR0Set));
  
#line 3256 
  ldv_spin_unlock_irqrestore_100(& vptr->lock,flags);
  
#line 3257 
  netif_device_attach(vptr->netdev);
  
#line 3259 
  __retres = 0;
  return_label: 
#line 3259 
                return __retres;
}


#line 3263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct dev_pm_ops const velocity_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & velocity_suspend, .resume = & velocity_resume, .freeze = & velocity_suspend, .thaw = & velocity_resume, .poweroff = & velocity_suspend, .restore = & velocity_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 3269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct pci_driver velocity_pci_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "via-velocity", .id_table = (struct pci_device_id const *)(& velocity_pci_id_table), .probe = & velocity_pci_probe, .remove = & velocity_pci_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & velocity_pm_ops, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 3279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct platform_driver velocity_platform_driver = {.probe = & velocity_platform_probe, .remove = & velocity_platform_remove, .shutdown = (void (*)(struct platform_device *))0, .suspend = (int (*)(struct platform_device *, pm_message_t ))0, .resume = (int (*)(struct platform_device *))0, .driver = {.name = "via-velocity", .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)(& velocity_of_ids), .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & velocity_pm_ops, .p = (struct driver_private *)0}, .id_table = (struct platform_device_id const *)0, .prevent_deferred_probe = (_Bool)0};

#line 3296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_ethtool_up(struct net_device *dev)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 3298 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 3299 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 3299 
  if (tmp_0) 
#line 3299 
             tmp_1 = 0; else 
#line 3299 
                             tmp_1 = 1;
  
#line 3299 
  if (tmp_1) 
#line 3300 
             velocity_set_power_state(vptr,(char)0); else ;
  
#line 3301 
  __retres = 0;
  
#line 3301 
  return __retres;
}


#line 3311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_ethtool_down(struct net_device *dev)
{
  int tmp_1;
  bool tmp_0;
  
#line 3313 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 3314 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 3314 
  if (tmp_0) 
#line 3314 
             tmp_1 = 0; else 
#line 3314 
                             tmp_1 = 1;
  
#line 3314 
  if (tmp_1) 
#line 3315 
             velocity_set_power_state(vptr,(char)3); else ;
  
#line 3316 
  return;
}


#line 3318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  u32 status;
  unsigned char tmp_0;
  
#line 3321 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 3322 
  struct mac_regs *regs = vptr->mac_regs;
  
#line 3324 
  status = check_connection_type(vptr->mac_regs);
  
#line 3326 
  cmd->supported = 255U;
  
#line 3335 
  cmd->advertising = 192U;
  
#line 3336 
  if (vptr->options.spd_dpx == (unsigned int)SPD_DPX_AUTO) 
#line 3337 
                                                           cmd->advertising |= 63U;
  else {
    
#line 3345 
    switch ((unsigned int)vptr->options.spd_dpx) {
      case (unsigned int)5: 
#line 3346 
      ;
      
#line 3347 
      cmd->advertising |= 32U;
      
#line 3348 
      goto ldv_53801;
      case (unsigned int)1: 
#line 3349 
      ;
      
#line 3350 
      cmd->advertising |= 4U;
      
#line 3351 
      goto ldv_53801;
      case (unsigned int)2: 
#line 3352 
      ;
      
#line 3353 
      cmd->advertising |= 8U;
      
#line 3354 
      goto ldv_53801;
      case (unsigned int)3: 
#line 3355 
      ;
      
#line 3356 
      cmd->advertising |= 1U;
      
#line 3357 
      goto ldv_53801;
      case (unsigned int)4: 
#line 3358 
      ;
      
#line 3359 
      cmd->advertising |= 2U;
      
#line 3360 
      goto ldv_53801;
      default: 
#line 3361 
      ;
      
#line 3362 
      goto ldv_53801;
    }
    ldv_53801: 
#line 3364 
    ;
  }
  
#line 3366 
  if (((unsigned long)status & 8UL) != 0UL) 
#line 3367 
                                            ethtool_cmd_speed_set(cmd,1000U);
  else 
    
#line 3368 
    if (((unsigned long)status & 4UL) != 0UL) 
#line 3369 
                                              ethtool_cmd_speed_set(cmd,100U); else 
                                                                    
#line 3371 
                                                                    ethtool_cmd_speed_set(cmd,10U);
  
#line 3373 
  cmd->autoneg = (unsigned char)((unsigned int)((unsigned char)((unsigned long)status >> 5)) & 1U);
  
#line 3374 
  cmd->port = (unsigned char)0U;
  
#line 3375 
  cmd->transceiver = (unsigned char)0U;
  
#line 3376 
  tmp_0 = readb((void const volatile *)(& regs->MIIADR));
  
#line 3376 
  cmd->phy_address = (unsigned char)((unsigned int)tmp_0 & 31U);
  
#line 3378 
  if (((unsigned long)status & 16UL) != 0UL) 
#line 3379 
                                             cmd->duplex = (unsigned char)1U; else 
                                                                    
#line 3381 
                                                                    cmd->duplex = (unsigned char)0U;
  
#line 3383 
  __retres = 0;
  
#line 3383 
  return __retres;
}


#line 3386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  u32 curr_status;
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  unsigned int tmp_4;
  unsigned int tmp_5;
  
#line 3389 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 3390 
  u32 speed = ethtool_cmd_speed((struct ethtool_cmd const *)cmd);
  
#line 3392 
  u32 new_status = 0U;
  
#line 3393 
  int ret = 0;
  
#line 3395 
  curr_status = check_connection_type(vptr->mac_regs);
  
#line 3396 
  curr_status &= 4294967294U;
  
#line 3398 
  if ((unsigned int)cmd->autoneg != 0U) 
#line 3398 
                                        tmp_1 = 32U; else 
#line 3398 
                                                          tmp_1 = 0U;
  
#line 3398 
  new_status = tmp_1 | new_status;
  
#line 3399 
  if (speed == 1000U) 
#line 3399 
                      tmp_2 = 8U; else 
#line 3399 
                                       tmp_2 = 0U;
  
#line 3399 
  new_status = tmp_2 | new_status;
  
#line 3400 
  if (speed == 100U) 
#line 3400 
                     tmp_3 = 4U; else 
#line 3400 
                                      tmp_3 = 0U;
  
#line 3400 
  new_status = tmp_3 | new_status;
  
#line 3401 
  if (speed == 10U) 
#line 3401 
                    tmp_4 = 2U; else 
#line 3401 
                                     tmp_4 = 0U;
  
#line 3401 
  new_status = tmp_4 | new_status;
  
#line 3402 
  if ((unsigned int)cmd->duplex == 1U) 
#line 3402 
                                       tmp_5 = 16U; else 
#line 3402 
                                                         tmp_5 = 0U;
  
#line 3402 
  new_status = tmp_5 | new_status;
  
#line 3404 
  if (((unsigned long)new_status & 32UL) != 0UL && (curr_status | 32U) != new_status) 
    
#line 3406 
    ret = -22;
  else {
    enum speed_opt spd_dpx;
    
#line 3410 
    if (((unsigned long)new_status & 32UL) != 0UL) 
#line 3411 
                                                   spd_dpx = SPD_DPX_AUTO;
    else 
      
#line 3412 
      if (((unsigned long)new_status & 8UL) != 0UL && ((unsigned long)new_status & 16UL) != 0UL) 
        
#line 3414 
        spd_dpx = SPD_DPX_1000_FULL;
      else 
        
#line 3415 
        if (((unsigned long)new_status & 4UL) != 0UL) {
          int tmp_6;
          
#line 3417 
          if (((unsigned long)new_status & 16UL) != 0UL) 
#line 3417 
                                                         tmp_6 = 2; else 
                                                                    
#line 3417 
                                                                    tmp_6 = 1;
          
#line 3416 
          spd_dpx = (enum speed_opt)tmp_6;
        }
        else 
          
#line 3418 
          if (((unsigned long)new_status & 2UL) != 0UL) {
            int tmp_7;
            
#line 3420 
            if (((unsigned long)new_status & 16UL) != 0UL) 
#line 3420 
                                                           tmp_7 = 4; else 
                                                                    
#line 3420 
                                                                    tmp_7 = 3;
            
#line 3419 
            spd_dpx = (enum speed_opt)tmp_7;
          }
          else {
            
#line 3422 
            __retres = -95;
            
#line 3422 
            goto return_label;
          }
    
#line 3424 
    vptr->options.spd_dpx = spd_dpx;
    
#line 3426 
    velocity_set_media_mode(vptr,new_status);
  }
  
#line 3429 
  __retres = ret;
  return_label: 
#line 3429 
                return __retres;
}


#line 3432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  
#line 3434 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 3436 
  strlcpy((char *)(& info->driver),"via-velocity",32UL);
  
#line 3437 
  strlcpy((char *)(& info->version),"1.15",32UL);
  
#line 3438 
  if (vptr->pdev != (struct pci_dev *)0) {
    char const *tmp_0;
    
#line 3439 
    tmp_0 = pci_name((struct pci_dev const *)vptr->pdev);
    
#line 3439 
    ;
    
#line 3439 
    strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  }
  else 
#line 3442 
       strlcpy((char *)(& info->bus_info),"platform",32UL);
  
#line 3443 
  return;
}


#line 3445  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_ethtool_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  
#line 3447 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 3448 
  wol->supported = 51U;
  
#line 3449 
  wol->wolopts |= 32U;
  
#line 3454 
  if (((unsigned long)vptr->wol_opts & 4UL) != 0UL) 
#line 3455 
                                                    wol->wolopts |= 2U; else ;
  
#line 3456 
  if (((unsigned long)vptr->wol_opts & 2UL) != 0UL) 
#line 3457 
                                                    wol->wolopts |= 16U; else ;
  
#line 3458 
  memcpy((void *)(& wol->sopass),(void const *)(& vptr->wol_passwd),6UL);
  
#line 3459 
  return;
}


#line 3461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_ethtool_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  int __retres;
  
#line 3463 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 3465 
  if ((wol->wolopts & 51U) == 0U) {
    
#line 3466 
    __retres = -14;
    
#line 3466 
    goto return_label;
  }
  else ;
  
#line 3467 
  vptr->wol_opts = 0;
  
#line 3476 
  if ((wol->wolopts & 32U) != 0U) {
    
#line 3477 
    vptr->wol_opts = vptr->wol_opts;
    
#line 3478 
    vptr->flags |= 524288U;
  }
  else ;
  
#line 3480 
  if ((wol->wolopts & 2U) != 0U) {
    
#line 3481 
    vptr->wol_opts |= 4;
    
#line 3482 
    vptr->flags |= 524288U;
  }
  else ;
  
#line 3484 
  if ((wol->wolopts & 16U) != 0U) {
    
#line 3485 
    vptr->wol_opts |= 2;
    
#line 3486 
    vptr->flags |= 524288U;
  }
  else ;
  
#line 3488 
  memcpy((void *)(& vptr->wol_passwd),(void const *)(& wol->sopass),6UL);
  
#line 3489 
  __retres = 0;
  return_label: 
#line 3489 
                return __retres;
}


#line 3492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static u32 velocity_get_msglevel(struct net_device *dev)
{
  u32 __retres;
  
#line 3494 
  __retres = (unsigned int)msglevel;
  
#line 3494 
  return __retres;
}


#line 3497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_set_msglevel(struct net_device *dev, u32 value)
{
  
#line 3499 
  msglevel = (int)value;
  
#line 3500 
  return;
}


#line 3502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int get_pending_timer_val(int val)
{
  int __retres;
  
#line 3504 
  int mult_bits = val >> 6;
  
#line 3505 
  int mult = 1;
  
#line 3507 
  switch (mult_bits) {
    case 1: 
#line 3509 
    ;
    
#line 3510 
    mult = 4;
    
#line 3510 
    goto ldv_53845;
    case 2: 
#line 3511 
    ;
    
#line 3512 
    mult = 16;
    
#line 3512 
    goto ldv_53845;
    case 3: 
#line 3513 
    ;
    
#line 3514 
    mult = 64;
    
#line 3514 
    goto ldv_53845;
    case 0: 
#line 3515 
    ;
    default: 
#line 3516 
    ;
    
#line 3517 
    goto ldv_53845;
  }
  ldv_53845: 
#line 3520 
  ;
  
#line 3520 
  __retres = (val & 63) * mult;
  
#line 3520 
  return __retres;
}


#line 3523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void set_pending_timer_val(int *val, u32 us)
{
  
#line 3525 
  u8 mult = (unsigned char)0U;
  
#line 3526 
  u8 shift = (unsigned char)0U;
  
#line 3528 
  if (us > 62U) {
    
#line 3529 
    mult = (unsigned char)1U;
    
#line 3530 
    shift = (unsigned char)2U;
  }
  else ;
  
#line 3532 
  if (us > 251U) {
    
#line 3533 
    mult = (unsigned char)2U;
    
#line 3534 
    shift = (unsigned char)4U;
  }
  else ;
  
#line 3536 
  if (us > 1007U) {
    
#line 3537 
    mult = (unsigned char)3U;
    
#line 3538 
    shift = (unsigned char)6U;
  }
  else ;
  
#line 3541 
  *val = (int)((unsigned int)((int)mult << 6) | ((us >> (int)shift) & 63U));
  
#line 3542 
  return;
}


#line 3545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_get_coalesce(struct net_device *dev, struct ethtool_coalesce *ecmd)
{
  int __retres;
  int tmp_0;
  int tmp_1;
  
#line 3548 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 3550 
  ecmd->tx_max_coalesced_frames = (unsigned int)vptr->options.tx_intsup;
  
#line 3551 
  ecmd->rx_max_coalesced_frames = (unsigned int)vptr->options.rx_intsup;
  
#line 3553 
  tmp_0 = get_pending_timer_val(vptr->options.rxqueue_timer);
  
#line 3553 
  ecmd->rx_coalesce_usecs = (unsigned int)tmp_0;
  
#line 3554 
  tmp_1 = get_pending_timer_val(vptr->options.txqueue_timer);
  
#line 3554 
  ecmd->tx_coalesce_usecs = (unsigned int)tmp_1;
  
#line 3556 
  __retres = 0;
  
#line 3556 
  return __retres;
}


#line 3559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_set_coalesce(struct net_device *dev, struct ethtool_coalesce *ecmd)
{
  int __retres;
  unsigned long flags;
  
#line 3562 
  struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
  
#line 3563 
  int max_us = 4032;
  
#line 3567 
  if (ecmd->tx_coalesce_usecs > (unsigned int)max_us) {
    
#line 3568 
    __retres = -22;
    
#line 3568 
    goto return_label;
  }
  else ;
  
#line 3569 
  if (ecmd->rx_coalesce_usecs > (unsigned int)max_us) {
    
#line 3570 
    __retres = -22;
    
#line 3570 
    goto return_label;
  }
  else ;
  
#line 3572 
  if (ecmd->tx_max_coalesced_frames > 255U) {
    
#line 3573 
    __retres = -22;
    
#line 3573 
    goto return_label;
  }
  else ;
  
#line 3574 
  if (ecmd->rx_max_coalesced_frames > 255U) {
    
#line 3575 
    __retres = -22;
    
#line 3575 
    goto return_label;
  }
  else ;
  
#line 3577 
  vptr->options.rx_intsup = (int)ecmd->rx_max_coalesced_frames;
  
#line 3578 
  vptr->options.tx_intsup = (int)ecmd->tx_max_coalesced_frames;
  
#line 3580 
  set_pending_timer_val(& vptr->options.rxqueue_timer,ecmd->rx_coalesce_usecs);
  
#line 3582 
  set_pending_timer_val(& vptr->options.txqueue_timer,ecmd->tx_coalesce_usecs);
  
#line 3586 
  ldv___ldv_spin_lock_101(& vptr->lock);
  
#line 3587 
  writel(33554432U,(void volatile *)(& (vptr->mac_regs)->CR0Clr));
  
#line 3588 
  setup_adaptive_interrupts(vptr);
  
#line 3589 
  setup_queue_timers(vptr);
  
#line 3591 
  writel(vptr->int_mask,(void volatile *)(& (vptr->mac_regs)->IMR));
  
#line 3592 
  writel(4294967295U,(void volatile *)(& (vptr->mac_regs)->ISR));
  
#line 3593 
  writel(33554432U,(void volatile *)(& (vptr->mac_regs)->CR0Set));
  
#line 3594 
  ldv_spin_unlock_irqrestore_102(& vptr->lock,flags);
  
#line 3596 
  __retres = 0;
  return_label: 
#line 3596 
                return __retres;
}


#line 3599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static char const velocity_gstrings[32U][32U] = {{(char)'r', (char)'x', (char)'_', (char)'a', (char)'l', (char)'l', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'o', (char)'k', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'o', (char)'k', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'r', (char)'u', (char)'n', (char)'t', (char)'_', (char)'o', (char)'k', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'r', (char)'u', (char)'n', (char)'t', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'6', (char)'4', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'6', (char)'4', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'j', (char)'u', (char)'m', (char)'b', (char)'o', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'j', (char)'u', (char)'m', (char)'b', (char)'o', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'m', (char)'a', (char)'c', (char)'_', (char)'c', (char)'o', (char)'n', (char)'t', (char)'r', (char)'o', (char)'l', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'m', (char)'a', (char)'c', (char)'_', (char)'c', (char)'o', (char)'n', (char)'t', (char)'r', (char)'o', (char)'l', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'a', (char)'l', (char)'i', (char)'g', (char)'n', (char)'e', (char)'m', (char)'e', (char)'n', (char)'t', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'l', (char)'o', (char)'n', (char)'g', (char)'_', (char)'o', (char)'k', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'l', (char)'o', (char)'n', (char)'g', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'s', (char)'q', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'n', (char)'o', (char)'_', (char)'b', (char)'u', (char)'f', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'s', (char)'y', (char)'m', (char)'b', (char)'o', (char)'l', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'i', (char)'n', (char)'_', (char)'r', (char)'a', (char)'n', (char)'g', (char)'e', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'l', (char)'a', (char)'t', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}};

#line 3634  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_get_strings(struct net_device *dev, u32 sset, u8 *data)
{
  
#line 3636 
  switch (sset) {
    case (u32)1: 
#line 3637 
    ;
    
#line 3638 
    memcpy((void *)data,(void const *)(& velocity_gstrings),1024UL);
    
#line 3639 
    goto ldv_53875;
  }
  ldv_53875: 
#line 3641 
  ;
  
#line 3642 
  return;
}


#line 3643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 3645 
  switch (sset) {
    case 1: 
#line 3646 
    ;
    
#line 3647 
    __retres = 32;
    
#line 3647 
    goto return_label;
    default: 
#line 3648 
    ;
    
#line 3649 
    __retres = -95;
    
#line 3649 
    goto return_label;
  }
  return_label: 
#line 3645 
                return __retres;
}


#line 3653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  bool tmp_2;
  
#line 3656 
  tmp_2 = netif_running((struct net_device const *)dev);
  
#line 3656 
  if ((int)tmp_2 != 0) {
    int i;
    u64 *tmp_0;
    u32 *tmp_1;
    
#line 3657 
    struct velocity_info *vptr = netdev_priv((struct net_device const *)dev);
    
#line 3658 
    u32 *p = (u32 *)(& vptr->mib_counter);
    
#line 3661 
    ldv_spin_lock_irq_103(& vptr->lock);
    
#line 3662 
    velocity_update_hw_mibs(vptr);
    
#line 3663 
    ldv_spin_unlock_irq_104(& vptr->lock);
    
#line 3665 
    i = 0;
    
#line 3665 
    goto ldv_53897;
    ldv_53896: 
#line 3666 
    ;
    
#line 3666 
    tmp_0 = data;
    
#line 3666 
    data += 1;
    
#line 3666 
    tmp_1 = p;
    
#line 3666 
    p += 1;
    
#line 3666 
    *tmp_0 = (unsigned long long)*tmp_1;
    
#line 3665 
    i += 1;
    ldv_53897: 
#line 3666 
    ;
    
#line 3665 
    if ((unsigned int)i <= 31U) 
#line 3667 
                                goto ldv_53896; else 
#line 3670 
                                                     goto ldv_53898;
    ldv_53898: 
#line 3671 
    ;
  }
  else ;
  
#line 3673 
  return;
}


#line 3670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct ethtool_ops const velocity_ethtool_ops = {.get_settings = & velocity_get_settings, .set_settings = & velocity_set_settings, .get_drvinfo = & velocity_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = & velocity_ethtool_get_wol, .set_wol = & velocity_ethtool_set_wol, .get_msglevel = & velocity_get_msglevel, .set_msglevel = & velocity_set_msglevel, .nway_reset = (int (*)(struct net_device *))0, .get_link = & velocity_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & velocity_get_coalesce, .set_coalesce = & velocity_set_coalesce, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & velocity_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & velocity_get_ethtool_stats, .begin = & velocity_ethtool_up, .complete = & velocity_ethtool_down, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & velocity_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 3689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_netdev_event(struct notifier_block *nb, unsigned long notification, void *ptr)
{
  int __retres;
  struct net *tmp_0;
  
#line 3691 
  struct in_ifaddr *ifa = (struct in_ifaddr *)ptr;
  
#line 3692 
  struct net_device *dev = (ifa->ifa_dev)->dev;
  
#line 3694 
  tmp_0 = dev_net((struct net_device const *)dev);
  
#line 3694 
  if (tmp_0 == & init_net) {
    
#line 3694 
    if (dev->netdev_ops == & velocity_netdev_ops) {
      void *tmp;
      
#line 3696 
      tmp = netdev_priv((struct net_device const *)dev);
      
#line 3696 
      velocity_get_ip((struct velocity_info *)tmp);
    }
    else ;
  }
  else ;
  
#line 3698 
  __retres = 0;
  
#line 3698 
  return __retres;
}


#line 3701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static struct notifier_block velocity_inetaddr_notifier = {.notifier_call = & velocity_netdev_event, .next = (struct notifier_block *)0, .priority = 0};

#line 3705  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_register_notifier(void)
{
  
#line 3707 
  register_inetaddr_notifier(& velocity_inetaddr_notifier);
  
#line 3708 
  return;
}


#line 3710  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_unregister_notifier(void)
{
  
#line 3712 
  unregister_inetaddr_notifier(& velocity_inetaddr_notifier);
  
#line 3713 
  return;
}


#line 3730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static int velocity_init_module(void)
{
  int __retres;
  int ret_pci;
  int ret_platform;
  
#line 3734 
  velocity_register_notifier();
  
#line 3736 
  ret_pci = ldv___pci_register_driver_105(& velocity_pci_driver,& __this_module,"via_velocity");
  
#line 3737 
  ret_platform = ldv___platform_driver_register_106(& velocity_platform_driver,& __this_module);
  
#line 3740 
  if (ret_pci < 0 && ret_platform < 0) {
    
#line 3741 
    velocity_unregister_notifier();
    
#line 3742 
    __retres = ret_pci;
    
#line 3742 
    goto return_label;
  }
  else ;
  
#line 3745 
  __retres = 0;
  return_label: 
#line 3745 
                return __retres;
}


#line 3756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/via/via-velocity.c"
static void velocity_cleanup_module(void)
{
  
#line 3758 
  velocity_unregister_notifier();
  
#line 3760 
  ldv_pci_unregister_driver_107(& velocity_pci_driver);
  
#line 3761 
  ldv_platform_driver_unregister_108(& velocity_platform_driver);
  
#line 3762 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int (*ldv_emg_alias_eth_mac_addr_11)(struct net_device *, void *) = & eth_mac_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
struct dev_pm_ops *ldv_emg_alias_velocity_pm_ops_3 = (struct dev_pm_ops *)(& velocity_pm_ops);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
struct platform_driver *ldv_emg_alias_velocity_platform_driver_2 = & velocity_platform_driver;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
struct pci_driver *ldv_emg_alias_velocity_pci_driver_2 = & velocity_pci_driver;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int (*ldv_emg_alias_eth_validate_addr_6)(struct net_device *) = & eth_validate_addr;

#line 63 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 64 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 65 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 66 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 67 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 68 
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0);


#line 69 
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1);


#line 70 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 71 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 72 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_wrapper_velocity_pci_remove_3(struct pci_dev *arg0)
{
  
#line 77 
  velocity_pci_remove(arg0);
  
#line 78 
  return;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 82 
  tmp = velocity_close(arg0);
  
#line 82 
  return tmp;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_ethtool_up_16(struct net_device *arg0)
{
  int tmp;
  
#line 87 
  tmp = velocity_ethtool_up(arg0);
  
#line 87 
  return tmp;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_platform_remove_3(struct platform_device *arg0)
{
  int tmp;
  
#line 92 
  tmp = velocity_platform_remove(arg0);
  
#line 92 
  return tmp;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
unsigned int ldv_emg_wrapper_velocity_get_link_7(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 97 
  tmp = velocity_get_link(arg0);
  
#line 97 
  return tmp;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
enum netdev_tx ldv_emg_wrapper_velocity_xmit_10(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 102 
  tmp = velocity_xmit(arg0,arg1);
  
#line 102 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_wrapper_velocity_ethtool_down_20(struct net_device *arg0)
{
  
#line 107 
  velocity_ethtool_down(arg0);
  
#line 108 
  return;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_set_settings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 112 
  tmp = velocity_set_settings(arg0,arg1);
  
#line 112 
  return tmp;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_resume_4(struct device *arg0)
{
  int tmp;
  
#line 117 
  tmp = velocity_resume(arg0);
  
#line 117 
  return tmp;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
enum irqreturn ldv_emg_wrapper_velocity_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 122 
  tmp = velocity_intr(arg0,arg1);
  
#line 122 
  return tmp;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_change_mtu_4(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 127 
  tmp = velocity_change_mtu(arg0,arg1);
  
#line 127 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_get_coalesce_15(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 132 
  tmp = velocity_get_coalesce(arg0,arg1);
  
#line 132 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_wrapper_velocity_ethtool_get_wol_13(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 137 
  velocity_ethtool_get_wol(arg0,arg1);
  
#line 138 
  return;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_platform_probe_2(struct platform_device *arg0)
{
  int tmp;
  
#line 142 
  tmp = velocity_platform_probe(arg0);
  
#line 142 
  return tmp;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_wrapper_velocity_poll_controller_25(struct net_device *arg0)
{
  
#line 147 
  velocity_poll_controller(arg0);
  
#line 148 
  return;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_wrapper_velocity_get_ethtool_stats_5(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 152 
  velocity_get_ethtool_stats(arg0,arg1,arg2);
  
#line 153 
  return;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_get_sset_count_18(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 157 
  tmp = velocity_get_sset_count(arg0,arg1);
  
#line 157 
  return tmp;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
unsigned int ldv_emg_wrapper_velocity_get_msglevel_9(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 162 
  tmp = velocity_get_msglevel(arg0);
  
#line 162 
  return tmp;
}


#line 166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_wrapper_velocity_set_msglevel_3(struct net_device *arg0, unsigned int arg1)
{
  
#line 167 
  velocity_set_msglevel(arg0,arg1);
  
#line 168 
  return;
}


#line 171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_velocity_cleanup_module(void)
{
  
#line 172 
  velocity_cleanup_module();
  
#line 173 
  return;
}


#line 175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 176 
  tmp = velocity_open(arg0);
  
#line 176 
  return tmp;
}


#line 180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_pci_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 181 
  tmp = velocity_pci_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 181 
  return tmp;
}


#line 185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 186 
  tmp = velocity_suspend(arg0);
  
#line 186 
  return tmp;
}


#line 190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_velocity_init_module(void)
{
  int tmp;
  
#line 191 
  tmp = velocity_init_module();
  
#line 191 
  return tmp;
}


#line 194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_get_settings_12(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 195 
  tmp = velocity_get_settings(arg0,arg1);
  
#line 195 
  return tmp;
}


#line 199  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_wrapper_velocity_get_drvinfo_8(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 200 
  velocity_get_drvinfo(arg0,arg1);
  
#line 201 
  return;
}


#line 204  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_ioctl_22(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 205 
  tmp = velocity_ioctl(arg0,arg1,arg2);
  
#line 205 
  return tmp;
}


#line 209  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_vlan_rx_kill_vid_24(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 210 
  tmp = velocity_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 210 
  return tmp;
}


#line 214  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_ethtool_set_wol_17(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 215 
  tmp = velocity_ethtool_set_wol(arg0,arg1);
  
#line 215 
  return tmp;
}


#line 219  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_wrapper_velocity_get_strings_21(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 220 
  velocity_get_strings(arg0,arg1,arg2);
  
#line 221 
  return;
}


#line 224  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_vlan_rx_add_vid_14(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 225 
  tmp = velocity_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 225 
  return tmp;
}


#line 229  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
int ldv_emg_wrapper_velocity_set_coalesce_23(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 230 
  tmp = velocity_set_coalesce(arg0,arg1);
  
#line 230 
  return tmp;
}


#line 234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
void ldv_emg_wrapper_velocity_set_multi_26(struct net_device *arg0)
{
  
#line 235 
  velocity_set_multi(arg0);
  
#line 236 
  return;
}


#line 239  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
struct net_device_stats *ldv_emg_wrapper_velocity_get_stats_19(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 240 
  tmp = velocity_get_stats(arg0);
  
#line 240 
  return tmp;
}


#line 672  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 675 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 675 
  return tmp;
}


#line 679  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 682 
  tmp = ldv_kzalloc(size,flags);
  
#line 682 
  return tmp;
}


#line 925  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_lock_irq_73(spinlock_t *lock)
{
  
#line 929 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 931 
  spin_lock_irq(lock);
  
#line 932 
  return;
}


#line 935  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irq_74(spinlock_t *lock)
{
  
#line 939 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 941 
  spin_unlock_irq(lock);
  
#line 942 
  return;
}


#line 945  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_lock_irq_75(spinlock_t *lock)
{
  
#line 949 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 951 
  spin_lock_irq(lock);
  
#line 952 
  return;
}


#line 955  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irq_76(spinlock_t *lock)
{
  
#line 959 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 961 
  spin_unlock_irq(lock);
  
#line 962 
  return;
}


#line 965  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1)
{
  
#line 969 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 971 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 972 
  return;
}


#line 975  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 979 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 981 
  spin_unlock_irqrestore(lock,flags);
  
#line 982 
  return;
}


#line 985  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_lock_79(spinlock_t *lock)
{
  
#line 989 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 991 
  spin_lock(lock);
  
#line 992 
  return;
}


#line 995  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_80(spinlock_t *lock)
{
  
#line 999 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1001 
  spin_unlock(lock);
  
#line 1002 
  return;
}


#line 1005  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_81(spinlock_t *lock)
{
  
#line 1009 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1011 
  spin_unlock(lock);
  
#line 1012 
  return;
}


#line 1015  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static int ldv_request_irq_82(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1019 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1019 
  return tmp;
}


#line 1023  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1)
{
  
#line 1027 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 1029 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1030 
  return;
}


#line 1033  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags)
{
  
#line 1037 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1039 
  spin_unlock_irqrestore(lock,flags);
  
#line 1040 
  return;
}


#line 1043  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1)
{
  
#line 1047 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 1049 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1050 
  return;
}


#line 1053  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags)
{
  
#line 1057 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1059 
  spin_unlock_irqrestore(lock,flags);
  
#line 1060 
  return;
}


#line 1063  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_lock_irq_87(spinlock_t *lock)
{
  
#line 1067 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 1069 
  spin_lock_irq(lock);
  
#line 1070 
  return;
}


#line 1073  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irq_88(spinlock_t *lock)
{
  
#line 1077 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1079 
  spin_unlock_irq(lock);
  
#line 1080 
  return;
}


#line 1083  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_free_irq_89(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1087 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1088 
  return;
}


#line 1091  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1)
{
  
#line 1095 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 1097 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1098 
  return;
}


#line 1101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags)
{
  
#line 1105 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1107 
  spin_unlock_irqrestore(lock,flags);
  
#line 1108 
  return;
}


#line 1111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_92(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1115 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1115 
  return tmp;
}


#line 1119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static int ldv_register_netdev_93(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1123 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1123 
  return tmp;
}


#line 1127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_free_netdev_94(struct net_device *ldv_func_arg1)
{
  
#line 1131 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1132 
  return;
}


#line 1135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_unregister_netdev_95(struct net_device *ldv_func_arg1)
{
  
#line 1139 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1140 
  return;
}


#line 1143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_free_netdev_96(struct net_device *ldv_func_arg1)
{
  
#line 1147 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1148 
  return;
}


#line 1151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv___ldv_spin_lock_97(spinlock_t *ldv_func_arg1)
{
  
#line 1155 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 1157 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1158 
  return;
}


#line 1161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irqrestore_98(spinlock_t *lock, unsigned long flags)
{
  
#line 1165 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1167 
  spin_unlock_irqrestore(lock,flags);
  
#line 1168 
  return;
}


#line 1171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv___ldv_spin_lock_99(spinlock_t *ldv_func_arg1)
{
  
#line 1175 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 1177 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1178 
  return;
}


#line 1181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irqrestore_100(spinlock_t *lock, unsigned long flags)
{
  
#line 1185 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1187 
  spin_unlock_irqrestore(lock,flags);
  
#line 1188 
  return;
}


#line 1191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv___ldv_spin_lock_101(spinlock_t *ldv_func_arg1)
{
  
#line 1195 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 1197 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1198 
  return;
}


#line 1201  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irqrestore_102(spinlock_t *lock, unsigned long flags)
{
  
#line 1205 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1207 
  spin_unlock_irqrestore(lock,flags);
  
#line 1208 
  return;
}


#line 1211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_lock_irq_103(spinlock_t *lock)
{
  
#line 1215 
  ldv_spin_model_lock((char *)"lock_of_velocity_info");
  
#line 1217 
  spin_lock_irq(lock);
  
#line 1218 
  return;
}


#line 1221  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_spin_unlock_irq_104(spinlock_t *lock)
{
  
#line 1225 
  ldv_spin_model_unlock((char *)"lock_of_velocity_info");
  
#line 1227 
  spin_unlock_irq(lock);
  
#line 1228 
  return;
}


#line 1231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static int ldv___pci_register_driver_105(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1235 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1235 
  return tmp;
}


#line 1239  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static int ldv___platform_driver_register_106(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2)
{
  int tmp;
  
#line 1243 
  tmp = ldv_emg___platform_driver_register(ldv_func_arg1,ldv_func_arg2);
  
#line 1243 
  return tmp;
}


#line 1247  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_pci_unregister_driver_107(struct pci_driver *ldv_func_arg1)
{
  
#line 1251 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1252 
  return;
}


#line 1255  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/weaver/.tmp_via-velocity.c.aux"
static void ldv_platform_driver_unregister_108(struct platform_driver *ldv_func_arg1)
{
  
#line 1259 
  ldv_emg_platform_driver_unregister(ldv_func_arg1);
  
#line 1260 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
int main(void);


#line 89 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 91 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 92 
void ldv_dispatch_register_8_3(struct platform_driver *arg0);


#line 93 
void *ldv_platform_instance_12(void *arg0);


#line 94 
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0);


#line 95 
void *ldv_initialization_1(void *arg0);


#line 96 
void ldv_dispatch_pm_register_12_17(void);


#line 97 
void ldv_dispatch_pm_deregister_12_16(void);


#line 99 
void ldv_dispatch_deregister_4_1(struct platform_driver *arg0);


#line 100 
void *ldv_pci_scenario_16(void *arg0);


#line 101 
void ldv_dispatch_register_10_4(struct net_device *arg0);


#line 104 
void ldv_dispatch_irq_register_11_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 105 
void *ldv_random_allocationless_scenario_15(void *arg0);


#line 106 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 108 
void *ldv_pm_ops_scenario_13(void *arg0);


#line 109 
void *ldv_interrupt_scenario_14(void *arg0);


#line 114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 125 
  ldv_initialize();
  
#line 128 
  ldv_initialization_1((void *)0);
  
#line 130 
  __retres = 0;
  
#line 130 
  return __retres;
}


#line 135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 138 
  struct pci_driver *ldv_9_pci_driver = ldv_emg_alias_velocity_pci_driver_2;
  
#line 141 
  ldv_9_pci_driver = arg0;
  
#line 145 
  ldv_dispatch_deregister_9_1(ldv_9_pci_driver);
  
#line 149 
  goto return_label;
  return_label: 
#line 151 
                return;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 159 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_velocity_pci_driver_2;
  
#line 163 
  tmp_0 = ldv_undef_int();
  
#line 163 
  if (tmp_0 != 0) {
    
#line 165 
    ldv_7_pci_driver = arg0;
    
#line 169 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 173 
    __retres = 0;
    
#line 173 
    goto return_label;
  }
  else {
    int tmp;
    
#line 180 
    tmp = ldv_undef_int_negative();
    
#line 180 
    __retres = tmp;
    
#line 180 
    goto return_label;
  }
  return_label: 
#line 163 
                return __retres;
}


#line 190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0)
{
  
#line 193 
  struct platform_driver *ldv_4_platform_driver = ldv_emg_alias_velocity_platform_driver_2;
  
#line 196 
  ldv_4_platform_driver = arg0;
  
#line 200 
  ldv_dispatch_deregister_4_1(ldv_4_platform_driver);
  
#line 204 
  goto return_label;
  return_label: 
#line 206 
                return;
}


#line 211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_14;
  int tmp;
  
#line 214 
  tmp = ldv_undef_int();
  
#line 214 
  switch (tmp) {
    case 0: 
#line 215 
    ;
    
#line 216 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 217 
    __VERIFIER_assume(ret == 0);
    
#line 218 
    goto ldv_44920;
    default: 
#line 220 
    ;
    
#line 220 
    __VERIFIER_assume(0);
  }
  ldv_44920: 
#line 221 
  ;
  
#line 222 
  return;
}


#line 226  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 233 
  tmp_0 = ldv_undef_int();
  
#line 233 
  if (tmp_0 != 0) {
    
#line 235 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 239 
    __retres = ldv_5_netdev;
    
#line 239 
    goto return_label;
  }
  else {
    
#line 246 
    __retres = (struct net_device *)0;
    
#line 246 
    goto return_label;
  }
  return_label: 
#line 233 
                return __retres;
}


#line 256  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_16 *cf_arg_16;
  int tmp;
  
#line 259 
  tmp = ldv_undef_int();
  
#line 259 
  switch (tmp) {
    case 0: 
#line 260 
    ;
    
#line 261 
    cf_arg_16 = (struct ldv_struct_pci_scenario_16 *)ldv_xmalloc(16UL);
    
#line 262 
    cf_arg_16->arg0 = arg0;
    
#line 263 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_pci_scenario_16,(void *)cf_arg_16);
    
#line 264 
    __VERIFIER_assume(ret == 0);
    
#line 265 
    goto ldv_44934;
    default: 
#line 267 
    ;
    
#line 267 
    __VERIFIER_assume(0);
  }
  ldv_44934: 
#line 268 
  ;
  
#line 269 
  return;
}


#line 273  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_8_3(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_12 *cf_arg_12;
  int tmp;
  
#line 276 
  tmp = ldv_undef_int();
  
#line 276 
  switch (tmp) {
    case 0: 
#line 277 
    ;
    
#line 278 
    cf_arg_12 = (struct ldv_struct_platform_instance_12 *)ldv_xmalloc(16UL);
    
#line 279 
    cf_arg_12->arg0 = arg0;
    
#line 280 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_platform_instance_12,(void *)cf_arg_12);
    
#line 281 
    __VERIFIER_assume(ret == 0);
    
#line 282 
    goto ldv_44942;
    default: 
#line 284 
    ;
    
#line 284 
    __VERIFIER_assume(0);
  }
  ldv_44942: 
#line 285 
  ;
  
#line 286 
  return;
}


#line 290  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_platform_instance_12(void *arg0)
{
  void *__retres;
  struct platform_device *ldv_12_ldv_param_0_2;
  struct platform_device *ldv_12_ldv_param_0_3;
  int tmp_1;
  int tmp_2;
  
#line 294 
  struct platform_driver *ldv_12_container = ldv_emg_alias_velocity_platform_driver_2;
  
#line 296 
  int ldv_12_probed = 1;
  
#line 298 
  struct ldv_struct_platform_instance_12 *data = (struct ldv_struct_platform_instance_12 *)arg0;
  
#line 302 
  ldv_12_probed = 1;
  
#line 305 
  if (data != (struct ldv_struct_platform_instance_12 *)0) {
    
#line 306 
    ldv_12_container = data->arg0;
    
#line 307 
    ldv_free((void *)data);
  }
  else ;
  
#line 318 
  goto ldv_main_12;
  
#line 320 
  __retres = (void *)0;
  
#line 320 
  goto return_label;
  ldv_main_12: 
#line 323 
  ;
  
#line 326 
  tmp_1 = ldv_undef_int();
  
#line 326 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 328 
    ldv_12_ldv_param_0_2 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 333 
    ldv_pre_probe();
    
#line 335 
    ldv_12_probed = ldv_emg_wrapper_velocity_platform_probe_2(ldv_12_ldv_param_0_2);
    
#line 337 
    ldv_12_probed = ldv_post_probe(ldv_12_probed);
    
#line 341 
    ldv_free((void *)ldv_12_ldv_param_0_2);
    
#line 344 
    tmp_0 = ldv_undef_int();
    
#line 344 
    if (tmp_0 != 0) {
      
#line 346 
      __VERIFIER_assume(ldv_12_probed == 0);
      
#line 353 
      goto ldv_call_12;
    }
    else {
      
#line 357 
      __VERIFIER_assume(ldv_12_probed != 0);
      
#line 364 
      goto ldv_main_12;
    }
  }
  else {
    
#line 376 
    __retres = (void *)0;
    
#line 376 
    goto return_label;
  }
  
#line 379 
  __retres = (void *)0;
  
#line 379 
  goto return_label;
  ldv_call_12: 
#line 382 
  ;
  
#line 385 
  tmp_2 = ldv_undef_int();
  
#line 385 
  switch (tmp_2) {
    case 1: 
#line 386 
    ;
    
#line 395 
    goto ldv_call_12;
    case 2: 
#line 398 
    ;
    
#line 400 
    ldv_dispatch_pm_register_12_17();
    
#line 404 
    ldv_dispatch_pm_deregister_12_16();
    
#line 411 
    goto ldv_call_12;
    case 3: 
#line 414 
    ;
    
#line 416 
    ldv_12_ldv_param_0_3 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 421 
    ldv_emg_wrapper_velocity_platform_remove_3(ldv_12_ldv_param_0_3);
    
#line 425 
    ldv_free((void *)ldv_12_ldv_param_0_3);
    
#line 429 
    ldv_12_probed = 1;
    
#line 436 
    goto ldv_main_12;
    default: 
#line 439 
    ;
    
#line 439 
    __VERIFIER_assume(0);
  }
  
#line 442 
  __retres = (void *)0;
  return_label: 
#line 442 
                return __retres;
}


#line 447  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_16 *cf_arg_16;
  int tmp;
  
#line 450 
  tmp = ldv_undef_int();
  
#line 450 
  switch (tmp) {
    case 0: 
#line 451 
    ;
    
#line 452 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 453 
    __VERIFIER_assume(ret == 0);
    
#line 454 
    goto ldv_44964;
    default: 
#line 456 
    ;
    
#line 456 
    __VERIFIER_assume(0);
  }
  ldv_44964: 
#line 457 
  ;
  
#line 458 
  return;
}


#line 462  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 469 
  ldv_1_ret = ldv_emg_velocity_init_module();
  
#line 470 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 473 
  tmp = ldv_undef_int();
  
#line 473 
  if (tmp != 0) {
    
#line 475 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 479 
    __retres = (void *)0;
    
#line 479 
    goto return_label;
  }
  else {
    
#line 483 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 488 
    ldv_emg_velocity_cleanup_module();
    
#line 492 
    __retres = (void *)0;
    
#line 492 
    goto return_label;
  }
  
#line 495 
  __retres = (void *)0;
  return_label: 
#line 495 
                return __retres;
}


#line 500  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_register_12_17(void)
{
  int ret;
  struct ldv_struct_platform_instance_12 *cf_arg_13;
  int tmp;
  
#line 503 
  tmp = ldv_undef_int();
  
#line 503 
  switch (tmp) {
    case 0: 
#line 504 
    ;
    
#line 505 
    cf_arg_13 = (struct ldv_struct_platform_instance_12 *)ldv_xmalloc(16UL);
    
#line 506 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_pm_ops_scenario_13,(void *)cf_arg_13);
    
#line 507 
    __VERIFIER_assume(ret == 0);
    
#line 508 
    goto ldv_44976;
    default: 
#line 510 
    ;
    
#line 510 
    __VERIFIER_assume(0);
  }
  ldv_44976: 
#line 511 
  ;
  
#line 512 
  return;
}


#line 516  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_deregister_12_16(void)
{
  int ret;
  struct ldv_struct_platform_instance_12 *cf_arg_13;
  int tmp;
  
#line 519 
  tmp = ldv_undef_int();
  
#line 519 
  switch (tmp) {
    case 0: 
#line 520 
    ;
    
#line 521 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 522 
    __VERIFIER_assume(ret == 0);
    
#line 523 
    goto ldv_44984;
    default: 
#line 525 
    ;
    
#line 525 
    __VERIFIER_assume(0);
  }
  ldv_44984: 
#line 526 
  ;
  
#line 527 
  return;
}


#line 531  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1)
{
  int __retres;
  int tmp_0;
  
#line 534 
  struct platform_driver *ldv_8_platform_driver = ldv_emg_alias_velocity_platform_driver_2;
  
#line 538 
  tmp_0 = ldv_undef_int();
  
#line 538 
  if (tmp_0 != 0) {
    
#line 540 
    ldv_8_platform_driver = arg0;
    
#line 544 
    ldv_dispatch_register_8_3(ldv_8_platform_driver);
    
#line 548 
    __retres = 0;
    
#line 548 
    goto return_label;
  }
  else {
    int tmp;
    
#line 555 
    tmp = ldv_undef_int_negative();
    
#line 555 
    __retres = tmp;
    
#line 555 
    goto return_label;
  }
  return_label: 
#line 538 
                return __retres;
}


#line 565  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_4_1(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_12 *cf_arg_12;
  int tmp;
  
#line 568 
  tmp = ldv_undef_int();
  
#line 568 
  switch (tmp) {
    case 0: 
#line 569 
    ;
    
#line 570 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 571 
    __VERIFIER_assume(ret == 0);
    
#line 572 
    goto ldv_44997;
    default: 
#line 574 
    ;
    
#line 574 
    __VERIFIER_assume(0);
  }
  ldv_44997: 
#line 575 
  ;
  
#line 576 
  return;
}


#line 580  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_16(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_16_resource_1;
  struct pci_device_id *ldv_16_ldv_param_1_2;
  struct pm_message ldv_16_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 585 
  struct pci_driver *ldv_16_container = ldv_emg_alias_velocity_pci_driver_2;
  
#line 586 
  int ldv_16_ret = ldv_undef_int();
  
#line 589 
  struct ldv_struct_pci_scenario_16 *data = (struct ldv_struct_pci_scenario_16 *)arg0;
  
#line 593 
  ldv_16_ret = ldv_undef_int();
  
#line 596 
  if (data != (struct ldv_struct_pci_scenario_16 *)0) {
    
#line 597 
    ldv_16_container = data->arg0;
    
#line 598 
    ldv_free((void *)data);
  }
  else ;
  
#line 609 
  goto ldv_main_16;
  
#line 611 
  __retres = (void *)0;
  
#line 611 
  goto return_label;
  ldv_main_16: 
#line 614 
  ;
  
#line 617 
  tmp_2 = ldv_undef_int();
  
#line 617 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 619 
    ldv_16_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 624 
    ldv_pre_probe();
    
#line 626 
    ldv_16_ret = ldv_emg_wrapper_velocity_pci_probe_2(ldv_16_resource_1,ldv_16_ldv_param_1_2);
    
#line 628 
    ldv_16_ret = ldv_post_probe(ldv_16_ret);
    
#line 632 
    ldv_free((void *)ldv_16_ldv_param_1_2);
    
#line 635 
    tmp_1 = ldv_undef_int();
    
#line 635 
    if (tmp_1 != 0) {
      
#line 637 
      __VERIFIER_assume(ldv_16_ret == 0);
      
#line 644 
      goto ldv_call_16;
    }
    else {
      
#line 648 
      __VERIFIER_assume(ldv_16_ret != 0);
      
#line 655 
      goto ldv_main_16;
    }
  }
  else {
    
#line 667 
    __retres = (void *)0;
    
#line 667 
    goto return_label;
  }
  
#line 670 
  __retres = (void *)0;
  
#line 670 
  goto return_label;
  ldv_call_16: 
#line 673 
  ;
  
#line 676 
  tmp_3 = ldv_undef_int();
  
#line 676 
  switch (tmp_3) {
    case 1: 
#line 677 
    ;
    
#line 686 
    goto ldv_call_16;
    case 2: 
#line 689 
    ;
    
#line 691 
    if (ldv_16_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 693 
      ldv_16_ret = (*(ldv_16_container->suspend))(ldv_16_resource_1,ldv_16_resource_0);
      
#line 695 
      ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    }
    else 
#line 697 
         ldv_16_ret = ldv_undef_int();
    
#line 702 
    if (ldv_16_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 704 
      ldv_16_ret = (*(ldv_16_container->suspend_late))(ldv_16_resource_1,ldv_16_resource_0);
      
#line 706 
      ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    }
    else 
#line 708 
         ldv_16_ret = ldv_undef_int();
    
#line 713 
    if (ldv_16_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 715 
      (*(ldv_16_container->resume_early))(ldv_16_resource_1); else ;
    
#line 720 
    if (ldv_16_container->resume != (int (*)(struct pci_dev *))0) 
#line 722 
                                                                  (*(ldv_16_container->resume))(ldv_16_resource_1); else ;
    
#line 730 
    goto ldv_call_16;
    case 3: 
#line 733 
    ;
    
#line 735 
    if (ldv_16_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 737 
      (*(ldv_16_container->shutdown))(ldv_16_resource_1); else ;
    
#line 743 
    ldv_emg_wrapper_velocity_pci_remove_3(ldv_16_resource_1);
    
#line 750 
    goto ldv_main_16;
    default: 
#line 753 
    ;
    
#line 753 
    __VERIFIER_assume(0);
  }
  
#line 756 
  __retres = (void *)0;
  return_label: 
#line 756 
                return __retres;
}


#line 761  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_10_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 764 
  tmp = ldv_undef_int();
  
#line 764 
  switch (tmp) {
    case 0: 
#line 765 
    ;
    
#line 766 
    cf_arg_15 = (struct ldv_struct_random_allocationless_scenario_15 *)ldv_xmalloc(16UL);
    
#line 767 
    cf_arg_15->arg0 = arg0;
    
#line 768 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_15,(void *)cf_arg_15);
    
#line 769 
    __VERIFIER_assume(ret == 0);
    
#line 770 
    goto ldv_45020;
    default: 
#line 772 
    ;
    
#line 772 
    __VERIFIER_assume(0);
  }
  ldv_45020: 
#line 773 
  ;
  
#line 774 
  return;
}


#line 778  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 784 
  ldv_6_netdev = arg0;
  
#line 789 
  ldv_emg_wrapper_velocity_close_2(ldv_6_netdev);
  
#line 793 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 797 
  goto return_label;
  return_label: 
#line 799 
                return;
}


#line 804  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 810 
  ldv_3_line = (int)arg0;
  
#line 814 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 818 
  goto return_label;
  return_label: 
#line 820 
                return;
}


#line 825  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_11_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_14;
  int tmp;
  
#line 828 
  tmp = ldv_undef_int();
  
#line 828 
  switch (tmp) {
    case 0: 
#line 829 
    ;
    
#line 830 
    cf_arg_14 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 831 
    cf_arg_14->arg0 = arg0;
    
#line 832 
    cf_arg_14->arg1 = arg1;
    
#line 833 
    cf_arg_14->arg2 = arg2;
    
#line 834 
    cf_arg_14->arg3 = arg3;
    
#line 835 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_interrupt_scenario_14,(void *)cf_arg_14);
    
#line 836 
    __VERIFIER_assume(ret == 0);
    
#line 837 
    goto ldv_45044;
    default: 
#line 839 
    ;
    
#line 839 
    __VERIFIER_assume(0);
  }
  ldv_45044: 
#line 840 
  ;
  
#line 841 
  return;
}


#line 845  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_15(void *arg0)
{
  void *__retres;
  unsigned int ldv_15_ldv_param_1_3;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_10;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_15;
  struct sk_buff *ldv_15_ldv_param_0_8;
  unsigned short ldv_15_ldv_param_2_23;
  struct ethtool_cmd *ldv_15_ldv_param_1_2;
  int ldv_15_ldv_param_1_4;
  struct ethtool_stats *ldv_15_ldv_param_1_5;
  unsigned short ldv_15_ldv_param_1_11;
  unsigned short ldv_15_ldv_param_2_12;
  struct net_device *ldv_15_container;
  struct ifreq *ldv_15_ldv_param_1_13;
  int ldv_15_ldv_param_1_16;
  unsigned int ldv_15_ldv_param_1_18;
  struct ethtool_coalesce *ldv_15_ldv_param_1_20;
  unsigned char *ldv_15_ldv_param_2_19;
  struct ethtool_coalesce *ldv_15_ldv_param_1_21;
  struct ethtool_cmd *ldv_15_ldv_param_1_9;
  void *ldv_15_ldv_param_1_17;
  int ldv_15_ldv_param_2_14;
  unsigned long long *ldv_15_ldv_param_2_6;
  unsigned short ldv_15_ldv_param_1_22;
  struct ethtool_drvinfo *ldv_15_ldv_param_1_7;
  int tmp_12;
  
#line 872 
  struct ldv_struct_random_allocationless_scenario_15 *data = (struct ldv_struct_random_allocationless_scenario_15 *)arg0;
  
#line 877 
  if (data != (struct ldv_struct_random_allocationless_scenario_15 *)0) {
    
#line 878 
    ldv_15_container = data->arg0;
    
#line 879 
    ldv_free((void *)data);
  }
  else ;
  
#line 887 
  goto ldv_call_15;
  
#line 889 
  __retres = (void *)0;
  
#line 889 
  goto return_label;
  ldv_call_15: 
#line 892 
  ;
  
#line 895 
  tmp_12 = ldv_undef_int();
  
#line 895 
  if (tmp_12 != 0) {
    int tmp_0;
    
#line 897 
    ldv_15_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 900 
    tmp_0 = ldv_undef_int();
    
#line 900 
    switch (tmp_0) {
      case 1: 
#line 901 
      ;
      
#line 904 
      ldv_emg_wrapper_velocity_set_settings_2(ldv_15_container,ldv_15_ldv_param_1_2);
      
#line 907 
      goto ldv_45075;
      case 2: 
#line 909 
      ;
      
#line 912 
      ldv_emg_wrapper_velocity_set_multi_26(ldv_15_container);
      
#line 915 
      goto ldv_45075;
      case 3: 
#line 917 
      ;
      
#line 920 
      ldv_emg_wrapper_velocity_poll_controller_25(ldv_15_container);
      
#line 923 
      goto ldv_45075;
      case 4: 
#line 925 
      ;
      
#line 931 
      ldv_emg_wrapper_velocity_vlan_rx_kill_vid_24(ldv_15_container,(unsigned short)((int)ldv_15_ldv_param_1_22),(unsigned short)((int)ldv_15_ldv_param_2_23));
      
#line 937 
      goto ldv_45075;
      case 5: 
#line 939 
      ;
      
#line 941 
      ldv_15_ldv_param_1_21 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 946 
      ldv_emg_wrapper_velocity_set_coalesce_23(ldv_15_container,ldv_15_ldv_param_1_21);
      
#line 950 
      ldv_free((void *)ldv_15_ldv_param_1_21);
      
#line 953 
      goto ldv_45075;
      case 6: 
#line 955 
      ;
      
#line 957 
      ldv_15_ldv_param_1_20 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 962 
      ldv_emg_wrapper_velocity_get_coalesce_15(ldv_15_container,ldv_15_ldv_param_1_20);
      
#line 966 
      ldv_free((void *)ldv_15_ldv_param_1_20);
      
#line 969 
      goto ldv_45075;
      case 7: 
#line 971 
      ;
      
#line 973 
      ldv_15_ldv_param_2_19 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 978 
      ldv_emg_wrapper_velocity_get_strings_21(ldv_15_container,ldv_15_ldv_param_1_18,ldv_15_ldv_param_2_19);
      
#line 982 
      ldv_free((void *)ldv_15_ldv_param_2_19);
      
#line 985 
      goto ldv_45075;
      case 8: 
#line 987 
      ;
      
#line 989 
      ldv_15_ldv_param_1_17 = ldv_xmalloc_unknown_size(0UL);
      
#line 994 
      (*ldv_emg_alias_eth_mac_addr_11)(ldv_15_container,ldv_15_ldv_param_1_17);
      
#line 998 
      ldv_free(ldv_15_ldv_param_1_17);
      
#line 1001 
      goto ldv_45075;
      case 9: 
#line 1003 
      ;
      
#line 1006 
      ldv_emg_wrapper_velocity_get_stats_19(ldv_15_container);
      
#line 1009 
      goto ldv_45075;
      case 10: 
#line 1011 
      ;
      
#line 1017 
      ldv_emg_wrapper_velocity_get_sset_count_18(ldv_15_container,ldv_15_ldv_param_1_16);
      
#line 1023 
      goto ldv_45075;
      case 11: 
#line 1025 
      ;
      
#line 1027 
      ldv_15_ldv_param_1_15 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1032 
      ldv_emg_wrapper_velocity_ethtool_set_wol_17(ldv_15_container,ldv_15_ldv_param_1_15);
      
#line 1036 
      ldv_free((void *)ldv_15_ldv_param_1_15);
      
#line 1039 
      goto ldv_45075;
      case 12: 
#line 1041 
      ;
      
#line 1044 
      ldv_emg_wrapper_velocity_ethtool_up_16(ldv_15_container);
      
#line 1047 
      goto ldv_45075;
      case 13: 
#line 1049 
      ;
      
#line 1051 
      ldv_15_ldv_param_1_13 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 1056 
      ldv_emg_wrapper_velocity_ioctl_22(ldv_15_container,ldv_15_ldv_param_1_13,ldv_15_ldv_param_2_14);
      
#line 1060 
      ldv_free((void *)ldv_15_ldv_param_1_13);
      
#line 1063 
      goto ldv_45075;
      case 14: 
#line 1065 
      ;
      
#line 1071 
      ldv_emg_wrapper_velocity_vlan_rx_add_vid_14(ldv_15_container,(unsigned short)((int)ldv_15_ldv_param_1_11),(unsigned short)((int)ldv_15_ldv_param_2_12));
      
#line 1077 
      goto ldv_45075;
      case 15: 
#line 1079 
      ;
      
#line 1081 
      ldv_15_ldv_param_1_10 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1086 
      ldv_emg_wrapper_velocity_ethtool_get_wol_13(ldv_15_container,ldv_15_ldv_param_1_10);
      
#line 1090 
      ldv_free((void *)ldv_15_ldv_param_1_10);
      
#line 1093 
      goto ldv_45075;
      case 16: 
#line 1095 
      ;
      
#line 1097 
      ldv_15_ldv_param_1_9 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1102 
      ldv_emg_wrapper_velocity_get_settings_12(ldv_15_container,ldv_15_ldv_param_1_9);
      
#line 1106 
      ldv_free((void *)ldv_15_ldv_param_1_9);
      
#line 1109 
      goto ldv_45075;
      case 17: 
#line 1111 
      ;
      
#line 1114 
      ldv_emg_wrapper_velocity_ethtool_down_20(ldv_15_container);
      
#line 1117 
      goto ldv_45075;
      case 18: 
#line 1119 
      ;
      
#line 1121 
      ldv_15_ldv_param_0_8 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1126 
      ldv_emg_wrapper_velocity_xmit_10(ldv_15_ldv_param_0_8,ldv_15_container);
      
#line 1130 
      ldv_free((void *)ldv_15_ldv_param_0_8);
      
#line 1133 
      goto ldv_45075;
      case 19: 
#line 1135 
      ;
      
#line 1138 
      ldv_emg_wrapper_velocity_get_msglevel_9(ldv_15_container);
      
#line 1141 
      goto ldv_45075;
      case 20: 
#line 1143 
      ;
      
#line 1145 
      ldv_15_ldv_param_1_7 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1150 
      ldv_emg_wrapper_velocity_get_drvinfo_8(ldv_15_container,ldv_15_ldv_param_1_7);
      
#line 1154 
      ldv_free((void *)ldv_15_ldv_param_1_7);
      
#line 1157 
      goto ldv_45075;
      case 21: 
#line 1159 
      ;
      
#line 1162 
      ldv_emg_wrapper_velocity_get_link_7(ldv_15_container);
      
#line 1165 
      goto ldv_45075;
      case 22: 
#line 1167 
      ;
      
#line 1170 
      (*ldv_emg_alias_eth_validate_addr_6)(ldv_15_container);
      
#line 1173 
      goto ldv_45075;
      case 23: 
#line 1175 
      ;
      
#line 1177 
      ldv_15_ldv_param_1_5 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1178 
      ldv_15_ldv_param_2_6 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1183 
      ldv_emg_wrapper_velocity_get_ethtool_stats_5(ldv_15_container,ldv_15_ldv_param_1_5,ldv_15_ldv_param_2_6);
      
#line 1187 
      ldv_free((void *)ldv_15_ldv_param_1_5);
      
#line 1188 
      ldv_free((void *)ldv_15_ldv_param_2_6);
      
#line 1191 
      goto ldv_45075;
      case 24: 
#line 1193 
      ;
      
#line 1199 
      ldv_emg_wrapper_velocity_change_mtu_4(ldv_15_container,ldv_15_ldv_param_1_4);
      
#line 1205 
      goto ldv_45075;
      case 25: 
#line 1207 
      ;
      
#line 1213 
      ldv_emg_wrapper_velocity_set_msglevel_3(ldv_15_container,ldv_15_ldv_param_1_3);
      
#line 1219 
      goto ldv_45075;
      default: 
#line 1221 
      ;
      
#line 1221 
      __VERIFIER_assume(0);
    }
    ldv_45075: 
#line 1224 
    ;
    
#line 1224 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 1231 
    goto ldv_call_15;
  }
  else {
    
#line 1239 
    __retres = (void *)0;
    
#line 1239 
    goto return_label;
  }
  
#line 1242 
  __retres = (void *)0;
  return_label: 
#line 1242 
                return __retres;
}


#line 1247  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1250 
  tmp = ldv_undef_int();
  
#line 1250 
  switch (tmp) {
    case 0: 
#line 1251 
    ;
    
#line 1252 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 1253 
    __VERIFIER_assume(ret == 0);
    
#line 1254 
    goto ldv_45107;
    default: 
#line 1256 
    ;
    
#line 1256 
    __VERIFIER_assume(0);
  }
  ldv_45107: 
#line 1257 
  ;
  
#line 1258 
  return;
}


#line 1262  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1268 
  ldv_2_netdev = arg0;
  
#line 1269 
  ldv_free((void *)ldv_2_netdev);
  
#line 1273 
  goto return_label;
  return_label: 
#line 1275 
                return;
}


#line 1280  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_13(void *arg0)
{
  void *__retres;
  struct device *ldv_13_device;
  int tmp;
  
#line 1283 
  struct dev_pm_ops *ldv_13_pm_ops = ldv_emg_alias_velocity_pm_ops_3;
  
#line 1287 
  ldv_free(arg0);
  
#line 1294 
  goto ldv_do_13;
  
#line 1296 
  __retres = (void *)0;
  
#line 1296 
  goto return_label;
  ldv_do_13: 
#line 1299 
  ;
  
#line 1302 
  tmp = ldv_undef_int();
  
#line 1302 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 1303 
    ;
    
#line 1305 
    if (ldv_13_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 1307 
                                                                    (*(ldv_13_pm_ops->runtime_idle))(ldv_13_device); else ;
    
#line 1315 
    goto ldv_do_13;
    case 2: 
#line 1318 
    ;
    
#line 1320 
    if (ldv_13_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 1322 
      (*(ldv_13_pm_ops->runtime_suspend))(ldv_13_device); else ;
    
#line 1327 
    if (ldv_13_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 1329 
      (*(ldv_13_pm_ops->runtime_resume))(ldv_13_device); else ;
    
#line 1337 
    goto ldv_do_13;
    case 3: 
#line 1340 
    ;
    
#line 1342 
    if (ldv_13_pm_ops->prepare != (int (*)(struct device *))0) 
#line 1344 
                                                               (*(ldv_13_pm_ops->prepare))(ldv_13_device); else ;
    
#line 1348 
    tmp_0 = ldv_undef_int();
    
#line 1348 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 1349 
      ;
      
#line 1352 
      ldv_emg_wrapper_velocity_suspend_2(ldv_13_device);
      
#line 1355 
      tmp_1 = ldv_undef_int();
      
#line 1355 
      if (tmp_1 != 0) {
        
#line 1357 
        if (ldv_13_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 1359 
          (*(ldv_13_pm_ops->suspend_noirq))(ldv_13_device); else ;
        
#line 1364 
        if (ldv_13_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 1366 
          (*(ldv_13_pm_ops->resume_noirq))(ldv_13_device); else ;
      }
      else {
        
#line 1373 
        if (ldv_13_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 1375 
          (*(ldv_13_pm_ops->suspend_late))(ldv_13_device); else ;
        
#line 1380 
        if (ldv_13_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 1382 
          (*(ldv_13_pm_ops->resume_early))(ldv_13_device); else ;
      }
      
#line 1389 
      ldv_emg_wrapper_velocity_resume_4(ldv_13_device);
      
#line 1392 
      goto ldv_45123;
      case 2: 
#line 1394 
      ;
      
#line 1397 
      ldv_emg_wrapper_velocity_suspend_2(ldv_13_device);
      
#line 1400 
      tmp_2 = ldv_undef_int();
      
#line 1400 
      if (tmp_2 != 0) {
        
#line 1402 
        if (ldv_13_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 1404 
          (*(ldv_13_pm_ops->freeze_late))(ldv_13_device); else ;
        
#line 1409 
        if (ldv_13_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 1411 
          (*(ldv_13_pm_ops->thaw_early))(ldv_13_device); else ;
      }
      else {
        
#line 1418 
        if (ldv_13_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 1420 
          (*(ldv_13_pm_ops->freeze_noirq))(ldv_13_device); else ;
        
#line 1425 
        if (ldv_13_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 1427 
          (*(ldv_13_pm_ops->thaw_noirq))(ldv_13_device); else ;
      }
      
#line 1434 
      ldv_emg_wrapper_velocity_resume_4(ldv_13_device);
      
#line 1437 
      goto ldv_45123;
      case 3: 
#line 1439 
      ;
      
#line 1442 
      ldv_emg_wrapper_velocity_suspend_2(ldv_13_device);
      
#line 1445 
      tmp_3 = ldv_undef_int();
      
#line 1445 
      if (tmp_3 != 0) {
        
#line 1447 
        if (ldv_13_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 1449 
          (*(ldv_13_pm_ops->poweroff_late))(ldv_13_device); else ;
        
#line 1454 
        if (ldv_13_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 1456 
          (*(ldv_13_pm_ops->restore_early))(ldv_13_device); else ;
      }
      else {
        
#line 1463 
        if (ldv_13_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 1465 
          (*(ldv_13_pm_ops->poweroff_noirq))(ldv_13_device); else ;
        
#line 1470 
        if (ldv_13_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 1472 
          (*(ldv_13_pm_ops->restore_noirq))(ldv_13_device); else ;
      }
      
#line 1479 
      ldv_emg_wrapper_velocity_resume_4(ldv_13_device);
      
#line 1482 
      goto ldv_45123;
      default: 
#line 1484 
      ;
      
#line 1484 
      __VERIFIER_assume(0);
    }
    ldv_45123: 
#line 1487 
    ;
    
#line 1487 
    if (ldv_13_pm_ops->complete != (void (*)(struct device *))0) 
#line 1489 
                                                                 (*(ldv_13_pm_ops->complete))(ldv_13_device); else ;
    
#line 1497 
    goto ldv_do_13;
    case 4: 
#line 1500 
    ;
    
#line 1506 
    __retres = (void *)0;
    
#line 1506 
    goto return_label;
    default: 
#line 1509 
    ;
    
#line 1509 
    __VERIFIER_assume(0);
  }
  
#line 1512 
  __retres = (void *)0;
  return_label: 
#line 1512 
                return __retres;
}


#line 1517  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_14(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_14_ret_val;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp;
  
#line 1523 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_velocity_intr_2;
  
#line 1526 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 1531 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 1532 
    ldv_14_line = data->arg0;
    
#line 1533 
    ldv_14_callback = data->arg1;
    
#line 1534 
    ldv_14_thread = data->arg2;
    
#line 1535 
    ldv_14_data = data->arg3;
    
#line 1536 
    ldv_free((void *)data);
  }
  else ;
  
#line 1542 
  ldv_switch_to_interrupt_context();
  
#line 1544 
  ldv_14_ret_val = ldv_emg_wrapper_velocity_intr_2(ldv_14_line,ldv_14_data);
  
#line 1546 
  ldv_switch_to_process_context();
  
#line 1549 
  tmp = ldv_undef_int();
  
#line 1549 
  if (tmp != 0) {
    
#line 1551 
    __VERIFIER_assume(ldv_14_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1555 
    if (ldv_14_thread != (enum irqreturn (*)(int , void *))0) 
#line 1557 
                                                              (*ldv_14_thread)(ldv_14_line,ldv_14_data); else ;
  }
  else 
#line 1564 
       __VERIFIER_assume(ldv_14_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1573 
  __retres = (void *)0;
  
#line 1573 
  goto return_label;
  
#line 1575 
  __retres = (void *)0;
  return_label: 
#line 1575 
                return __retres;
}


#line 1580  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_10_netdev;
  int tmp_3;
  
#line 1584 
  int ldv_10_ret = ldv_undef_int();
  
#line 1587 
  ldv_10_ret = ldv_undef_int();
  
#line 1590 
  tmp_3 = ldv_undef_int();
  
#line 1590 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1592 
    ldv_10_netdev = arg0;
    
#line 1597 
    ldv_10_ret = ldv_emg_wrapper_velocity_open_2(ldv_10_netdev);
    
#line 1600 
    tmp_1 = ldv_undef_int();
    
#line 1600 
    if (tmp_1 != 0) {
      
#line 1602 
      __VERIFIER_assume(ldv_10_ret == 0);
      
#line 1606 
      ldv_dispatch_register_10_4(ldv_10_netdev);
      
#line 1610 
      __retres = 0;
      
#line 1610 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1617 
      __VERIFIER_assume(ldv_10_ret != 0);
      
#line 1618 
      ldv_failed_register_netdev();
      
#line 1619 
      tmp_0 = ldv_undef_int_negative();
      
#line 1619 
      __retres = tmp_0;
      
#line 1619 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1627 
    ldv_failed_register_netdev();
    
#line 1628 
    tmp_2 = ldv_undef_int_negative();
    
#line 1628 
    __retres = tmp_2;
    
#line 1628 
    goto return_label;
  }
  return_label: 
#line 1590 
                return __retres;
}


#line 1638  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/via/via-velocity.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_11_line;
  void *ldv_11_data;
  enum irqreturn (*ldv_11_thread)(int , void *);
  int tmp_0;
  
#line 1643 
  enum irqreturn (*ldv_11_callback)(int , void *) = & ldv_emg_wrapper_velocity_intr_2;
  
#line 1648 
  tmp_0 = ldv_undef_int();
  
#line 1648 
  if (tmp_0 != 0) {
    
#line 1650 
    ldv_11_line = (int)arg0;
    
#line 1651 
    ldv_11_callback = arg1;
    
#line 1652 
    ldv_11_thread = (enum irqreturn (*)(int , void *))0;
    
#line 1653 
    ldv_11_data = arg4;
    
#line 1657 
    ldv_dispatch_irq_register_11_3(ldv_11_line,ldv_11_callback,ldv_11_thread,ldv_11_data);
    
#line 1661 
    __retres = 0;
    
#line 1661 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1668 
    tmp = ldv_undef_int_negative();
    
#line 1668 
    __retres = tmp;
    
#line 1668 
    goto return_label;
  }
  return_label: 
#line 1648 
                return __retres;
}


