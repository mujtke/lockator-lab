/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11846 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_179 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_179 __anonCompField_iov_iter_50 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_15585 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_15585 socket_state;

#line 54 
struct poll_table_struct;

#line 55 
struct pipe_inode_info;

#line 56 
struct net;

#line 73 
struct fasync_struct;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_181 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_181 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_183 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_184 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_186 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_188 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_187 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_188 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_189 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_190 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_182 {
   int _pad[28U] ;
   struct __anonstruct__kill_183 _kill ;
   struct __anonstruct__timer_184 _timer ;
   struct __anonstruct__rt_185 _rt ;
   struct __anonstruct__sigchld_186 _sigchld ;
   struct __anonstruct__sigfault_187 _sigfault ;
   struct __anonstruct__sigpoll_189 _sigpoll ;
   struct __anonstruct__sigsys_190 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_182 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_197 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_198 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_200 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_199 {
   struct keyring_index_key index_key ;
   struct __anonstruct_200 __anonCompField___anonunion_199_53 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_201 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_203 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_202 {
   union __anonunion_payload_203 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_197 __anonCompField_key_51 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_198 __anonCompField_key_52 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_199 __anonCompField_key_54 ;
   union __anonunion_type_data_201 type_data ;
   union __anonunion_202 __anonCompField_key_55 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_218 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_218 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_22915 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_22915 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_223 __anonCompField_nf_bridge_info_62 ;
   union __anonunion_224 __anonCompField_nf_bridge_info_63 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_225 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_225 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_227 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_226 {
   u64 v64 ;
   struct __anonstruct_227 __anonCompField___anonunion_226_64 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_226 __anonCompField_skb_mstamp_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_230 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_229 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_230 __anonCompField___anonstruct_229_66 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_228 {
   struct __anonstruct_229 __anonCompField___anonunion_228_67 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_232 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_231 {
   __wsum csum ;
   struct __anonstruct_232 __anonCompField___anonunion_231_69 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_233 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_234 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_235 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_228 __anonCompField_sk_buff_68 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_231 __anonCompField_sk_buff_70 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_233 __anonCompField_sk_buff_71 ;
   __u32 secmark ;
   union __anonunion_234 __anonCompField_sk_buff_72 ;
   union __anonunion_235 __anonCompField_sk_buff_73 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 890 
enum pkt_hash_types {
    PKT_HASH_TYPE_NONE = 0,
    PKT_HASH_TYPE_L2 = 1,
    PKT_HASH_TYPE_L3 = 2,
    PKT_HASH_TYPE_L4 = 3
};

#line 3470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_237 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_237 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_238 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_238 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_239 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_239 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_240 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_240 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_241 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_241 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_242 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_242 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_243 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_243 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_244 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_244 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_245 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_246 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_245 ifr_ifrn ;
   union __anonunion_ifr_ifru_246 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_251 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_250 {
   struct __anonstruct_251 __anonCompField___anonunion_250_74 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_250 __anonCompField_lockref_75 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_253 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_252 {
   struct __anonstruct_253 __anonCompField___anonunion_252_76 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_252 __anonCompField_qstr_77 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_254 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_254 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_258 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_257 {
   struct __anonstruct_258 __anonCompField___anonunion_257_78 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_257 __anonCompField_radix_tree_node_79 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_262 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_262 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_263 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_263 __anonCompField_kqid_81 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_266 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_267 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_268 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_266 __anonCompField_inode_82 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_267 __anonCompField_inode_83 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_268 __anonCompField_inode_84 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_269 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_269 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_271 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_270 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_271 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_270 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_302 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_302 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28602 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28602 phy_interface_t;

#line 126 
enum ldv_28655 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28655 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30365 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30366 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_315 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_317 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_315 adj_list ;
   struct __anonstruct_all_adj_list_316 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30365 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30366 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_317 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_328 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_328 __anonCompField_bpf_prog_99 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_339 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_339 __anonCompField_dst_entry_100 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_340 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_340 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_342 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_341 {
   __addrpair skc_addrpair ;
   struct __anonstruct_342 __anonCompField___anonunion_341_101 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_343 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_345 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_344 {
   __portpair skc_portpair ;
   struct __anonstruct_345 __anonCompField___anonunion_344_104 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_346 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_347 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_341 __anonCompField_sock_common_102 ;
   union __anonunion_343 __anonCompField_sock_common_103 ;
   union __anonunion_344 __anonCompField_sock_common_105 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_346 __anonCompField_sock_common_106 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_347 __anonCompField_sock_common_107 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_348 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_348 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_351 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_351 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 2242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) priority : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_arp.h"
struct arphdr {
   __be16 ar_hrd ;
   __be16 ar_pro ;
   unsigned char ar_hln ;
   unsigned char ar_pln ;
   __be16 ar_op ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_371 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_371 __anonCompField_inetpeer_addr_base_109 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_372 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_374 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_373 {
   struct __anonstruct_374 __anonCompField___anonunion_373_111 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_372 __anonCompField_inet_peer_110 ;
   union __anonunion_373 __anonCompField_inet_peer_112 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/route.h"
struct in_ifaddr;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_376 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_376 __anonCompField_pci_dev_114 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_vlan.h"
struct vlan_hdr {
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct ipv4_devconf {
   void *sysctl ;
   int data[29U] ;
   unsigned long state[1U] ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct ip_mc_list;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_device {
   struct net_device *dev ;
   atomic_t refcnt ;
   int dead ;
   struct in_ifaddr *ifa_list ;
   struct ip_mc_list *mc_list ;
   struct ip_mc_list **mc_hash ;
   int mc_count ;
   spinlock_t mc_tomb_lock ;
   struct ip_mc_list *mc_tomb ;
   unsigned long mr_v1_seen ;
   unsigned long mr_v2_seen ;
   unsigned long mr_maxdelay ;
   unsigned char mr_qrv ;
   unsigned char mr_gq_running ;
   unsigned char mr_ifc_count ;
   struct timer_list mr_gq_timer ;
   struct timer_list mr_ifc_timer ;
   struct neigh_parms *arp_parms ;
   struct ipv4_devconf cnf ;
   struct callback_head callback_head ;
};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_ifaddr {
   struct hlist_node hash ;
   struct in_ifaddr *ifa_next ;
   struct in_device *ifa_dev ;
   struct callback_head callback_head ;
   __be32 ifa_local ;
   __be32 ifa_address ;
   __be32 ifa_mask ;
   __be32 ifa_broadcast ;
   unsigned char ifa_scope ;
   unsigned char ifa_prefixlen ;
   __u32 ifa_flags ;
   char ifa_label[16U] ;
   __u32 ifa_valid_lft ;
   __u32 ifa_preferred_lft ;
   unsigned long ifa_cstamp ;
   unsigned long ifa_tstamp ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
union __anonunion___u_383 {
   struct in_device * const __val ;
   char __c[1U] ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct UPT1_TxStats {
   u64 TSOPktsTxOK ;
   u64 TSOBytesTxOK ;
   u64 ucastPktsTxOK ;
   u64 ucastBytesTxOK ;
   u64 mcastPktsTxOK ;
   u64 mcastBytesTxOK ;
   u64 bcastPktsTxOK ;
   u64 bcastBytesTxOK ;
   u64 pktsTxError ;
   u64 pktsTxDiscard ;
};

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/upt1_defs.h"
struct UPT1_RxStats {
   u64 LROPktsRxOK ;
   u64 LROBytesRxOK ;
   u64 ucastPktsRxOK ;
   u64 ucastBytesRxOK ;
   u64 mcastPktsRxOK ;
   u64 mcastBytesRxOK ;
   u64 bcastPktsRxOK ;
   u64 bcastBytesRxOK ;
   u64 pktsRxOutOfBuf ;
   u64 pktsRxError ;
};

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/upt1_defs.h"
struct UPT1_RSSConf {
   u16 hashType ;
   u16 hashFunc ;
   u16 hashKeySize ;
   u16 indTableSize ;
   u8 hashKey[40U] ;
   u8 indTable[128U] ;
};

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/upt1_defs.h"
struct Vmxnet3_TxDesc {
   __le64 addr ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) len : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) gen : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rsvd : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) dtype : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ext1 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) msscof : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))) hlen : 10 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) om : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) eop : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cq : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ext2 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ti : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) tci : 16 ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_TxDataDesc {
   u8 data[128U] ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_TxCompDesc {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) txdIdx : 12 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(20))) ext1 : 20 ;
   __le32 ext2 ;
   __le32 ext3 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(24))) rsvd : 24 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) type : 7 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) gen : 1 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_RxDesc {
   __le64 addr ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) len : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) btype : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) dtype : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) rsvd : 15 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) gen : 1 ;
   u32 ext1 ;
};

#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_RxCompDesc {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) rxdIdx : 12 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ext1 : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) eop : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sop : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))) rqID : 10 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) rssType : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cnc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ext2 : 1 ;
   __le32 rssHash ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) len : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) err : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ts : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) tci : 16 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) csum : 16 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tuc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) udp : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tcp : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) v6 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) v4 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frg : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fcs : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) type : 7 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) gen : 1 ;
};

#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_RxCompDescExt {
   __le32 dword1 ;
   u8 segCnt ;
   u8 dupAckCnt ;
   __le16 tsDelta ;
   __le32 dword2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) mss : 16 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tuc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) udp : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tcp : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) v6 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) v4 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frg : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fcs : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) type : 7 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) gen : 1 ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
union Vmxnet3_GenericDesc {
   __le64 qword[2U] ;
   __le32 dword[4U] ;
   __le16 word[8U] ;
   struct Vmxnet3_TxDesc txd ;
   struct Vmxnet3_RxDesc rxd ;
   struct Vmxnet3_TxCompDesc tcd ;
   struct Vmxnet3_RxCompDesc rcd ;
   struct Vmxnet3_RxCompDescExt rcdExt ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_GOSInfo {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) gosBits : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) gosType : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) gosVer : 16 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))) gosMisc : 10 ;
};

#line 422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_DriverInfo {
   __le32 version ;
   struct Vmxnet3_GOSInfo gos ;
   __le32 vmxnet3RevSpt ;
   __le32 uptVerSpt ;
};

#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_MiscConf {
   struct Vmxnet3_DriverInfo driverInfo ;
   __le64 uptFeatures ;
   __le64 ddPA ;
   __le64 queueDescPA ;
   __le32 ddLen ;
   __le32 queueDescLen ;
   __le32 mtu ;
   __le16 maxNumRxSG ;
   u8 numTxQueues ;
   u8 numRxQueues ;
   __le32 reserved[4U] ;
};

#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_TxQueueConf {
   __le64 txRingBasePA ;
   __le64 dataRingBasePA ;
   __le64 compRingBasePA ;
   __le64 ddPA ;
   __le64 reserved ;
   __le32 txRingSize ;
   __le32 dataRingSize ;
   __le32 compRingSize ;
   __le32 ddLen ;
   u8 intrIdx ;
   u8 _pad[7U] ;
};

#line 471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_RxQueueConf {
   __le64 rxRingBasePA[2U] ;
   __le64 compRingBasePA ;
   __le64 ddPA ;
   __le64 reserved ;
   __le32 rxRingSize[2U] ;
   __le32 compRingSize ;
   __le32 ddLen ;
   u8 intrIdx ;
   u8 _pad[7U] ;
};

#line 484 
enum vmxnet3_intr_mask_mode {
    VMXNET3_IMM_AUTO = 0,
    VMXNET3_IMM_ACTIVE = 1,
    VMXNET3_IMM_LAZY = 2
};

#line 490 
enum vmxnet3_intr_type {
    VMXNET3_IT_AUTO = 0,
    VMXNET3_IT_INTX = 1,
    VMXNET3_IT_MSI = 2,
    VMXNET3_IT_MSIX = 3
};

#line 497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_IntrConf {
   bool autoMask ;
   u8 numIntrs ;
   u8 eventIntrIdx ;
   u8 modLevels[25U] ;
   __le32 intrCtrl ;
   __le32 reserved[2U] ;
};

#line 517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_QueueStatus {
   bool stopped ;
   u8 _pad[3U] ;
   __le32 error ;
};

#line 527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_TxQueueCtrl {
   __le32 txNumDeferred ;
   __le32 txThreshold ;
   __le64 reserved ;
};

#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_RxQueueCtrl {
   bool updateRxProd ;
   u8 _pad[7U] ;
   __le64 reserved ;
};

#line 549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_RxFilterConf {
   __le32 rxMode ;
   __le16 mfTableLen ;
   __le16 _pad1 ;
   __le64 mfTablePA ;
   __le32 vfTable[128U] ;
};

#line 557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_PM_PktFilter {
   u8 maskSize ;
   u8 patternSize ;
   u8 mask[16U] ;
   u8 pattern[128U] ;
   u8 pad[6U] ;
};

#line 575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_PMConf {
   __le16 wakeUpEvents ;
   u8 numFilters ;
   u8 pad[5U] ;
   struct Vmxnet3_PM_PktFilter filters[6U] ;
};

#line 583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_VariableLenConfDesc {
   __le32 confVer ;
   __le32 confLen ;
   __le64 confPA ;
};

#line 590  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_TxQueueDesc {
   struct Vmxnet3_TxQueueCtrl ctrl ;
   struct Vmxnet3_TxQueueConf conf ;
   struct Vmxnet3_QueueStatus status ;
   struct UPT1_TxStats stats ;
   u8 _pad[88U] ;
};

#line 601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_RxQueueDesc {
   struct Vmxnet3_RxQueueCtrl ctrl ;
   struct Vmxnet3_RxQueueConf conf ;
   struct Vmxnet3_QueueStatus status ;
   struct UPT1_RxStats stats ;
   u8 __pad[88U] ;
};

#line 611  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_DSDevRead {
   struct Vmxnet3_MiscConf misc ;
   struct Vmxnet3_IntrConf intrConf ;
   struct Vmxnet3_RxFilterConf rxFilterConf ;
   struct Vmxnet3_VariableLenConfDesc rssConfDesc ;
   struct Vmxnet3_VariableLenConfDesc pmConfDesc ;
   struct Vmxnet3_VariableLenConfDesc pluginConfDesc ;
};

#line 622  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct Vmxnet3_DriverShared {
   __le32 magic ;
   __le32 pad ;
   struct Vmxnet3_DSDevRead devRead ;
   __le32 ecr ;
   __le32 reserved[5U] ;
};

#line 658  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_defs.h"
struct vmxnet3_cmd_ring {
   union Vmxnet3_GenericDesc *base ;
   u32 size ;
   u32 next2fill ;
   u32 next2comp ;
   u8 gen ;
   dma_addr_t basePA ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_comp_ring {
   union Vmxnet3_GenericDesc *base ;
   u32 size ;
   u32 next2proc ;
   u8 gen ;
   u8 intr_idx ;
   dma_addr_t basePA ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_tx_data_ring {
   struct Vmxnet3_TxDataDesc *base ;
   u32 size ;
   dma_addr_t basePA ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_tx_buf_info {
   u32 map_type ;
   u16 len ;
   u16 sop_idx ;
   dma_addr_t dma_addr ;
   struct sk_buff *skb ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_tq_driver_stats {
   u64 drop_total ;
   u64 drop_too_many_frags ;
   u64 drop_oversized_hdr ;
   u64 drop_hdr_inspect_err ;
   u64 drop_tso ;
   u64 tx_ring_full ;
   u64 linearized ;
   u64 copy_skb_header ;
   u64 oversized_hdr ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_tx_ctx {
   bool ipv4 ;
   bool ipv6 ;
   u16 mss ;
   u32 eth_ip_hdr_size ;
   u32 l4_hdr_size ;
   u32 copy_size ;
   union Vmxnet3_GenericDesc *sop_txd ;
   union Vmxnet3_GenericDesc *eop_txd ;
};

#line 224 
struct vmxnet3_adapter;

#line 224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_tx_queue {
   char name[24U] ;
   struct vmxnet3_adapter *adapter ;
   spinlock_t tx_lock ;
   struct vmxnet3_cmd_ring tx_ring ;
   struct vmxnet3_tx_buf_info *buf_info ;
   dma_addr_t buf_info_pa ;
   struct vmxnet3_tx_data_ring data_ring ;
   struct vmxnet3_comp_ring comp_ring ;
   struct Vmxnet3_TxQueueCtrl *shared ;
   struct vmxnet3_tq_driver_stats stats ;
   bool stopped ;
   int num_stop ;
   int qid ;
};

#line 241 
enum vmxnet3_rx_buf_type {
    VMXNET3_RX_BUF_NONE = 0,
    VMXNET3_RX_BUF_SKB = 1,
    VMXNET3_RX_BUF_PAGE = 2
};

#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
union __anonunion_384 {
   struct sk_buff *skb ;
   struct page *page ;
};

#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_rx_buf_info {
   enum vmxnet3_rx_buf_type buf_type ;
   u16 len ;
   union __anonunion_384 __anonCompField_vmxnet3_rx_buf_info_115 ;
   dma_addr_t dma_addr ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_rx_ctx {
   struct sk_buff *skb ;
   u32 sop_idx ;
};

#line 262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_rq_driver_stats {
   u64 drop_total ;
   u64 drop_err ;
   u64 drop_fcs ;
   u64 rx_buf_alloc_failure ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_rx_queue {
   char name[24U] ;
   struct vmxnet3_adapter *adapter ;
   struct napi_struct napi ;
   struct vmxnet3_cmd_ring rx_ring[2U] ;
   struct vmxnet3_comp_ring comp_ring ;
   struct vmxnet3_rx_ctx rx_ctx ;
   u32 qid ;
   u32 qid2 ;
   struct vmxnet3_rx_buf_info *buf_info[2U] ;
   dma_addr_t buf_info_pa ;
   struct Vmxnet3_RxQueueCtrl *shared ;
   struct vmxnet3_rq_driver_stats stats ;
};

#line 284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_intr {
   enum vmxnet3_intr_mask_mode mask_mode ;
   enum vmxnet3_intr_type type ;
   u8 num_intrs ;
   u8 event_intr_idx ;
   u8 mod_levels[17U] ;
   char event_msi_vector_name[27U] ;
   struct msix_entry msix_entries[17U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_adapter {
   struct vmxnet3_tx_queue tx_queue[8U] ;
   struct vmxnet3_rx_queue rx_queue[8U] ;
   unsigned long active_vlans[64U] ;
   struct vmxnet3_intr intr ;
   spinlock_t cmd_lock ;
   struct Vmxnet3_DriverShared *shared ;
   struct Vmxnet3_PMConf *pm_conf ;
   struct Vmxnet3_TxQueueDesc *tqd_start ;
   struct Vmxnet3_RxQueueDesc *rqd_start ;
   struct net_device *netdev ;
   struct pci_dev *pdev ;
   u8 *hw_addr0 ;
   u8 *hw_addr1 ;
   u8 version ;
   bool rxcsum ;
   bool lro ;
   struct UPT1_RSSConf *rss_conf ;
   bool rss ;
   u32 num_rx_queues ;
   u32 num_tx_queues ;
   unsigned int skb_buf_size ;
   int rx_buf_per_pkt ;
   dma_addr_t shared_pa ;
   dma_addr_t queue_desc_pa ;
   u32 wol ;
   u32 link_speed ;
   u64 tx_timeout_count ;
   u32 tx_ring_size ;
   u32 rx_ring_size ;
   u32 rx_ring2_size ;
   struct work_struct work ;
   unsigned long state ;
   int share_intr ;
   dma_addr_t adapter_pa ;
   dma_addr_t pm_conf_pa ;
   dma_addr_t rss_conf_pa ;
};

#line 1177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
union __anonunion_hdr_386 {
   void *ptr ;
   struct ethhdr *eth ;
   struct iphdr *ipv4 ;
   struct ipv6hdr *ipv6 ;
   struct tcphdr *tcp ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
struct vmxnet3_stat_desc {
   char desc[32U] ;
   int offset ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_12 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_11 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_17 {
   struct net_device *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

void *__builtin_memcpy(void *, void const *, unsigned long);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/fvtp/.tmp_vmxnet3_drv.c"
void ldv_inline_asm(void);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 9 
int ldv_atomic_dec_and_test(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  int __retres;
  
#line 481 
  int bitpos = -1;
  
#line 482 
  ldv_inline_asm();
  
#line 490 
  __retres = bitpos + 1;
  
#line 490 
  return __retres;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_next_bit(unsigned long const *, unsigned long, unsigned long);


#line 42 
unsigned long find_first_bit(unsigned long const *, unsigned long);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  
#line 47 
  unsigned long res = 0UL;
  
#line 48 
  ldv_inline_asm();
  
#line 58 
  return res;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/byteorder/generic.h"
__inline static void le32_add_cpu(__le32 *var, u32 val)
{
  
#line 150 
  *var += val;
  
#line 151 
  return;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  unsigned long tmp_0;
  
#line 80 
  if (0 != 0) 
#line 80 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 8) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 8) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 16) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 16) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 24) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 24) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 128ULL) != 0ULL)))) + (((unsigned int)((((((((((unsigned long long)(w >> 32) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 32) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 40) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 40) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 48) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 48) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 56) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 56) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 128ULL) != 0ULL))))); else 
                                                                    
#line 80 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  
#line 80 
  return tmp_0;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  unsigned int __retres;
  int tmp_0;
  
#line 178 
  tmp_0 = fls64((unsigned long long)l);
  
#line 178 
  __retres = (unsigned int)tmp_0;
  
#line 178 
  return __retres;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = fls((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __rounddown_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 72 
  tmp = fls_long(n);
  
#line 72 
  __retres = 1UL << (tmp + 4294967295U);
  
#line 72 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_dev_dbg(struct _ddebug *, struct device const *, char const * , ...);


#line 59 
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device const *, char const * , ...);


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int sprintf(char *, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
int __bitmap_weight(unsigned long const *, unsigned int);


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long const *src, unsigned int nbits)
{
  int __retres;
  int tmp_0;
  
#line 300 
  if (0 != 0 && nbits <= 64U) {
    unsigned long tmp;
    
#line 301 
    tmp = hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
    
#line 301 
    __retres = (int)tmp;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 302 
  tmp_0 = __bitmap_weight(src,nbits);
  
#line 302 
  __retres = tmp_0;
  return_label: 
#line 302 
                return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
extern int nr_cpu_ids;


#line 89 
extern struct cpumask const * const cpu_online_mask;


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_weight(struct cpumask const *srcp)
{
  unsigned int __retres;
  int tmp;
  
#line 476 
  tmp = bitmap_weight((unsigned long const *)(& srcp->bits),(unsigned int)nr_cpu_ids);
  
#line 476 
  __retres = (unsigned int)tmp;
  
#line 476 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 120 
static int atomic_dec_and_test(atomic_t *v);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 333 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_80(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_81(spinlock_t *lock);


#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 452 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 453 
  return;
}


#line 486 
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_97(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_99(spinlock_t *lock, unsigned long flags);


#line 514 
static void ldv_spin_unlock_irqrestore_101(spinlock_t *lock, unsigned long flags);


#line 518 
static void ldv_spin_unlock_irqrestore_103(spinlock_t *lock, unsigned long flags);


#line 522 
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags);


#line 526 
static void ldv_spin_unlock_irqrestore_107(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags);


#line 534 
static void ldv_spin_unlock_irqrestore_117(spinlock_t *lock, unsigned long flags);


#line 538 
static void ldv_spin_unlock_irqrestore_119(spinlock_t *lock, unsigned long flags);


#line 542 
static void ldv_spin_unlock_irqrestore_121(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 74 
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_96(spinlock_t *ldv_func_arg1);


#line 90 
static void ldv___ldv_spin_lock_98(spinlock_t *ldv_func_arg1);


#line 94 
static void ldv___ldv_spin_lock_100(spinlock_t *ldv_func_arg1);


#line 98 
static void ldv___ldv_spin_lock_102(spinlock_t *ldv_func_arg1);


#line 102 
static void ldv___ldv_spin_lock_104(spinlock_t *ldv_func_arg1);


#line 106 
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1);


#line 110 
static void ldv___ldv_spin_lock_108(spinlock_t *ldv_func_arg1);


#line 114 
static void ldv___ldv_spin_lock_116(spinlock_t *ldv_func_arg1);


#line 118 
static void ldv___ldv_spin_lock_118(spinlock_t *ldv_func_arg1);


#line 122 
static void ldv___ldv_spin_lock_120(spinlock_t *ldv_func_arg1);


#line 130 
void ldv_spin_model_lock(char *);


#line 131 
void ldv_spin_model_unlock(char *);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  
#line 270 
  __preempt_count_add(1);
  
#line 271 
  ldv_inline_asm();
  
#line 272 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  
#line 275 
  ldv_inline_asm();
  
#line 275 
  __preempt_count_sub(1);
  
#line 276 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 463 
int rcu_read_lock_held(void);


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  __rcu_read_lock();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  __rcu_read_unlock();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_79(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_110(struct work_struct *work);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 181 
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_fold(__wsum sum)
{
  __sum16 __retres;
  
#line 24 
  ldv_inline_asm();
  
#line 29 
  __retres = (unsigned short)(~ sum >> 16);
  
#line 29 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  
#line 89 
  ldv_inline_asm();
  
#line 97 
  return sum;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_tcpudp_magic(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  __sum16 tmp_0;
  __wsum tmp;
  
#line 116 
  tmp = csum_tcpudp_nofold(saddr,daddr,(unsigned short)((int)len),(unsigned short)((int)proto),sum);
  
#line 116 
  tmp_0 = csum_fold(tmp);
  
#line 116 
  return tmp_0;
}


#line 179 
__sum16 csum_ipv6_magic(struct in6_addr const *, struct in6_addr const *, __u32, unsigned short, __wsum);


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 569  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
void put_page(struct page *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 852 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_hash(struct sk_buff *skb, __u32 hash, enum pkt_hash_types type)
{
  
#line 928 
  skb->l4_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))(type == (unsigned int)PKT_HASH_TYPE_L4);
  
#line 929 
  skb->sw_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 930 
  skb->hash = hash;
  
#line 931 
  return;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_header_cloned(struct sk_buff const *skb)
{
  int __retres;
  int dataref;
  unsigned char *tmp;
  
#line 1131 
  if ((unsigned int)*((unsigned char *)skb + 142UL) == 0U) {
    
#line 1132 
    __retres = 0;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1134 
  tmp = skb_end_pointer(skb);
  
#line 1134 
  dataref = atomic_read((atomic_t const *)(& ((struct skb_shared_info *)tmp)->dataref));
  
#line 1135 
  dataref = (dataref & 65535) - (dataref >> 16);
  
#line 1136 
  __retres = dataref != 1;
  return_label: 
#line 1136 
                return __retres;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1719 
unsigned char *__pskb_pull_tail(struct sk_buff *, int);


#line 1735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int pskb_may_pull(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  unsigned int tmp;
  unsigned char *tmp_1;
  unsigned int tmp_0;
  
#line 1737 
  tmp = skb_headlen((struct sk_buff const *)skb);
  
#line 1737 
  ;
  
#line 1737 
  if ((long)(tmp >= len) != 0L) {
    
#line 1738 
    __retres = 1;
    
#line 1738 
    goto return_label;
  }
  else ;
  
#line 1739 
  if ((long)(skb->len < len) != 0L) {
    
#line 1740 
    __retres = 0;
    
#line 1740 
    goto return_label;
  }
  else ;
  
#line 1741 
  tmp_0 = skb_headlen((struct sk_buff const *)skb);
  
#line 1741 
  ;
  
#line 1741 
  ;
  
#line 1741 
  tmp_1 = __pskb_pull_tail(skb,(int)(len - tmp_0));
  
#line 1741 
  __retres = tmp_1 != (unsigned char *)0U;
  return_label: 
#line 1741 
                return __retres;
}


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_mac_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1915 
  __retres = skb->head + (int)skb->mac_header;
  
#line 1915 
  return __retres;
}


#line 1962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_checksum_start_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp;
  
#line 1964 
  tmp = skb_headroom(skb);
  
#line 1964 
  ;
  
#line 1964 
  __retres = (int)((unsigned int)skb->__anonCompField_sk_buff_70.__anonCompField___anonunion_231_69.csum_start - tmp);
  
#line 1964 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_frag_set_page(skb_frag_t *frag, struct page *page)
{
  
#line 2360 
  frag->page.p = page;
  
#line 2361 
  return;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_linearize(struct sk_buff *skb)
{
  int tmp_0;
  unsigned char *tmp;
  
#line 2547 
  tmp = __pskb_pull_tail(skb,(int)skb->data_len);
  
#line 2547 
  if (tmp != (unsigned char *)0U) 
#line 2547 
                                  tmp_0 = 0; else 
#line 2547 
                                                  tmp_0 = -12;
  
#line 2547 
  return tmp_0;
}


#line 2557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_linearize(struct sk_buff *skb)
{
  int tmp_1;
  bool tmp;
  
#line 2559 
  tmp = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 2559 
  if ((int)tmp != 0) 
#line 2559 
                     tmp_1 = __skb_linearize(skb); else 
#line 2559 
                                                        tmp_1 = 0;
  
#line 2559 
  return tmp_1;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
__inline static struct ethhdr *eth_hdr(struct sk_buff const *skb)
{
  struct ethhdr *tmp;
  
#line 28 
  tmp = (struct ethhdr *)skb_mac_header(skb);
  
#line 28 
  return tmp;
}


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
__inline static u32 ethtool_rxfh_indir_default(u32 index, u32 n_rx_rings)
{
  u32 __retres;
  
#line 97 
  __retres = index % n_rx_rings;
  
#line 97 
  return __retres;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_86(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_87(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 149 
static int ldv_request_irq_88(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static int ldv_request_irq_89(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 157 
static int ldv_request_irq_90(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 169 
static void ldv_free_irq_91(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 173 
static void ldv_free_irq_92(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 177 
static void ldv_free_irq_93(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 181 
static void ldv_free_irq_94(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 185 
static void ldv_free_irq_95(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2183 
int dev_close(struct net_device *);


#line 2205 
static void ldv_free_netdev_113(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_115(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_subqueue(struct net_device *dev, u16 queue_index)
{
  
#line 2790 
  struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)queue_index);
  
#line 2792 
  netif_tx_start_queue(txq);
  
#line 2793 
  return;
}


#line 2829 
void netif_wake_subqueue(struct net_device *, u16);


#line 2867 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);


#line 2870 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44164;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44164;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44164;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44164;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_44164: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_44170;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44174;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44174;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44174;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44174;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_44174: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_44170;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44183;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44183;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44183;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44183;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_44183: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_44170;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44192;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44192;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44192;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_44192;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_44192: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_44170;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_44170;
    }
    ldv_44170: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_44202;
  ldv_44201: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_start_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_44202: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_44201; else 
#line 3294 
                                                   goto ldv_44203;
  ldv_44203: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3355 
static int ldv_register_netdev_112(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_114(struct net_device *ldv_func_arg1);


#line 3549 
void netdev_rss_key_fill(void *, size_t);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3832 
void netdev_notice(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff const *skb)
{
  struct ipv6hdr *tmp;
  
#line 76 
  tmp = (struct ipv6hdr *)skb_network_header(skb);
  
#line 76 
  return tmp;
}


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 953 
int pci_enable_device_mem(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1041 
pci_power_t pci_choose_state(struct pci_dev *, pm_message_t);


#line 1044 
int __pci_enable_wake(struct pci_dev *, pci_power_t, bool, bool);


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_wake(struct pci_dev *dev, pci_power_t state, bool enable)
{
  int tmp;
  
#line 1056 
  tmp = __pci_enable_wake(dev,state,(_Bool)0,(_Bool)((bool)((int)enable) != 0));
  
#line 1056 
  return tmp;
}


#line 1100 
int pci_request_selected_regions(struct pci_dev *, int, char const *);


#line 1102 
void pci_release_selected_regions(struct pci_dev *, int);


#line 1146 
static int ldv___pci_register_driver_122(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_123(struct pci_driver *ldv_func_arg1);


#line 1212 
void pci_disable_msi(struct pci_dev *);


#line 1216 
void pci_disable_msix(struct pci_dev *);


#line 1218 
int pci_msi_enabled(void);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_111(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 __vlan_get_protocol(struct sk_buff *skb, __be16 type, int *depth)
{
  __be16 __retres;
  
#line 484 
  unsigned int vlan_depth = (unsigned int)skb->mac_len;
  
#line 490 
  if ((unsigned int)type == 129U || (unsigned int)type == 43144U) {
    
#line 491 
    if (vlan_depth != 0U) {
      int tmp;
      {
        
#line 492 
        int __ret_warn_on = vlan_depth <= 3U;
        
#line 492 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 492 
                                              warn_slowpath_null("include/linux/if_vlan.h",492); else ;
        
#line 492 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 492 
      if ((long)tmp != 0L) {
        
#line 493 
        __retres = (unsigned short)0U;
        
#line 493 
        goto return_label;
      }
      else ;
      
#line 494 
      vlan_depth += 4294967292U;
    }
    else 
#line 496 
         vlan_depth = 14U;
    ldv_53645: 
#line 497 
    ;
    {
      struct vlan_hdr *vh;
      int tmp_0;
      
#line 501 
      tmp_0 = pskb_may_pull(skb,vlan_depth + 4U);
      
#line 501 
      if ((long)(tmp_0 == 0) != 0L) {
        
#line 503 
        __retres = (unsigned short)0U;
        
#line 503 
        goto return_label;
      }
      else ;
      
#line 505 
      vh = (struct vlan_hdr *)(skb->data + vlan_depth);
      
#line 506 
      type = vh->h_vlan_encapsulated_proto;
      
#line 507 
      vlan_depth += 4U;
    }
    
#line 509 
    if ((unsigned int)type == 129U || (unsigned int)type == 43144U) 
#line 511 
                                                                    goto ldv_53645; else 
                                                                    
#line 514 
                                                                    goto ldv_53646;
    ldv_53646: 
#line 515 
    ;
  }
  else ;
  
#line 512 
  if (depth != (int *)0) 
#line 513 
                         *depth = (int)vlan_depth; else ;
  
#line 515 
  __retres = type;
  return_label: 
#line 515 
                return __retres;
}


#line 525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 vlan_get_protocol(struct sk_buff *skb)
{
  __be16 tmp;
  
#line 527 
  tmp = __vlan_get_protocol(skb,(unsigned short)((int)skb->protocol),(int *)0);
  
#line 527 
  return tmp;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
__inline static struct in_device *__in_dev_get_rcu(struct net_device const *dev)
{
  struct in_device *tmp_3;
  {
    struct in_device *tmp_0;
    {
      struct in_device *tmp;
      {
        union __anonunion___u_383 __u;
        
#line 205 
        __read_once_size((void const volatile *)(& dev->ip_ptr),(void *)(& __u.__c),8);
        
#line 205 
        tmp = __u.__val;
      }
      
#line 205 
      struct in_device * const _________p1 = tmp;
      
#line 205 
      tmp_0 = _________p1;
    }
    
#line 205 
    struct in_device *________p1 = tmp_0;
    {
      bool __warned;
      int tmp_1;
      
#line 205 
      tmp_1 = debug_lockdep_rcu_enabled();
      
#line 205 
      if (tmp_1 != 0) {
        
#line 205 
        if (! __warned) {
          int tmp_2;
          
#line 205 
          tmp_2 = rcu_read_lock_held();
          
#line 205 
          if (tmp_2 == 0) {
            
#line 205 
            __warned = (_Bool)1;
            
#line 205 
            lockdep_rcu_suspicious("include/linux/inetdevice.h",205,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 205 
    tmp_3 = ________p1;
  }
  
#line 205 
  return tmp_3;
}


#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
__inline static struct in_device *in_dev_get(struct net_device const *dev)
{
  struct in_device *in_dev;
  
#line 212 
  rcu_read_lock();
  
#line 213 
  in_dev = __in_dev_get_rcu(dev);
  
#line 214 
  if (in_dev != (struct in_device *)0) 
#line 215 
                                       atomic_inc(& in_dev->refcnt); else ;
  
#line 216 
  rcu_read_unlock();
  
#line 217 
  return in_dev;
}


#line 232 
void in_dev_finish_destroy(struct in_device *);


#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
__inline static void in_dev_put(struct in_device *idev)
{
  int tmp;
  
#line 236 
  tmp = atomic_dec_and_test(& idev->refcnt);
  
#line 236 
  if (tmp != 0) 
#line 237 
                in_dev_finish_destroy(idev); else ;
  
#line 238 
  return;
}


#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
__inline static void vmxnet3_cmd_ring_adv_next2fill(struct vmxnet3_cmd_ring *ring)
{
  
#line 136 
  ring->next2fill += 1U;
  
#line 137 
  if ((long)(ring->next2fill == ring->size) != 0L) {
    
#line 138 
    ring->next2fill = 0U;
    
#line 139 
    ring->gen = (unsigned char)((unsigned int)ring->gen ^ 1U);
  }
  else ;
  
#line 141 
  return;
}


#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
__inline static void vmxnet3_cmd_ring_adv_next2comp(struct vmxnet3_cmd_ring *ring)
{
  
#line 146 
  ring->next2comp += 1U;
  
#line 146 
  if ((long)(ring->next2comp == ring->size) != 0L) 
#line 146 
                                                   ring->next2comp = 0U; else ;
  
#line 147 
  return;
}


#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
__inline static int vmxnet3_cmd_ring_desc_avail(struct vmxnet3_cmd_ring *ring)
{
  int __retres;
  u32 tmp;
  
#line 153 
  if (ring->next2comp <= ring->next2fill) 
#line 153 
                                          tmp = ring->size; else 
#line 153 
                                                                 tmp = 0U;
  
#line 153 
  ;
  
#line 153 
  __retres = (int)(((tmp + ring->next2comp) - ring->next2fill) + 4294967295U);
  
#line 153 
  return __retres;
}


#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_int.h"
__inline static void vmxnet3_comp_ring_adv_next2proc(struct vmxnet3_comp_ring *ring)
{
  
#line 168 
  ring->next2proc += 1U;
  
#line 169 
  if ((long)(ring->next2proc == ring->size) != 0L) {
    
#line 170 
    ring->next2proc = 0U;
    
#line 171 
    ring->gen = (unsigned char)((unsigned int)ring->gen ^ 1U);
  }
  else ;
  
#line 173 
  return;
}


#line 399 
int vmxnet3_quiesce_dev(struct vmxnet3_adapter *adapter);


#line 402 
int vmxnet3_activate_dev(struct vmxnet3_adapter *adapter);


#line 405 
void vmxnet3_force_close(struct vmxnet3_adapter *adapter);


#line 408 
void vmxnet3_reset_dev(struct vmxnet3_adapter *adapter);


#line 411 
void vmxnet3_tq_destroy_all(struct vmxnet3_adapter *adapter);


#line 414 
void vmxnet3_rq_destroy_all(struct vmxnet3_adapter *adapter);


#line 417 
int vmxnet3_set_features(struct net_device *netdev, netdev_features_t features);


#line 420 
int vmxnet3_create_queues(struct vmxnet3_adapter *adapter, u32 tx_ring_size, u32 rx_ring_size, u32 rx_ring2_size);


#line 423 
void vmxnet3_set_ethtool_ops(struct net_device *netdev);


#line 426 
struct rtnl_link_stats64 *vmxnet3_get_stats64(struct net_device *netdev, struct rtnl_link_stats64 *stats);


#line 428 
char vmxnet3_driver_name[8U];


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
char vmxnet3_driver_name[8U] = {(char)'v', (char)'m', (char)'x', (char)'n', (char)'e', (char)'t', (char)'3', (char)'\000'};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static struct pci_device_id const vmxnet3_pciid_table[2U] = {{.vendor = 5549U, .device = 1968U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
struct pci_device_id const __mod_pci__vmxnet3_pciid_table_device_table[2U];

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int enable_mq = 1;

#line 49 
static void vmxnet3_write_mac_addr(struct vmxnet3_adapter *adapter, u8 *mac);


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_enable_intr(struct vmxnet3_adapter *adapter, unsigned int intr_idx)
{
  
#line 57 
  writel(0U,(void volatile *)(adapter->hw_addr0 + intr_idx * 8U));
  
#line 58 
  return;
}


#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_disable_intr(struct vmxnet3_adapter *adapter, unsigned int intr_idx)
{
  
#line 64 
  writel(1U,(void volatile *)(adapter->hw_addr0 + intr_idx * 8U));
  
#line 65 
  return;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_enable_all_intrs(struct vmxnet3_adapter *adapter)
{
  int i;
  
#line 76 
  i = 0;
  
#line 76 
  goto ldv_54357;
  ldv_54356: 
#line 77 
  ;
  
#line 77 
  vmxnet3_enable_intr(adapter,(unsigned int)i);
  
#line 76 
  i += 1;
  ldv_54357: 
#line 77 
  ;
  
#line 76 
  if ((int)adapter->intr.num_intrs > i) 
#line 78 
                                        goto ldv_54356; else 
#line 81 
                                                             goto ldv_54358;
  ldv_54358: 
#line 82 
  ;
  
#line 78 
  (adapter->shared)->devRead.intrConf.intrCtrl &= 4294967294U;
  
#line 79 
  return;
}


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_disable_all_intrs(struct vmxnet3_adapter *adapter)
{
  int i;
  
#line 88 
  (adapter->shared)->devRead.intrConf.intrCtrl |= 1U;
  
#line 90 
  i = 0;
  
#line 90 
  goto ldv_54364;
  ldv_54363: 
#line 91 
  ;
  
#line 91 
  vmxnet3_disable_intr(adapter,(unsigned int)i);
  
#line 90 
  i += 1;
  ldv_54364: 
#line 91 
  ;
  
#line 90 
  if ((int)adapter->intr.num_intrs > i) 
#line 92 
                                        goto ldv_54363; else 
#line 95 
                                                             goto ldv_54365;
  ldv_54365: 
#line 96 
  ;
  
#line 97 
  return;
}


#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_ack_events(struct vmxnet3_adapter *adapter, u32 events)
{
  
#line 98 
  writel(events,(void volatile *)(adapter->hw_addr1 + 64U));
  
#line 99 
  return;
}


#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static bool vmxnet3_tq_stopped(struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter)
{
  bool __retres;
  
#line 105 
  __retres = tq->stopped;
  
#line 105 
  return __retres;
}


#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_tq_start(struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter)
{
  
#line 112 
  tq->stopped = (_Bool)0;
  
#line 113 
  netif_start_subqueue(adapter->netdev,(unsigned short)((int)((unsigned short)(((long)tq - (long)(& adapter->tx_queue)) / 320L))));
  
#line 114 
  return;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_tq_wake(struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter)
{
  
#line 120 
  tq->stopped = (_Bool)0;
  
#line 121 
  netif_wake_subqueue(adapter->netdev,(unsigned short)((int)((unsigned short)(((long)tq - (long)(& adapter->tx_queue)) / 320L))));
  
#line 122 
  return;
}


#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_tq_stop(struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter)
{
  
#line 128 
  tq->stopped = (_Bool)1;
  
#line 129 
  tq->num_stop += 1;
  
#line 130 
  netif_start_subqueue(adapter->netdev,(unsigned short)((int)((unsigned short)(((long)tq - (long)(& adapter->tx_queue)) / 320L))));
  
#line 131 
  return;
}


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_check_link(struct vmxnet3_adapter *adapter, bool affectTxQueue)
{
  u32 ret;
  int i;
  unsigned long flags;
  
#line 144 
  ldv___ldv_spin_lock_75(& adapter->cmd_lock);
  
#line 145 
  writel(4027383810U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 146 
  ret = readl((void const volatile *)(adapter->hw_addr1 + 32U));
  
#line 147 
  ldv_spin_unlock_irqrestore_76(& adapter->cmd_lock,flags);
  
#line 149 
  adapter->link_speed = ret >> 16;
  
#line 150 
  if ((ret & 1U) != 0U) {
    
#line 151 
    netdev_info((struct net_device const *)adapter->netdev,"NIC Link is Up %d Mbps\n",adapter->link_speed);
    
#line 153 
    netif_carrier_on(adapter->netdev);
    
#line 155 
    if ((int)affectTxQueue != 0) {
      
#line 156 
      i = 0;
      
#line 156 
      goto ldv_54394;
      ldv_54393: 
#line 157 
      ;
      
#line 157 
      vmxnet3_tq_start(& adapter->tx_queue[i],adapter);
      
#line 156 
      i += 1;
      ldv_54394: 
#line 157 
      ;
      
#line 156 
      if (adapter->num_tx_queues > (unsigned int)i) 
#line 158 
                                                    goto ldv_54393; else 
                                                                    
#line 161 
                                                                    goto ldv_54395;
      ldv_54395: 
#line 162 
      ;
    }
    else ;
  }
  else {
    
#line 161 
    netdev_info((struct net_device const *)adapter->netdev,"NIC Link is Down\n");
    
#line 162 
    netif_carrier_off(adapter->netdev);
    
#line 164 
    if ((int)affectTxQueue != 0) {
      
#line 165 
      i = 0;
      
#line 165 
      goto ldv_54397;
      ldv_54396: 
#line 166 
      ;
      
#line 166 
      vmxnet3_tq_stop(& adapter->tx_queue[i],adapter);
      
#line 165 
      i += 1;
      ldv_54397: 
#line 166 
      ;
      
#line 165 
      if (adapter->num_tx_queues > (unsigned int)i) 
#line 167 
                                                    goto ldv_54396; else 
                                                                    
#line 170 
                                                                    goto ldv_54398;
      ldv_54398: 
#line 171 
      ;
    }
    else ;
  }
  
#line 174 
  return;
}


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_process_events(struct vmxnet3_adapter *adapter)
{
  int i;
  unsigned long flags;
  
#line 176 
  u32 events = (adapter->shared)->ecr;
  
#line 177 
  if (events == 0U) 
#line 178 
                    goto return_label; else ;
  
#line 180 
  vmxnet3_ack_events(adapter,events);
  
#line 183 
  if ((events & 4U) != 0U) 
#line 184 
                           vmxnet3_check_link(adapter,(_Bool)1); else ;
  
#line 187 
  if ((events & 3U) != 0U) {
    
#line 188 
    ldv___ldv_spin_lock_77(& adapter->cmd_lock);
    
#line 189 
    writel(4027383808U,(void volatile *)(adapter->hw_addr1 + 32U));
    
#line 191 
    ldv_spin_unlock_irqrestore_78(& adapter->cmd_lock,flags);
    
#line 193 
    i = 0;
    
#line 193 
    goto ldv_54406;
    ldv_54405: 
#line 194 
    ;
    
#line 194 
    if ((int)(adapter->tqd_start + i)->status.stopped != 0) 
#line 195 
                                                            dev_err((struct device const *)(& (adapter->netdev)->dev),"%s: tq[%d] error 0x%x\n",(char *)(& (adapter->netdev)->name),i,(adapter->tqd_start + i)->status.error); else ;
    
#line 193 
    i += 1;
    ldv_54406: 
#line 194 
    ;
    
#line 193 
    if (adapter->num_tx_queues > (unsigned int)i) 
#line 195 
                                                  goto ldv_54405; else 
                                                                    
#line 198 
                                                                    goto ldv_54407;
    ldv_54407: 
#line 199 
    ;
    
#line 199 
    i = 0;
    
#line 199 
    goto ldv_54409;
    ldv_54408: 
#line 200 
    ;
    
#line 200 
    if ((int)(adapter->rqd_start + i)->status.stopped != 0) 
#line 201 
                                                            dev_err((struct device const *)(& (adapter->netdev)->dev),"%s: rq[%d] error 0x%x\n",(char *)(& (adapter->netdev)->name),i,(adapter->rqd_start + i)->status.error); else ;
    
#line 199 
    i += 1;
    ldv_54409: 
#line 200 
    ;
    
#line 199 
    if (adapter->num_rx_queues > (unsigned int)i) 
#line 201 
                                                  goto ldv_54408; else 
                                                                    
#line 204 
                                                                    goto ldv_54410;
    ldv_54410: 
#line 205 
    ;
    
#line 206 
    ldv_schedule_work_79(& adapter->work);
  }
  else ;
  return_label: 
#line 208 
                return;
}


#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_unmap_tx_buf(struct vmxnet3_tx_buf_info *tbi, struct pci_dev *pdev)
{
  
#line 315 
  if (tbi->map_type == 2U) 
#line 316 
                           dma_unmap_single_attrs(& pdev->dev,tbi->dma_addr,(unsigned long)tbi->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  else 
    
#line 318 
    if (tbi->map_type == 3U) 
#line 319 
                             dma_unmap_page(& pdev->dev,tbi->dma_addr,(unsigned long)tbi->len,(enum dma_data_direction)DMA_TO_DEVICE);
    else 
      
#line 322 
      if ((long)(tbi->map_type != 1U) != 0L) {
        
#line 324 
        ldv_inline_asm();
        
#line 322 
        ;
      }
      else ;
  
#line 324 
  tbi->map_type = 1U;
  
#line 325 
  return;
}


#line 329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_unmap_pkt(u32 eop_idx, struct vmxnet3_tx_queue *tq, struct pci_dev *pdev, struct vmxnet3_adapter *adapter)
{
  struct sk_buff *skb;
  
#line 333 
  int entries = 0;
  
#line 336 
  if ((long)((unsigned int)(tq->buf_info + eop_idx)->sop_idx != tq->tx_ring.next2comp) != 0L) {
    
#line 338 
    ldv_inline_asm();
    
#line 336 
    ;
  }
  else ;
  
#line 337 
  if ((long)((unsigned int)*((unsigned char *)(& (tq->tx_ring.base + eop_idx)->txd) + 13UL) == 0U) != 0L) {
    
#line 339 
    ldv_inline_asm();
    
#line 337 
    ;
  }
  else ;
  
#line 339 
  skb = (tq->buf_info + eop_idx)->skb;
  
#line 340 
  if ((long)(skb == (struct sk_buff *)0) != 0L) {
    
#line 342 
    ldv_inline_asm();
    
#line 340 
    ;
  }
  else ;
  
#line 341 
  (tq->buf_info + eop_idx)->skb = (struct sk_buff *)0;
  
#line 343 
  eop_idx += 1U;
  
#line 343 
  if ((long)(tq->tx_ring.size == eop_idx) != 0L) 
#line 343 
                                                 eop_idx = 0U; else ;
  
#line 345 
  goto ldv_54424;
  ldv_54423: 
#line 346 
  ;
  
#line 346 
  vmxnet3_unmap_tx_buf(tq->buf_info + tq->tx_ring.next2comp,pdev);
  
#line 354 
  vmxnet3_cmd_ring_adv_next2comp(& tq->tx_ring);
  
#line 355 
  entries += 1;
  ldv_54424: 
#line 356 
  ;
  
#line 345 
  if (tq->tx_ring.next2comp != eop_idx) 
#line 347 
                                        goto ldv_54423; else 
#line 350 
                                                             goto ldv_54425;
  ldv_54425: 
#line 351 
  ;
  
#line 358 
  dev_kfree_skb_any(skb);
  
#line 359 
  return entries;
}


#line 364  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_tq_tx_complete(struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter)
{
  union Vmxnet3_GenericDesc *gdesc;
  int tmp;
  
#line 367 
  int completed = 0;
  
#line 370 
  gdesc = tq->comp_ring.base + tq->comp_ring.next2proc;
  
#line 371 
  goto ldv_54433;
  ldv_54432: 
#line 372 
  ;
  
#line 372 
  tmp = vmxnet3_unmap_pkt((unsigned int)gdesc->tcd.txdIdx,tq,adapter->pdev,adapter);
  
#line 374 
  completed = tmp + completed;
  
#line 376 
  vmxnet3_comp_ring_adv_next2proc(& tq->comp_ring);
  
#line 377 
  gdesc = tq->comp_ring.base + tq->comp_ring.next2proc;
  ldv_54433: 
#line 378 
  ;
  
#line 371 
  if ((int)gdesc->tcd.gen == (int)tq->comp_ring.gen) 
#line 373 
                                                     goto ldv_54432; else 
                                                                    
#line 376 
                                                                    goto ldv_54434;
  ldv_54434: 
#line 377 
  ;
  
#line 380 
  if (completed != 0) {
    int tmp_2;
    bool tmp_0;
    
#line 381 
    ldv_spin_lock_80(& tq->tx_lock);
    
#line 382 
    tmp_0 = vmxnet3_tq_stopped(tq,adapter);
    
#line 382 
    if ((long)((int)tmp_0 != 0) != 0L) {
      int tmp_1;
      
#line 382 
      tmp_1 = vmxnet3_cmd_ring_desc_avail(& tq->tx_ring);
      
#line 382 
      if ((long)(tmp_1 > 5) != 0L) 
#line 382 
                                   tmp_2 = 1; else 
#line 382 
                                                   tmp_2 = 0;
    }
    else 
#line 382 
         tmp_2 = 0;
    
#line 382 
    if (tmp_2 != 0) {
      bool tmp_3;
      
#line 382 
      tmp_3 = netif_carrier_ok((struct net_device const *)adapter->netdev);
      
#line 382 
      if ((long)((int)tmp_3 != 0) != 0L) 
#line 386 
                                         vmxnet3_tq_wake(tq,adapter); else ;
    }
    else ;
    
#line 388 
    ldv_spin_unlock_81(& tq->tx_lock);
  }
  else ;
  
#line 390 
  return completed;
}


#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_tq_cleanup(struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter)
{
  int i;
  u32 tmp;
  
#line 400 
  goto ldv_54442;
  ldv_54441: 
#line 401 
  ;
  {
    struct vmxnet3_tx_buf_info *tbi;
    
#line 403 
    tbi = tq->buf_info + tq->tx_ring.next2comp;
    
#line 405 
    vmxnet3_unmap_tx_buf(tbi,adapter->pdev);
    
#line 406 
    if (tbi->skb != (struct sk_buff *)0) {
      
#line 407 
      dev_kfree_skb_any(tbi->skb);
      
#line 408 
      tbi->skb = (struct sk_buff *)0;
    }
    else ;
    
#line 410 
    vmxnet3_cmd_ring_adv_next2comp(& tq->tx_ring);
  }
  ldv_54442: 
#line 412 
  ;
  
#line 400 
  if (tq->tx_ring.next2comp != tq->tx_ring.next2fill) 
#line 402 
                                                      goto ldv_54441; else 
                                                                    
#line 405 
                                                                    goto ldv_54443;
  ldv_54443: 
#line 406 
  ;
  
#line 414 
  i = 0;
  
#line 414 
  goto ldv_54445;
  ldv_54444: 
#line 415 
  ;
  
#line 415 
  if ((long)((tq->buf_info + i)->skb != (struct sk_buff *)0) != 0L || (long)((tq->buf_info + i)->map_type != 1U) != 0L) {
    
#line 417 
    ldv_inline_asm();
    
#line 415 
    ;
  }
  else ;
  
#line 414 
  i += 1;
  ldv_54445: 
#line 415 
  ;
  
#line 414 
  if (tq->tx_ring.size > (unsigned int)i) 
#line 416 
                                          goto ldv_54444; else 
#line 419 
                                                               goto ldv_54446;
  ldv_54446: 
#line 420 
  ;
  
#line 419 
  tq->tx_ring.gen = (unsigned char)1U;
  
#line 420 
  tmp = 0U;
  
#line 420 
  tq->tx_ring.next2comp = tmp;
  
#line 420 
  tq->tx_ring.next2fill = tmp;
  
#line 422 
  tq->comp_ring.gen = (unsigned char)1U;
  
#line 423 
  tq->comp_ring.next2proc = 0U;
  
#line 424 
  return;
}


#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_tq_destroy(struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter)
{
  
#line 431 
  if (tq->tx_ring.base != (union Vmxnet3_GenericDesc *)0) {
    
#line 432 
    dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)tq->tx_ring.size * 16UL,(void *)tq->tx_ring.base,tq->tx_ring.basePA,(struct dma_attrs *)0);
    
#line 435 
    tq->tx_ring.base = (union Vmxnet3_GenericDesc *)0;
  }
  else ;
  
#line 437 
  if (tq->data_ring.base != (struct Vmxnet3_TxDataDesc *)0) {
    
#line 438 
    dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)tq->data_ring.size * 128UL,(void *)tq->data_ring.base,tq->data_ring.basePA,(struct dma_attrs *)0);
    
#line 441 
    tq->data_ring.base = (struct Vmxnet3_TxDataDesc *)0;
  }
  else ;
  
#line 443 
  if (tq->comp_ring.base != (union Vmxnet3_GenericDesc *)0) {
    
#line 444 
    dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)tq->comp_ring.size * 16UL,(void *)tq->comp_ring.base,tq->comp_ring.basePA,(struct dma_attrs *)0);
    
#line 447 
    tq->comp_ring.base = (union Vmxnet3_GenericDesc *)0;
  }
  else ;
  
#line 449 
  if (tq->buf_info != (struct vmxnet3_tx_buf_info *)0) {
    
#line 450 
    dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)tq->tx_ring.size * 24UL,(void *)tq->buf_info,tq->buf_info_pa,(struct dma_attrs *)0);
    
#line 453 
    tq->buf_info = (struct vmxnet3_tx_buf_info *)0;
  }
  else ;
  
#line 455 
  return;
}


#line 460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
void vmxnet3_tq_destroy_all(struct vmxnet3_adapter *adapter)
{
  int i;
  
#line 464 
  i = 0;
  
#line 464 
  goto ldv_54456;
  ldv_54455: 
#line 465 
  ;
  
#line 465 
  vmxnet3_tq_destroy(& adapter->tx_queue[i],adapter);
  
#line 464 
  i += 1;
  ldv_54456: 
#line 465 
  ;
  
#line 464 
  if (adapter->num_tx_queues > (unsigned int)i) 
#line 466 
                                                goto ldv_54455; else 
                                                                  
#line 469 
                                                                  goto ldv_54457;
  ldv_54457: 
#line 470 
  ;
  
#line 471 
  return;
}


#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_tq_init(struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter)
{
  int i;
  u32 tmp;
  
#line 476 
  memset((void *)tq->tx_ring.base,0,(unsigned long)tq->tx_ring.size * 16UL);
  
#line 478 
  tmp = 0U;
  
#line 478 
  tq->tx_ring.next2comp = tmp;
  
#line 478 
  tq->tx_ring.next2fill = tmp;
  
#line 479 
  tq->tx_ring.gen = (unsigned char)1U;
  
#line 481 
  memset((void *)tq->data_ring.base,0,(unsigned long)tq->data_ring.size * 128UL);
  
#line 485 
  memset((void *)tq->comp_ring.base,0,(unsigned long)tq->comp_ring.size * 16UL);
  
#line 487 
  tq->comp_ring.next2proc = 0U;
  
#line 488 
  tq->comp_ring.gen = (unsigned char)1U;
  
#line 491 
  memset((void *)tq->buf_info,0,(unsigned long)tq->tx_ring.size * 24UL);
  
#line 492 
  i = 0;
  
#line 492 
  goto ldv_54464;
  ldv_54463: 
#line 493 
  ;
  
#line 493 
  (tq->buf_info + i)->map_type = 1U;
  
#line 492 
  i += 1;
  ldv_54464: 
#line 493 
  ;
  
#line 492 
  if (tq->tx_ring.size > (unsigned int)i) 
#line 494 
                                          goto ldv_54463; else 
#line 497 
                                                               goto ldv_54465;
  ldv_54465: 
#line 498 
  ;
  
#line 499 
  return;
}


#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_tq_create(struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter)
{
  int __retres;
  size_t sz;
  
#line 505 
  if ((((((long)(tq->tx_ring.base != (union Vmxnet3_GenericDesc *)0) != 0L || (long)(tq->data_ring.base != (struct Vmxnet3_TxDataDesc *)0) != 0L) != 0) != 0 || (long)(tq->comp_ring.base != (union Vmxnet3_GenericDesc *)0) != 0L) != 0) != 0 || (long)(tq->buf_info != (struct vmxnet3_tx_buf_info *)0) != 0L) {
    
#line 507 
    ldv_inline_asm();
    
#line 505 
    ;
  }
  else ;
  
#line 508 
  tq->tx_ring.base = (union Vmxnet3_GenericDesc *)dma_alloc_attrs(& (adapter->pdev)->dev,(unsigned long)tq->tx_ring.size * 16UL,& tq->tx_ring.basePA,208U,(struct dma_attrs *)0);
  
#line 511 
  if (tq->tx_ring.base == (union Vmxnet3_GenericDesc *)0) {
    
#line 512 
    netdev_err((struct net_device const *)adapter->netdev,"failed to allocate tx ring\n");
    
#line 513 
    goto err;
  }
  else ;
  
#line 516 
  tq->data_ring.base = (struct Vmxnet3_TxDataDesc *)dma_alloc_attrs(& (adapter->pdev)->dev,(unsigned long)tq->data_ring.size * 128UL,& tq->data_ring.basePA,208U,(struct dma_attrs *)0);
  
#line 519 
  if (tq->data_ring.base == (struct Vmxnet3_TxDataDesc *)0) {
    
#line 520 
    netdev_err((struct net_device const *)adapter->netdev,"failed to allocate data ring\n");
    
#line 521 
    goto err;
  }
  else ;
  
#line 524 
  tq->comp_ring.base = (union Vmxnet3_GenericDesc *)dma_alloc_attrs(& (adapter->pdev)->dev,(unsigned long)tq->comp_ring.size * 16UL,& tq->comp_ring.basePA,208U,(struct dma_attrs *)0);
  
#line 527 
  if (tq->comp_ring.base == (union Vmxnet3_GenericDesc *)0) {
    
#line 528 
    netdev_err((struct net_device const *)adapter->netdev,"failed to allocate tx comp ring\n");
    
#line 529 
    goto err;
  }
  else ;
  
#line 532 
  sz = (unsigned long)tq->tx_ring.size * 24UL;
  
#line 533 
  tq->buf_info = (struct vmxnet3_tx_buf_info *)dma_zalloc_coherent(& (adapter->pdev)->dev,sz,& tq->buf_info_pa,208U);
  
#line 535 
  if (tq->buf_info == (struct vmxnet3_tx_buf_info *)0) 
#line 536 
                                                       goto err; else ;
  
#line 538 
  __retres = 0;
  
#line 538 
  goto return_label;
  err: 
#line 540 
  ;
  
#line 541 
  vmxnet3_tq_destroy(tq,adapter);
  
#line 542 
  __retres = -12;
  return_label: 
#line 542 
                return __retres;
}


#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_tq_cleanup_all(struct vmxnet3_adapter *adapter)
{
  int i;
  
#line 550 
  i = 0;
  
#line 550 
  goto ldv_54477;
  ldv_54476: 
#line 551 
  ;
  
#line 551 
  vmxnet3_tq_cleanup(& adapter->tx_queue[i],adapter);
  
#line 550 
  i += 1;
  ldv_54477: 
#line 551 
  ;
  
#line 550 
  if (adapter->num_tx_queues > (unsigned int)i) 
#line 552 
                                                goto ldv_54476; else 
                                                                  
#line 555 
                                                                  goto ldv_54478;
  ldv_54478: 
#line 556 
  ;
  
#line 557 
  return;
}


#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_rq_alloc_rx_buf(struct vmxnet3_rx_queue *rq, u32 ring_idx, int num_to_alloc, struct vmxnet3_adapter *adapter)
{
  u32 val;
  
#line 564 
  int num_allocated = 0;
  
#line 565 
  struct vmxnet3_rx_buf_info *rbi_base = rq->buf_info[ring_idx];
  
#line 566 
  struct vmxnet3_cmd_ring *ring = & rq->rx_ring[ring_idx];
  
#line 569 
  goto ldv_54493;
  ldv_54492: 
#line 570 
  ;
  {
    struct vmxnet3_rx_buf_info *rbi;
    union Vmxnet3_GenericDesc *gd;
    unsigned int tmp;
    
#line 573 
    rbi = rbi_base + ring->next2fill;
    
#line 574 
    gd = ring->base + ring->next2fill;
    
#line 576 
    if (rbi->buf_type == (unsigned int)VMXNET3_RX_BUF_SKB) {
      
#line 577 
      if (rbi->__anonCompField_vmxnet3_rx_buf_info_115.skb == (struct sk_buff *)0) {
        
#line 578 
        rbi->__anonCompField_vmxnet3_rx_buf_info_115.skb = __netdev_alloc_skb_ip_align(adapter->netdev,(unsigned int)rbi->len,208U);
        
#line 581 
        if ((long)(rbi->__anonCompField_vmxnet3_rx_buf_info_115.skb == (struct sk_buff *)0) != 0L) {
          
#line 582 
          rq->stats.rx_buf_alloc_failure += 1ULL;
          
#line 583 
          goto ldv_54491;
        }
        else ;
        
#line 586 
        rbi->dma_addr = dma_map_single_attrs(& (adapter->pdev)->dev,(void *)(rbi->__anonCompField_vmxnet3_rx_buf_info_115.skb)->data,(unsigned long)rbi->len,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
      }
      else ;
      
#line 593 
      val = 0U;
    }
    else {
      
#line 595 
      if ((long)(rbi->buf_type != (unsigned int)VMXNET3_RX_BUF_PAGE) != 0L || (long)((unsigned int)rbi->len != 4096U) != 0L) {
        
#line 597 
        ldv_inline_asm();
        
#line 595 
        ;
      }
      else ;
      
#line 598 
      if (rbi->__anonCompField_vmxnet3_rx_buf_info_115.page == (struct page *)0) {
        
#line 599 
        rbi->__anonCompField_vmxnet3_rx_buf_info_115.page = alloc_pages(32U,0U);
        
#line 600 
        if ((long)(rbi->__anonCompField_vmxnet3_rx_buf_info_115.page == (struct page *)0) != 0L) {
          
#line 601 
          rq->stats.rx_buf_alloc_failure += 1ULL;
          
#line 602 
          goto ldv_54491;
        }
        else ;
        
#line 604 
        rbi->dma_addr = dma_map_page(& (adapter->pdev)->dev,rbi->__anonCompField_vmxnet3_rx_buf_info_115.page,0UL,4096UL,(enum dma_data_direction)DMA_FROM_DEVICE);
      }
      else ;
      
#line 611 
      val = 16384U;
    }
    
#line 614 
    if ((long)(rbi->dma_addr == 0ULL) != 0L) {
      
#line 616 
      ldv_inline_asm();
      
#line 614 
      ;
    }
    else ;
    
#line 615 
    gd->rxd.addr = rbi->dma_addr;
    
#line 616 
    if ((unsigned int)ring->gen == 0U) 
#line 616 
                                       tmp = -2147483648; else 
#line 616 
                                                               tmp = (unsigned int)0;
    
#line 616 
    gd->dword[2] = (tmp | val) | (unsigned int)rbi->len;
    
#line 621 
    if (num_allocated == num_to_alloc) 
#line 622 
                                       goto ldv_54491; else ;
    
#line 624 
    gd->dword[2] |= (unsigned int)((int)ring->gen << 31);
    
#line 625 
    num_allocated += 1;
    
#line 626 
    vmxnet3_cmd_ring_adv_next2fill(ring);
  }
  ldv_54493: 
#line 628 
  ;
  
#line 569 
  if (num_allocated <= num_to_alloc) 
#line 571 
                                     goto ldv_54492; else 
#line 574 
                                                          goto ldv_54491;
  ldv_54491: 
#line 575 
  ;
  {
    
#line 629 
    struct _ddebug descriptor = {.modname = "vmxnet3", .function = "vmxnet3_rq_alloc_rx_buf", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "alloc_rx_buf: %d allocated, next2fill %u, next2comp %u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))631U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 629 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 629 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)adapter->netdev,"alloc_rx_buf: %d allocated, next2fill %u, next2comp %u\n",num_allocated,ring->next2fill,ring->next2comp); else ;
  }
  
#line 634 
  if ((long)(num_allocated != 0) != 0L && (long)(ring->next2fill == ring->next2comp) != 0L) {
    
#line 636 
    ldv_inline_asm();
    
#line 634 
    ;
  }
  else ;
  
#line 636 
  return num_allocated;
}


#line 641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_append_frag(struct sk_buff *skb, struct Vmxnet3_RxCompDesc *rcd, struct vmxnet3_rx_buf_info *rbi)
{
  unsigned char *tmp;
  unsigned char *tmp_0;
  unsigned char *tmp_1;
  unsigned char *tmp_2;
  
#line 644 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 645 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 644 
  struct skb_frag_struct *frag = (struct skb_frag_struct *)(& ((struct skb_shared_info *)tmp)->frags) + (int)((struct skb_shared_info *)tmp_0)->nr_frags;
  
#line 647 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 647 
  ;
  
#line 647 
  if ((long)((unsigned int)((struct skb_shared_info *)tmp_1)->nr_frags > 16U) != 0L) {
    
#line 649 
    ldv_inline_asm();
    
#line 647 
    ;
  }
  else ;
  
#line 649 
  __skb_frag_set_page(frag,rbi->__anonCompField_vmxnet3_rx_buf_info_115.page);
  
#line 650 
  frag->page_offset = 0U;
  
#line 651 
  skb_frag_size_set(frag,(unsigned int)rcd->len);
  
#line 652 
  skb->data_len += (unsigned int)rcd->len;
  
#line 653 
  skb->truesize += 4096U;
  
#line 654 
  tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 654 
  ((struct skb_shared_info *)tmp_2)->nr_frags = (unsigned char)((int)((struct skb_shared_info *)tmp_2)->nr_frags + 1);
  
#line 655 
  return;
}


#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_map_pkt(struct sk_buff *skb, struct vmxnet3_tx_ctx *ctx, struct vmxnet3_tx_queue *tq, struct pci_dev *pdev, struct vmxnet3_adapter *adapter)
{
  u32 dw2;
  u32 len;
  unsigned long buf_offset;
  int i;
  union Vmxnet3_GenericDesc *gdesc;
  unsigned int tmp;
  unsigned int tmp_0;
  unsigned char *tmp_2;
  
#line 667 
  struct vmxnet3_tx_buf_info *tbi = (struct vmxnet3_tx_buf_info *)0;
  
#line 669 
  tmp = skb_headlen((struct sk_buff const *)skb);
  
#line 669 
  ;
  
#line 669 
  if ((long)(ctx->copy_size > tmp) != 0L) {
    
#line 671 
    ldv_inline_asm();
    
#line 669 
    ;
  }
  else ;
  
#line 672 
  dw2 = (unsigned int)((int)((unsigned int)tq->tx_ring.gen ^ 1U) << 14);
  
#line 674 
  ctx->sop_txd = tq->tx_ring.base + tq->tx_ring.next2fill;
  
#line 675 
  gdesc = ctx->sop_txd;
  
#line 678 
  if (ctx->copy_size != 0U) {
    
#line 679 
    (ctx->sop_txd)->txd.addr = tq->data_ring.basePA + (unsigned long long)((unsigned long)tq->tx_ring.next2fill * 128UL);
    
#line 682 
    (ctx->sop_txd)->dword[2] = ctx->copy_size | dw2;
    
#line 683 
    (ctx->sop_txd)->dword[3] = 0U;
    
#line 685 
    tbi = tq->buf_info + tq->tx_ring.next2fill;
    
#line 686 
    tbi->map_type = 1U;
    {
      
#line 688 
      struct _ddebug descriptor = {.modname = "vmxnet3", .function = "vmxnet3_map_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "txd[%u]: 0x%Lx 0x%x 0x%x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))692U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 688 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 688 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)adapter->netdev,"txd[%u]: 0x%Lx 0x%x 0x%x\n",tq->tx_ring.next2fill,(ctx->sop_txd)->txd.addr,(ctx->sop_txd)->dword[2],(ctx->sop_txd)->dword[3]); else ;
    }
    
#line 693 
    vmxnet3_cmd_ring_adv_next2fill(& tq->tx_ring);
    
#line 696 
    dw2 = (unsigned int)((int)tq->tx_ring.gen << 14);
  }
  else ;
  
#line 700 
  tmp_0 = skb_headlen((struct sk_buff const *)skb);
  
#line 700 
  len = tmp_0 - ctx->copy_size;
  
#line 701 
  buf_offset = (unsigned long)ctx->copy_size;
  
#line 702 
  goto ldv_54520;
  ldv_54519: 
#line 703 
  ;
  {
    u32 buf_size;
    
#line 705 
    if (len <= 16383U) {
      
#line 706 
      buf_size = len;
      
#line 707 
      dw2 |= len;
    }
    else 
#line 709 
         buf_size = 16384U;
    
#line 713 
    tbi = tq->buf_info + tq->tx_ring.next2fill;
    
#line 714 
    tbi->map_type = 2U;
    
#line 715 
    tbi->dma_addr = dma_map_single_attrs(& (adapter->pdev)->dev,(void *)(skb->data + buf_offset),(unsigned long)buf_size,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 719 
    tbi->len = (unsigned short)buf_size;
    
#line 721 
    gdesc = tq->tx_ring.base + tq->tx_ring.next2fill;
    
#line 722 
    if ((long)((int)gdesc->txd.gen == (int)tq->tx_ring.gen) != 0L) {
      
#line 724 
      ldv_inline_asm();
      
#line 722 
      ;
    }
    else ;
    
#line 724 
    gdesc->txd.addr = tbi->dma_addr;
    
#line 725 
    gdesc->dword[2] = dw2;
    
#line 726 
    gdesc->dword[3] = 0U;
    {
      
#line 728 
      struct _ddebug descriptor_0 = {.modname = "vmxnet3", .function = "vmxnet3_map_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "txd[%u]: 0x%Lx 0x%x 0x%x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))731U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 728 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 728 
                                                            __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)adapter->netdev,"txd[%u]: 0x%Lx 0x%x 0x%x\n",tq->tx_ring.next2fill,gdesc->txd.addr,gdesc->dword[2],gdesc->dword[3]); else ;
    }
    
#line 732 
    vmxnet3_cmd_ring_adv_next2fill(& tq->tx_ring);
    
#line 733 
    dw2 = (unsigned int)((int)tq->tx_ring.gen << 14);
    
#line 735 
    len -= buf_size;
    
#line 736 
    buf_offset = (unsigned long)buf_size + buf_offset;
  }
  ldv_54520: 
#line 738 
  ;
  
#line 702 
  if (len != 0U) 
#line 704 
                 goto ldv_54519; else 
#line 707 
                                      goto ldv_54521;
  ldv_54521: 
#line 708 
  ;
  
#line 739 
  i = 0;
  
#line 739 
  goto ldv_54529;
  ldv_54528: 
#line 740 
  ;
  {
    unsigned char *tmp_1;
    u32 buf_size_0;
    
#line 740 
    tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 740 
    struct skb_frag_struct const *frag = (struct skb_frag_struct const *)(& ((struct skb_shared_info *)tmp_1)->frags[i]);
    
#line 743 
    buf_offset = 0UL;
    
#line 744 
    len = skb_frag_size(frag);
    
#line 745 
    goto ldv_54526;
    ldv_54525: 
#line 746 
    ;
    
#line 746 
    tbi = tq->buf_info + tq->tx_ring.next2fill;
    
#line 747 
    if (len <= 16383U) {
      
#line 748 
      buf_size_0 = len;
      
#line 749 
      dw2 |= len;
    }
    else 
#line 751 
         buf_size_0 = 16384U;
    
#line 754 
    tbi->map_type = 3U;
    
#line 755 
    tbi->dma_addr = skb_frag_dma_map(& (adapter->pdev)->dev,frag,buf_offset,(unsigned long)buf_size_0,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 759 
    tbi->len = (unsigned short)buf_size_0;
    
#line 761 
    gdesc = tq->tx_ring.base + tq->tx_ring.next2fill;
    
#line 762 
    if ((long)((int)gdesc->txd.gen == (int)tq->tx_ring.gen) != 0L) {
      
#line 764 
      ldv_inline_asm();
      
#line 762 
      ;
    }
    else ;
    
#line 764 
    gdesc->txd.addr = tbi->dma_addr;
    
#line 765 
    gdesc->dword[2] = dw2;
    
#line 766 
    gdesc->dword[3] = 0U;
    {
      
#line 768 
      struct _ddebug descriptor_1 = {.modname = "vmxnet3", .function = "vmxnet3_map_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "txd[%u]: 0x%llx %u %u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))771U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 768 
      if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 768 
                                                            __dynamic_netdev_dbg(& descriptor_1,(struct net_device const *)adapter->netdev,"txd[%u]: 0x%llx %u %u\n",tq->tx_ring.next2fill,gdesc->txd.addr,gdesc->dword[2],gdesc->dword[3]); else ;
    }
    
#line 772 
    vmxnet3_cmd_ring_adv_next2fill(& tq->tx_ring);
    
#line 773 
    dw2 = (unsigned int)((int)tq->tx_ring.gen << 14);
    
#line 775 
    len -= buf_size_0;
    
#line 776 
    buf_offset = (unsigned long)buf_size_0 + buf_offset;
    ldv_54526: 
#line 777 
    ;
    
#line 745 
    if (len != 0U) 
#line 747 
                   goto ldv_54525; else 
#line 750 
                                        goto ldv_54527;
    ldv_54527: 
#line 751 
    ;
  }
  
#line 739 
  i += 1;
  ldv_54529: 
#line 740 
  ;
  
#line 739 
  tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 739 
  ;
  
#line 739 
  if ((int)((struct skb_shared_info *)tmp_2)->nr_frags > i) 
#line 741 
                                                            goto ldv_54528; else 
                                                                    
#line 744 
                                                                    goto ldv_54530;
  ldv_54530: 
#line 745 
  ;
  
#line 780 
  ctx->eop_txd = gdesc;
  
#line 783 
  tbi->skb = skb;
  
#line 784 
  tbi->sop_idx = (unsigned short)(((long)ctx->sop_txd - (long)tq->tx_ring.base) / 16L);
  
#line 785 
  return;
}


#line 790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_tq_init_all(struct vmxnet3_adapter *adapter)
{
  int i;
  
#line 794 
  i = 0;
  
#line 794 
  goto ldv_54536;
  ldv_54535: 
#line 795 
  ;
  
#line 795 
  vmxnet3_tq_init(& adapter->tx_queue[i],adapter);
  
#line 794 
  i += 1;
  ldv_54536: 
#line 795 
  ;
  
#line 794 
  if (adapter->num_tx_queues > (unsigned int)i) 
#line 796 
                                                goto ldv_54535; else 
                                                                  
#line 799 
                                                                  goto ldv_54537;
  ldv_54537: 
#line 800 
  ;
  
#line 801 
  return;
}


#line 817  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_parse_and_copy_hdr(struct sk_buff *skb, struct vmxnet3_tx_queue *tq, struct vmxnet3_tx_ctx *ctx, struct vmxnet3_adapter *adapter)
{
  int __retres;
  struct Vmxnet3_TxDataDesc *tdd;
  
#line 822 
  u8 protocol = (unsigned char)0U;
  
#line 824 
  if ((unsigned int)ctx->mss != 0U) {
    int tmp;
    
#line 825 
    tmp = skb_transport_offset((struct sk_buff const *)skb);
    
#line 825 
    ctx->eth_ip_hdr_size = (unsigned int)tmp;
    
#line 826 
    ctx->l4_hdr_size = tcp_hdrlen((struct sk_buff const *)skb);
    
#line 827 
    ctx->copy_size = ctx->eth_ip_hdr_size + ctx->l4_hdr_size;
  }
  else {
    int tmp_8;
    
#line 829 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
      int tmp_0;
      unsigned int tmp_4;
      
#line 830 
      tmp_0 = skb_checksum_start_offset((struct sk_buff const *)skb);
      
#line 830 
      ctx->eth_ip_hdr_size = (unsigned int)tmp_0;
      
#line 832 
      if ((int)ctx->ipv4 != 0) {
        
#line 833 
        struct iphdr const *iph = ip_hdr((struct sk_buff const *)skb);
        
#line 835 
        protocol = iph->protocol;
      }
      else 
        
#line 836 
        if ((int)ctx->ipv6 != 0) {
          
#line 837 
          struct ipv6hdr const *ipv6h = ipv6_hdr((struct sk_buff const *)skb);
          
#line 839 
          protocol = ipv6h->nexthdr;
        }
        else ;
      
#line 842 
      switch ((int)protocol) {
        case 6: 
#line 843 
        ;
        
#line 844 
        ctx->l4_hdr_size = tcp_hdrlen((struct sk_buff const *)skb);
        
#line 845 
        goto ldv_54549;
        case 17: 
#line 846 
        ;
        
#line 847 
        ctx->l4_hdr_size = 8U;
        
#line 848 
        goto ldv_54549;
        default: 
#line 849 
        ;
        
#line 850 
        ctx->l4_hdr_size = 0U;
        
#line 851 
        goto ldv_54549;
      }
      ldv_54549: 
#line 854 
      ;
      {
        u32 tmp_3;
        
#line 854 
        u32 _min1 = ctx->eth_ip_hdr_size + ctx->l4_hdr_size;
        
#line 854 
        unsigned int _min2 = skb->len;
        
#line 854 
        if (_min1 < _min2) 
#line 854 
                           tmp_3 = _min1; else 
#line 854 
                                               tmp_3 = _min2;
        
#line 854 
        tmp_4 = tmp_3;
      }
      
#line 854 
      ctx->copy_size = tmp_4;
    }
    else {
      unsigned int tmp_7;
      
#line 857 
      ctx->eth_ip_hdr_size = 0U;
      
#line 858 
      ctx->l4_hdr_size = 0U;
      {
        unsigned int tmp_6;
        
#line 860 
        unsigned int _min1_0 = 128U;
        
#line 860 
        unsigned int _min2_0 = skb_headlen((struct sk_buff const *)skb);
        
#line 860 
        if (_min1_0 < _min2_0) 
#line 860 
                               tmp_6 = _min1_0; else 
#line 860 
                                                     tmp_6 = _min2_0;
        
#line 860 
        tmp_7 = tmp_6;
      }
      
#line 860 
      ctx->copy_size = tmp_7;
    }
    
#line 864 
    if (skb->len <= 128U) 
#line 865 
                          ctx->copy_size = skb->len; else ;
    
#line 868 
    tmp_8 = pskb_may_pull(skb,ctx->copy_size);
    
#line 868 
    if ((long)(tmp_8 == 0) != 0L) 
#line 869 
                                  goto err; else ;
  }
  
#line 872 
  if ((long)(ctx->copy_size > 128U) != 0L) {
    
#line 873 
    tq->stats.oversized_hdr += 1ULL;
    
#line 874 
    ctx->copy_size = 0U;
    
#line 875 
    __retres = 0;
    
#line 875 
    goto return_label;
  }
  else ;
  
#line 878 
  tdd = tq->data_ring.base + tq->tx_ring.next2fill;
  
#line 880 
  memcpy((void *)(& tdd->data),(void const *)skb->data,(unsigned long)ctx->copy_size);
  {
    
#line 881 
    struct _ddebug descriptor = {.modname = "vmxnet3", .function = "vmxnet3_parse_and_copy_hdr", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "copy %u bytes to dataRing[%u]\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))883U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 881 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 881 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)adapter->netdev,"copy %u bytes to dataRing[%u]\n",ctx->copy_size,tq->tx_ring.next2fill); else ;
  }
  
#line 884 
  __retres = 1;
  
#line 884 
  goto return_label;
  err: 
#line 886 
  ;
  
#line 887 
  __retres = -1;
  return_label: 
#line 887 
                return __retres;
}


#line 892  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_prepare_tso(struct sk_buff *skb, struct vmxnet3_tx_ctx *ctx)
{
  
#line 895 
  struct tcphdr *tcph = tcp_hdr((struct sk_buff const *)skb);
  
#line 897 
  if ((int)ctx->ipv4 != 0) {
    __sum16 tmp_1;
    
#line 898 
    struct iphdr *iph = ip_hdr((struct sk_buff const *)skb);
    
#line 900 
    iph->check = (unsigned short)0U;
    
#line 901 
    tmp_1 = csum_tcpudp_magic(iph->saddr,iph->daddr,(unsigned short)0,(unsigned short)6,0U);
    
#line 901 
    tcph->check = (unsigned short)(~ ((int)tmp_1));
  }
  else 
    
#line 903 
    if ((int)ctx->ipv6 != 0) {
      __sum16 tmp_3;
      
#line 904 
      struct ipv6hdr *iph_0 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 906 
      tmp_3 = csum_ipv6_magic((struct in6_addr const *)(& iph_0->saddr),(struct in6_addr const *)(& iph_0->daddr),0U,(unsigned short)6,0U);
      
#line 906 
      tcph->check = (unsigned short)(~ ((int)tmp_3));
    }
    else ;
  
#line 908 
  return;
}


#line 911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int txd_estimate(struct sk_buff const *skb)
{
  unsigned int tmp;
  int i;
  unsigned char *tmp_2;
  
#line 913 
  tmp = skb_headlen(skb);
  
#line 913 
  int count = (int)((tmp + 16383U) / 16384U + 1U);
  
#line 916 
  i = 0;
  
#line 916 
  goto ldv_54575;
  ldv_54574: 
#line 917 
  ;
  {
    unsigned char *tmp_0;
    unsigned int tmp_1;
    
#line 917 
    tmp_0 = skb_end_pointer(skb);
    
#line 917 
    struct skb_frag_struct const *frag = (struct skb_frag_struct const *)(& ((struct skb_shared_info *)tmp_0)->frags[i]);
    
#line 919 
    tmp_1 = skb_frag_size(frag);
    
#line 919 
    count = (int)((tmp_1 + 16383U) / 16384U + (unsigned int)count);
  }
  
#line 916 
  i += 1;
  ldv_54575: 
#line 917 
  ;
  
#line 916 
  tmp_2 = skb_end_pointer(skb);
  
#line 916 
  ;
  
#line 916 
  if ((int)((struct skb_shared_info *)tmp_2)->nr_frags > i) 
#line 918 
                                                            goto ldv_54574; else 
                                                                    
#line 921 
                                                                    goto ldv_54576;
  ldv_54576: 
#line 922 
  ;
  
#line 921 
  return count;
}


#line 938  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_tq_xmit(struct sk_buff *skb, struct vmxnet3_tx_queue *tq, struct vmxnet3_adapter *adapter, struct net_device *netdev)
{
  int __retres;
  int ret;
  u32 count;
  unsigned long flags;
  struct vmxnet3_tx_ctx ctx;
  union Vmxnet3_GenericDesc *gdesc;
  int tmp;
  __be16 tmp_0;
  __be16 tmp_1;
  unsigned char *tmp_2;
  int tmp_7;
  
#line 951 
  tmp = txd_estimate((struct sk_buff const *)skb);
  
#line 951 
  count = (unsigned int)tmp;
  
#line 953 
  tmp_0 = vlan_get_protocol(skb);
  
#line 953 
  ctx.ipv4 = (_Bool)((unsigned int)tmp_0 == 8U);
  
#line 954 
  tmp_1 = vlan_get_protocol(skb);
  
#line 954 
  ctx.ipv6 = (_Bool)((unsigned int)tmp_1 == 56710U);
  
#line 956 
  tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 956 
  ctx.mss = ((struct skb_shared_info *)tmp_2)->gso_size;
  
#line 957 
  if ((unsigned int)ctx.mss != 0U) {
    int tmp_4;
    
#line 958 
    tmp_4 = skb_header_cloned((struct sk_buff const *)skb);
    
#line 958 
    if (tmp_4 != 0) {
      int tmp_3;
      
#line 959 
      tmp_3 = pskb_expand_head(skb,0,0,32U);
      
#line 959 
      if ((long)(tmp_3 != 0) != 0L) {
        
#line 961 
        tq->stats.drop_tso += 1ULL;
        
#line 962 
        goto drop_pkt;
      }
      else ;
      
#line 964 
      tq->stats.copy_skb_header += 1ULL;
    }
    else ;
    
#line 966 
    vmxnet3_prepare_tso(skb,& ctx);
  }
  else 
    
#line 968 
    if ((long)(count > 16U) != 0L) {
      int tmp_5;
      unsigned int tmp_6;
      
#line 973 
      tmp_5 = skb_linearize(skb);
      
#line 973 
      if (tmp_5 != 0) {
        
#line 974 
        tq->stats.drop_too_many_frags += 1ULL;
        
#line 975 
        goto drop_pkt;
      }
      else ;
      
#line 977 
      tq->stats.linearized += 1ULL;
      
#line 980 
      tmp_6 = skb_headlen((struct sk_buff const *)skb);
      
#line 980 
      count = (tmp_6 + 16383U) / 16384U + 1U;
    }
    else ;
  
#line 984 
  ldv___ldv_spin_lock_82(& tq->tx_lock);
  
#line 986 
  tmp_7 = vmxnet3_cmd_ring_desc_avail(& tq->tx_ring);
  
#line 986 
  ;
  
#line 986 
  if ((unsigned int)tmp_7 < count) {
    
#line 987 
    tq->stats.tx_ring_full += 1ULL;
    {
      
#line 988 
      struct _ddebug descriptor = {.modname = "vmxnet3", .function = "vmxnet3_tq_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "tx queue stopped on %s, next2comp %u", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))991U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 988 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 988 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)adapter->netdev,"tx queue stopped on %s, next2comp %u",(char *)(& (adapter->netdev)->name),tq->tx_ring.next2comp,tq->tx_ring.next2fill); else ;
    }
    
#line 993 
    vmxnet3_tq_stop(tq,adapter);
    
#line 994 
    ldv_spin_unlock_irqrestore_83(& tq->tx_lock,flags);
    
#line 995 
    __retres = 16;
    
#line 995 
    goto return_label;
  }
  else ;
  
#line 999 
  ret = vmxnet3_parse_and_copy_hdr(skb,tq,& ctx,adapter);
  
#line 1000 
  if (ret >= 0) {
    
#line 1001 
    if ((long)(ret <= 0) != 0L && (long)(ctx.copy_size != 0U) != 0L) {
      
#line 1003 
      ldv_inline_asm();
      
#line 1001 
      ;
    }
    else ;
    
#line 1003 
    if ((unsigned int)ctx.mss != 0U) {
      
#line 1004 
      if ((long)(ctx.eth_ip_hdr_size + ctx.l4_hdr_size > 16384U) != 0L) 
        
#line 1006 
        goto hdr_too_big; else ;
    }
    else 
      
#line 1009 
      if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
        
#line 1010 
        if ((long)(ctx.eth_ip_hdr_size + (unsigned int)skb->__anonCompField_sk_buff_70.__anonCompField___anonunion_231_69.csum_offset > 1024U) != 0L) 
          
#line 1013 
          goto hdr_too_big; else ;
      }
      else ;
  }
  else {
    
#line 1018 
    tq->stats.drop_hdr_inspect_err += 1ULL;
    
#line 1019 
    goto unlock_drop_pkt;
  }
  
#line 1023 
  vmxnet3_map_pkt(skb,& ctx,tq,adapter->pdev,adapter);
  
#line 1026 
  (ctx.eop_txd)->dword[3] = 12288U;
  
#line 1034 
  gdesc = ctx.sop_txd;
  
#line 1036 
  if ((unsigned int)ctx.mss != 0U) {
    
#line 1037 
    gdesc->txd.hlen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))))((int)((unsigned short)ctx.eth_ip_hdr_size) + (int)((unsigned short)ctx.l4_hdr_size));
    
#line 1038 
    gdesc->txd.om = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))3U;
    
#line 1039 
    gdesc->txd.msscof = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))))ctx.mss;
    
#line 1040 
    le32_add_cpu(& (tq->shared)->txNumDeferred,(((skb->len - (unsigned int)gdesc->txd.hlen) + (unsigned int)ctx.mss) + 4294967295U) / (unsigned int)ctx.mss);
  }
  else {
    
#line 1043 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
      
#line 1044 
      gdesc->txd.hlen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))))ctx.eth_ip_hdr_size;
      
#line 1045 
      gdesc->txd.om = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))2U;
      
#line 1046 
      gdesc->txd.msscof = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))))((int)((unsigned short)ctx.eth_ip_hdr_size) + (int)skb->__anonCompField_sk_buff_70.__anonCompField___anonunion_231_69.csum_offset);
    }
    else {
      
#line 1049 
      gdesc->txd.om = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
      
#line 1050 
      gdesc->txd.msscof = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))))0U;
    }
    
#line 1052 
    le32_add_cpu(& (tq->shared)->txNumDeferred,1U);
  }
  
#line 1055 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 1056 
    gdesc->txd.ti = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 1057 
    gdesc->txd.tci = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))))((unsigned int)skb->vlan_tci & 61439U);
  }
  else ;
  
#line 1061 
  gdesc->dword[2] ^= 16384U;
  {
    
#line 1071 
    struct _ddebug descriptor_0 = {.modname = "vmxnet3", .function = "vmxnet3_tq_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "txd[%u]: SOP 0x%Lx 0x%x 0x%x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1075U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1071 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1071 
                                                          __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)adapter->netdev,"txd[%u]: SOP 0x%Lx 0x%x 0x%x\n",(unsigned int)(((long)ctx.sop_txd - (long)tq->tx_ring.base) / 16L),gdesc->txd.addr,gdesc->dword[2],gdesc->dword[3]); else ;
  }
  
#line 1077 
  ldv_spin_unlock_irqrestore_84(& tq->tx_lock,flags);
  
#line 1079 
  if ((tq->shared)->txNumDeferred >= (tq->shared)->txThreshold) {
    
#line 1081 
    (tq->shared)->txNumDeferred = 0U;
    
#line 1082 
    writel(tq->tx_ring.next2fill,(void volatile *)(adapter->hw_addr0 + (tq->qid + 192) * 8));
  }
  else ;
  
#line 1087 
  __retres = 0;
  
#line 1087 
  goto return_label;
  hdr_too_big: 
#line 1089 
  ;
  
#line 1090 
  tq->stats.drop_oversized_hdr += 1ULL;
  unlock_drop_pkt: 
#line 1091 
  ;
  
#line 1092 
  ldv_spin_unlock_irqrestore_85(& tq->tx_lock,flags);
  drop_pkt: 
#line 1093 
  ;
  
#line 1094 
  tq->stats.drop_total += 1ULL;
  
#line 1095 
  dev_kfree_skb_any(skb);
  
#line 1096 
  __retres = 0;
  return_label: 
#line 1096 
                return __retres;
}


#line 1101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static netdev_tx_t vmxnet3_xmit_frame(struct sk_buff *skb, struct net_device *netdev)
{
  netdev_tx_t __retres;
  int tmp_0;
  
#line 1103 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1105 
  if ((long)((unsigned int)skb->queue_mapping > adapter->num_tx_queues) != 0L) {
    
#line 1107 
    ldv_inline_asm();
    
#line 1105 
    ;
  }
  else ;
  
#line 1106 
  tmp_0 = vmxnet3_tq_xmit(skb,& adapter->tx_queue[(int)skb->queue_mapping],adapter,netdev);
  
#line 1106 
  __retres = (enum netdev_tx)tmp_0;
  
#line 1106 
  return __retres;
}


#line 1113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_rx_csum(struct vmxnet3_adapter *adapter, struct sk_buff *skb, union Vmxnet3_GenericDesc *gdesc)
{
  
#line 1117 
  if ((unsigned int)*((unsigned char *)(& gdesc->rcd) + 3UL) == 0U && ((adapter->netdev)->features & 17179869184ULL) != 0ULL) 
    
#line 1119 
    if ((gdesc->dword[3] & 589824U) == 589824U) {
      
#line 1121 
      skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
      
#line 1122 
      if ((long)((unsigned int)*((unsigned char *)(& gdesc->rcd) + 14UL) == 0U) != 0L && (long)((unsigned int)*((unsigned char *)(& gdesc->rcd) + 14UL) == 0U) != 0L) {
        
#line 1124 
        ldv_inline_asm();
        
#line 1122 
        ;
      }
      else ;
      
#line 1123 
      if ((long)((unsigned int)*((unsigned char *)(& gdesc->rcd) + 14UL) == 0U) != 0L && (long)((unsigned int)*((unsigned char *)(& gdesc->rcd) + 14UL) == 0U) != 0L) {
        
#line 1125 
        ldv_inline_asm();
        
#line 1123 
        ;
      }
      else ;
      
#line 1124 
      if ((long)((unsigned int)*((unsigned char *)(& gdesc->rcd) + 14UL) != 0U) != 0L) {
        
#line 1126 
        ldv_inline_asm();
        
#line 1124 
        ;
      }
      else ;
    }
    else 
      
#line 1126 
      if ((unsigned int)gdesc->rcd.csum != 0U) {
        int tmp_0;
        
#line 1127 
        if (0 != 0) 
#line 1127 
                    tmp_0 = (int)((unsigned short)(((int)gdesc->rcd.csum << 8) | ((int)gdesc->rcd.csum >> 8)));
        else {
          __u16 tmp;
          
#line 1127 
          tmp = __fswab16((unsigned short)((int)gdesc->rcd.csum));
          
#line 1127 
          tmp_0 = (int)tmp;
        }
        
#line 1127 
        skb->__anonCompField_sk_buff_70.csum = (unsigned int)tmp_0;
        
#line 1128 
        skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))3U;
      }
      else 
#line 1130 
           skb_checksum_none_assert((struct sk_buff const *)skb);
  else 
#line 1134 
       skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 1135 
  return;
}


#line 1140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_rx_error(struct vmxnet3_rx_queue *rq, struct Vmxnet3_RxCompDesc *rcd, struct vmxnet3_rx_ctx *ctx, struct vmxnet3_adapter *adapter)
{
  
#line 1143 
  rq->stats.drop_err += 1ULL;
  
#line 1144 
  if ((unsigned int)*((unsigned char *)rcd + 14UL) == 0U) 
#line 1145 
                                                          rq->stats.drop_fcs += 1ULL; else ;
  
#line 1147 
  rq->stats.drop_total += 1ULL;
  
#line 1159 
  if (ctx->skb != (struct sk_buff *)0) 
#line 1160 
                                       dev_kfree_skb_irq(ctx->skb); else ;
  
#line 1162 
  ctx->skb = (struct sk_buff *)0;
  
#line 1163 
  return;
}


#line 1167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static u32 vmxnet3_get_hdr_len(struct vmxnet3_adapter *adapter, struct sk_buff *skb, union Vmxnet3_GenericDesc *gdesc)
{
  u32 __retres;
  u32 hlen;
  u32 maplen;
  union __anonunion_hdr_386 hdr;
  
#line 1178 
  if ((long)((unsigned int)*((unsigned char *)(& gdesc->rcd) + 14UL) == 0U) != 0L) {
    
#line 1180 
    ldv_inline_asm();
    
#line 1178 
    ;
  }
  else ;
  
#line 1180 
  maplen = skb_headlen((struct sk_buff const *)skb);
  
#line 1181 
  if ((long)(maplen <= 39U) != 0L) {
    
#line 1182 
    __retres = 0U;
    
#line 1182 
    goto return_label;
  }
  else ;
  
#line 1184 
  hdr.eth = eth_hdr((struct sk_buff const *)skb);
  
#line 1185 
  if ((unsigned int)*((unsigned char *)(& gdesc->rcd) + 14UL) != 0U) {
    
#line 1186 
    if ((long)((unsigned int)(hdr.eth)->h_proto != 8U) != 0L) {
      
#line 1188 
      ldv_inline_asm();
      
#line 1186 
      ;
    }
    else ;
    
#line 1187 
    hdr.ptr += 14U;
    
#line 1188 
    if ((long)((unsigned int)(hdr.ipv4)->protocol != 6U) != 0L) {
      
#line 1190 
      ldv_inline_asm();
      
#line 1188 
      ;
    }
    else ;
    
#line 1189 
    hlen = (unsigned int)((int)(hdr.ipv4)->ihl << 2);
    
#line 1190 
    hdr.ptr += (int)(hdr.ipv4)->ihl << 2;
  }
  else 
    
#line 1191 
    if ((unsigned int)*((unsigned char *)(& gdesc->rcd) + 14UL) != 0U) {
      
#line 1192 
      if ((long)((unsigned int)(hdr.eth)->h_proto != 56710U) != 0L) {
        
#line 1194 
        ldv_inline_asm();
        
#line 1192 
        ;
      }
      else ;
      
#line 1193 
      hdr.ptr += 14U;
      
#line 1197 
      if ((unsigned int)(hdr.ipv6)->nexthdr != 6U) {
        
#line 1198 
        __retres = 60U;
        
#line 1198 
        goto return_label;
      }
      else ;
      
#line 1199 
      hlen = 40U;
      
#line 1200 
      hdr.ptr += 40U;
    }
    else {
      
#line 1203 
      __retres = 0U;
      
#line 1203 
      goto return_label;
    }
  
#line 1206 
  if ((unsigned long)hlen + 20UL > (unsigned long)maplen) {
    
#line 1207 
    __retres = 0U;
    
#line 1207 
    goto return_label;
  }
  else ;
  
#line 1209 
  __retres = (unsigned int)((int)(hdr.tcp)->doff << 2) + hlen;
  return_label: 
#line 1209 
                return __retres;
}


#line 1213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_rq_rx_complete(struct vmxnet3_rx_queue *rq, struct vmxnet3_adapter *adapter, int quota)
{
  int __retres;
  struct Vmxnet3_RxCompDesc *rcd;
  
#line 1216 
  u32 const rxprod_reg[2U] = {2048U, 2560U};
  
#line 1219 
  u32 num_pkts = 0U;
  
#line 1220 
  bool skip_page_frags = (_Bool)0;
  
#line 1222 
  struct vmxnet3_rx_ctx *ctx = & rq->rx_ctx;
  
#line 1223 
  u16 segCnt = (unsigned short)0U;
  
#line 1223 
  u16 mss = (unsigned short)0U;
  
#line 1228 
  rcd = & (rq->comp_ring.base + rq->comp_ring.next2proc)->rcd;
  
#line 1230 
  goto ldv_54657;
  ldv_54656: 
#line 1231 
  ;
  {
    struct vmxnet3_rx_buf_info *rbi;
    struct sk_buff *skb;
    int num_to_alloc;
    struct Vmxnet3_RxDesc *rxd;
    u32 idx;
    u32 ring_idx;
    
#line 1232 
    struct sk_buff *new_skb = (struct sk_buff *)0;
    
#line 1233 
    struct page *new_page = (struct page *)0;
    
#line 1237 
    struct vmxnet3_cmd_ring *ring = (struct vmxnet3_cmd_ring *)0;
    
#line 1238 
    if (num_pkts >= (unsigned int)quota) 
#line 1242 
                                         goto ldv_54645; else ;
    
#line 1244 
    if ((long)((unsigned int)rcd->rqID != rq->qid) != 0L && (long)((unsigned int)rcd->rqID != rq->qid2) != 0L) {
      
#line 1246 
      ldv_inline_asm();
      
#line 1244 
      ;
    }
    else ;
    
#line 1245 
    idx = (unsigned int)rcd->rxdIdx;
    
#line 1246 
    ring_idx = (unsigned int)((unsigned int)rcd->rqID >= adapter->num_rx_queues);
    
#line 1247 
    ring = (struct vmxnet3_cmd_ring *)(& rq->rx_ring) + ring_idx;
    
#line 1248 
    rxd = & (rq->rx_ring[ring_idx].base + idx)->rxd;
    
#line 1250 
    rbi = rq->buf_info[ring_idx] + idx;
    
#line 1252 
    if ((long)(rxd->addr != rbi->dma_addr) != 0L || (long)((int)rxd->len != (int)rbi->len) != 0L) {
      
#line 1254 
      ldv_inline_asm();
      
#line 1252 
      ;
    }
    else ;
    
#line 1255 
    if ((long)((unsigned int)*((unsigned char *)rcd + 1UL) != 0U) != 0L && (long)((unsigned int)*((unsigned char *)rcd + 9UL) != 0U) != 0L) {
      
#line 1256 
      vmxnet3_rx_error(rq,rcd,ctx,adapter);
      
#line 1257 
      goto rcd_done;
    }
    else ;
    
#line 1260 
    if ((unsigned int)*((unsigned char *)rcd + 1UL) != 0U) {
      
#line 1261 
      if ((long)((unsigned int)*((unsigned char *)rxd + 9UL) != 0U) != 0L || (long)((unsigned int)rcd->rqID != rq->qid) != 0L) {
        
#line 1263 
        ldv_inline_asm();
        
#line 1261 
        ;
      }
      else ;
      
#line 1264 
      if ((long)(rbi->buf_type != (unsigned int)VMXNET3_RX_BUF_SKB) != 0L) {
        
#line 1266 
        ldv_inline_asm();
        
#line 1264 
        ;
      }
      else ;
      
#line 1265 
      if ((long)(ctx->skb != (struct sk_buff *)0) != 0L || (long)(rbi->__anonCompField_vmxnet3_rx_buf_info_115.skb == (struct sk_buff *)0) != 0L) {
        
#line 1267 
        ldv_inline_asm();
        
#line 1265 
        ;
      }
      else ;
      
#line 1267 
      if ((long)((unsigned int)*((unsigned short *)rcd + 4UL) == 0U) != 0L) {
        
#line 1269 
        if ((long)((unsigned int)*((unsigned char *)rcd + 1UL) == 0U) != 0L || (long)((unsigned int)*((unsigned char *)rcd + 1UL) == 0U) != 0L) {
          
#line 1271 
          ldv_inline_asm();
          
#line 1269 
          ;
        }
        else ;
        {
          
#line 1270 
          struct _ddebug descriptor = {.modname = "vmxnet3", .function = "vmxnet3_rq_rx_complete", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "rxRing[%u][%u] 0 length\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1272U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 1270 
          if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1270 
                                                              __dynamic_netdev_dbg(& descriptor,(struct net_device const *)adapter->netdev,"rxRing[%u][%u] 0 length\n",ring_idx,idx); else ;
        }
        
#line 1273 
        goto rcd_done;
      }
      else ;
      
#line 1276 
      skip_page_frags = (_Bool)0;
      
#line 1277 
      ctx->skb = rbi->__anonCompField_vmxnet3_rx_buf_info_115.skb;
      
#line 1278 
      new_skb = netdev_alloc_skb_ip_align(adapter->netdev,(unsigned int)rbi->len);
      
#line 1280 
      if (new_skb == (struct sk_buff *)0) {
        
#line 1284 
        rq->stats.rx_buf_alloc_failure += 1ULL;
        
#line 1285 
        ctx->skb = (struct sk_buff *)0;
        
#line 1286 
        rq->stats.drop_total += 1ULL;
        
#line 1287 
        skip_page_frags = (_Bool)1;
        
#line 1288 
        goto rcd_done;
      }
      else ;
      
#line 1291 
      dma_unmap_single_attrs(& (adapter->pdev)->dev,rbi->dma_addr,(unsigned long)rbi->len,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
      
#line 1296 
      if ((unsigned int)*((unsigned char *)rcd + 3UL) != 0U && ((adapter->netdev)->features & 8589934592ULL) != 0ULL) 
        
#line 1298 
        skb_set_hash(ctx->skb,rcd->rssHash,(enum pkt_hash_types)PKT_HASH_TYPE_L3); else ;
      
#line 1302 
      skb_put(ctx->skb,(unsigned int)rcd->len);
      
#line 1305 
      rbi->__anonCompField_vmxnet3_rx_buf_info_115.skb = new_skb;
      
#line 1306 
      rbi->dma_addr = dma_map_single_attrs(& (adapter->pdev)->dev,(void *)(rbi->__anonCompField_vmxnet3_rx_buf_info_115.skb)->data,(unsigned long)rbi->len,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
      
#line 1309 
      rxd->addr = rbi->dma_addr;
      
#line 1310 
      rxd->len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))))rbi->len;
      
#line 1311 
      if ((unsigned int)adapter->version == 2U && (unsigned int)*((unsigned char *)rcd + 15UL) == 4U) {
        struct Vmxnet3_RxCompDescExt *rcdlro;
        
#line 1314 
        rcdlro = (struct Vmxnet3_RxCompDescExt *)rcd;
        
#line 1316 
        segCnt = (unsigned short)rcdlro->segCnt;
        
#line 1317 
        if ((long)((unsigned int)segCnt <= 1U) != 0L) {
          
#line 1319 
          ldv_inline_asm();
          
#line 1317 
          ;
        }
        else ;
        
#line 1318 
        mss = (unsigned short)rcdlro->mss;
        
#line 1319 
        if ((long)((unsigned int)segCnt <= 1U) != 0L) 
#line 1320 
                                                      segCnt = (unsigned short)0U; else ;
      }
      else 
#line 1322 
           segCnt = (unsigned short)0U;
    }
    else {
      
#line 1325 
      if ((long)(ctx->skb == (struct sk_buff *)0) != 0L && (long)(! skip_page_frags) != 0L) {
        
#line 1327 
        ldv_inline_asm();
        
#line 1325 
        ;
      }
      else ;
      
#line 1328 
      if ((long)(rbi->buf_type != (unsigned int)VMXNET3_RX_BUF_PAGE) != 0L) {
        
#line 1330 
        ldv_inline_asm();
        
#line 1328 
        ;
      }
      else ;
      
#line 1329 
      if ((long)((unsigned int)*((unsigned char *)rxd + 9UL) == 0U) != 0L) {
        
#line 1331 
        ldv_inline_asm();
        
#line 1329 
        ;
      }
      else ;
      
#line 1334 
      if ((int)skip_page_frags != 0) 
#line 1335 
                                     goto rcd_done; else ;
      
#line 1337 
      if ((unsigned int)*((unsigned short *)rcd + 4UL) != 0U) {
        
#line 1338 
        new_page = alloc_pages(32U,0U);
        
#line 1344 
        if ((long)(new_page == (struct page *)0) != 0L) {
          
#line 1345 
          rq->stats.rx_buf_alloc_failure += 1ULL;
          
#line 1346 
          consume_skb(ctx->skb);
          
#line 1347 
          ctx->skb = (struct sk_buff *)0;
          
#line 1348 
          skip_page_frags = (_Bool)1;
          
#line 1349 
          goto rcd_done;
        }
        else ;
        
#line 1352 
        dma_unmap_page(& (adapter->pdev)->dev,rbi->dma_addr,(unsigned long)rbi->len,(enum dma_data_direction)DMA_FROM_DEVICE);
        
#line 1356 
        vmxnet3_append_frag(ctx->skb,rcd,rbi);
        
#line 1359 
        rbi->__anonCompField_vmxnet3_rx_buf_info_115.page = new_page;
        
#line 1360 
        rbi->dma_addr = dma_map_page(& (adapter->pdev)->dev,rbi->__anonCompField_vmxnet3_rx_buf_info_115.page,0UL,4096UL,(enum dma_data_direction)DMA_FROM_DEVICE);
        
#line 1364 
        rxd->addr = rbi->dma_addr;
        
#line 1365 
        rxd->len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))))rbi->len;
      }
      else ;
    }
    
#line 1370 
    skb = ctx->skb;
    
#line 1371 
    if ((unsigned int)*((unsigned char *)rcd + 1UL) != 0U) {
      
#line 1372 
      u32 mtu = (adapter->netdev)->mtu;
      
#line 1373 
      skb->len += skb->data_len;
      
#line 1375 
      vmxnet3_rx_csum(adapter,skb,(union Vmxnet3_GenericDesc *)rcd);
      
#line 1377 
      skb->protocol = eth_type_trans(skb,adapter->netdev);
      
#line 1378 
      if ((unsigned int)*((unsigned char *)rcd + 14UL) == 0U || ! adapter->lro) 
        
#line 1379 
        goto not_lro; else ;
      
#line 1381 
      if ((unsigned int)segCnt != 0U && (unsigned int)mss != 0U) {
        unsigned char *tmp;
        unsigned char *tmp_0;
        unsigned char *tmp_1;
        
#line 1382 
        tmp = skb_end_pointer((struct sk_buff const *)skb);
        
#line 1382 
        if ((unsigned int)*((unsigned char *)rcd + 14UL) != 0U) 
#line 1382 
                                                                ((struct skb_shared_info *)tmp)->gso_type = (unsigned short)1U; else 
                                                                    
#line 1382 
                                                                    ((struct skb_shared_info *)tmp)->gso_type = (unsigned short)16U;
        
#line 1384 
        tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
        
#line 1384 
        ((struct skb_shared_info *)tmp_0)->gso_size = mss;
        
#line 1385 
        tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
        
#line 1385 
        ((struct skb_shared_info *)tmp_1)->gso_segs = segCnt;
      }
      else 
        
#line 1386 
        if ((unsigned int)segCnt != 0U || skb->len > mtu) {
          u32 hlen;
          unsigned char *tmp_2;
          
#line 1389 
          hlen = vmxnet3_get_hdr_len(adapter,skb,(union Vmxnet3_GenericDesc *)rcd);
          
#line 1391 
          if (hlen == 0U) 
#line 1392 
                          goto not_lro; else ;
          
#line 1394 
          tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
          
#line 1394 
          if ((unsigned int)*((unsigned char *)rcd + 14UL) != 0U) 
#line 1394 
                                                                  ((struct skb_shared_info *)tmp_2)->gso_type = (unsigned short)1U; else 
                                                                    
#line 1394 
                                                                    ((struct skb_shared_info *)tmp_2)->gso_type = (unsigned short)16U;
          
#line 1396 
          if ((unsigned int)segCnt != 0U) {
            unsigned char *tmp_3;
            unsigned char *tmp_4;
            
#line 1397 
            tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
            
#line 1397 
            ((struct skb_shared_info *)tmp_3)->gso_segs = segCnt;
            
#line 1398 
            tmp_4 = skb_end_pointer((struct sk_buff const *)skb);
            
#line 1398 
            ((struct skb_shared_info *)tmp_4)->gso_size = (unsigned short)((((skb->len - hlen) + (unsigned int)segCnt) + 4294967295U) / (unsigned int)segCnt);
          }
          else {
            unsigned char *tmp_5;
            
#line 1402 
            tmp_5 = skb_end_pointer((struct sk_buff const *)skb);
            
#line 1402 
            ((struct skb_shared_info *)tmp_5)->gso_size = (unsigned short)((int)((unsigned short)mtu) - (int)((unsigned short)hlen));
          }
        }
        else ;
      not_lro: 
#line 1405 
      ;
      
#line 1406 
      if ((long)((int)*((unsigned char *)rcd + 9UL) < 0) != 0L) 
#line 1407 
                                                                __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)rcd->tci)); else ;
      
#line 1409 
      if (((adapter->netdev)->features & 32768ULL) != 0ULL) 
#line 1410 
                                                            netif_receive_skb(skb); else 
                                                                    
#line 1412 
                                                                    napi_gro_receive(& rq->napi,skb);
      
#line 1414 
      ctx->skb = (struct sk_buff *)0;
      
#line 1415 
      num_pkts += 1U;
    }
    else ;
    rcd_done: 
#line 1418 
    ;
    
#line 1420 
    ring->next2comp = idx;
    
#line 1421 
    num_to_alloc = vmxnet3_cmd_ring_desc_avail(ring);
    
#line 1422 
    ring = (struct vmxnet3_cmd_ring *)(& rq->rx_ring) + ring_idx;
    
#line 1423 
    goto ldv_54654;
    ldv_54653: 
#line 1424 
    ;
    
#line 1424 
    rxd = & (ring->base + ring->next2fill)->rxd;
    
#line 1426 
    if ((long)(rxd->addr == 0ULL) != 0L) {
      
#line 1428 
      ldv_inline_asm();
      
#line 1426 
      ;
    }
    else ;
    
#line 1429 
    rxd->gen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))ring->gen;
    
#line 1430 
    vmxnet3_cmd_ring_adv_next2fill(ring);
    
#line 1431 
    num_to_alloc -= 1;
    ldv_54654: 
#line 1432 
    ;
    
#line 1423 
    if (num_to_alloc != 0) 
#line 1425 
                           goto ldv_54653; else 
#line 1428 
                                                goto ldv_54655;
    ldv_54655: 
#line 1429 
    ;
    
#line 1435 
    if ((long)((int)(rq->shared)->updateRxProd != 0) != 0L) 
#line 1436 
                                                            writel(ring->next2fill,(void volatile *)(adapter->hw_addr0 + (rxprod_reg[ring_idx] + rq->qid * 8U))); else ;
    
#line 1441 
    vmxnet3_comp_ring_adv_next2proc(& rq->comp_ring);
    
#line 1442 
    rcd = & (rq->comp_ring.base + rq->comp_ring.next2proc)->rcd;
  }
  ldv_54657: 
#line 1444 
  ;
  
#line 1230 
  if ((int)rcd->gen == (int)rq->comp_ring.gen) 
#line 1232 
                                               goto ldv_54656; else 
#line 1235 
                                                                    goto ldv_54645;
  ldv_54645: 
#line 1236 
  ;
  
#line 1446 
  __retres = (int)num_pkts;
  
#line 1446 
  return __retres;
}


#line 1451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_rq_cleanup(struct vmxnet3_rx_queue *rq, struct vmxnet3_adapter *adapter)
{
  u32 i;
  u32 ring_idx;
  struct Vmxnet3_RxDesc *rxd;
  u32 tmp;
  
#line 1457 
  ring_idx = 0U;
  
#line 1457 
  goto ldv_54669;
  ldv_54668: 
#line 1458 
  ;
  
#line 1458 
  i = 0U;
  
#line 1458 
  goto ldv_54666;
  ldv_54665: 
#line 1459 
  ;
  
#line 1462 
  rxd = & (rq->rx_ring[ring_idx].base + i)->rxd;
  
#line 1465 
  if ((unsigned int)*((unsigned char *)rxd + 9UL) == 0U && (rq->buf_info[ring_idx] + i)->__anonCompField_vmxnet3_rx_buf_info_115.skb != (struct sk_buff *)0) {
    
#line 1467 
    dma_unmap_single_attrs(& (adapter->pdev)->dev,rxd->addr,(unsigned long)rxd->len,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 1469 
    consume_skb((rq->buf_info[ring_idx] + i)->__anonCompField_vmxnet3_rx_buf_info_115.skb);
    
#line 1470 
    (rq->buf_info[ring_idx] + i)->__anonCompField_vmxnet3_rx_buf_info_115.skb = (struct sk_buff *)0;
  }
  else 
    
#line 1471 
    if ((unsigned int)*((unsigned char *)rxd + 9UL) != 0U && (rq->buf_info[ring_idx] + i)->__anonCompField_vmxnet3_rx_buf_info_115.page != (struct page *)0) {
      
#line 1473 
      dma_unmap_page(& (adapter->pdev)->dev,rxd->addr,(unsigned long)rxd->len,(enum dma_data_direction)DMA_FROM_DEVICE);
      
#line 1475 
      put_page((rq->buf_info[ring_idx] + i)->__anonCompField_vmxnet3_rx_buf_info_115.page);
      
#line 1476 
      (rq->buf_info[ring_idx] + i)->__anonCompField_vmxnet3_rx_buf_info_115.page = (struct page *)0;
    }
    else ;
  
#line 1458 
  i += 1U;
  ldv_54666: 
#line 1459 
  ;
  
#line 1458 
  if (rq->rx_ring[ring_idx].size > i) 
#line 1460 
                                      goto ldv_54665; else 
#line 1463 
                                                           goto ldv_54667;
  ldv_54667: 
#line 1464 
  ;
  
#line 1480 
  rq->rx_ring[ring_idx].gen = (unsigned char)1U;
  
#line 1481 
  tmp = 0U;
  
#line 1481 
  rq->rx_ring[ring_idx].next2comp = tmp;
  
#line 1481 
  rq->rx_ring[ring_idx].next2fill = tmp;
  
#line 1457 
  ring_idx += 1U;
  ldv_54669: 
#line 1458 
  ;
  
#line 1457 
  if (ring_idx <= 1U) 
#line 1459 
                      goto ldv_54668; else 
#line 1462 
                                           goto ldv_54670;
  ldv_54670: 
#line 1463 
  ;
  
#line 1485 
  rq->comp_ring.gen = (unsigned char)1U;
  
#line 1486 
  rq->comp_ring.next2proc = 0U;
  
#line 1487 
  return;
}


#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_rq_cleanup_all(struct vmxnet3_adapter *adapter)
{
  int i;
  
#line 1495 
  i = 0;
  
#line 1495 
  goto ldv_54676;
  ldv_54675: 
#line 1496 
  ;
  
#line 1496 
  vmxnet3_rq_cleanup(& adapter->rx_queue[i],adapter);
  
#line 1495 
  i += 1;
  ldv_54676: 
#line 1496 
  ;
  
#line 1495 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 1497 
                                                goto ldv_54675; else 
                                                                  
#line 1500 
                                                                  goto ldv_54677;
  ldv_54677: 
#line 1501 
  ;
  
#line 1502 
  return;
}


#line 1500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_rq_destroy(struct vmxnet3_rx_queue *rq, struct vmxnet3_adapter *adapter)
{
  int i;
  int j;
  
#line 1507 
  i = 0;
  
#line 1507 
  goto ldv_54688;
  ldv_54687: 
#line 1508 
  ;
  
#line 1508 
  if (rq->buf_info[i] != (struct vmxnet3_rx_buf_info *)0) {
    
#line 1509 
    j = 0;
    
#line 1509 
    goto ldv_54685;
    ldv_54684: 
#line 1510 
    ;
    
#line 1510 
    if ((long)((rq->buf_info[i] + j)->__anonCompField_vmxnet3_rx_buf_info_115.page != (struct page *)0) != 0L) {
      
#line 1512 
      ldv_inline_asm();
      
#line 1510 
      ;
    }
    else ;
    
#line 1509 
    j += 1;
    ldv_54685: 
#line 1510 
    ;
    
#line 1509 
    if (rq->rx_ring[i].size > (unsigned int)j) 
#line 1511 
                                               goto ldv_54684; else 
#line 1514 
                                                                    goto ldv_54686;
    ldv_54686: 
#line 1515 
    ;
  }
  else ;
  
#line 1507 
  i += 1;
  ldv_54688: 
#line 1508 
  ;
  
#line 1507 
  if (i <= 1) 
#line 1509 
              goto ldv_54687; else 
#line 1512 
                                   goto ldv_54689;
  ldv_54689: 
#line 1513 
  ;
  
#line 1515 
  i = 0;
  
#line 1515 
  goto ldv_54691;
  ldv_54690: 
#line 1516 
  ;
  
#line 1516 
  if (rq->rx_ring[i].base != (union Vmxnet3_GenericDesc *)0) {
    
#line 1517 
    dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)rq->rx_ring[i].size * 16UL,(void *)rq->rx_ring[i].base,rq->rx_ring[i].basePA,(struct dma_attrs *)0);
    
#line 1522 
    rq->rx_ring[i].base = (union Vmxnet3_GenericDesc *)0;
  }
  else ;
  
#line 1524 
  rq->buf_info[i] = (struct vmxnet3_rx_buf_info *)0;
  
#line 1515 
  i += 1;
  ldv_54691: 
#line 1516 
  ;
  
#line 1515 
  if (i <= 1) 
#line 1517 
              goto ldv_54690; else 
#line 1520 
                                   goto ldv_54692;
  ldv_54692: 
#line 1521 
  ;
  
#line 1527 
  if (rq->comp_ring.base != (union Vmxnet3_GenericDesc *)0) {
    
#line 1528 
    dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)rq->comp_ring.size * 16UL,(void *)rq->comp_ring.base,rq->comp_ring.basePA,(struct dma_attrs *)0);
    
#line 1531 
    rq->comp_ring.base = (union Vmxnet3_GenericDesc *)0;
  }
  else ;
  
#line 1534 
  if (rq->buf_info[0] != (struct vmxnet3_rx_buf_info *)0) {
    
#line 1535 
    size_t sz = (unsigned long)(rq->rx_ring[0].size + rq->rx_ring[1].size) * 24UL;
    
#line 1537 
    dma_free_attrs(& (adapter->pdev)->dev,sz,(void *)rq->buf_info[0],rq->buf_info_pa,(struct dma_attrs *)0);
  }
  else ;
  
#line 1539 
  return;
}


#line 1544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_rq_init(struct vmxnet3_rx_queue *rq, struct vmxnet3_adapter *adapter)
{
  int __retres;
  int i;
  u32 tmp;
  int tmp_0;
  
#line 1550 
  i = 0;
  
#line 1550 
  goto ldv_54700;
  ldv_54699: 
#line 1551 
  ;
  
#line 1553 
  if (i % adapter->rx_buf_per_pkt == 0) {
    
#line 1554 
    (rq->buf_info[0] + i)->buf_type = VMXNET3_RX_BUF_SKB;
    
#line 1555 
    (rq->buf_info[0] + i)->len = (unsigned short)adapter->skb_buf_size;
  }
  else {
    
#line 1557 
    (rq->buf_info[0] + i)->buf_type = VMXNET3_RX_BUF_PAGE;
    
#line 1558 
    (rq->buf_info[0] + i)->len = (unsigned short)4096U;
  }
  
#line 1550 
  i += 1;
  ldv_54700: 
#line 1551 
  ;
  
#line 1550 
  if (rq->rx_ring[0].size > (unsigned int)i) 
#line 1552 
                                             goto ldv_54699; else 
#line 1555 
                                                                  goto ldv_54701;
  ldv_54701: 
#line 1556 
  ;
  
#line 1561 
  i = 0;
  
#line 1561 
  goto ldv_54703;
  ldv_54702: 
#line 1562 
  ;
  
#line 1562 
  (rq->buf_info[1] + i)->buf_type = VMXNET3_RX_BUF_PAGE;
  
#line 1563 
  (rq->buf_info[1] + i)->len = (unsigned short)4096U;
  
#line 1561 
  i += 1;
  ldv_54703: 
#line 1562 
  ;
  
#line 1561 
  if (rq->rx_ring[1].size > (unsigned int)i) 
#line 1563 
                                             goto ldv_54702; else 
#line 1566 
                                                                  goto ldv_54704;
  ldv_54704: 
#line 1567 
  ;
  
#line 1567 
  i = 0;
  
#line 1567 
  goto ldv_54706;
  ldv_54705: 
#line 1568 
  ;
  
#line 1568 
  tmp = 0U;
  
#line 1568 
  rq->rx_ring[i].next2comp = tmp;
  
#line 1568 
  rq->rx_ring[i].next2fill = tmp;
  
#line 1570 
  memset((void *)rq->rx_ring[i].base,0,(unsigned long)rq->rx_ring[i].size * 16UL);
  
#line 1572 
  rq->rx_ring[i].gen = (unsigned char)1U;
  
#line 1567 
  i += 1;
  ldv_54706: 
#line 1568 
  ;
  
#line 1567 
  if (i <= 1) 
#line 1569 
              goto ldv_54705; else 
#line 1572 
                                   goto ldv_54707;
  ldv_54707: 
#line 1573 
  ;
  
#line 1574 
  tmp_0 = vmxnet3_rq_alloc_rx_buf(rq,0U,(int)(rq->rx_ring[0].size + 4294967295U),adapter);
  
#line 1574 
  if (tmp_0 == 0) {
    
#line 1577 
    __retres = -12;
    
#line 1577 
    goto return_label;
  }
  else ;
  
#line 1579 
  vmxnet3_rq_alloc_rx_buf(rq,1U,(int)(rq->rx_ring[1].size + 4294967295U),adapter);
  
#line 1582 
  rq->comp_ring.next2proc = 0U;
  
#line 1583 
  memset((void *)rq->comp_ring.base,0,(unsigned long)rq->comp_ring.size * 16UL);
  
#line 1585 
  rq->comp_ring.gen = (unsigned char)1U;
  
#line 1588 
  rq->rx_ctx.skb = (struct sk_buff *)0;
  
#line 1591 
  __retres = 0;
  return_label: 
#line 1591 
                return __retres;
}


#line 1596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_rq_init_all(struct vmxnet3_adapter *adapter)
{
  int i;
  
#line 1598 
  int err = 0;
  
#line 1600 
  i = 0;
  
#line 1600 
  goto ldv_54715;
  ldv_54714: 
#line 1601 
  ;
  
#line 1601 
  err = vmxnet3_rq_init(& adapter->rx_queue[i],adapter);
  
#line 1602 
  if ((long)(err != 0) != 0L) {
    
#line 1603 
    dev_err((struct device const *)(& (adapter->netdev)->dev),"%s: failed to ",(char *)(& (adapter->netdev)->name),i);
    
#line 1606 
    goto ldv_54713;
  }
  else ;
  
#line 1600 
  i += 1;
  ldv_54715: 
#line 1601 
  ;
  
#line 1600 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 1602 
                                                goto ldv_54714; else 
                                                                  
#line 1605 
                                                                  goto ldv_54713;
  ldv_54713: 
#line 1606 
  ;
  
#line 1609 
  return err;
}


#line 1615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_rq_create(struct vmxnet3_rx_queue *rq, struct vmxnet3_adapter *adapter)
{
  int __retres;
  int i;
  size_t sz;
  struct vmxnet3_rx_buf_info *bi;
  
#line 1621 
  i = 0;
  
#line 1621 
  goto ldv_54725;
  ldv_54724: 
#line 1622 
  ;
  
#line 1623 
  sz = (unsigned long)rq->rx_ring[i].size * 16UL;
  
#line 1624 
  rq->rx_ring[i].base = (union Vmxnet3_GenericDesc *)dma_alloc_attrs(& (adapter->pdev)->dev,sz,& rq->rx_ring[i].basePA,208U,(struct dma_attrs *)0);
  
#line 1628 
  if (rq->rx_ring[i].base == (union Vmxnet3_GenericDesc *)0) {
    
#line 1629 
    netdev_err((struct net_device const *)adapter->netdev,"failed to allocate rx ring %d\n",i);
    
#line 1631 
    goto err;
  }
  else ;
  
#line 1621 
  i += 1;
  ldv_54725: 
#line 1622 
  ;
  
#line 1621 
  if (i <= 1) 
#line 1623 
              goto ldv_54724; else 
#line 1626 
                                   goto ldv_54726;
  ldv_54726: 
#line 1627 
  ;
  
#line 1635 
  sz = (unsigned long)rq->comp_ring.size * 16UL;
  
#line 1636 
  rq->comp_ring.base = (union Vmxnet3_GenericDesc *)dma_alloc_attrs(& (adapter->pdev)->dev,sz,& rq->comp_ring.basePA,208U,(struct dma_attrs *)0);
  
#line 1639 
  if (rq->comp_ring.base == (union Vmxnet3_GenericDesc *)0) {
    
#line 1640 
    netdev_err((struct net_device const *)adapter->netdev,"failed to allocate rx comp ring\n");
    
#line 1641 
    goto err;
  }
  else ;
  
#line 1644 
  sz = (unsigned long)(rq->rx_ring[0].size + rq->rx_ring[1].size) * 24UL;
  
#line 1646 
  bi = (struct vmxnet3_rx_buf_info *)dma_zalloc_coherent(& (adapter->pdev)->dev,sz,& rq->buf_info_pa,208U);
  
#line 1648 
  if (bi == (struct vmxnet3_rx_buf_info *)0) 
#line 1649 
                                             goto err; else ;
  
#line 1651 
  rq->buf_info[0] = bi;
  
#line 1652 
  rq->buf_info[1] = bi + rq->rx_ring[0].size;
  
#line 1654 
  __retres = 0;
  
#line 1654 
  goto return_label;
  err: 
#line 1656 
  ;
  
#line 1657 
  vmxnet3_rq_destroy(rq,adapter);
  
#line 1658 
  __retres = -12;
  return_label: 
#line 1658 
                return __retres;
}


#line 1663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_rq_create_all(struct vmxnet3_adapter *adapter)
{
  int __retres;
  int i;
  
#line 1665 
  int err = 0;
  
#line 1667 
  i = 0;
  
#line 1667 
  goto ldv_54734;
  ldv_54733: 
#line 1668 
  ;
  
#line 1668 
  err = vmxnet3_rq_create(& adapter->rx_queue[i],adapter);
  
#line 1669 
  if ((long)(err != 0) != 0L) {
    
#line 1670 
    dev_err((struct device const *)(& (adapter->netdev)->dev),"%s: failed to create rx queue%i\n",(char *)(& (adapter->netdev)->name),i);
    
#line 1673 
    goto err_out;
  }
  else ;
  
#line 1667 
  i += 1;
  ldv_54734: 
#line 1668 
  ;
  
#line 1667 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 1669 
                                                goto ldv_54733; else 
                                                                  
#line 1672 
                                                                  goto ldv_54735;
  ldv_54735: 
#line 1673 
  ;
  
#line 1676 
  __retres = err;
  
#line 1676 
  goto return_label;
  err_out: 
#line 1677 
  ;
  
#line 1678 
  vmxnet3_rq_destroy_all(adapter);
  
#line 1679 
  __retres = err;
  return_label: 
#line 1679 
                return __retres;
}


#line 1686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_do_poll(struct vmxnet3_adapter *adapter, int budget)
{
  int i;
  int tmp;
  
#line 1688 
  int rcd_done = 0;
  
#line 1689 
  if ((long)((adapter->shared)->ecr != 0U) != 0L) 
#line 1690 
                                                  vmxnet3_process_events(adapter); else ;
  
#line 1691 
  i = 0;
  
#line 1691 
  goto ldv_54743;
  ldv_54742: 
#line 1692 
  ;
  
#line 1692 
  vmxnet3_tq_tx_complete(& adapter->tx_queue[i],adapter);
  
#line 1691 
  i += 1;
  ldv_54743: 
#line 1692 
  ;
  
#line 1691 
  if (adapter->num_tx_queues > (unsigned int)i) 
#line 1693 
                                                goto ldv_54742; else 
                                                                  
#line 1696 
                                                                  goto ldv_54744;
  ldv_54744: 
#line 1697 
  ;
  
#line 1694 
  i = 0;
  
#line 1694 
  goto ldv_54746;
  ldv_54745: 
#line 1695 
  ;
  
#line 1695 
  tmp = vmxnet3_rq_rx_complete(& adapter->rx_queue[i],adapter,budget);
  
#line 1696 
  rcd_done = tmp + rcd_done;
  
#line 1694 
  i += 1;
  ldv_54746: 
#line 1695 
  ;
  
#line 1694 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 1696 
                                                goto ldv_54745; else 
                                                                  
#line 1699 
                                                                  goto ldv_54747;
  ldv_54747: 
#line 1700 
  ;
  
#line 1697 
  return rcd_done;
}


#line 1702  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_poll(struct napi_struct *napi, int budget)
{
  struct vmxnet3_rx_queue *tmp;
  int rxd_done;
  {
    
#line 1704 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1704 
    tmp = (struct vmxnet3_rx_queue *)__mptr + 18446744073709551584U;
  }
  
#line 1704 
  struct vmxnet3_rx_queue *rx_queue = tmp;
  
#line 1708 
  rxd_done = vmxnet3_do_poll(rx_queue->adapter,budget);
  
#line 1710 
  if (rxd_done < budget) {
    
#line 1711 
    napi_complete(napi);
    
#line 1712 
    vmxnet3_enable_all_intrs(rx_queue->adapter);
  }
  else ;
  
#line 1714 
  return rxd_done;
}


#line 1723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_poll_rx_only(struct napi_struct *napi, int budget)
{
  struct vmxnet3_rx_queue *tmp;
  int rxd_done;
  {
    
#line 1725 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1725 
    tmp = (struct vmxnet3_rx_queue *)__mptr + 18446744073709551584U;
  }
  
#line 1725 
  struct vmxnet3_rx_queue *rq = tmp;
  
#line 1727 
  struct vmxnet3_adapter *adapter = rq->adapter;
  
#line 1733 
  if (adapter->share_intr == 0) {
    
#line 1734 
    struct vmxnet3_tx_queue *tq = & adapter->tx_queue[((long)rq - (long)(& adapter->rx_queue)) / 512L];
    
#line 1736 
    vmxnet3_tq_tx_complete(tq,adapter);
  }
  else ;
  
#line 1739 
  rxd_done = vmxnet3_rq_rx_complete(rq,adapter,budget);
  
#line 1741 
  if (rxd_done < budget) {
    
#line 1742 
    napi_complete(napi);
    
#line 1743 
    vmxnet3_enable_intr(adapter,(unsigned int)rq->comp_ring.intr_idx);
  }
  else ;
  
#line 1745 
  return rxd_done;
}


#line 1757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static irqreturn_t vmxnet3_msix_tx(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 1759 
  struct vmxnet3_tx_queue *tq = (struct vmxnet3_tx_queue *)data;
  
#line 1760 
  struct vmxnet3_adapter *adapter = tq->adapter;
  
#line 1762 
  if (adapter->intr.mask_mode == (unsigned int)VMXNET3_IMM_ACTIVE) 
#line 1763 
                                                                   vmxnet3_disable_intr(adapter,(unsigned int)tq->comp_ring.intr_idx); else ;
  
#line 1766 
  if (adapter->share_intr == 1) {
    int i;
    
#line 1768 
    i = 0;
    
#line 1768 
    goto ldv_54775;
    ldv_54774: 
#line 1769 
    ;
    {
      
#line 1769 
      struct vmxnet3_tx_queue *txq = & adapter->tx_queue[i];
      
#line 1770 
      vmxnet3_tq_tx_complete(txq,adapter);
    }
    
#line 1768 
    i += 1;
    ldv_54775: 
#line 1769 
    ;
    
#line 1768 
    if (adapter->num_tx_queues > (unsigned int)i) 
#line 1770 
                                                  goto ldv_54774; else 
                                                                    
#line 1773 
                                                                    goto ldv_54776;
    ldv_54776: 
#line 1774 
    ;
  }
  else 
#line 1773 
       vmxnet3_tq_tx_complete(tq,adapter);
  
#line 1775 
  vmxnet3_enable_intr(adapter,(unsigned int)tq->comp_ring.intr_idx);
  
#line 1777 
  __retres = IRQ_HANDLED;
  
#line 1777 
  return __retres;
}


#line 1787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static irqreturn_t vmxnet3_msix_rx(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 1789 
  struct vmxnet3_rx_queue *rq = (struct vmxnet3_rx_queue *)data;
  
#line 1790 
  struct vmxnet3_adapter *adapter = rq->adapter;
  
#line 1793 
  if (adapter->intr.mask_mode == (unsigned int)VMXNET3_IMM_ACTIVE) 
#line 1794 
                                                                   vmxnet3_disable_intr(adapter,(unsigned int)rq->comp_ring.intr_idx); else ;
  
#line 1795 
  napi_schedule(& rq->napi);
  
#line 1797 
  __retres = IRQ_HANDLED;
  
#line 1797 
  return __retres;
}


#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static irqreturn_t vmxnet3_msix_event(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 1816 
  struct net_device *dev = (struct net_device *)data;
  
#line 1817 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 1820 
  if (adapter->intr.mask_mode == (unsigned int)VMXNET3_IMM_ACTIVE) 
#line 1821 
                                                                   vmxnet3_disable_intr(adapter,(unsigned int)adapter->intr.event_intr_idx); else ;
  
#line 1823 
  if ((adapter->shared)->ecr != 0U) 
#line 1824 
                                    vmxnet3_process_events(adapter); else ;
  
#line 1826 
  vmxnet3_enable_intr(adapter,(unsigned int)adapter->intr.event_intr_idx);
  
#line 1828 
  __retres = IRQ_HANDLED;
  
#line 1828 
  return __retres;
}


#line 1836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static irqreturn_t vmxnet3_intr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  
#line 1838 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 1839 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 1841 
  if (adapter->intr.type == (unsigned int)VMXNET3_IT_INTX) {
    
#line 1842 
    u32 icr = readl((void const volatile *)(adapter->hw_addr1 + 56U));
    
#line 1843 
    if ((long)(icr == 0U) != 0L) {
      
#line 1845 
      __retres = IRQ_NONE;
      
#line 1845 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1850 
  if (adapter->intr.mask_mode == (unsigned int)VMXNET3_IMM_ACTIVE) 
#line 1851 
                                                                   vmxnet3_disable_all_intrs(adapter); else ;
  
#line 1853 
  napi_schedule(& adapter->rx_queue[0].napi);
  
#line 1855 
  __retres = IRQ_HANDLED;
  return_label: 
#line 1855 
                return __retres;
}


#line 1862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_netpoll(struct net_device *netdev)
{
  
#line 1864 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1866 
  switch ((unsigned int)adapter->intr.type) {
    case (unsigned int)3: 
#line 1868 
    ;
    {
      int i;
      
#line 1870 
      i = 0;
      
#line 1870 
      goto ldv_54803;
      ldv_54802: 
#line 1871 
      ;
      
#line 1871 
      vmxnet3_msix_rx(0,(void *)(& adapter->rx_queue[i]));
      
#line 1870 
      i += 1;
      ldv_54803: 
#line 1871 
      ;
      
#line 1870 
      if (adapter->num_rx_queues > (unsigned int)i) 
#line 1872 
                                                    goto ldv_54802; else 
                                                                    
#line 1875 
                                                                    goto ldv_54804;
      ldv_54804: 
#line 1876 
      ;
      
#line 1872 
      goto ldv_54805;
    }
    case (unsigned int)2: 
#line 1875 
    ;
    default: 
#line 1876 
    ;
    
#line 1877 
    vmxnet3_intr(0,(void *)adapter->netdev);
    
#line 1878 
    goto ldv_54805;
  }
  ldv_54805: 
#line 1881 
  ;
  
#line 1882 
  return;
}


#line 1885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_request_irqs(struct vmxnet3_adapter *adapter)
{
  int __retres;
  int i;
  
#line 1887 
  struct vmxnet3_intr *intr = & adapter->intr;
  
#line 1888 
  int err = 0;
  
#line 1889 
  int vector = 0;
  
#line 1892 
  if (adapter->intr.type == (unsigned int)VMXNET3_IT_MSIX) {
    int tmp_0;
    
#line 1893 
    i = 0;
    
#line 1893 
    goto ldv_54820;
    ldv_54819: 
#line 1894 
    ;
    
#line 1894 
    if (adapter->share_intr != 0) {
      
#line 1895 
      sprintf((char *)(& adapter->tx_queue[i].name),"%s-tx-%d",(char *)(& (adapter->netdev)->name),vector);
      
#line 1897 
      err = ldv_request_irq_86(intr->msix_entries[vector].vector,& vmxnet3_msix_tx,0UL,(char const *)(& adapter->tx_queue[i].name),(void *)(& adapter->tx_queue[i]));
    }
    else 
#line 1903 
         sprintf((char *)(& adapter->tx_queue[i].name),"%s-rxtx-%d",(char *)(& (adapter->netdev)->name),vector);
    
#line 1906 
    if (err != 0) {
      
#line 1907 
      dev_err((struct device const *)(& (adapter->netdev)->dev),"Failed to request irq for MSIX, %s, ",(char *)(& adapter->tx_queue[i].name),err);
      
#line 1911 
      __retres = err;
      
#line 1911 
      goto return_label;
    }
    else ;
    
#line 1916 
    if (adapter->share_intr == 1) {
      
#line 1917 
      goto ldv_54816;
      ldv_54815: 
#line 1918 
      ;
      
#line 1919 
      adapter->tx_queue[i].comp_ring.intr_idx = (unsigned char)vector;
      
#line 1917 
      i += 1;
      ldv_54816: 
#line 1918 
      ;
      
#line 1917 
      if (adapter->num_tx_queues > (unsigned int)i) 
#line 1919 
                                                    goto ldv_54815; else 
                                                                    
#line 1922 
                                                                    goto ldv_54817;
      ldv_54817: 
#line 1923 
      ;
      
#line 1920 
      vector += 1;
      
#line 1921 
      goto ldv_54818;
    }
    else {
      int tmp;
      
#line 1924 
      tmp = vector;
      
#line 1924 
      vector += 1;
      
#line 1924 
      adapter->tx_queue[i].comp_ring.intr_idx = (unsigned char)tmp;
    }
    
#line 1893 
    i += 1;
    ldv_54820: 
#line 1894 
    ;
    
#line 1893 
    if (adapter->num_tx_queues > (unsigned int)i) 
#line 1895 
                                                  goto ldv_54819; else 
                                                                    
#line 1898 
                                                                    goto ldv_54818;
    ldv_54818: 
#line 1899 
    ;
    
#line 1927 
    if (adapter->share_intr == 0) 
#line 1928 
                                  vector = 0; else ;
    
#line 1930 
    i = 0;
    
#line 1930 
    goto ldv_54822;
    ldv_54821: 
#line 1931 
    ;
    
#line 1931 
    if (adapter->share_intr != 0) 
#line 1932 
                                  sprintf((char *)(& adapter->rx_queue[i].name),"%s-rx-%d",(char *)(& (adapter->netdev)->name),vector); else 
                                                                    
#line 1935 
                                                                    sprintf((char *)(& adapter->rx_queue[i].name),"%s-rxtx-%d",(char *)(& (adapter->netdev)->name),vector);
    
#line 1937 
    err = ldv_request_irq_87(intr->msix_entries[vector].vector,& vmxnet3_msix_rx,0UL,(char const *)(& adapter->rx_queue[i].name),(void *)(& adapter->rx_queue[i]));
    
#line 1941 
    if (err != 0) {
      
#line 1942 
      netdev_err((struct net_device const *)adapter->netdev,"Failed to request irq for MSIX, ",(char *)(& adapter->rx_queue[i].name),err);
      
#line 1946 
      __retres = err;
      
#line 1946 
      goto return_label;
    }
    else ;
    
#line 1949 
    tmp_0 = vector;
    
#line 1949 
    vector += 1;
    
#line 1949 
    adapter->rx_queue[i].comp_ring.intr_idx = (unsigned char)tmp_0;
    
#line 1930 
    i += 1;
    ldv_54822: 
#line 1931 
    ;
    
#line 1930 
    if (adapter->num_rx_queues > (unsigned int)i) 
#line 1932 
                                                  goto ldv_54821; else 
                                                                    
#line 1935 
                                                                    goto ldv_54823;
    ldv_54823: 
#line 1936 
    ;
    
#line 1952 
    sprintf((char *)(& intr->event_msi_vector_name),"%s-event-%d",(char *)(& (adapter->netdev)->name),vector);
    
#line 1954 
    err = ldv_request_irq_88(intr->msix_entries[vector].vector,& vmxnet3_msix_event,0UL,(char const *)(& intr->event_msi_vector_name),(void *)adapter->netdev);
    
#line 1957 
    intr->event_intr_idx = (unsigned char)vector;
  }
  else 
    
#line 1959 
    if (intr->type == (unsigned int)VMXNET3_IT_MSI) {
      
#line 1960 
      adapter->num_rx_queues = 1U;
      
#line 1961 
      err = ldv_request_irq_89((adapter->pdev)->irq,& vmxnet3_intr,0UL,(char const *)(& (adapter->netdev)->name),(void *)adapter->netdev);
    }
    else {
      
#line 1965 
      adapter->num_rx_queues = 1U;
      
#line 1966 
      err = ldv_request_irq_90((adapter->pdev)->irq,& vmxnet3_intr,128UL,(char const *)(& (adapter->netdev)->name),(void *)adapter->netdev);
    }
  
#line 1972 
  intr->num_intrs = (unsigned char)((unsigned int)((unsigned char)vector) + 1U);
  
#line 1973 
  if (err != 0) 
#line 1974 
                netdev_err((struct net_device const *)adapter->netdev,"Failed to request irq (intr type:%d), error %d\n",(unsigned int)intr->type,err);
  else {
    
#line 1979 
    i = 0;
    
#line 1979 
    goto ldv_54826;
    ldv_54825: 
#line 1980 
    ;
    {
      
#line 1980 
      struct vmxnet3_rx_queue *rq = & adapter->rx_queue[i];
      
#line 1981 
      rq->qid = (unsigned int)i;
      
#line 1982 
      rq->qid2 = adapter->num_rx_queues + (unsigned int)i;
    }
    
#line 1979 
    i += 1;
    ldv_54826: 
#line 1980 
    ;
    
#line 1979 
    if (adapter->num_rx_queues > (unsigned int)i) 
#line 1981 
                                                  goto ldv_54825; else 
                                                                    
#line 1984 
                                                                    goto ldv_54827;
    ldv_54827: 
#line 1985 
    ;
    
#line 1988 
    i = 0;
    
#line 1988 
    goto ldv_54829;
    ldv_54828: 
#line 1989 
    ;
    
#line 1989 
    intr->mod_levels[i] = (unsigned char)8U;
    
#line 1988 
    i += 1;
    ldv_54829: 
#line 1989 
    ;
    
#line 1988 
    if ((int)intr->num_intrs > i) 
#line 1990 
                                  goto ldv_54828; else 
#line 1993 
                                                       goto ldv_54830;
    ldv_54830: 
#line 1994 
    ;
    
#line 1990 
    if (adapter->intr.type != (unsigned int)VMXNET3_IT_MSIX) {
      
#line 1991 
      adapter->intr.event_intr_idx = (unsigned char)0U;
      
#line 1992 
      i = 0;
      
#line 1992 
      goto ldv_54832;
      ldv_54831: 
#line 1993 
      ;
      
#line 1993 
      adapter->tx_queue[i].comp_ring.intr_idx = (unsigned char)0U;
      
#line 1992 
      i += 1;
      ldv_54832: 
#line 1993 
      ;
      
#line 1992 
      if (adapter->num_tx_queues > (unsigned int)i) 
#line 1994 
                                                    goto ldv_54831; else 
                                                                    
#line 1997 
                                                                    goto ldv_54833;
      ldv_54833: 
#line 1998 
      ;
      
#line 1994 
      adapter->rx_queue[0].comp_ring.intr_idx = (unsigned char)0U;
    }
    else ;
    
#line 1997 
    netdev_info((struct net_device const *)adapter->netdev,"intr type %u, mode %u, %u vectors allocated\n",(unsigned int)intr->type,(unsigned int)intr->mask_mode,(int)intr->num_intrs);
  }
  
#line 2002 
  __retres = err;
  return_label: 
#line 2002 
                return __retres;
}


#line 2007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_free_irqs(struct vmxnet3_adapter *adapter)
{
  
#line 2009 
  struct vmxnet3_intr *intr = & adapter->intr;
  
#line 2010 
  if ((long)(intr->type == (unsigned int)VMXNET3_IT_AUTO) != 0L || (long)((unsigned int)intr->num_intrs == 0U) != 0L) {
    
#line 2012 
    ldv_inline_asm();
    
#line 2010 
    ;
  }
  else ;
  
#line 2012 
  switch ((unsigned int)intr->type) {
    case (unsigned int)3: 
#line 2014 
    ;
    {
      int i;
      int tmp_0;
      
#line 2016 
      int vector = 0;
      
#line 2018 
      if (adapter->share_intr != 0) {
        int tmp;
        
#line 2019 
        i = 0;
        
#line 2019 
        goto ldv_54843;
        ldv_54842: 
#line 2020 
        ;
        
#line 2020 
        ;
        
#line 2020 
        tmp = vector;
        
#line 2020 
        vector += 1;
        
#line 2020 
        ;
        
#line 2020 
        ldv_free_irq_91(intr->msix_entries[tmp].vector,(void *)(& adapter->tx_queue[i]));
        
#line 2022 
        if (adapter->share_intr == 1) 
#line 2023 
                                      goto ldv_54841; else ;
        
#line 2019 
        i += 1;
        ldv_54843: 
#line 2020 
        ;
        
#line 2019 
        if (adapter->num_tx_queues > (unsigned int)i) 
#line 2021 
                                                      goto ldv_54842; else 
                                                                    
#line 2024 
                                                                    goto ldv_54841;
        ldv_54841: 
#line 2025 
        ;
      }
      else ;
      
#line 2027 
      i = 0;
      
#line 2027 
      goto ldv_54845;
      ldv_54844: 
#line 2028 
      ;
      
#line 2028 
      ;
      
#line 2028 
      tmp_0 = vector;
      
#line 2028 
      vector += 1;
      
#line 2028 
      ;
      
#line 2028 
      ldv_free_irq_92(intr->msix_entries[tmp_0].vector,(void *)(& adapter->rx_queue[i]));
      
#line 2027 
      i += 1;
      ldv_54845: 
#line 2028 
      ;
      
#line 2027 
      if (adapter->num_rx_queues > (unsigned int)i) 
#line 2029 
                                                    goto ldv_54844; else 
                                                                    
#line 2032 
                                                                    goto ldv_54846;
      ldv_54846: 
#line 2033 
      ;
      
#line 2032 
      ldv_free_irq_93(intr->msix_entries[vector].vector,(void *)adapter->netdev);
      
#line 2034 
      if ((long)((int)intr->num_intrs <= vector) != 0L) {
        
#line 2036 
        ldv_inline_asm();
        
#line 2034 
        ;
      }
      else ;
      
#line 2035 
      goto ldv_54847;
    }
    case (unsigned int)2: 
#line 2038 
    ;
    
#line 2039 
    ldv_free_irq_94((adapter->pdev)->irq,(void *)adapter->netdev);
    
#line 2040 
    goto ldv_54847;
    case (unsigned int)1: 
#line 2041 
    ;
    
#line 2042 
    ldv_free_irq_95((adapter->pdev)->irq,(void *)adapter->netdev);
    
#line 2043 
    goto ldv_54847;
    default: 
#line 2044 
    ;
    
#line 2045 
    ldv_inline_asm();
    
#line 2045 
    ;
  }
  ldv_54847: 
#line 2047 
  ;
  
#line 2048 
  return;
}


#line 2051  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_restore_vlan(struct vmxnet3_adapter *adapter)
{
  u16 vid;
  unsigned long tmp;
  unsigned long tmp_0;
  
#line 2053 
  u32 *vfTable = (u32 *)(& (adapter->shared)->devRead.rxFilterConf.vfTable);
  
#line 2057 
  *vfTable |= 1U;
  
#line 2059 
  tmp = find_first_bit((unsigned long const *)(& adapter->active_vlans),4096UL);
  
#line 2059 
  vid = (unsigned short)tmp;
  
#line 2059 
  goto ldv_54857;
  ldv_54856: 
#line 2060 
  ;
  
#line 2060 
  *(vfTable + ((int)vid >> 5)) |= (unsigned int)(1 << ((int)vid & 31));
  
#line 2059 
  tmp_0 = find_next_bit((unsigned long const *)(& adapter->active_vlans),4096UL,(unsigned long)((int)vid + 1));
  
#line 2059 
  vid = (unsigned short)tmp_0;
  ldv_54857: 
#line 2060 
  ;
  
#line 2059 
  if ((unsigned int)vid <= 4095U) 
#line 2061 
                                  goto ldv_54856; else 
#line 2064 
                                                       goto ldv_54858;
  ldv_54858: 
#line 2065 
  ;
  
#line 2066 
  return;
}


#line 2065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  
#line 2067 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2069 
  if ((netdev->flags & 256U) == 0U) {
    unsigned long flags;
    
#line 2070 
    u32 *vfTable = (u32 *)(& (adapter->shared)->devRead.rxFilterConf.vfTable);
    
#line 2073 
    *(vfTable + ((int)vid >> 5)) |= (unsigned int)(1 << ((int)vid & 31));
    
#line 2074 
    ldv___ldv_spin_lock_96(& adapter->cmd_lock);
    
#line 2075 
    writel(3405643781U,(void volatile *)(adapter->hw_addr1 + 32U));
    
#line 2077 
    ldv_spin_unlock_irqrestore_97(& adapter->cmd_lock,flags);
  }
  else ;
  
#line 2080 
  set_bit((long)vid,(unsigned long volatile *)(& adapter->active_vlans));
  
#line 2082 
  __retres = 0;
  
#line 2082 
  return __retres;
}


#line 2087  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  
#line 2089 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2091 
  if ((netdev->flags & 256U) == 0U) {
    unsigned long flags;
    
#line 2092 
    u32 *vfTable = (u32 *)(& (adapter->shared)->devRead.rxFilterConf.vfTable);
    
#line 2095 
    *(vfTable + ((int)vid >> 5)) &= (unsigned int)(~ (1 << ((int)vid & 31)));
    
#line 2096 
    ldv___ldv_spin_lock_98(& adapter->cmd_lock);
    
#line 2097 
    writel(3405643781U,(void volatile *)(adapter->hw_addr1 + 32U));
    
#line 2099 
    ldv_spin_unlock_irqrestore_99(& adapter->cmd_lock,flags);
  }
  else ;
  
#line 2102 
  set_bit((long)vid,(unsigned long volatile *)(& adapter->active_vlans));
  
#line 2104 
  __retres = 0;
  
#line 2104 
  return __retres;
}


#line 2109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static u8 *vmxnet3_copy_mc(struct net_device *netdev)
{
  
#line 2111 
  u8 *buf = (u8 *)0U;
  
#line 2112 
  u32 sz = (unsigned int)(netdev->mc.count * 6);
  
#line 2115 
  if (sz <= 65535U) {
    
#line 2117 
    buf = (u8 *)kmalloc((unsigned long)sz,32U);
    
#line 2118 
    if (buf != (u8 *)0U) {
      struct netdev_hw_addr *ha;
      struct netdev_hw_addr *tmp_0;
      int tmp_1;
      struct netdev_hw_addr *tmp_2;
      
#line 2120 
      int i = 0;
      {
        
#line 2122 
        struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
        
#line 2122 
        tmp_0 = (struct netdev_hw_addr *)__mptr;
      }
      
#line 2122 
      ha = tmp_0;
      
#line 2122 
      goto ldv_54887;
      ldv_54886: 
#line 2123 
      ;
      
#line 2123 
      ;
      
#line 2123 
      tmp_1 = i;
      
#line 2123 
      i += 1;
      
#line 2123 
      ;
      
#line 2123 
      memcpy((void *)(buf + tmp_1 * 6),(void const *)(& ha->addr),6UL);
      {
        
#line 2122 
        struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
        
#line 2122 
        tmp_2 = (struct netdev_hw_addr *)__mptr_0;
      }
      
#line 2122 
      ha = tmp_2;
      ldv_54887: 
#line 2124 
      ;
      
#line 2122 
      if (& ha->list != & netdev->mc.list) 
#line 2124 
                                           goto ldv_54886; else 
#line 2127 
                                                                goto ldv_54888;
      ldv_54888: 
#line 2128 
      ;
    }
    else ;
  }
  else ;
  
#line 2127 
  return buf;
}


#line 2132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_set_mc(struct net_device *netdev)
{
  unsigned long flags;
  
#line 2134 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2136 
  struct Vmxnet3_RxFilterConf *rxConf = & (adapter->shared)->devRead.rxFilterConf;
  
#line 2138 
  u8 *new_table = (u8 *)0U;
  
#line 2139 
  dma_addr_t new_table_pa = 0ULL;
  
#line 2140 
  u32 new_mode = 1U;
  
#line 2142 
  if ((netdev->flags & 256U) != 0U) {
    
#line 2143 
    u32 *vfTable = (u32 *)(& (adapter->shared)->devRead.rxFilterConf.vfTable);
    
#line 2144 
    memset((void *)vfTable,0,512UL);
    
#line 2146 
    new_mode |= 16U;
  }
  else 
#line 2148 
       vmxnet3_restore_vlan(adapter);
  
#line 2151 
  if ((netdev->flags & 2U) != 0U) 
#line 2152 
                                  new_mode |= 4U; else ;
  
#line 2154 
  if ((netdev->flags & 512U) != 0U) 
#line 2155 
                                    new_mode |= 8U;
  else 
    
#line 2157 
    if (netdev->mc.count != 0) {
      
#line 2158 
      new_table = vmxnet3_copy_mc(netdev);
      
#line 2159 
      if (new_table != (u8 *)0U) {
        
#line 2160 
        rxConf->mfTableLen = (unsigned short)((unsigned int)((unsigned short)netdev->mc.count) * 6U);
        
#line 2162 
        new_table_pa = dma_map_single_attrs(& (adapter->pdev)->dev,(void *)new_table,(unsigned long)rxConf->mfTableLen,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      }
      else ;
      
#line 2169 
      if (new_table_pa != 0ULL) {
        
#line 2170 
        new_mode |= 2U;
        
#line 2171 
        rxConf->mfTablePA = new_table_pa;
      }
      else {
        
#line 2173 
        netdev_info((struct net_device const *)netdev,"failed to copy mcast list, setting ALL_MULTI\n");
        
#line 2175 
        new_mode |= 8U;
      }
    }
    else ;
  
#line 2179 
  if ((new_mode & 2U) == 0U) {
    
#line 2180 
    rxConf->mfTableLen = (unsigned short)0U;
    
#line 2181 
    rxConf->mfTablePA = 0ULL;
  }
  else ;
  
#line 2184 
  ldv___ldv_spin_lock_100(& adapter->cmd_lock);
  
#line 2185 
  if (rxConf->rxMode != new_mode) {
    
#line 2186 
    rxConf->rxMode = new_mode;
    
#line 2187 
    writel(3405643779U,(void volatile *)(adapter->hw_addr1 + 32U));
    
#line 2189 
    writel(3405643781U,(void volatile *)(adapter->hw_addr1 + 32U));
  }
  else ;
  
#line 2193 
  writel(3405643780U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 2195 
  ldv_spin_unlock_irqrestore_101(& adapter->cmd_lock,flags);
  
#line 2197 
  if (new_table_pa != 0ULL) 
#line 2198 
                            dma_unmap_single_attrs(& (adapter->pdev)->dev,new_table_pa,(unsigned long)rxConf->mfTableLen,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0); else ;
  
#line 2200 
  kfree((void const *)new_table);
  
#line 2201 
  return;
}


#line 2204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
void vmxnet3_rq_destroy_all(struct vmxnet3_adapter *adapter)
{
  int i;
  
#line 2208 
  i = 0;
  
#line 2208 
  goto ldv_54904;
  ldv_54903: 
#line 2209 
  ;
  
#line 2209 
  vmxnet3_rq_destroy(& adapter->rx_queue[i],adapter);
  
#line 2208 
  i += 1;
  ldv_54904: 
#line 2209 
  ;
  
#line 2208 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 2210 
                                                goto ldv_54903; else 
                                                                  
#line 2213 
                                                                  goto ldv_54905;
  ldv_54905: 
#line 2214 
  ;
  
#line 2215 
  return;
}


#line 2218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_setup_driver_shared(struct vmxnet3_adapter *adapter)
{
  struct Vmxnet3_TxQueueConf *tqc;
  struct Vmxnet3_RxQueueConf *rqc;
  int i;
  
#line 2220 
  struct Vmxnet3_DriverShared *shared = adapter->shared;
  
#line 2221 
  struct Vmxnet3_DSDevRead *devRead = & shared->devRead;
  
#line 2226 
  memset((void *)shared,0,720UL);
  
#line 2229 
  shared->magic = 3133079265U;
  
#line 2230 
  devRead->misc.driverInfo.version = 17039872U;
  
#line 2232 
  devRead->misc.driverInfo.gos.gosBits = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))2U;
  
#line 2234 
  devRead->misc.driverInfo.gos.gosType = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U;
  
#line 2235 
  *((u32 *)(& devRead->misc.driverInfo.gos)) = *((u32 *)(& devRead->misc.driverInfo.gos));
  
#line 2237 
  devRead->misc.driverInfo.vmxnet3RevSpt = 1U;
  
#line 2238 
  devRead->misc.driverInfo.uptVerSpt = 1U;
  
#line 2240 
  devRead->misc.ddPA = adapter->adapter_pa;
  
#line 2241 
  devRead->misc.ddLen = 7744U;
  
#line 2244 
  if (((adapter->netdev)->features & 17179869184ULL) != 0ULL) 
#line 2245 
                                                              devRead->misc.uptFeatures |= 1ULL; else ;
  
#line 2247 
  if (((adapter->netdev)->features & 32768ULL) != 0ULL) {
    
#line 2248 
    devRead->misc.uptFeatures |= 8ULL;
    
#line 2249 
    devRead->misc.maxNumRxSG = (unsigned short)18U;
  }
  else ;
  
#line 2251 
  if (((adapter->netdev)->features & 256ULL) != 0ULL) 
#line 2252 
                                                      devRead->misc.uptFeatures |= 4ULL; else ;
  
#line 2254 
  devRead->misc.mtu = (adapter->netdev)->mtu;
  
#line 2255 
  devRead->misc.queueDescPA = adapter->queue_desc_pa;
  
#line 2256 
  devRead->misc.queueDescLen = (adapter->num_tx_queues + adapter->num_rx_queues) * 256U;
  
#line 2261 
  devRead->misc.numTxQueues = (unsigned char)adapter->num_tx_queues;
  
#line 2262 
  i = 0;
  
#line 2262 
  goto ldv_54916;
  ldv_54915: 
#line 2263 
  ;
  {
    
#line 2263 
    struct vmxnet3_tx_queue *tq = & adapter->tx_queue[i];
    
#line 2264 
    if ((long)(adapter->tx_queue[i].tx_ring.base == (union Vmxnet3_GenericDesc *)0) != 0L) {
      
#line 2266 
      ldv_inline_asm();
      
#line 2264 
      ;
    }
    else ;
    
#line 2265 
    tqc = & (adapter->tqd_start + i)->conf;
    
#line 2266 
    tqc->txRingBasePA = tq->tx_ring.basePA;
    
#line 2267 
    tqc->dataRingBasePA = tq->data_ring.basePA;
    
#line 2268 
    tqc->compRingBasePA = tq->comp_ring.basePA;
    
#line 2269 
    tqc->ddPA = tq->buf_info_pa;
    
#line 2270 
    tqc->txRingSize = tq->tx_ring.size;
    
#line 2271 
    tqc->dataRingSize = tq->data_ring.size;
    
#line 2272 
    tqc->compRingSize = tq->comp_ring.size;
    
#line 2273 
    tqc->ddLen = tqc->txRingSize * 24U;
    
#line 2276 
    tqc->intrIdx = tq->comp_ring.intr_idx;
  }
  
#line 2262 
  i += 1;
  ldv_54916: 
#line 2263 
  ;
  
#line 2262 
  if (adapter->num_tx_queues > (unsigned int)i) 
#line 2264 
                                                goto ldv_54915; else 
                                                                  
#line 2267 
                                                                  goto ldv_54917;
  ldv_54917: 
#line 2268 
  ;
  
#line 2280 
  devRead->misc.numRxQueues = (unsigned char)adapter->num_rx_queues;
  
#line 2281 
  i = 0;
  
#line 2281 
  goto ldv_54920;
  ldv_54919: 
#line 2282 
  ;
  {
    
#line 2282 
    struct vmxnet3_rx_queue *rq = & adapter->rx_queue[i];
    
#line 2283 
    rqc = & (adapter->rqd_start + i)->conf;
    
#line 2284 
    rqc->rxRingBasePA[0] = rq->rx_ring[0].basePA;
    
#line 2285 
    rqc->rxRingBasePA[1] = rq->rx_ring[1].basePA;
    
#line 2286 
    rqc->compRingBasePA = rq->comp_ring.basePA;
    
#line 2287 
    rqc->ddPA = rq->buf_info_pa;
    
#line 2288 
    rqc->rxRingSize[0] = rq->rx_ring[0].size;
    
#line 2289 
    rqc->rxRingSize[1] = rq->rx_ring[1].size;
    
#line 2290 
    rqc->compRingSize = rq->comp_ring.size;
    
#line 2291 
    rqc->ddLen = (rqc->rxRingSize[0] + rqc->rxRingSize[1]) * 24U;
    
#line 2295 
    rqc->intrIdx = rq->comp_ring.intr_idx;
  }
  
#line 2281 
  i += 1;
  ldv_54920: 
#line 2282 
  ;
  
#line 2281 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 2283 
                                                goto ldv_54919; else 
                                                                  
#line 2286 
                                                                  goto ldv_54921;
  ldv_54921: 
#line 2287 
  ;
  
#line 2299 
  memset((void *)adapter->rss_conf,0,176UL);
  
#line 2301 
  if ((int)adapter->rss != 0) {
    u32 tmp;
    
#line 2302 
    struct UPT1_RSSConf *rssConf = adapter->rss_conf;
    
#line 2304 
    devRead->misc.uptFeatures |= 2ULL;
    
#line 2305 
    devRead->misc.numRxQueues = (unsigned char)adapter->num_rx_queues;
    
#line 2306 
    rssConf->hashType = (unsigned short)15U;
    
#line 2310 
    rssConf->hashFunc = (unsigned short)1U;
    
#line 2311 
    rssConf->hashKeySize = (unsigned short)40U;
    
#line 2312 
    rssConf->indTableSize = (unsigned short)32U;
    
#line 2313 
    netdev_rss_key_fill((void *)(& rssConf->hashKey),40UL);
    
#line 2315 
    i = 0;
    
#line 2315 
    goto ldv_54924;
    ldv_54923: 
#line 2316 
    ;
    
#line 2316 
    tmp = ethtool_rxfh_indir_default((unsigned int)i,adapter->num_rx_queues);
    
#line 2316 
    rssConf->indTable[i] = (unsigned char)tmp;
    
#line 2315 
    i += 1;
    ldv_54924: 
#line 2316 
    ;
    
#line 2315 
    if ((int)rssConf->indTableSize > i) 
#line 2317 
                                        goto ldv_54923; else 
#line 2320 
                                                             goto ldv_54925;
    ldv_54925: 
#line 2321 
    ;
    
#line 2319 
    devRead->rssConfDesc.confVer = 1U;
    
#line 2320 
    devRead->rssConfDesc.confLen = 176U;
    
#line 2321 
    devRead->rssConfDesc.confPA = adapter->rss_conf_pa;
  }
  else ;
  
#line 2328 
  devRead->intrConf.autoMask = (_Bool)(adapter->intr.mask_mode == (unsigned int)VMXNET3_IMM_AUTO);
  
#line 2330 
  devRead->intrConf.numIntrs = adapter->intr.num_intrs;
  
#line 2331 
  i = 0;
  
#line 2331 
  goto ldv_54927;
  ldv_54926: 
#line 2332 
  ;
  
#line 2332 
  devRead->intrConf.modLevels[i] = adapter->intr.mod_levels[i];
  
#line 2331 
  i += 1;
  ldv_54927: 
#line 2332 
  ;
  
#line 2331 
  if ((int)adapter->intr.num_intrs > i) 
#line 2333 
                                        goto ldv_54926; else 
#line 2336 
                                                             goto ldv_54928;
  ldv_54928: 
#line 2337 
  ;
  
#line 2334 
  devRead->intrConf.eventIntrIdx = adapter->intr.event_intr_idx;
  
#line 2335 
  devRead->intrConf.intrCtrl |= 1U;
  
#line 2338 
  devRead->rxFilterConf.rxMode = 0U;
  
#line 2339 
  vmxnet3_restore_vlan(adapter);
  
#line 2340 
  vmxnet3_write_mac_addr(adapter,(adapter->netdev)->dev_addr);
  
#line 2341 
  return;
}


#line 2347  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
int vmxnet3_activate_dev(struct vmxnet3_adapter *adapter)
{
  int __retres;
  int err;
  int i;
  u32 ret;
  unsigned long flags;
  {
    
#line 2353 
    struct _ddebug descriptor = {.modname = "vmxnet3", .function = "vmxnet3_activate_dev", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "%s: skb_buf_size %d, rx_buf_per_pkt %d,", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2358U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2353 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2353 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)adapter->netdev,"%s: skb_buf_size %d, rx_buf_per_pkt %d,",(char *)(& (adapter->netdev)->name),adapter->skb_buf_size,adapter->rx_buf_per_pkt,adapter->tx_queue[0].tx_ring.size,adapter->rx_queue[0].rx_ring[0].size,adapter->rx_queue[0].rx_ring[1].size); else ;
  }
  
#line 2360 
  vmxnet3_tq_init_all(adapter);
  
#line 2361 
  err = vmxnet3_rq_init_all(adapter);
  
#line 2362 
  if (err != 0) {
    
#line 2363 
    netdev_err((struct net_device const *)adapter->netdev,"Failed to init rx queue error %d\n",err);
    
#line 2365 
    goto rq_err;
  }
  else ;
  
#line 2368 
  err = vmxnet3_request_irqs(adapter);
  
#line 2369 
  if (err != 0) {
    
#line 2370 
    netdev_err((struct net_device const *)adapter->netdev,"Failed to setup irq for error %d\n",err);
    
#line 2372 
    goto irq_err;
  }
  else ;
  
#line 2375 
  vmxnet3_setup_driver_shared(adapter);
  
#line 2377 
  writel((unsigned int)adapter->shared_pa,(void volatile *)(adapter->hw_addr1 + 16U));
  
#line 2379 
  writel((unsigned int)(adapter->shared_pa >> 32),(void volatile *)(adapter->hw_addr1 + 24U));
  
#line 2381 
  ldv___ldv_spin_lock_102(& adapter->cmd_lock);
  
#line 2382 
  writel(3405643776U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 2384 
  ret = readl((void const volatile *)(adapter->hw_addr1 + 32U));
  
#line 2385 
  ldv_spin_unlock_irqrestore_103(& adapter->cmd_lock,flags);
  
#line 2387 
  if (ret != 0U) {
    
#line 2388 
    netdev_err((struct net_device const *)adapter->netdev,"Failed to activate dev: error %u\n",ret);
    
#line 2390 
    err = -22;
    
#line 2391 
    goto activate_err;
  }
  else ;
  
#line 2394 
  i = 0;
  
#line 2394 
  goto ldv_54942;
  ldv_54941: 
#line 2395 
  ;
  
#line 2395 
  writel(adapter->rx_queue[i].rx_ring[0].next2fill,(void volatile *)(adapter->hw_addr0 + (i + 256) * 8));
  
#line 2398 
  writel(adapter->rx_queue[i].rx_ring[1].next2fill,(void volatile *)(adapter->hw_addr0 + (i + 320) * 8));
  
#line 2394 
  i += 1;
  ldv_54942: 
#line 2395 
  ;
  
#line 2394 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 2396 
                                                goto ldv_54941; else 
                                                                  
#line 2399 
                                                                  goto ldv_54943;
  ldv_54943: 
#line 2400 
  ;
  
#line 2404 
  vmxnet3_set_mc(adapter->netdev);
  
#line 2410 
  vmxnet3_check_link(adapter,(_Bool)1);
  
#line 2411 
  i = 0;
  
#line 2411 
  goto ldv_54945;
  ldv_54944: 
#line 2412 
  ;
  
#line 2412 
  napi_enable(& adapter->rx_queue[i].napi);
  
#line 2411 
  i += 1;
  ldv_54945: 
#line 2412 
  ;
  
#line 2411 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 2413 
                                                goto ldv_54944; else 
                                                                  
#line 2416 
                                                                  goto ldv_54946;
  ldv_54946: 
#line 2417 
  ;
  
#line 2413 
  vmxnet3_enable_all_intrs(adapter);
  
#line 2414 
  set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 2415 
  __retres = 0;
  
#line 2415 
  goto return_label;
  activate_err: 
#line 2417 
  ;
  
#line 2418 
  writel(0U,(void volatile *)(adapter->hw_addr1 + 16U));
  
#line 2419 
  writel(0U,(void volatile *)(adapter->hw_addr1 + 24U));
  
#line 2420 
  vmxnet3_free_irqs(adapter);
  irq_err: 
#line 2421 
  ;
  rq_err: 
#line 2422 
  ;
  
#line 2424 
  vmxnet3_rq_cleanup_all(adapter);
  
#line 2425 
  __retres = err;
  return_label: 
#line 2425 
                return __retres;
}


#line 2430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
void vmxnet3_reset_dev(struct vmxnet3_adapter *adapter)
{
  unsigned long flags;
  
#line 2433 
  ldv___ldv_spin_lock_104(& adapter->cmd_lock);
  
#line 2434 
  writel(3405643778U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 2435 
  ldv_spin_unlock_irqrestore_105(& adapter->cmd_lock,flags);
  
#line 2436 
  return;
}


#line 2440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
int vmxnet3_quiesce_dev(struct vmxnet3_adapter *adapter)
{
  int __retres;
  int i;
  unsigned long flags;
  int tmp;
  
#line 2444 
  tmp = test_and_set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 2444 
  if (tmp != 0) {
    
#line 2445 
    __retres = 0;
    
#line 2445 
    goto return_label;
  }
  else ;
  
#line 2448 
  ldv___ldv_spin_lock_106(& adapter->cmd_lock);
  
#line 2449 
  writel(3405643777U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 2451 
  ldv_spin_unlock_irqrestore_107(& adapter->cmd_lock,flags);
  
#line 2452 
  vmxnet3_disable_all_intrs(adapter);
  
#line 2454 
  i = 0;
  
#line 2454 
  goto ldv_54957;
  ldv_54956: 
#line 2455 
  ;
  
#line 2455 
  napi_disable(& adapter->rx_queue[i].napi);
  
#line 2454 
  i += 1;
  ldv_54957: 
#line 2455 
  ;
  
#line 2454 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 2456 
                                                goto ldv_54956; else 
                                                                  
#line 2459 
                                                                  goto ldv_54958;
  ldv_54958: 
#line 2460 
  ;
  
#line 2456 
  netif_tx_disable(adapter->netdev);
  
#line 2457 
  adapter->link_speed = 0U;
  
#line 2458 
  netif_carrier_off(adapter->netdev);
  
#line 2460 
  vmxnet3_tq_cleanup_all(adapter);
  
#line 2461 
  vmxnet3_rq_cleanup_all(adapter);
  
#line 2462 
  vmxnet3_free_irqs(adapter);
  
#line 2463 
  __retres = 0;
  return_label: 
#line 2463 
                return __retres;
}


#line 2468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_write_mac_addr(struct vmxnet3_adapter *adapter, u8 *mac)
{
  u32 tmp;
  
#line 2472 
  tmp = *((u32 *)mac);
  
#line 2473 
  writel(tmp,(void volatile *)(adapter->hw_addr1 + 40U));
  
#line 2475 
  tmp = (unsigned int)(((int)*(mac + 5U) << 8) | (int)*(mac + 4U));
  
#line 2476 
  writel(tmp,(void volatile *)(adapter->hw_addr1 + 48U));
  
#line 2477 
  return;
}


#line 2481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_set_mac_addr(struct net_device *netdev, void *p)
{
  int __retres;
  
#line 2483 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 2484 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2486 
  memcpy((void *)netdev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 2487 
  vmxnet3_write_mac_addr(adapter,(u8 *)(& addr->sa_data));
  
#line 2489 
  __retres = 0;
  
#line 2489 
  return __retres;
}


#line 2496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_alloc_pci_resources(struct vmxnet3_adapter *adapter, bool *dma64)
{
  int __retres;
  int err;
  unsigned long mmio_start;
  unsigned long mmio_len;
  int tmp_1;
  resource_size_t tmp_2;
  resource_size_t tmp_4;
  
#line 2500 
  struct pci_dev *pdev = adapter->pdev;
  
#line 2502 
  err = pci_enable_device(pdev);
  
#line 2503 
  if (err != 0) {
    
#line 2504 
    dev_err((struct device const *)(& pdev->dev),"Failed to enable adapter: error %d\n",err);
    
#line 2505 
    __retres = err;
    
#line 2505 
    goto return_label;
  }
  else ;
  
#line 2508 
  tmp_1 = pci_set_dma_mask(pdev,18446744073709551615ULL);
  
#line 2508 
  if (tmp_1 == 0) {
    int tmp;
    
#line 2509 
    tmp = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
    
#line 2509 
    if (tmp != 0) {
      
#line 2510 
      dev_err((struct device const *)(& pdev->dev),"pci_set_consistent_dma_mask failed\n");
      
#line 2512 
      err = -5;
      
#line 2513 
      goto err_set_mask;
    }
    else ;
    
#line 2515 
    *dma64 = (_Bool)1;
  }
  else {
    int tmp_0;
    
#line 2517 
    tmp_0 = pci_set_dma_mask(pdev,4294967295ULL);
    
#line 2517 
    if (tmp_0 != 0) {
      
#line 2518 
      dev_err((struct device const *)(& pdev->dev),"pci_set_dma_mask failed\n");
      
#line 2520 
      err = -5;
      
#line 2521 
      goto err_set_mask;
    }
    else ;
    
#line 2523 
    *dma64 = (_Bool)0;
  }
  
#line 2526 
  err = pci_request_selected_regions(pdev,3,(char const *)(& vmxnet3_driver_name));
  
#line 2528 
  if (err != 0) {
    
#line 2529 
    dev_err((struct device const *)(& pdev->dev),"Failed to request region for adapter: error %d\n",err);
    
#line 2531 
    goto err_set_mask;
  }
  else ;
  
#line 2534 
  pci_set_master(pdev);
  
#line 2536 
  mmio_start = (unsigned long)pdev->resource[0].start;
  
#line 2537 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 2537 
    tmp_2 = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 2537 
                                                                    tmp_2 = 0ULL;
  
#line 2537 
  mmio_len = (unsigned long)tmp_2;
  
#line 2538 
  adapter->hw_addr0 = (u8 *)ioremap((unsigned long long)mmio_start,mmio_len);
  
#line 2539 
  if (adapter->hw_addr0 == (u8 *)0U) {
    
#line 2540 
    dev_err((struct device const *)(& pdev->dev),"Failed to map bar0\n");
    
#line 2541 
    err = -5;
    
#line 2542 
    goto err_ioremap;
  }
  else ;
  
#line 2545 
  mmio_start = (unsigned long)pdev->resource[1].start;
  
#line 2546 
  if (pdev->resource[1].start != 0ULL || pdev->resource[1].end != pdev->resource[1].start) 
    
#line 2546 
    tmp_4 = (pdev->resource[1].end - pdev->resource[1].start) + 1ULL; else 
                                                                    
#line 2546 
                                                                    tmp_4 = 0ULL;
  
#line 2546 
  mmio_len = (unsigned long)tmp_4;
  
#line 2547 
  adapter->hw_addr1 = (u8 *)ioremap((unsigned long long)mmio_start,mmio_len);
  
#line 2548 
  if (adapter->hw_addr1 == (u8 *)0U) {
    
#line 2549 
    dev_err((struct device const *)(& pdev->dev),"Failed to map bar1\n");
    
#line 2550 
    err = -5;
    
#line 2551 
    goto err_bar1;
  }
  else ;
  
#line 2553 
  __retres = 0;
  
#line 2553 
  goto return_label;
  err_bar1: 
#line 2555 
  ;
  
#line 2556 
  iounmap((void volatile *)adapter->hw_addr0);
  err_ioremap: 
#line 2557 
  ;
  
#line 2558 
  pci_release_selected_regions(pdev,3);
  err_set_mask: 
#line 2559 
  ;
  
#line 2560 
  pci_disable_device(pdev);
  
#line 2561 
  __retres = err;
  return_label: 
#line 2561 
                return __retres;
}


#line 2566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_free_pci_resources(struct vmxnet3_adapter *adapter)
{
  
#line 2568 
  if ((long)(adapter->pdev == (struct pci_dev *)0) != 0L) {
    
#line 2570 
    ldv_inline_asm();
    
#line 2568 
    ;
  }
  else ;
  
#line 2570 
  iounmap((void volatile *)adapter->hw_addr0);
  
#line 2571 
  iounmap((void volatile *)adapter->hw_addr1);
  
#line 2572 
  pci_release_selected_regions(adapter->pdev,3);
  
#line 2573 
  pci_disable_device(adapter->pdev);
  
#line 2574 
  return;
}


#line 2578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_adjust_rx_ring_size(struct vmxnet3_adapter *adapter)
{
  size_t sz;
  size_t i;
  size_t ring0_size;
  size_t ring1_size;
  size_t comp_size;
  u32 tmp_0;
  u32 tmp_2;
  
#line 2581 
  struct vmxnet3_rx_queue *rq = & adapter->rx_queue[0];
  
#line 2584 
  if ((adapter->netdev)->mtu <= 3050U) {
    
#line 2586 
    adapter->skb_buf_size = (adapter->netdev)->mtu + 22U;
    
#line 2588 
    if (adapter->skb_buf_size <= 127U) 
#line 2589 
                                       adapter->skb_buf_size = 128U; else ;
    
#line 2591 
    adapter->rx_buf_per_pkt = 1;
  }
  else {
    
#line 2593 
    adapter->skb_buf_size = 3072U;
    
#line 2594 
    sz = (unsigned long)((adapter->netdev)->mtu + 4294964246U);
    
#line 2596 
    adapter->rx_buf_per_pkt = (int)((sz + 4095UL) / 4096UL + (unsigned long)1U);
  }
  
#line 2603 
  sz = (unsigned long)(adapter->rx_buf_per_pkt * 32);
  
#line 2604 
  ring0_size = (unsigned long)adapter->rx_queue[0].rx_ring[0].size;
  
#line 2605 
  ring0_size = (((ring0_size + sz) + 18446744073709551615UL) / sz) * sz;
  {
    u32 tmp;
    
#line 2606 
    u32 __min1 = (unsigned int)ring0_size;
    
#line 2606 
    u32 __min2 = (unsigned int)(4096UL / sz) * (unsigned int)sz;
    
#line 2606 
    if (__min1 < __min2) 
#line 2606 
                         tmp = __min1; else 
#line 2606 
                                            tmp = __min2;
    
#line 2606 
    tmp_0 = tmp;
  }
  
#line 2606 
  ring0_size = (unsigned long)tmp_0;
  
#line 2608 
  ring1_size = (unsigned long)adapter->rx_queue[0].rx_ring[1].size;
  
#line 2609 
  ring1_size = (((ring1_size + sz) + 18446744073709551615UL) / sz) * sz;
  {
    u32 tmp_1;
    
#line 2610 
    u32 __min1_0 = (unsigned int)ring1_size;
    
#line 2610 
    u32 __min2_0 = (unsigned int)(2048UL / sz) * (unsigned int)sz;
    
#line 2610 
    if (__min1_0 < __min2_0) 
#line 2610 
                             tmp_1 = __min1_0; else 
#line 2610 
                                                    tmp_1 = __min2_0;
    
#line 2610 
    tmp_2 = tmp_1;
  }
  
#line 2610 
  ring1_size = (unsigned long)tmp_2;
  
#line 2612 
  comp_size = ring0_size + ring1_size;
  
#line 2614 
  i = 0UL;
  
#line 2614 
  goto ldv_55000;
  ldv_54999: 
#line 2615 
  ;
  
#line 2615 
  rq = & adapter->rx_queue[i];
  
#line 2616 
  rq->rx_ring[0].size = (unsigned int)ring0_size;
  
#line 2617 
  rq->rx_ring[1].size = (unsigned int)ring1_size;
  
#line 2618 
  rq->comp_ring.size = (unsigned int)comp_size;
  
#line 2614 
  i += 1UL;
  ldv_55000: 
#line 2615 
  ;
  
#line 2614 
  if ((unsigned long)adapter->num_rx_queues > i) 
#line 2616 
                                                 goto ldv_54999; else 
                                                                   
#line 2619 
                                                                   goto ldv_55001;
  ldv_55001: 
#line 2620 
  ;
  
#line 2621 
  return;
}


#line 2624  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
int vmxnet3_create_queues(struct vmxnet3_adapter *adapter, u32 tx_ring_size, u32 rx_ring_size, u32 rx_ring2_size)
{
  int __retres;
  int i;
  
#line 2627 
  int err = 0;
  
#line 2629 
  i = 0;
  
#line 2629 
  goto ldv_55013;
  ldv_55012: 
#line 2630 
  ;
  {
    
#line 2630 
    struct vmxnet3_tx_queue *tq = & adapter->tx_queue[i];
    
#line 2631 
    tq->tx_ring.size = tx_ring_size;
    
#line 2632 
    tq->data_ring.size = tx_ring_size;
    
#line 2633 
    tq->comp_ring.size = tx_ring_size;
    
#line 2634 
    tq->shared = & (adapter->tqd_start + i)->ctrl;
    
#line 2635 
    tq->stopped = (_Bool)1;
    
#line 2636 
    tq->adapter = adapter;
    
#line 2637 
    tq->qid = i;
    
#line 2638 
    err = vmxnet3_tq_create(tq,adapter);
    
#line 2643 
    if (err != 0) 
#line 2644 
                  goto queue_err; else ;
  }
  
#line 2629 
  i += 1;
  ldv_55013: 
#line 2630 
  ;
  
#line 2629 
  if (adapter->num_tx_queues > (unsigned int)i) 
#line 2631 
                                                goto ldv_55012; else 
                                                                  
#line 2634 
                                                                  goto ldv_55014;
  ldv_55014: 
#line 2635 
  ;
  
#line 2647 
  adapter->rx_queue[0].rx_ring[0].size = rx_ring_size;
  
#line 2648 
  adapter->rx_queue[0].rx_ring[1].size = rx_ring2_size;
  
#line 2649 
  vmxnet3_adjust_rx_ring_size(adapter);
  
#line 2650 
  i = 0;
  
#line 2650 
  goto ldv_55018;
  ldv_55017: 
#line 2651 
  ;
  {
    
#line 2651 
    struct vmxnet3_rx_queue *rq = & adapter->rx_queue[i];
    
#line 2654 
    rq->shared = & (adapter->rqd_start + i)->ctrl;
    
#line 2655 
    rq->adapter = adapter;
    
#line 2656 
    err = vmxnet3_rq_create(rq,adapter);
    
#line 2657 
    if (err != 0) 
      
#line 2658 
      if (i == 0) {
        
#line 2659 
        netdev_err((struct net_device const *)adapter->netdev,"Could not allocate any rx queues. ");
        
#line 2662 
        goto queue_err;
      }
      else {
        
#line 2664 
        netdev_info((struct net_device const *)adapter->netdev,"Number of rx queues changed ",i);
        
#line 2667 
        adapter->num_rx_queues = (unsigned int)i;
        
#line 2668 
        err = 0;
        
#line 2669 
        goto ldv_55016;
      }
    else ;
  }
  
#line 2650 
  i += 1;
  ldv_55018: 
#line 2651 
  ;
  
#line 2650 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 2652 
                                                goto ldv_55017; else 
                                                                  
#line 2655 
                                                                  goto ldv_55016;
  ldv_55016: 
#line 2656 
  ;
  
#line 2673 
  __retres = err;
  
#line 2673 
  goto return_label;
  queue_err: 
#line 2674 
  ;
  
#line 2675 
  vmxnet3_tq_destroy_all(adapter);
  
#line 2676 
  __retres = err;
  return_label: 
#line 2676 
                return __retres;
}


#line 2680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_open(struct net_device *netdev)
{
  int __retres;
  struct vmxnet3_adapter *adapter;
  int err;
  int i;
  
#line 2685 
  adapter = (struct vmxnet3_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 2687 
  i = 0;
  
#line 2687 
  goto ldv_55027;
  ldv_55026: 
#line 2688 
  ;
  
#line 2688 
  spinlock_check(& adapter->tx_queue[i].tx_lock);
  {
    struct lock_class_key __key;
    
#line 2688 
    __raw_spin_lock_init(& adapter->tx_queue[i].tx_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->tx_queue[i].tx_lock)->rlock",& __key);
  }
  
#line 2687 
  i += 1;
  ldv_55027: 
#line 2688 
  ;
  
#line 2687 
  if (adapter->num_tx_queues > (unsigned int)i) 
#line 2689 
                                                goto ldv_55026; else 
                                                                  
#line 2692 
                                                                  goto ldv_55028;
  ldv_55028: 
#line 2693 
  ;
  
#line 2690 
  err = vmxnet3_create_queues(adapter,adapter->tx_ring_size,adapter->rx_ring_size,adapter->rx_ring2_size);
  
#line 2693 
  if (err != 0) 
#line 2694 
                goto queue_err; else ;
  
#line 2696 
  err = vmxnet3_activate_dev(adapter);
  
#line 2697 
  if (err != 0) 
#line 2698 
                goto activate_err; else ;
  
#line 2700 
  __retres = 0;
  
#line 2700 
  goto return_label;
  activate_err: 
#line 2702 
  ;
  
#line 2703 
  vmxnet3_rq_destroy_all(adapter);
  
#line 2704 
  vmxnet3_tq_destroy_all(adapter);
  queue_err: 
#line 2705 
  ;
  
#line 2706 
  __retres = err;
  return_label: 
#line 2706 
                return __retres;
}


#line 2711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_close(struct net_device *netdev)
{
  int __retres;
  int tmp_0;
  
#line 2713 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2719 
  goto ldv_55036;
  ldv_55035: 
#line 2720 
  ;
  
#line 2720 
  msleep(1U);
  ldv_55036: 
#line 2721 
  ;
  
#line 2719 
  tmp_0 = test_and_set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 2719 
  if (tmp_0 != 0) 
#line 2721 
                  goto ldv_55035; else 
#line 2724 
                                       goto ldv_55037;
  ldv_55037: 
#line 2725 
  ;
  
#line 2722 
  vmxnet3_quiesce_dev(adapter);
  
#line 2724 
  vmxnet3_rq_destroy_all(adapter);
  
#line 2725 
  vmxnet3_tq_destroy_all(adapter);
  
#line 2727 
  set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 2730 
  __retres = 0;
  
#line 2730 
  return __retres;
}


#line 2735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
void vmxnet3_force_close(struct vmxnet3_adapter *adapter)
{
  int i;
  int tmp;
  
#line 2743 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& adapter->state));
  
#line 2743 
  if ((long)(tmp != 0) != 0L) {
    
#line 2745 
    ldv_inline_asm();
    
#line 2743 
    ;
  }
  else ;
  
#line 2746 
  i = 0;
  
#line 2746 
  goto ldv_55043;
  ldv_55042: 
#line 2747 
  ;
  
#line 2747 
  napi_enable(& adapter->rx_queue[i].napi);
  
#line 2746 
  i += 1;
  ldv_55043: 
#line 2747 
  ;
  
#line 2746 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 2748 
                                                goto ldv_55042; else 
                                                                  
#line 2751 
                                                                  goto ldv_55044;
  ldv_55044: 
#line 2752 
  ;
  
#line 2748 
  dev_close(adapter->netdev);
  
#line 2749 
  return;
}


#line 2753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_change_mtu(struct net_device *netdev, int new_mtu)
{
  int __retres;
  int tmp_0;
  bool tmp_1;
  
#line 2755 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2756 
  int err = 0;
  
#line 2758 
  if ((unsigned int)new_mtu + 4294967236U > 8940U) {
    
#line 2759 
    __retres = -22;
    
#line 2759 
    goto return_label;
  }
  else ;
  
#line 2761 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 2767 
  goto ldv_55052;
  ldv_55051: 
#line 2768 
  ;
  
#line 2768 
  msleep(1U);
  ldv_55052: 
#line 2769 
  ;
  
#line 2767 
  tmp_0 = test_and_set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 2767 
  if (tmp_0 != 0) 
#line 2769 
                  goto ldv_55051; else 
#line 2772 
                                       goto ldv_55053;
  ldv_55053: 
#line 2773 
  ;
  
#line 2770 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 2770 
  if ((int)tmp_1 != 0) {
    
#line 2771 
    vmxnet3_quiesce_dev(adapter);
    
#line 2772 
    vmxnet3_reset_dev(adapter);
    
#line 2775 
    vmxnet3_rq_destroy_all(adapter);
    
#line 2776 
    vmxnet3_adjust_rx_ring_size(adapter);
    
#line 2777 
    err = vmxnet3_rq_create_all(adapter);
    
#line 2778 
    if (err != 0) {
      
#line 2779 
      netdev_err((struct net_device const *)netdev,"failed to re-create rx queues, ",err);
      
#line 2782 
      goto out;
    }
    else ;
    
#line 2785 
    err = vmxnet3_activate_dev(adapter);
    
#line 2786 
    if (err != 0) {
      
#line 2787 
      netdev_err((struct net_device const *)netdev,"failed to re-activate, error %d. ",err);
      
#line 2790 
      goto out;
    }
    else ;
  }
  else ;
  out: 
#line 2794 
  ;
  
#line 2795 
  set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 2796 
  if (err != 0) 
#line 2797 
                vmxnet3_force_close(adapter); else ;
  
#line 2799 
  __retres = err;
  return_label: 
#line 2799 
                return __retres;
}


#line 2804  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_declare_features(struct vmxnet3_adapter *adapter, bool dma64)
{
  
#line 2806 
  struct net_device *netdev = adapter->netdev;
  
#line 2808 
  netdev->hw_features = 17181016457ULL;
  
#line 2812 
  if ((int)dma64 != 0) 
#line 2813 
                       netdev->hw_features |= 32ULL; else ;
  
#line 2814 
  netdev->vlan_features = netdev->hw_features & 18446744073709551231ULL;
  
#line 2817 
  netdev->features = netdev->hw_features | 512ULL;
  
#line 2818 
  return;
}


#line 2822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_read_mac_addr(struct vmxnet3_adapter *adapter, u8 *mac)
{
  u32 tmp;
  
#line 2826 
  tmp = readl((void const volatile *)(adapter->hw_addr1 + 40U));
  
#line 2827 
  *((u32 *)mac) = tmp;
  
#line 2829 
  tmp = readl((void const volatile *)(adapter->hw_addr1 + 48U));
  
#line 2830 
  *(mac + 4U) = (unsigned char)tmp;
  
#line 2831 
  *(mac + 5U) = (unsigned char)(tmp >> 8);
  
#line 2832 
  return;
}


#line 2846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_acquire_msix_vectors(struct vmxnet3_adapter *adapter, int nvec)
{
  
#line 2848 
  int ret = pci_enable_msix_range(adapter->pdev,(struct msix_entry *)(& adapter->intr.msix_entries),nvec,nvec);
  
#line 2851 
  if (ret == -28 && nvec > 2) {
    
#line 2852 
    dev_err((struct device const *)(& (adapter->netdev)->dev),"Failed to enable %d MSI-X, trying %d\n",nvec,2);
    
#line 2856 
    ret = pci_enable_msix_range(adapter->pdev,(struct msix_entry *)(& adapter->intr.msix_entries),2,2);
  }
  else ;
  
#line 2862 
  if (ret < 0) 
#line 2863 
               dev_err((struct device const *)(& (adapter->netdev)->dev),"Failed to enable MSI-X, error: %d\n",ret); else ;
  
#line 2867 
  return ret;
}


#line 2874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_alloc_intr_resources(struct vmxnet3_adapter *adapter)
{
  u32 cfg;
  unsigned long flags;
  
#line 2880 
  ldv___ldv_spin_lock_108(& adapter->cmd_lock);
  
#line 2881 
  writel(4027383816U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 2883 
  cfg = readl((void const volatile *)(adapter->hw_addr1 + 32U));
  
#line 2884 
  ldv_spin_unlock_irqrestore_109(& adapter->cmd_lock,flags);
  
#line 2885 
  adapter->intr.type = (enum vmxnet3_intr_type)(cfg & 3U);
  
#line 2886 
  adapter->intr.mask_mode = (enum vmxnet3_intr_mask_mode)((cfg >> 2) & 3U);
  
#line 2888 
  if (adapter->intr.type == (unsigned int)VMXNET3_IT_AUTO) 
#line 2889 
                                                           adapter->intr.type = VMXNET3_IT_MSIX; else ;
  
#line 2893 
  if (adapter->intr.type == (unsigned int)VMXNET3_IT_MSIX) {
    int i;
    int nvec;
    u32 tmp;
    u32 tmp_0;
    
#line 2897 
    if (adapter->share_intr != 1) 
#line 2897 
                                  tmp = adapter->num_tx_queues; else 
                                                                  
#line 2897 
                                                                  tmp = 1U;
    
#line 2896 
    nvec = (int)tmp;
    
#line 2898 
    if (adapter->share_intr != 0) 
#line 2898 
                                  tmp_0 = adapter->num_rx_queues; else 
                                                                    
#line 2898 
                                                                    tmp_0 = 0U;
    
#line 2898 
    nvec = (int)(tmp_0 + (unsigned int)nvec);
    
#line 2900 
    nvec += 1;
    
#line 2901 
    if (2 > nvec) 
#line 2901 
                  nvec = 2; else 
#line 2901 
                                 nvec = nvec;
    
#line 2904 
    i = 0;
    
#line 2904 
    goto ldv_55078;
    ldv_55077: 
#line 2905 
    ;
    
#line 2905 
    adapter->intr.msix_entries[i].entry = (unsigned short)i;
    
#line 2904 
    i += 1;
    ldv_55078: 
#line 2905 
    ;
    
#line 2904 
    if (i < nvec) 
#line 2906 
                  goto ldv_55077; else 
#line 2909 
                                       goto ldv_55079;
    ldv_55079: 
#line 2910 
    ;
    
#line 2907 
    nvec = vmxnet3_acquire_msix_vectors(adapter,nvec);
    
#line 2908 
    if (nvec < 0) 
#line 2909 
                  goto msix_err; else ;
    
#line 2914 
    if (nvec == 2) {
      
#line 2915 
      if (adapter->share_intr != 0 || adapter->num_rx_queues != 1U) {
        
#line 2917 
        adapter->share_intr = 1;
        
#line 2918 
        netdev_err((struct net_device const *)adapter->netdev,"Number of rx queues : 1\n");
        
#line 2920 
        adapter->num_rx_queues = 1U;
      }
      else ;
    }
    else ;
    
#line 2924 
    adapter->intr.num_intrs = (unsigned char)nvec;
    
#line 2925 
    goto return_label;
    msix_err: 
#line 2927 
    ;
    
#line 2929 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"Failed to enable MSI-X, error %d. ",nvec);
    
#line 2933 
    adapter->intr.type = VMXNET3_IT_MSI;
  }
  else ;
  
#line 2936 
  if (adapter->intr.type == (unsigned int)VMXNET3_IT_MSI) {
    int tmp_1;
    
#line 2937 
    tmp_1 = pci_enable_msi_exact(adapter->pdev,1);
    
#line 2937 
    if (tmp_1 == 0) {
      
#line 2938 
      adapter->num_rx_queues = 1U;
      
#line 2939 
      adapter->intr.num_intrs = (unsigned char)1U;
      
#line 2940 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2945 
  adapter->num_rx_queues = 1U;
  
#line 2946 
  _dev_info((struct device const *)(& (adapter->netdev)->dev),"Using INTx interrupt, #Rx queues: 1.\n");
  
#line 2948 
  adapter->intr.type = VMXNET3_IT_INTX;
  
#line 2951 
  adapter->intr.num_intrs = (unsigned char)1U;
  return_label: 
#line 2952 
                return;
}


#line 2956  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_free_intr_resources(struct vmxnet3_adapter *adapter)
{
  
#line 2958 
  if (adapter->intr.type == (unsigned int)VMXNET3_IT_MSIX) 
#line 2959 
                                                           pci_disable_msix(adapter->pdev);
  else 
    
#line 2960 
    if (adapter->intr.type == (unsigned int)VMXNET3_IT_MSI) 
#line 2961 
                                                            pci_disable_msi(adapter->pdev);
    else 
      
#line 2963 
      if ((long)(adapter->intr.type != (unsigned int)VMXNET3_IT_INTX) != 0L) {
        
#line 2965 
        ldv_inline_asm();
        
#line 2963 
        ;
      }
      else ;
  
#line 2965 
  return;
}


#line 2968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_tx_timeout(struct net_device *netdev)
{
  
#line 2970 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2971 
  adapter->tx_timeout_count += 1ULL;
  
#line 2973 
  netdev_err((struct net_device const *)adapter->netdev,"tx hang\n");
  
#line 2974 
  ldv_schedule_work_110(& adapter->work);
  
#line 2975 
  netif_wake_queue(adapter->netdev);
  
#line 2976 
  return;
}


#line 2980  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_reset_work(struct work_struct *data)
{
  struct vmxnet3_adapter *adapter;
  struct vmxnet3_adapter *tmp;
  int tmp_0;
  bool tmp_1;
  {
    
#line 2984 
    struct work_struct const *__mptr = (struct work_struct const *)data;
    
#line 2984 
    tmp = (struct vmxnet3_adapter *)__mptr + 18446744073709544032U;
  }
  
#line 2984 
  adapter = tmp;
  
#line 2987 
  tmp_0 = test_and_set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 2987 
  if (tmp_0 != 0) 
#line 2988 
                  goto return_label; else ;
  
#line 2991 
  rtnl_lock();
  
#line 2992 
  tmp_1 = netif_running((struct net_device const *)adapter->netdev);
  
#line 2992 
  if ((int)tmp_1 != 0) {
    
#line 2993 
    netdev_notice((struct net_device const *)adapter->netdev,"resetting\n");
    
#line 2994 
    vmxnet3_quiesce_dev(adapter);
    
#line 2995 
    vmxnet3_reset_dev(adapter);
    
#line 2996 
    vmxnet3_activate_dev(adapter);
  }
  else 
#line 2998 
       netdev_info((struct net_device const *)adapter->netdev,"already closed\n");
  
#line 3000 
  rtnl_unlock();
  
#line 3002 
  set_bit(0L,(unsigned long volatile *)(& adapter->state));
  return_label: 
#line 3003 
                return;
}


#line 3007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_probe_device(struct pci_dev *pdev, struct pci_device_id const *id)
{
  int __retres;
  int err;
  u32 ver;
  struct net_device *netdev;
  struct vmxnet3_adapter *adapter;
  u8 mac[6U];
  int size;
  int num_tx_queues;
  int num_rx_queues;
  int tmp;
  int tmp_147;
  int tmp_149;
  
#line 3010 
  struct net_device_ops const vmxnet3_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & vmxnet3_open, .ndo_stop = & vmxnet3_close, .ndo_start_xmit = & vmxnet3_xmit_frame, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & vmxnet3_set_mc, .ndo_set_mac_address = & vmxnet3_set_mac_addr, .ndo_validate_addr = (int (*)(struct net_device *))0, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & vmxnet3_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & vmxnet3_tx_timeout, .ndo_get_stats64 = & vmxnet3_get_stats64, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = & vmxnet3_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & vmxnet3_vlan_rx_kill_vid, .ndo_poll_controller = & vmxnet3_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & vmxnet3_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};
  
#line 3027 
  bool dma64 = (_Bool)0;
  
#line 3036 
  tmp = pci_msi_enabled();
  
#line 3036 
  if (tmp == 0) 
#line 3037 
                enable_mq = 0; else ;
  
#line 3040 
  if (enable_mq != 0) {
    int tmp_2;
    {
      unsigned int tmp_0;
      int tmp_1;
      
#line 3041 
      int _min1 = 8;
      
#line 3041 
      tmp_0 = cpumask_weight(cpu_online_mask);
      
#line 3041 
      int _min2 = (int)tmp_0;
      
#line 3041 
      if (_min1 < _min2) 
#line 3041 
                         tmp_1 = _min1; else 
#line 3041 
                                             tmp_1 = _min2;
      
#line 3041 
      tmp_2 = tmp_1;
    }
    
#line 3041 
    num_rx_queues = tmp_2;
  }
  else 
#line 3045 
       num_rx_queues = 1;
  
#line 3046 
  if (0 != 0) {
    unsigned int tmp_71;
    
#line 3046 
    if (0 != 0) {
      unsigned int tmp_69;
      
#line 3046 
      if (num_rx_queues <= 0) {
        int tmp_3;
        
#line 3046 
        tmp_3 = ____ilog2_NaN();
        
#line 3046 
        tmp_69 = (unsigned int)((int)(1UL << tmp_3));
      }
      else {
        unsigned int tmp_68;
        
#line 3046 
        if (num_rx_queues >= 0) {
          unsigned int tmp_67;
          
#line 3046 
          if (((unsigned long long)num_rx_queues & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_66;
            
#line 3046 
            if (((unsigned long long)num_rx_queues & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_65;
              
#line 3046 
              if (((unsigned long long)num_rx_queues & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_64;
                
#line 3046 
                if (((unsigned long long)num_rx_queues & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_63;
                  
#line 3046 
                  if (((unsigned long long)num_rx_queues & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_62;
                    
#line 3046 
                    if (((unsigned long long)num_rx_queues & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_61;
                      
#line 3046 
                      if (((unsigned long long)num_rx_queues & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_60;
                        
#line 3046 
                        if (((unsigned long long)num_rx_queues & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_59;
                          
#line 3046 
                          if (((unsigned long long)num_rx_queues & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_58;
                            
#line 3046 
                            if (((unsigned long long)num_rx_queues & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_57;
                              
#line 3046 
                              if (((unsigned long long)num_rx_queues & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_56;
                                
#line 3046 
                                if (((unsigned long long)num_rx_queues & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_55;
                                  
#line 3046 
                                  if (((unsigned long long)num_rx_queues & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_54;
                                    
#line 3046 
                                    if (((unsigned long long)num_rx_queues & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_53;
                                      
#line 3046 
                                      if (((unsigned long long)num_rx_queues & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_52;
                                        
#line 3046 
                                        if (((unsigned long long)num_rx_queues & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_51;
                                          
#line 3046 
                                          if (((unsigned long long)num_rx_queues & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_50;
                                            
#line 3046 
                                            if (((unsigned long long)num_rx_queues & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_49;
                                              
#line 3046 
                                              if (((unsigned long long)num_rx_queues & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_48;
                                                
#line 3046 
                                                if (((unsigned long long)num_rx_queues & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_47;
                                                  
#line 3046 
                                                  if (((unsigned long long)num_rx_queues & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_46;
                                                    
#line 3046 
                                                    if (((unsigned long long)num_rx_queues & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_45;
                                                      
#line 3046 
                                                      if (((unsigned long long)num_rx_queues & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_44;
                                                        
#line 3046 
                                                        if (((unsigned long long)num_rx_queues & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_43;
                                                          
#line 3046 
                                                          if (((unsigned long long)num_rx_queues & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_42;
                                                            
#line 3046 
                                                            if (((unsigned long long)num_rx_queues & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_41;
                                                              
#line 3046 
                                                              if (((unsigned long long)num_rx_queues & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_40;
                                                                
#line 3046 
                                                                if (((unsigned long long)num_rx_queues & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_39;
                                                                  
#line 3046 
                                                                  if (
                                                                    ((unsigned long long)num_rx_queues & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_38;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_37;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_36;
                                                                    
#line 3046 
                                                                    if (
                                                                    num_rx_queues >= 0) {
                                                                    int tmp_35;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 1073741824ULL) == 0ULL) {
                                                                    int tmp_34;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 536870912ULL) == 0ULL) {
                                                                    int tmp_33;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 268435456ULL) == 0ULL) {
                                                                    int tmp_32;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 134217728ULL) == 0ULL) {
                                                                    int tmp_31;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 67108864ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 33554432ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 16777216ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 8388608ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 4194304ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 2097152ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 1048576ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 524288ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 262144ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 131072ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 65536ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 32768ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 16384ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 8192ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 4096ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 2048ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 1024ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 512ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 256ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 128ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 64ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 32ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 16ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 8ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 4ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 2ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 3046 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 1ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 3046 
                                                                    tmp_4 = ____ilog2_NaN();
                                                                    
#line 3046 
                                                                    tmp_5 = (int)(1UL << tmp_4);
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_5 = 1;
                                                                    
#line 3046 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_6 = 2;
                                                                    
#line 3046 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_7 = 4;
                                                                    
#line 3046 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_8 = 8;
                                                                    
#line 3046 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_9 = 16;
                                                                    
#line 3046 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_10 = 32;
                                                                    
#line 3046 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_11 = 64;
                                                                    
#line 3046 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_12 = 128;
                                                                    
#line 3046 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_13 = 256;
                                                                    
#line 3046 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_14 = 512;
                                                                    
#line 3046 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_15 = 1024;
                                                                    
#line 3046 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_16 = 2048;
                                                                    
#line 3046 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_17 = 4096;
                                                                    
#line 3046 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_18 = 8192;
                                                                    
#line 3046 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_19 = 16384;
                                                                    
#line 3046 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_20 = 32768;
                                                                    
#line 3046 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_21 = 65536;
                                                                    
#line 3046 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_22 = 131072;
                                                                    
#line 3046 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_23 = 262144;
                                                                    
#line 3046 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_24 = 524288;
                                                                    
#line 3046 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_25 = 1048576;
                                                                    
#line 3046 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_26 = 2097152;
                                                                    
#line 3046 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_27 = 4194304;
                                                                    
#line 3046 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_28 = 8388608;
                                                                    
#line 3046 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_29 = 16777216;
                                                                    
#line 3046 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_30 = 33554432;
                                                                    
#line 3046 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_31 = 67108864;
                                                                    
#line 3046 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_32 = 134217728;
                                                                    
#line 3046 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_33 = 268435456;
                                                                    
#line 3046 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_34 = 536870912;
                                                                    
#line 3046 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_35 = 1073741824;
                                                                    
#line 3046 
                                                                    tmp_36 = (unsigned int)tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_36 = -2147483648;
                                                                    
#line 3046 
                                                                    tmp_37 = tmp_36;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_37 = (unsigned int)0;
                                                                    
#line 3046 
                                                                    tmp_38 = tmp_37;
                                                                    }
                                                                    else 
                                                                    
#line 3046 
                                                                    tmp_38 = (unsigned int)0;
                                                                    
#line 3046 
                                                                    tmp_39 = tmp_38;
                                                                  }
                                                                  else 
                                                                    
#line 3046 
                                                                    tmp_39 = (unsigned int)0;
                                                                  
#line 3046 
                                                                  tmp_40 = tmp_39;
                                                                }
                                                                else 
                                                                  
#line 3046 
                                                                  tmp_40 = (unsigned int)0;
                                                                
#line 3046 
                                                                tmp_41 = tmp_40;
                                                              }
                                                              else 
#line 3046 
                                                                   tmp_41 = (unsigned int)0;
                                                              
#line 3046 
                                                              tmp_42 = tmp_41;
                                                            }
                                                            else 
#line 3046 
                                                                 tmp_42 = (unsigned int)0;
                                                            
#line 3046 
                                                            tmp_43 = tmp_42;
                                                          }
                                                          else 
#line 3046 
                                                               tmp_43 = (unsigned int)0;
                                                          
#line 3046 
                                                          tmp_44 = tmp_43;
                                                        }
                                                        else 
#line 3046 
                                                             tmp_44 = (unsigned int)0;
                                                        
#line 3046 
                                                        tmp_45 = tmp_44;
                                                      }
                                                      else 
#line 3046 
                                                           tmp_45 = (unsigned int)0;
                                                      
#line 3046 
                                                      tmp_46 = tmp_45;
                                                    }
                                                    else 
#line 3046 
                                                         tmp_46 = (unsigned int)0;
                                                    
#line 3046 
                                                    tmp_47 = tmp_46;
                                                  }
                                                  else 
#line 3046 
                                                       tmp_47 = (unsigned int)0;
                                                  
#line 3046 
                                                  tmp_48 = tmp_47;
                                                }
                                                else 
#line 3046 
                                                     tmp_48 = (unsigned int)0;
                                                
#line 3046 
                                                tmp_49 = tmp_48;
                                              }
                                              else 
#line 3046 
                                                   tmp_49 = (unsigned int)0;
                                              
#line 3046 
                                              tmp_50 = tmp_49;
                                            }
                                            else 
#line 3046 
                                                 tmp_50 = (unsigned int)0;
                                            
#line 3046 
                                            tmp_51 = tmp_50;
                                          }
                                          else 
#line 3046 
                                               tmp_51 = (unsigned int)0;
                                          
#line 3046 
                                          tmp_52 = tmp_51;
                                        }
                                        else 
#line 3046 
                                             tmp_52 = (unsigned int)0;
                                        
#line 3046 
                                        tmp_53 = tmp_52;
                                      }
                                      else 
#line 3046 
                                           tmp_53 = (unsigned int)0;
                                      
#line 3046 
                                      tmp_54 = tmp_53;
                                    }
                                    else 
#line 3046 
                                         tmp_54 = (unsigned int)0;
                                    
#line 3046 
                                    tmp_55 = tmp_54;
                                  }
                                  else 
#line 3046 
                                       tmp_55 = (unsigned int)0;
                                  
#line 3046 
                                  tmp_56 = tmp_55;
                                }
                                else 
#line 3046 
                                     tmp_56 = (unsigned int)0;
                                
#line 3046 
                                tmp_57 = tmp_56;
                              }
                              else 
#line 3046 
                                   tmp_57 = (unsigned int)0;
                              
#line 3046 
                              tmp_58 = tmp_57;
                            }
                            else 
#line 3046 
                                 tmp_58 = (unsigned int)0;
                            
#line 3046 
                            tmp_59 = tmp_58;
                          }
                          else 
#line 3046 
                               tmp_59 = (unsigned int)0;
                          
#line 3046 
                          tmp_60 = tmp_59;
                        }
                        else 
#line 3046 
                             tmp_60 = (unsigned int)0;
                        
#line 3046 
                        tmp_61 = tmp_60;
                      }
                      else 
#line 3046 
                           tmp_61 = (unsigned int)0;
                      
#line 3046 
                      tmp_62 = tmp_61;
                    }
                    else 
#line 3046 
                         tmp_62 = (unsigned int)0;
                    
#line 3046 
                    tmp_63 = tmp_62;
                  }
                  else 
#line 3046 
                       tmp_63 = (unsigned int)0;
                  
#line 3046 
                  tmp_64 = tmp_63;
                }
                else 
#line 3046 
                     tmp_64 = (unsigned int)0;
                
#line 3046 
                tmp_65 = tmp_64;
              }
              else 
#line 3046 
                   tmp_65 = (unsigned int)0;
              
#line 3046 
              tmp_66 = tmp_65;
            }
            else 
#line 3046 
                 tmp_66 = (unsigned int)0;
            
#line 3046 
            tmp_67 = tmp_66;
          }
          else 
#line 3046 
               tmp_67 = (unsigned int)0;
          
#line 3046 
          tmp_68 = tmp_67;
        }
        else 
#line 3046 
             tmp_68 = (unsigned int)0;
        
#line 3046 
        tmp_69 = tmp_68;
      }
      
#line 3046 
      tmp_71 = tmp_69;
    }
    else {
      int tmp_70;
      
#line 3046 
      tmp_70 = __ilog2_u32((unsigned int)num_rx_queues);
      
#line 3046 
      tmp_71 = (unsigned int)((int)(1UL << tmp_70));
    }
    
#line 3046 
    num_rx_queues = (int)tmp_71;
  }
  else {
    unsigned long tmp_72;
    
#line 3046 
    tmp_72 = __rounddown_pow_of_two((unsigned long)num_rx_queues);
    
#line 3046 
    num_rx_queues = (int)tmp_72;
  }
  
#line 3048 
  if (enable_mq != 0) {
    int tmp_75;
    {
      unsigned int tmp_73;
      int tmp_74;
      
#line 3049 
      int _min1_0 = 8;
      
#line 3049 
      tmp_73 = cpumask_weight(cpu_online_mask);
      
#line 3049 
      int _min2_0 = (int)tmp_73;
      
#line 3049 
      if (_min1_0 < _min2_0) 
#line 3049 
                             tmp_74 = _min1_0; else 
#line 3049 
                                                    tmp_74 = _min2_0;
      
#line 3049 
      tmp_75 = tmp_74;
    }
    
#line 3049 
    num_tx_queues = tmp_75;
  }
  else 
#line 3052 
       num_tx_queues = 1;
  
#line 3054 
  if (0 != 0) {
    unsigned int tmp_144;
    
#line 3054 
    if (0 != 0) {
      unsigned int tmp_142;
      
#line 3054 
      if (num_tx_queues <= 0) {
        int tmp_76;
        
#line 3054 
        tmp_76 = ____ilog2_NaN();
        
#line 3054 
        tmp_142 = (unsigned int)((int)(1UL << tmp_76));
      }
      else {
        unsigned int tmp_141;
        
#line 3054 
        if (num_tx_queues >= 0) {
          unsigned int tmp_140;
          
#line 3054 
          if (((unsigned long long)num_tx_queues & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_139;
            
#line 3054 
            if (((unsigned long long)num_tx_queues & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_138;
              
#line 3054 
              if (((unsigned long long)num_tx_queues & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_137;
                
#line 3054 
                if (((unsigned long long)num_tx_queues & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_136;
                  
#line 3054 
                  if (((unsigned long long)num_tx_queues & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_135;
                    
#line 3054 
                    if (((unsigned long long)num_tx_queues & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_134;
                      
#line 3054 
                      if (((unsigned long long)num_tx_queues & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_133;
                        
#line 3054 
                        if (((unsigned long long)num_tx_queues & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_132;
                          
#line 3054 
                          if (((unsigned long long)num_tx_queues & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_131;
                            
#line 3054 
                            if (((unsigned long long)num_tx_queues & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_130;
                              
#line 3054 
                              if (((unsigned long long)num_tx_queues & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_129;
                                
#line 3054 
                                if (((unsigned long long)num_tx_queues & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_128;
                                  
#line 3054 
                                  if (((unsigned long long)num_tx_queues & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_127;
                                    
#line 3054 
                                    if (((unsigned long long)num_tx_queues & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_126;
                                      
#line 3054 
                                      if (((unsigned long long)num_tx_queues & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_125;
                                        
#line 3054 
                                        if (((unsigned long long)num_tx_queues & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_124;
                                          
#line 3054 
                                          if (((unsigned long long)num_tx_queues & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_123;
                                            
#line 3054 
                                            if (((unsigned long long)num_tx_queues & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_122;
                                              
#line 3054 
                                              if (((unsigned long long)num_tx_queues & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_121;
                                                
#line 3054 
                                                if (((unsigned long long)num_tx_queues & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_120;
                                                  
#line 3054 
                                                  if (((unsigned long long)num_tx_queues & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_119;
                                                    
#line 3054 
                                                    if (((unsigned long long)num_tx_queues & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_118;
                                                      
#line 3054 
                                                      if (((unsigned long long)num_tx_queues & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_117;
                                                        
#line 3054 
                                                        if (((unsigned long long)num_tx_queues & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_116;
                                                          
#line 3054 
                                                          if (((unsigned long long)num_tx_queues & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_115;
                                                            
#line 3054 
                                                            if (((unsigned long long)num_tx_queues & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_114;
                                                              
#line 3054 
                                                              if (((unsigned long long)num_tx_queues & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_113;
                                                                
#line 3054 
                                                                if (((unsigned long long)num_tx_queues & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_112;
                                                                  
#line 3054 
                                                                  if (
                                                                    ((unsigned long long)num_tx_queues & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_111;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_110;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_109;
                                                                    
#line 3054 
                                                                    if (
                                                                    num_tx_queues >= 0) {
                                                                    int tmp_108;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 1073741824ULL) == 0ULL) {
                                                                    int tmp_107;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 536870912ULL) == 0ULL) {
                                                                    int tmp_106;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 268435456ULL) == 0ULL) {
                                                                    int tmp_105;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 134217728ULL) == 0ULL) {
                                                                    int tmp_104;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 67108864ULL) == 0ULL) {
                                                                    int tmp_103;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 33554432ULL) == 0ULL) {
                                                                    int tmp_102;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 16777216ULL) == 0ULL) {
                                                                    int tmp_101;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 8388608ULL) == 0ULL) {
                                                                    int tmp_100;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 4194304ULL) == 0ULL) {
                                                                    int tmp_99;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 2097152ULL) == 0ULL) {
                                                                    int tmp_98;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 1048576ULL) == 0ULL) {
                                                                    int tmp_97;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 524288ULL) == 0ULL) {
                                                                    int tmp_96;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 262144ULL) == 0ULL) {
                                                                    int tmp_95;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 131072ULL) == 0ULL) {
                                                                    int tmp_94;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 65536ULL) == 0ULL) {
                                                                    int tmp_93;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 32768ULL) == 0ULL) {
                                                                    int tmp_92;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 16384ULL) == 0ULL) {
                                                                    int tmp_91;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 8192ULL) == 0ULL) {
                                                                    int tmp_90;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 4096ULL) == 0ULL) {
                                                                    int tmp_89;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 2048ULL) == 0ULL) {
                                                                    int tmp_88;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 1024ULL) == 0ULL) {
                                                                    int tmp_87;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 512ULL) == 0ULL) {
                                                                    int tmp_86;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 256ULL) == 0ULL) {
                                                                    int tmp_85;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 128ULL) == 0ULL) {
                                                                    int tmp_84;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 64ULL) == 0ULL) {
                                                                    int tmp_83;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 32ULL) == 0ULL) {
                                                                    int tmp_82;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 16ULL) == 0ULL) {
                                                                    int tmp_81;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 8ULL) == 0ULL) {
                                                                    int tmp_80;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 4ULL) == 0ULL) {
                                                                    int tmp_79;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 2ULL) == 0ULL) {
                                                                    int tmp_78;
                                                                    
#line 3054 
                                                                    if (
                                                                    ((unsigned long long)num_tx_queues & 1ULL) == 0ULL) {
                                                                    int tmp_77;
                                                                    
#line 3054 
                                                                    tmp_77 = ____ilog2_NaN();
                                                                    
#line 3054 
                                                                    tmp_78 = (int)(1UL << tmp_77);
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_78 = 1;
                                                                    
#line 3054 
                                                                    tmp_79 = tmp_78;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_79 = 2;
                                                                    
#line 3054 
                                                                    tmp_80 = tmp_79;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_80 = 4;
                                                                    
#line 3054 
                                                                    tmp_81 = tmp_80;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_81 = 8;
                                                                    
#line 3054 
                                                                    tmp_82 = tmp_81;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_82 = 16;
                                                                    
#line 3054 
                                                                    tmp_83 = tmp_82;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_83 = 32;
                                                                    
#line 3054 
                                                                    tmp_84 = tmp_83;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_84 = 64;
                                                                    
#line 3054 
                                                                    tmp_85 = tmp_84;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_85 = 128;
                                                                    
#line 3054 
                                                                    tmp_86 = tmp_85;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_86 = 256;
                                                                    
#line 3054 
                                                                    tmp_87 = tmp_86;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_87 = 512;
                                                                    
#line 3054 
                                                                    tmp_88 = tmp_87;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_88 = 1024;
                                                                    
#line 3054 
                                                                    tmp_89 = tmp_88;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_89 = 2048;
                                                                    
#line 3054 
                                                                    tmp_90 = tmp_89;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_90 = 4096;
                                                                    
#line 3054 
                                                                    tmp_91 = tmp_90;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_91 = 8192;
                                                                    
#line 3054 
                                                                    tmp_92 = tmp_91;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_92 = 16384;
                                                                    
#line 3054 
                                                                    tmp_93 = tmp_92;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_93 = 32768;
                                                                    
#line 3054 
                                                                    tmp_94 = tmp_93;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_94 = 65536;
                                                                    
#line 3054 
                                                                    tmp_95 = tmp_94;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_95 = 131072;
                                                                    
#line 3054 
                                                                    tmp_96 = tmp_95;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_96 = 262144;
                                                                    
#line 3054 
                                                                    tmp_97 = tmp_96;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_97 = 524288;
                                                                    
#line 3054 
                                                                    tmp_98 = tmp_97;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_98 = 1048576;
                                                                    
#line 3054 
                                                                    tmp_99 = tmp_98;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_99 = 2097152;
                                                                    
#line 3054 
                                                                    tmp_100 = tmp_99;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_100 = 4194304;
                                                                    
#line 3054 
                                                                    tmp_101 = tmp_100;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_101 = 8388608;
                                                                    
#line 3054 
                                                                    tmp_102 = tmp_101;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_102 = 16777216;
                                                                    
#line 3054 
                                                                    tmp_103 = tmp_102;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_103 = 33554432;
                                                                    
#line 3054 
                                                                    tmp_104 = tmp_103;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_104 = 67108864;
                                                                    
#line 3054 
                                                                    tmp_105 = tmp_104;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_105 = 134217728;
                                                                    
#line 3054 
                                                                    tmp_106 = tmp_105;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_106 = 268435456;
                                                                    
#line 3054 
                                                                    tmp_107 = tmp_106;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_107 = 536870912;
                                                                    
#line 3054 
                                                                    tmp_108 = tmp_107;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_108 = 1073741824;
                                                                    
#line 3054 
                                                                    tmp_109 = (unsigned int)tmp_108;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_109 = -2147483648;
                                                                    
#line 3054 
                                                                    tmp_110 = tmp_109;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_110 = (unsigned int)0;
                                                                    
#line 3054 
                                                                    tmp_111 = tmp_110;
                                                                    }
                                                                    else 
                                                                    
#line 3054 
                                                                    tmp_111 = (unsigned int)0;
                                                                    
#line 3054 
                                                                    tmp_112 = tmp_111;
                                                                  }
                                                                  else 
                                                                    
#line 3054 
                                                                    tmp_112 = (unsigned int)0;
                                                                  
#line 3054 
                                                                  tmp_113 = tmp_112;
                                                                }
                                                                else 
                                                                  
#line 3054 
                                                                  tmp_113 = (unsigned int)0;
                                                                
#line 3054 
                                                                tmp_114 = tmp_113;
                                                              }
                                                              else 
#line 3054 
                                                                   tmp_114 = (unsigned int)0;
                                                              
#line 3054 
                                                              tmp_115 = tmp_114;
                                                            }
                                                            else 
#line 3054 
                                                                 tmp_115 = (unsigned int)0;
                                                            
#line 3054 
                                                            tmp_116 = tmp_115;
                                                          }
                                                          else 
#line 3054 
                                                               tmp_116 = (unsigned int)0;
                                                          
#line 3054 
                                                          tmp_117 = tmp_116;
                                                        }
                                                        else 
#line 3054 
                                                             tmp_117 = (unsigned int)0;
                                                        
#line 3054 
                                                        tmp_118 = tmp_117;
                                                      }
                                                      else 
#line 3054 
                                                           tmp_118 = (unsigned int)0;
                                                      
#line 3054 
                                                      tmp_119 = tmp_118;
                                                    }
                                                    else 
#line 3054 
                                                         tmp_119 = (unsigned int)0;
                                                    
#line 3054 
                                                    tmp_120 = tmp_119;
                                                  }
                                                  else 
#line 3054 
                                                       tmp_120 = (unsigned int)0;
                                                  
#line 3054 
                                                  tmp_121 = tmp_120;
                                                }
                                                else 
#line 3054 
                                                     tmp_121 = (unsigned int)0;
                                                
#line 3054 
                                                tmp_122 = tmp_121;
                                              }
                                              else 
#line 3054 
                                                   tmp_122 = (unsigned int)0;
                                              
#line 3054 
                                              tmp_123 = tmp_122;
                                            }
                                            else 
#line 3054 
                                                 tmp_123 = (unsigned int)0;
                                            
#line 3054 
                                            tmp_124 = tmp_123;
                                          }
                                          else 
#line 3054 
                                               tmp_124 = (unsigned int)0;
                                          
#line 3054 
                                          tmp_125 = tmp_124;
                                        }
                                        else 
#line 3054 
                                             tmp_125 = (unsigned int)0;
                                        
#line 3054 
                                        tmp_126 = tmp_125;
                                      }
                                      else 
#line 3054 
                                           tmp_126 = (unsigned int)0;
                                      
#line 3054 
                                      tmp_127 = tmp_126;
                                    }
                                    else 
#line 3054 
                                         tmp_127 = (unsigned int)0;
                                    
#line 3054 
                                    tmp_128 = tmp_127;
                                  }
                                  else 
#line 3054 
                                       tmp_128 = (unsigned int)0;
                                  
#line 3054 
                                  tmp_129 = tmp_128;
                                }
                                else 
#line 3054 
                                     tmp_129 = (unsigned int)0;
                                
#line 3054 
                                tmp_130 = tmp_129;
                              }
                              else 
#line 3054 
                                   tmp_130 = (unsigned int)0;
                              
#line 3054 
                              tmp_131 = tmp_130;
                            }
                            else 
#line 3054 
                                 tmp_131 = (unsigned int)0;
                            
#line 3054 
                            tmp_132 = tmp_131;
                          }
                          else 
#line 3054 
                               tmp_132 = (unsigned int)0;
                          
#line 3054 
                          tmp_133 = tmp_132;
                        }
                        else 
#line 3054 
                             tmp_133 = (unsigned int)0;
                        
#line 3054 
                        tmp_134 = tmp_133;
                      }
                      else 
#line 3054 
                           tmp_134 = (unsigned int)0;
                      
#line 3054 
                      tmp_135 = tmp_134;
                    }
                    else 
#line 3054 
                         tmp_135 = (unsigned int)0;
                    
#line 3054 
                    tmp_136 = tmp_135;
                  }
                  else 
#line 3054 
                       tmp_136 = (unsigned int)0;
                  
#line 3054 
                  tmp_137 = tmp_136;
                }
                else 
#line 3054 
                     tmp_137 = (unsigned int)0;
                
#line 3054 
                tmp_138 = tmp_137;
              }
              else 
#line 3054 
                   tmp_138 = (unsigned int)0;
              
#line 3054 
              tmp_139 = tmp_138;
            }
            else 
#line 3054 
                 tmp_139 = (unsigned int)0;
            
#line 3054 
            tmp_140 = tmp_139;
          }
          else 
#line 3054 
               tmp_140 = (unsigned int)0;
          
#line 3054 
          tmp_141 = tmp_140;
        }
        else 
#line 3054 
             tmp_141 = (unsigned int)0;
        
#line 3054 
        tmp_142 = tmp_141;
      }
      
#line 3054 
      tmp_144 = tmp_142;
    }
    else {
      int tmp_143;
      
#line 3054 
      tmp_143 = __ilog2_u32((unsigned int)num_tx_queues);
      
#line 3054 
      tmp_144 = (unsigned int)((int)(1UL << tmp_143));
    }
    
#line 3054 
    num_tx_queues = (int)tmp_144;
  }
  else {
    unsigned long tmp_145;
    
#line 3054 
    tmp_145 = __rounddown_pow_of_two((unsigned long)num_tx_queues);
    
#line 3054 
    num_tx_queues = (int)tmp_145;
  }
  {
    int tmp_146;
    
#line 3055 
    int _max1 = num_tx_queues;
    
#line 3055 
    int _max2 = num_rx_queues;
    
#line 3055 
    if (_max1 > _max2) 
#line 3055 
                       tmp_146 = _max1; else 
#line 3055 
                                             tmp_146 = _max2;
    
#line 3055 
    tmp_147 = tmp_146;
  }
  {
    int tmp_148;
    
#line 3055 
    int _max1_0 = num_tx_queues;
    
#line 3055 
    int _max2_0 = num_rx_queues;
    
#line 3055 
    if (_max1_0 > _max2_0) 
#line 3055 
                           tmp_148 = _max1_0; else 
#line 3055 
                                                   tmp_148 = _max2_0;
    
#line 3055 
    tmp_149 = tmp_148;
  }
  
#line 3055 
  netdev = ldv_alloc_etherdev_mqs_111(7744,(unsigned int)tmp_149,(unsigned int)tmp_147);
  
#line 3057 
  _dev_info((struct device const *)(& pdev->dev),"# of Tx queues : %d, # of Rx queues : %d\n",num_tx_queues,num_rx_queues);
  
#line 3061 
  if (netdev == (struct net_device *)0) {
    
#line 3062 
    __retres = -12;
    
#line 3062 
    goto return_label;
  }
  else ;
  
#line 3064 
  pci_set_drvdata(pdev,(void *)netdev);
  
#line 3065 
  adapter = (struct vmxnet3_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 3066 
  adapter->netdev = netdev;
  
#line 3067 
  adapter->pdev = pdev;
  
#line 3069 
  adapter->tx_ring_size = 512U;
  
#line 3070 
  adapter->rx_ring_size = 256U;
  
#line 3071 
  adapter->rx_ring2_size = 128U;
  
#line 3073 
  spinlock_check(& adapter->cmd_lock);
  {
    struct lock_class_key __key;
    
#line 3073 
    __raw_spin_lock_init(& adapter->cmd_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->cmd_lock)->rlock",& __key);
  }
  
#line 3074 
  adapter->adapter_pa = dma_map_single_attrs(& (adapter->pdev)->dev,(void *)adapter,7744UL,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 3077 
  adapter->shared = (struct Vmxnet3_DriverShared *)dma_alloc_attrs(& (adapter->pdev)->dev,720UL,& adapter->shared_pa,208U,(struct dma_attrs *)0);
  
#line 3081 
  if (adapter->shared == (struct Vmxnet3_DriverShared *)0) {
    
#line 3082 
    dev_err((struct device const *)(& pdev->dev),"Failed to allocate memory\n");
    
#line 3083 
    err = -12;
    
#line 3084 
    goto err_alloc_shared;
  }
  else ;
  
#line 3087 
  adapter->num_rx_queues = (unsigned int)num_rx_queues;
  
#line 3088 
  adapter->num_tx_queues = (unsigned int)num_tx_queues;
  
#line 3089 
  adapter->rx_buf_per_pkt = 1;
  
#line 3091 
  size = (int)(adapter->num_tx_queues * 256U);
  
#line 3092 
  size = (int)(adapter->num_rx_queues * 256U + (u32)size);
  
#line 3093 
  adapter->tqd_start = (struct Vmxnet3_TxQueueDesc *)dma_alloc_attrs(& (adapter->pdev)->dev,(unsigned long)size,& adapter->queue_desc_pa,208U,(struct dma_attrs *)0);
  
#line 3097 
  if (adapter->tqd_start == (struct Vmxnet3_TxQueueDesc *)0) {
    
#line 3098 
    dev_err((struct device const *)(& pdev->dev),"Failed to allocate memory\n");
    
#line 3099 
    err = -12;
    
#line 3100 
    goto err_alloc_queue_desc;
  }
  else ;
  
#line 3102 
  adapter->rqd_start = (struct Vmxnet3_RxQueueDesc *)(adapter->tqd_start + adapter->num_tx_queues);
  
#line 3105 
  adapter->pm_conf = (struct Vmxnet3_PMConf *)dma_alloc_attrs(& (adapter->pdev)->dev,920UL,& adapter->pm_conf_pa,208U,(struct dma_attrs *)0);
  
#line 3109 
  if (adapter->pm_conf == (struct Vmxnet3_PMConf *)0) {
    
#line 3110 
    err = -12;
    
#line 3111 
    goto err_alloc_pm;
  }
  else ;
  
#line 3116 
  adapter->rss_conf = (struct UPT1_RSSConf *)dma_alloc_attrs(& (adapter->pdev)->dev,176UL,& adapter->rss_conf_pa,208U,(struct dma_attrs *)0);
  
#line 3120 
  if (adapter->rss_conf == (struct UPT1_RSSConf *)0) {
    
#line 3121 
    err = -12;
    
#line 3122 
    goto err_alloc_rss;
  }
  else ;
  
#line 3126 
  err = vmxnet3_alloc_pci_resources(adapter,& dma64);
  
#line 3127 
  if (err < 0) 
#line 3128 
               goto err_alloc_pci; else ;
  
#line 3130 
  ver = readl((void const volatile *)adapter->hw_addr1);
  
#line 3131 
  if ((ver & 2U) != 0U) {
    
#line 3132 
    writel(2U,(void volatile *)adapter->hw_addr1);
    
#line 3133 
    adapter->version = (unsigned char)2U;
  }
  else 
    
#line 3134 
    if ((ver & 1U) != 0U) {
      
#line 3135 
      writel(1U,(void volatile *)adapter->hw_addr1);
      
#line 3136 
      adapter->version = (unsigned char)1U;
    }
    else {
      
#line 3138 
      dev_err((struct device const *)(& pdev->dev),"Incompatible h/w version (0x%x) for adapter\n",ver);
      
#line 3140 
      err = -16;
      
#line 3141 
      goto err_ver;
    }
  {
    
#line 3143 
    struct _ddebug descriptor = {.modname = "vmxnet3", .function = "vmxnet3_probe_device", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "Using device version %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))3143U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 3143 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 3143 
                                                        __dynamic_dev_dbg(& descriptor,(struct device const *)(& pdev->dev),"Using device version %d\n",(int)adapter->version); else ;
  }
  
#line 3145 
  ver = readl((void const volatile *)(adapter->hw_addr1 + 8U));
  
#line 3146 
  if ((ver & 1U) != 0U) 
#line 3147 
                        writel(1U,(void volatile *)(adapter->hw_addr1 + 8U));
  else {
    
#line 3149 
    dev_err((struct device const *)(& pdev->dev),"Incompatible upt version (0x%x) for adapter\n",ver);
    
#line 3151 
    err = -16;
    
#line 3152 
    goto err_ver;
  }
  
#line 3155 
  netdev->dev.parent = & pdev->dev;
  
#line 3156 
  vmxnet3_declare_features(adapter,(_Bool)((bool)((int)dma64) != 0));
  
#line 3158 
  if (adapter->num_tx_queues == adapter->num_rx_queues) 
#line 3159 
                                                        adapter->share_intr = 0; else 
                                                                    
#line 3161 
                                                                    adapter->share_intr = 2;
  
#line 3163 
  vmxnet3_alloc_intr_resources(adapter);
  
#line 3166 
  if (adapter->num_rx_queues > 1U && adapter->intr.type == (unsigned int)VMXNET3_IT_MSIX) {
    
#line 3168 
    adapter->rss = (_Bool)1;
    
#line 3169 
    netdev->hw_features |= 8589934592ULL;
    
#line 3170 
    netdev->features |= 8589934592ULL;
    {
      
#line 3171 
      struct _ddebug descriptor_0 = {.modname = "vmxnet3", .function = "vmxnet3_probe_device", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c", .format = "RSS is enabled.\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))3171U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 3171 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 3171 
                                                            __dynamic_dev_dbg(& descriptor_0,(struct device const *)(& pdev->dev),"RSS is enabled.\n"); else ;
    }
  }
  else 
#line 3173 
       adapter->rss = (_Bool)0;
  
#line 3177 
  vmxnet3_read_mac_addr(adapter,(u8 *)(& mac));
  
#line 3178 
  memcpy((void *)netdev->dev_addr,(void const *)(& mac),(unsigned long)netdev->addr_len);
  
#line 3180 
  netdev->netdev_ops = & vmxnet3_netdev_ops;
  
#line 3181 
  vmxnet3_set_ethtool_ops(netdev);
  
#line 3182 
  netdev->watchdog_timeo = 1250;
  {
    struct lock_class_key __key_0;
    
#line 3184 
    __init_work(& adapter->work,0);
    
#line 3184 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 3184 
    adapter->work.data = __constr_expr_37;
    
#line 3184 
    lockdep_init_map(& adapter->work.lockdep_map,"(&adapter->work)",& __key_0,0);
    
#line 3184 
    INIT_LIST_HEAD(& adapter->work.entry);
    
#line 3184 
    adapter->work.func = & vmxnet3_reset_work;
  }
  
#line 3185 
  set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 3187 
  if (adapter->intr.type == (unsigned int)VMXNET3_IT_MSIX) {
    int i;
    
#line 3189 
    i = 0;
    
#line 3189 
    goto ldv_55134;
    ldv_55133: 
#line 3190 
    ;
    
#line 3190 
    netif_napi_add(adapter->netdev,& adapter->rx_queue[i].napi,& vmxnet3_poll_rx_only,64);
    
#line 3189 
    i += 1;
    ldv_55134: 
#line 3190 
    ;
    
#line 3189 
    if (adapter->num_rx_queues > (unsigned int)i) 
#line 3191 
                                                  goto ldv_55133; else 
                                                                    
#line 3194 
                                                                    goto ldv_55135;
    ldv_55135: 
#line 3195 
    ;
  }
  else 
#line 3195 
       netif_napi_add(adapter->netdev,& adapter->rx_queue[0].napi,& vmxnet3_poll,64);
  
#line 3199 
  netif_set_real_num_tx_queues(adapter->netdev,adapter->num_tx_queues);
  
#line 3200 
  netif_set_real_num_rx_queues(adapter->netdev,adapter->num_rx_queues);
  
#line 3202 
  netif_carrier_off(netdev);
  
#line 3203 
  err = ldv_register_netdev_112(netdev);
  
#line 3205 
  if (err != 0) {
    
#line 3206 
    dev_err((struct device const *)(& pdev->dev),"Failed to register adapter\n");
    
#line 3207 
    goto err_register;
  }
  else ;
  
#line 3210 
  vmxnet3_check_link(adapter,(_Bool)0);
  
#line 3211 
  __retres = 0;
  
#line 3211 
  goto return_label;
  err_register: 
#line 3213 
  ;
  
#line 3214 
  vmxnet3_free_intr_resources(adapter);
  err_ver: 
#line 3215 
  ;
  
#line 3216 
  vmxnet3_free_pci_resources(adapter);
  err_alloc_pci: 
#line 3217 
  ;
  
#line 3219 
  dma_free_attrs(& (adapter->pdev)->dev,176UL,(void *)adapter->rss_conf,adapter->rss_conf_pa,(struct dma_attrs *)0);
  err_alloc_rss: 
#line 3221 
  ;
  
#line 3223 
  dma_free_attrs(& (adapter->pdev)->dev,920UL,(void *)adapter->pm_conf,adapter->pm_conf_pa,(struct dma_attrs *)0);
  err_alloc_pm: 
#line 3225 
  ;
  
#line 3226 
  dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)size,(void *)adapter->tqd_start,adapter->queue_desc_pa,(struct dma_attrs *)0);
  err_alloc_queue_desc: 
#line 3228 
  ;
  
#line 3229 
  dma_free_attrs(& (adapter->pdev)->dev,720UL,(void *)adapter->shared,adapter->shared_pa,(struct dma_attrs *)0);
  err_alloc_shared: 
#line 3232 
  ;
  
#line 3233 
  dma_unmap_single_attrs(& (adapter->pdev)->dev,adapter->adapter_pa,7744UL,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 3235 
  ldv_free_netdev_113(netdev);
  
#line 3236 
  __retres = err;
  return_label: 
#line 3236 
                return __retres;
}


#line 3241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_remove_device(struct pci_dev *pdev)
{
  int num_rx_queues;
  
#line 3243 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3244 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3245 
  int size = 0;
  
#line 3249 
  if (enable_mq != 0) {
    int tmp_3;
    {
      unsigned int tmp_1;
      int tmp_2;
      
#line 3250 
      int _min1 = 8;
      
#line 3250 
      tmp_1 = cpumask_weight(cpu_online_mask);
      
#line 3250 
      int _min2 = (int)tmp_1;
      
#line 3250 
      if (_min1 < _min2) 
#line 3250 
                         tmp_2 = _min1; else 
#line 3250 
                                             tmp_2 = _min2;
      
#line 3250 
      tmp_3 = tmp_2;
    }
    
#line 3250 
    num_rx_queues = tmp_3;
  }
  else 
#line 3254 
       num_rx_queues = 1;
  
#line 3255 
  if (0 != 0) {
    unsigned int tmp_72;
    
#line 3255 
    if (0 != 0) {
      unsigned int tmp_70;
      
#line 3255 
      if (num_rx_queues <= 0) {
        int tmp_4;
        
#line 3255 
        tmp_4 = ____ilog2_NaN();
        
#line 3255 
        tmp_70 = (unsigned int)((int)(1UL << tmp_4));
      }
      else {
        unsigned int tmp_69;
        
#line 3255 
        if (num_rx_queues >= 0) {
          unsigned int tmp_68;
          
#line 3255 
          if (((unsigned long long)num_rx_queues & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_67;
            
#line 3255 
            if (((unsigned long long)num_rx_queues & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_66;
              
#line 3255 
              if (((unsigned long long)num_rx_queues & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_65;
                
#line 3255 
                if (((unsigned long long)num_rx_queues & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_64;
                  
#line 3255 
                  if (((unsigned long long)num_rx_queues & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_63;
                    
#line 3255 
                    if (((unsigned long long)num_rx_queues & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_62;
                      
#line 3255 
                      if (((unsigned long long)num_rx_queues & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_61;
                        
#line 3255 
                        if (((unsigned long long)num_rx_queues & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_60;
                          
#line 3255 
                          if (((unsigned long long)num_rx_queues & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_59;
                            
#line 3255 
                            if (((unsigned long long)num_rx_queues & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_58;
                              
#line 3255 
                              if (((unsigned long long)num_rx_queues & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_57;
                                
#line 3255 
                                if (((unsigned long long)num_rx_queues & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_56;
                                  
#line 3255 
                                  if (((unsigned long long)num_rx_queues & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_55;
                                    
#line 3255 
                                    if (((unsigned long long)num_rx_queues & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_54;
                                      
#line 3255 
                                      if (((unsigned long long)num_rx_queues & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_53;
                                        
#line 3255 
                                        if (((unsigned long long)num_rx_queues & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_52;
                                          
#line 3255 
                                          if (((unsigned long long)num_rx_queues & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_51;
                                            
#line 3255 
                                            if (((unsigned long long)num_rx_queues & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_50;
                                              
#line 3255 
                                              if (((unsigned long long)num_rx_queues & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_49;
                                                
#line 3255 
                                                if (((unsigned long long)num_rx_queues & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_48;
                                                  
#line 3255 
                                                  if (((unsigned long long)num_rx_queues & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_47;
                                                    
#line 3255 
                                                    if (((unsigned long long)num_rx_queues & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_46;
                                                      
#line 3255 
                                                      if (((unsigned long long)num_rx_queues & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_45;
                                                        
#line 3255 
                                                        if (((unsigned long long)num_rx_queues & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_44;
                                                          
#line 3255 
                                                          if (((unsigned long long)num_rx_queues & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_43;
                                                            
#line 3255 
                                                            if (((unsigned long long)num_rx_queues & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_42;
                                                              
#line 3255 
                                                              if (((unsigned long long)num_rx_queues & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_41;
                                                                
#line 3255 
                                                                if (((unsigned long long)num_rx_queues & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_40;
                                                                  
#line 3255 
                                                                  if (
                                                                    ((unsigned long long)num_rx_queues & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_39;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_38;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_37;
                                                                    
#line 3255 
                                                                    if (
                                                                    num_rx_queues >= 0) {
                                                                    int tmp_36;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 1073741824ULL) == 0ULL) {
                                                                    int tmp_35;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 536870912ULL) == 0ULL) {
                                                                    int tmp_34;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 268435456ULL) == 0ULL) {
                                                                    int tmp_33;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 134217728ULL) == 0ULL) {
                                                                    int tmp_32;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 67108864ULL) == 0ULL) {
                                                                    int tmp_31;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 33554432ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 16777216ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 8388608ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 4194304ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 2097152ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 1048576ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 524288ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 262144ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 131072ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 65536ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 32768ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 16384ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 8192ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 4096ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 2048ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 1024ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 512ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 256ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 128ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 64ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 32ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 16ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 8ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 4ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 2ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 3255 
                                                                    if (
                                                                    ((unsigned long long)num_rx_queues & 1ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 3255 
                                                                    tmp_5 = ____ilog2_NaN();
                                                                    
#line 3255 
                                                                    tmp_6 = (int)(1UL << tmp_5);
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_6 = 1;
                                                                    
#line 3255 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_7 = 2;
                                                                    
#line 3255 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_8 = 4;
                                                                    
#line 3255 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_9 = 8;
                                                                    
#line 3255 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_10 = 16;
                                                                    
#line 3255 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_11 = 32;
                                                                    
#line 3255 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_12 = 64;
                                                                    
#line 3255 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_13 = 128;
                                                                    
#line 3255 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_14 = 256;
                                                                    
#line 3255 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_15 = 512;
                                                                    
#line 3255 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_16 = 1024;
                                                                    
#line 3255 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_17 = 2048;
                                                                    
#line 3255 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_18 = 4096;
                                                                    
#line 3255 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_19 = 8192;
                                                                    
#line 3255 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_20 = 16384;
                                                                    
#line 3255 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_21 = 32768;
                                                                    
#line 3255 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_22 = 65536;
                                                                    
#line 3255 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_23 = 131072;
                                                                    
#line 3255 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_24 = 262144;
                                                                    
#line 3255 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_25 = 524288;
                                                                    
#line 3255 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_26 = 1048576;
                                                                    
#line 3255 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_27 = 2097152;
                                                                    
#line 3255 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_28 = 4194304;
                                                                    
#line 3255 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_29 = 8388608;
                                                                    
#line 3255 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_30 = 16777216;
                                                                    
#line 3255 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_31 = 33554432;
                                                                    
#line 3255 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_32 = 67108864;
                                                                    
#line 3255 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_33 = 134217728;
                                                                    
#line 3255 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_34 = 268435456;
                                                                    
#line 3255 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_35 = 536870912;
                                                                    
#line 3255 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_36 = 1073741824;
                                                                    
#line 3255 
                                                                    tmp_37 = (unsigned int)tmp_36;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_37 = -2147483648;
                                                                    
#line 3255 
                                                                    tmp_38 = tmp_37;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_38 = (unsigned int)0;
                                                                    
#line 3255 
                                                                    tmp_39 = tmp_38;
                                                                    }
                                                                    else 
                                                                    
#line 3255 
                                                                    tmp_39 = (unsigned int)0;
                                                                    
#line 3255 
                                                                    tmp_40 = tmp_39;
                                                                  }
                                                                  else 
                                                                    
#line 3255 
                                                                    tmp_40 = (unsigned int)0;
                                                                  
#line 3255 
                                                                  tmp_41 = tmp_40;
                                                                }
                                                                else 
                                                                  
#line 3255 
                                                                  tmp_41 = (unsigned int)0;
                                                                
#line 3255 
                                                                tmp_42 = tmp_41;
                                                              }
                                                              else 
#line 3255 
                                                                   tmp_42 = (unsigned int)0;
                                                              
#line 3255 
                                                              tmp_43 = tmp_42;
                                                            }
                                                            else 
#line 3255 
                                                                 tmp_43 = (unsigned int)0;
                                                            
#line 3255 
                                                            tmp_44 = tmp_43;
                                                          }
                                                          else 
#line 3255 
                                                               tmp_44 = (unsigned int)0;
                                                          
#line 3255 
                                                          tmp_45 = tmp_44;
                                                        }
                                                        else 
#line 3255 
                                                             tmp_45 = (unsigned int)0;
                                                        
#line 3255 
                                                        tmp_46 = tmp_45;
                                                      }
                                                      else 
#line 3255 
                                                           tmp_46 = (unsigned int)0;
                                                      
#line 3255 
                                                      tmp_47 = tmp_46;
                                                    }
                                                    else 
#line 3255 
                                                         tmp_47 = (unsigned int)0;
                                                    
#line 3255 
                                                    tmp_48 = tmp_47;
                                                  }
                                                  else 
#line 3255 
                                                       tmp_48 = (unsigned int)0;
                                                  
#line 3255 
                                                  tmp_49 = tmp_48;
                                                }
                                                else 
#line 3255 
                                                     tmp_49 = (unsigned int)0;
                                                
#line 3255 
                                                tmp_50 = tmp_49;
                                              }
                                              else 
#line 3255 
                                                   tmp_50 = (unsigned int)0;
                                              
#line 3255 
                                              tmp_51 = tmp_50;
                                            }
                                            else 
#line 3255 
                                                 tmp_51 = (unsigned int)0;
                                            
#line 3255 
                                            tmp_52 = tmp_51;
                                          }
                                          else 
#line 3255 
                                               tmp_52 = (unsigned int)0;
                                          
#line 3255 
                                          tmp_53 = tmp_52;
                                        }
                                        else 
#line 3255 
                                             tmp_53 = (unsigned int)0;
                                        
#line 3255 
                                        tmp_54 = tmp_53;
                                      }
                                      else 
#line 3255 
                                           tmp_54 = (unsigned int)0;
                                      
#line 3255 
                                      tmp_55 = tmp_54;
                                    }
                                    else 
#line 3255 
                                         tmp_55 = (unsigned int)0;
                                    
#line 3255 
                                    tmp_56 = tmp_55;
                                  }
                                  else 
#line 3255 
                                       tmp_56 = (unsigned int)0;
                                  
#line 3255 
                                  tmp_57 = tmp_56;
                                }
                                else 
#line 3255 
                                     tmp_57 = (unsigned int)0;
                                
#line 3255 
                                tmp_58 = tmp_57;
                              }
                              else 
#line 3255 
                                   tmp_58 = (unsigned int)0;
                              
#line 3255 
                              tmp_59 = tmp_58;
                            }
                            else 
#line 3255 
                                 tmp_59 = (unsigned int)0;
                            
#line 3255 
                            tmp_60 = tmp_59;
                          }
                          else 
#line 3255 
                               tmp_60 = (unsigned int)0;
                          
#line 3255 
                          tmp_61 = tmp_60;
                        }
                        else 
#line 3255 
                             tmp_61 = (unsigned int)0;
                        
#line 3255 
                        tmp_62 = tmp_61;
                      }
                      else 
#line 3255 
                           tmp_62 = (unsigned int)0;
                      
#line 3255 
                      tmp_63 = tmp_62;
                    }
                    else 
#line 3255 
                         tmp_63 = (unsigned int)0;
                    
#line 3255 
                    tmp_64 = tmp_63;
                  }
                  else 
#line 3255 
                       tmp_64 = (unsigned int)0;
                  
#line 3255 
                  tmp_65 = tmp_64;
                }
                else 
#line 3255 
                     tmp_65 = (unsigned int)0;
                
#line 3255 
                tmp_66 = tmp_65;
              }
              else 
#line 3255 
                   tmp_66 = (unsigned int)0;
              
#line 3255 
              tmp_67 = tmp_66;
            }
            else 
#line 3255 
                 tmp_67 = (unsigned int)0;
            
#line 3255 
            tmp_68 = tmp_67;
          }
          else 
#line 3255 
               tmp_68 = (unsigned int)0;
          
#line 3255 
          tmp_69 = tmp_68;
        }
        else 
#line 3255 
             tmp_69 = (unsigned int)0;
        
#line 3255 
        tmp_70 = tmp_69;
      }
      
#line 3255 
      tmp_72 = tmp_70;
    }
    else {
      int tmp_71;
      
#line 3255 
      tmp_71 = __ilog2_u32((unsigned int)num_rx_queues);
      
#line 3255 
      tmp_72 = (unsigned int)((int)(1UL << tmp_71));
    }
    
#line 3255 
    num_rx_queues = (int)tmp_72;
  }
  else {
    unsigned long tmp_73;
    
#line 3255 
    tmp_73 = __rounddown_pow_of_two((unsigned long)num_rx_queues);
    
#line 3255 
    num_rx_queues = (int)tmp_73;
  }
  
#line 3257 
  cancel_work_sync(& adapter->work);
  
#line 3259 
  ldv_unregister_netdev_114(netdev);
  
#line 3261 
  vmxnet3_free_intr_resources(adapter);
  
#line 3262 
  vmxnet3_free_pci_resources(adapter);
  
#line 3264 
  dma_free_attrs(& (adapter->pdev)->dev,176UL,(void *)adapter->rss_conf,adapter->rss_conf_pa,(struct dma_attrs *)0);
  
#line 3267 
  dma_free_attrs(& (adapter->pdev)->dev,920UL,(void *)adapter->pm_conf,adapter->pm_conf_pa,(struct dma_attrs *)0);
  
#line 3270 
  size = (int)(adapter->num_tx_queues * 256U);
  
#line 3271 
  size = (int)((unsigned long)num_rx_queues * (unsigned long)256U + (unsigned long)size);
  
#line 3272 
  dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)size,(void *)adapter->tqd_start,adapter->queue_desc_pa,(struct dma_attrs *)0);
  
#line 3274 
  dma_free_attrs(& (adapter->pdev)->dev,720UL,(void *)adapter->shared,adapter->shared_pa,(struct dma_attrs *)0);
  
#line 3277 
  dma_unmap_single_attrs(& (adapter->pdev)->dev,adapter->adapter_pa,7744UL,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 3279 
  ldv_free_netdev_115(netdev);
  
#line 3280 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_shutdown_device(struct pci_dev *pdev)
{
  unsigned long flags;
  int tmp_1;
  int tmp_2;
  
#line 3284 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3285 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3291 
  goto ldv_55154;
  ldv_55153: 
#line 3292 
  ;
  
#line 3292 
  msleep(1U);
  ldv_55154: 
#line 3293 
  ;
  
#line 3291 
  tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 3291 
  if (tmp_1 != 0) 
#line 3293 
                  goto ldv_55153; else 
#line 3296 
                                       goto ldv_55155;
  ldv_55155: 
#line 3297 
  ;
  
#line 3294 
  tmp_2 = test_and_set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 3294 
  if (tmp_2 != 0) {
    
#line 3296 
    set_bit(0L,(unsigned long volatile *)(& adapter->state));
    
#line 3297 
    goto return_label;
  }
  else ;
  
#line 3299 
  ldv___ldv_spin_lock_116(& adapter->cmd_lock);
  
#line 3300 
  writel(3405643777U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 3302 
  ldv_spin_unlock_irqrestore_117(& adapter->cmd_lock,flags);
  
#line 3303 
  vmxnet3_disable_all_intrs(adapter);
  
#line 3305 
  set_bit(0L,(unsigned long volatile *)(& adapter->state));
  return_label: 
#line 3306 
                return;
}


#line 3312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_suspend(struct device *device)
{
  int __retres;
  struct pci_dev *tmp;
  struct Vmxnet3_PMConf *pmConf;
  struct ethhdr *ehdr;
  struct arphdr *ahdr;
  u8 *arpreq;
  struct in_device *in_dev;
  struct in_ifaddr *ifa;
  unsigned long flags;
  int tmp_3;
  bool tmp_2;
  pci_power_t tmp_4;
  pci_power_t tmp_5;
  {
    
#line 3314 
    struct device const *__mptr = (struct device const *)device;
    
#line 3314 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 3314 
  struct pci_dev *pdev = tmp;
  
#line 3315 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3316 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3324 
  int i = 0;
  
#line 3326 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 3326 
  if (tmp_2) 
#line 3326 
             tmp_3 = 0; else 
#line 3326 
                             tmp_3 = 1;
  
#line 3326 
  if (tmp_3) {
    
#line 3327 
    __retres = 0;
    
#line 3327 
    goto return_label;
  }
  else ;
  
#line 3329 
  i = 0;
  
#line 3329 
  goto ldv_55173;
  ldv_55172: 
#line 3330 
  ;
  
#line 3330 
  napi_disable(& adapter->rx_queue[i].napi);
  
#line 3329 
  i += 1;
  ldv_55173: 
#line 3330 
  ;
  
#line 3329 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 3331 
                                                goto ldv_55172; else 
                                                                  
#line 3334 
                                                                  goto ldv_55174;
  ldv_55174: 
#line 3335 
  ;
  
#line 3332 
  vmxnet3_disable_all_intrs(adapter);
  
#line 3333 
  vmxnet3_free_irqs(adapter);
  
#line 3334 
  vmxnet3_free_intr_resources(adapter);
  
#line 3336 
  netif_device_detach(netdev);
  
#line 3337 
  netif_tx_stop_all_queues(netdev);
  
#line 3340 
  pmConf = adapter->pm_conf;
  
#line 3341 
  memset((void *)pmConf,0,920UL);
  
#line 3343 
  if ((adapter->wol & 2U) != 0U) {
    
#line 3344 
    pmConf->filters[i].patternSize = (unsigned char)6U;
    
#line 3345 
    pmConf->filters[i].maskSize = (unsigned char)1U;
    
#line 3346 
    memcpy((void *)(& pmConf->filters[i].pattern),(void const *)netdev->dev_addr,6UL);
    
#line 3347 
    pmConf->filters[i].mask[0] = (unsigned char)63U;
    
#line 3349 
    pmConf->wakeUpEvents = (unsigned short)((unsigned int)pmConf->wakeUpEvents | 2U);
    
#line 3350 
    i += 1;
  }
  else ;
  
#line 3353 
  if ((adapter->wol & 16U) != 0U) {
    
#line 3354 
    in_dev = in_dev_get((struct net_device const *)netdev);
    
#line 3355 
    if (in_dev == (struct in_device *)0) 
#line 3356 
                                         goto skip_arp; else ;
    
#line 3358 
    ifa = in_dev->ifa_list;
    
#line 3359 
    if (ifa == (struct in_ifaddr *)0) 
#line 3360 
                                      goto skip_arp; else ;
    
#line 3362 
    pmConf->filters[i].patternSize = (unsigned char)42U;
    
#line 3366 
    pmConf->filters[i].maskSize = (unsigned char)((unsigned int)((unsigned char)(((int)pmConf->filters[i].patternSize + -1) / 8)) + 1U);
    
#line 3370 
    ehdr = (struct ethhdr *)(& pmConf->filters[i].pattern);
    
#line 3371 
    ehdr->h_proto = (unsigned short)1544U;
    
#line 3374 
    ahdr = (struct arphdr *)(& pmConf->filters[i].pattern[14]);
    
#line 3375 
    ahdr->ar_op = (unsigned short)256U;
    
#line 3376 
    arpreq = (u8 *)(ahdr + 1U);
    
#line 3379 
    arpreq += 16U;
    
#line 3380 
    *((u32 *)arpreq) = ifa->ifa_address;
    
#line 3383 
    pmConf->filters[i].mask[0] = (unsigned char)0U;
    
#line 3384 
    pmConf->filters[i].mask[1] = (unsigned char)48U;
    
#line 3385 
    pmConf->filters[i].mask[2] = (unsigned char)48U;
    
#line 3386 
    pmConf->filters[i].mask[3] = (unsigned char)0U;
    
#line 3387 
    pmConf->filters[i].mask[4] = (unsigned char)192U;
    
#line 3388 
    pmConf->filters[i].mask[5] = (unsigned char)3U;
    
#line 3389 
    in_dev_put(in_dev);
    
#line 3391 
    pmConf->wakeUpEvents = (unsigned short)((unsigned int)pmConf->wakeUpEvents | 2U);
    
#line 3392 
    i += 1;
  }
  else ;
  skip_arp: 
#line 3395 
  ;
  
#line 3396 
  if ((adapter->wol & 32U) != 0U) 
#line 3397 
                                  pmConf->wakeUpEvents = (unsigned short)((unsigned int)pmConf->wakeUpEvents | 1U); else ;
  
#line 3399 
  pmConf->numFilters = (unsigned char)i;
  
#line 3401 
  (adapter->shared)->devRead.pmConfDesc.confVer = 1U;
  
#line 3402 
  (adapter->shared)->devRead.pmConfDesc.confLen = 920U;
  
#line 3404 
  (adapter->shared)->devRead.pmConfDesc.confPA = adapter->pm_conf_pa;
  
#line 3407 
  ldv___ldv_spin_lock_118(& adapter->cmd_lock);
  
#line 3408 
  writel(3405643784U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 3410 
  ldv_spin_unlock_irqrestore_119(& adapter->cmd_lock,flags);
  
#line 3412 
  pci_save_state(pdev);
  
#line 3413 
  ;
  
#line 3413 
  struct pm_message __constr_expr_38 = {.event = 2};
  
#line 3413 
  ;
  
#line 3413 
  tmp_4 = pci_choose_state(pdev,__constr_expr_38);
  
#line 3413 
  ;
  
#line 3413 
  pci_enable_wake(pdev,tmp_4,(_Bool)(adapter->wol != 0U));
  
#line 3415 
  pci_disable_device(pdev);
  
#line 3416 
  struct pm_message __constr_expr_39 = {.event = 2};
  
#line 3416 
  ;
  
#line 3416 
  tmp_5 = pci_choose_state(pdev,__constr_expr_39);
  
#line 3416 
  ;
  
#line 3416 
  pci_set_power_state(pdev,tmp_5);
  
#line 3418 
  __retres = 0;
  return_label: 
#line 3418 
                return __retres;
}


#line 3423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_resume(struct device *device)
{
  int __retres;
  int err;
  unsigned long flags;
  struct pci_dev *tmp;
  int tmp_3;
  bool tmp_2;
  {
    
#line 3427 
    struct device const *__mptr = (struct device const *)device;
    
#line 3427 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 3427 
  struct pci_dev *pdev = tmp;
  
#line 3428 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3429 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3431 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 3431 
  if (tmp_2) 
#line 3431 
             tmp_3 = 0; else 
#line 3431 
                             tmp_3 = 1;
  
#line 3431 
  if (tmp_3) {
    
#line 3432 
    __retres = 0;
    
#line 3432 
    goto return_label;
  }
  else ;
  
#line 3434 
  pci_set_power_state(pdev,0);
  
#line 3435 
  pci_restore_state(pdev);
  
#line 3436 
  err = pci_enable_device_mem(pdev);
  
#line 3437 
  if (err != 0) {
    
#line 3438 
    __retres = err;
    
#line 3438 
    goto return_label;
  }
  else ;
  
#line 3440 
  pci_enable_wake(pdev,0,(_Bool)0);
  
#line 3442 
  vmxnet3_alloc_intr_resources(adapter);
  
#line 3451 
  ldv___ldv_spin_lock_120(& adapter->cmd_lock);
  
#line 3452 
  writel(3405643777U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 3454 
  ldv_spin_unlock_irqrestore_121(& adapter->cmd_lock,flags);
  
#line 3455 
  vmxnet3_tq_cleanup_all(adapter);
  
#line 3456 
  vmxnet3_rq_cleanup_all(adapter);
  
#line 3458 
  vmxnet3_reset_dev(adapter);
  
#line 3459 
  err = vmxnet3_activate_dev(adapter);
  
#line 3460 
  if (err != 0) {
    
#line 3461 
    netdev_err((struct net_device const *)netdev,"failed to re-activate on resume, error: %d",err);
    
#line 3463 
    vmxnet3_force_close(adapter);
    
#line 3464 
    __retres = err;
    
#line 3464 
    goto return_label;
  }
  else ;
  
#line 3466 
  netif_device_attach(netdev);
  
#line 3468 
  __retres = 0;
  return_label: 
#line 3468 
                return __retres;
}


#line 3471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static struct dev_pm_ops const vmxnet3_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & vmxnet3_suspend, .resume = & vmxnet3_resume, .freeze = & vmxnet3_suspend, .thaw = (int (*)(struct device *))0, .poweroff = (int (*)(struct device *))0, .restore = & vmxnet3_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 3479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static struct pci_driver vmxnet3_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = (char const *)(& vmxnet3_driver_name), .id_table = (struct pci_device_id const *)(& vmxnet3_pciid_table), .probe = & vmxnet3_probe_device, .remove = & vmxnet3_remove_device, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = & vmxnet3_shutdown_device, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & vmxnet3_pm_ops, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 3492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static int vmxnet3_init_module(void)
{
  int tmp;
  
#line 3494 
  printk("\001",(char *)"VMware vmxnet3 virtual NIC driver",(char *)"1.4.2.0-k");
  
#line 3496 
  tmp = ldv___pci_register_driver_122(& vmxnet3_driver,& __this_module,"vmxnet3");
  
#line 3496 
  return tmp;
}


#line 3503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_drv.c"
static void vmxnet3_exit_module(void)
{
  
#line 3505 
  ldv_pci_unregister_driver_123(& vmxnet3_driver);
  
#line 3506 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
struct dev_pm_ops *ldv_emg_alias_vmxnet3_pm_ops_3 = (struct dev_pm_ops *)(& vmxnet3_pm_ops);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
struct pci_driver *ldv_emg_alias_vmxnet3_driver_2 = & vmxnet3_driver;

#line 60 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 61 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 62 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 63 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 64 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 65 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 66 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 67 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 68 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
void ldv_emg_vmxnet3_exit_module(void)
{
  
#line 73 
  vmxnet3_exit_module();
  
#line 74 
  return;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
void ldv_emg_wrapper_vmxnet3_shutdown_device_2(struct pci_dev *arg0)
{
  
#line 77 
  vmxnet3_shutdown_device(arg0);
  
#line 78 
  return;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
enum irqreturn ldv_emg_wrapper_vmxnet3_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 82 
  tmp = vmxnet3_intr(arg0,arg1);
  
#line 82 
  return tmp;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
enum irqreturn ldv_emg_wrapper_vmxnet3_msix_rx_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 87 
  tmp = vmxnet3_msix_rx(arg0,arg1);
  
#line 87 
  return tmp;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
int ldv_emg_wrapper_vmxnet3_resume_4(struct device *arg0)
{
  int tmp;
  
#line 92 
  tmp = vmxnet3_resume(arg0);
  
#line 92 
  return tmp;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
void ldv_emg_wrapper_vmxnet3_remove_device_4(struct pci_dev *arg0)
{
  
#line 97 
  vmxnet3_remove_device(arg0);
  
#line 98 
  return;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
enum irqreturn ldv_emg_wrapper_vmxnet3_msix_event_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 102 
  tmp = vmxnet3_msix_event(arg0,arg1);
  
#line 102 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
int ldv_emg_wrapper_vmxnet3_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 107 
  tmp = vmxnet3_suspend(arg0);
  
#line 107 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
int ldv_emg_vmxnet3_init_module(void)
{
  int tmp;
  
#line 112 
  tmp = vmxnet3_init_module();
  
#line 112 
  return tmp;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
enum irqreturn ldv_emg_wrapper_vmxnet3_msix_tx_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 116 
  tmp = vmxnet3_msix_tx(arg0,arg1);
  
#line 116 
  return tmp;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
int ldv_emg_wrapper_vmxnet3_probe_device_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 121 
  tmp = vmxnet3_probe_device(arg0,(struct pci_device_id const *)arg1);
  
#line 121 
  return tmp;
}


#line 179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 182 
  ldv_atomic_inc(v);
  
#line 183 
  return;
}


#line 193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static int atomic_dec_and_test(atomic_t *v)
{
  int tmp;
  
#line 196 
  tmp = ldv_atomic_dec_and_test(v);
  
#line 196 
  return tmp;
}


#line 494  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 497 
  tmp = ldv_kmalloc(size,flags);
  
#line 497 
  return tmp;
}


#line 663  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 667 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 669 
  spin_lock(lock);
  
#line 670 
  return;
}


#line 706  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 710 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 712 
  spin_unlock(lock);
  
#line 713 
  return;
}


#line 826  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1)
{
  
#line 830 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 832 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 833 
  return;
}


#line 836  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags)
{
  
#line 840 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 842 
  spin_unlock_irqrestore(lock,flags);
  
#line 843 
  return;
}


#line 846  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1)
{
  
#line 850 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 852 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 853 
  return;
}


#line 856  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 860 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 862 
  spin_unlock_irqrestore(lock,flags);
  
#line 863 
  return;
}


#line 866  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static bool ldv_schedule_work_79(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 870 
  tmp = ldv_emg_schedule_work(work);
  
#line 870 
  __retres = tmp != 0;
  
#line 870 
  return __retres;
}


#line 874  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_lock_80(spinlock_t *lock)
{
  
#line 878 
  ldv_spin_model_lock((char *)"tx_lock_of_vmxnet3_tx_queue");
  
#line 880 
  spin_lock(lock);
  
#line 881 
  return;
}


#line 884  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_81(spinlock_t *lock)
{
  
#line 888 
  ldv_spin_model_unlock((char *)"tx_lock_of_vmxnet3_tx_queue");
  
#line 890 
  spin_unlock(lock);
  
#line 891 
  return;
}


#line 894  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1)
{
  
#line 898 
  ldv_spin_model_lock((char *)"tx_lock_of_vmxnet3_tx_queue");
  
#line 900 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 901 
  return;
}


#line 904  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags)
{
  
#line 908 
  ldv_spin_model_unlock((char *)"tx_lock_of_vmxnet3_tx_queue");
  
#line 910 
  spin_unlock_irqrestore(lock,flags);
  
#line 911 
  return;
}


#line 914  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags)
{
  
#line 918 
  ldv_spin_model_unlock((char *)"tx_lock_of_vmxnet3_tx_queue");
  
#line 920 
  spin_unlock_irqrestore(lock,flags);
  
#line 921 
  return;
}


#line 924  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags)
{
  
#line 928 
  ldv_spin_model_unlock((char *)"tx_lock_of_vmxnet3_tx_queue");
  
#line 930 
  spin_unlock_irqrestore(lock,flags);
  
#line 931 
  return;
}


#line 934  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static int ldv_request_irq_86(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 938 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 938 
  return tmp;
}


#line 942  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static int ldv_request_irq_87(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 946 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 946 
  return tmp;
}


#line 950  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static int ldv_request_irq_88(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 954 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 954 
  return tmp;
}


#line 958  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static int ldv_request_irq_89(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 962 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 962 
  return tmp;
}


#line 966  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static int ldv_request_irq_90(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 970 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 970 
  return tmp;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_free_irq_91(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 978 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 979 
  return;
}


#line 982  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_free_irq_92(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 986 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 987 
  return;
}


#line 990  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_free_irq_93(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 994 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 995 
  return;
}


#line 998  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_free_irq_94(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1002 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1003 
  return;
}


#line 1006  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_free_irq_95(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1010 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1011 
  return;
}


#line 1014  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_96(spinlock_t *ldv_func_arg1)
{
  
#line 1018 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1020 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1021 
  return;
}


#line 1024  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_97(spinlock_t *lock, unsigned long flags)
{
  
#line 1028 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1030 
  spin_unlock_irqrestore(lock,flags);
  
#line 1031 
  return;
}


#line 1034  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_98(spinlock_t *ldv_func_arg1)
{
  
#line 1038 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1040 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1041 
  return;
}


#line 1044  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_99(spinlock_t *lock, unsigned long flags)
{
  
#line 1048 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1050 
  spin_unlock_irqrestore(lock,flags);
  
#line 1051 
  return;
}


#line 1054  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_100(spinlock_t *ldv_func_arg1)
{
  
#line 1058 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1060 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1061 
  return;
}


#line 1064  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_101(spinlock_t *lock, unsigned long flags)
{
  
#line 1068 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1070 
  spin_unlock_irqrestore(lock,flags);
  
#line 1071 
  return;
}


#line 1074  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_102(spinlock_t *ldv_func_arg1)
{
  
#line 1078 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1080 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1081 
  return;
}


#line 1084  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_103(spinlock_t *lock, unsigned long flags)
{
  
#line 1088 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1090 
  spin_unlock_irqrestore(lock,flags);
  
#line 1091 
  return;
}


#line 1094  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_104(spinlock_t *ldv_func_arg1)
{
  
#line 1098 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1100 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1101 
  return;
}


#line 1104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags)
{
  
#line 1108 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1110 
  spin_unlock_irqrestore(lock,flags);
  
#line 1111 
  return;
}


#line 1114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1)
{
  
#line 1118 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1120 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1121 
  return;
}


#line 1124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_107(spinlock_t *lock, unsigned long flags)
{
  
#line 1128 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1130 
  spin_unlock_irqrestore(lock,flags);
  
#line 1131 
  return;
}


#line 1134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_108(spinlock_t *ldv_func_arg1)
{
  
#line 1138 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1140 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1141 
  return;
}


#line 1144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags)
{
  
#line 1148 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1150 
  spin_unlock_irqrestore(lock,flags);
  
#line 1151 
  return;
}


#line 1154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static bool ldv_schedule_work_110(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1158 
  tmp = ldv_emg_schedule_work(work);
  
#line 1158 
  __retres = tmp != 0;
  
#line 1158 
  return __retres;
}


#line 1162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_111(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1166 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1166 
  return tmp;
}


#line 1170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static int ldv_register_netdev_112(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1174 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1174 
  return tmp;
}


#line 1178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_free_netdev_113(struct net_device *ldv_func_arg1)
{
  
#line 1182 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1183 
  return;
}


#line 1186  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_unregister_netdev_114(struct net_device *ldv_func_arg1)
{
  
#line 1190 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1191 
  return;
}


#line 1194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_free_netdev_115(struct net_device *ldv_func_arg1)
{
  
#line 1198 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1199 
  return;
}


#line 1202  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_116(spinlock_t *ldv_func_arg1)
{
  
#line 1206 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1208 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1209 
  return;
}


#line 1212  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_117(spinlock_t *lock, unsigned long flags)
{
  
#line 1216 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1218 
  spin_unlock_irqrestore(lock,flags);
  
#line 1219 
  return;
}


#line 1222  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_118(spinlock_t *ldv_func_arg1)
{
  
#line 1226 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1228 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1229 
  return;
}


#line 1232  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_119(spinlock_t *lock, unsigned long flags)
{
  
#line 1236 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1238 
  spin_unlock_irqrestore(lock,flags);
  
#line 1239 
  return;
}


#line 1242  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv___ldv_spin_lock_120(spinlock_t *ldv_func_arg1)
{
  
#line 1246 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1248 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1249 
  return;
}


#line 1252  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_spin_unlock_irqrestore_121(spinlock_t *lock, unsigned long flags)
{
  
#line 1256 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 1258 
  spin_unlock_irqrestore(lock,flags);
  
#line 1259 
  return;
}


#line 1262  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static int ldv___pci_register_driver_122(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1266 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1266 
  return tmp;
}


#line 1270  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_drv.c.aux"
static void ldv_pci_unregister_driver_123(struct pci_driver *ldv_func_arg1)
{
  
#line 1274 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1275 
  return;
}


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 448 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 449 
  return;
}


#line 482 
static void ldv_spin_unlock_irqrestore_76_0(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_78_0(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
static void ldv___ldv_spin_lock_75_0(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_77_0(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_wakeup.h"
int device_set_wakeup_enable(struct device *, bool);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static struct vmxnet3_stat_desc const vmxnet3_tq_dev_stats[11U] = {{.desc = {(char)'T', (char)'x', (char)' ', (char)'Q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'#', (char)'\000'}, .offset = 0}, {.desc = {(char)' ', (char)' ', (char)'T', (char)'S', (char)'O', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'t', (char)'x', (char)'\000'}, .offset = 0}, {.desc = {(char)' ', (char)' ', (char)'T', (char)'S', (char)'O', (char)' ', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)'t', (char)'x', (char)'\000'}, .offset = 8}, {.desc = {(char)' ', (char)' ', (char)'u', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'t', (char)'x', (char)'\000'}, .offset = 16}, {.desc = {(char)' ', (char)' ', (char)'u', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)'t', (char)'x', (char)'\000'}, .offset = 24}, {.desc = {(char)' ', (char)' ', (char)'m', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'t', (char)'x', (char)'\000'}, .offset = 32}, {.desc = {(char)' ', (char)' ', (char)'m', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)'t', (char)'x', (char)'\000'}, .offset = 40}, {.desc = {(char)' ', (char)' ', (char)'b', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'t', (char)'x', (char)'\000'}, .offset = 48}, {.desc = {(char)' ', (char)' ', (char)'b', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)'t', (char)'x', (char)'\000'}, .offset = 56}, {.desc = {(char)' ', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'t', (char)'x', (char)' ', (char)'e', (char)'r', (char)'r', (char)'\000'}, .offset = 64}, {.desc = {(char)' ', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'t', (char)'x', (char)' ', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'}, .offset = 72}};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static struct vmxnet3_stat_desc const vmxnet3_tq_driver_stats[9U] = {{.desc = {(char)' ', (char)' ', (char)'d', (char)'r', (char)'v', (char)' ', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)' ', (char)'t', (char)'x', (char)' ', (char)'t', (char)'o', (char)'t', (char)'a', (char)'l', (char)'\000'}, .offset = 0}, {.desc = {(char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'t', (char)'o', (char)'o', (char)' ', (char)'m', (char)'a', (char)'n', (char)'y', (char)' ', (char)'f', (char)'r', (char)'a', (char)'g', (char)'s', (char)'\000'}, .offset = 8}, {.desc = {(char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'g', (char)'i', (char)'a', (char)'n', (char)'t', (char)' ', (char)'h', (char)'d', (char)'r', (char)'\000'}, .offset = 16}, {.desc = {(char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'h', (char)'d', (char)'r', (char)' ', (char)'e', (char)'r', (char)'r', (char)'\000'}, .offset = 24}, {.desc = {(char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'t', (char)'s', (char)'o', (char)'\000'}, .offset = 32}, {.desc = {(char)' ', (char)' ', (char)'r', (char)'i', (char)'n', (char)'g', (char)' ', (char)'f', (char)'u', (char)'l', (char)'l', (char)'\000'}, .offset = 40}, {.desc = {(char)' ', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'l', (char)'i', (char)'n', (char)'e', (char)'a', (char)'r', (char)'i', (char)'z', (char)'e', (char)'d', (char)'\000'}, .offset = 48}, {.desc = {(char)' ', (char)' ', (char)'h', (char)'d', (char)'r', (char)' ', (char)'c', (char)'l', (char)'o', (char)'n', (char)'e', (char)'d', (char)'\000'}, .offset = 56}, {.desc = {(char)' ', (char)' ', (char)'g', (char)'i', (char)'a', (char)'n', (char)'t', (char)' ', (char)'h', (char)'d', (char)'r', (char)'\000'}, .offset = 64}};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static struct vmxnet3_stat_desc const vmxnet3_rq_dev_stats[11U] = {{.desc = {(char)'R', (char)'x', (char)' ', (char)'Q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'#', (char)'\000'}, .offset = 0}, {.desc = {(char)' ', (char)' ', (char)'L', (char)'R', (char)'O', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'r', (char)'x', (char)'\000'}, .offset = 0}, {.desc = {(char)' ', (char)' ', (char)'L', (char)'R', (char)'O', (char)' ', (char)'b', (char)'y', (char)'t', (char)'e', (char)' ', (char)'r', (char)'x', (char)'\000'}, .offset = 8}, {.desc = {(char)' ', (char)' ', (char)'u', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'r', (char)'x', (char)'\000'}, .offset = 16}, {.desc = {(char)' ', (char)' ', (char)'u', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)'r', (char)'x', (char)'\000'}, .offset = 24}, {.desc = {(char)' ', (char)' ', (char)'m', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'r', (char)'x', (char)'\000'}, .offset = 32}, {.desc = {(char)' ', (char)' ', (char)'m', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)'r', (char)'x', (char)'\000'}, .offset = 40}, {.desc = {(char)' ', (char)' ', (char)'b', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'r', (char)'x', (char)'\000'}, .offset = 48}, {.desc = {(char)' ', (char)' ', (char)'b', (char)'c', (char)'a', (char)'s', (char)'t', (char)' ', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)'r', (char)'x', (char)'\000'}, .offset = 56}, {.desc = {(char)' ', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'r', (char)'x', (char)' ', (char)'O', (char)'O', (char)'B', (char)'\000'}, .offset = 64}, {.desc = {(char)' ', (char)' ', (char)'p', (char)'k', (char)'t', (char)'s', (char)' ', (char)'r', (char)'x', (char)' ', (char)'e', (char)'r', (char)'r', (char)'\000'}, .offset = 72}};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static struct vmxnet3_stat_desc const vmxnet3_rq_driver_stats[4U] = {{.desc = {(char)' ', (char)' ', (char)'d', (char)'r', (char)'v', (char)' ', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)' ', (char)'r', (char)'x', (char)' ', (char)'t', (char)'o', (char)'t', (char)'a', (char)'l', (char)'\000'}, .offset = 0}, {.desc = {(char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'e', (char)'r', (char)'r', (char)'\000'}, .offset = 8}, {.desc = {(char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'f', (char)'c', (char)'s', (char)'\000'}, .offset = 16}, {.desc = {(char)' ', (char)' ', (char)'r', (char)'x', (char)' ', (char)'b', (char)'u', (char)'f', (char)' ', (char)'a', (char)'l', (char)'l', (char)'o', (char)'c', (char)' ', (char)'f', (char)'a', (char)'i', (char)'l', (char)'\000'}, .offset = 24}};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static struct vmxnet3_stat_desc const vmxnet3_global_stats[1U] = {{.desc = {(char)'t', (char)'x', (char)' ', (char)'t', (char)'i', (char)'m', (char)'e', (char)'o', (char)'u', (char)'t', (char)' ', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'\000'}, .offset = 7560}};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
struct rtnl_link_stats64 *vmxnet3_get_stats64(struct net_device *netdev, struct rtnl_link_stats64 *stats)
{
  struct vmxnet3_adapter *adapter;
  struct vmxnet3_tq_driver_stats *drvTxStats;
  struct vmxnet3_rq_driver_stats *drvRxStats;
  struct UPT1_TxStats *devTxStats;
  struct UPT1_RxStats *devRxStats;
  unsigned long flags;
  int i;
  
#line 128 
  adapter = (struct vmxnet3_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 131 
  ldv___ldv_spin_lock_75_0(& adapter->cmd_lock);
  
#line 132 
  writel(4027383809U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 133 
  ldv_spin_unlock_irqrestore_76_0(& adapter->cmd_lock,flags);
  
#line 135 
  i = 0;
  
#line 135 
  goto ldv_51467;
  ldv_51466: 
#line 136 
  ;
  
#line 136 
  devTxStats = & (adapter->tqd_start + i)->stats;
  
#line 137 
  drvTxStats = & adapter->tx_queue[i].stats;
  
#line 138 
  stats->tx_packets += (devTxStats->ucastPktsTxOK + devTxStats->mcastPktsTxOK) + devTxStats->bcastPktsTxOK;
  
#line 141 
  stats->tx_bytes += (devTxStats->ucastBytesTxOK + devTxStats->mcastBytesTxOK) + devTxStats->bcastBytesTxOK;
  
#line 144 
  stats->tx_errors += devTxStats->pktsTxError;
  
#line 145 
  stats->tx_dropped += drvTxStats->drop_total;
  
#line 135 
  i += 1;
  ldv_51467: 
#line 136 
  ;
  
#line 135 
  if (adapter->num_tx_queues > (unsigned int)i) 
#line 137 
                                                goto ldv_51466; else 
                                                                  
#line 140 
                                                                  goto ldv_51468;
  ldv_51468: 
#line 141 
  ;
  
#line 148 
  i = 0;
  
#line 148 
  goto ldv_51470;
  ldv_51469: 
#line 149 
  ;
  
#line 149 
  devRxStats = & (adapter->rqd_start + i)->stats;
  
#line 150 
  drvRxStats = & adapter->rx_queue[i].stats;
  
#line 151 
  stats->rx_packets += (devRxStats->ucastPktsRxOK + devRxStats->mcastPktsRxOK) + devRxStats->bcastPktsRxOK;
  
#line 155 
  stats->rx_bytes += (devRxStats->ucastBytesRxOK + devRxStats->mcastBytesRxOK) + devRxStats->bcastBytesRxOK;
  
#line 159 
  stats->rx_errors += devRxStats->pktsRxError;
  
#line 160 
  stats->rx_dropped += drvRxStats->drop_total;
  
#line 161 
  stats->multicast += devRxStats->mcastPktsRxOK;
  
#line 148 
  i += 1;
  ldv_51470: 
#line 149 
  ;
  
#line 148 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 150 
                                                goto ldv_51469; else 
                                                                  
#line 153 
                                                                  goto ldv_51471;
  ldv_51471: 
#line 154 
  ;
  
#line 164 
  return stats;
}


#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static int vmxnet3_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  
#line 170 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 171 
  switch (sset) {
    case 1: 
#line 172 
    ;
    
#line 178 
    __retres = (int)((adapter->num_tx_queues * 20U + adapter->num_rx_queues * 15U) + 1U);
    
#line 178 
    goto return_label;
    default: 
#line 180 
    ;
    
#line 181 
    __retres = -95;
    
#line 181 
    goto return_label;
  }
  return_label: 
#line 171 
                return __retres;
}


#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static int vmxnet3_get_regs_len(struct net_device *netdev)
{
  int __retres;
  
#line 193 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 194 
  __retres = (int)(((unsigned long)(adapter->num_tx_queues * 8U) + (unsigned long)(adapter->num_rx_queues * 12U)) * (unsigned long)4U);
  
#line 194 
  return __retres;
}


#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static void vmxnet3_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *drvinfo)
{
  char const *tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 202 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 204 
  strlcpy((char *)(& drvinfo->driver),(char const *)(& vmxnet3_driver_name),32UL);
  
#line 206 
  strlcpy((char *)(& drvinfo->version),"1.4.2.0-k",32UL);
  
#line 209 
  tmp_0 = pci_name((struct pci_dev const *)adapter->pdev);
  
#line 209 
  ;
  
#line 209 
  strlcpy((char *)(& drvinfo->bus_info),tmp_0,32UL);
  
#line 211 
  tmp_1 = vmxnet3_get_sset_count(netdev,1);
  
#line 211 
  drvinfo->n_stats = (unsigned int)tmp_1;
  
#line 212 
  drvinfo->testinfo_len = 0U;
  
#line 213 
  drvinfo->eedump_len = 0U;
  
#line 214 
  tmp_2 = vmxnet3_get_regs_len(netdev);
  
#line 214 
  drvinfo->regdump_len = (unsigned int)tmp_2;
  
#line 215 
  return;
}


#line 219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static void vmxnet3_get_strings(struct net_device *netdev, u32 stringset, u8 *buf)
{
  
#line 221 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 222 
  if (stringset == 1U) {
    int i;
    int j;
    
#line 224 
    j = 0;
    
#line 224 
    goto ldv_51524;
    ldv_51523: 
#line 225 
    ;
    
#line 225 
    i = 0;
    
#line 225 
    goto ldv_51515;
    ldv_51514: 
#line 226 
    ;
    
#line 226 
    memcpy((void *)buf,(void const *)(& vmxnet3_tq_dev_stats[i].desc),32UL);
    
#line 228 
    buf += 32U;
    
#line 225 
    i += 1;
    ldv_51515: 
#line 226 
    ;
    
#line 225 
    if ((unsigned int)i <= 10U) 
#line 227 
                                goto ldv_51514; else 
#line 230 
                                                     goto ldv_51516;
    ldv_51516: 
#line 231 
    ;
    
#line 230 
    i = 0;
    
#line 230 
    goto ldv_51521;
    ldv_51520: 
#line 231 
    ;
    
#line 232 
    memcpy((void *)buf,(void const *)(& vmxnet3_tq_driver_stats[i].desc),32UL);
    
#line 234 
    buf += 32U;
    
#line 231 
    i += 1;
    ldv_51521: 
#line 232 
    ;
    
#line 230 
    if ((unsigned int)i <= 8U) 
#line 232 
                               goto ldv_51520; else 
#line 235 
                                                    goto ldv_51522;
    ldv_51522: 
#line 236 
    ;
    
#line 224 
    j += 1;
    ldv_51524: 
#line 225 
    ;
    
#line 224 
    if (adapter->num_tx_queues > (unsigned int)j) 
#line 226 
                                                  goto ldv_51523; else 
                                                                    
#line 229 
                                                                    goto ldv_51525;
    ldv_51525: 
#line 230 
    ;
    
#line 238 
    j = 0;
    
#line 238 
    goto ldv_51539;
    ldv_51538: 
#line 239 
    ;
    
#line 239 
    i = 0;
    
#line 239 
    goto ldv_51530;
    ldv_51529: 
#line 240 
    ;
    
#line 240 
    memcpy((void *)buf,(void const *)(& vmxnet3_rq_dev_stats[i].desc),32UL);
    
#line 242 
    buf += 32U;
    
#line 239 
    i += 1;
    ldv_51530: 
#line 240 
    ;
    
#line 239 
    if ((unsigned int)i <= 10U) 
#line 241 
                                goto ldv_51529; else 
#line 244 
                                                     goto ldv_51531;
    ldv_51531: 
#line 245 
    ;
    
#line 244 
    i = 0;
    
#line 244 
    goto ldv_51536;
    ldv_51535: 
#line 245 
    ;
    
#line 246 
    memcpy((void *)buf,(void const *)(& vmxnet3_rq_driver_stats[i].desc),32UL);
    
#line 248 
    buf += 32U;
    
#line 245 
    i += 1;
    ldv_51536: 
#line 246 
    ;
    
#line 244 
    if ((unsigned int)i <= 3U) 
#line 246 
                               goto ldv_51535; else 
#line 249 
                                                    goto ldv_51537;
    ldv_51537: 
#line 250 
    ;
    
#line 238 
    j += 1;
    ldv_51539: 
#line 239 
    ;
    
#line 238 
    if (adapter->num_rx_queues > (unsigned int)j) 
#line 240 
                                                  goto ldv_51538; else 
                                                                    
#line 243 
                                                                    goto ldv_51540;
    ldv_51540: 
#line 244 
    ;
    
#line 252 
    i = 0;
    
#line 252 
    goto ldv_51545;
    ldv_51544: 
#line 253 
    ;
    
#line 253 
    memcpy((void *)buf,(void const *)(& vmxnet3_global_stats[i].desc),32UL);
    
#line 255 
    buf += 32U;
    
#line 252 
    i += 1;
    ldv_51545: 
#line 253 
    ;
    
#line 252 
    if (i == 0) 
#line 254 
                goto ldv_51544; else 
#line 257 
                                     goto ldv_51546;
    ldv_51546: 
#line 258 
    ;
  }
  else ;
  
#line 260 
  return;
}


#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
int vmxnet3_set_features(struct net_device *netdev, netdev_features_t features)
{
  int __retres;
  unsigned long flags;
  
#line 262 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 264 
  netdev_features_t changed = netdev->features ^ features;
  
#line 266 
  if ((changed & 17179902208ULL) != 0ULL) {
    
#line 268 
    if ((features & 17179869184ULL) != 0ULL) 
#line 269 
                                             (adapter->shared)->devRead.misc.uptFeatures |= 1ULL; else 
                                                                    
#line 272 
                                                                    (adapter->shared)->devRead.misc.uptFeatures &= 18446744073709551614ULL;
    
#line 276 
    if ((features & 32768ULL) != 0ULL) 
#line 277 
                                       (adapter->shared)->devRead.misc.uptFeatures |= 8ULL; else 
                                                                    
#line 280 
                                                                    (adapter->shared)->devRead.misc.uptFeatures &= 18446744073709551607ULL;
    
#line 283 
    if ((features & 256ULL) != 0ULL) 
#line 284 
                                     (adapter->shared)->devRead.misc.uptFeatures |= 4ULL; else 
                                                                    
#line 287 
                                                                    (adapter->shared)->devRead.misc.uptFeatures &= 18446744073709551611ULL;
    
#line 290 
    ldv___ldv_spin_lock_77_0(& adapter->cmd_lock);
    
#line 291 
    writel(3405643785U,(void volatile *)(adapter->hw_addr1 + 32U));
    
#line 293 
    ldv_spin_unlock_irqrestore_78_0(& adapter->cmd_lock,flags);
  }
  else ;
  
#line 295 
  __retres = 0;
  
#line 295 
  return __retres;
}


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static void vmxnet3_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *buf)
{
  unsigned long flags;
  u8 *base;
  int i;
  u64 *tmp_6;
  
#line 302 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 306 
  int j = 0;
  
#line 308 
  ldv___ldv_spin_lock_79(& adapter->cmd_lock);
  
#line 309 
  writel(4027383809U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 310 
  ldv_spin_unlock_irqrestore_80(& adapter->cmd_lock,flags);
  
#line 313 
  j = 0;
  
#line 313 
  goto ldv_51577;
  ldv_51576: 
#line 314 
  ;
  {
    u64 *tmp_0;
    u64 *tmp_1;
    u64 *tmp_2;
    
#line 314 
    base = (u8 *)(& (adapter->tqd_start + j)->stats);
    
#line 315 
    tmp_0 = buf;
    
#line 315 
    buf += 1;
    
#line 315 
    *tmp_0 = (unsigned long long)j;
    
#line 316 
    i = 1;
    
#line 316 
    goto ldv_51568;
    ldv_51567: 
#line 317 
    ;
    
#line 317 
    tmp_1 = buf;
    
#line 317 
    buf += 1;
    
#line 317 
    *tmp_1 = *((u64 *)(base + vmxnet3_tq_dev_stats[i].offset));
    
#line 316 
    i += 1;
    ldv_51568: 
#line 317 
    ;
    
#line 316 
    if ((unsigned int)i <= 10U) 
#line 318 
                                goto ldv_51567; else 
#line 321 
                                                     goto ldv_51569;
    ldv_51569: 
#line 322 
    ;
    
#line 320 
    base = (u8 *)(& adapter->tx_queue[j].stats);
    
#line 321 
    i = 0;
    
#line 321 
    goto ldv_51574;
    ldv_51573: 
#line 322 
    ;
    
#line 322 
    tmp_2 = buf;
    
#line 322 
    buf += 1;
    
#line 322 
    *tmp_2 = *((u64 *)(base + vmxnet3_tq_driver_stats[i].offset));
    
#line 321 
    i += 1;
    ldv_51574: 
#line 322 
    ;
    
#line 321 
    if ((unsigned int)i <= 8U) 
#line 323 
                               goto ldv_51573; else 
#line 326 
                                                    goto ldv_51575;
    ldv_51575: 
#line 327 
    ;
  }
  
#line 313 
  j += 1;
  ldv_51577: 
#line 314 
  ;
  
#line 313 
  if (adapter->num_tx_queues > (unsigned int)j) 
#line 315 
                                                goto ldv_51576; else 
                                                                  
#line 318 
                                                                  goto ldv_51578;
  ldv_51578: 
#line 319 
  ;
  
#line 326 
  j = 0;
  
#line 326 
  goto ldv_51592;
  ldv_51591: 
#line 327 
  ;
  {
    u64 *tmp_3;
    u64 *tmp_4;
    u64 *tmp_5;
    
#line 327 
    base = (u8 *)(& (adapter->rqd_start + j)->stats);
    
#line 328 
    tmp_3 = buf;
    
#line 328 
    buf += 1;
    
#line 328 
    *tmp_3 = (unsigned long long)j;
    
#line 329 
    i = 1;
    
#line 329 
    goto ldv_51583;
    ldv_51582: 
#line 330 
    ;
    
#line 330 
    tmp_4 = buf;
    
#line 330 
    buf += 1;
    
#line 330 
    *tmp_4 = *((u64 *)(base + vmxnet3_rq_dev_stats[i].offset));
    
#line 329 
    i += 1;
    ldv_51583: 
#line 330 
    ;
    
#line 329 
    if ((unsigned int)i <= 10U) 
#line 331 
                                goto ldv_51582; else 
#line 334 
                                                     goto ldv_51584;
    ldv_51584: 
#line 335 
    ;
    
#line 333 
    base = (u8 *)(& adapter->rx_queue[j].stats);
    
#line 334 
    i = 0;
    
#line 334 
    goto ldv_51589;
    ldv_51588: 
#line 335 
    ;
    
#line 335 
    tmp_5 = buf;
    
#line 335 
    buf += 1;
    
#line 335 
    *tmp_5 = *((u64 *)(base + vmxnet3_rq_driver_stats[i].offset));
    
#line 334 
    i += 1;
    ldv_51589: 
#line 335 
    ;
    
#line 334 
    if ((unsigned int)i <= 3U) 
#line 336 
                               goto ldv_51588; else 
#line 339 
                                                    goto ldv_51590;
    ldv_51590: 
#line 340 
    ;
  }
  
#line 326 
  j += 1;
  ldv_51592: 
#line 327 
  ;
  
#line 326 
  if (adapter->num_rx_queues > (unsigned int)j) 
#line 328 
                                                goto ldv_51591; else 
                                                                  
#line 331 
                                                                  goto ldv_51593;
  ldv_51593: 
#line 332 
  ;
  
#line 339 
  base = (u8 *)adapter;
  
#line 340 
  i = 0;
  
#line 340 
  goto ldv_51598;
  ldv_51597: 
#line 341 
  ;
  
#line 341 
  tmp_6 = buf;
  
#line 341 
  buf += 1;
  
#line 341 
  *tmp_6 = *((u64 *)(base + vmxnet3_global_stats[i].offset));
  
#line 340 
  i += 1;
  ldv_51598: 
#line 341 
  ;
  
#line 340 
  if (i == 0) 
#line 342 
              goto ldv_51597; else 
#line 345 
                                   goto ldv_51599;
  ldv_51599: 
#line 346 
  ;
  
#line 347 
  return;
}


#line 346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static void vmxnet3_get_regs(struct net_device *netdev, struct ethtool_regs *regs, void *p)
{
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  int tmp_15;
  int tmp_16;
  int tmp_17;
  int tmp_18;
  int tmp_19;
  int tmp_20;
  
#line 348 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 349 
  u32 *buf = (u32 *)p;
  
#line 350 
  int i = 0;
  
#line 350 
  int j = 0;
  
#line 352 
  tmp_0 = vmxnet3_get_regs_len(netdev);
  
#line 352 
  ;
  
#line 352 
  memset(p,0,(unsigned long)tmp_0);
  
#line 354 
  regs->version = 1U;
  
#line 359 
  i = 0;
  
#line 359 
  goto ldv_51610;
  ldv_51609: 
#line 360 
  ;
  
#line 360 
  tmp_1 = j;
  
#line 360 
  j += 1;
  
#line 360 
  *(buf + tmp_1) = adapter->tx_queue[i].tx_ring.next2fill;
  
#line 361 
  tmp_2 = j;
  
#line 361 
  j += 1;
  
#line 361 
  *(buf + tmp_2) = adapter->tx_queue[i].tx_ring.next2comp;
  
#line 362 
  tmp_3 = j;
  
#line 362 
  j += 1;
  
#line 362 
  *(buf + tmp_3) = (unsigned int)adapter->tx_queue[i].tx_ring.gen;
  
#line 363 
  tmp_4 = j;
  
#line 363 
  j += 1;
  
#line 363 
  *(buf + tmp_4) = 0U;
  
#line 365 
  tmp_5 = j;
  
#line 365 
  j += 1;
  
#line 365 
  *(buf + tmp_5) = adapter->tx_queue[i].comp_ring.next2proc;
  
#line 366 
  tmp_6 = j;
  
#line 366 
  j += 1;
  
#line 366 
  *(buf + tmp_6) = (unsigned int)adapter->tx_queue[i].comp_ring.gen;
  
#line 367 
  tmp_7 = j;
  
#line 367 
  j += 1;
  
#line 367 
  *(buf + tmp_7) = (unsigned int)adapter->tx_queue[i].stopped;
  
#line 368 
  tmp_8 = j;
  
#line 368 
  j += 1;
  
#line 368 
  *(buf + tmp_8) = 0U;
  
#line 359 
  i += 1;
  ldv_51610: 
#line 360 
  ;
  
#line 359 
  if (adapter->num_tx_queues > (unsigned int)i) 
#line 361 
                                                goto ldv_51609; else 
                                                                  
#line 364 
                                                                  goto ldv_51611;
  ldv_51611: 
#line 365 
  ;
  
#line 371 
  i = 0;
  
#line 371 
  goto ldv_51613;
  ldv_51612: 
#line 372 
  ;
  
#line 372 
  tmp_9 = j;
  
#line 372 
  j += 1;
  
#line 372 
  *(buf + tmp_9) = adapter->rx_queue[i].rx_ring[0].next2fill;
  
#line 373 
  tmp_10 = j;
  
#line 373 
  j += 1;
  
#line 373 
  *(buf + tmp_10) = adapter->rx_queue[i].rx_ring[0].next2comp;
  
#line 374 
  tmp_11 = j;
  
#line 374 
  j += 1;
  
#line 374 
  *(buf + tmp_11) = (unsigned int)adapter->rx_queue[i].rx_ring[0].gen;
  
#line 375 
  tmp_12 = j;
  
#line 375 
  j += 1;
  
#line 375 
  *(buf + tmp_12) = 0U;
  
#line 377 
  tmp_13 = j;
  
#line 377 
  j += 1;
  
#line 377 
  *(buf + tmp_13) = adapter->rx_queue[i].rx_ring[1].next2fill;
  
#line 378 
  tmp_14 = j;
  
#line 378 
  j += 1;
  
#line 378 
  *(buf + tmp_14) = adapter->rx_queue[i].rx_ring[1].next2comp;
  
#line 379 
  tmp_15 = j;
  
#line 379 
  j += 1;
  
#line 379 
  *(buf + tmp_15) = (unsigned int)adapter->rx_queue[i].rx_ring[1].gen;
  
#line 380 
  tmp_16 = j;
  
#line 380 
  j += 1;
  
#line 380 
  *(buf + tmp_16) = 0U;
  
#line 382 
  tmp_17 = j;
  
#line 382 
  j += 1;
  
#line 382 
  *(buf + tmp_17) = adapter->rx_queue[i].comp_ring.next2proc;
  
#line 383 
  tmp_18 = j;
  
#line 383 
  j += 1;
  
#line 383 
  *(buf + tmp_18) = (unsigned int)adapter->rx_queue[i].comp_ring.gen;
  
#line 384 
  tmp_19 = j;
  
#line 384 
  j += 1;
  
#line 384 
  *(buf + tmp_19) = 0U;
  
#line 385 
  tmp_20 = j;
  
#line 385 
  j += 1;
  
#line 385 
  *(buf + tmp_20) = 0U;
  
#line 371 
  i += 1;
  ldv_51613: 
#line 372 
  ;
  
#line 371 
  if (adapter->num_rx_queues > (unsigned int)i) 
#line 373 
                                                goto ldv_51612; else 
                                                                  
#line 376 
                                                                  goto ldv_51614;
  ldv_51614: 
#line 377 
  ;
  
#line 378 
  return;
}


#line 392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static void vmxnet3_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  
#line 394 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 396 
  wol->supported = 50U;
  
#line 397 
  wol->wolopts = adapter->wol;
  
#line 398 
  return;
}


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static int vmxnet3_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  int __retres;
  
#line 404 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 406 
  if ((wol->wolopts & 77U) != 0U) {
    
#line 408 
    __retres = -95;
    
#line 408 
    goto return_label;
  }
  else ;
  
#line 411 
  adapter->wol = wol->wolopts;
  
#line 413 
  device_set_wakeup_enable(& (adapter->pdev)->dev,(_Bool)(adapter->wol != 0U));
  
#line 415 
  __retres = 0;
  return_label: 
#line 415 
                return __retres;
}


#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static int vmxnet3_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
{
  int __retres;
  
#line 422 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 424 
  ecmd->supported = 4256U;
  
#line 426 
  ecmd->advertising = 128U;
  
#line 427 
  ecmd->port = (unsigned char)0U;
  
#line 428 
  ecmd->transceiver = (unsigned char)0U;
  
#line 430 
  if (adapter->link_speed != 0U) {
    
#line 431 
    ethtool_cmd_speed_set(ecmd,adapter->link_speed);
    
#line 432 
    ecmd->duplex = (unsigned char)1U;
  }
  else {
    
#line 434 
    ethtool_cmd_speed_set(ecmd,4294967295U);
    
#line 435 
    ecmd->duplex = (unsigned char)255U;
  }
  
#line 437 
  __retres = 0;
  
#line 437 
  return __retres;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static void vmxnet3_get_ringparam(struct net_device *netdev, struct ethtool_ringparam *param)
{
  
#line 445 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 447 
  param->rx_max_pending = 4096U;
  
#line 448 
  param->tx_max_pending = 4096U;
  
#line 449 
  param->rx_mini_max_pending = 0U;
  
#line 450 
  param->rx_jumbo_max_pending = 2048U;
  
#line 452 
  param->rx_pending = adapter->rx_ring_size;
  
#line 453 
  param->tx_pending = adapter->tx_ring_size;
  
#line 454 
  param->rx_mini_pending = 0U;
  
#line 455 
  param->rx_jumbo_pending = adapter->rx_ring2_size;
  
#line 456 
  return;
}


#line 460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static int vmxnet3_set_ringparam(struct net_device *netdev, struct ethtool_ringparam *param)
{
  int __retres;
  u32 new_tx_ring_size;
  u32 new_rx_ring_size;
  u32 new_rx_ring2_size;
  u32 sz;
  u32 tmp_1;
  u32 tmp_3;
  u32 tmp_5;
  int tmp_6;
  bool tmp_7;
  
#line 463 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 466 
  int err = 0;
  
#line 468 
  if (param->tx_pending + 4294967295U > 4095U) {
    
#line 470 
    __retres = -22;
    
#line 470 
    goto return_label;
  }
  else ;
  
#line 472 
  if (param->rx_pending + 4294967295U > 4095U) {
    
#line 474 
    __retres = -22;
    
#line 474 
    goto return_label;
  }
  else ;
  
#line 476 
  if (param->rx_jumbo_pending + 4294967295U > 2047U) {
    
#line 478 
    __retres = -22;
    
#line 478 
    goto return_label;
  }
  else ;
  
#line 481 
  if (adapter->rx_buf_per_pkt == 0) {
    
#line 482 
    netdev_err((struct net_device const *)netdev,"adapter not completely initialized, ");
    
#line 484 
    __retres = -95;
    
#line 484 
    goto return_label;
  }
  else ;
  
#line 488 
  new_tx_ring_size = (param->tx_pending + 31U) & 4294967264U;
  {
    u32 tmp_0;
    
#line 490 
    u32 __min1 = new_tx_ring_size;
    
#line 490 
    u32 __min2 = 4096U;
    
#line 490 
    if (__min1 < __min2) 
#line 490 
                         tmp_0 = __min1; else 
#line 490 
                                              tmp_0 = __min2;
    
#line 490 
    tmp_1 = tmp_0;
  }
  
#line 490 
  new_tx_ring_size = tmp_1;
  
#line 492 
  if (new_tx_ring_size > 4096U || (new_tx_ring_size & 31U) != 0U) {
    
#line 494 
    __retres = -22;
    
#line 494 
    goto return_label;
  }
  else ;
  
#line 499 
  sz = (unsigned int)(adapter->rx_buf_per_pkt * 32);
  
#line 500 
  new_rx_ring_size = (((param->rx_pending + sz) + 4294967295U) / sz) * sz;
  {
    u32 tmp_2;
    
#line 501 
    u32 __min1_0 = new_rx_ring_size;
    
#line 501 
    u32 __min2_0 = (4096U / sz) * sz;
    
#line 501 
    if (__min1_0 < __min2_0) 
#line 501 
                             tmp_2 = __min1_0; else 
#line 501 
                                                    tmp_2 = __min2_0;
    
#line 501 
    tmp_3 = tmp_2;
  }
  
#line 501 
  new_rx_ring_size = tmp_3;
  
#line 503 
  if (new_rx_ring_size > 4096U || new_rx_ring_size % sz != 0U) {
    
#line 505 
    __retres = -22;
    
#line 505 
    goto return_label;
  }
  else ;
  
#line 508 
  new_rx_ring2_size = (param->rx_jumbo_pending + 31U) & 4294967264U;
  {
    u32 tmp_4;
    
#line 510 
    u32 __min1_1 = new_rx_ring2_size;
    
#line 510 
    u32 __min2_1 = 2048U;
    
#line 510 
    if (__min1_1 < __min2_1) 
#line 510 
                             tmp_4 = __min1_1; else 
#line 510 
                                                    tmp_4 = __min2_1;
    
#line 510 
    tmp_5 = tmp_4;
  }
  
#line 510 
  new_rx_ring2_size = tmp_5;
  
#line 513 
  if ((adapter->tx_ring_size == new_tx_ring_size && adapter->rx_ring_size == new_rx_ring_size) && adapter->rx_ring2_size == new_rx_ring2_size) {
    
#line 516 
    __retres = 0;
    
#line 516 
    goto return_label;
  }
  else ;
  
#line 523 
  goto ldv_51655;
  ldv_51654: 
#line 524 
  ;
  
#line 524 
  msleep(1U);
  ldv_51655: 
#line 525 
  ;
  
#line 523 
  tmp_6 = test_and_set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 523 
  if (tmp_6 != 0) 
#line 525 
                  goto ldv_51654; else 
#line 528 
                                       goto ldv_51656;
  ldv_51656: 
#line 529 
  ;
  
#line 526 
  tmp_7 = netif_running((struct net_device const *)netdev);
  
#line 526 
  if ((int)tmp_7 != 0) {
    
#line 527 
    vmxnet3_quiesce_dev(adapter);
    
#line 528 
    vmxnet3_reset_dev(adapter);
    
#line 532 
    vmxnet3_tq_destroy_all(adapter);
    
#line 533 
    vmxnet3_rq_destroy_all(adapter);
    
#line 535 
    err = vmxnet3_create_queues(adapter,new_tx_ring_size,new_rx_ring_size,new_rx_ring2_size);
    
#line 538 
    if (err != 0) {
      
#line 541 
      netdev_err((struct net_device const *)netdev,"failed to apply new sizes, ");
      
#line 543 
      new_rx_ring_size = 256U;
      
#line 544 
      new_rx_ring2_size = 128U;
      
#line 545 
      new_tx_ring_size = 512U;
      
#line 546 
      err = vmxnet3_create_queues(adapter,new_tx_ring_size,new_rx_ring_size,new_rx_ring2_size);
      
#line 550 
      if (err != 0) {
        
#line 551 
        netdev_err((struct net_device const *)netdev,"failed to create queues ");
        
#line 553 
        goto out;
      }
      else ;
    }
    else ;
    
#line 557 
    err = vmxnet3_activate_dev(adapter);
    
#line 558 
    if (err != 0) 
#line 559 
                  netdev_err((struct net_device const *)netdev,"failed to re-activate, error %d.",err); else ;
  }
  else ;
  
#line 562 
  adapter->tx_ring_size = new_tx_ring_size;
  
#line 563 
  adapter->rx_ring_size = new_rx_ring_size;
  
#line 564 
  adapter->rx_ring2_size = new_rx_ring2_size;
  out: 
#line 566 
  ;
  
#line 567 
  set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 568 
  if (err != 0) 
#line 569 
                vmxnet3_force_close(adapter); else ;
  
#line 571 
  __retres = err;
  return_label: 
#line 571 
                return __retres;
}


#line 576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static int vmxnet3_get_rxnfc(struct net_device *netdev, struct ethtool_rxnfc *info, u32 *rules)
{
  int __retres;
  
#line 579 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 580 
  switch (info->cmd) {
    case (__u32)45: 
#line 581 
    ;
    
#line 582 
    info->data = (unsigned long long)adapter->num_rx_queues;
    
#line 583 
    __retres = 0;
    
#line 583 
    goto return_label;
  }
  
#line 585 
  __retres = -95;
  return_label: 
#line 585 
                return __retres;
}


#line 590  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static u32 vmxnet3_get_rss_indir_size(struct net_device *netdev)
{
  u32 __retres;
  
#line 592 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 593 
  struct UPT1_RSSConf *rssConf = adapter->rss_conf;
  
#line 595 
  __retres = (unsigned int)rssConf->indTableSize;
  
#line 595 
  return __retres;
}


#line 599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static int vmxnet3_get_rss(struct net_device *netdev, u32 *p, u8 *key, u8 *hfunc)
{
  int __retres;
  unsigned int tmp_0;
  
#line 601 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 602 
  struct UPT1_RSSConf *rssConf = adapter->rss_conf;
  
#line 603 
  unsigned int n = (unsigned int)rssConf->indTableSize;
  
#line 605 
  if (hfunc != (u8 *)0U) 
#line 606 
                         *hfunc = (unsigned char)1U; else ;
  
#line 607 
  if (p == (u32 *)0U) {
    
#line 608 
    __retres = 0;
    
#line 608 
    goto return_label;
  }
  else ;
  
#line 609 
  goto ldv_51680;
  ldv_51679: 
#line 610 
  ;
  
#line 610 
  *(p + n) = (unsigned int)rssConf->indTable[n];
  ldv_51680: 
#line 611 
  ;
  
#line 609 
  tmp_0 = n;
  
#line 609 
  n -= 1U;
  
#line 609 
  ;
  
#line 609 
  if (tmp_0 != 0U) 
#line 611 
                   goto ldv_51679; else 
#line 614 
                                        goto ldv_51681;
  ldv_51681: 
#line 615 
  ;
  
#line 611 
  __retres = 0;
  return_label: 
#line 611 
                return __retres;
}


#line 616  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static int vmxnet3_set_rss(struct net_device *netdev, u32 const *p, u8 const *key, u8 const hfunc)
{
  int __retres;
  unsigned int i;
  unsigned long flags;
  
#line 621 
  struct vmxnet3_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 622 
  struct UPT1_RSSConf *rssConf = adapter->rss_conf;
  
#line 625 
  if (key != (u8 const *)0U || (unsigned int)hfunc > 1U) {
    
#line 627 
    __retres = -95;
    
#line 627 
    goto return_label;
  }
  else ;
  
#line 628 
  if (p == (u32 const *)0U) {
    
#line 629 
    __retres = 0;
    
#line 629 
    goto return_label;
  }
  else ;
  
#line 630 
  i = 0U;
  
#line 630 
  goto ldv_51693;
  ldv_51692: 
#line 631 
  ;
  
#line 631 
  rssConf->indTable[i] = (unsigned char)*(p + i);
  
#line 630 
  i += 1U;
  ldv_51693: 
#line 631 
  ;
  
#line 630 
  if ((unsigned int)rssConf->indTableSize > i) 
#line 632 
                                               goto ldv_51692; else 
#line 635 
                                                                    goto ldv_51694;
  ldv_51694: 
#line 636 
  ;
  
#line 633 
  ldv___ldv_spin_lock_81(& adapter->cmd_lock);
  
#line 634 
  writel(3405643782U,(void volatile *)(adapter->hw_addr1 + 32U));
  
#line 636 
  ldv_spin_unlock_irqrestore_82(& adapter->cmd_lock,flags);
  
#line 638 
  __retres = 0;
  return_label: 
#line 638 
                return __retres;
}


#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
static struct ethtool_ops const vmxnet3_ethtool_ops = {.get_settings = & vmxnet3_get_settings, .set_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .get_drvinfo = & vmxnet3_get_drvinfo, .get_regs_len = & vmxnet3_get_regs_len, .get_regs = & vmxnet3_get_regs, .get_wol = & vmxnet3_get_wol, .set_wol = & vmxnet3_set_wol, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = & vmxnet3_get_ringparam, .set_ringparam = & vmxnet3_set_ringparam, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & vmxnet3_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & vmxnet3_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & vmxnet3_get_sset_count, .get_rxnfc = & vmxnet3_get_rxnfc, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = & vmxnet3_get_rss_indir_size, .get_rxfh = & vmxnet3_get_rss, .set_rxfh = & vmxnet3_set_rss, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 664  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/vmxnet3/vmxnet3_ethtool.c"
void vmxnet3_set_ethtool_ops(struct net_device *netdev)
{
  
#line 666 
  netdev->ethtool_ops = & vmxnet3_ethtool_ops;
  
#line 667 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_3)(struct net_device *) = & ethtool_op_get_link;

#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
void ldv_emg_wrapper_vmxnet3_get_drvinfo_11(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 72 
  vmxnet3_get_drvinfo(arg0,arg1);
  
#line 73 
  return;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
int ldv_emg_wrapper_vmxnet3_get_settings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 77 
  tmp = vmxnet3_get_settings(arg0,arg1);
  
#line 77 
  return tmp;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
void ldv_emg_wrapper_vmxnet3_get_regs_9(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 82 
  vmxnet3_get_regs(arg0,arg1,arg2);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
void ldv_emg_wrapper_vmxnet3_get_ethtool_stats_7(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 87 
  vmxnet3_get_ethtool_stats(arg0,arg1,arg2);
  
#line 88 
  return;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
void ldv_emg_wrapper_vmxnet3_get_ringparam_6(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 92 
  vmxnet3_get_ringparam(arg0,arg1);
  
#line 93 
  return;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
int ldv_emg_wrapper_vmxnet3_get_sset_count_10(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 97 
  tmp = vmxnet3_get_sset_count(arg0,arg1);
  
#line 97 
  return tmp;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
int ldv_emg_wrapper_vmxnet3_set_ringparam_17(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 102 
  tmp = vmxnet3_set_ringparam(arg0,arg1);
  
#line 102 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
unsigned int ldv_emg_wrapper_vmxnet3_get_rss_indir_size_4(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 107 
  tmp = vmxnet3_get_rss_indir_size(arg0);
  
#line 107 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
int ldv_emg_wrapper_vmxnet3_set_rss_16(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char arg3)
{
  int tmp;
  
#line 112 
  tmp = vmxnet3_set_rss(arg0,(u32 const *)arg1,(u8 const *)arg2,(unsigned char)((int)arg3));
  
#line 112 
  return tmp;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
int ldv_emg_wrapper_vmxnet3_get_rxnfc_12(struct net_device *arg0, struct ethtool_rxnfc *arg1, unsigned int *arg2)
{
  int tmp;
  
#line 117 
  tmp = vmxnet3_get_rxnfc(arg0,arg1,arg2);
  
#line 117 
  return tmp;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
int ldv_emg_wrapper_vmxnet3_get_regs_len_15(struct net_device *arg0)
{
  int tmp;
  
#line 122 
  tmp = vmxnet3_get_regs_len(arg0);
  
#line 122 
  return tmp;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
void ldv_emg_wrapper_vmxnet3_get_wol_5(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 127 
  vmxnet3_get_wol(arg0,arg1);
  
#line 128 
  return;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
int ldv_emg_wrapper_vmxnet3_set_wol_8(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 132 
  tmp = vmxnet3_set_wol(arg0,arg1);
  
#line 132 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
void ldv_emg_wrapper_vmxnet3_get_strings_13(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 137 
  vmxnet3_get_strings(arg0,arg1,arg2);
  
#line 138 
  return;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
int ldv_emg_wrapper_vmxnet3_get_rss_14(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char *arg3)
{
  int tmp;
  
#line 142 
  tmp = vmxnet3_get_rss(arg0,arg1,arg2,arg3);
  
#line 142 
  return tmp;
}


#line 847  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
static void ldv___ldv_spin_lock_75_0(spinlock_t *ldv_func_arg1)
{
  
#line 851 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 853 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 854 
  return;
}


#line 857  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_76_0(spinlock_t *lock, unsigned long flags)
{
  
#line 861 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 863 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 864 
  return;
}


#line 867  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
static void ldv___ldv_spin_lock_77_0(spinlock_t *ldv_func_arg1)
{
  
#line 871 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 873 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 874 
  return;
}


#line 877  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_78_0(spinlock_t *lock, unsigned long flags)
{
  
#line 881 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 883 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 884 
  return;
}


#line 887  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1)
{
  
#line 891 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 893 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 894 
  return;
}


#line 897  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags)
{
  
#line 901 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 903 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 904 
  return;
}


#line 907  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1)
{
  
#line 911 
  ldv_spin_model_lock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 913 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 914 
  return;
}


#line 917  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/weaver/.tmp_vmxnet3_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags)
{
  
#line 921 
  ldv_spin_model_unlock((char *)"cmd_lock_of_vmxnet3_adapter");
  
#line 923 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 924 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 71 
int main(void);


#line 72 
void ldv_dispatch_register_9_4(struct net_device *arg0);


#line 74 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 76 
void *ldv_random_allocationless_scenario_17(void *arg0);


#line 78 
void *ldv_interrupt_scenario_16(void *arg0);


#line 80 
void *ldv_pm_ops_scenario_14(void *arg0);


#line 81 
void ldv_dispatch_irq_register_10_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 82 
void *ldv_pci_scenario_11(void *arg0);


#line 83 
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0);


#line 84 
void *ldv_interrupt_scenario_13(void *arg0);


#line 85 
void *ldv_interrupt_scenario_15(void *arg0);


#line 87 
void *ldv_initialization_1(void *arg0);


#line 90 
void ldv_dispatch_register_6_3(struct pci_driver *arg0);


#line 92 
void *ldv_interrupt_scenario_12(void *arg0);


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_17 *cf_arg_17;
  int tmp;
  
#line 109 
  tmp = ldv_undef_int();
  
#line 109 
  switch (tmp) {
    case 0: 
#line 110 
    ;
    
#line 111 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 112 
    __VERIFIER_assume(ret == 0);
    
#line 113 
    goto ldv_44712;
    default: 
#line 115 
    ;
    
#line 115 
    __VERIFIER_assume(0);
  }
  ldv_44712: 
#line 116 
  ;
  
#line 117 
  return;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 124 
  ldv_initialize();
  
#line 127 
  ldv_initialization_1((void *)0);
  
#line 129 
  __retres = 0;
  
#line 129 
  return __retres;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_17 *cf_arg_17;
  int tmp;
  
#line 137 
  tmp = ldv_undef_int();
  
#line 137 
  switch (tmp) {
    case 0: 
#line 138 
    ;
    
#line 139 
    cf_arg_17 = (struct ldv_struct_random_allocationless_scenario_17 *)ldv_xmalloc(16UL);
    
#line 140 
    cf_arg_17->arg0 = arg0;
    
#line 141 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_17,(void *)cf_arg_17);
    
#line 142 
    __VERIFIER_assume(ret == 0);
    
#line 143 
    goto ldv_44723;
    default: 
#line 145 
    ;
    
#line 145 
    __VERIFIER_assume(0);
  }
  ldv_44723: 
#line 146 
  ;
  
#line 147 
  return;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 154 
  struct pci_driver *ldv_6_pci_driver = ldv_emg_alias_vmxnet3_driver_2;
  
#line 158 
  tmp_0 = ldv_undef_int();
  
#line 158 
  if (tmp_0 != 0) {
    
#line 160 
    ldv_6_pci_driver = arg0;
    
#line 164 
    ldv_dispatch_register_6_3(ldv_6_pci_driver);
    
#line 168 
    __retres = 0;
    
#line 168 
    goto return_label;
  }
  else {
    int tmp;
    
#line 175 
    tmp = ldv_undef_int_negative();
    
#line 175 
    __retres = tmp;
    
#line 175 
    goto return_label;
  }
  return_label: 
#line 158 
                return __retres;
}


#line 185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_16;
  struct ldv_struct_free_irq_3 *cf_arg_12;
  struct ldv_struct_free_irq_3 *cf_arg_13;
  struct ldv_struct_free_irq_3 *cf_arg_15;
  int tmp;
  
#line 191 
  tmp = ldv_undef_int();
  
#line 191 
  switch (tmp) {
    case 0: 
#line 192 
    ;
    
#line 193 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 194 
    __VERIFIER_assume(ret == 0);
    
#line 195 
    goto ldv_44740;
    case 1: 
#line 197 
    ;
    
#line 198 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 199 
    __VERIFIER_assume(ret == 0);
    
#line 200 
    goto ldv_44740;
    case 2: 
#line 202 
    ;
    
#line 203 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 204 
    __VERIFIER_assume(ret == 0);
    
#line 205 
    goto ldv_44740;
    case 3: 
#line 207 
    ;
    
#line 208 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 209 
    __VERIFIER_assume(ret == 0);
    
#line 210 
    goto ldv_44740;
    default: 
#line 212 
    ;
    
#line 212 
    __VERIFIER_assume(0);
  }
  ldv_44740: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_4_netdev;
  int tmp_0;
  
#line 225 
  tmp_0 = ldv_undef_int();
  
#line 225 
  if (tmp_0 != 0) {
    
#line 227 
    ldv_4_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 231 
    __retres = ldv_4_netdev;
    
#line 231 
    goto return_label;
  }
  else {
    
#line 238 
    __retres = (struct net_device *)0;
    
#line 238 
    goto return_label;
  }
  return_label: 
#line 225 
                return __retres;
}


#line 248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_17(void *arg0)
{
  void *__retres;
  struct ethtool_wolinfo *ldv_17_ldv_param_1_3;
  int ldv_17_ldv_param_1_10;
  unsigned char *ldv_17_ldv_param_2_17;
  unsigned char *ldv_17_ldv_param_2_15;
  struct ethtool_regs *ldv_17_ldv_param_1_8;
  unsigned char *ldv_17_ldv_param_3_18;
  struct ethtool_cmd *ldv_17_ldv_param_1_2;
  struct ethtool_ringparam *ldv_17_ldv_param_1_4;
  struct ethtool_stats *ldv_17_ldv_param_1_5;
  struct ethtool_drvinfo *ldv_17_ldv_param_1_11;
  unsigned int ldv_17_ldv_param_1_14;
  struct ethtool_ringparam *ldv_17_ldv_param_1_22;
  unsigned char *ldv_17_ldv_param_2_20;
  struct ethtool_rxnfc *ldv_17_ldv_param_1_12;
  unsigned int *ldv_17_ldv_param_1_16;
  struct ethtool_wolinfo *ldv_17_ldv_param_1_7;
  unsigned char ldv_17_ldv_param_3_21;
  unsigned int *ldv_17_ldv_param_1_19;
  unsigned int *ldv_17_ldv_param_2_13;
  unsigned long long *ldv_17_ldv_param_2_6;
  struct net_device *ldv_17_container;
  void *ldv_17_ldv_param_2_9;
  int tmp_17;
  
#line 274 
  struct ldv_struct_random_allocationless_scenario_17 *data = (struct ldv_struct_random_allocationless_scenario_17 *)arg0;
  
#line 279 
  if (data != (struct ldv_struct_random_allocationless_scenario_17 *)0) {
    
#line 280 
    ldv_17_container = data->arg0;
    
#line 281 
    ldv_free((void *)data);
  }
  else ;
  
#line 289 
  goto ldv_call_17;
  
#line 291 
  __retres = (void *)0;
  
#line 291 
  goto return_label;
  ldv_call_17: 
#line 294 
  ;
  
#line 297 
  tmp_17 = ldv_undef_int();
  
#line 297 
  if (tmp_17 != 0) {
    int tmp_0;
    
#line 299 
    ldv_17_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 302 
    tmp_0 = ldv_undef_int();
    
#line 302 
    switch (tmp_0) {
      case 1: 
#line 303 
      ;
      
#line 306 
      ldv_emg_wrapper_vmxnet3_get_settings_2(ldv_17_container,ldv_17_ldv_param_1_2);
      
#line 309 
      goto ldv_44779;
      case 2: 
#line 311 
      ;
      
#line 313 
      ldv_17_ldv_param_1_22 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 318 
      ldv_emg_wrapper_vmxnet3_set_ringparam_17(ldv_17_container,ldv_17_ldv_param_1_22);
      
#line 322 
      ldv_free((void *)ldv_17_ldv_param_1_22);
      
#line 325 
      goto ldv_44779;
      case 3: 
#line 327 
      ;
      
#line 329 
      ldv_17_ldv_param_1_19 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 330 
      ldv_17_ldv_param_2_20 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 335 
      ldv_emg_wrapper_vmxnet3_set_rss_16(ldv_17_container,ldv_17_ldv_param_1_19,ldv_17_ldv_param_2_20,(unsigned char)((int)ldv_17_ldv_param_3_21));
      
#line 339 
      ldv_free((void *)ldv_17_ldv_param_1_19);
      
#line 340 
      ldv_free((void *)ldv_17_ldv_param_2_20);
      
#line 343 
      goto ldv_44779;
      case 4: 
#line 345 
      ;
      
#line 347 
      ldv_17_ldv_param_2_17 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 348 
      ldv_17_ldv_param_3_18 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 349 
      ldv_17_ldv_param_1_16 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 354 
      ldv_emg_wrapper_vmxnet3_get_rss_14(ldv_17_container,ldv_17_ldv_param_1_16,ldv_17_ldv_param_2_17,ldv_17_ldv_param_3_18);
      
#line 358 
      ldv_free((void *)ldv_17_ldv_param_2_17);
      
#line 359 
      ldv_free((void *)ldv_17_ldv_param_3_18);
      
#line 360 
      ldv_free((void *)ldv_17_ldv_param_1_16);
      
#line 363 
      goto ldv_44779;
      case 5: 
#line 365 
      ;
      
#line 368 
      ldv_emg_wrapper_vmxnet3_get_regs_len_15(ldv_17_container);
      
#line 371 
      goto ldv_44779;
      case 6: 
#line 373 
      ;
      
#line 375 
      ldv_17_ldv_param_2_15 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 380 
      ldv_emg_wrapper_vmxnet3_get_strings_13(ldv_17_container,ldv_17_ldv_param_1_14,ldv_17_ldv_param_2_15);
      
#line 384 
      ldv_free((void *)ldv_17_ldv_param_2_15);
      
#line 387 
      goto ldv_44779;
      case 7: 
#line 389 
      ;
      
#line 391 
      ldv_17_ldv_param_1_12 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
      
#line 392 
      ldv_17_ldv_param_2_13 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 397 
      ldv_emg_wrapper_vmxnet3_get_rxnfc_12(ldv_17_container,ldv_17_ldv_param_1_12,ldv_17_ldv_param_2_13);
      
#line 401 
      ldv_free((void *)ldv_17_ldv_param_1_12);
      
#line 402 
      ldv_free((void *)ldv_17_ldv_param_2_13);
      
#line 405 
      goto ldv_44779;
      case 8: 
#line 407 
      ;
      
#line 409 
      ldv_17_ldv_param_1_11 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 414 
      ldv_emg_wrapper_vmxnet3_get_drvinfo_11(ldv_17_container,ldv_17_ldv_param_1_11);
      
#line 418 
      ldv_free((void *)ldv_17_ldv_param_1_11);
      
#line 421 
      goto ldv_44779;
      case 9: 
#line 423 
      ;
      
#line 429 
      ldv_emg_wrapper_vmxnet3_get_sset_count_10(ldv_17_container,ldv_17_ldv_param_1_10);
      
#line 435 
      goto ldv_44779;
      case 10: 
#line 437 
      ;
      
#line 439 
      ldv_17_ldv_param_2_9 = ldv_xmalloc_unknown_size(0UL);
      
#line 440 
      ldv_17_ldv_param_1_8 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 445 
      ldv_emg_wrapper_vmxnet3_get_regs_9(ldv_17_container,ldv_17_ldv_param_1_8,ldv_17_ldv_param_2_9);
      
#line 449 
      ldv_free(ldv_17_ldv_param_2_9);
      
#line 450 
      ldv_free((void *)ldv_17_ldv_param_1_8);
      
#line 453 
      goto ldv_44779;
      case 11: 
#line 455 
      ;
      
#line 457 
      ldv_17_ldv_param_1_7 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 462 
      ldv_emg_wrapper_vmxnet3_set_wol_8(ldv_17_container,ldv_17_ldv_param_1_7);
      
#line 466 
      ldv_free((void *)ldv_17_ldv_param_1_7);
      
#line 469 
      goto ldv_44779;
      case 12: 
#line 471 
      ;
      
#line 473 
      ldv_17_ldv_param_2_6 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 474 
      ldv_17_ldv_param_1_5 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 479 
      ldv_emg_wrapper_vmxnet3_get_ethtool_stats_7(ldv_17_container,ldv_17_ldv_param_1_5,ldv_17_ldv_param_2_6);
      
#line 483 
      ldv_free((void *)ldv_17_ldv_param_2_6);
      
#line 484 
      ldv_free((void *)ldv_17_ldv_param_1_5);
      
#line 487 
      goto ldv_44779;
      case 13: 
#line 489 
      ;
      
#line 491 
      ldv_17_ldv_param_1_4 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 496 
      ldv_emg_wrapper_vmxnet3_get_ringparam_6(ldv_17_container,ldv_17_ldv_param_1_4);
      
#line 500 
      ldv_free((void *)ldv_17_ldv_param_1_4);
      
#line 503 
      goto ldv_44779;
      case 14: 
#line 505 
      ;
      
#line 507 
      ldv_17_ldv_param_1_3 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 512 
      ldv_emg_wrapper_vmxnet3_get_wol_5(ldv_17_container,ldv_17_ldv_param_1_3);
      
#line 516 
      ldv_free((void *)ldv_17_ldv_param_1_3);
      
#line 519 
      goto ldv_44779;
      case 15: 
#line 521 
      ;
      
#line 524 
      ldv_emg_wrapper_vmxnet3_get_rss_indir_size_4(ldv_17_container);
      
#line 527 
      goto ldv_44779;
      case 16: 
#line 529 
      ;
      
#line 532 
      (*ldv_emg_alias_ethtool_op_get_link_3)(ldv_17_container);
      
#line 535 
      goto ldv_44779;
      default: 
#line 537 
      ;
      
#line 537 
      __VERIFIER_assume(0);
    }
    ldv_44779: 
#line 540 
    ;
    
#line 540 
    ldv_free((void *)ldv_17_ldv_param_1_2);
    
#line 547 
    goto ldv_call_17;
  }
  else {
    
#line 555 
    __retres = (void *)0;
    
#line 555 
    goto return_label;
  }
  
#line 558 
  __retres = (void *)0;
  return_label: 
#line 558 
                return __retres;
}


#line 563  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_10_line;
  void *ldv_10_data;
  enum irqreturn (*ldv_10_thread)(int , void *);
  int tmp_0;
  
#line 568 
  enum irqreturn (*ldv_10_callback)(int , void *) = & ldv_emg_wrapper_vmxnet3_msix_tx_2;
  
#line 573 
  tmp_0 = ldv_undef_int();
  
#line 573 
  if (tmp_0 != 0) {
    
#line 575 
    ldv_10_line = (int)arg0;
    
#line 576 
    ldv_10_callback = arg1;
    
#line 577 
    ldv_10_thread = (enum irqreturn (*)(int , void *))0;
    
#line 578 
    ldv_10_data = arg4;
    
#line 582 
    ldv_dispatch_irq_register_10_3(ldv_10_line,ldv_10_callback,ldv_10_thread,ldv_10_data);
    
#line 586 
    __retres = 0;
    
#line 586 
    goto return_label;
  }
  else {
    int tmp;
    
#line 593 
    tmp = ldv_undef_int_negative();
    
#line 593 
    __retres = tmp;
    
#line 593 
    goto return_label;
  }
  return_label: 
#line 573 
                return __retres;
}


#line 603  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_16(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_16_ret_val;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp;
  
#line 609 
  enum irqreturn (*ldv_16_callback)(int , void *) = & ldv_emg_wrapper_vmxnet3_msix_rx_2;
  
#line 612 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 617 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 618 
    ldv_16_line = data->arg0;
    
#line 619 
    ldv_16_callback = data->arg1;
    
#line 620 
    ldv_16_thread = data->arg2;
    
#line 621 
    ldv_16_data = data->arg3;
    
#line 622 
    ldv_free((void *)data);
  }
  else ;
  
#line 628 
  ldv_switch_to_interrupt_context();
  
#line 630 
  ldv_16_ret_val = ldv_emg_wrapper_vmxnet3_msix_rx_2(ldv_16_line,ldv_16_data);
  
#line 632 
  ldv_switch_to_process_context();
  
#line 635 
  tmp = ldv_undef_int();
  
#line 635 
  if (tmp != 0) {
    
#line 637 
    __VERIFIER_assume(ldv_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 641 
    if (ldv_16_thread != (enum irqreturn (*)(int , void *))0) 
#line 643 
                                                              (*ldv_16_thread)(ldv_16_line,ldv_16_data); else ;
  }
  else 
#line 650 
       __VERIFIER_assume(ldv_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 659 
  __retres = (void *)0;
  
#line 659 
  goto return_label;
  
#line 661 
  __retres = (void *)0;
  return_label: 
#line 661 
                return __retres;
}


#line 666  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_7_work_struct;
  int tmp;
  
#line 673 
  tmp = ldv_undef_int();
  
#line 673 
  if (tmp != 0) {
    
#line 675 
    ldv_7_work_struct = arg0;
    
#line 679 
    if (ldv_7_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 681 
      (*(ldv_7_work_struct->func))(ldv_7_work_struct); else ;
    
#line 686 
    __retres = (_Bool)1;
    
#line 686 
    goto return_label;
  }
  else {
    
#line 693 
    __retres = (_Bool)0;
    
#line 693 
    goto return_label;
  }
  return_label: 
#line 673 
                return __retres;
}


#line 703  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_14(void *arg0)
{
  void *__retres;
  struct device *ldv_14_device;
  int tmp;
  
#line 706 
  struct dev_pm_ops *ldv_14_pm_ops = ldv_emg_alias_vmxnet3_pm_ops_3;
  
#line 717 
  goto ldv_do_14;
  
#line 719 
  __retres = (void *)0;
  
#line 719 
  goto return_label;
  ldv_do_14: 
#line 722 
  ;
  
#line 725 
  tmp = ldv_undef_int();
  
#line 725 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 726 
    ;
    
#line 728 
    if (ldv_14_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 730 
                                                                    (*(ldv_14_pm_ops->runtime_idle))(ldv_14_device); else ;
    
#line 738 
    goto ldv_do_14;
    case 2: 
#line 741 
    ;
    
#line 743 
    if (ldv_14_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 745 
      (*(ldv_14_pm_ops->runtime_suspend))(ldv_14_device); else ;
    
#line 750 
    if (ldv_14_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 752 
      (*(ldv_14_pm_ops->runtime_resume))(ldv_14_device); else ;
    
#line 760 
    goto ldv_do_14;
    case 3: 
#line 763 
    ;
    
#line 765 
    if (ldv_14_pm_ops->prepare != (int (*)(struct device *))0) 
#line 767 
                                                               (*(ldv_14_pm_ops->prepare))(ldv_14_device); else ;
    
#line 771 
    tmp_0 = ldv_undef_int();
    
#line 771 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 772 
      ;
      
#line 775 
      ldv_emg_wrapper_vmxnet3_suspend_2(ldv_14_device);
      
#line 778 
      tmp_1 = ldv_undef_int();
      
#line 778 
      if (tmp_1 != 0) {
        
#line 780 
        if (ldv_14_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 782 
          (*(ldv_14_pm_ops->suspend_noirq))(ldv_14_device); else ;
        
#line 787 
        if (ldv_14_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 789 
          (*(ldv_14_pm_ops->resume_noirq))(ldv_14_device); else ;
      }
      else {
        
#line 796 
        if (ldv_14_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 798 
          (*(ldv_14_pm_ops->suspend_late))(ldv_14_device); else ;
        
#line 803 
        if (ldv_14_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 805 
          (*(ldv_14_pm_ops->resume_early))(ldv_14_device); else ;
      }
      
#line 812 
      ldv_emg_wrapper_vmxnet3_resume_4(ldv_14_device);
      
#line 815 
      goto ldv_44840;
      case 2: 
#line 817 
      ;
      
#line 820 
      ldv_emg_wrapper_vmxnet3_suspend_2(ldv_14_device);
      
#line 823 
      tmp_2 = ldv_undef_int();
      
#line 823 
      if (tmp_2 != 0) {
        
#line 825 
        if (ldv_14_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 827 
          (*(ldv_14_pm_ops->freeze_late))(ldv_14_device); else ;
        
#line 832 
        if (ldv_14_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 834 
          (*(ldv_14_pm_ops->thaw_early))(ldv_14_device); else ;
      }
      else {
        
#line 841 
        if (ldv_14_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 843 
          (*(ldv_14_pm_ops->freeze_noirq))(ldv_14_device); else ;
        
#line 848 
        if (ldv_14_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 850 
          (*(ldv_14_pm_ops->thaw_noirq))(ldv_14_device); else ;
      }
      
#line 856 
      if (ldv_14_pm_ops->thaw != (int (*)(struct device *))0) 
#line 858 
                                                              (*(ldv_14_pm_ops->thaw))(ldv_14_device); else ;
      
#line 862 
      goto ldv_44840;
      case 3: 
#line 864 
      ;
      
#line 866 
      if (ldv_14_pm_ops->poweroff != (int (*)(struct device *))0) 
#line 868 
                                                                  (*(ldv_14_pm_ops->poweroff))(ldv_14_device); else ;
      
#line 872 
      tmp_3 = ldv_undef_int();
      
#line 872 
      if (tmp_3 != 0) {
        
#line 874 
        if (ldv_14_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 876 
          (*(ldv_14_pm_ops->poweroff_late))(ldv_14_device); else ;
        
#line 881 
        if (ldv_14_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 883 
          (*(ldv_14_pm_ops->restore_early))(ldv_14_device); else ;
      }
      else {
        
#line 890 
        if (ldv_14_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 892 
          (*(ldv_14_pm_ops->poweroff_noirq))(ldv_14_device); else ;
        
#line 897 
        if (ldv_14_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 899 
          (*(ldv_14_pm_ops->restore_noirq))(ldv_14_device); else ;
      }
      
#line 906 
      ldv_emg_wrapper_vmxnet3_resume_4(ldv_14_device);
      
#line 909 
      goto ldv_44840;
      default: 
#line 911 
      ;
      
#line 911 
      __VERIFIER_assume(0);
    }
    ldv_44840: 
#line 914 
    ;
    
#line 914 
    if (ldv_14_pm_ops->complete != (void (*)(struct device *))0) 
#line 916 
                                                                 (*(ldv_14_pm_ops->complete))(ldv_14_device); else ;
    
#line 924 
    goto ldv_do_14;
    case 4: 
#line 927 
    ;
    
#line 933 
    __retres = (void *)0;
    
#line 933 
    goto return_label;
    default: 
#line 936 
    ;
    
#line 936 
    __VERIFIER_assume(0);
  }
  
#line 939 
  __retres = (void *)0;
  return_label: 
#line 939 
                return __retres;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_10_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_16;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_12;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_13;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_15;
  int tmp;
  
#line 950 
  tmp = ldv_undef_int();
  
#line 950 
  switch (tmp) {
    case 0: 
#line 951 
    ;
    
#line 952 
    cf_arg_16 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 953 
    cf_arg_16->arg0 = arg0;
    
#line 954 
    cf_arg_16->arg1 = arg1;
    
#line 955 
    cf_arg_16->arg2 = arg2;
    
#line 956 
    cf_arg_16->arg3 = arg3;
    
#line 957 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_interrupt_scenario_16,(void *)cf_arg_16);
    
#line 958 
    __VERIFIER_assume(ret == 0);
    
#line 959 
    goto ldv_44862;
    case 1: 
#line 961 
    ;
    
#line 962 
    cf_arg_12 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 963 
    cf_arg_12->arg0 = arg0;
    
#line 964 
    cf_arg_12->arg1 = arg1;
    
#line 965 
    cf_arg_12->arg2 = arg2;
    
#line 966 
    cf_arg_12->arg3 = arg3;
    
#line 967 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_interrupt_scenario_12,(void *)cf_arg_12);
    
#line 968 
    __VERIFIER_assume(ret == 0);
    
#line 969 
    goto ldv_44862;
    case 2: 
#line 971 
    ;
    
#line 972 
    cf_arg_13 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 973 
    cf_arg_13->arg0 = arg0;
    
#line 974 
    cf_arg_13->arg1 = arg1;
    
#line 975 
    cf_arg_13->arg2 = arg2;
    
#line 976 
    cf_arg_13->arg3 = arg3;
    
#line 977 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_interrupt_scenario_13,(void *)cf_arg_13);
    
#line 978 
    __VERIFIER_assume(ret == 0);
    
#line 979 
    goto ldv_44862;
    case 3: 
#line 981 
    ;
    
#line 982 
    cf_arg_15 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 983 
    cf_arg_15->arg0 = arg0;
    
#line 984 
    cf_arg_15->arg1 = arg1;
    
#line 985 
    cf_arg_15->arg2 = arg2;
    
#line 986 
    cf_arg_15->arg3 = arg3;
    
#line 987 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_interrupt_scenario_15,(void *)cf_arg_15);
    
#line 988 
    __VERIFIER_assume(ret == 0);
    
#line 989 
    goto ldv_44862;
    default: 
#line 991 
    ;
    
#line 991 
    __VERIFIER_assume(0);
  }
  ldv_44862: 
#line 992 
  ;
  
#line 993 
  return;
}


#line 997  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_11(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_11_resource_1;
  struct pci_device_id *ldv_11_ldv_param_1_2;
  struct pm_message ldv_11_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 1002 
  struct pci_driver *ldv_11_container = ldv_emg_alias_vmxnet3_driver_2;
  
#line 1003 
  int ldv_11_ret = ldv_undef_int();
  
#line 1006 
  struct ldv_struct_pci_scenario_11 *data = (struct ldv_struct_pci_scenario_11 *)arg0;
  
#line 1010 
  ldv_11_ret = ldv_undef_int();
  
#line 1013 
  if (data != (struct ldv_struct_pci_scenario_11 *)0) {
    
#line 1014 
    ldv_11_container = data->arg0;
    
#line 1015 
    ldv_free((void *)data);
  }
  else ;
  
#line 1026 
  goto ldv_main_11;
  
#line 1028 
  __retres = (void *)0;
  
#line 1028 
  goto return_label;
  ldv_main_11: 
#line 1031 
  ;
  
#line 1034 
  tmp_2 = ldv_undef_int();
  
#line 1034 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1036 
    ldv_11_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 1041 
    ldv_pre_probe();
    
#line 1043 
    ldv_11_ret = ldv_emg_wrapper_vmxnet3_probe_device_3(ldv_11_resource_1,ldv_11_ldv_param_1_2);
    
#line 1045 
    ldv_11_ret = ldv_post_probe(ldv_11_ret);
    
#line 1049 
    ldv_free((void *)ldv_11_ldv_param_1_2);
    
#line 1052 
    tmp_1 = ldv_undef_int();
    
#line 1052 
    if (tmp_1 != 0) {
      
#line 1054 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 1061 
      goto ldv_call_11;
    }
    else {
      
#line 1065 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 1072 
      goto ldv_main_11;
    }
  }
  else {
    
#line 1084 
    __retres = (void *)0;
    
#line 1084 
    goto return_label;
  }
  
#line 1087 
  __retres = (void *)0;
  
#line 1087 
  goto return_label;
  ldv_call_11: 
#line 1090 
  ;
  
#line 1093 
  tmp_3 = ldv_undef_int();
  
#line 1093 
  switch (tmp_3) {
    case 1: 
#line 1094 
    ;
    
#line 1103 
    goto ldv_call_11;
    case 2: 
#line 1106 
    ;
    
#line 1108 
    if (ldv_11_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1110 
      ldv_11_ret = (*(ldv_11_container->suspend))(ldv_11_resource_1,ldv_11_resource_0);
      
#line 1112 
      ldv_11_ret = ldv_filter_err_code(ldv_11_ret);
    }
    else 
#line 1114 
         ldv_11_ret = ldv_undef_int();
    
#line 1119 
    if (ldv_11_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1121 
      ldv_11_ret = (*(ldv_11_container->suspend_late))(ldv_11_resource_1,ldv_11_resource_0);
      
#line 1123 
      ldv_11_ret = ldv_filter_err_code(ldv_11_ret);
    }
    else 
#line 1125 
         ldv_11_ret = ldv_undef_int();
    
#line 1130 
    if (ldv_11_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1132 
      (*(ldv_11_container->resume_early))(ldv_11_resource_1); else ;
    
#line 1137 
    if (ldv_11_container->resume != (int (*)(struct pci_dev *))0) 
#line 1139 
                                                                  (*(ldv_11_container->resume))(ldv_11_resource_1); else ;
    
#line 1147 
    goto ldv_call_11;
    case 3: 
#line 1150 
    ;
    
#line 1153 
    ldv_emg_wrapper_vmxnet3_shutdown_device_2(ldv_11_resource_1);
    
#line 1158 
    ldv_emg_wrapper_vmxnet3_remove_device_4(ldv_11_resource_1);
    
#line 1165 
    goto ldv_main_11;
    default: 
#line 1168 
    ;
    
#line 1168 
    __VERIFIER_assume(0);
  }
  
#line 1171 
  __retres = (void *)0;
  return_label: 
#line 1171 
                return __retres;
}


#line 1176  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_11 *cf_arg_11;
  int tmp;
  
#line 1179 
  tmp = ldv_undef_int();
  
#line 1179 
  switch (tmp) {
    case 0: 
#line 1180 
    ;
    
#line 1181 
    ret = pthread_join(ldv_thread_11,(void **)0);
    
#line 1182 
    __VERIFIER_assume(ret == 0);
    
#line 1183 
    goto ldv_44888;
    default: 
#line 1185 
    ;
    
#line 1185 
    __VERIFIER_assume(0);
  }
  ldv_44888: 
#line 1186 
  ;
  
#line 1187 
  return;
}


#line 1191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_13(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_13_ret_val;
  int ldv_13_line;
  void *ldv_13_data;
  enum irqreturn (*ldv_13_thread)(int , void *);
  int tmp;
  
#line 1197 
  enum irqreturn (*ldv_13_callback)(int , void *) = & ldv_emg_wrapper_vmxnet3_msix_tx_2;
  
#line 1200 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 1205 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 1206 
    ldv_13_line = data->arg0;
    
#line 1207 
    ldv_13_callback = data->arg1;
    
#line 1208 
    ldv_13_thread = data->arg2;
    
#line 1209 
    ldv_13_data = data->arg3;
    
#line 1210 
    ldv_free((void *)data);
  }
  else ;
  
#line 1216 
  ldv_switch_to_interrupt_context();
  
#line 1218 
  ldv_13_ret_val = ldv_emg_wrapper_vmxnet3_msix_tx_2(ldv_13_line,ldv_13_data);
  
#line 1220 
  ldv_switch_to_process_context();
  
#line 1223 
  tmp = ldv_undef_int();
  
#line 1223 
  if (tmp != 0) {
    
#line 1225 
    __VERIFIER_assume(ldv_13_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1229 
    if (ldv_13_thread != (enum irqreturn (*)(int , void *))0) 
#line 1231 
                                                              (*ldv_13_thread)(ldv_13_line,ldv_13_data); else ;
  }
  else 
#line 1238 
       __VERIFIER_assume(ldv_13_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1247 
  __retres = (void *)0;
  
#line 1247 
  goto return_label;
  
#line 1249 
  __retres = (void *)0;
  return_label: 
#line 1249 
                return __retres;
}


#line 1254  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_15(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_15_ret_val;
  int ldv_15_line;
  void *ldv_15_data;
  enum irqreturn (*ldv_15_thread)(int , void *);
  int tmp;
  
#line 1260 
  enum irqreturn (*ldv_15_callback)(int , void *) = & ldv_emg_wrapper_vmxnet3_intr_2;
  
#line 1263 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 1268 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 1269 
    ldv_15_line = data->arg0;
    
#line 1270 
    ldv_15_callback = data->arg1;
    
#line 1271 
    ldv_15_thread = data->arg2;
    
#line 1272 
    ldv_15_data = data->arg3;
    
#line 1273 
    ldv_free((void *)data);
  }
  else ;
  
#line 1279 
  ldv_switch_to_interrupt_context();
  
#line 1281 
  ldv_15_ret_val = ldv_emg_wrapper_vmxnet3_intr_2(ldv_15_line,ldv_15_data);
  
#line 1283 
  ldv_switch_to_process_context();
  
#line 1286 
  tmp = ldv_undef_int();
  
#line 1286 
  if (tmp != 0) {
    
#line 1288 
    __VERIFIER_assume(ldv_15_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1292 
    if (ldv_15_thread != (enum irqreturn (*)(int , void *))0) 
#line 1294 
                                                              (*ldv_15_thread)(ldv_15_line,ldv_15_data); else ;
  }
  else 
#line 1301 
       __VERIFIER_assume(ldv_15_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1310 
  __retres = (void *)0;
  
#line 1310 
  goto return_label;
  
#line 1312 
  __retres = (void *)0;
  return_label: 
#line 1312 
                return __retres;
}


#line 1317  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 1320 
  struct pci_driver *ldv_8_pci_driver = ldv_emg_alias_vmxnet3_driver_2;
  
#line 1323 
  ldv_8_pci_driver = arg0;
  
#line 1327 
  ldv_dispatch_deregister_8_1(ldv_8_pci_driver);
  
#line 1331 
  goto return_label;
  return_label: 
#line 1333 
                return;
}


#line 1338  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1345 
  ldv_1_ret = ldv_emg_vmxnet3_init_module();
  
#line 1346 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1349 
  tmp = ldv_undef_int();
  
#line 1349 
  if (tmp != 0) {
    
#line 1351 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1355 
    __retres = (void *)0;
    
#line 1355 
    goto return_label;
  }
  else {
    
#line 1359 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1364 
    ldv_emg_vmxnet3_exit_module();
    
#line 1368 
    __retres = (void *)0;
    
#line 1368 
    goto return_label;
  }
  
#line 1371 
  __retres = (void *)0;
  return_label: 
#line 1371 
                return __retres;
}


#line 1376  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 1382 
  ldv_5_netdev = arg0;
  
#line 1386 
  if ((ldv_5_netdev->netdev_ops)->ndo_stop != (int (*)(struct net_device *))0) 
    
#line 1388 
    (*((ldv_5_netdev->netdev_ops)->ndo_stop))(ldv_5_netdev); else ;
  
#line 1393 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 1397 
  goto return_label;
  return_label: 
#line 1399 
                return;
}


#line 1404  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1410 
  ldv_3_line = (int)arg0;
  
#line 1414 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1418 
  goto return_label;
  return_label: 
#line 1420 
                return;
}


#line 1425  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_6_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_11 *cf_arg_11;
  int tmp;
  
#line 1428 
  tmp = ldv_undef_int();
  
#line 1428 
  switch (tmp) {
    case 0: 
#line 1429 
    ;
    
#line 1430 
    cf_arg_11 = (struct ldv_struct_pci_scenario_11 *)ldv_xmalloc(16UL);
    
#line 1431 
    cf_arg_11->arg0 = arg0;
    
#line 1432 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_pci_scenario_11,(void *)cf_arg_11);
    
#line 1433 
    __VERIFIER_assume(ret == 0);
    
#line 1434 
    goto ldv_44939;
    default: 
#line 1436 
    ;
    
#line 1436 
    __VERIFIER_assume(0);
  }
  ldv_44939: 
#line 1437 
  ;
  
#line 1438 
  return;
}


#line 1442  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1448 
  ldv_2_netdev = arg0;
  
#line 1449 
  ldv_free((void *)ldv_2_netdev);
  
#line 1453 
  goto return_label;
  return_label: 
#line 1455 
                return;
}


#line 1460  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_12(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_12_ret_val;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp;
  
#line 1466 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_vmxnet3_msix_event_2;
  
#line 1469 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 1474 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 1475 
    ldv_12_line = data->arg0;
    
#line 1476 
    ldv_12_callback = data->arg1;
    
#line 1477 
    ldv_12_thread = data->arg2;
    
#line 1478 
    ldv_12_data = data->arg3;
    
#line 1479 
    ldv_free((void *)data);
  }
  else ;
  
#line 1485 
  ldv_switch_to_interrupt_context();
  
#line 1487 
  ldv_12_ret_val = ldv_emg_wrapper_vmxnet3_msix_event_2(ldv_12_line,ldv_12_data);
  
#line 1489 
  ldv_switch_to_process_context();
  
#line 1492 
  tmp = ldv_undef_int();
  
#line 1492 
  if (tmp != 0) {
    
#line 1494 
    __VERIFIER_assume(ldv_12_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1498 
    if (ldv_12_thread != (enum irqreturn (*)(int , void *))0) 
#line 1500 
                                                              (*ldv_12_thread)(ldv_12_line,ldv_12_data); else ;
  }
  else 
#line 1507 
       __VERIFIER_assume(ldv_12_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1516 
  __retres = (void *)0;
  
#line 1516 
  goto return_label;
  
#line 1518 
  __retres = (void *)0;
  return_label: 
#line 1518 
                return __retres;
}


#line 1523  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/vmxnet3/vmxnet3.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_9_netdev;
  int tmp_3;
  
#line 1527 
  int ldv_9_ret = ldv_undef_int();
  
#line 1530 
  ldv_9_ret = ldv_undef_int();
  
#line 1533 
  tmp_3 = ldv_undef_int();
  
#line 1533 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1535 
    ldv_9_netdev = arg0;
    
#line 1539 
    if ((ldv_9_netdev->netdev_ops)->ndo_open != (int (*)(struct net_device *))0) 
      
#line 1541 
      ldv_9_ret = (*((ldv_9_netdev->netdev_ops)->ndo_open))(ldv_9_netdev); else 
                                                                    
#line 1543 
                                                                    ldv_9_ret = ldv_undef_int();
    
#line 1547 
    tmp_1 = ldv_undef_int();
    
#line 1547 
    if (tmp_1 != 0) {
      
#line 1549 
      __VERIFIER_assume(ldv_9_ret == 0);
      
#line 1553 
      ldv_dispatch_register_9_4(ldv_9_netdev);
      
#line 1557 
      __retres = 0;
      
#line 1557 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1564 
      __VERIFIER_assume(ldv_9_ret != 0);
      
#line 1565 
      ldv_failed_register_netdev();
      
#line 1566 
      tmp_0 = ldv_undef_int_negative();
      
#line 1566 
      __retres = tmp_0;
      
#line 1566 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1574 
    ldv_failed_register_netdev();
    
#line 1575 
    tmp_2 = ldv_undef_int_negative();
    
#line 1575 
    __retres = tmp_2;
    
#line 1575 
    goto return_label;
  }
  return_label: 
#line 1533 
                return __retres;
}


