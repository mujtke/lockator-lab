/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_param.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct user_struct;

#line 66 
struct writeback_control;

#line 67 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_183 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_183 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_186 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_187 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_188 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_190 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_189 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_190 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_191 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_192 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_184 {
   int _pad[28U] ;
   struct __anonstruct__kill_185 _kill ;
   struct __anonstruct__timer_186 _timer ;
   struct __anonstruct__rt_187 _rt ;
   struct __anonstruct__sigchld_188 _sigchld ;
   struct __anonstruct__sigfault_189 _sigfault ;
   struct __anonstruct__sigpoll_191 _sigpoll ;
   struct __anonstruct__sigsys_192 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_184 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_199 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_200 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_202 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   struct keyring_index_key index_key ;
   struct __anonstruct_202 __anonCompField___anonunion_201_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_203 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_205 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_204 {
   union __anonunion_payload_205 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_199 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_200 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_201 __anonCompField_key_53 ;
   union __anonunion_type_data_203 type_data ;
   union __anonunion_204 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_220 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_220 __anonCompField_pci_dev_58 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 1189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_221 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_221 __anonCompField_iov_iter_59 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_223 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_223 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_224 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_224 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_225 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_225 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_226 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_226 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_227 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_227 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_228 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_228 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_229 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_229 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_230 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_230 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_231 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_232 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_231 ifr_ifrn ;
   union __anonunion_ifr_ifru_232 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_237 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_236 {
   struct __anonstruct_237 __anonCompField___anonunion_236_60 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_236 __anonCompField_lockref_61 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_239 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_238 {
   struct __anonstruct_239 __anonCompField___anonunion_238_62 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_238 __anonCompField_qstr_63 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_240 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_240 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_244 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_243 {
   struct __anonstruct_244 __anonCompField___anonunion_243_64 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_243 __anonCompField_radix_tree_node_65 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_248 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_248 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_249 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_249 __anonCompField_kqid_67 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_252 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_253 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_254 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_252 __anonCompField_inode_68 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_253 __anonCompField_inode_69 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_254 __anonCompField_inode_70 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_255 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_255 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_257 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_256 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_257 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_256 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_25482 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_25482 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_272 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_272 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_26328 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_277 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_278 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_26328 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_277 __anonCompField_nf_bridge_info_74 ;
   union __anonunion_278 __anonCompField_nf_bridge_info_75 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_281 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_280 {
   u64 v64 ;
   struct __anonstruct_281 __anonCompField___anonunion_280_76 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_280 __anonCompField_skb_mstamp_77 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_283 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_284 __anonCompField___anonstruct_283_78 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_282 {
   struct __anonstruct_283 __anonCompField___anonunion_282_79 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_286 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __wsum csum ;
   struct __anonstruct_286 __anonCompField___anonunion_285_81 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_287 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_289 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_282 __anonCompField_sk_buff_80 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_285 __anonCompField_sk_buff_82 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_287 __anonCompField_sk_buff_83 ;
   __u32 secmark ;
   union __anonunion_288 __anonCompField_sk_buff_84 ;
   union __anonunion_289 __anonCompField_sk_buff_85 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29089 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29089 phy_interface_t;

#line 126 
enum ldv_29142 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29142 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30852 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30853 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30852 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30853 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 580  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/memcontrol.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_333 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_333 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_344 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_344 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_345 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_345 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_347 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_346 {
   __addrpair skc_addrpair ;
   struct __anonstruct_347 __anonCompField___anonunion_346_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_348 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_350 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_349 {
   __portpair skc_portpair ;
   struct __anonstruct_350 __anonCompField___anonunion_349_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_351 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_352 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_346 __anonCompField_sock_common_103 ;
   union __anonunion_348 __anonCompField_sock_common_104 ;
   union __anonunion_349 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_351 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_352 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_353 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_353 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_356 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_356 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u32 packets ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/gen_stats.h"
struct gnet_stats_rate_est64 {
   __u64 bps ;
   __u64 pps ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};

#line 61 
struct Qdisc_ops;

#line 62 
struct qdisc_walker;

#line 63 
struct tcf_walker;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops const *ops ;
   struct qdisc_size_table *stab ;
   struct list_head list ;
   u32 handle ;
   u32 parent ;
   int (*reshape_fail)(struct sk_buff *, struct Qdisc *) ;
   void *u32_node ;
   struct Qdisc *__parent ;
   struct netdev_queue *dev_queue ;
   struct gnet_stats_rate_est64 rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct Qdisc *next_sched ;
   struct sk_buff *gso_skb ;
   unsigned long state ;
   struct sk_buff_head q ;
   struct gnet_stats_basic_packed bstats ;
   unsigned int __state ;
   struct gnet_stats_queue qstats ;
   struct callback_head callback_head ;
   int padded ;
   atomic_t refcnt ;
   spinlock_t busylock ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct Qdisc_class_ops {
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*get)(struct Qdisc *, u32 ) ;
   void (*put)(struct Qdisc *, unsigned long ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_proto **(*tcf_chain)(struct Qdisc *, unsigned long ) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops const *cl_ops ;
   char id[16U] ;
   int priv_size ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   unsigned int (*drop)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *) ;
   void (*attach)(struct Qdisc *) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   struct module *owner ;
};

#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct tcf_result {
   unsigned long class ;
   u32 classid ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto const *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   bool (*destroy)(struct tcf_proto *, bool ) ;
   unsigned long (*get)(struct tcf_proto *, u32 ) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, unsigned long *, bool ) ;
   int (*delete)(struct tcf_proto *, unsigned long ) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *) ;
   int (*dump)(struct net *, struct tcf_proto *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   struct module *owner ;
};

#line 232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto const *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   u32 classid ;
   struct Qdisc *q ;
   void *data ;
   struct tcf_proto_ops const *ops ;
   struct callback_head rcu ;
};

#line 779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct qdisc_walker {
   int stop ;
   int skip ;
   int count ;
   int (*fn)(struct Qdisc *, unsigned long , struct qdisc_walker *) ;
};

#line 5  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/emergency-restart.h"
struct ixgb_adapter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
typedef int ixgb_mac_type;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
typedef int ixgb_phy_type;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
typedef int ixgb_fc_type;

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
typedef int ixgb_bus_type;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
typedef int ixgb_bus_speed;

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
typedef int ixgb_bus_width;

#line 636  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
struct ixgb_fc {
   u32 high_water ;
   u32 low_water ;
   u16 pause_time ;
   bool send_xon ;
   ixgb_fc_type type ;
};

#line 645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
struct ixgb_bus {
   ixgb_bus_speed speed ;
   ixgb_bus_width width ;
   ixgb_bus_type type ;
};

#line 662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
struct ixgb_hw {
   u8 *hw_addr ;
   void *back ;
   struct ixgb_fc fc ;
   struct ixgb_bus bus ;
   u32 phy_id ;
   u32 phy_addr ;
   ixgb_mac_type mac_type ;
   ixgb_phy_type phy_type ;
   u32 max_frame_size ;
   u32 mc_filter_type ;
   u32 num_mc_addrs ;
   u8 curr_mac_addr[6U] ;
   u32 num_tx_desc ;
   u32 num_rx_desc ;
   u32 rx_buffer_size ;
   bool link_up ;
   bool adapter_stopped ;
   u16 device_id ;
   u16 vendor_id ;
   u8 revision_id ;
   u16 subsystem_vendor_id ;
   u16 subsystem_id ;
   u32 bar0 ;
   u32 bar1 ;
   u32 bar2 ;
   u32 bar3 ;
   u16 pci_cmd_word ;
   __le16 eeprom[64U] ;
   unsigned long io_base ;
   u32 lastLFC ;
   u32 lastRFC ;
};

#line 696  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
struct ixgb_hw_stats {
   u64 tprl ;
   u64 tprh ;
   u64 gprcl ;
   u64 gprch ;
   u64 bprcl ;
   u64 bprch ;
   u64 mprcl ;
   u64 mprch ;
   u64 uprcl ;
   u64 uprch ;
   u64 vprcl ;
   u64 vprch ;
   u64 jprcl ;
   u64 jprch ;
   u64 gorcl ;
   u64 gorch ;
   u64 torl ;
   u64 torh ;
   u64 rnbc ;
   u64 ruc ;
   u64 roc ;
   u64 rlec ;
   u64 crcerrs ;
   u64 icbc ;
   u64 ecbc ;
   u64 mpc ;
   u64 tptl ;
   u64 tpth ;
   u64 gptcl ;
   u64 gptch ;
   u64 bptcl ;
   u64 bptch ;
   u64 mptcl ;
   u64 mptch ;
   u64 uptcl ;
   u64 uptch ;
   u64 vptcl ;
   u64 vptch ;
   u64 jptcl ;
   u64 jptch ;
   u64 gotcl ;
   u64 gotch ;
   u64 totl ;
   u64 toth ;
   u64 dc ;
   u64 plt64c ;
   u64 tsctc ;
   u64 tsctfc ;
   u64 ibic ;
   u64 rfc ;
   u64 lfc ;
   u64 pfrc ;
   u64 pftc ;
   u64 mcfrc ;
   u64 mcftc ;
   u64 xonrxc ;
   u64 xontxc ;
   u64 xoffrxc ;
   u64 xofftxc ;
   u64 rjc ;
};

#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.h"
struct ixgb_buffer {
   struct sk_buff *skb ;
   dma_addr_t dma ;
   unsigned long time_stamp ;
   u16 length ;
   u16 next_to_watch ;
   u16 mapped_as_page ;
};

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb.h"
struct ixgb_desc_ring {
   void *desc ;
   dma_addr_t dma ;
   unsigned int size ;
   unsigned int count ;
   unsigned int next_to_use ;
   unsigned int next_to_clean ;
   struct ixgb_buffer *buffer_info ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb.h"
struct ixgb_adapter {
   struct timer_list watchdog_timer ;
   unsigned long active_vlans[64U] ;
   u32 bd_number ;
   u32 rx_buffer_len ;
   u32 part_num ;
   u16 link_speed ;
   u16 link_duplex ;
   struct work_struct tx_timeout_task ;
   struct ixgb_desc_ring tx_ring ;
   unsigned int restart_queue ;
   unsigned long timeo_start ;
   u32 tx_cmd_type ;
   u64 hw_csum_tx_good ;
   u64 hw_csum_tx_error ;
   u32 tx_int_delay ;
   u32 tx_timeout_count ;
   bool tx_int_delay_enable ;
   bool detect_tx_hung ;
   struct ixgb_desc_ring rx_ring ;
   u64 hw_csum_rx_error ;
   u64 hw_csum_rx_good ;
   u32 rx_int_delay ;
   bool rx_csum ;
   struct napi_struct napi ;
   struct net_device *netdev ;
   struct pci_dev *pdev ;
   struct ixgb_hw hw ;
   u16 msg_enable ;
   struct ixgb_hw_stats stats ;
   u32 alloc_rx_buff_failed ;
   bool have_msi ;
   unsigned long flags ;
};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
enum ldv_36782 {
    enable_option = 0,
    range_option = 1,
    list_option = 2
};

#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
struct ixgb_opt_list {
   int i ;
   char const *str ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
struct __anonstruct_r_385 {
   int min ;
   int max ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
struct __anonstruct_l_386 {
   int nr ;
   struct ixgb_opt_list const *p ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
union __anonunion_arg_384 {
   struct __anonstruct_r_385 r ;
   struct __anonstruct_l_386 l ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
struct ixgb_option {
   enum ldv_36782 type ;
   char const *name ;
   char const *err ;
   int def ;
   union __anonunion_arg_384 arg ;
};

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
enum ldv_26762 {
    ixgb_xpak_vendor_intel = 0,
    ixgb_xpak_vendor_infineon = 1
};

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
typedef enum ldv_26762 ixgb_xpak_vendor;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
struct ixgb_ee_map_type {
   u8 mac_addr[6U] ;
   __le16 compatibility ;
   __le16 reserved1[4U] ;
   __le32 pba_number ;
   __le16 init_ctrl_reg_1 ;
   __le16 subsystem_id ;
   __le16 subvendor_id ;
   __le16 device_id ;
   __le16 vendor_id ;
   __le16 init_ctrl_reg_2 ;
   __le16 oem_reserved[16U] ;
   __le16 swdpins_reg ;
   __le16 circuit_ctrl_reg ;
   u8 d3_power ;
   u8 d0_power ;
   __le16 reserved2[28U] ;
   __le16 checksum ;
};

#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb.h"
struct ixgb_stats {
   char stat_string[32U] ;
   int type ;
   int sizeof_stat ;
   int stat_offset ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11746 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_1650 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_1650 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pagemap.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
struct ixgb_rx_desc {
   __le64 buff_addr ;
   __le16 length ;
   __le16 reserved ;
   u8 status ;
   u8 errors ;
   __le16 special ;
};

#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
struct ixgb_tx_desc {
   __le64 buff_addr ;
   __le32 cmd_type_len ;
   u8 status ;
   u8 popts ;
   __le16 vlan ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
struct ixgb_context_desc {
   u8 ipcss ;
   u8 ipcso ;
   __le16 ipcse ;
   u8 tucss ;
   u8 tucso ;
   __le16 tucse ;
   __le32 cmd_type_len ;
   u8 status ;
   u8 hdr_len ;
   __le16 mss ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_14 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_13 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_16 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_15 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/fvtp/.tmp_ixgb_param.c"
void ldv_inline_asm(void);


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb.h"
void ixgb_check_options(struct ixgb_adapter *adapter);


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int TxDescriptors[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_TxDescriptors = 0U;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int RxDescriptors[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_RxDescriptors = 0U;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int FlowControl[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_FlowControl = 0U;

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int XsumRX[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_XsumRX = 0U;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int TxIntDelay[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_TxIntDelay = 0U;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int RxIntDelay[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_RxIntDelay = 0U;

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int RxFCHighThresh[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_RxFCHighThresh = 0U;

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int RxFCLowThresh[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_RxFCLowThresh = 0U;

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int FCReqTimeout[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_FCReqTimeout = 0U;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int IntDelayEnable[9U] = {-1, -1, -1, -1, -1, -1, -1, -1, -1};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static unsigned int num_IntDelayEnable = 0U;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
static int ixgb_validate_option(unsigned int *value, struct ixgb_option const *opt)
{
  int __retres;
  
#line 205 
  if (*value == 4294967295U) {
    
#line 206 
    *value = (unsigned int)opt->def;
    
#line 207 
    __retres = 0;
    
#line 207 
    goto return_label;
  }
  else ;
  
#line 210 
  switch ((unsigned int)opt->type) {
    case (unsigned int)0: 
#line 211 
    ;
    
#line 212 
    switch (*value) {
      case (unsigned int)1: 
#line 213 
      ;
      
#line 214 
      printk("\001",opt->name);
      
#line 215 
      __retres = 0;
      
#line 215 
      goto return_label;
      case (unsigned int)0: 
#line 216 
      ;
      
#line 217 
      printk("\001",opt->name);
      
#line 218 
      __retres = 0;
      
#line 218 
      goto return_label;
    }
    
#line 220 
    goto ldv_54057;
    case (unsigned int)1: 
#line 221 
    ;
    
#line 222 
    if (*value >= (unsigned int)opt->arg.r.min && *value <= (unsigned int)opt->arg.r.max) {
      
#line 223 
      printk("\001",opt->name,*value);
      
#line 224 
      __retres = 0;
      
#line 224 
      goto return_label;
    }
    else ;
    
#line 226 
    goto ldv_54057;
    case (unsigned int)2: 
#line 227 
    ;
    {
      int i;
      struct ixgb_opt_list const *ent;
      
#line 231 
      i = 0;
      
#line 231 
      goto ldv_54063;
      ldv_54062: 
#line 232 
      ;
      
#line 232 
      ent = opt->arg.l.p + i;
      
#line 233 
      if (*value == (unsigned int)ent->i) {
        
#line 234 
        if ((int)*(ent->str) != 0) 
#line 235 
                                   printk("\001",ent->str); else ;
        
#line 236 
        __retres = 0;
        
#line 236 
        goto return_label;
      }
      else ;
      
#line 231 
      i += 1;
      ldv_54063: 
#line 232 
      ;
      
#line 231 
      if (opt->arg.l.nr > i) 
#line 233 
                             goto ldv_54062; else 
#line 236 
                                                  goto ldv_54064;
      ldv_54064: 
#line 237 
      ;
    }
    
#line 240 
    goto ldv_54057;
    default: 
#line 241 
    ;
    
#line 242 
    ldv_inline_asm();
    
#line 242 
    ;
  }
  ldv_54057: 
#line 245 
  ;
  
#line 245 
  printk("\001",opt->name,*value,opt->err);
  
#line 246 
  *value = (unsigned int)opt->def;
  
#line 247 
  __retres = -1;
  return_label: 
#line 247 
                return __retres;
}


#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_param.c"
void ixgb_check_options(struct ixgb_adapter *adapter)
{
  
#line 263 
  int bd = (int)adapter->bd_number;
  
#line 264 
  if (bd > 7) {
    
#line 265 
    printk("\001",bd);
    
#line 266 
    printk("\001");
  }
  else ;
  {
    
#line 270 
    struct ixgb_option const opt = {.type = range_option, .name = "Transmit Descriptors", .err = "using default of ", .def = 256, .arg = {.r = {.min = 64, .max = 4096}}};
    
#line 278 
    struct ixgb_desc_ring *tx_ring = & adapter->tx_ring;
    
#line 280 
    if (num_TxDescriptors > (unsigned int)bd) {
      
#line 281 
      tx_ring->count = (unsigned int)TxDescriptors[bd];
      
#line 282 
      ixgb_validate_option(& tx_ring->count,& opt);
    }
    else 
#line 284 
         tx_ring->count = (unsigned int)opt.def;
    
#line 286 
    tx_ring->count = (tx_ring->count + 7U) & 4294967288U;
  }
  {
    
#line 289 
    struct ixgb_option const opt_0 = {.type = range_option, .name = "Receive Descriptors", .err = "using default of ", .def = 512, .arg = {.r = {.min = 64, .max = 512}}};
    
#line 297 
    struct ixgb_desc_ring *rx_ring = & adapter->rx_ring;
    
#line 299 
    if (num_RxDescriptors > (unsigned int)bd) {
      
#line 300 
      rx_ring->count = (unsigned int)RxDescriptors[bd];
      
#line 301 
      ixgb_validate_option(& rx_ring->count,& opt_0);
    }
    else 
#line 303 
         rx_ring->count = (unsigned int)opt_0.def;
    
#line 305 
    rx_ring->count = (rx_ring->count + 7U) & 4294967288U;
  }
  {
    
#line 308 
    struct ixgb_option const opt_1 = {.type = enable_option, .name = "Receive Checksum Offload", .err = "defaulting to Enabled", .def = 1, .arg = {.r = {.min = 0, .max = 0}}};
    
#line 315 
    if (num_XsumRX > (unsigned int)bd) {
      
#line 316 
      unsigned int rx_csum = (unsigned int)XsumRX[bd];
      
#line 317 
      ixgb_validate_option(& rx_csum,& opt_1);
      
#line 318 
      adapter->rx_csum = (_Bool)(rx_csum != 0U);
    }
    else 
#line 320 
         adapter->rx_csum = (_Bool)(opt_1.def != 0);
  }
  {
    
#line 325 
    struct ixgb_opt_list const fc_list[5U] = {{.i = 0, .str = "Flow Control Disabled"}, {.i = 1, .str = "Flow Control Receive Only"}, {.i = 2, .str = "Flow Control Transmit Only"}, {.i = 3, .str = "Flow Control Enabled"}, {.i = 255, .str = "Flow Control Hardware Default"}};
    
#line 333 
    struct ixgb_option const opt_2 = {.type = list_option, .name = "Flow Control", .err = "reading default settings from EEPROM", .def = 2, .arg = {.l = {.nr = 5, .p = (struct ixgb_opt_list const *)(& fc_list)}}};
    
#line 342 
    if (num_FlowControl > (unsigned int)bd) {
      
#line 343 
      unsigned int fc = (unsigned int)FlowControl[bd];
      
#line 344 
      ixgb_validate_option(& fc,& opt_2);
      
#line 345 
      adapter->hw.fc.type = (int)fc;
    }
    else 
#line 347 
         adapter->hw.fc.type = opt_2.def;
  }
  {
    
#line 351 
    struct ixgb_option const opt_3 = {.type = range_option, .name = "Rx Flow Control High Threshold", .err = "using default of ", .def = 196608, .arg = {.r = {.min = 8, .max = 262128}}};
    
#line 360 
    if (num_RxFCHighThresh > (unsigned int)bd) {
      
#line 361 
      adapter->hw.fc.high_water = (unsigned int)RxFCHighThresh[bd];
      
#line 362 
      ixgb_validate_option(& adapter->hw.fc.high_water,& opt_3);
    }
    else 
#line 364 
         adapter->hw.fc.high_water = (unsigned int)opt_3.def;
    
#line 366 
    if (((unsigned int)adapter->hw.fc.type & 2U) == 0U) 
#line 367 
                                                        printk("\001"); else ;
  }
  {
    
#line 370 
    struct ixgb_option const opt_4 = {.type = range_option, .name = "Rx Flow Control Low Threshold", .err = "using default of ", .def = 163840, .arg = {.r = {.min = 0, .max = 262120}}};
    
#line 379 
    if (num_RxFCLowThresh > (unsigned int)bd) {
      
#line 380 
      adapter->hw.fc.low_water = (unsigned int)RxFCLowThresh[bd];
      
#line 381 
      ixgb_validate_option(& adapter->hw.fc.low_water,& opt_4);
    }
    else 
#line 383 
         adapter->hw.fc.low_water = (unsigned int)opt_4.def;
    
#line 385 
    if (((unsigned int)adapter->hw.fc.type & 2U) == 0U) 
#line 386 
                                                        printk("\001"); else ;
  }
  {
    
#line 389 
    struct ixgb_option const opt_5 = {.type = range_option, .name = "Flow Control Pause Time Request", .err = "using default of ", .def = 65535, .arg = {.r = {.min = 1, .max = 65535}}};
    
#line 398 
    if (num_FCReqTimeout > (unsigned int)bd) {
      
#line 399 
      unsigned int pause_time = (unsigned int)FCReqTimeout[bd];
      
#line 400 
      ixgb_validate_option(& pause_time,& opt_5);
      
#line 401 
      adapter->hw.fc.pause_time = (unsigned short)pause_time;
    }
    else 
#line 403 
         adapter->hw.fc.pause_time = (unsigned short)opt_5.def;
    
#line 405 
    if (((unsigned int)adapter->hw.fc.type & 2U) == 0U) 
#line 406 
                                                        printk("\001"); else ;
  }
  
#line 409 
  if (((unsigned int)adapter->hw.fc.type & 2U) != 0U) {
    
#line 411 
    if (adapter->hw.fc.high_water < adapter->hw.fc.low_water + 8U) {
      
#line 413 
      printk("\001");
      
#line 414 
      adapter->hw.fc.high_water = 196608U;
      
#line 415 
      adapter->hw.fc.low_water = 163840U;
    }
    else ;
  }
  else ;
  {
    
#line 419 
    struct ixgb_option const opt_6 = {.type = range_option, .name = "Receive Interrupt Delay", .err = "using default of ", .def = 72, .arg = {.r = {.min = 0, .max = 65535}}};
    
#line 428 
    if (num_RxIntDelay > (unsigned int)bd) {
      
#line 429 
      adapter->rx_int_delay = (unsigned int)RxIntDelay[bd];
      
#line 430 
      ixgb_validate_option(& adapter->rx_int_delay,& opt_6);
    }
    else 
#line 432 
         adapter->rx_int_delay = (unsigned int)opt_6.def;
  }
  {
    
#line 436 
    struct ixgb_option const opt_7 = {.type = range_option, .name = "Transmit Interrupt Delay", .err = "using default of ", .def = 32, .arg = {.r = {.min = 0, .max = 65535}}};
    
#line 445 
    if (num_TxIntDelay > (unsigned int)bd) {
      
#line 446 
      adapter->tx_int_delay = (unsigned int)TxIntDelay[bd];
      
#line 447 
      ixgb_validate_option(& adapter->tx_int_delay,& opt_7);
    }
    else 
#line 449 
         adapter->tx_int_delay = (unsigned int)opt_7.def;
  }
  {
    
#line 454 
    struct ixgb_option const opt_8 = {.type = enable_option, .name = "Tx Interrupt Delay Enable", .err = "defaulting to Enabled", .def = 1, .arg = {.r = {.min = 0, .max = 0}}};
    
#line 461 
    if (num_IntDelayEnable > (unsigned int)bd) {
      
#line 462 
      unsigned int ide = (unsigned int)IntDelayEnable[bd];
      
#line 463 
      ixgb_validate_option(& ide,& opt_8);
      
#line 464 
      adapter->tx_int_delay_enable = (_Bool)(ide != 0U);
    }
    else 
#line 466 
         adapter->tx_int_delay_enable = (_Bool)(opt_8.def != 0);
  }
  
#line 468 
  return;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_pr_debug(struct _ddebug *, char const * , ...);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 762  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
bool ixgb_adapter_stop(struct ixgb_hw *hw);


#line 763 
bool ixgb_init_hw(struct ixgb_hw *hw);


#line 765 
void ixgb_check_for_link(struct ixgb_hw *hw);


#line 766 
bool ixgb_check_for_bad_link(struct ixgb_hw *hw);


#line 768 
void ixgb_rar_set(struct ixgb_hw *hw, u8 *addr, u32 index);


#line 771 
void ixgb_mc_addr_list_update(struct ixgb_hw *hw, u8 *mc_addr_list, u32 mc_addr_count, u32 pad);


#line 775 
void ixgb_write_vfta(struct ixgb_hw *hw, u32 offset, u32 value);


#line 778 
void ixgb_get_ee_mac_addr(struct ixgb_hw *hw, u8 *mac_addr);


#line 780 
u16 ixgb_get_ee_device_id(struct ixgb_hw *hw);


#line 781 
bool ixgb_get_eeprom_data(struct ixgb_hw *hw);


#line 785 
void ixgb_led_on(struct ixgb_hw *hw);


#line 786 
void ixgb_led_off(struct ixgb_hw *hw);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 161 
  __retres = (_Bool)((unsigned int)(((int)*((u16 const *)addr) & (int)*((u16 const *)(addr + 2U))) & (int)*((u16 const *)(addr + 4U))) == 65535U);
  
#line 161 
  return __retres;
}


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static u32 ixgb_hash_mc_addr(struct ixgb_hw *hw, u8 *mc_addr);


#line 45 
static void ixgb_mta_set(struct ixgb_hw *hw, u32 hash_value);


#line 47 
static void ixgb_get_bus_info(struct ixgb_hw *hw);


#line 49 
static bool ixgb_link_reset(struct ixgb_hw *hw);


#line 51 
static void ixgb_optics_reset(struct ixgb_hw *hw);


#line 53 
static void ixgb_optics_reset_bcm(struct ixgb_hw *hw);


#line 55 
static ixgb_phy_type ixgb_identify_phy(struct ixgb_hw *hw);


#line 57 
static void ixgb_clear_hw_cntrs(struct ixgb_hw *hw);


#line 59 
static void ixgb_clear_vfta(struct ixgb_hw *hw);


#line 61 
static void ixgb_init_rx_addrs(struct ixgb_hw *hw);


#line 63 
static u16 ixgb_read_phy_reg(struct ixgb_hw *hw, u32 reg_address, u32 phy_address, u32 device_type);


#line 68 
static bool ixgb_setup_fc(struct ixgb_hw *hw);


#line 70 
static bool mac_addr_valid(u8 *mac_addr);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static u32 ixgb_mac_reset(struct ixgb_hw *hw)
{
  u32 ctrl_reg;
  
#line 76 
  ctrl_reg = 133431296U;
  
#line 89 
  writel(ctrl_reg,(void volatile *)hw->hw_addr);
  
#line 93 
  msleep(1U);
  
#line 94 
  ctrl_reg = readl((void const volatile *)hw->hw_addr);
  
#line 100 
  if ((unsigned int)hw->subsystem_vendor_id == 4238U) {
    
#line 101 
    ctrl_reg = 3265U;
    
#line 107 
    writel(ctrl_reg,(void volatile *)(hw->hw_addr + 8U));
    
#line 108 
    ixgb_optics_reset_bcm(hw);
  }
  else ;
  
#line 111 
  if (hw->phy_type == (unsigned int)4) 
#line 112 
                                       ixgb_optics_reset(hw); else ;
  
#line 114 
  return ctrl_reg;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
bool ixgb_adapter_stop(struct ixgb_hw *hw)
{
  bool __retres;
  u32 ctrl_reg;
  u32 icr_reg;
  unsigned int tmp;
  unsigned int tmp_0;
  {
    
#line 128 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_adapter_stop", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))128U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 128 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 128 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_adapter_stop"); else ;
  }
  
#line 133 
  if ((int)hw->adapter_stopped != 0) {
    {
      
#line 134 
      struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_adapter_stop", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Exiting because the adapter is already stopped!!!\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))134U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 134 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 134 
                                                            __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
    }
    
#line 135 
    __retres = (_Bool)0;
    
#line 135 
    goto return_label;
  }
  else ;
  
#line 141 
  hw->adapter_stopped = (_Bool)1;
  {
    
#line 144 
    struct _ddebug descriptor_1 = {.modname = "ixgb", .function = "ixgb_adapter_stop", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Masking off all interrupts\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))144U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 144 
    if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 144 
                                                          __dynamic_pr_debug(& descriptor_1,"ixgb"); else ;
  }
  
#line 145 
  writel(4294967295U,(void volatile *)(hw->hw_addr + 152U));
  
#line 151 
  ;
  
#line 151 
  tmp = readl((void const volatile *)(hw->hw_addr + 256U));
  
#line 151 
  writel(tmp & 4294967293U,(void volatile *)(hw->hw_addr + 256U));
  
#line 152 
  ;
  
#line 152 
  tmp_0 = readl((void const volatile *)(hw->hw_addr + 1536U));
  
#line 152 
  writel(tmp_0 & 4294967293U,(void volatile *)(hw->hw_addr + 1536U));
  
#line 153 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 154 
  msleep(10U);
  {
    
#line 161 
    struct _ddebug descriptor_2 = {.modname = "ixgb", .function = "ixgb_adapter_stop", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Issuing a global reset to MAC\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))161U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 161 
    if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 161 
                                                          __dynamic_pr_debug(& descriptor_2,"ixgb"); else ;
  }
  
#line 163 
  ctrl_reg = ixgb_mac_reset(hw);
  {
    
#line 166 
    struct _ddebug descriptor_3 = {.modname = "ixgb", .function = "ixgb_adapter_stop", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Masking off all interrupts\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))166U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 166 
    if ((long)(((int)descriptor_3.flags & 1) != 0) != 0L) 
#line 166 
                                                          __dynamic_pr_debug(& descriptor_3,"ixgb"); else ;
  }
  
#line 167 
  writel(4294967295U,(void volatile *)(hw->hw_addr + 152U));
  
#line 170 
  icr_reg = readl((void const volatile *)(hw->hw_addr + 128U));
  
#line 172 
  __retres = (_Bool)((ctrl_reg & 67108864U) != 0U);
  return_label: 
#line 172 
                return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static ixgb_xpak_vendor ixgb_identify_xpak_vendor(struct ixgb_hw *hw)
{
  u32 i;
  u16 vendor_name[5U];
  ixgb_xpak_vendor xpak_vendor;
  {
    
#line 192 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_identify_xpak_vendor", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))192U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 192 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 192 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_identify_xpak_vendor"); else ;
  }
  
#line 197 
  i = 0U;
  
#line 197 
  goto ldv_43808;
  ldv_43807: 
#line 198 
  ;
  
#line 198 
  vendor_name[i] = ixgb_read_phy_reg(hw,i + 32826U,0U,1U);
  
#line 197 
  i += 1U;
  ldv_43808: 
#line 198 
  ;
  
#line 197 
  if (i <= 4U) 
#line 199 
               goto ldv_43807; else 
#line 202 
                                    goto ldv_43809;
  ldv_43809: 
#line 203 
  ;
  
#line 205 
  if (((((unsigned int)vendor_name[0] == 73U && (unsigned int)vendor_name[1] == 78U) && (unsigned int)vendor_name[2] == 84U) && (unsigned int)vendor_name[3] == 69U) && (unsigned int)vendor_name[4] == 76U) 
    
#line 209 
    xpak_vendor = ixgb_xpak_vendor_intel; else 
#line 211 
                                               xpak_vendor = ixgb_xpak_vendor_infineon;
  
#line 214 
  return xpak_vendor;
}


#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static ixgb_phy_type ixgb_identify_phy(struct ixgb_hw *hw)
{
  ixgb_phy_type phy_type;
  ixgb_xpak_vendor xpak_vendor;
  {
    
#line 231 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_identify_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))231U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 231 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 231 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_identify_phy"); else ;
  }
  
#line 234 
  switch ((int)hw->device_id) {
    case 4168: 
#line 235 
    ;
    {
      
#line 236 
      struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_identify_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Identified TXN17401 optics\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))236U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 236 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 236 
                                                            __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
    }
    
#line 237 
    phy_type = 4;
    
#line 238 
    goto ldv_43819;
    case 6728: 
#line 240 
    ;
    
#line 244 
    xpak_vendor = ixgb_identify_xpak_vendor(hw);
    
#line 245 
    if (xpak_vendor == (unsigned int)ixgb_xpak_vendor_intel) {
      {
        
#line 246 
        struct _ddebug descriptor_1 = {.modname = "ixgb", .function = "ixgb_identify_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Identified TXN17201 optics\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))246U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 246 
        if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 246 
                                                              __dynamic_pr_debug(& descriptor_1,"ixgb"); else ;
      }
      
#line 247 
      phy_type = 3;
    }
    else {
      {
        
#line 249 
        struct _ddebug descriptor_2 = {.modname = "ixgb", .function = "ixgb_identify_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Identified G6005 optics\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))249U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 249 
        if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 249 
                                                              __dynamic_pr_debug(& descriptor_2,"ixgb"); else ;
      }
      
#line 250 
      phy_type = 1;
    }
    
#line 252 
    goto ldv_43819;
    case 6984: 
#line 253 
    ;
    {
      
#line 254 
      struct _ddebug descriptor_3 = {.modname = "ixgb", .function = "ixgb_identify_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Identified G6104 optics\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))254U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 254 
      if ((long)(((int)descriptor_3.flags & 1) != 0) != 0L) 
#line 254 
                                                            __dynamic_pr_debug(& descriptor_3,"ixgb"); else ;
    }
    
#line 255 
    phy_type = 2;
    
#line 256 
    goto ldv_43819;
    case 4254: 
#line 257 
    ;
    {
      
#line 258 
      struct _ddebug descriptor_4 = {.modname = "ixgb", .function = "ixgb_identify_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Identified CX4\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))258U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 258 
      if ((long)(((int)descriptor_4.flags & 1) != 0) != 0L) 
#line 258 
                                                            __dynamic_pr_debug(& descriptor_4,"ixgb"); else ;
    }
    
#line 259 
    xpak_vendor = ixgb_identify_xpak_vendor(hw);
    
#line 260 
    if (xpak_vendor == (unsigned int)ixgb_xpak_vendor_intel) {
      {
        
#line 261 
        struct _ddebug descriptor_5 = {.modname = "ixgb", .function = "ixgb_identify_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Identified TXN17201 optics\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))261U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 261 
        if ((long)(((int)descriptor_5.flags & 1) != 0) != 0L) 
#line 261 
                                                              __dynamic_pr_debug(& descriptor_5,"ixgb"); else ;
      }
      
#line 262 
      phy_type = 3;
    }
    else {
      {
        
#line 264 
        struct _ddebug descriptor_6 = {.modname = "ixgb", .function = "ixgb_identify_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Identified G6005 optics\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))264U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 264 
        if ((long)(((int)descriptor_6.flags & 1) != 0) != 0L) 
#line 264 
                                                              __dynamic_pr_debug(& descriptor_6,"ixgb"); else ;
      }
      
#line 265 
      phy_type = 1;
    }
    
#line 267 
    goto ldv_43819;
    default: 
#line 268 
    ;
    {
      
#line 269 
      struct _ddebug descriptor_7 = {.modname = "ixgb", .function = "ixgb_identify_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Unknown physical layer module\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))269U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 269 
      if ((long)(((int)descriptor_7.flags & 1) != 0) != 0L) 
#line 269 
                                                            __dynamic_pr_debug(& descriptor_7,"ixgb"); else ;
    }
    
#line 270 
    phy_type = 0;
    
#line 271 
    goto ldv_43819;
  }
  ldv_43819: 
#line 275 
  ;
  
#line 275 
  if ((unsigned int)hw->subsystem_vendor_id == 4238U) 
#line 276 
                                                      phy_type = 5; else ;
  
#line 278 
  return phy_type;
}


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
bool ixgb_init_hw(struct ixgb_hw *hw)
{
  bool __retres;
  u32 i;
  u32 ctrl_reg;
  bool status;
  int tmp_0;
  bool tmp;
  int tmp_2;
  bool tmp_1;
  {
    
#line 305 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_init_hw", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))305U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 305 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 305 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_init_hw"); else ;
  }
  {
    
#line 312 
    struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_init_hw", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Issuing a global reset to MAC\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))312U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 312 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 312 
                                                          __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
  }
  
#line 314 
  ctrl_reg = ixgb_mac_reset(hw);
  {
    
#line 316 
    struct _ddebug descriptor_1 = {.modname = "ixgb", .function = "ixgb_init_hw", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Issuing an EE reset to MAC\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))316U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 316 
    if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 316 
                                                          __dynamic_pr_debug(& descriptor_1,"ixgb"); else ;
  }
  
#line 321 
  writel(8192U,(void volatile *)(hw->hw_addr + 8U));
  
#line 325 
  msleep(10U);
  
#line 327 
  tmp = ixgb_get_eeprom_data(hw);
  
#line 327 
  if (tmp) 
#line 327 
           tmp_0 = 0; else 
#line 327 
                           tmp_0 = 1;
  
#line 327 
  if (tmp_0) {
    
#line 328 
    __retres = (_Bool)0;
    
#line 328 
    goto return_label;
  }
  else ;
  
#line 331 
  hw->device_id = ixgb_get_ee_device_id(hw);
  
#line 332 
  hw->phy_type = ixgb_identify_phy(hw);
  
#line 337 
  ixgb_init_rx_addrs(hw);
  
#line 343 
  tmp_1 = mac_addr_valid((u8 *)(& hw->curr_mac_addr));
  
#line 343 
  if (tmp_1) 
#line 343 
             tmp_2 = 0; else 
#line 343 
                             tmp_2 = 1;
  
#line 343 
  if (tmp_2) {
    {
      
#line 344 
      struct _ddebug descriptor_2 = {.modname = "ixgb", .function = "ixgb_init_hw", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "MAC address invalid after ixgb_init_rx_addrs\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))344U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 344 
      if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 344 
                                                            __dynamic_pr_debug(& descriptor_2,"ixgb"); else ;
    }
    
#line 345 
    __retres = (_Bool)0;
    
#line 345 
    goto return_label;
  }
  else ;
  
#line 349 
  hw->adapter_stopped = (_Bool)0;
  
#line 352 
  ixgb_get_bus_info(hw);
  {
    
#line 355 
    struct _ddebug descriptor_3 = {.modname = "ixgb", .function = "ixgb_init_hw", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Zeroing the MTA\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))355U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 355 
    if ((long)(((int)descriptor_3.flags & 1) != 0) != 0L) 
#line 355 
                                                          __dynamic_pr_debug(& descriptor_3,"ixgb"); else ;
  }
  
#line 356 
  i = 0U;
  
#line 356 
  goto ldv_43844;
  ldv_43843: 
#line 357 
  ;
  
#line 357 
  writel(0U,(void volatile *)(hw->hw_addr + ((i << 2) + 512U)));
  
#line 356 
  i += 1U;
  ldv_43844: 
#line 357 
  ;
  
#line 356 
  if (i <= 127U) 
#line 358 
                 goto ldv_43843; else 
#line 361 
                                      goto ldv_43845;
  ldv_43845: 
#line 362 
  ;
  
#line 360 
  ixgb_clear_vfta(hw);
  
#line 363 
  ixgb_clear_hw_cntrs(hw);
  
#line 366 
  status = ixgb_setup_fc(hw);
  
#line 369 
  ixgb_check_for_link(hw);
  
#line 371 
  __retres = status;
  return_label: 
#line 371 
                return __retres;
}


#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static void ixgb_init_rx_addrs(struct ixgb_hw *hw)
{
  u32 i;
  int tmp_0;
  bool tmp;
  {
    
#line 388 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_init_rx_addrs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))388U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 388 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 388 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_init_rx_addrs"); else ;
  }
  
#line 395 
  tmp = mac_addr_valid((u8 *)(& hw->curr_mac_addr));
  
#line 395 
  if (tmp) 
#line 395 
           tmp_0 = 0; else 
#line 395 
                           tmp_0 = 1;
  
#line 395 
  if (tmp_0) {
    
#line 398 
    ixgb_get_ee_mac_addr(hw,(u8 *)(& hw->curr_mac_addr));
    {
      
#line 400 
      struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_init_rx_addrs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Keeping Permanent MAC Addr = %pM\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))401U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 400 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 400 
                                                            __dynamic_pr_debug(& descriptor_0,"ixgb",(u8 *)(& hw->curr_mac_addr)); else ;
    }
  }
  else {
    {
      
#line 405 
      struct _ddebug descriptor_1 = {.modname = "ixgb", .function = "ixgb_init_rx_addrs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Overriding MAC Address in RAR[0]\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))405U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 405 
      if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 405 
                                                            __dynamic_pr_debug(& descriptor_1,"ixgb"); else ;
    }
    {
      
#line 406 
      struct _ddebug descriptor_2 = {.modname = "ixgb", .function = "ixgb_init_rx_addrs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "New MAC Addr = %pM\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))406U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 406 
      if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 406 
                                                            __dynamic_pr_debug(& descriptor_2,"ixgb",(u8 *)(& hw->curr_mac_addr)); else ;
    }
    
#line 408 
    ixgb_rar_set(hw,(u8 *)(& hw->curr_mac_addr),0U);
  }
  {
    
#line 412 
    struct _ddebug descriptor_3 = {.modname = "ixgb", .function = "ixgb_init_rx_addrs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Clearing RAR[1-15]\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))412U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 412 
    if ((long)(((int)descriptor_3.flags & 1) != 0) != 0L) 
#line 412 
                                                          __dynamic_pr_debug(& descriptor_3,"ixgb"); else ;
  }
  
#line 413 
  i = 1U;
  
#line 413 
  goto ldv_43857;
  ldv_43856: 
#line 414 
  ;
  
#line 415 
  writel(0U,(void volatile *)(hw->hw_addr + ((((i << 1) + 1U) << 2) + 384U)));
  
#line 416 
  writel(0U,(void volatile *)(hw->hw_addr + ((i << 3) + 384U)));
  
#line 413 
  i += 1U;
  ldv_43857: 
#line 414 
  ;
  
#line 413 
  if (i <= 2U) 
#line 415 
               goto ldv_43856; else 
#line 418 
                                    goto ldv_43858;
  ldv_43858: 
#line 419 
  ;
  
#line 420 
  return;
}


#line 434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
void ixgb_mc_addr_list_update(struct ixgb_hw *hw, u8 *mc_addr_list, u32 mc_addr_count, u32 pad)
{
  u32 hash_value;
  u32 i;
  u8 *mca;
  
#line 441 
  u32 rar_used_count = 1U;
  {
    
#line 444 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_mc_addr_list_update", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))444U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 444 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 444 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_mc_addr_list_update"); else ;
  }
  
#line 447 
  hw->num_mc_addrs = mc_addr_count;
  {
    
#line 450 
    struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_mc_addr_list_update", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Clearing RAR[1-15]\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))450U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 450 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 450 
                                                          __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
  }
  
#line 451 
  i = rar_used_count;
  
#line 451 
  goto ldv_43873;
  ldv_43872: 
#line 452 
  ;
  
#line 452 
  writel(0U,(void volatile *)(hw->hw_addr + ((i << 3) + 384U)));
  
#line 453 
  writel(0U,(void volatile *)(hw->hw_addr + ((((i << 1) + 1U) << 2) + 384U)));
  
#line 451 
  i += 1U;
  ldv_43873: 
#line 452 
  ;
  
#line 451 
  if (i <= 2U) 
#line 453 
               goto ldv_43872; else 
#line 456 
                                    goto ldv_43874;
  ldv_43874: 
#line 457 
  ;
  {
    
#line 457 
    struct _ddebug descriptor_1 = {.modname = "ixgb", .function = "ixgb_mc_addr_list_update", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Clearing MTA\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))457U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 457 
    if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 457 
                                                          __dynamic_pr_debug(& descriptor_1,"ixgb"); else ;
  }
  
#line 458 
  i = 0U;
  
#line 458 
  goto ldv_43877;
  ldv_43876: 
#line 459 
  ;
  
#line 459 
  writel(0U,(void volatile *)(hw->hw_addr + ((i << 2) + 512U)));
  
#line 458 
  i += 1U;
  ldv_43877: 
#line 459 
  ;
  
#line 458 
  if (i <= 127U) 
#line 460 
                 goto ldv_43876; else 
#line 463 
                                      goto ldv_43878;
  ldv_43878: 
#line 464 
  ;
  
#line 462 
  mca = mc_addr_list;
  
#line 463 
  i = 0U;
  
#line 463 
  goto ldv_43884;
  ldv_43883: 
#line 464 
  ;
  {
    
#line 464 
    struct _ddebug descriptor_2 = {.modname = "ixgb", .function = "ixgb_mc_addr_list_update", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Adding the multicast addresses:\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))464U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 464 
    if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 464 
                                                          __dynamic_pr_debug(& descriptor_2,"ixgb"); else ;
  }
  {
    
#line 465 
    struct _ddebug descriptor_3 = {.modname = "ixgb", .function = "ixgb_mc_addr_list_update", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "MC Addr #%d = %pM\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))465U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 465 
    if ((long)(((int)descriptor_3.flags & 1) != 0) != 0L) 
#line 465 
                                                          __dynamic_pr_debug(& descriptor_3,"ixgb",i,mca); else ;
  }
  
#line 470 
  if (rar_used_count <= 2U) {
    
#line 471 
    ixgb_rar_set(hw,mca,rar_used_count);
    {
      
#line 472 
      struct _ddebug descriptor_4 = {.modname = "ixgb", .function = "ixgb_mc_addr_list_update", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Added a multicast address to RAR[%d]\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))472U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 472 
      if ((long)(((int)descriptor_4.flags & 1) != 0) != 0L) 
#line 472 
                                                            __dynamic_pr_debug(& descriptor_4,"ixgb",i); else ;
    }
    
#line 473 
    rar_used_count += 1U;
  }
  else {
    
#line 475 
    hash_value = ixgb_hash_mc_addr(hw,mca);
    {
      
#line 477 
      struct _ddebug descriptor_5 = {.modname = "ixgb", .function = "ixgb_mc_addr_list_update", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Hash value = 0x%03X\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))477U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 477 
      if ((long)(((int)descriptor_5.flags & 1) != 0) != 0L) 
#line 477 
                                                            __dynamic_pr_debug(& descriptor_5,"ixgb",hash_value); else ;
    }
    
#line 479 
    ixgb_mta_set(hw,hash_value);
  }
  
#line 482 
  mca += pad + 6U;
  
#line 463 
  i += 1U;
  ldv_43884: 
#line 464 
  ;
  
#line 463 
  if (i < mc_addr_count) 
#line 465 
                         goto ldv_43883; else 
#line 468 
                                              goto ldv_43885;
  ldv_43885: 
#line 469 
  ;
  {
    
#line 485 
    struct _ddebug descriptor_6 = {.modname = "ixgb", .function = "ixgb_mc_addr_list_update", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "MC Update Complete\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))485U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 485 
    if ((long)(((int)descriptor_6.flags & 1) != 0) != 0L) 
#line 485 
                                                          __dynamic_pr_debug(& descriptor_6,"ixgb"); else ;
  }
  
#line 487 
  return;
}


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static u32 ixgb_hash_mc_addr(struct ixgb_hw *hw, u8 *mc_addr)
{
  
#line 501 
  u32 hash_value = 0U;
  {
    
#line 503 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_hash_mc_addr", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))503U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 503 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 503 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_hash_mc_addr"); else ;
  }
  
#line 508 
  switch (hw->mc_filter_type) {
    case (u32)0: 
#line 512 
    ;
    
#line 514 
    hash_value = (unsigned int)(((int)*(mc_addr + 4U) >> 4) | ((int)*(mc_addr + 5U) << 4));
    
#line 516 
    goto ldv_43895;
    case (u32)1: 
#line 517 
    ;
    
#line 518 
    hash_value = (unsigned int)(((int)*(mc_addr + 4U) >> 3) | ((int)*(mc_addr + 5U) << 5));
    
#line 520 
    goto ldv_43895;
    case (u32)2: 
#line 521 
    ;
    
#line 522 
    hash_value = (unsigned int)(((int)*(mc_addr + 4U) >> 2) | ((int)*(mc_addr + 5U) << 6));
    
#line 524 
    goto ldv_43895;
    case (u32)3: 
#line 525 
    ;
    
#line 526 
    hash_value = (unsigned int)((int)*(mc_addr + 4U) | ((int)*(mc_addr + 5U) << 8));
    
#line 527 
    goto ldv_43895;
    default: 
#line 528 
    ;
    {
      
#line 530 
      struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_hash_mc_addr", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "MC filter type param set incorrectly\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))530U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 530 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 530 
                                                            __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
    }
    
#line 533 
    ldv_inline_asm();
    
#line 531 
    ;
    
#line 532 
    goto ldv_43895;
  }
  ldv_43895: 
#line 535 
  ;
  
#line 535 
  hash_value &= 4095U;
  
#line 536 
  return hash_value;
}


#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static void ixgb_mta_set(struct ixgb_hw *hw, u32 hash_value)
{
  u32 hash_bit;
  u32 hash_reg;
  u32 mta_reg;
  
#line 560 
  hash_reg = (hash_value >> 5) & 127U;
  
#line 561 
  hash_bit = hash_value & 31U;
  
#line 563 
  mta_reg = readl((void const volatile *)(hw->hw_addr + ((hash_reg << 2) + 512U)));
  
#line 565 
  mta_reg = (unsigned int)(1 << hash_bit) | mta_reg;
  
#line 567 
  writel(mta_reg,(void volatile *)(hw->hw_addr + ((hash_reg << 2) + 512U)));
  
#line 568 
  return;
}


#line 578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
void ixgb_rar_set(struct ixgb_hw *hw, u8 *addr, u32 index)
{
  u32 rar_low;
  u32 rar_high;
  {
    
#line 584 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_rar_set", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))584U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 584 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 584 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_rar_set"); else ;
  }
  
#line 589 
  rar_low = (((unsigned int)*addr | ((unsigned int)*(addr + 1U) << 8)) | ((unsigned int)*(addr + 2U) << 16)) | ((unsigned int)*(addr + 3U) << 24);
  
#line 594 
  rar_high = ((unsigned int)*(addr + 4U) | ((unsigned int)*(addr + 5U) << 8)) | 2147483648U;
  
#line 598 
  writel(rar_low,(void volatile *)(hw->hw_addr + ((index << 3) + 384U)));
  
#line 599 
  writel(rar_high,(void volatile *)(hw->hw_addr + ((((index << 1) + 1U) << 2) + 384U)));
  
#line 600 
  return;
}


#line 610  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
void ixgb_write_vfta(struct ixgb_hw *hw, u32 offset, u32 value)
{
  
#line 614 
  writel(value,(void volatile *)(hw->hw_addr + ((offset << 2) + 1024U)));
  
#line 615 
  return;
}


#line 623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static void ixgb_clear_vfta(struct ixgb_hw *hw)
{
  u32 offset;
  
#line 627 
  offset = 0U;
  
#line 627 
  goto ldv_43927;
  ldv_43926: 
#line 628 
  ;
  
#line 628 
  writel(0U,(void volatile *)(hw->hw_addr + ((offset << 2) + 1024U)));
  
#line 627 
  offset += 1U;
  ldv_43927: 
#line 628 
  ;
  
#line 627 
  if (offset <= 127U) 
#line 629 
                      goto ldv_43926; else 
#line 632 
                                           goto ldv_43928;
  ldv_43928: 
#line 633 
  ;
  
#line 634 
  return;
}


#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static bool ixgb_setup_fc(struct ixgb_hw *hw)
{
  u32 ctrl_reg;
  
#line 641 
  u32 pap_reg = 0U;
  
#line 642 
  bool status = (_Bool)1;
  {
    
#line 644 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_setup_fc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))644U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 644 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 644 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_setup_fc"); else ;
  }
  
#line 647 
  ctrl_reg = readl((void const volatile *)hw->hw_addr);
  
#line 650 
  ctrl_reg &= 3892314111U;
  
#line 661 
  switch ((unsigned int)hw->fc.type) {
    case (unsigned int)0: 
#line 662 
    ;
    
#line 664 
    ctrl_reg |= 128U;
    
#line 665 
    goto ldv_43938;
    case (unsigned int)1: 
#line 666 
    ;
    
#line 670 
    ctrl_reg |= 134217728U;
    
#line 671 
    goto ldv_43938;
    case (unsigned int)2: 
#line 672 
    ;
    
#line 676 
    ctrl_reg |= 268435456U;
    
#line 677 
    pap_reg = (unsigned int)hw->fc.pause_time;
    
#line 678 
    goto ldv_43938;
    case (unsigned int)3: 
#line 679 
    ;
    
#line 683 
    ctrl_reg |= 402653184U;
    
#line 684 
    pap_reg = (unsigned int)hw->fc.pause_time;
    
#line 685 
    goto ldv_43938;
    default: 
#line 686 
    ;
    {
      
#line 688 
      struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_setup_fc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Flow control param set incorrectly\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))688U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 688 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 688 
                                                            __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
    }
    
#line 691 
    ldv_inline_asm();
    
#line 689 
    ;
    
#line 690 
    goto ldv_43938;
  }
  ldv_43938: 
#line 694 
  ;
  
#line 694 
  writel(ctrl_reg,(void volatile *)hw->hw_addr);
  
#line 696 
  if (pap_reg != 0U) 
#line 697 
                     writel(pap_reg,(void volatile *)(hw->hw_addr + 1600U)); else ;
  
#line 705 
  if (((unsigned int)hw->fc.type & 2U) == 0U) {
    
#line 706 
    writel(0U,(void volatile *)(hw->hw_addr + 264U));
    
#line 707 
    writel(0U,(void volatile *)(hw->hw_addr + 272U));
  }
  else {
    
#line 712 
    if ((int)hw->fc.send_xon != 0) 
#line 713 
                                   writel(hw->fc.low_water | 2147483648U,(void volatile *)(hw->hw_addr + 264U)); else 
                                                                    
#line 716 
                                                                    writel(hw->fc.low_water,(void volatile *)(hw->hw_addr + 264U));
    
#line 718 
    writel(hw->fc.high_water,(void volatile *)(hw->hw_addr + 272U));
  }
  
#line 720 
  return status;
}


#line 739  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static u16 ixgb_read_phy_reg(struct ixgb_hw *hw, u32 reg_address, u32 phy_address, u32 device_type)
{
  u16 __retres;
  u32 i;
  u32 data;
  
#line 746 
  u32 command = 0U;
  
#line 748 
  if ((long)(reg_address > 65535U) != 0L) {
    
#line 750 
    ldv_inline_asm();
    
#line 748 
    ;
  }
  else ;
  
#line 749 
  if ((long)(phy_address > 31U) != 0L) {
    
#line 751 
    ldv_inline_asm();
    
#line 749 
    ;
  }
  else ;
  
#line 750 
  if ((long)(device_type > 31U) != 0L) {
    
#line 752 
    ldv_inline_asm();
    
#line 750 
    ;
  }
  else ;
  
#line 753 
  command = (((device_type << 16) | reg_address) | (phy_address << 21)) | 1073741824U;
  
#line 758 
  writel(command,(void volatile *)(hw->hw_addr + 1880U));
  
#line 767 
  i = 0U;
  
#line 767 
  goto ldv_43955;
  ldv_43954: 
#line 768 
  ;
  
#line 769 
  __const_udelay(42950UL);
  
#line 771 
  command = readl((void const volatile *)(hw->hw_addr + 1880U));
  
#line 773 
  if ((command & 1073741824U) == 0U) 
#line 774 
                                     goto ldv_43953; else ;
  
#line 767 
  i += 1U;
  ldv_43955: 
#line 768 
  ;
  
#line 767 
  if (i <= 9U) 
#line 769 
               goto ldv_43954; else 
#line 772 
                                    goto ldv_43953;
  ldv_43953: 
#line 773 
  ;
  
#line 777 
  if ((long)((command & 1073741824U) != 0U) != 0L) {
    
#line 779 
    ldv_inline_asm();
    
#line 777 
    ;
  }
  else ;
  
#line 780 
  command = (((device_type << 16) | reg_address) | (phy_address << 21)) | 1207959552U;
  
#line 785 
  writel(command,(void volatile *)(hw->hw_addr + 1880U));
  
#line 794 
  i = 0U;
  
#line 794 
  goto ldv_43958;
  ldv_43957: 
#line 795 
  ;
  
#line 796 
  __const_udelay(42950UL);
  
#line 798 
  command = readl((void const volatile *)(hw->hw_addr + 1880U));
  
#line 800 
  if ((command & 1073741824U) == 0U) 
#line 801 
                                     goto ldv_43956; else ;
  
#line 794 
  i += 1U;
  ldv_43958: 
#line 795 
  ;
  
#line 794 
  if (i <= 9U) 
#line 796 
               goto ldv_43957; else 
#line 799 
                                    goto ldv_43956;
  ldv_43956: 
#line 800 
  ;
  
#line 804 
  if ((long)((command & 1073741824U) != 0U) != 0L) {
    
#line 806 
    ldv_inline_asm();
    
#line 804 
    ;
  }
  else ;
  
#line 809 
  data = readl((void const volatile *)(hw->hw_addr + 1888U));
  
#line 810 
  data >>= 16;
  
#line 811 
  __retres = (unsigned short)data;
  
#line 811 
  return __retres;
}


#line 832  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static void ixgb_write_phy_reg(struct ixgb_hw *hw, u32 reg_address, u32 phy_address, u32 device_type, u16 data)
{
  u32 i;
  
#line 839 
  u32 command = 0U;
  
#line 841 
  if ((long)(reg_address > 65535U) != 0L) {
    
#line 843 
    ldv_inline_asm();
    
#line 841 
    ;
  }
  else ;
  
#line 842 
  if ((long)(phy_address > 31U) != 0L) {
    
#line 844 
    ldv_inline_asm();
    
#line 842 
    ;
  }
  else ;
  
#line 843 
  if ((long)(device_type > 31U) != 0L) {
    
#line 845 
    ldv_inline_asm();
    
#line 843 
    ;
  }
  else ;
  
#line 846 
  writel((unsigned int)data,(void volatile *)(hw->hw_addr + 1888U));
  
#line 849 
  command = (((device_type << 16) | reg_address) | (phy_address << 21)) | 1073741824U;
  
#line 854 
  writel(command,(void volatile *)(hw->hw_addr + 1880U));
  
#line 863 
  i = 0U;
  
#line 863 
  goto ldv_43970;
  ldv_43969: 
#line 864 
  ;
  
#line 865 
  __const_udelay(42950UL);
  
#line 867 
  command = readl((void const volatile *)(hw->hw_addr + 1880U));
  
#line 869 
  if ((command & 1073741824U) == 0U) 
#line 870 
                                     goto ldv_43968; else ;
  
#line 863 
  i += 1U;
  ldv_43970: 
#line 864 
  ;
  
#line 863 
  if (i <= 9U) 
#line 865 
               goto ldv_43969; else 
#line 868 
                                    goto ldv_43968;
  ldv_43968: 
#line 869 
  ;
  
#line 873 
  if ((long)((command & 1073741824U) != 0U) != 0L) {
    
#line 875 
    ldv_inline_asm();
    
#line 873 
    ;
  }
  else ;
  
#line 876 
  command = (((device_type << 16) | reg_address) | (phy_address << 21)) | 1140850688U;
  
#line 881 
  writel(command,(void volatile *)(hw->hw_addr + 1880U));
  
#line 890 
  i = 0U;
  
#line 890 
  goto ldv_43973;
  ldv_43972: 
#line 891 
  ;
  
#line 892 
  __const_udelay(42950UL);
  
#line 894 
  command = readl((void const volatile *)(hw->hw_addr + 1880U));
  
#line 896 
  if ((command & 1073741824U) == 0U) 
#line 897 
                                     goto ldv_43971; else ;
  
#line 890 
  i += 1U;
  ldv_43973: 
#line 891 
  ;
  
#line 890 
  if (i <= 9U) 
#line 892 
               goto ldv_43972; else 
#line 895 
                                    goto ldv_43971;
  ldv_43971: 
#line 896 
  ;
  
#line 900 
  if ((long)((command & 1073741824U) != 0U) != 0L) {
    
#line 902 
    ldv_inline_asm();
    
#line 900 
    ;
  }
  else ;
  
#line 902 
  return;
}


#line 913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
void ixgb_check_for_link(struct ixgb_hw *hw)
{
  u32 status_reg;
  u32 xpcss_reg;
  {
    
#line 918 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_check_for_link", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))918U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 918 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 918 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_check_for_link"); else ;
  }
  
#line 920 
  xpcss_reg = readl((void const volatile *)(hw->hw_addr + 1824U));
  
#line 921 
  status_reg = readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 923 
  if ((xpcss_reg & 4096U) != 0U && (status_reg & 2U) != 0U) 
#line 925 
                                                            hw->link_up = (_Bool)1;
  else 
    
#line 926 
    if ((xpcss_reg & 4096U) == 0U && (status_reg & 2U) != 0U) {
      {
        
#line 928 
        struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_check_for_link", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "XPCSS Not Aligned while Status:LU is set\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))928U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 928 
        if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 928 
                                                              __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
      }
      
#line 929 
      hw->link_up = ixgb_link_reset(hw);
    }
    else 
#line 935 
         hw->link_up = ixgb_link_reset(hw);
  
#line 936 
  return;
}


#line 949  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
bool ixgb_check_for_bad_link(struct ixgb_hw *hw)
{
  u32 newLFC;
  u32 newRFC;
  
#line 952 
  bool bad_link_returncode = (_Bool)0;
  
#line 954 
  if (hw->phy_type == (unsigned int)4) {
    
#line 955 
    newLFC = readl((void const volatile *)(hw->hw_addr + 8592U));
    
#line 956 
    newRFC = readl((void const volatile *)(hw->hw_addr + 8584U));
    
#line 957 
    if (hw->lastLFC + 250U < newLFC || hw->lastRFC + 250U < newRFC) {
      {
        
#line 959 
        struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_check_for_bad_link", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "BAD LINK! too many LFC/RFC since last check\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))959U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 959 
        if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 959 
                                                            __dynamic_pr_debug(& descriptor,"ixgb"); else ;
      }
      
#line 960 
      bad_link_returncode = (_Bool)1;
    }
    else ;
    
#line 962 
    hw->lastLFC = newLFC;
    
#line 963 
    hw->lastRFC = newRFC;
  }
  else ;
  
#line 966 
  return bad_link_returncode;
}


#line 975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static void ixgb_clear_hw_cntrs(struct ixgb_hw *hw)
{
  u32 volatile temp_reg;
  {
    
#line 979 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_clear_hw_cntrs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))979U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 979 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 979 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_clear_hw_cntrs"); else ;
  }
  
#line 982 
  if ((int)hw->adapter_stopped != 0) {
    {
      
#line 983 
      struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_clear_hw_cntrs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "Exiting because the adapter is stopped!!!\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))983U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 983 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 983 
                                                            __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
    }
    
#line 984 
    goto return_label;
  }
  else ;
  
#line 987 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8192U));
  
#line 988 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8196U));
  
#line 989 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8200U));
  
#line 990 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8204U));
  
#line 991 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8208U));
  
#line 992 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8212U));
  
#line 993 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8216U));
  
#line 994 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8220U));
  
#line 995 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8224U));
  
#line 996 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8228U));
  
#line 997 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8232U));
  
#line 998 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8236U));
  
#line 999 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8240U));
  
#line 1000 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8244U));
  
#line 1001 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8248U));
  
#line 1002 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8252U));
  
#line 1003 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8256U));
  
#line 1004 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8260U));
  
#line 1005 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8264U));
  
#line 1006 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8272U));
  
#line 1007 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8280U));
  
#line 1008 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8288U));
  
#line 1009 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8296U));
  
#line 1010 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8304U));
  
#line 1011 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8312U));
  
#line 1012 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8320U));
  
#line 1013 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8448U));
  
#line 1014 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8452U));
  
#line 1015 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8456U));
  
#line 1016 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8460U));
  
#line 1017 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8464U));
  
#line 1018 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8468U));
  
#line 1019 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8472U));
  
#line 1020 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8476U));
  
#line 1021 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8480U));
  
#line 1022 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8484U));
  
#line 1023 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8488U));
  
#line 1024 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8492U));
  
#line 1025 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8496U));
  
#line 1026 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8500U));
  
#line 1027 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8504U));
  
#line 1028 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8508U));
  
#line 1029 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8512U));
  
#line 1030 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8516U));
  
#line 1031 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8520U));
  
#line 1032 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8528U));
  
#line 1033 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8560U));
  
#line 1034 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8568U));
  
#line 1035 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8576U));
  
#line 1036 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8584U));
  
#line 1037 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8592U));
  
#line 1038 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8600U));
  
#line 1039 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8608U));
  
#line 1040 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8616U));
  
#line 1041 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8624U));
  
#line 1042 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8632U));
  
#line 1043 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8640U));
  
#line 1044 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8648U));
  
#line 1045 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8656U));
  
#line 1046 
  temp_reg = readl((void const volatile *)(hw->hw_addr + 8664U));
  return_label: 
#line 1047 
                return;
}


#line 1055  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
void ixgb_led_on(struct ixgb_hw *hw)
{
  
#line 1057 
  u32 ctrl0_reg = readl((void const volatile *)hw->hw_addr);
  
#line 1060 
  ctrl0_reg &= 4294705151U;
  
#line 1061 
  writel(ctrl0_reg,(void volatile *)hw->hw_addr);
  
#line 1062 
  return;
}


#line 1070  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
void ixgb_led_off(struct ixgb_hw *hw)
{
  
#line 1072 
  u32 ctrl0_reg = readl((void const volatile *)hw->hw_addr);
  
#line 1075 
  ctrl0_reg |= 262144U;
  
#line 1076 
  writel(ctrl0_reg,(void volatile *)hw->hw_addr);
  
#line 1077 
  return;
}


#line 1085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static void ixgb_get_bus_info(struct ixgb_hw *hw)
{
  u32 status_reg;
  int tmp;
  int tmp_1;
  
#line 1089 
  status_reg = readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 1092 
  if ((status_reg & 8192U) != 0U) 
#line 1092 
                                  tmp = 2; else 
#line 1092 
                                                tmp = 1;
  
#line 1091 
  hw->bus.type = tmp;
  
#line 1094 
  if (hw->bus.type == (unsigned int)1) {
    int tmp_0;
    
#line 1096 
    if ((status_reg & 2048U) != 0U) 
#line 1096 
                                    tmp_0 = 2; else 
#line 1096 
                                                    tmp_0 = 1;
    
#line 1095 
    hw->bus.speed = tmp_0;
  }
  else {
    
#line 1098 
    switch (status_reg & 49152U) {
      case (unsigned int)0: 
#line 1099 
      ;
      
#line 1100 
      hw->bus.speed = 2;
      
#line 1101 
      goto ldv_44010;
      case (unsigned int)16384: 
#line 1102 
      ;
      
#line 1103 
      hw->bus.speed = 3;
      
#line 1104 
      goto ldv_44010;
      case (unsigned int)32768: 
#line 1105 
      ;
      
#line 1106 
      hw->bus.speed = 4;
      
#line 1107 
      goto ldv_44010;
      default: 
#line 1108 
      ;
      
#line 1109 
      hw->bus.speed = 5;
      
#line 1110 
      goto ldv_44010;
    }
    ldv_44010: 
#line 1112 
    ;
  }
  
#line 1115 
  if ((status_reg & 4096U) != 0U) 
#line 1115 
                                  tmp_1 = 2; else 
#line 1115 
                                                  tmp_1 = 1;
  
#line 1114 
  hw->bus.width = tmp_1;
  
#line 1116 
  return;
}


#line 1125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static bool mac_addr_valid(u8 *mac_addr)
{
  bool tmp_1;
  
#line 1127 
  bool is_valid = (_Bool)1;
  {
    
#line 1128 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "mac_addr_valid", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1128U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1128 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1128 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","mac_addr_valid"); else ;
  }
  
#line 1131 
  tmp_1 = is_multicast_ether_addr((u8 const *)mac_addr);
  
#line 1131 
  if ((int)tmp_1 != 0) {
    {
      
#line 1132 
      struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "mac_addr_valid", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "MAC address is multicast\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1132U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1132 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1132 
                                                            __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
    }
    
#line 1133 
    is_valid = (_Bool)0;
  }
  else {
    bool tmp_0;
    
#line 1136 
    tmp_0 = is_broadcast_ether_addr((u8 const *)mac_addr);
    
#line 1136 
    if ((int)tmp_0 != 0) {
      {
        
#line 1137 
        struct _ddebug descriptor_1 = {.modname = "ixgb", .function = "mac_addr_valid", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "MAC address is broadcast\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1137U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 1137 
        if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 1137 
                                                              __dynamic_pr_debug(& descriptor_1,"ixgb"); else ;
      }
      
#line 1138 
      is_valid = (_Bool)0;
    }
    else {
      bool tmp;
      
#line 1141 
      tmp = is_zero_ether_addr((u8 const *)mac_addr);
      
#line 1141 
      if ((int)tmp != 0) {
        {
          
#line 1142 
          struct _ddebug descriptor_2 = {.modname = "ixgb", .function = "mac_addr_valid", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c", .format = "MAC address is all zeros\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1142U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 1142 
          if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 1142 
                                                                __dynamic_pr_debug(& descriptor_2,"ixgb"); else ;
        }
        
#line 1143 
        is_valid = (_Bool)0;
      }
      else ;
    }
  }
  
#line 1145 
  return is_valid;
}


#line 1155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static bool ixgb_link_reset(struct ixgb_hw *hw)
{
  unsigned int tmp;
  int tmp_2;
  unsigned int tmp_0;
  
#line 1157 
  bool link_status = (_Bool)0;
  
#line 1158 
  u8 wait_retries = (unsigned char)8U;
  
#line 1159 
  u8 lrst_retries = (unsigned char)8U;
  ldv_44031: 
#line 1160 
  ;
  
#line 1163 
  ;
  
#line 1163 
  tmp = readl((void const volatile *)hw->hw_addr);
  
#line 1163 
  writel(tmp | 8U,(void volatile *)hw->hw_addr);
  ldv_44029: 
#line 1164 
  ;
  
#line 1168 
  __const_udelay(55835UL);
  
#line 1172 
  tmp_0 = readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 1172 
  if ((tmp_0 & 2U) != 0U) {
    unsigned int tmp_1;
    
#line 1172 
    tmp_1 = readl((void const volatile *)(hw->hw_addr + 1824U));
    
#line 1172 
    if ((tmp_1 & 4096U) != 0U) 
#line 1172 
                               tmp_2 = 1; else 
#line 1172 
                                               tmp_2 = 0;
  }
  else 
#line 1172 
       tmp_2 = 0;
  
#line 1169 
  link_status = (_Bool)(tmp_2 != 0);
  
#line 1173 
  if (! link_status) {
    
#line 1173 
    wait_retries = (u8)((int)wait_retries - 1);
    
#line 1173 
    if ((unsigned int)wait_retries != 0U) 
#line 1175 
                                          goto ldv_44029; else 
#line 1178 
                                                               goto ldv_44030;
  }
  else 
#line 1178 
       goto ldv_44030;
  ldv_44030: 
#line 1179 
  ;
  
#line 1175 
  if (! link_status) {
    
#line 1175 
    lrst_retries = (u8)((int)lrst_retries - 1);
    
#line 1175 
    if ((unsigned int)lrst_retries != 0U) 
#line 1177 
                                          goto ldv_44031; else 
#line 1180 
                                                               goto ldv_44032;
  }
  else 
#line 1180 
       goto ldv_44032;
  ldv_44032: 
#line 1181 
  ;
  
#line 1177 
  return link_status;
}


#line 1186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static void ixgb_optics_reset(struct ixgb_hw *hw)
{
  
#line 1188 
  if (hw->phy_type == (unsigned int)4) {
    u16 mdio_reg;
    
#line 1191 
    ixgb_write_phy_reg(hw,0U,0U,1U,(unsigned short)32768);
    
#line 1197 
    mdio_reg = ixgb_read_phy_reg(hw,0U,0U,1U);
  }
  else ;
  
#line 1199 
  return;
}


#line 1219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.c"
static void ixgb_optics_reset_bcm(struct ixgb_hw *hw)
{
  
#line 1221 
  u32 ctrl = readl((void const volatile *)hw->hw_addr);
  
#line 1222 
  ctrl &= 4293918719U;
  
#line 1223 
  ctrl |= 2097152U;
  
#line 1224 
  writel(ctrl,(void volatile *)hw->hw_addr);
  
#line 1225 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 1228 
  msleep(305U);
  
#line 1232 
  ixgb_write_phy_reg(hw,51203U,0U,3U,(unsigned short)356);
  
#line 1238 
  ixgb_read_phy_reg(hw,51203U,0U,3U);
  
#line 1242 
  ixgb_read_phy_reg(hw,51203U,0U,3U);
  
#line 1247 
  ixgb_write_phy_reg(hw,51200U,0U,3U,(unsigned short)32703);
  
#line 1252 
  ixgb_read_phy_reg(hw,51200U,0U,3U);
  
#line 1256 
  ixgb_read_phy_reg(hw,51200U,0U,3U);
  
#line 1262 
  msleep(305U);
  
#line 1263 
  return;
}


#line 779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_hw.h"
u32 ixgb_get_ee_pba_number(struct ixgb_hw *hw);


#line 782 
__le16 ixgb_get_eeprom_word(struct ixgb_hw *hw, u16 index);


#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.h"
u16 ixgb_read_eeprom(struct ixgb_hw *hw, u16 offset);


#line 98 
bool ixgb_validate_eeprom_checksum(struct ixgb_hw *hw);


#line 100 
void ixgb_update_eeprom_checksum(struct ixgb_hw *hw);


#line 102 
void ixgb_write_eeprom(struct ixgb_hw *hw, u16 offset, u16 data);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static u16 ixgb_shift_in_bits(struct ixgb_hw *hw);


#line 36 
static void ixgb_shift_out_bits(struct ixgb_hw *hw, u16 data, u16 count);


#line 39 
static void ixgb_standby_eeprom(struct ixgb_hw *hw);


#line 41 
static bool ixgb_wait_eeprom_command(struct ixgb_hw *hw);


#line 43 
static void ixgb_cleanup_eeprom(struct ixgb_hw *hw);


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static void ixgb_raise_clock(struct ixgb_hw *hw, u32 *eecd_reg)
{
  
#line 58 
  *eecd_reg |= 1U;
  
#line 59 
  writel(*eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 60 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 61 
  __const_udelay(214750UL);
  
#line 63 
  return;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static void ixgb_lower_clock(struct ixgb_hw *hw, u32 *eecd_reg)
{
  
#line 77 
  *eecd_reg &= 4294967294U;
  
#line 78 
  writel(*eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 79 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 80 
  __const_udelay(214750UL);
  
#line 82 
  return;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static void ixgb_shift_out_bits(struct ixgb_hw *hw, u16 data, u16 count)
{
  u32 eecd_reg;
  u32 mask;
  
#line 102 
  mask = (unsigned int)(1 << ((int)count + -1));
  
#line 103 
  eecd_reg = readl((void const volatile *)(hw->hw_addr + 24U));
  
#line 104 
  eecd_reg &= 4294967283U;
  ldv_34996: 
#line 105 
  ;
  
#line 111 
  eecd_reg &= 4294967291U;
  
#line 113 
  if (((unsigned int)data & mask) != 0U) 
#line 114 
                                         eecd_reg |= 4U; else ;
  
#line 116 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 117 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 119 
  __const_udelay(214750UL);
  
#line 121 
  ixgb_raise_clock(hw,& eecd_reg);
  
#line 122 
  ixgb_lower_clock(hw,& eecd_reg);
  
#line 124 
  mask >>= 1;
  
#line 126 
  if (mask != 0U) 
#line 128 
                  goto ldv_34996; else 
#line 131 
                                       goto ldv_34997;
  ldv_34997: 
#line 132 
  ;
  
#line 129 
  eecd_reg &= 4294967291U;
  
#line 130 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 131 
  return;
}


#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static u16 ixgb_shift_in_bits(struct ixgb_hw *hw)
{
  u32 eecd_reg;
  u32 i;
  u16 data;
  
#line 152 
  eecd_reg = readl((void const volatile *)(hw->hw_addr + 24U));
  
#line 154 
  eecd_reg &= 4294967283U;
  
#line 155 
  data = (unsigned short)0U;
  
#line 157 
  i = 0U;
  
#line 157 
  goto ldv_35005;
  ldv_35004: 
#line 158 
  ;
  
#line 158 
  data = (unsigned short)((int)data << 1U);
  
#line 159 
  ixgb_raise_clock(hw,& eecd_reg);
  
#line 161 
  eecd_reg = readl((void const volatile *)(hw->hw_addr + 24U));
  
#line 163 
  eecd_reg &= 4294967291U;
  
#line 164 
  if ((eecd_reg & 8U) != 0U) 
#line 165 
                             data = (unsigned short)((unsigned int)data | 1U); else ;
  
#line 167 
  ixgb_lower_clock(hw,& eecd_reg);
  
#line 157 
  i += 1U;
  ldv_35005: 
#line 158 
  ;
  
#line 157 
  if (i <= 15U) 
#line 159 
                goto ldv_35004; else 
#line 162 
                                     goto ldv_35006;
  ldv_35006: 
#line 163 
  ;
  
#line 170 
  return data;
}


#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static void ixgb_setup_eeprom(struct ixgb_hw *hw)
{
  u32 eecd_reg;
  
#line 186 
  eecd_reg = readl((void const volatile *)(hw->hw_addr + 24U));
  
#line 189 
  eecd_reg &= 4294967290U;
  
#line 190 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 193 
  eecd_reg |= 2U;
  
#line 194 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 195 
  return;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static void ixgb_standby_eeprom(struct ixgb_hw *hw)
{
  u32 eecd_reg;
  
#line 207 
  eecd_reg = readl((void const volatile *)(hw->hw_addr + 24U));
  
#line 210 
  eecd_reg &= 4294967292U;
  
#line 211 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 212 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 213 
  __const_udelay(214750UL);
  
#line 216 
  eecd_reg |= 1U;
  
#line 217 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 218 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 219 
  __const_udelay(214750UL);
  
#line 222 
  eecd_reg |= 2U;
  
#line 223 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 224 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 225 
  __const_udelay(214750UL);
  
#line 228 
  eecd_reg &= 4294967294U;
  
#line 229 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 230 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 231 
  __const_udelay(214750UL);
  
#line 233 
  return;
}


#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static void ixgb_clock_eeprom(struct ixgb_hw *hw)
{
  u32 eecd_reg;
  
#line 244 
  eecd_reg = readl((void const volatile *)(hw->hw_addr + 24U));
  
#line 247 
  eecd_reg |= 1U;
  
#line 248 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 249 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 250 
  __const_udelay(214750UL);
  
#line 253 
  eecd_reg &= 4294967294U;
  
#line 254 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 255 
  readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 256 
  __const_udelay(214750UL);
  
#line 258 
  return;
}


#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static void ixgb_cleanup_eeprom(struct ixgb_hw *hw)
{
  u32 eecd_reg;
  
#line 269 
  eecd_reg = readl((void const volatile *)(hw->hw_addr + 24U));
  
#line 271 
  eecd_reg &= 4294967289U;
  
#line 273 
  writel(eecd_reg,(void volatile *)(hw->hw_addr + 24U));
  
#line 275 
  ixgb_clock_eeprom(hw);
  
#line 276 
  return;
}


#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static bool ixgb_wait_eeprom_command(struct ixgb_hw *hw)
{
  bool __retres;
  u32 eecd_reg;
  u32 i;
  
#line 298 
  ixgb_standby_eeprom(hw);
  
#line 304 
  i = 0U;
  
#line 304 
  goto ldv_35029;
  ldv_35028: 
#line 305 
  ;
  
#line 305 
  eecd_reg = readl((void const volatile *)(hw->hw_addr + 24U));
  
#line 307 
  if ((eecd_reg & 8U) != 0U) {
    
#line 308 
    __retres = (_Bool)1;
    
#line 308 
    goto return_label;
  }
  else ;
  
#line 310 
  __const_udelay(214750UL);
  
#line 304 
  i += 1U;
  ldv_35029: 
#line 305 
  ;
  
#line 304 
  if (i <= 199U) 
#line 306 
                 goto ldv_35028; else 
#line 309 
                                      goto ldv_35030;
  ldv_35030: 
#line 310 
  ;
  
#line 314 
  ldv_inline_asm();
  
#line 312 
  ;
  
#line 313 
  __retres = (_Bool)0;
  return_label: 
#line 313 
                return __retres;
}


#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
bool ixgb_validate_eeprom_checksum(struct ixgb_hw *hw)
{
  bool __retres;
  u16 i;
  u16 tmp;
  
#line 332 
  u16 checksum = (unsigned short)0U;
  
#line 335 
  i = (unsigned short)0U;
  
#line 335 
  goto ldv_35037;
  ldv_35036: 
#line 336 
  ;
  
#line 336 
  tmp = ixgb_read_eeprom(hw,(unsigned short)((int)i));
  
#line 336 
  checksum = (unsigned short)((int)tmp + (int)checksum);
  
#line 335 
  i = (u16)((int)i + 1);
  ldv_35037: 
#line 336 
  ;
  
#line 335 
  if ((unsigned int)i <= 63U) 
#line 337 
                              goto ldv_35036; else 
#line 340 
                                                   goto ldv_35038;
  ldv_35038: 
#line 341 
  ;
  
#line 338 
  if ((unsigned int)checksum == 47802U) {
    
#line 339 
    __retres = (_Bool)1;
    
#line 339 
    goto return_label;
  }
  else {
    
#line 341 
    __retres = (_Bool)0;
    
#line 341 
    goto return_label;
  }
  return_label: 
#line 338 
                return __retres;
}


#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
void ixgb_update_eeprom_checksum(struct ixgb_hw *hw)
{
  u16 i;
  u16 tmp;
  
#line 355 
  u16 checksum = (unsigned short)0U;
  
#line 358 
  i = (unsigned short)0U;
  
#line 358 
  goto ldv_35045;
  ldv_35044: 
#line 359 
  ;
  
#line 359 
  tmp = ixgb_read_eeprom(hw,(unsigned short)((int)i));
  
#line 359 
  checksum = (unsigned short)((int)tmp + (int)checksum);
  
#line 358 
  i = (u16)((int)i + 1);
  ldv_35045: 
#line 359 
  ;
  
#line 358 
  if ((unsigned int)i <= 62U) 
#line 360 
                              goto ldv_35044; else 
#line 363 
                                                   goto ldv_35046;
  ldv_35046: 
#line 364 
  ;
  
#line 361 
  checksum = (unsigned short)(47802U - (unsigned int)checksum);
  
#line 363 
  ixgb_write_eeprom(hw,(unsigned short)63,(unsigned short)((int)checksum));
  
#line 364 
  return;
}


#line 378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
void ixgb_write_eeprom(struct ixgb_hw *hw, u16 offset, u16 data)
{
  
#line 380 
  struct ixgb_ee_map_type *ee_map = (struct ixgb_ee_map_type *)(& hw->eeprom);
  
#line 383 
  ixgb_setup_eeprom(hw);
  
#line 388 
  ixgb_shift_out_bits(hw,(unsigned short)19,(unsigned short)5);
  
#line 389 
  ixgb_shift_out_bits(hw,(unsigned short)0,(unsigned short)4);
  
#line 392 
  ixgb_standby_eeprom(hw);
  
#line 395 
  ixgb_shift_out_bits(hw,(unsigned short)5,(unsigned short)3);
  
#line 396 
  ixgb_shift_out_bits(hw,(unsigned short)((int)offset),(unsigned short)6);
  
#line 399 
  ixgb_shift_out_bits(hw,(unsigned short)((int)data),(unsigned short)16);
  
#line 401 
  ixgb_wait_eeprom_command(hw);
  
#line 404 
  ixgb_standby_eeprom(hw);
  
#line 410 
  ixgb_shift_out_bits(hw,(unsigned short)16,(unsigned short)5);
  
#line 411 
  ixgb_shift_out_bits(hw,(unsigned short)0,(unsigned short)4);
  
#line 414 
  ixgb_cleanup_eeprom(hw);
  
#line 417 
  ee_map->init_ctrl_reg_1 = (unsigned short)0U;
  
#line 418 
  return;
}


#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
u16 ixgb_read_eeprom(struct ixgb_hw *hw, u16 offset)
{
  u16 data;
  
#line 436 
  ixgb_setup_eeprom(hw);
  
#line 439 
  ixgb_shift_out_bits(hw,(unsigned short)6,(unsigned short)3);
  
#line 443 
  ixgb_shift_out_bits(hw,(unsigned short)((int)offset),(unsigned short)6);
  
#line 446 
  data = ixgb_shift_in_bits(hw);
  
#line 449 
  ixgb_standby_eeprom(hw);
  
#line 451 
  return data;
}


#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
bool ixgb_get_eeprom_data(struct ixgb_hw *hw)
{
  bool __retres;
  u16 i;
  struct ixgb_ee_map_type *ee_map;
  
#line 468 
  u16 checksum = (unsigned short)0U;
  {
    
#line 471 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_get_eeprom_data", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))471U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 471 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 471 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_get_eeprom_data"); else ;
  }
  
#line 473 
  ee_map = (struct ixgb_ee_map_type *)(& hw->eeprom);
  {
    
#line 475 
    struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_get_eeprom_data", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c", .format = "Reading eeprom data\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))475U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 475 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 475 
                                                          __dynamic_pr_debug(& descriptor_0,"ixgb"); else ;
  }
  
#line 476 
  i = (unsigned short)0U;
  
#line 476 
  goto ldv_35069;
  ldv_35068: 
#line 477 
  ;
  {
    u16 ee_data;
    
#line 478 
    ee_data = ixgb_read_eeprom(hw,(unsigned short)((int)i));
    
#line 479 
    checksum = (unsigned short)((int)checksum + (int)ee_data);
    
#line 480 
    hw->eeprom[(int)i] = ee_data;
  }
  
#line 476 
  i = (u16)((int)i + 1);
  ldv_35069: 
#line 477 
  ;
  
#line 476 
  if ((unsigned int)i <= 63U) 
#line 478 
                              goto ldv_35068; else 
#line 481 
                                                   goto ldv_35070;
  ldv_35070: 
#line 482 
  ;
  
#line 483 
  if ((unsigned int)checksum != 47802U) {
    {
      
#line 484 
      struct _ddebug descriptor_1 = {.modname = "ixgb", .function = "ixgb_get_eeprom_data", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c", .format = "Checksum invalid\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))484U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 484 
      if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 484 
                                                            __dynamic_pr_debug(& descriptor_1,"ixgb"); else ;
    }
    
#line 487 
    ee_map->init_ctrl_reg_1 = (unsigned short)0U;
    
#line 488 
    __retres = (_Bool)0;
    
#line 488 
    goto return_label;
  }
  else ;
  
#line 491 
  if (((int)ee_map->init_ctrl_reg_1 & 49152) != 16384) {
    {
      
#line 493 
      struct _ddebug descriptor_2 = {.modname = "ixgb", .function = "ixgb_get_eeprom_data", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c", .format = "Signature invalid\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))493U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 493 
      if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 493 
                                                            __dynamic_pr_debug(& descriptor_2,"ixgb"); else ;
    }
    
#line 494 
    __retres = (_Bool)0;
    
#line 494 
    goto return_label;
  }
  else ;
  
#line 497 
  __retres = (_Bool)1;
  return_label: 
#line 497 
                return __retres;
}


#line 511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
static bool ixgb_check_and_get_eeprom_data(struct ixgb_hw *hw)
{
  bool __retres;
  
#line 513 
  struct ixgb_ee_map_type *ee_map = (struct ixgb_ee_map_type *)(& hw->eeprom);
  
#line 515 
  if (((int)ee_map->init_ctrl_reg_1 & 49152) == 16384) {
    
#line 517 
    __retres = (_Bool)1;
    
#line 517 
    goto return_label;
  }
  else {
    bool tmp;
    
#line 519 
    tmp = ixgb_get_eeprom_data(hw);
    
#line 519 
    __retres = tmp;
    
#line 519 
    goto return_label;
  }
  return_label: 
#line 515 
                return __retres;
}


#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
__le16 ixgb_get_eeprom_word(struct ixgb_hw *hw, u16 index)
{
  __le16 __retres;
  
#line 536 
  if ((unsigned int)index <= 63U) {
    bool tmp;
    
#line 536 
    tmp = ixgb_check_and_get_eeprom_data(hw);
    
#line 536 
    if ((int)tmp != 0) {
      
#line 537 
      __retres = hw->eeprom[(int)index];
      
#line 537 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 539 
  __retres = (unsigned short)0U;
  return_label: 
#line 539 
                return __retres;
}


#line 551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
void ixgb_get_ee_mac_addr(struct ixgb_hw *hw, u8 *mac_addr)
{
  int i;
  bool tmp;
  
#line 555 
  struct ixgb_ee_map_type *ee_map = (struct ixgb_ee_map_type *)(& hw->eeprom);
  {
    
#line 557 
    struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_get_ee_mac_addr", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c", .format = "%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))557U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 557 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 557 
                                                        __dynamic_pr_debug(& descriptor,"ixgb","ixgb_get_ee_mac_addr"); else ;
  }
  
#line 559 
  tmp = ixgb_check_and_get_eeprom_data(hw);
  
#line 559 
  if ((int)tmp != 0) {
    
#line 560 
    i = 0;
    
#line 560 
    goto ldv_35090;
    ldv_35089: 
#line 561 
    ;
    
#line 561 
    *(mac_addr + i) = ee_map->mac_addr[i];
    
#line 560 
    i += 1;
    ldv_35090: 
#line 561 
    ;
    
#line 560 
    if (i <= 5) 
#line 562 
                goto ldv_35089; else 
#line 565 
                                     goto ldv_35091;
    ldv_35091: 
#line 566 
    ;
    {
      
#line 563 
      struct _ddebug descriptor_0 = {.modname = "ixgb", .function = "ixgb_get_ee_mac_addr", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c", .format = "eeprom mac address = %pM\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))563U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 563 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 563 
                                                            __dynamic_pr_debug(& descriptor_0,"ixgb",mac_addr); else ;
    }
  }
  else ;
  
#line 566 
  return;
}


#line 577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
u32 ixgb_get_ee_pba_number(struct ixgb_hw *hw)
{
  u32 __retres;
  bool tmp;
  
#line 579 
  tmp = ixgb_check_and_get_eeprom_data(hw);
  
#line 579 
  if ((int)tmp != 0) {
    
#line 581 
    __retres = (unsigned int)((int)hw->eeprom[8] | ((int)hw->eeprom[9] << 16));
    
#line 581 
    goto return_label;
  }
  else ;
  
#line 583 
  __retres = 0U;
  return_label: 
#line 583 
                return __retres;
}


#line 596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ee.c"
u16 ixgb_get_ee_device_id(struct ixgb_hw *hw)
{
  u16 __retres;
  bool tmp;
  
#line 598 
  struct ixgb_ee_map_type *ee_map = (struct ixgb_ee_map_type *)(& hw->eeprom);
  
#line 600 
  tmp = ixgb_check_and_get_eeprom_data(hw);
  
#line 600 
  if ((int)tmp != 0) {
    
#line 601 
    __retres = ee_map->device_id;
    
#line 601 
    goto return_label;
  }
  else ;
  
#line 603 
  __retres = (unsigned short)0U;
  return_label: 
#line 603 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb.h"
void ixgb_set_ethtool_ops(struct net_device *netdev);


#line 191 
char ixgb_driver_name[5U];


#line 192 
char const ixgb_driver_version[16U];


#line 194 
void ixgb_set_speed_duplex(struct net_device *netdev);


#line 196 
int ixgb_up(struct ixgb_adapter *adapter);


#line 197 
void ixgb_down(struct ixgb_adapter *adapter, bool kill_watchdog);


#line 198 
void ixgb_reset(struct ixgb_adapter *adapter);


#line 199 
int ixgb_setup_rx_resources(struct ixgb_adapter *adapter);


#line 200 
int ixgb_setup_tx_resources(struct ixgb_adapter *adapter);


#line 201 
void ixgb_free_rx_resources(struct ixgb_adapter *adapter);


#line 202 
void ixgb_free_tx_resources(struct ixgb_adapter *adapter);


#line 203 
void ixgb_update_stats(struct ixgb_adapter *adapter);


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static struct ixgb_stats ixgb_gstrings_stats[36U] = {{.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 296}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 304}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 312}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 320}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 328}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 336}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 344}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 352}, {.stat_string = {(char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 360}, {.stat_string = {(char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 368}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 384}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 392}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 400}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'n', (char)'o', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'e', (char)'r', (char)'_', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1648}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 408}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'i', (char)'s', (char)'s', (char)'e', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 416}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'e', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 424}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'c', (char)'a', (char)'r', (char)'r', (char)'i', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 432}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 440}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'h', (char)'e', (char)'a', (char)'r', (char)'t', (char)'b', (char)'e', (char)'a', (char)'t', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 448}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'w', (char)'i', (char)'n', (char)'d', (char)'o', (char)'w', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 0, .sizeof_stat = 8, .stat_offset = 456}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'e', (char)'f', (char)'e', (char)'r', (char)'r', (char)'e', (char)'d', (char)'_', (char)'o', (char)'k', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1856}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'t', (char)'i', (char)'m', (char)'e', (char)'o', (char)'u', (char)'t', (char)'_', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'\000'}, .type = 1, .sizeof_stat = 4, .stat_offset = 852}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'r', (char)'e', (char)'s', (char)'t', (char)'a', (char)'r', (char)'t', (char)'_', (char)'q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'\000'}, .type = 1, .sizeof_stat = 4, .stat_offset = 808}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'l', (char)'o', (char)'n', (char)'g', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1664}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'s', (char)'h', (char)'o', (char)'r', (char)'t', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1656}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'t', (char)'c', (char)'p', (char)'_', (char)'s', (char)'e', (char)'g', (char)'_', (char)'g', (char)'o', (char)'o', (char)'d', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1872}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'t', (char)'c', (char)'p', (char)'_', (char)'s', (char)'e', (char)'g', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'e', (char)'d', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1880}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'c', (char)'o', (char)'n', (char)'t', (char)'r', (char)'o', (char)'l', (char)'_', (char)'x', (char)'o', (char)'n', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1944}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'c', (char)'o', (char)'n', (char)'t', (char)'r', (char)'o', (char)'l', (char)'_', (char)'x', (char)'o', (char)'f', (char)'f', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1960}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'c', (char)'o', (char)'n', (char)'t', (char)'r', (char)'o', (char)'l', (char)'_', (char)'x', (char)'o', (char)'n', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1952}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'c', (char)'o', (char)'n', (char)'t', (char)'r', (char)'o', (char)'l', (char)'_', (char)'x', (char)'o', (char)'f', (char)'f', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 1968}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'g', (char)'o', (char)'o', (char)'d', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 912}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 904}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'g', (char)'o', (char)'o', (char)'d', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 832}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 1, .sizeof_stat = 8, .stat_offset = 840}};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
{
  int __retres;
  bool tmp_0;
  
#line 99 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 101 
  ecmd->supported = 5120U;
  
#line 102 
  ecmd->advertising = 5120U;
  
#line 103 
  ecmd->port = (unsigned char)3U;
  
#line 104 
  ecmd->transceiver = (unsigned char)1U;
  
#line 106 
  tmp_0 = netif_carrier_ok((struct net_device const *)adapter->netdev);
  
#line 106 
  if ((int)tmp_0 != 0) {
    
#line 107 
    ethtool_cmd_speed_set(ecmd,10000U);
    
#line 108 
    ecmd->duplex = (unsigned char)1U;
  }
  else {
    
#line 110 
    ethtool_cmd_speed_set(ecmd,4294967295U);
    
#line 111 
    ecmd->duplex = (unsigned char)255U;
  }
  
#line 114 
  ecmd->autoneg = (unsigned char)0U;
  
#line 115 
  __retres = 0;
  
#line 115 
  return __retres;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
void ixgb_set_speed_duplex(struct net_device *netdev)
{
  
#line 120 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 122 
  adapter->link_speed = (unsigned short)10000U;
  
#line 123 
  adapter->link_duplex = (unsigned short)2U;
  
#line 124 
  netif_carrier_on(netdev);
  
#line 125 
  netif_wake_queue(netdev);
  
#line 126 
  return;
}


#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_set_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
{
  int __retres;
  bool tmp_1;
  
#line 131 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 132 
  u32 speed = ethtool_cmd_speed((struct ethtool_cmd const *)ecmd);
  
#line 134 
  if ((unsigned int)ecmd->autoneg == 1U || (unsigned int)ecmd->duplex + speed != 10001U) {
    
#line 136 
    __retres = -22;
    
#line 136 
    goto return_label;
  }
  else ;
  
#line 138 
  tmp_1 = netif_running((struct net_device const *)adapter->netdev);
  
#line 138 
  if ((int)tmp_1 != 0) {
    
#line 139 
    ixgb_down(adapter,(_Bool)1);
    
#line 140 
    ixgb_reset(adapter);
    
#line 141 
    ixgb_up(adapter);
    
#line 142 
    ixgb_set_speed_duplex(netdev);
  }
  else 
#line 144 
       ixgb_reset(adapter);
  
#line 146 
  __retres = 0;
  return_label: 
#line 146 
                return __retres;
}


#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static void ixgb_get_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause)
{
  
#line 153 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 154 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 156 
  pause->autoneg = 0U;
  
#line 158 
  if (hw->fc.type == (unsigned int)1) 
#line 159 
                                      pause->rx_pause = 1U;
  else 
    
#line 160 
    if (hw->fc.type == (unsigned int)2) 
#line 161 
                                        pause->tx_pause = 1U;
    else 
      
#line 162 
      if (hw->fc.type == (unsigned int)3) {
        
#line 163 
        pause->rx_pause = 1U;
        
#line 164 
        pause->tx_pause = 1U;
      }
      else ;
  
#line 166 
  return;
}


#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_set_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause)
{
  int __retres;
  bool tmp_0;
  
#line 172 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 173 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 175 
  if (pause->autoneg == 1U) {
    
#line 176 
    __retres = -22;
    
#line 176 
    goto return_label;
  }
  else ;
  
#line 178 
  if (pause->rx_pause != 0U && pause->tx_pause != 0U) 
#line 179 
                                                      hw->fc.type = 3;
  else 
    
#line 180 
    if (pause->rx_pause != 0U && pause->tx_pause == 0U) 
#line 181 
                                                        hw->fc.type = 1;
    else 
      
#line 182 
      if (pause->rx_pause == 0U && pause->tx_pause != 0U) 
#line 183 
                                                          hw->fc.type = 2;
      else 
        
#line 184 
        if (pause->rx_pause == 0U && pause->tx_pause == 0U) 
#line 185 
                                                            hw->fc.type = 0; else ;
  
#line 187 
  tmp_0 = netif_running((struct net_device const *)adapter->netdev);
  
#line 187 
  if ((int)tmp_0 != 0) {
    
#line 188 
    ixgb_down(adapter,(_Bool)1);
    
#line 189 
    ixgb_up(adapter);
    
#line 190 
    ixgb_set_speed_duplex(netdev);
  }
  else 
#line 192 
       ixgb_reset(adapter);
  
#line 194 
  __retres = 0;
  return_label: 
#line 194 
                return __retres;
}


#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static u32 ixgb_get_msglevel(struct net_device *netdev)
{
  u32 __retres;
  
#line 200 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 201 
  __retres = (unsigned int)adapter->msg_enable;
  
#line 201 
  return __retres;
}


#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static void ixgb_set_msglevel(struct net_device *netdev, u32 data)
{
  
#line 207 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 208 
  adapter->msg_enable = (unsigned short)data;
  
#line 209 
  return;
}


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_get_regs_len(struct net_device *netdev)
{
  int __retres;
  
#line 216 
  __retres = 544;
  
#line 216 
  return __retres;
}


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static void ixgb_get_regs(struct net_device *netdev, struct ethtool_regs *regs, void *p)
{
  u8 i;
  u32 *tmp_0;
  u32 *tmp_1;
  u32 *tmp_2;
  u32 *tmp_3;
  u32 *tmp_4;
  u32 *tmp_5;
  u32 *tmp_6;
  u32 *tmp_7;
  u32 *tmp_8;
  u32 *tmp_9;
  u32 *tmp_10;
  u32 *tmp_11;
  u32 *tmp_12;
  u32 *tmp_13;
  u32 *tmp_14;
  u32 *tmp_15;
  u32 *tmp_16;
  u32 *tmp_17;
  u32 *tmp_18;
  u32 *tmp_19;
  u32 *tmp_20;
  u32 *tmp_21;
  u32 *tmp_22;
  u32 *tmp_23;
  u32 *tmp_24;
  u32 *tmp_25;
  u32 *tmp_26;
  u32 *tmp_27;
  u32 *tmp_28;
  u32 *tmp_29;
  u32 *tmp_30;
  u32 *tmp_31;
  u32 *tmp_32;
  u32 *tmp_33;
  u32 *tmp_34;
  u32 *tmp_35;
  u32 *tmp_36;
  u32 *tmp_37;
  u32 *tmp_38;
  u32 *tmp_39;
  u32 *tmp_40;
  u32 *tmp_41;
  u32 *tmp_42;
  u32 *tmp_43;
  u32 *tmp_44;
  u32 *tmp_45;
  u32 *tmp_46;
  u32 *tmp_47;
  u32 *tmp_48;
  u32 *tmp_49;
  u32 *tmp_50;
  u32 *tmp_51;
  u32 *tmp_52;
  u32 *tmp_53;
  u32 *tmp_54;
  u32 *tmp_55;
  u32 *tmp_56;
  u32 *tmp_57;
  u32 *tmp_58;
  u32 *tmp_59;
  u32 *tmp_60;
  u32 *tmp_61;
  u32 *tmp_62;
  u32 *tmp_63;
  u32 *tmp_64;
  u32 *tmp_65;
  u32 *tmp_66;
  u32 *tmp_67;
  u32 *tmp_68;
  u32 *tmp_69;
  u32 *tmp_70;
  u32 *tmp_71;
  u32 *tmp_72;
  u32 *tmp_73;
  u32 *tmp_74;
  u32 *tmp_75;
  u32 *tmp_76;
  u32 *tmp_77;
  u32 *tmp_78;
  u32 *tmp_79;
  u32 *tmp_80;
  u32 *tmp_81;
  u32 *tmp_82;
  u32 *tmp_83;
  u32 *tmp_84;
  u32 *tmp_85;
  u32 *tmp_86;
  u32 *tmp_87;
  u32 *tmp_88;
  u32 *tmp_89;
  u32 *tmp_90;
  u32 *tmp_91;
  u32 *tmp_92;
  u32 *tmp_93;
  u32 *tmp_94;
  u32 *tmp_95;
  u32 *tmp_96;
  u32 *tmp_97;
  u32 *tmp_98;
  u32 *tmp_99;
  u32 *tmp_100;
  u32 *tmp_101;
  u32 *tmp_102;
  u32 *tmp_103;
  u32 *tmp_104;
  u32 *tmp_105;
  
#line 223 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 224 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 225 
  u32 *reg = (u32 *)p;
  
#line 226 
  u32 *reg_start = reg;
  
#line 232 
  regs->version = (unsigned int)((((int)hw->revision_id << 16) | 16777216) | (int)hw->device_id);
  
#line 235 
  tmp_0 = reg;
  
#line 235 
  reg += 1;
  
#line 235 
  *tmp_0 = readl((void const volatile *)hw->hw_addr);
  
#line 236 
  tmp_1 = reg;
  
#line 236 
  reg += 1;
  
#line 236 
  *tmp_1 = readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 237 
  tmp_2 = reg;
  
#line 237 
  reg += 1;
  
#line 237 
  *tmp_2 = readl((void const volatile *)(hw->hw_addr + 16U));
  
#line 238 
  tmp_3 = reg;
  
#line 238 
  reg += 1;
  
#line 238 
  *tmp_3 = readl((void const volatile *)(hw->hw_addr + 24U));
  
#line 239 
  tmp_4 = reg;
  
#line 239 
  reg += 1;
  
#line 239 
  *tmp_4 = readl((void const volatile *)(hw->hw_addr + 32U));
  
#line 242 
  tmp_5 = reg;
  
#line 242 
  reg += 1;
  
#line 242 
  *tmp_5 = readl((void const volatile *)(hw->hw_addr + 128U));
  
#line 243 
  tmp_6 = reg;
  
#line 243 
  reg += 1;
  
#line 243 
  *tmp_6 = readl((void const volatile *)(hw->hw_addr + 136U));
  
#line 244 
  tmp_7 = reg;
  
#line 244 
  reg += 1;
  
#line 244 
  *tmp_7 = readl((void const volatile *)(hw->hw_addr + 144U));
  
#line 245 
  tmp_8 = reg;
  
#line 245 
  reg += 1;
  
#line 245 
  *tmp_8 = readl((void const volatile *)(hw->hw_addr + 152U));
  
#line 248 
  tmp_9 = reg;
  
#line 248 
  reg += 1;
  
#line 248 
  *tmp_9 = readl((void const volatile *)(hw->hw_addr + 256U));
  
#line 249 
  tmp_10 = reg;
  
#line 249 
  reg += 1;
  
#line 249 
  *tmp_10 = readl((void const volatile *)(hw->hw_addr + 264U));
  
#line 250 
  tmp_11 = reg;
  
#line 250 
  reg += 1;
  
#line 250 
  *tmp_11 = readl((void const volatile *)(hw->hw_addr + 272U));
  
#line 251 
  tmp_12 = reg;
  
#line 251 
  reg += 1;
  
#line 251 
  *tmp_12 = readl((void const volatile *)(hw->hw_addr + 280U));
  
#line 252 
  tmp_13 = reg;
  
#line 252 
  reg += 1;
  
#line 252 
  *tmp_13 = readl((void const volatile *)(hw->hw_addr + 284U));
  
#line 253 
  tmp_14 = reg;
  
#line 253 
  reg += 1;
  
#line 253 
  *tmp_14 = readl((void const volatile *)(hw->hw_addr + 288U));
  
#line 254 
  tmp_15 = reg;
  
#line 254 
  reg += 1;
  
#line 254 
  *tmp_15 = readl((void const volatile *)(hw->hw_addr + 296U));
  
#line 255 
  tmp_16 = reg;
  
#line 255 
  reg += 1;
  
#line 255 
  *tmp_16 = readl((void const volatile *)(hw->hw_addr + 304U));
  
#line 256 
  tmp_17 = reg;
  
#line 256 
  reg += 1;
  
#line 256 
  *tmp_17 = readl((void const volatile *)(hw->hw_addr + 312U));
  
#line 257 
  tmp_18 = reg;
  
#line 257 
  reg += 1;
  
#line 257 
  *tmp_18 = readl((void const volatile *)(hw->hw_addr + 320U));
  
#line 258 
  tmp_19 = reg;
  
#line 258 
  reg += 1;
  
#line 258 
  *tmp_19 = readl((void const volatile *)(hw->hw_addr + 328U));
  
#line 259 
  tmp_20 = reg;
  
#line 259 
  reg += 1;
  
#line 259 
  *tmp_20 = readl((void const volatile *)(hw->hw_addr + 344U));
  
#line 262 
  i = (unsigned char)0U;
  
#line 262 
  goto ldv_53777;
  ldv_53776: 
#line 263 
  ;
  
#line 263 
  tmp_21 = reg;
  
#line 263 
  reg += 1;
  
#line 263 
  *tmp_21 = readl((void const volatile *)(hw->hw_addr + ((unsigned int)((int)i << 3) + 384U)));
  
#line 264 
  tmp_22 = reg;
  
#line 264 
  reg += 1;
  
#line 264 
  *tmp_22 = readl((void const volatile *)(hw->hw_addr + ((unsigned int)((int)i << 3) + 388U)));
  
#line 262 
  i = (u8)((int)i + 1);
  ldv_53777: 
#line 263 
  ;
  
#line 262 
  if ((unsigned int)i <= 15U) 
#line 264 
                              goto ldv_53776; else 
#line 267 
                                                   goto ldv_53778;
  ldv_53778: 
#line 268 
  ;
  
#line 268 
  tmp_23 = reg;
  
#line 268 
  reg += 1;
  
#line 268 
  *tmp_23 = readl((void const volatile *)(hw->hw_addr + 1536U));
  
#line 269 
  tmp_24 = reg;
  
#line 269 
  reg += 1;
  
#line 269 
  *tmp_24 = readl((void const volatile *)(hw->hw_addr + 1544U));
  
#line 270 
  tmp_25 = reg;
  
#line 270 
  reg += 1;
  
#line 270 
  *tmp_25 = readl((void const volatile *)(hw->hw_addr + 1548U));
  
#line 271 
  tmp_26 = reg;
  
#line 271 
  reg += 1;
  
#line 271 
  *tmp_26 = readl((void const volatile *)(hw->hw_addr + 1552U));
  
#line 272 
  tmp_27 = reg;
  
#line 272 
  reg += 1;
  
#line 272 
  *tmp_27 = readl((void const volatile *)(hw->hw_addr + 1560U));
  
#line 273 
  tmp_28 = reg;
  
#line 273 
  reg += 1;
  
#line 273 
  *tmp_28 = readl((void const volatile *)(hw->hw_addr + 1568U));
  
#line 274 
  tmp_29 = reg;
  
#line 274 
  reg += 1;
  
#line 274 
  *tmp_29 = readl((void const volatile *)(hw->hw_addr + 1576U));
  
#line 275 
  tmp_30 = reg;
  
#line 275 
  reg += 1;
  
#line 275 
  *tmp_30 = readl((void const volatile *)(hw->hw_addr + 1584U));
  
#line 276 
  tmp_31 = reg;
  
#line 276 
  reg += 1;
  
#line 276 
  *tmp_31 = readl((void const volatile *)(hw->hw_addr + 1592U));
  
#line 277 
  tmp_32 = reg;
  
#line 277 
  reg += 1;
  
#line 277 
  *tmp_32 = readl((void const volatile *)(hw->hw_addr + 1600U));
  
#line 280 
  tmp_33 = reg;
  
#line 280 
  reg += 1;
  
#line 280 
  *tmp_33 = readl((void const volatile *)(hw->hw_addr + 1792U));
  
#line 281 
  tmp_34 = reg;
  
#line 281 
  reg += 1;
  
#line 281 
  *tmp_34 = readl((void const volatile *)(hw->hw_addr + 1800U));
  
#line 282 
  tmp_35 = reg;
  
#line 282 
  reg += 1;
  
#line 282 
  *tmp_35 = readl((void const volatile *)(hw->hw_addr + 1808U));
  
#line 283 
  tmp_36 = reg;
  
#line 283 
  reg += 1;
  
#line 283 
  *tmp_36 = readl((void const volatile *)(hw->hw_addr + 1816U));
  
#line 284 
  tmp_37 = reg;
  
#line 284 
  reg += 1;
  
#line 284 
  *tmp_37 = readl((void const volatile *)(hw->hw_addr + 1824U));
  
#line 285 
  tmp_38 = reg;
  
#line 285 
  reg += 1;
  
#line 285 
  *tmp_38 = readl((void const volatile *)(hw->hw_addr + 1832U));
  
#line 286 
  tmp_39 = reg;
  
#line 286 
  reg += 1;
  
#line 286 
  *tmp_39 = readl((void const volatile *)(hw->hw_addr + 1840U));
  
#line 287 
  tmp_40 = reg;
  
#line 287 
  reg += 1;
  
#line 287 
  *tmp_40 = readl((void const volatile *)(hw->hw_addr + 1848U));
  
#line 288 
  tmp_41 = reg;
  
#line 288 
  reg += 1;
  
#line 288 
  *tmp_41 = readl((void const volatile *)(hw->hw_addr + 1856U));
  
#line 289 
  tmp_42 = reg;
  
#line 289 
  reg += 1;
  
#line 289 
  *tmp_42 = readl((void const volatile *)(hw->hw_addr + 1864U));
  
#line 290 
  tmp_43 = reg;
  
#line 290 
  reg += 1;
  
#line 290 
  *tmp_43 = readl((void const volatile *)(hw->hw_addr + 1872U));
  
#line 291 
  tmp_44 = reg;
  
#line 291 
  reg += 1;
  
#line 291 
  *tmp_44 = readl((void const volatile *)(hw->hw_addr + 1880U));
  
#line 292 
  tmp_45 = reg;
  
#line 292 
  reg += 1;
  
#line 292 
  *tmp_45 = readl((void const volatile *)(hw->hw_addr + 1888U));
  
#line 295 
  tmp_46 = reg;
  
#line 295 
  reg += 1;
  
#line 295 
  *tmp_46 = (unsigned int)adapter->stats.tprl;
  
#line 296 
  tmp_47 = reg;
  
#line 296 
  reg += 1;
  
#line 296 
  *tmp_47 = (unsigned int)adapter->stats.tprh;
  
#line 297 
  tmp_48 = reg;
  
#line 297 
  reg += 1;
  
#line 297 
  *tmp_48 = (unsigned int)adapter->stats.gprcl;
  
#line 298 
  tmp_49 = reg;
  
#line 298 
  reg += 1;
  
#line 298 
  *tmp_49 = (unsigned int)adapter->stats.gprch;
  
#line 299 
  tmp_50 = reg;
  
#line 299 
  reg += 1;
  
#line 299 
  *tmp_50 = (unsigned int)adapter->stats.bprcl;
  
#line 300 
  tmp_51 = reg;
  
#line 300 
  reg += 1;
  
#line 300 
  *tmp_51 = (unsigned int)adapter->stats.bprch;
  
#line 301 
  tmp_52 = reg;
  
#line 301 
  reg += 1;
  
#line 301 
  *tmp_52 = (unsigned int)adapter->stats.mprcl;
  
#line 302 
  tmp_53 = reg;
  
#line 302 
  reg += 1;
  
#line 302 
  *tmp_53 = (unsigned int)adapter->stats.mprch;
  
#line 303 
  tmp_54 = reg;
  
#line 303 
  reg += 1;
  
#line 303 
  *tmp_54 = (unsigned int)adapter->stats.uprcl;
  
#line 304 
  tmp_55 = reg;
  
#line 304 
  reg += 1;
  
#line 304 
  *tmp_55 = (unsigned int)adapter->stats.uprch;
  
#line 305 
  tmp_56 = reg;
  
#line 305 
  reg += 1;
  
#line 305 
  *tmp_56 = (unsigned int)adapter->stats.vprcl;
  
#line 306 
  tmp_57 = reg;
  
#line 306 
  reg += 1;
  
#line 306 
  *tmp_57 = (unsigned int)adapter->stats.vprch;
  
#line 307 
  tmp_58 = reg;
  
#line 307 
  reg += 1;
  
#line 307 
  *tmp_58 = (unsigned int)adapter->stats.jprcl;
  
#line 308 
  tmp_59 = reg;
  
#line 308 
  reg += 1;
  
#line 308 
  *tmp_59 = (unsigned int)adapter->stats.jprch;
  
#line 309 
  tmp_60 = reg;
  
#line 309 
  reg += 1;
  
#line 309 
  *tmp_60 = (unsigned int)adapter->stats.gorcl;
  
#line 310 
  tmp_61 = reg;
  
#line 310 
  reg += 1;
  
#line 310 
  *tmp_61 = (unsigned int)adapter->stats.gorch;
  
#line 311 
  tmp_62 = reg;
  
#line 311 
  reg += 1;
  
#line 311 
  *tmp_62 = (unsigned int)adapter->stats.torl;
  
#line 312 
  tmp_63 = reg;
  
#line 312 
  reg += 1;
  
#line 312 
  *tmp_63 = (unsigned int)adapter->stats.torh;
  
#line 313 
  tmp_64 = reg;
  
#line 313 
  reg += 1;
  
#line 313 
  *tmp_64 = (unsigned int)adapter->stats.rnbc;
  
#line 314 
  tmp_65 = reg;
  
#line 314 
  reg += 1;
  
#line 314 
  *tmp_65 = (unsigned int)adapter->stats.ruc;
  
#line 315 
  tmp_66 = reg;
  
#line 315 
  reg += 1;
  
#line 315 
  *tmp_66 = (unsigned int)adapter->stats.roc;
  
#line 316 
  tmp_67 = reg;
  
#line 316 
  reg += 1;
  
#line 316 
  *tmp_67 = (unsigned int)adapter->stats.rlec;
  
#line 317 
  tmp_68 = reg;
  
#line 317 
  reg += 1;
  
#line 317 
  *tmp_68 = (unsigned int)adapter->stats.crcerrs;
  
#line 318 
  tmp_69 = reg;
  
#line 318 
  reg += 1;
  
#line 318 
  *tmp_69 = (unsigned int)adapter->stats.icbc;
  
#line 319 
  tmp_70 = reg;
  
#line 319 
  reg += 1;
  
#line 319 
  *tmp_70 = (unsigned int)adapter->stats.ecbc;
  
#line 320 
  tmp_71 = reg;
  
#line 320 
  reg += 1;
  
#line 320 
  *tmp_71 = (unsigned int)adapter->stats.mpc;
  
#line 321 
  tmp_72 = reg;
  
#line 321 
  reg += 1;
  
#line 321 
  *tmp_72 = (unsigned int)adapter->stats.tptl;
  
#line 322 
  tmp_73 = reg;
  
#line 322 
  reg += 1;
  
#line 322 
  *tmp_73 = (unsigned int)adapter->stats.tpth;
  
#line 323 
  tmp_74 = reg;
  
#line 323 
  reg += 1;
  
#line 323 
  *tmp_74 = (unsigned int)adapter->stats.gptcl;
  
#line 324 
  tmp_75 = reg;
  
#line 324 
  reg += 1;
  
#line 324 
  *tmp_75 = (unsigned int)adapter->stats.gptch;
  
#line 325 
  tmp_76 = reg;
  
#line 325 
  reg += 1;
  
#line 325 
  *tmp_76 = (unsigned int)adapter->stats.bptcl;
  
#line 326 
  tmp_77 = reg;
  
#line 326 
  reg += 1;
  
#line 326 
  *tmp_77 = (unsigned int)adapter->stats.bptch;
  
#line 327 
  tmp_78 = reg;
  
#line 327 
  reg += 1;
  
#line 327 
  *tmp_78 = (unsigned int)adapter->stats.mptcl;
  
#line 328 
  tmp_79 = reg;
  
#line 328 
  reg += 1;
  
#line 328 
  *tmp_79 = (unsigned int)adapter->stats.mptch;
  
#line 329 
  tmp_80 = reg;
  
#line 329 
  reg += 1;
  
#line 329 
  *tmp_80 = (unsigned int)adapter->stats.uptcl;
  
#line 330 
  tmp_81 = reg;
  
#line 330 
  reg += 1;
  
#line 330 
  *tmp_81 = (unsigned int)adapter->stats.uptch;
  
#line 331 
  tmp_82 = reg;
  
#line 331 
  reg += 1;
  
#line 331 
  *tmp_82 = (unsigned int)adapter->stats.vptcl;
  
#line 332 
  tmp_83 = reg;
  
#line 332 
  reg += 1;
  
#line 332 
  *tmp_83 = (unsigned int)adapter->stats.vptch;
  
#line 333 
  tmp_84 = reg;
  
#line 333 
  reg += 1;
  
#line 333 
  *tmp_84 = (unsigned int)adapter->stats.jptcl;
  
#line 334 
  tmp_85 = reg;
  
#line 334 
  reg += 1;
  
#line 334 
  *tmp_85 = (unsigned int)adapter->stats.jptch;
  
#line 335 
  tmp_86 = reg;
  
#line 335 
  reg += 1;
  
#line 335 
  *tmp_86 = (unsigned int)adapter->stats.gotcl;
  
#line 336 
  tmp_87 = reg;
  
#line 336 
  reg += 1;
  
#line 336 
  *tmp_87 = (unsigned int)adapter->stats.gotch;
  
#line 337 
  tmp_88 = reg;
  
#line 337 
  reg += 1;
  
#line 337 
  *tmp_88 = (unsigned int)adapter->stats.totl;
  
#line 338 
  tmp_89 = reg;
  
#line 338 
  reg += 1;
  
#line 338 
  *tmp_89 = (unsigned int)adapter->stats.toth;
  
#line 339 
  tmp_90 = reg;
  
#line 339 
  reg += 1;
  
#line 339 
  *tmp_90 = (unsigned int)adapter->stats.dc;
  
#line 340 
  tmp_91 = reg;
  
#line 340 
  reg += 1;
  
#line 340 
  *tmp_91 = (unsigned int)adapter->stats.plt64c;
  
#line 341 
  tmp_92 = reg;
  
#line 341 
  reg += 1;
  
#line 341 
  *tmp_92 = (unsigned int)adapter->stats.tsctc;
  
#line 342 
  tmp_93 = reg;
  
#line 342 
  reg += 1;
  
#line 342 
  *tmp_93 = (unsigned int)adapter->stats.tsctfc;
  
#line 343 
  tmp_94 = reg;
  
#line 343 
  reg += 1;
  
#line 343 
  *tmp_94 = (unsigned int)adapter->stats.ibic;
  
#line 344 
  tmp_95 = reg;
  
#line 344 
  reg += 1;
  
#line 344 
  *tmp_95 = (unsigned int)adapter->stats.rfc;
  
#line 345 
  tmp_96 = reg;
  
#line 345 
  reg += 1;
  
#line 345 
  *tmp_96 = (unsigned int)adapter->stats.lfc;
  
#line 346 
  tmp_97 = reg;
  
#line 346 
  reg += 1;
  
#line 346 
  *tmp_97 = (unsigned int)adapter->stats.pfrc;
  
#line 347 
  tmp_98 = reg;
  
#line 347 
  reg += 1;
  
#line 347 
  *tmp_98 = (unsigned int)adapter->stats.pftc;
  
#line 348 
  tmp_99 = reg;
  
#line 348 
  reg += 1;
  
#line 348 
  *tmp_99 = (unsigned int)adapter->stats.mcfrc;
  
#line 349 
  tmp_100 = reg;
  
#line 349 
  reg += 1;
  
#line 349 
  *tmp_100 = (unsigned int)adapter->stats.mcftc;
  
#line 350 
  tmp_101 = reg;
  
#line 350 
  reg += 1;
  
#line 350 
  *tmp_101 = (unsigned int)adapter->stats.xonrxc;
  
#line 351 
  tmp_102 = reg;
  
#line 351 
  reg += 1;
  
#line 351 
  *tmp_102 = (unsigned int)adapter->stats.xontxc;
  
#line 352 
  tmp_103 = reg;
  
#line 352 
  reg += 1;
  
#line 352 
  *tmp_103 = (unsigned int)adapter->stats.xoffrxc;
  
#line 353 
  tmp_104 = reg;
  
#line 353 
  reg += 1;
  
#line 353 
  *tmp_104 = (unsigned int)adapter->stats.xofftxc;
  
#line 354 
  tmp_105 = reg;
  
#line 354 
  reg += 1;
  
#line 354 
  *tmp_105 = (unsigned int)adapter->stats.rjc;
  
#line 356 
  regs->len = (unsigned int)((long)reg - (long)reg_start);
  
#line 357 
  return;
}


#line 360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_get_eeprom_len(struct net_device *netdev)
{
  int __retres;
  
#line 363 
  __retres = 128;
  
#line 363 
  return __retres;
}


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_get_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  __le16 *eeprom_buff;
  int i;
  int max_len;
  int first_word;
  int last_word;
  
#line 370 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 371 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 374 
  int ret_val = 0;
  
#line 376 
  if (eeprom->len == 0U) {
    
#line 377 
    ret_val = -22;
    
#line 378 
    goto geeprom_error;
  }
  else ;
  
#line 381 
  eeprom->magic = (unsigned int)((int)hw->vendor_id | ((int)hw->device_id << 16));
  
#line 383 
  max_len = ixgb_get_eeprom_len(netdev);
  
#line 385 
  if (eeprom->offset > eeprom->offset + eeprom->len) {
    
#line 386 
    ret_val = -22;
    
#line 387 
    goto geeprom_error;
  }
  else ;
  
#line 390 
  if (eeprom->offset + eeprom->len > (unsigned int)max_len) 
#line 391 
                                                            eeprom->len = (unsigned int)max_len - eeprom->offset; else ;
  
#line 393 
  first_word = (int)(eeprom->offset >> 1);
  
#line 394 
  last_word = (int)(((eeprom->offset + eeprom->len) + 4294967295U) >> 1);
  
#line 396 
  eeprom_buff = (__le16 *)kmalloc((unsigned long)((last_word - first_word) + 1) * 2UL,208U);
  
#line 398 
  if (eeprom_buff == (__le16 *)0U) {
    
#line 399 
    __retres = -12;
    
#line 399 
    goto return_label;
  }
  else ;
  
#line 402 
  i = 0;
  
#line 402 
  goto ldv_53797;
  ldv_53796: 
#line 403 
  ;
  
#line 403 
  *(eeprom_buff + i) = ixgb_get_eeprom_word(hw,(unsigned short)((int)((unsigned short)first_word) + (int)((unsigned short)i)));
  
#line 402 
  i += 1;
  ldv_53797: 
#line 403 
  ;
  
#line 402 
  if (last_word - first_word >= i) 
#line 404 
                                   goto ldv_53796; else 
#line 407 
                                                        goto ldv_53798;
  ldv_53798: 
#line 408 
  ;
  
#line 405 
  memcpy((void *)bytes,(void const *)eeprom_buff + (eeprom->offset & 1U),(unsigned long)eeprom->len);
  
#line 406 
  kfree((void const *)eeprom_buff);
  geeprom_error: 
#line 408 
  ;
  
#line 409 
  __retres = ret_val;
  return_label: 
#line 409 
                return __retres;
}


#line 413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_set_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  u16 *eeprom_buff;
  void *ptr;
  int max_len;
  int first_word;
  int last_word;
  u16 i;
  
#line 416 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 417 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 423 
  if (eeprom->len == 0U) {
    
#line 424 
    __retres = -22;
    
#line 424 
    goto return_label;
  }
  else ;
  
#line 426 
  if (eeprom->magic != (unsigned int)((int)hw->vendor_id | ((int)hw->device_id << 16))) {
    
#line 427 
    __retres = -14;
    
#line 427 
    goto return_label;
  }
  else ;
  
#line 429 
  max_len = ixgb_get_eeprom_len(netdev);
  
#line 431 
  if (eeprom->offset > eeprom->offset + eeprom->len) {
    
#line 432 
    __retres = -22;
    
#line 432 
    goto return_label;
  }
  else ;
  
#line 434 
  if (eeprom->offset + eeprom->len > (unsigned int)max_len) 
#line 435 
                                                            eeprom->len = (unsigned int)max_len - eeprom->offset; else ;
  
#line 437 
  first_word = (int)(eeprom->offset >> 1);
  
#line 438 
  last_word = (int)(((eeprom->offset + eeprom->len) + 4294967295U) >> 1);
  
#line 439 
  eeprom_buff = (u16 *)kmalloc((unsigned long)max_len,208U);
  
#line 440 
  if (eeprom_buff == (u16 *)0U) {
    
#line 441 
    __retres = -12;
    
#line 441 
    goto return_label;
  }
  else ;
  
#line 443 
  ptr = (void *)eeprom_buff;
  
#line 445 
  if ((eeprom->offset & 1U) != 0U) {
    
#line 448 
    *eeprom_buff = ixgb_read_eeprom(hw,(unsigned short)((int)((unsigned short)first_word)));
    
#line 449 
    ptr += 1;
  }
  else ;
  
#line 451 
  if (((eeprom->offset + eeprom->len) & 1U) != 0U) 
#line 455 
                                                   *(eeprom_buff + (last_word - first_word)) = ixgb_read_eeprom(hw,(unsigned short)((int)((unsigned short)last_word))); else ;
  
#line 458 
  memcpy(ptr,(void const *)bytes,(unsigned long)eeprom->len);
  
#line 459 
  i = (unsigned short)0U;
  
#line 459 
  goto ldv_53813;
  ldv_53812: 
#line 460 
  ;
  
#line 460 
  ixgb_write_eeprom(hw,(unsigned short)((int)((unsigned short)first_word) + (int)i),(unsigned short)((int)*(eeprom_buff + (int)i)));
  
#line 459 
  i = (u16)((int)i + 1);
  ldv_53813: 
#line 460 
  ;
  
#line 459 
  if ((int)i <= last_word - first_word) 
#line 461 
                                        goto ldv_53812; else 
#line 464 
                                                             goto ldv_53814;
  ldv_53814: 
#line 465 
  ;
  
#line 463 
  if (first_word <= 63) 
#line 464 
                        ixgb_update_eeprom_checksum(hw); else ;
  
#line 466 
  kfree((void const *)eeprom_buff);
  
#line 467 
  __retres = 0;
  return_label: 
#line 467 
                return __retres;
}


#line 471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static void ixgb_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *drvinfo)
{
  char const *tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 474 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 476 
  strlcpy((char *)(& drvinfo->driver),(char const *)(& ixgb_driver_name),32UL);
  
#line 478 
  strlcpy((char *)(& drvinfo->version),(char const *)(& ixgb_driver_version),32UL);
  
#line 480 
  tmp_0 = pci_name((struct pci_dev const *)adapter->pdev);
  
#line 480 
  ;
  
#line 480 
  strlcpy((char *)(& drvinfo->bus_info),tmp_0,32UL);
  
#line 482 
  drvinfo->n_stats = 36U;
  
#line 483 
  tmp_1 = ixgb_get_regs_len(netdev);
  
#line 483 
  drvinfo->regdump_len = (unsigned int)tmp_1;
  
#line 484 
  tmp_2 = ixgb_get_eeprom_len(netdev);
  
#line 484 
  drvinfo->eedump_len = (unsigned int)tmp_2;
  
#line 485 
  return;
}


#line 488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static void ixgb_get_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  
#line 491 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 492 
  struct ixgb_desc_ring *txdr = & adapter->tx_ring;
  
#line 493 
  struct ixgb_desc_ring *rxdr = & adapter->rx_ring;
  
#line 495 
  ring->rx_max_pending = 512U;
  
#line 496 
  ring->tx_max_pending = 4096U;
  
#line 497 
  ring->rx_pending = rxdr->count;
  
#line 498 
  ring->tx_pending = txdr->count;
  
#line 499 
  return;
}


#line 502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_set_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  int __retres;
  struct ixgb_desc_ring tx_old;
  struct ixgb_desc_ring tx_new;
  struct ixgb_desc_ring rx_old;
  struct ixgb_desc_ring rx_new;
  int err;
  bool tmp_0;
  unsigned int tmp_2;
  unsigned int tmp_4;
  unsigned int tmp_6;
  unsigned int tmp_8;
  bool tmp_9;
  
#line 505 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 506 
  struct ixgb_desc_ring *txdr = & adapter->tx_ring;
  
#line 507 
  struct ixgb_desc_ring *rxdr = & adapter->rx_ring;
  
#line 511 
  tx_old = adapter->tx_ring;
  
#line 512 
  rx_old = adapter->rx_ring;
  
#line 514 
  if (ring->rx_mini_pending != 0U || ring->rx_jumbo_pending != 0U) {
    
#line 515 
    __retres = -22;
    
#line 515 
    goto return_label;
  }
  else ;
  
#line 517 
  tmp_0 = netif_running((struct net_device const *)adapter->netdev);
  
#line 517 
  if ((int)tmp_0 != 0) 
#line 518 
                       ixgb_down(adapter,(_Bool)1); else ;
  {
    __u32 tmp_1;
    
#line 520 
    __u32 _max1 = ring->rx_pending;
    
#line 520 
    unsigned int _max2 = 64U;
    
#line 520 
    if (_max1 > _max2) 
#line 520 
                       tmp_1 = _max1; else 
#line 520 
                                           tmp_1 = _max2;
    
#line 520 
    tmp_2 = tmp_1;
  }
  
#line 520 
  rxdr->count = tmp_2;
  {
    unsigned int tmp_3;
    
#line 521 
    unsigned int _min1 = rxdr->count;
    
#line 521 
    unsigned int _min2 = 512U;
    
#line 521 
    if (_min1 < _min2) 
#line 521 
                       tmp_3 = _min1; else 
#line 521 
                                           tmp_3 = _min2;
    
#line 521 
    tmp_4 = tmp_3;
  }
  
#line 521 
  rxdr->count = tmp_4;
  
#line 522 
  rxdr->count = (rxdr->count + 7U) & 4294967288U;
  {
    __u32 tmp_5;
    
#line 524 
    __u32 _max1_0 = ring->tx_pending;
    
#line 524 
    unsigned int _max2_0 = 64U;
    
#line 524 
    if (_max1_0 > _max2_0) 
#line 524 
                           tmp_5 = _max1_0; else 
#line 524 
                                                 tmp_5 = _max2_0;
    
#line 524 
    tmp_6 = tmp_5;
  }
  
#line 524 
  txdr->count = tmp_6;
  {
    unsigned int tmp_7;
    
#line 525 
    unsigned int _min1_0 = txdr->count;
    
#line 525 
    unsigned int _min2_0 = 4096U;
    
#line 525 
    if (_min1_0 < _min2_0) 
#line 525 
                           tmp_7 = _min1_0; else 
#line 525 
                                                 tmp_7 = _min2_0;
    
#line 525 
    tmp_8 = tmp_7;
  }
  
#line 525 
  txdr->count = tmp_8;
  
#line 526 
  txdr->count = (txdr->count + 7U) & 4294967288U;
  
#line 528 
  tmp_9 = netif_running((struct net_device const *)adapter->netdev);
  
#line 528 
  if ((int)tmp_9 != 0) {
    
#line 530 
    err = ixgb_setup_rx_resources(adapter);
    
#line 530 
    if (err != 0) 
#line 531 
                  goto err_setup_rx; else ;
    
#line 532 
    err = ixgb_setup_tx_resources(adapter);
    
#line 532 
    if (err != 0) 
#line 533 
                  goto err_setup_tx; else ;
    
#line 538 
    rx_new = adapter->rx_ring;
    
#line 539 
    tx_new = adapter->tx_ring;
    
#line 540 
    adapter->rx_ring = rx_old;
    
#line 541 
    adapter->tx_ring = tx_old;
    
#line 542 
    ixgb_free_rx_resources(adapter);
    
#line 543 
    ixgb_free_tx_resources(adapter);
    
#line 544 
    adapter->rx_ring = rx_new;
    
#line 545 
    adapter->tx_ring = tx_new;
    
#line 546 
    err = ixgb_up(adapter);
    
#line 546 
    if (err != 0) {
      
#line 547 
      __retres = err;
      
#line 547 
      goto return_label;
    }
    else ;
    
#line 548 
    ixgb_set_speed_duplex(netdev);
  }
  else ;
  
#line 551 
  __retres = 0;
  
#line 551 
  goto return_label;
  err_setup_tx: 
#line 552 
  ;
  
#line 553 
  ixgb_free_rx_resources(adapter);
  err_setup_rx: 
#line 554 
  ;
  
#line 555 
  adapter->rx_ring = rx_old;
  
#line 556 
  adapter->tx_ring = tx_old;
  
#line 557 
  ixgb_up(adapter);
  
#line 558 
  __retres = err;
  return_label: 
#line 558 
                return __retres;
}


#line 562  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_set_phys_id(struct net_device *netdev, enum ethtool_phys_id_state state)
{
  int __retres;
  
#line 564 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 566 
  switch ((unsigned int)state) {
    case (unsigned int)1: 
#line 567 
    ;
    
#line 568 
    __retres = 2;
    
#line 568 
    goto return_label;
    case (unsigned int)2: 
#line 570 
    ;
    
#line 571 
    ixgb_led_on(& adapter->hw);
    
#line 572 
    goto ldv_53863;
    case (unsigned int)3: 
#line 574 
    ;
    case (unsigned int)0: 
#line 575 
    ;
    
#line 576 
    ixgb_led_off(& adapter->hw);
  }
  ldv_53863: 
#line 579 
  ;
  
#line 579 
  __retres = 0;
  return_label: 
#line 579 
                return __retres;
}


#line 583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static int ixgb_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  
#line 585 
  switch (sset) {
    case 1: 
#line 586 
    ;
    
#line 587 
    __retres = 36;
    
#line 587 
    goto return_label;
    default: 
#line 588 
    ;
    
#line 589 
    __retres = -95;
    
#line 589 
    goto return_label;
  }
  return_label: 
#line 585 
                return __retres;
}


#line 594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static void ixgb_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *data)
{
  int i;
  
#line 597 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 599 
  char *p = (char *)0;
  
#line 601 
  ixgb_update_stats(adapter);
  
#line 602 
  i = 0;
  
#line 602 
  goto ldv_53890;
  ldv_53889: 
#line 603 
  ;
  
#line 603 
  switch (ixgb_gstrings_stats[i].type) {
    case 0: 
#line 604 
    ;
    
#line 605 
    p = (char *)netdev + ixgb_gstrings_stats[i].stat_offset;
    
#line 607 
    goto ldv_53887;
    case 1: 
#line 608 
    ;
    
#line 609 
    p = (char *)adapter + ixgb_gstrings_stats[i].stat_offset;
    
#line 611 
    goto ldv_53887;
  }
  ldv_53887: 
#line 614 
  ;
  
#line 614 
  if (ixgb_gstrings_stats[i].sizeof_stat == 8) 
#line 614 
                                               *(data + i) = *((u64 *)p); else 
                                                                    
#line 614 
                                                                    *(data + i) = (unsigned long long)*((u32 *)p);
  
#line 602 
  i += 1;
  ldv_53890: 
#line 603 
  ;
  
#line 602 
  if ((unsigned int)i <= 35U) 
#line 604 
                              goto ldv_53889; else 
#line 607 
                                                   goto ldv_53891;
  ldv_53891: 
#line 608 
  ;
  
#line 609 
  return;
}


#line 620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static void ixgb_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  int i;
  
#line 624 
  switch (stringset) {
    case (u32)1: 
#line 625 
    ;
    
#line 626 
    i = 0;
    
#line 626 
    goto ldv_53903;
    ldv_53902: 
#line 627 
    ;
    
#line 627 
    memcpy((void *)(data + i * 32),(void const *)(& ixgb_gstrings_stats[i].stat_string),32UL);
    
#line 626 
    i += 1;
    ldv_53903: 
#line 627 
    ;
    
#line 626 
    if ((unsigned int)i <= 35U) 
#line 628 
                                goto ldv_53902; else 
#line 631 
                                                     goto ldv_53904;
    ldv_53904: 
#line 632 
    ;
    
#line 631 
    goto ldv_53905;
  }
  ldv_53905: 
#line 633 
  ;
  
#line 634 
  return;
}


#line 635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
static struct ethtool_ops const ixgb_ethtool_ops = {.get_settings = & ixgb_get_settings, .set_settings = & ixgb_set_settings, .get_drvinfo = & ixgb_get_drvinfo, .get_regs_len = & ixgb_get_regs_len, .get_regs = & ixgb_get_regs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & ixgb_get_msglevel, .set_msglevel = & ixgb_set_msglevel, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = & ixgb_get_eeprom_len, .get_eeprom = & ixgb_get_eeprom, .set_eeprom = & ixgb_set_eeprom, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = & ixgb_get_ringparam, .set_ringparam = & ixgb_set_ringparam, .get_pauseparam = & ixgb_get_pauseparam, .set_pauseparam = & ixgb_set_pauseparam, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & ixgb_get_strings, .set_phys_id = & ixgb_set_phys_id, .get_ethtool_stats = & ixgb_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & ixgb_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c"
void ixgb_set_ethtool_ops(struct net_device *netdev)
{
  
#line 659 
  netdev->ethtool_ops = & ixgb_ethtool_ops;
  
#line 660 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_11)(struct net_device *) = & ethtool_op_get_link;

#line 73  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_get_eeprom_len_32(struct net_device *arg0)
{
  int tmp;
  
#line 74 
  tmp = ixgb_get_eeprom_len(arg0);
  
#line 74 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_set_pauseparam_29(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 79 
  tmp = ixgb_set_pauseparam(arg0,arg1);
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
void ldv_emg_wrapper_ixgb_set_msglevel_27(struct net_device *arg0, unsigned int arg1)
{
  
#line 84 
  ixgb_set_msglevel(arg0,arg1);
  
#line 85 
  return;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
void ldv_emg_wrapper_ixgb_get_strings_6(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 89 
  ixgb_get_strings(arg0,arg1,arg2);
  
#line 90 
  return;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_get_regs_len_28(struct net_device *arg0)
{
  int tmp;
  
#line 94 
  tmp = ixgb_get_regs_len(arg0);
  
#line 94 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
void ldv_emg_wrapper_ixgb_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 99 
  ixgb_get_pauseparam(arg0,arg1);
  
#line 100 
  return;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
void ldv_emg_wrapper_ixgb_get_regs_24(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 104 
  ixgb_get_regs(arg0,arg1,arg2);
  
#line 105 
  return;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
void ldv_emg_wrapper_ixgb_get_ringparam_8(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 109 
  ixgb_get_ringparam(arg0,arg1);
  
#line 110 
  return;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_get_sset_count_25(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 114 
  tmp = ixgb_get_sset_count(arg0,arg1);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 119 
  tmp = ixgb_set_settings(arg0,arg1);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
void ldv_emg_wrapper_ixgb_get_ethtool_stats_9(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 124 
  ixgb_get_ethtool_stats(arg0,arg1,arg2);
  
#line 125 
  return;
}


#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_set_phys_id_5(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 129 
  tmp = ixgb_set_phys_id(arg0,arg1);
  
#line 129 
  return tmp;
}


#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_get_eeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 134 
  tmp = ixgb_get_eeprom(arg0,arg1,arg2);
  
#line 134 
  return tmp;
}


#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_get_settings_20(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 139 
  tmp = ixgb_get_settings(arg0,arg1);
  
#line 139 
  return tmp;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
unsigned int ldv_emg_wrapper_ixgb_get_msglevel_17(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 144 
  tmp = ixgb_get_msglevel(arg0);
  
#line 144 
  return tmp;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
void ldv_emg_wrapper_ixgb_get_drvinfo_13(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 149 
  ixgb_get_drvinfo(arg0,arg1);
  
#line 150 
  return;
}


#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_set_ringparam_16(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 154 
  tmp = ixgb_set_ringparam(arg0,arg1);
  
#line 154 
  return tmp;
}


#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
int ldv_emg_wrapper_ixgb_set_eeprom_15(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 159 
  tmp = ixgb_set_eeprom(arg0,arg1,arg2);
  
#line 159 
  return tmp;
}


#line 577  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_ethtool.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 580 
  tmp = ldv_kmalloc(size,flags);
  
#line 580 
  return tmp;
}

void __builtin_prefetch(void const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_next_bit(unsigned long const *, unsigned long, unsigned long);


#line 42 
unsigned long find_first_bit(unsigned long const *, unsigned long);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memset(void *, int, size_t);


#line 65 
char *strcpy(char *, char const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_80(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_89(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_91(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 185 
static int ldv_mod_timer_92(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_82(struct timer_list *ldv_func_arg1);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_88(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_90(struct work_struct *work);


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
void iounmap(void volatile *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_0(size_t size, gfp_t flags);


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_channel_offline(struct pci_dev *pdev)
{
  int __retres;
  
#line 403 
  __retres = pdev->error_state != 1U;
  
#line 403 
  return __retres;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_77(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_78(struct pci_driver *ldv_func_arg1);


#line 1212 
void pci_disable_msi(struct pci_dev *);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_mask_and_coherent(struct device *dev, u64 mask)
{
  
#line 118 
  int rc = dma_set_mask(dev,mask);
  
#line 119 
  if (rc == 0) 
#line 120 
               dma_set_coherent_mask(dev,mask); else ;
  
#line 121 
  return rc;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1666 
void *pci_ioremap_bar(struct pci_dev *, int);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_fold(__wsum sum)
{
  __sum16 __retres;
  
#line 24 
  ldv_inline_asm();
  
#line 29 
  __retres = (unsigned short)(~ sum >> 16);
  
#line 29 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  
#line 89 
  ldv_inline_asm();
  
#line 97 
  return sum;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_tcpudp_magic(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  __sum16 tmp_0;
  __wsum tmp;
  
#line 116 
  tmp = csum_tcpudp_nofold(saddr,daddr,(unsigned short)((int)len),(unsigned short)((int)proto),sum);
  
#line 116 
  tmp_0 = csum_fold(tmp);
  
#line 116 
  return tmp_0;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 852 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_header_cloned(struct sk_buff const *skb)
{
  int __retres;
  int dataref;
  unsigned char *tmp;
  
#line 1131 
  if ((unsigned int)*((unsigned char *)skb + 142UL) == 0U) {
    
#line 1132 
    __retres = 0;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1134 
  tmp = skb_end_pointer(skb);
  
#line 1134 
  dataref = atomic_read((atomic_t const *)(& ((struct skb_shared_info *)tmp)->dataref));
  
#line 1135 
  dataref = (dataref & 65535) - (dataref >> 16);
  
#line 1136 
  __retres = dataref != 1;
  return_label: 
#line 1136 
                return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_checksum_start_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp;
  
#line 1964 
  tmp = skb_headroom(skb);
  
#line 1964 
  ;
  
#line 1964 
  __retres = (int)((unsigned int)skb->__anonCompField_sk_buff_82.__anonCompField___anonunion_285_81.csum_start - tmp);
  
#line 1964 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 1982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_network_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1984 
  tmp = skb_network_header(skb);
  
#line 1984 
  ;
  
#line 1984 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1984 
  return __retres;
}


#line 2057 
void skb_trim(struct sk_buff *, unsigned int);


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2198 
struct sk_buff *__napi_alloc_skb(struct napi_struct *, unsigned int, gfp_t);


#line 2200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *napi_alloc_skb(struct napi_struct *napi, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2203 
  tmp = __napi_alloc_skb(napi,length,32U);
  
#line 2203 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_cow(struct sk_buff *skb, unsigned int headroom, int cloned)
{
  int __retres;
  unsigned int tmp_0;
  
#line 2430 
  int delta = 0;
  
#line 2432 
  tmp_0 = skb_headroom((struct sk_buff const *)skb);
  
#line 2432 
  ;
  
#line 2432 
  if (tmp_0 < headroom) {
    unsigned int tmp;
    
#line 2433 
    tmp = skb_headroom((struct sk_buff const *)skb);
    
#line 2433 
    delta = (int)(headroom - tmp);
  }
  else ;
  
#line 2435 
  if (delta != 0 || cloned != 0) {
    int tmp_5;
    int tmp_2;
    int tmp_4;
    {
      int tmp_1;
      
#line 2436 
      int _max1 = 32;
      
#line 2436 
      int _max2 = 64;
      
#line 2436 
      if (_max1 > _max2) 
#line 2436 
                         tmp_1 = _max1; else 
#line 2436 
                                             tmp_1 = _max2;
      
#line 2436 
      tmp_2 = tmp_1;
    }
    {
      int tmp_3;
      
#line 2436 
      int _max1_0 = 32;
      
#line 2436 
      int _max2_0 = 64;
      
#line 2436 
      if (_max1_0 > _max2_0) 
#line 2436 
                             tmp_3 = _max1_0; else 
#line 2436 
                                                   tmp_3 = _max2_0;
      
#line 2436 
      tmp_4 = tmp_3;
    }
    
#line 2436 
    ;
    
#line 2436 
    ;
    
#line 2436 
    tmp_5 = pskb_expand_head(skb,((tmp_2 + -1) + delta) & ~ (tmp_4 + -1),0,32U);
    
#line 2436 
    __retres = tmp_5;
    
#line 2436 
    goto return_label;
  }
  else ;
  
#line 2438 
  __retres = 0;
  return_label: 
#line 2438 
                return __retres;
}


#line 2468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_cow_head(struct sk_buff *skb, unsigned int headroom)
{
  int tmp_0;
  int tmp;
  
#line 2470 
  tmp = skb_header_cloned((struct sk_buff const *)skb);
  
#line 2470 
  ;
  
#line 2470 
  ;
  
#line 2470 
  tmp_0 = __skb_cow(skb,headroom,tmp);
  
#line 2470 
  return tmp_0;
}


#line 2810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data_offset(struct sk_buff *skb, int const offset, void const *from, unsigned int const len)
{
  
#line 2815 
  memcpy((void *)(skb->data + offset),from,(unsigned long)len);
  
#line 2816 
  return;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
void synchronize_irq(unsigned int);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_79(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_81(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2205 
static void ldv_free_netdev_85(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_87(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3355 
static int ldv_register_netdev_84(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_86(struct net_device *ldv_func_arg1);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_83(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vzalloc(unsigned long);


#line 83 
void vfree(void const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
char ixgb_driver_name[5U] = {(char)'i', (char)'x', (char)'g', (char)'b', (char)'\000'};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static char ixgb_driver_string[34U] = {(char)'I', (char)'n', (char)'t', (char)'e', (char)'l', (char)'(', (char)'R', (char)')', (char)' ', (char)'P', (char)'R', (char)'O', (char)'/', (char)'1', (char)'0', (char)'G', (char)'b', (char)'E', (char)' ', (char)'N', (char)'e', (char)'t', (char)'w', (char)'o', (char)'r', (char)'k', (char)' ', (char)'D', (char)'r', (char)'i', (char)'v', (char)'e', (char)'r', (char)'\000'};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
char const ixgb_driver_version[16U] = {(char)'1', (char)'.', (char)'0', (char)'.', (char)'1', (char)'3', (char)'5', (char)'-', (char)'k', (char)'2', (char)'\000'};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static char const ixgb_copyright[43U] = {(char)'C', (char)'o', (char)'p', (char)'y', (char)'r', (char)'i', (char)'g', (char)'h', (char)'t', (char)' ', (char)'(', (char)'c', (char)')', (char)' ', (char)'1', (char)'9', (char)'9', (char)'9', (char)'-', (char)'2', (char)'0', (char)'0', (char)'8', (char)' ', (char)'I', (char)'n', (char)'t', (char)'e', (char)'l', (char)' ', (char)'C', (char)'o', (char)'r', (char)'p', (char)'o', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'.', (char)'\000'};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static unsigned int copybreak = 256U;

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static struct pci_device_id const ixgb_pci_tbl[5U] = {{.vendor = 32902U, .device = 4168U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4254U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 6728U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 6984U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
struct pci_device_id const __mod_pci__ixgb_pci_tbl_device_table[5U];

#line 73 
static int ixgb_init_module(void);


#line 74 
static void ixgb_exit_module(void);


#line 75 
static int ixgb_probe(struct pci_dev *pdev, struct pci_device_id const *ent);


#line 76 
static void ixgb_remove(struct pci_dev *pdev);


#line 77 
static int ixgb_sw_init(struct ixgb_adapter *adapter);


#line 78 
static int ixgb_open(struct net_device *netdev);


#line 79 
static int ixgb_close(struct net_device *netdev);


#line 80 
static void ixgb_configure_tx(struct ixgb_adapter *adapter);


#line 81 
static void ixgb_configure_rx(struct ixgb_adapter *adapter);


#line 82 
static void ixgb_setup_rctl(struct ixgb_adapter *adapter);


#line 83 
static void ixgb_clean_tx_ring(struct ixgb_adapter *adapter);


#line 84 
static void ixgb_clean_rx_ring(struct ixgb_adapter *adapter);


#line 85 
static void ixgb_set_multi(struct net_device *netdev);


#line 86 
static void ixgb_watchdog(unsigned long data);


#line 87 
static netdev_tx_t ixgb_xmit_frame(struct sk_buff *skb, struct net_device *netdev);


#line 89 
static struct net_device_stats *ixgb_get_stats(struct net_device *netdev);


#line 90 
static int ixgb_change_mtu(struct net_device *netdev, int new_mtu);


#line 91 
static int ixgb_set_mac(struct net_device *netdev, void *p);


#line 92 
static irqreturn_t ixgb_intr(int irq, void *data);


#line 93 
static bool ixgb_clean_tx_irq(struct ixgb_adapter *adapter);


#line 95 
static int ixgb_clean(struct napi_struct *napi, int budget);


#line 96 
static bool ixgb_clean_rx_irq(struct ixgb_adapter *adapter, int *work_done, int work_to_do);


#line 97 
static void ixgb_alloc_rx_buffers(struct ixgb_adapter *adapter, int cleaned_count);


#line 99 
static void ixgb_tx_timeout(struct net_device *netdev);


#line 100 
static void ixgb_tx_timeout_task(struct work_struct *work);


#line 102 
static void ixgb_vlan_strip_enable(struct ixgb_adapter *adapter);


#line 103 
static void ixgb_vlan_strip_disable(struct ixgb_adapter *adapter);


#line 104 
static int ixgb_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid);


#line 106 
static int ixgb_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid);


#line 108 
static void ixgb_restore_vlan(struct ixgb_adapter *adapter);


#line 112 
static void ixgb_netpoll(struct net_device *dev);


#line 115 
static pci_ers_result_t ixgb_io_error_detected(struct pci_dev *pdev, enum pci_channel_state state);


#line 117 
static pci_ers_result_t ixgb_io_slot_reset(struct pci_dev *pdev);


#line 118 
static void ixgb_io_resume(struct pci_dev *pdev);


#line 120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static struct pci_error_handlers const ixgb_err_handler = {.error_detected = & ixgb_io_error_detected, .mmio_enabled = (pci_ers_result_t (*)(struct pci_dev *))0, .link_reset = (pci_ers_result_t (*)(struct pci_dev *))0, .slot_reset = & ixgb_io_slot_reset, .reset_notify = (void (*)(struct pci_dev *, bool ))0, .resume = & ixgb_io_resume};

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static struct pci_driver ixgb_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = (char const *)(& ixgb_driver_name), .id_table = (struct pci_device_id const *)(& ixgb_pci_tbl), .probe = & ixgb_probe, .remove = & ixgb_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = & ixgb_err_handler, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int debug = -1;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_init_module(void)
{
  int tmp;
  
#line 154 
  printk("\001",(char *)(& ixgb_driver_string),(char const *)(& ixgb_driver_version));
  
#line 155 
  printk("\001",(char const *)(& ixgb_copyright));
  
#line 157 
  tmp = ldv___pci_register_driver_77(& ixgb_driver,& __this_module,"ixgb");
  
#line 157 
  return tmp;
}


#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_exit_module(void)
{
  
#line 172 
  ldv_pci_unregister_driver_78(& ixgb_driver);
  
#line 173 
  return;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_irq_disable(struct ixgb_adapter *adapter)
{
  
#line 185 
  writel(4294967295U,(void volatile *)(adapter->hw.hw_addr + 152U));
  
#line 186 
  readl((void const volatile *)(adapter->hw.hw_addr + 16U));
  
#line 187 
  synchronize_irq((adapter->pdev)->irq);
  
#line 188 
  return;
}


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_irq_enable(struct ixgb_adapter *adapter)
{
  
#line 198 
  u32 val = 149U;
  
#line 200 
  if ((unsigned int)adapter->hw.subsystem_vendor_id == 4238U) 
#line 201 
                                                              val |= 2048U; else ;
  
#line 202 
  writel(val,(void volatile *)(adapter->hw.hw_addr + 144U));
  
#line 203 
  readl((void const volatile *)(adapter->hw.hw_addr + 16U));
  
#line 204 
  return;
}


#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
int ixgb_up(struct ixgb_adapter *adapter)
{
  int __retres;
  int err;
  unsigned int tmp;
  unsigned int tmp_0;
  
#line 209 
  struct net_device *netdev = adapter->netdev;
  
#line 210 
  int irq_flags = 128;
  
#line 211 
  int max_frame = (int)(netdev->mtu + 18U);
  
#line 212 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 216 
  ixgb_rar_set(hw,netdev->dev_addr,0U);
  
#line 217 
  ixgb_set_multi(netdev);
  
#line 219 
  ixgb_restore_vlan(adapter);
  
#line 221 
  ixgb_configure_tx(adapter);
  
#line 222 
  ixgb_setup_rctl(adapter);
  
#line 223 
  ixgb_configure_rx(adapter);
  
#line 224 
  if (adapter->rx_ring.next_to_clean <= adapter->rx_ring.next_to_use) 
    
#line 224 
    tmp = adapter->rx_ring.count; else 
#line 224 
                                       tmp = 0U;
  
#line 224 
  ;
  
#line 224 
  ;
  
#line 224 
  ixgb_alloc_rx_buffers(adapter,(int)(((tmp + adapter->rx_ring.next_to_clean) - adapter->rx_ring.next_to_use) + 4294967295U));
  
#line 227 
  writel(4294967295U,(void volatile *)(adapter->hw.hw_addr + 152U));
  
#line 230 
  tmp_0 = readl((void const volatile *)(adapter->hw.hw_addr + 16U));
  
#line 230 
  if ((tmp_0 & 8192U) != 0U) {
    
#line 231 
    err = pci_enable_msi_exact(adapter->pdev,1);
    
#line 232 
    if (err == 0) {
      
#line 233 
      adapter->have_msi = (_Bool)1;
      
#line 234 
      irq_flags = 0;
    }
    else ;
  }
  else ;
  
#line 239 
  err = ldv_request_irq_79((adapter->pdev)->irq,& ixgb_intr,(unsigned long)irq_flags,(char const *)(& netdev->name),(void *)netdev);
  
#line 241 
  if (err != 0) {
    
#line 242 
    if ((int)adapter->have_msi != 0) 
#line 243 
                                     pci_disable_msi(adapter->pdev); else ;
    
#line 244 
    if (((int)adapter->msg_enable & 2) != 0) 
#line 244 
                                             netdev_err((struct net_device const *)adapter->netdev,"Unable to allocate interrupt Error: %d\n",err); else ;
    
#line 246 
    __retres = err;
    
#line 246 
    goto return_label;
  }
  else ;
  
#line 249 
  if (hw->max_frame_size != (unsigned int)max_frame) 
#line 249 
                                                     goto _LOR;
  else {
    unsigned int tmp_2;
    
#line 251 
    tmp_2 = readl((void const volatile *)(hw->hw_addr + 32U));
    
#line 249 
    ;
    
#line 249 
    if (hw->max_frame_size != tmp_2 >> 16) {
      _LOR: {
              
#line 253 
              hw->max_frame_size = (unsigned int)max_frame;
              
#line 255 
              writel(hw->max_frame_size << 16,(void volatile *)(hw->hw_addr + 32U));
              
#line 257 
              if (hw->max_frame_size > 1518U) {
                
#line 259 
                u32 ctrl0 = readl((void const volatile *)hw->hw_addr);
                
#line 261 
                if ((ctrl0 & 16U) == 0U) {
                  
#line 262 
                  ctrl0 |= 16U;
                  
#line 263 
                  writel(ctrl0,(void volatile *)hw->hw_addr);
                }
                else ;
              }
              else ;
            }
    }
    else ;
  }
  
#line 268 
  set_bit(0L,(unsigned long volatile *)(& adapter->flags));
  
#line 270 
  napi_enable(& adapter->napi);
  
#line 271 
  ixgb_irq_enable(adapter);
  
#line 273 
  netif_wake_queue(netdev);
  
#line 275 
  ldv_mod_timer_80(& adapter->watchdog_timer,jiffies);
  
#line 277 
  __retres = 0;
  return_label: 
#line 277 
                return __retres;
}


#line 281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
void ixgb_down(struct ixgb_adapter *adapter, bool kill_watchdog)
{
  
#line 283 
  struct net_device *netdev = adapter->netdev;
  
#line 286 
  set_bit(0L,(unsigned long volatile *)(& adapter->flags));
  
#line 288 
  netif_carrier_off(netdev);
  
#line 290 
  napi_disable(& adapter->napi);
  
#line 292 
  ixgb_irq_disable(adapter);
  
#line 293 
  ldv_free_irq_81((adapter->pdev)->irq,(void *)netdev);
  
#line 295 
  if ((int)adapter->have_msi != 0) 
#line 296 
                                   pci_disable_msi(adapter->pdev); else ;
  
#line 298 
  if ((int)kill_watchdog != 0) 
#line 299 
                               ldv_del_timer_sync_82(& adapter->watchdog_timer); else ;
  
#line 301 
  adapter->link_speed = (unsigned short)0U;
  
#line 302 
  adapter->link_duplex = (unsigned short)0U;
  
#line 303 
  netif_start_queue(netdev);
  
#line 305 
  ixgb_reset(adapter);
  
#line 306 
  ixgb_clean_tx_ring(adapter);
  
#line 307 
  ixgb_clean_rx_ring(adapter);
  
#line 308 
  return;
}


#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
void ixgb_reset(struct ixgb_adapter *adapter)
{
  int tmp_0;
  bool tmp;
  
#line 313 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 315 
  ixgb_adapter_stop(hw);
  
#line 316 
  tmp = ixgb_init_hw(hw);
  
#line 316 
  if (tmp) 
#line 316 
           tmp_0 = 0; else 
#line 316 
                           tmp_0 = 1;
  
#line 316 
  if (tmp_0) {
    
#line 317 
    if (((int)adapter->msg_enable & 2) != 0) 
#line 317 
                                             netdev_err((struct net_device const *)adapter->netdev,"ixgb_init_hw failed\n"); else ;
  }
  else ;
  
#line 320 
  writel(hw->max_frame_size << 16,(void volatile *)(hw->hw_addr + 32U));
  
#line 321 
  if (hw->max_frame_size > 1518U) {
    
#line 323 
    u32 ctrl0 = readl((void const volatile *)hw->hw_addr);
    
#line 324 
    if ((ctrl0 & 16U) == 0U) {
      
#line 325 
      ctrl0 |= 16U;
      
#line 326 
      writel(ctrl0,(void volatile *)hw->hw_addr);
    }
    else ;
  }
  else ;
  
#line 329 
  return;
}


#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static netdev_features_t ixgb_fix_features(struct net_device *netdev, netdev_features_t features)
{
  
#line 338 
  if ((features & 256ULL) == 0ULL) 
#line 339 
                                   features &= 18446744073709551487ULL; else ;
  
#line 341 
  return features;
}


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_set_features(struct net_device *netdev, netdev_features_t features)
{
  int __retres;
  bool tmp_0;
  
#line 347 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 348 
  netdev_features_t changed = netdev->features ^ features;
  
#line 350 
  if ((changed & 17179869440ULL) == 0ULL) {
    
#line 351 
    __retres = 0;
    
#line 351 
    goto return_label;
  }
  else ;
  
#line 353 
  adapter->rx_csum = (_Bool)((features & 17179869184ULL) != 0ULL);
  
#line 355 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 355 
  if ((int)tmp_0 != 0) {
    
#line 356 
    ixgb_down(adapter,(_Bool)1);
    
#line 357 
    ixgb_up(adapter);
    
#line 358 
    ixgb_set_speed_duplex(netdev);
  }
  else 
#line 360 
       ixgb_reset(adapter);
  
#line 362 
  __retres = 0;
  return_label: 
#line 362 
                return __retres;
}


#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static struct net_device_ops const ixgb_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & ixgb_open, .ndo_stop = & ixgb_close, .ndo_start_xmit = & ixgb_xmit_frame, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & ixgb_set_multi, .ndo_set_mac_address = & ixgb_set_mac, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & ixgb_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & ixgb_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & ixgb_get_stats, .ndo_vlan_rx_add_vid = & ixgb_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & ixgb_vlan_rx_kill_vid, .ndo_poll_controller = & ixgb_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = & ixgb_fix_features, .ndo_set_features = & ixgb_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct ixgb_adapter *adapter;
  int pci_using_dac;
  int i;
  int err;
  u32 tmp_0;
  char const *tmp_2;
  int tmp_4;
  bool tmp_3;
  int tmp_6;
  bool tmp_5;
  
#line 400 
  struct net_device *netdev = (struct net_device *)0;
  
#line 402 
  int cards_found = 0;
  
#line 407 
  err = pci_enable_device(pdev);
  
#line 408 
  if (err != 0) {
    
#line 409 
    __retres = err;
    
#line 409 
    goto return_label;
  }
  else ;
  
#line 411 
  pci_using_dac = 0;
  
#line 412 
  err = dma_set_mask_and_coherent(& pdev->dev,18446744073709551615ULL);
  
#line 413 
  if (err == 0) 
#line 414 
                pci_using_dac = 1;
  else {
    
#line 416 
    err = dma_set_mask_and_coherent(& pdev->dev,4294967295ULL);
    
#line 417 
    if (err != 0) {
      
#line 418 
      printk("\001");
      
#line 419 
      goto err_dma_mask;
    }
    else ;
  }
  
#line 423 
  err = pci_request_regions(pdev,(char const *)(& ixgb_driver_name));
  
#line 424 
  if (err != 0) 
#line 425 
                goto err_request_regions; else ;
  
#line 427 
  pci_set_master(pdev);
  
#line 429 
  netdev = ldv_alloc_etherdev_mqs_83(2048,1U,1U);
  
#line 430 
  if (netdev == (struct net_device *)0) {
    
#line 431 
    err = -12;
    
#line 432 
    goto err_alloc_etherdev;
  }
  else ;
  
#line 435 
  netdev->dev.parent = & pdev->dev;
  
#line 437 
  pci_set_drvdata(pdev,(void *)netdev);
  
#line 438 
  adapter = (struct ixgb_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 439 
  adapter->netdev = netdev;
  
#line 440 
  adapter->pdev = pdev;
  
#line 441 
  adapter->hw.back = (void *)adapter;
  
#line 442 
  tmp_0 = netif_msg_init(debug,7);
  
#line 442 
  adapter->msg_enable = (unsigned short)tmp_0;
  
#line 444 
  adapter->hw.hw_addr = (u8 *)pci_ioremap_bar(pdev,0);
  
#line 445 
  if (adapter->hw.hw_addr == (u8 *)0U) {
    
#line 446 
    err = -5;
    
#line 447 
    goto err_ioremap;
  }
  else ;
  
#line 450 
  i = 1;
  
#line 450 
  goto ldv_54035;
  ldv_54034: 
#line 451 
  ;
  
#line 451 
  if ((pdev->resource[i].start == 0ULL && pdev->resource[i].end == pdev->resource[i].start) || pdev->resource[i].end - pdev->resource[i].start == 18446744073709551615ULL) 
    
#line 452 
    goto ldv_54032; else ;
  
#line 453 
  if ((pdev->resource[i].flags & 256UL) != 0UL) {
    
#line 454 
    adapter->hw.io_base = (unsigned long)pdev->resource[i].start;
    
#line 455 
    goto ldv_54033;
  }
  else ;
  ldv_54032: 
#line 457 
  ;
  
#line 450 
  i += 1;
  ldv_54035: 
#line 451 
  ;
  
#line 450 
  if (i <= 5) 
#line 452 
              goto ldv_54034; else 
#line 455 
                                   goto ldv_54033;
  ldv_54033: 
#line 456 
  ;
  
#line 459 
  netdev->netdev_ops = & ixgb_netdev_ops;
  
#line 460 
  ixgb_set_ethtool_ops(netdev);
  
#line 461 
  netdev->watchdog_timeo = 1250;
  
#line 462 
  netif_napi_add(netdev,& adapter->napi,& ixgb_clean,64);
  
#line 464 
  tmp_2 = pci_name((struct pci_dev const *)pdev);
  
#line 464 
  ;
  
#line 464 
  strncpy((char *)(& netdev->name),tmp_2,15UL);
  
#line 466 
  adapter->bd_number = (unsigned int)cards_found;
  
#line 467 
  adapter->link_speed = (unsigned short)0U;
  
#line 468 
  adapter->link_duplex = (unsigned short)0U;
  
#line 472 
  err = ixgb_sw_init(adapter);
  
#line 473 
  if (err != 0) 
#line 474 
                goto err_sw_init; else ;
  
#line 476 
  netdev->hw_features = 65929ULL;
  
#line 481 
  netdev->features = netdev->hw_features | 512ULL;
  
#line 483 
  netdev->hw_features |= 17179869184ULL;
  
#line 485 
  if (pci_using_dac != 0) {
    
#line 486 
    netdev->features |= 32ULL;
    
#line 487 
    netdev->vlan_features |= 32ULL;
  }
  else ;
  
#line 492 
  tmp_3 = ixgb_validate_eeprom_checksum(& adapter->hw);
  
#line 492 
  if (tmp_3) 
#line 492 
             tmp_4 = 0; else 
#line 492 
                             tmp_4 = 1;
  
#line 492 
  if (tmp_4) {
    
#line 493 
    if (((int)adapter->msg_enable & 2) != 0) 
#line 493 
                                             netdev_err((struct net_device const *)adapter->netdev,"The EEPROM Checksum Is Not Valid\n"); else ;
    
#line 495 
    err = -5;
    
#line 496 
    goto err_eeprom;
  }
  else ;
  
#line 499 
  ixgb_get_ee_mac_addr(& adapter->hw,netdev->dev_addr);
  
#line 501 
  tmp_5 = is_valid_ether_addr((u8 const *)netdev->dev_addr);
  
#line 501 
  if (tmp_5) 
#line 501 
             tmp_6 = 0; else 
#line 501 
                             tmp_6 = 1;
  
#line 501 
  if (tmp_6) {
    
#line 502 
    if (((int)adapter->msg_enable & 2) != 0) 
#line 502 
                                             netdev_err((struct net_device const *)adapter->netdev,"Invalid MAC Address\n"); else ;
    
#line 503 
    err = -5;
    
#line 504 
    goto err_eeprom;
  }
  else ;
  
#line 507 
  adapter->part_num = ixgb_get_ee_pba_number(& adapter->hw);
  {
    struct lock_class_key __key;
    
#line 509 
    init_timer_key(& adapter->watchdog_timer,0U,"(&adapter->watchdog_timer)",& __key);
  }
  
#line 510 
  adapter->watchdog_timer.function = & ixgb_watchdog;
  
#line 511 
  adapter->watchdog_timer.data = (unsigned long)adapter;
  {
    struct lock_class_key __key_0;
    
#line 513 
    __init_work(& adapter->tx_timeout_task,0);
    
#line 513 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 513 
    adapter->tx_timeout_task.data = __constr_expr_37;
    
#line 513 
    lockdep_init_map(& adapter->tx_timeout_task.lockdep_map,"(&adapter->tx_timeout_task)",& __key_0,0);
    
#line 513 
    INIT_LIST_HEAD(& adapter->tx_timeout_task.entry);
    
#line 513 
    adapter->tx_timeout_task.func = & ixgb_tx_timeout_task;
  }
  
#line 515 
  strcpy((char *)(& netdev->name),"eth%d");
  
#line 516 
  err = ldv_register_netdev_84(netdev);
  
#line 517 
  if (err != 0) 
#line 518 
                goto err_register; else ;
  
#line 521 
  netif_carrier_off(netdev);
  
#line 523 
  if (((int)adapter->msg_enable & 2) != 0) 
#line 523 
                                           netdev_info((struct net_device const *)adapter->netdev,"Intel(R) PRO/10GbE Network Connection\n"); else ;
  
#line 525 
  ixgb_check_options(adapter);
  
#line 528 
  ixgb_reset(adapter);
  
#line 530 
  cards_found += 1;
  
#line 531 
  __retres = 0;
  
#line 531 
  goto return_label;
  err_register: 
#line 533 
  ;
  err_sw_init: 
#line 534 
  ;
  err_eeprom: 
#line 535 
  ;
  
#line 536 
  iounmap((void volatile *)adapter->hw.hw_addr);
  err_ioremap: 
#line 537 
  ;
  
#line 538 
  ldv_free_netdev_85(netdev);
  err_alloc_etherdev: 
#line 539 
  ;
  
#line 540 
  pci_release_regions(pdev);
  err_request_regions: 
#line 541 
  ;
  err_dma_mask: 
#line 542 
  ;
  
#line 543 
  pci_disable_device(pdev);
  
#line 544 
  __retres = err;
  return_label: 
#line 544 
                return __retres;
}


#line 558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_remove(struct pci_dev *pdev)
{
  
#line 560 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 561 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 563 
  cancel_work_sync(& adapter->tx_timeout_task);
  
#line 565 
  ldv_unregister_netdev_86(netdev);
  
#line 567 
  iounmap((void volatile *)adapter->hw.hw_addr);
  
#line 568 
  pci_release_regions(pdev);
  
#line 570 
  ldv_free_netdev_87(netdev);
  
#line 571 
  pci_disable_device(pdev);
  
#line 572 
  return;
}


#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_sw_init(struct ixgb_adapter *adapter)
{
  int __retres;
  
#line 586 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 587 
  struct net_device *netdev = adapter->netdev;
  
#line 588 
  struct pci_dev *pdev = adapter->pdev;
  
#line 592 
  hw->vendor_id = pdev->vendor;
  
#line 593 
  hw->device_id = pdev->device;
  
#line 594 
  hw->subsystem_vendor_id = pdev->subsystem_vendor;
  
#line 595 
  hw->subsystem_id = pdev->subsystem_device;
  
#line 597 
  hw->max_frame_size = netdev->mtu + 18U;
  
#line 598 
  adapter->rx_buffer_len = hw->max_frame_size + 8U;
  
#line 600 
  if ((((unsigned int)hw->device_id == 4168U || (unsigned int)hw->device_id == 4254U) || (unsigned int)hw->device_id == 6984U) || (unsigned int)hw->device_id == 6728U) 
    
#line 604 
    hw->mac_type = 1;
  else 
    
#line 607 
    if (((int)adapter->msg_enable & 2) != 0) 
#line 607 
                                             netdev_err((struct net_device const *)adapter->netdev,"unsupported device id\n"); else ;
  
#line 611 
  hw->fc.send_xon = (_Bool)1;
  
#line 613 
  set_bit(0L,(unsigned long volatile *)(& adapter->flags));
  
#line 614 
  __retres = 0;
  
#line 614 
  return __retres;
}


#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_open(struct net_device *netdev)
{
  int __retres;
  int err;
  
#line 633 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 637 
  err = ixgb_setup_tx_resources(adapter);
  
#line 638 
  if (err != 0) 
#line 639 
                goto err_setup_tx; else ;
  
#line 641 
  netif_carrier_off(netdev);
  
#line 645 
  err = ixgb_setup_rx_resources(adapter);
  
#line 646 
  if (err != 0) 
#line 647 
                goto err_setup_rx; else ;
  
#line 649 
  err = ixgb_up(adapter);
  
#line 650 
  if (err != 0) 
#line 651 
                goto err_up; else ;
  
#line 653 
  netif_start_queue(netdev);
  
#line 655 
  __retres = 0;
  
#line 655 
  goto return_label;
  err_up: 
#line 657 
  ;
  
#line 658 
  ixgb_free_rx_resources(adapter);
  err_setup_rx: 
#line 659 
  ;
  
#line 660 
  ixgb_free_tx_resources(adapter);
  err_setup_tx: 
#line 661 
  ;
  
#line 662 
  ixgb_reset(adapter);
  
#line 664 
  __retres = err;
  return_label: 
#line 664 
                return __retres;
}


#line 680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_close(struct net_device *netdev)
{
  int __retres;
  
#line 682 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 684 
  ixgb_down(adapter,(_Bool)1);
  
#line 686 
  ixgb_free_tx_resources(adapter);
  
#line 687 
  ixgb_free_rx_resources(adapter);
  
#line 689 
  __retres = 0;
  
#line 689 
  return __retres;
}


#line 700  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
int ixgb_setup_tx_resources(struct ixgb_adapter *adapter)
{
  int __retres;
  int size;
  
#line 702 
  struct ixgb_desc_ring *txdr = & adapter->tx_ring;
  
#line 703 
  struct pci_dev *pdev = adapter->pdev;
  
#line 706 
  size = (int)(txdr->count * 32U);
  
#line 707 
  txdr->buffer_info = (struct ixgb_buffer *)vzalloc((unsigned long)size);
  
#line 708 
  if (txdr->buffer_info == (struct ixgb_buffer *)0) {
    
#line 709 
    __retres = -12;
    
#line 709 
    goto return_label;
  }
  else ;
  
#line 713 
  txdr->size = txdr->count * 16U;
  
#line 714 
  txdr->size = (txdr->size + 4095U) & 4294963200U;
  
#line 716 
  txdr->desc = dma_zalloc_coherent(& pdev->dev,(unsigned long)txdr->size,& txdr->dma,208U);
  
#line 718 
  if (txdr->desc == (void *)0) {
    
#line 719 
    vfree((void const *)txdr->buffer_info);
    
#line 720 
    __retres = -12;
    
#line 720 
    goto return_label;
  }
  else ;
  
#line 723 
  txdr->next_to_use = 0U;
  
#line 724 
  txdr->next_to_clean = 0U;
  
#line 726 
  __retres = 0;
  return_label: 
#line 726 
                return __retres;
}


#line 737  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_configure_tx(struct ixgb_adapter *adapter)
{
  u32 tctl;
  
#line 739 
  u64 tdba = adapter->tx_ring.dma;
  
#line 740 
  u32 tdlen = adapter->tx_ring.count * 16U;
  
#line 742 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 748 
  writel((unsigned int)tdba,(void volatile *)(hw->hw_addr + 1544U));
  
#line 749 
  writel((unsigned int)(tdba >> 32),(void volatile *)(hw->hw_addr + 1548U));
  
#line 751 
  writel(tdlen,(void volatile *)(hw->hw_addr + 1552U));
  
#line 755 
  writel(0U,(void volatile *)(hw->hw_addr + 1560U));
  
#line 756 
  writel(0U,(void volatile *)(hw->hw_addr + 1568U));
  
#line 762 
  writel(adapter->tx_int_delay,(void volatile *)(hw->hw_addr + 1576U));
  
#line 766 
  tctl = 7U;
  
#line 767 
  writel(tctl,(void volatile *)(hw->hw_addr + 1536U));
  
#line 770 
  if ((int)adapter->tx_int_delay_enable != 0) 
#line 770 
                                              adapter->tx_cmd_type = 2148532224U; else 
                                                                    
#line 770 
                                                                    adapter->tx_cmd_type = 1048576U;
  
#line 772 
  return;
}


#line 783  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
int ixgb_setup_rx_resources(struct ixgb_adapter *adapter)
{
  int __retres;
  int size;
  
#line 785 
  struct ixgb_desc_ring *rxdr = & adapter->rx_ring;
  
#line 786 
  struct pci_dev *pdev = adapter->pdev;
  
#line 789 
  size = (int)(rxdr->count * 32U);
  
#line 790 
  rxdr->buffer_info = (struct ixgb_buffer *)vzalloc((unsigned long)size);
  
#line 791 
  if (rxdr->buffer_info == (struct ixgb_buffer *)0) {
    
#line 792 
    __retres = -12;
    
#line 792 
    goto return_label;
  }
  else ;
  
#line 796 
  rxdr->size = rxdr->count * 16U;
  
#line 797 
  rxdr->size = (rxdr->size + 4095U) & 4294963200U;
  
#line 799 
  rxdr->desc = dma_alloc_attrs(& pdev->dev,(unsigned long)rxdr->size,& rxdr->dma,208U,(struct dma_attrs *)0);
  
#line 802 
  if (rxdr->desc == (void *)0) {
    
#line 803 
    vfree((void const *)rxdr->buffer_info);
    
#line 804 
    __retres = -12;
    
#line 804 
    goto return_label;
  }
  else ;
  
#line 806 
  memset(rxdr->desc,0,(unsigned long)rxdr->size);
  
#line 808 
  rxdr->next_to_clean = 0U;
  
#line 809 
  rxdr->next_to_use = 0U;
  
#line 811 
  __retres = 0;
  return_label: 
#line 811 
                return __retres;
}


#line 820  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_setup_rctl(struct ixgb_adapter *adapter)
{
  u32 rctl;
  
#line 824 
  rctl = readl((void const volatile *)(adapter->hw.hw_addr + 256U));
  
#line 826 
  rctl &= 4294955007U;
  
#line 828 
  rctl = ((adapter->hw.mc_filter_type << 12) | rctl) | 8421378U;
  
#line 833 
  rctl |= 67108864U;
  
#line 835 
  if (adapter->rx_buffer_len <= 2048U) 
#line 836 
                                       rctl = rctl;
  else 
    
#line 837 
    if (adapter->rx_buffer_len <= 4096U) 
#line 838 
                                         rctl |= 65536U;
    else 
      
#line 839 
      if (adapter->rx_buffer_len <= 8192U) 
#line 840 
                                           rctl |= 131072U;
      else 
        
#line 841 
        if (adapter->rx_buffer_len <= 16384U) 
#line 842 
                                              rctl |= 196608U; else ;
  
#line 844 
  writel(rctl,(void volatile *)(adapter->hw.hw_addr + 256U));
  
#line 845 
  return;
}


#line 855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_configure_rx(struct ixgb_adapter *adapter)
{
  u32 rctl;
  u32 rxcsum;
  
#line 857 
  u64 rdba = adapter->rx_ring.dma;
  
#line 858 
  u32 rdlen = adapter->rx_ring.count * 16U;
  
#line 859 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 865 
  rctl = readl((void const volatile *)(hw->hw_addr + 256U));
  
#line 866 
  writel(rctl & 4294967293U,(void volatile *)(hw->hw_addr + 256U));
  
#line 870 
  writel(adapter->rx_int_delay,(void volatile *)(hw->hw_addr + 312U));
  
#line 874 
  writel((unsigned int)rdba,(void volatile *)(hw->hw_addr + 280U));
  
#line 875 
  writel((unsigned int)(rdba >> 32),(void volatile *)(hw->hw_addr + 284U));
  
#line 877 
  writel(rdlen,(void volatile *)(hw->hw_addr + 288U));
  
#line 880 
  writel(0U,(void volatile *)(hw->hw_addr + 296U));
  
#line 881 
  writel(0U,(void volatile *)(hw->hw_addr + 304U));
  
#line 888 
  writel(0U,(void volatile *)(hw->hw_addr + 320U));
  
#line 891 
  if ((int)adapter->rx_csum != 0) {
    
#line 892 
    rxcsum = readl((void const volatile *)(hw->hw_addr + 344U));
    
#line 893 
    rxcsum |= 512U;
    
#line 894 
    writel(rxcsum,(void volatile *)(hw->hw_addr + 344U));
  }
  else ;
  
#line 899 
  writel(rctl,(void volatile *)(hw->hw_addr + 256U));
  
#line 900 
  return;
}


#line 910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
void ixgb_free_tx_resources(struct ixgb_adapter *adapter)
{
  
#line 912 
  struct pci_dev *pdev = adapter->pdev;
  
#line 914 
  ixgb_clean_tx_ring(adapter);
  
#line 916 
  vfree((void const *)adapter->tx_ring.buffer_info);
  
#line 917 
  adapter->tx_ring.buffer_info = (struct ixgb_buffer *)0;
  
#line 919 
  dma_free_attrs(& pdev->dev,(unsigned long)adapter->tx_ring.size,adapter->tx_ring.desc,adapter->tx_ring.dma,(struct dma_attrs *)0);
  
#line 922 
  adapter->tx_ring.desc = (void *)0;
  
#line 923 
  return;
}


#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_unmap_and_free_tx_resource(struct ixgb_adapter *adapter, struct ixgb_buffer *buffer_info)
{
  
#line 929 
  if (buffer_info->dma != 0ULL) {
    
#line 930 
    if ((unsigned int)buffer_info->mapped_as_page != 0U) 
#line 931 
                                                         dma_unmap_page(& (adapter->pdev)->dev,buffer_info->dma,(unsigned long)buffer_info->length,(enum dma_data_direction)DMA_TO_DEVICE); else 
                                                                    
#line 934 
                                                                    dma_unmap_single_attrs(& (adapter->pdev)->dev,buffer_info->dma,(unsigned long)buffer_info->length,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 936 
    buffer_info->dma = 0ULL;
  }
  else ;
  
#line 939 
  if (buffer_info->skb != (struct sk_buff *)0) {
    
#line 940 
    dev_kfree_skb_any(buffer_info->skb);
    
#line 941 
    buffer_info->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 943 
  buffer_info->time_stamp = 0UL;
  
#line 944 
  return;
}


#line 955  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_clean_tx_ring(struct ixgb_adapter *adapter)
{
  struct ixgb_buffer *buffer_info;
  unsigned long size;
  unsigned int i;
  
#line 957 
  struct ixgb_desc_ring *tx_ring = & adapter->tx_ring;
  
#line 964 
  i = 0U;
  
#line 964 
  goto ldv_54112;
  ldv_54111: 
#line 965 
  ;
  
#line 965 
  buffer_info = tx_ring->buffer_info + i;
  
#line 966 
  ixgb_unmap_and_free_tx_resource(adapter,buffer_info);
  
#line 964 
  i += 1U;
  ldv_54112: 
#line 965 
  ;
  
#line 964 
  if (tx_ring->count > i) 
#line 966 
                          goto ldv_54111; else 
#line 969 
                                               goto ldv_54113;
  ldv_54113: 
#line 970 
  ;
  
#line 969 
  size = (unsigned long)tx_ring->count * 32UL;
  
#line 970 
  memset((void *)tx_ring->buffer_info,0,size);
  
#line 974 
  memset(tx_ring->desc,0,(unsigned long)tx_ring->size);
  
#line 976 
  tx_ring->next_to_use = 0U;
  
#line 977 
  tx_ring->next_to_clean = 0U;
  
#line 979 
  writel(0U,(void volatile *)(adapter->hw.hw_addr + 1560U));
  
#line 980 
  writel(0U,(void volatile *)(adapter->hw.hw_addr + 1568U));
  
#line 981 
  return;
}


#line 991  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
void ixgb_free_rx_resources(struct ixgb_adapter *adapter)
{
  
#line 993 
  struct ixgb_desc_ring *rx_ring = & adapter->rx_ring;
  
#line 994 
  struct pci_dev *pdev = adapter->pdev;
  
#line 996 
  ixgb_clean_rx_ring(adapter);
  
#line 998 
  vfree((void const *)rx_ring->buffer_info);
  
#line 999 
  rx_ring->buffer_info = (struct ixgb_buffer *)0;
  
#line 1001 
  dma_free_attrs(& pdev->dev,(unsigned long)rx_ring->size,rx_ring->desc,rx_ring->dma,(struct dma_attrs *)0);
  
#line 1004 
  rx_ring->desc = (void *)0;
  
#line 1005 
  return;
}


#line 1013  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_clean_rx_ring(struct ixgb_adapter *adapter)
{
  struct ixgb_buffer *buffer_info;
  unsigned long size;
  unsigned int i;
  
#line 1015 
  struct ixgb_desc_ring *rx_ring = & adapter->rx_ring;
  
#line 1017 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1023 
  i = 0U;
  
#line 1023 
  goto ldv_54128;
  ldv_54127: 
#line 1024 
  ;
  
#line 1024 
  buffer_info = rx_ring->buffer_info + i;
  
#line 1025 
  if (buffer_info->dma != 0ULL) {
    
#line 1026 
    dma_unmap_single_attrs(& pdev->dev,buffer_info->dma,(unsigned long)buffer_info->length,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 1030 
    buffer_info->dma = 0ULL;
    
#line 1031 
    buffer_info->length = (unsigned short)0U;
  }
  else ;
  
#line 1034 
  if (buffer_info->skb != (struct sk_buff *)0) {
    
#line 1035 
    consume_skb(buffer_info->skb);
    
#line 1036 
    buffer_info->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 1023 
  i += 1U;
  ldv_54128: 
#line 1024 
  ;
  
#line 1023 
  if (rx_ring->count > i) 
#line 1025 
                          goto ldv_54127; else 
#line 1028 
                                               goto ldv_54129;
  ldv_54129: 
#line 1029 
  ;
  
#line 1040 
  size = (unsigned long)rx_ring->count * 32UL;
  
#line 1041 
  memset((void *)rx_ring->buffer_info,0,size);
  
#line 1045 
  memset(rx_ring->desc,0,(unsigned long)rx_ring->size);
  
#line 1047 
  rx_ring->next_to_clean = 0U;
  
#line 1048 
  rx_ring->next_to_use = 0U;
  
#line 1050 
  writel(0U,(void volatile *)(adapter->hw.hw_addr + 296U));
  
#line 1051 
  writel(0U,(void volatile *)(adapter->hw.hw_addr + 304U));
  
#line 1052 
  return;
}


#line 1063  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_set_mac(struct net_device *netdev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 1065 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1066 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 1068 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 1068 
  if (tmp_0) 
#line 1068 
             tmp_1 = 0; else 
#line 1068 
                             tmp_1 = 1;
  
#line 1068 
  if (tmp_1) {
    
#line 1069 
    __retres = -99;
    
#line 1069 
    goto return_label;
  }
  else ;
  
#line 1071 
  memcpy((void *)netdev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 1073 
  ixgb_rar_set(& adapter->hw,(u8 *)(& addr->sa_data),0U);
  
#line 1075 
  __retres = 0;
  return_label: 
#line 1075 
                return __retres;
}


#line 1089  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_set_multi(struct net_device *netdev)
{
  struct netdev_hw_addr *ha;
  u32 rctl;
  
#line 1091 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1092 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 1098 
  rctl = readl((void const volatile *)(hw->hw_addr + 256U));
  
#line 1100 
  if ((netdev->flags & 256U) != 0U) {
    
#line 1101 
    rctl |= 24U;
    
#line 1103 
    rctl &= 4294443007U;
    
#line 1104 
    rctl &= 4294705151U;
  }
  else {
    
#line 1106 
    if ((netdev->flags & 512U) != 0U) {
      
#line 1107 
      rctl |= 16U;
      
#line 1108 
      rctl &= 4294967287U;
    }
    else 
#line 1110 
         rctl &= 4294967271U;
    
#line 1113 
    rctl |= 262144U;
    
#line 1114 
    rctl &= 4294443007U;
  }
  
#line 1117 
  if (netdev->mc.count > 128) {
    
#line 1118 
    rctl |= 16U;
    
#line 1119 
    writel(rctl,(void volatile *)(hw->hw_addr + 256U));
  }
  else {
    u8 *addr;
    struct netdev_hw_addr *tmp_1;
    struct netdev_hw_addr *tmp_2;
    
#line 1121 
    u8 *mta = kmalloc_0(768UL,32U);
    
#line 1124 
    if (mta == (u8 *)0U) 
#line 1125 
                         goto alloc_failed; else ;
    
#line 1127 
    writel(rctl,(void volatile *)(hw->hw_addr + 256U));
    
#line 1129 
    addr = mta;
    {
      
#line 1130 
      struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
      
#line 1130 
      tmp_1 = (struct netdev_hw_addr *)__mptr;
    }
    
#line 1130 
    ha = tmp_1;
    
#line 1130 
    goto ldv_54151;
    ldv_54150: 
#line 1131 
    ;
    
#line 1131 
    memcpy((void *)addr,(void const *)(& ha->addr),6UL);
    
#line 1132 
    addr += 6U;
    {
      
#line 1130 
      struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
      
#line 1130 
      tmp_2 = (struct netdev_hw_addr *)__mptr_0;
    }
    
#line 1130 
    ha = tmp_2;
    ldv_54151: 
#line 1132 
    ;
    
#line 1130 
    if (& ha->list != & netdev->mc.list) 
#line 1132 
                                         goto ldv_54150; else 
#line 1135 
                                                              goto ldv_54152;
    ldv_54152: 
#line 1136 
    ;
    
#line 1135 
    ixgb_mc_addr_list_update(hw,mta,(unsigned int)netdev->mc.count,0U);
    
#line 1136 
    kfree((void const *)mta);
  }
  alloc_failed: 
#line 1139 
  ;
  
#line 1140 
  if ((netdev->features & 256ULL) != 0ULL) 
#line 1141 
                                           ixgb_vlan_strip_enable(adapter); else 
                                                                    
#line 1143 
                                                                    ixgb_vlan_strip_disable(adapter);
  
#line 1144 
  return;
}


#line 1153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_watchdog(unsigned long data)
{
  bool tmp;
  int tmp_8;
  bool tmp_7;
  
#line 1155 
  struct ixgb_adapter *adapter = (struct ixgb_adapter *)data;
  
#line 1156 
  struct net_device *netdev = adapter->netdev;
  
#line 1157 
  struct ixgb_desc_ring *txdr = & adapter->tx_ring;
  
#line 1159 
  ixgb_check_for_link(& adapter->hw);
  
#line 1161 
  tmp = ixgb_check_for_bad_link(& adapter->hw);
  
#line 1161 
  if ((int)tmp != 0) 
#line 1163 
                     netif_start_queue(netdev); else ;
  
#line 1166 
  if ((int)adapter->hw.link_up != 0) {
    int tmp_4;
    bool tmp_3;
    
#line 1167 
    tmp_3 = netif_carrier_ok((struct net_device const *)netdev);
    
#line 1167 
    if (tmp_3) 
#line 1167 
               tmp_4 = 0; else 
#line 1167 
                               tmp_4 = 1;
    
#line 1167 
    if (tmp_4) {
      char *tmp_2;
      
#line 1169 
      if (adapter->hw.fc.type != (unsigned int)3) {
        char *tmp_1;
        
#line 1170 
        if (adapter->hw.fc.type != (unsigned int)1) {
          char *tmp_0;
          
#line 1172 
          if (adapter->hw.fc.type == (unsigned int)2) 
#line 1172 
                                                      tmp_0 = (char *)"TX"; else 
                                                                    
#line 1172 
                                                                    tmp_0 = (char *)"None";
          
#line 1170 
          tmp_1 = tmp_0;
        }
        else 
#line 1170 
             tmp_1 = (char *)"RX";
        
#line 1169 
        tmp_2 = tmp_1;
      }
      else 
#line 1169 
           tmp_2 = (char *)"RX/TX";
      
#line 1168 
      ;
      
#line 1168 
      netdev_info((struct net_device const *)netdev,"NIC Link is Up 10 Gbps Full Duplex, Flow Control: %s\n",tmp_2);
      
#line 1176 
      adapter->link_speed = (unsigned short)10000U;
      
#line 1177 
      adapter->link_duplex = (unsigned short)2U;
      
#line 1178 
      netif_carrier_on(netdev);
    }
    else ;
  }
  else {
    bool tmp_5;
    
#line 1181 
    tmp_5 = netif_carrier_ok((struct net_device const *)netdev);
    
#line 1181 
    if ((int)tmp_5 != 0) {
      
#line 1182 
      adapter->link_speed = (unsigned short)0U;
      
#line 1183 
      adapter->link_duplex = (unsigned short)0U;
      
#line 1184 
      netdev_info((struct net_device const *)netdev,"NIC Link is Down\n");
      
#line 1185 
      netif_carrier_off(netdev);
    }
    else ;
  }
  
#line 1189 
  ixgb_update_stats(adapter);
  
#line 1191 
  tmp_7 = netif_carrier_ok((struct net_device const *)netdev);
  
#line 1191 
  if (tmp_7) 
#line 1191 
             tmp_8 = 0; else 
#line 1191 
                             tmp_8 = 1;
  
#line 1191 
  if (tmp_8) {
    unsigned int tmp_6;
    
#line 1192 
    if (txdr->next_to_clean <= txdr->next_to_use) 
#line 1192 
                                                  tmp_6 = txdr->count; else 
                                                                    
#line 1192 
                                                                    tmp_6 = 0U;
    
#line 1192 
    ;
    
#line 1192 
    if ((tmp_6 + txdr->next_to_clean) - txdr->next_to_use < txdr->count) {
      
#line 1197 
      ldv_schedule_work_88(& adapter->tx_timeout_task);
      
#line 1199 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1204 
  adapter->detect_tx_hung = (_Bool)1;
  
#line 1207 
  writel(1U,(void volatile *)(adapter->hw.hw_addr + 136U));
  
#line 1210 
  ldv_mod_timer_89(& adapter->watchdog_timer,jiffies + 500UL);
  return_label: 
#line 1211 
                return;
}


#line 1218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_tso(struct ixgb_adapter *adapter, struct sk_buff *skb)
{
  int __retres;
  struct ixgb_context_desc *context_desc;
  unsigned int i;
  u8 ipcss;
  u8 ipcso;
  u8 tucss;
  u8 tucso;
  u8 hdr_len;
  u16 ipcse;
  u16 tucse;
  u16 mss;
  bool tmp_8_0;
  
#line 1225 
  tmp_8_0 = skb_is_gso((struct sk_buff const *)skb);
  
#line 1225 
  if ((long)((int)tmp_8_0 != 0) != 0L) {
    struct ixgb_buffer *buffer_info;
    struct iphdr *iph;
    int err;
    int tmp;
    unsigned int tmp_0;
    unsigned char *tmp_1;
    struct tcphdr *tmp_2;
    __sum16 tmp_3;
    int tmp_4;
    int tmp_5;
    int tmp_6;
    struct tcphdr *tmp_7;
    
#line 1230 
    err = skb_cow_head(skb,0U);
    
#line 1231 
    if (err < 0) {
      
#line 1232 
      __retres = err;
      
#line 1232 
      goto return_label;
    }
    else ;
    
#line 1234 
    tmp = skb_transport_offset((struct sk_buff const *)skb);
    
#line 1234 
    tmp_0 = tcp_hdrlen((struct sk_buff const *)skb);
    
#line 1234 
    hdr_len = (unsigned char)((int)((unsigned char)tmp) + (int)((unsigned char)tmp_0));
    
#line 1235 
    tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1235 
    mss = ((struct skb_shared_info *)tmp_1)->gso_size;
    
#line 1236 
    iph = ip_hdr((struct sk_buff const *)skb);
    
#line 1237 
    iph->tot_len = (unsigned short)0U;
    
#line 1238 
    iph->check = (unsigned short)0U;
    
#line 1239 
    tmp_2 = tcp_hdr((struct sk_buff const *)skb);
    
#line 1239 
    tmp_3 = csum_tcpudp_magic(iph->saddr,iph->daddr,(unsigned short)0,(unsigned short)6,0U);
    
#line 1239 
    tmp_2->check = (unsigned short)(~ ((int)tmp_3));
    
#line 1242 
    tmp_4 = skb_network_offset((struct sk_buff const *)skb);
    
#line 1242 
    ipcss = (unsigned char)tmp_4;
    
#line 1243 
    ipcso = (unsigned char)((long)(& iph->check) - (long)skb->data);
    
#line 1244 
    tmp_5 = skb_transport_offset((struct sk_buff const *)skb);
    
#line 1244 
    ipcse = (unsigned short)((unsigned int)((unsigned short)tmp_5) + 65535U);
    
#line 1245 
    tmp_6 = skb_transport_offset((struct sk_buff const *)skb);
    
#line 1245 
    tucss = (unsigned char)tmp_6;
    
#line 1246 
    tmp_7 = tcp_hdr((struct sk_buff const *)skb);
    
#line 1246 
    tucso = (unsigned char)((long)(& tmp_7->check) - (long)skb->data);
    
#line 1247 
    tucse = (unsigned short)0U;
    
#line 1249 
    i = adapter->tx_ring.next_to_use;
    
#line 1250 
    context_desc = (struct ixgb_context_desc *)adapter->tx_ring.desc + i;
    
#line 1251 
    buffer_info = adapter->tx_ring.buffer_info + i;
    {
      
#line 1252 
      int __ret_warn_on = buffer_info->dma != 0ULL;
      
#line 1252 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 1252 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c",1252); else ;
      
#line 1252 
      long tmp_8 = (long)(__ret_warn_on != 0);
    }
    
#line 1254 
    context_desc->ipcss = ipcss;
    
#line 1255 
    context_desc->ipcso = ipcso;
    
#line 1256 
    context_desc->ipcse = ipcse;
    
#line 1257 
    context_desc->tucss = tucss;
    
#line 1258 
    context_desc->tucso = tucso;
    
#line 1259 
    context_desc->tucse = tucse;
    
#line 1260 
    context_desc->mss = mss;
    
#line 1261 
    context_desc->hdr_len = hdr_len;
    
#line 1262 
    context_desc->status = (unsigned char)0U;
    
#line 1263 
    context_desc->cmd_type_len = (skb->len - (unsigned int)hdr_len) | 2264924160U;
    
#line 1272 
    i += 1U;
    
#line 1272 
    ;
    
#line 1272 
    if (i == adapter->tx_ring.count) 
#line 1272 
                                     i = 0U; else ;
    
#line 1273 
    adapter->tx_ring.next_to_use = i;
    
#line 1275 
    __retres = 1;
    
#line 1275 
    goto return_label;
  }
  else ;
  
#line 1278 
  __retres = 0;
  return_label: 
#line 1278 
                return __retres;
}


#line 1282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static bool ixgb_tx_csum(struct ixgb_adapter *adapter, struct sk_buff *skb)
{
  bool __retres;
  struct ixgb_context_desc *context_desc;
  unsigned int i;
  u8 css;
  u8 cso;
  
#line 1288 
  if ((long)((unsigned int)*((unsigned char *)skb + 145UL) == 6U) != 0L) {
    struct ixgb_buffer *buffer_info;
    int tmp;
    
#line 1290 
    tmp = skb_checksum_start_offset((struct sk_buff const *)skb);
    
#line 1290 
    css = (unsigned char)tmp;
    
#line 1291 
    cso = (unsigned char)((int)((unsigned char)skb->__anonCompField_sk_buff_82.__anonCompField___anonunion_285_81.csum_offset) + (int)css);
    
#line 1293 
    i = adapter->tx_ring.next_to_use;
    
#line 1294 
    context_desc = (struct ixgb_context_desc *)adapter->tx_ring.desc + i;
    
#line 1295 
    buffer_info = adapter->tx_ring.buffer_info + i;
    {
      
#line 1296 
      int __ret_warn_on = buffer_info->dma != 0ULL;
      
#line 1296 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 1296 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c",1296); else ;
      
#line 1296 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 1298 
    context_desc->tucss = css;
    
#line 1299 
    context_desc->tucso = cso;
    
#line 1300 
    context_desc->tucse = (unsigned short)0U;
    
#line 1302 
    *((u32 *)(& context_desc->ipcss)) = 0U;
    
#line 1303 
    context_desc->status = (unsigned char)0U;
    
#line 1304 
    context_desc->hdr_len = (unsigned char)0U;
    
#line 1305 
    context_desc->mss = (unsigned short)0U;
    
#line 1306 
    context_desc->cmd_type_len = 2147483648U;
    
#line 1310 
    i += 1U;
    
#line 1310 
    ;
    
#line 1310 
    if (i == adapter->tx_ring.count) 
#line 1310 
                                     i = 0U; else ;
    
#line 1311 
    adapter->tx_ring.next_to_use = i;
    
#line 1313 
    __retres = (_Bool)1;
    
#line 1313 
    goto return_label;
  }
  else ;
  
#line 1316 
  __retres = (_Bool)0;
  return_label: 
#line 1316 
                return __retres;
}


#line 1323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_tx_map(struct ixgb_adapter *adapter, struct sk_buff *skb, unsigned int first)
{
  int __retres;
  struct ixgb_buffer *buffer_info;
  unsigned int tmp;
  unsigned int size;
  unsigned int i;
  unsigned char *tmp_0;
  unsigned char *tmp_1;
  unsigned int f;
  int tmp_3;
  int tmp_4_0;
  unsigned int tmp_10;
  
#line 1326 
  struct ixgb_desc_ring *tx_ring = & adapter->tx_ring;
  
#line 1327 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1329 
  tmp = skb_headlen((struct sk_buff const *)skb);
  
#line 1329 
  int len = (int)tmp;
  
#line 1330 
  unsigned int offset = 0U;
  
#line 1330 
  unsigned int count = 0U;
  
#line 1331 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1331 
  unsigned int mss = (unsigned int)((struct skb_shared_info *)tmp_0)->gso_size;
  
#line 1332 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1332 
  unsigned int nr_frags = (unsigned int)((struct skb_shared_info *)tmp_1)->nr_frags;
  
#line 1335 
  i = tx_ring->next_to_use;
  
#line 1337 
  goto ldv_54212;
  ldv_54211: 
#line 1338 
  ;
  
#line 1338 
  buffer_info = tx_ring->buffer_info + i;
  {
    int tmp_2;
    
#line 1339 
    int _min1 = len;
    
#line 1339 
    int _min2 = 16384;
    
#line 1339 
    if (_min1 < _min2) 
#line 1339 
                       tmp_2 = _min1; else 
#line 1339 
                                           tmp_2 = _min2;
    
#line 1339 
    tmp_3 = tmp_2;
  }
  
#line 1339 
  size = (unsigned int)tmp_3;
  
#line 1342 
  if ((long)((mss != 0U && nr_frags == 0U) != 0) != 0L && (long)((size == (unsigned int)len && size > 8U) != 0) != 0L) 
    
#line 1343 
    size += 4294967292U; else ;
  
#line 1345 
  buffer_info->length = (unsigned short)size;
  {
    
#line 1346 
    int __ret_warn_on = buffer_info->dma != 0ULL;
    
#line 1346 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1346 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c",1346); else ;
    
#line 1346 
    long tmp_4 = (long)(__ret_warn_on != 0);
  }
  
#line 1347 
  buffer_info->time_stamp = jiffies;
  
#line 1348 
  buffer_info->mapped_as_page = (unsigned short)0U;
  
#line 1349 
  buffer_info->dma = dma_map_single_attrs(& pdev->dev,(void *)(skb->data + offset),(unsigned long)size,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 1352 
  tmp_4_0 = dma_mapping_error(& pdev->dev,buffer_info->dma);
  
#line 1352 
  if (tmp_4_0 != 0) 
#line 1353 
                    goto dma_error; else ;
  
#line 1354 
  buffer_info->next_to_watch = (unsigned short)0U;
  
#line 1356 
  len = (int)((unsigned int)len - size);
  
#line 1357 
  offset += size;
  
#line 1358 
  count += 1U;
  
#line 1359 
  if (len != 0) {
    
#line 1360 
    i += 1U;
    
#line 1361 
    if (tx_ring->count == i) 
#line 1362 
                             i = 0U; else ;
  }
  else ;
  ldv_54212: 
#line 1364 
  ;
  
#line 1337 
  if (len != 0) 
#line 1339 
                goto ldv_54211; else 
#line 1342 
                                     goto ldv_54213;
  ldv_54213: 
#line 1343 
  ;
  
#line 1366 
  f = 0U;
  
#line 1366 
  goto ldv_54222;
  ldv_54221: 
#line 1367 
  ;
  {
    struct skb_frag_struct const *frag;
    unsigned char *tmp_5;
    unsigned int tmp_6;
    int tmp_8;
    int tmp_9;
    
#line 1369 
    tmp_5 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1369 
    frag = (struct skb_frag_struct const *)(& ((struct skb_shared_info *)tmp_5)->frags[f]);
    
#line 1370 
    tmp_6 = skb_frag_size(frag);
    
#line 1370 
    len = (int)tmp_6;
    
#line 1371 
    offset = 0U;
    
#line 1373 
    goto ldv_54219;
    ldv_54218: 
#line 1374 
    ;
    
#line 1374 
    i += 1U;
    
#line 1375 
    if (tx_ring->count == i) 
#line 1376 
                             i = 0U; else ;
    
#line 1378 
    buffer_info = tx_ring->buffer_info + i;
    {
      int tmp_7;
      
#line 1379 
      int _min1_0 = len;
      
#line 1379 
      int _min2_0 = 16384;
      
#line 1379 
      if (_min1_0 < _min2_0) 
#line 1379 
                             tmp_7 = _min1_0; else 
#line 1379 
                                                   tmp_7 = _min2_0;
      
#line 1379 
      tmp_8 = tmp_7;
    }
    
#line 1379 
    size = (unsigned int)tmp_8;
    
#line 1383 
    if ((((long)(mss != 0U) != 0L && (long)(nr_frags + 4294967295U == f) != 0L) != 0) != 0 && (long)((size == (unsigned int)len && size > 8U) != 0) != 0L) 
      
#line 1385 
      size += 4294967292U; else ;
    
#line 1387 
    buffer_info->length = (unsigned short)size;
    
#line 1388 
    buffer_info->time_stamp = jiffies;
    
#line 1389 
    buffer_info->mapped_as_page = (unsigned short)1U;
    
#line 1390 
    buffer_info->dma = skb_frag_dma_map(& pdev->dev,frag,(unsigned long)offset,(unsigned long)size,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 1393 
    tmp_9 = dma_mapping_error(& pdev->dev,buffer_info->dma);
    
#line 1393 
    if (tmp_9 != 0) 
#line 1394 
                    goto dma_error; else ;
    
#line 1395 
    buffer_info->next_to_watch = (unsigned short)0U;
    
#line 1397 
    len = (int)((unsigned int)len - size);
    
#line 1398 
    offset += size;
    
#line 1399 
    count += 1U;
    ldv_54219: 
#line 1400 
    ;
    
#line 1373 
    if (len != 0) 
#line 1375 
                  goto ldv_54218; else 
#line 1378 
                                       goto ldv_54220;
    ldv_54220: 
#line 1379 
    ;
  }
  
#line 1366 
  f += 1U;
  ldv_54222: 
#line 1367 
  ;
  
#line 1366 
  if (f < nr_frags) 
#line 1368 
                    goto ldv_54221; else 
#line 1371 
                                         goto ldv_54223;
  ldv_54223: 
#line 1372 
  ;
  
#line 1402 
  (tx_ring->buffer_info + i)->skb = skb;
  
#line 1403 
  (tx_ring->buffer_info + first)->next_to_watch = (unsigned short)i;
  
#line 1405 
  __retres = (int)count;
  
#line 1405 
  goto return_label;
  dma_error: 
#line 1407 
  ;
  
#line 1408 
  dev_err((struct device const *)(& pdev->dev),"TX DMA map failed\n");
  
#line 1409 
  buffer_info->dma = 0ULL;
  
#line 1410 
  if (count != 0U) 
#line 1411 
                   count -= 1U; else ;
  
#line 1413 
  goto ldv_54225;
  ldv_54224: 
#line 1414 
  ;
  
#line 1414 
  if (i == 0U) 
#line 1415 
               i = tx_ring->count + i; else ;
  
#line 1416 
  i -= 1U;
  
#line 1417 
  buffer_info = tx_ring->buffer_info + i;
  
#line 1418 
  ixgb_unmap_and_free_tx_resource(adapter,buffer_info);
  ldv_54225: 
#line 1419 
  ;
  
#line 1413 
  tmp_10 = count;
  
#line 1413 
  count -= 1U;
  
#line 1413 
  ;
  
#line 1413 
  if (tmp_10 != 0U) 
#line 1415 
                    goto ldv_54224; else 
#line 1418 
                                         goto ldv_54226;
  ldv_54226: 
#line 1419 
  ;
  
#line 1421 
  __retres = 0;
  return_label: 
#line 1421 
                return __retres;
}


#line 1425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_tx_queue(struct ixgb_adapter *adapter, int count, int vlan_id, int tx_flags)
{
  struct ixgb_buffer *buffer_info;
  unsigned int i;
  int tmp;
  
#line 1427 
  struct ixgb_desc_ring *tx_ring = & adapter->tx_ring;
  
#line 1428 
  struct ixgb_tx_desc *tx_desc = (struct ixgb_tx_desc *)0;
  
#line 1430 
  u32 cmd_type_len = adapter->tx_cmd_type;
  
#line 1431 
  u8 status = (unsigned char)0U;
  
#line 1432 
  u8 popts = (unsigned char)0U;
  
#line 1435 
  if ((tx_flags & 4) != 0) {
    
#line 1436 
    cmd_type_len |= 67108864U;
    
#line 1437 
    popts = (unsigned char)((unsigned int)popts | 3U);
  }
  else ;
  
#line 1440 
  if ((tx_flags & 1) != 0) 
#line 1441 
                           popts = (unsigned char)((unsigned int)popts | 2U); else ;
  
#line 1443 
  if ((tx_flags & 2) != 0) 
#line 1444 
                           cmd_type_len |= 1073741824U; else ;
  
#line 1446 
  i = tx_ring->next_to_use;
  
#line 1448 
  goto ldv_54241;
  ldv_54240: 
#line 1449 
  ;
  
#line 1449 
  buffer_info = tx_ring->buffer_info + i;
  
#line 1450 
  tx_desc = (struct ixgb_tx_desc *)tx_ring->desc + i;
  
#line 1451 
  tx_desc->buff_addr = buffer_info->dma;
  
#line 1452 
  tx_desc->cmd_type_len = (unsigned int)buffer_info->length | cmd_type_len;
  
#line 1454 
  tx_desc->status = status;
  
#line 1455 
  tx_desc->popts = popts;
  
#line 1456 
  tx_desc->vlan = (unsigned short)vlan_id;
  
#line 1458 
  i += 1U;
  
#line 1458 
  ;
  
#line 1458 
  if (i == tx_ring->count) 
#line 1458 
                           i = 0U; else ;
  ldv_54241: 
#line 1459 
  ;
  
#line 1448 
  tmp = count;
  
#line 1448 
  count -= 1;
  
#line 1448 
  ;
  
#line 1448 
  if (tmp != 0) 
#line 1450 
                goto ldv_54240; else 
#line 1453 
                                     goto ldv_54242;
  ldv_54242: 
#line 1454 
  ;
  
#line 1461 
  tx_desc->cmd_type_len |= 150994944U;
  
#line 1462 
  ldv_inline_asm();
  
#line 1470 
  tx_ring->next_to_use = i;
  
#line 1471 
  writel(i,(void volatile *)(adapter->hw.hw_addr + 1568U));
  
#line 1472 
  return;
}


#line 1474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int __ixgb_maybe_stop_tx(struct net_device *netdev, int size)
{
  int __retres;
  unsigned int tmp_0;
  
#line 1476 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1477 
  struct ixgb_desc_ring *tx_ring = & adapter->tx_ring;
  
#line 1479 
  netif_start_queue(netdev);
  
#line 1480 
  ldv_inline_asm();
  
#line 1487 
  if (tx_ring->next_to_clean <= tx_ring->next_to_use) 
#line 1487 
                                                      tmp_0 = tx_ring->count; else 
                                                                    
#line 1487 
                                                                    tmp_0 = 0U;
  
#line 1487 
  ;
  
#line 1487 
  if ((long)(((tmp_0 + tx_ring->next_to_clean) - tx_ring->next_to_use) + 4294967295U < (unsigned int)size) != 0L) {
    
#line 1488 
    __retres = -16;
    
#line 1488 
    goto return_label;
  }
  else ;
  
#line 1491 
  netif_start_queue(netdev);
  
#line 1492 
  adapter->restart_queue += 1U;
  
#line 1493 
  __retres = 0;
  return_label: 
#line 1493 
                return __retres;
}


#line 1496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_maybe_stop_tx(struct net_device *netdev, struct ixgb_desc_ring *tx_ring, int size)
{
  int __retres;
  unsigned int tmp;
  int tmp_0;
  
#line 1499 
  if (tx_ring->next_to_clean <= tx_ring->next_to_use) 
#line 1499 
                                                      tmp = tx_ring->count; else 
                                                                    
#line 1499 
                                                                    tmp = 0U;
  
#line 1499 
  ;
  
#line 1499 
  if ((long)(((tmp + tx_ring->next_to_clean) - tx_ring->next_to_use) + 4294967295U >= (unsigned int)size) != 0L) {
    
#line 1500 
    __retres = 0;
    
#line 1500 
    goto return_label;
  }
  else ;
  
#line 1501 
  tmp_0 = __ixgb_maybe_stop_tx(netdev,size);
  
#line 1501 
  __retres = tmp_0;
  return_label: 
#line 1501 
                return __retres;
}


#line 1513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static netdev_tx_t ixgb_xmit_frame(struct sk_buff *skb, struct net_device *netdev)
{
  netdev_tx_t __retres;
  unsigned int first;
  int tso;
  int tmp_0;
  int tmp_1;
  
#line 1515 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1517 
  unsigned int tx_flags = 0U;
  
#line 1518 
  int vlan_id = 0;
  
#line 1519 
  int count = 0;
  
#line 1522 
  tmp_0 = constant_test_bit(0L,(unsigned long const volatile *)(& adapter->flags));
  
#line 1522 
  if (tmp_0 != 0) {
    
#line 1523 
    dev_kfree_skb_any(skb);
    
#line 1524 
    __retres = NETDEV_TX_OK;
    
#line 1524 
    goto return_label;
  }
  else ;
  
#line 1527 
  if (skb->len == 0U) {
    
#line 1528 
    dev_kfree_skb_any(skb);
    
#line 1529 
    __retres = NETDEV_TX_OK;
    
#line 1529 
    goto return_label;
  }
  else ;
  
#line 1532 
  tmp_1 = ixgb_maybe_stop_tx(netdev,& adapter->tx_ring,20);
  
#line 1532 
  if ((long)(tmp_1 != 0) != 0L) {
    
#line 1534 
    __retres = NETDEV_TX_BUSY;
    
#line 1534 
    goto return_label;
  }
  else ;
  
#line 1536 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 1537 
    tx_flags |= 2U;
    
#line 1538 
    vlan_id = (int)skb->vlan_tci & -4097;
  }
  else ;
  
#line 1541 
  first = adapter->tx_ring.next_to_use;
  
#line 1543 
  tso = ixgb_tso(adapter,skb);
  
#line 1544 
  if (tso < 0) {
    
#line 1545 
    dev_kfree_skb_any(skb);
    
#line 1546 
    __retres = NETDEV_TX_OK;
    
#line 1546 
    goto return_label;
  }
  else ;
  
#line 1549 
  if ((long)(tso != 0) != 0L) 
#line 1550 
                              tx_flags |= 4U;
  else {
    bool tmp_2;
    
#line 1551 
    tmp_2 = ixgb_tx_csum(adapter,skb);
    
#line 1551 
    if ((int)tmp_2 != 0) 
#line 1552 
                         tx_flags |= 1U; else ;
  }
  
#line 1554 
  count = ixgb_tx_map(adapter,skb,first);
  
#line 1556 
  if (count != 0) {
    
#line 1557 
    ixgb_tx_queue(adapter,count,vlan_id,(int)tx_flags);
    
#line 1559 
    ixgb_maybe_stop_tx(netdev,& adapter->tx_ring,20);
  }
  else {
    
#line 1562 
    dev_kfree_skb_any(skb);
    
#line 1563 
    (adapter->tx_ring.buffer_info + first)->time_stamp = 0UL;
    
#line 1564 
    adapter->tx_ring.next_to_use = first;
  }
  
#line 1567 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 1567 
                return __retres;
}


#line 1576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_tx_timeout(struct net_device *netdev)
{
  
#line 1578 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1581 
  ldv_schedule_work_90(& adapter->tx_timeout_task);
  
#line 1582 
  return;
}


#line 1585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_tx_timeout_task(struct work_struct *work)
{
  struct ixgb_adapter *tmp;
  {
    
#line 1588 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1588 
    tmp = (struct ixgb_adapter *)__mptr + 18446744073709550960U;
  }
  
#line 1587 
  struct ixgb_adapter *adapter = tmp;
  
#line 1590 
  adapter->tx_timeout_count += 1U;
  
#line 1591 
  ixgb_down(adapter,(_Bool)1);
  
#line 1592 
  ixgb_up(adapter);
  
#line 1593 
  return;
}


#line 1604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static struct net_device_stats *ixgb_get_stats(struct net_device *netdev)
{
  struct net_device_stats *__retres;
  
#line 1606 
  __retres = & netdev->stats;
  
#line 1606 
  return __retres;
}


#line 1618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_change_mtu(struct net_device *netdev, int new_mtu)
{
  int __retres;
  bool tmp_0;
  bool tmp_1;
  
#line 1620 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1621 
  int max_frame = new_mtu + 18;
  
#line 1622 
  int old_max_frame = (int)(netdev->mtu + 18U);
  
#line 1625 
  if (new_mtu <= 67 || max_frame > 16132) {
    
#line 1627 
    if (((int)adapter->msg_enable & 2) != 0) 
#line 1627 
                                             netdev_err((struct net_device const *)adapter->netdev,"Invalid MTU setting %d\n",new_mtu); else ;
    
#line 1629 
    __retres = -22;
    
#line 1629 
    goto return_label;
  }
  else ;
  
#line 1632 
  if (old_max_frame == max_frame) {
    
#line 1633 
    __retres = 0;
    
#line 1633 
    goto return_label;
  }
  else ;
  
#line 1635 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 1635 
  if ((int)tmp_0 != 0) 
#line 1636 
                       ixgb_down(adapter,(_Bool)1); else ;
  
#line 1638 
  adapter->rx_buffer_len = (unsigned int)(max_frame + 8);
  
#line 1640 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 1642 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 1642 
  if ((int)tmp_1 != 0) 
#line 1643 
                       ixgb_up(adapter); else ;
  
#line 1645 
  __retres = 0;
  return_label: 
#line 1645 
                return __retres;
}


#line 1654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
void ixgb_update_stats(struct ixgb_adapter *adapter)
{
  int tmp;
  unsigned int tmp_8;
  unsigned int tmp_9;
  unsigned int tmp_10;
  unsigned int tmp_11;
  unsigned int tmp_12;
  unsigned int tmp_13;
  unsigned int tmp_14;
  unsigned int tmp_15;
  unsigned int tmp_16;
  unsigned int tmp_17;
  unsigned int tmp_18;
  unsigned int tmp_19;
  unsigned int tmp_20;
  unsigned int tmp_21;
  unsigned int tmp_22;
  unsigned int tmp_23;
  unsigned int tmp_24;
  unsigned int tmp_25;
  unsigned int tmp_26;
  unsigned int tmp_27;
  unsigned int tmp_28;
  unsigned int tmp_29;
  unsigned int tmp_30;
  unsigned int tmp_31;
  unsigned int tmp_32;
  unsigned int tmp_33;
  unsigned int tmp_34;
  unsigned int tmp_35;
  unsigned int tmp_36;
  unsigned int tmp_37;
  unsigned int tmp_38;
  unsigned int tmp_39;
  unsigned int tmp_40;
  unsigned int tmp_41;
  unsigned int tmp_42;
  unsigned int tmp_43;
  unsigned int tmp_44;
  unsigned int tmp_45;
  unsigned int tmp_46;
  unsigned int tmp_47;
  unsigned int tmp_48;
  unsigned int tmp_49;
  unsigned int tmp_50;
  unsigned int tmp_51;
  unsigned int tmp_52;
  unsigned int tmp_53;
  unsigned int tmp_54;
  unsigned int tmp_55;
  unsigned int tmp_56;
  unsigned int tmp_57;
  unsigned int tmp_58;
  unsigned int tmp_59;
  unsigned int tmp_60;
  unsigned int tmp_61;
  unsigned int tmp_62;
  unsigned int tmp_63;
  
#line 1656 
  struct net_device *netdev = adapter->netdev;
  
#line 1657 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1660 
  tmp = pci_channel_offline(pdev);
  
#line 1660 
  if (tmp != 0) 
#line 1661 
                goto return_label; else ;
  
#line 1663 
  if (((netdev->flags & 256U) != 0U || (netdev->flags & 512U) != 0U) || netdev->mc.count > 128) {
    unsigned int tmp_0;
    unsigned int tmp_3;
    
#line 1665 
    tmp_0 = readl((void const volatile *)(adapter->hw.hw_addr + 8216U));
    
#line 1665 
    u64 multi = (unsigned long long)tmp_0;
    
#line 1666 
    u32 bcast_l = readl((void const volatile *)(adapter->hw.hw_addr + 8208U));
    
#line 1667 
    u32 bcast_h = readl((void const volatile *)(adapter->hw.hw_addr + 8212U));
    
#line 1668 
    u64 bcast = ((unsigned long long)bcast_h << 32) | (unsigned long long)bcast_l;
    
#line 1670 
    tmp_3 = readl((void const volatile *)(adapter->hw.hw_addr + 8220U));
    
#line 1670 
    multi = ((unsigned long long)tmp_3 << 32) | multi;
    
#line 1672 
    if (multi >= bcast) 
#line 1673 
                        multi -= bcast; else ;
    
#line 1675 
    adapter->stats.mprcl += multi & 4294967295ULL;
    
#line 1676 
    adapter->stats.mprch += multi >> 32;
    
#line 1677 
    adapter->stats.bprcl += (unsigned long long)bcast_l;
    
#line 1678 
    adapter->stats.bprch += (unsigned long long)bcast_h;
  }
  else {
    unsigned int tmp_4;
    unsigned int tmp_5;
    unsigned int tmp_6;
    unsigned int tmp_7;
    
#line 1680 
    tmp_4 = readl((void const volatile *)(adapter->hw.hw_addr + 8216U));
    
#line 1680 
    adapter->stats.mprcl += (unsigned long long)tmp_4;
    
#line 1681 
    tmp_5 = readl((void const volatile *)(adapter->hw.hw_addr + 8220U));
    
#line 1681 
    adapter->stats.mprch += (unsigned long long)tmp_5;
    
#line 1682 
    tmp_6 = readl((void const volatile *)(adapter->hw.hw_addr + 8208U));
    
#line 1682 
    adapter->stats.bprcl += (unsigned long long)tmp_6;
    
#line 1683 
    tmp_7 = readl((void const volatile *)(adapter->hw.hw_addr + 8212U));
    
#line 1683 
    adapter->stats.bprch += (unsigned long long)tmp_7;
  }
  
#line 1685 
  tmp_8 = readl((void const volatile *)(adapter->hw.hw_addr + 8192U));
  
#line 1685 
  adapter->stats.tprl += (unsigned long long)tmp_8;
  
#line 1686 
  tmp_9 = readl((void const volatile *)(adapter->hw.hw_addr + 8196U));
  
#line 1686 
  adapter->stats.tprh += (unsigned long long)tmp_9;
  
#line 1687 
  tmp_10 = readl((void const volatile *)(adapter->hw.hw_addr + 8200U));
  
#line 1687 
  adapter->stats.gprcl += (unsigned long long)tmp_10;
  
#line 1688 
  tmp_11 = readl((void const volatile *)(adapter->hw.hw_addr + 8204U));
  
#line 1688 
  adapter->stats.gprch += (unsigned long long)tmp_11;
  
#line 1689 
  tmp_12 = readl((void const volatile *)(adapter->hw.hw_addr + 8224U));
  
#line 1689 
  adapter->stats.uprcl += (unsigned long long)tmp_12;
  
#line 1690 
  tmp_13 = readl((void const volatile *)(adapter->hw.hw_addr + 8228U));
  
#line 1690 
  adapter->stats.uprch += (unsigned long long)tmp_13;
  
#line 1691 
  tmp_14 = readl((void const volatile *)(adapter->hw.hw_addr + 8232U));
  
#line 1691 
  adapter->stats.vprcl += (unsigned long long)tmp_14;
  
#line 1692 
  tmp_15 = readl((void const volatile *)(adapter->hw.hw_addr + 8236U));
  
#line 1692 
  adapter->stats.vprch += (unsigned long long)tmp_15;
  
#line 1693 
  tmp_16 = readl((void const volatile *)(adapter->hw.hw_addr + 8240U));
  
#line 1693 
  adapter->stats.jprcl += (unsigned long long)tmp_16;
  
#line 1694 
  tmp_17 = readl((void const volatile *)(adapter->hw.hw_addr + 8244U));
  
#line 1694 
  adapter->stats.jprch += (unsigned long long)tmp_17;
  
#line 1695 
  tmp_18 = readl((void const volatile *)(adapter->hw.hw_addr + 8248U));
  
#line 1695 
  adapter->stats.gorcl += (unsigned long long)tmp_18;
  
#line 1696 
  tmp_19 = readl((void const volatile *)(adapter->hw.hw_addr + 8252U));
  
#line 1696 
  adapter->stats.gorch += (unsigned long long)tmp_19;
  
#line 1697 
  tmp_20 = readl((void const volatile *)(adapter->hw.hw_addr + 8256U));
  
#line 1697 
  adapter->stats.torl += (unsigned long long)tmp_20;
  
#line 1698 
  tmp_21 = readl((void const volatile *)(adapter->hw.hw_addr + 8260U));
  
#line 1698 
  adapter->stats.torh += (unsigned long long)tmp_21;
  
#line 1699 
  tmp_22 = readl((void const volatile *)(adapter->hw.hw_addr + 8264U));
  
#line 1699 
  adapter->stats.rnbc += (unsigned long long)tmp_22;
  
#line 1700 
  tmp_23 = readl((void const volatile *)(adapter->hw.hw_addr + 8272U));
  
#line 1700 
  adapter->stats.ruc += (unsigned long long)tmp_23;
  
#line 1701 
  tmp_24 = readl((void const volatile *)(adapter->hw.hw_addr + 8280U));
  
#line 1701 
  adapter->stats.roc += (unsigned long long)tmp_24;
  
#line 1702 
  tmp_25 = readl((void const volatile *)(adapter->hw.hw_addr + 8288U));
  
#line 1702 
  adapter->stats.rlec += (unsigned long long)tmp_25;
  
#line 1703 
  tmp_26 = readl((void const volatile *)(adapter->hw.hw_addr + 8296U));
  
#line 1703 
  adapter->stats.crcerrs += (unsigned long long)tmp_26;
  
#line 1704 
  tmp_27 = readl((void const volatile *)(adapter->hw.hw_addr + 8304U));
  
#line 1704 
  adapter->stats.icbc += (unsigned long long)tmp_27;
  
#line 1705 
  tmp_28 = readl((void const volatile *)(adapter->hw.hw_addr + 8312U));
  
#line 1705 
  adapter->stats.ecbc += (unsigned long long)tmp_28;
  
#line 1706 
  tmp_29 = readl((void const volatile *)(adapter->hw.hw_addr + 8320U));
  
#line 1706 
  adapter->stats.mpc += (unsigned long long)tmp_29;
  
#line 1707 
  tmp_30 = readl((void const volatile *)(adapter->hw.hw_addr + 8448U));
  
#line 1707 
  adapter->stats.tptl += (unsigned long long)tmp_30;
  
#line 1708 
  tmp_31 = readl((void const volatile *)(adapter->hw.hw_addr + 8452U));
  
#line 1708 
  adapter->stats.tpth += (unsigned long long)tmp_31;
  
#line 1709 
  tmp_32 = readl((void const volatile *)(adapter->hw.hw_addr + 8456U));
  
#line 1709 
  adapter->stats.gptcl += (unsigned long long)tmp_32;
  
#line 1710 
  tmp_33 = readl((void const volatile *)(adapter->hw.hw_addr + 8460U));
  
#line 1710 
  adapter->stats.gptch += (unsigned long long)tmp_33;
  
#line 1711 
  tmp_34 = readl((void const volatile *)(adapter->hw.hw_addr + 8464U));
  
#line 1711 
  adapter->stats.bptcl += (unsigned long long)tmp_34;
  
#line 1712 
  tmp_35 = readl((void const volatile *)(adapter->hw.hw_addr + 8468U));
  
#line 1712 
  adapter->stats.bptch += (unsigned long long)tmp_35;
  
#line 1713 
  tmp_36 = readl((void const volatile *)(adapter->hw.hw_addr + 8472U));
  
#line 1713 
  adapter->stats.mptcl += (unsigned long long)tmp_36;
  
#line 1714 
  tmp_37 = readl((void const volatile *)(adapter->hw.hw_addr + 8476U));
  
#line 1714 
  adapter->stats.mptch += (unsigned long long)tmp_37;
  
#line 1715 
  tmp_38 = readl((void const volatile *)(adapter->hw.hw_addr + 8480U));
  
#line 1715 
  adapter->stats.uptcl += (unsigned long long)tmp_38;
  
#line 1716 
  tmp_39 = readl((void const volatile *)(adapter->hw.hw_addr + 8484U));
  
#line 1716 
  adapter->stats.uptch += (unsigned long long)tmp_39;
  
#line 1717 
  tmp_40 = readl((void const volatile *)(adapter->hw.hw_addr + 8488U));
  
#line 1717 
  adapter->stats.vptcl += (unsigned long long)tmp_40;
  
#line 1718 
  tmp_41 = readl((void const volatile *)(adapter->hw.hw_addr + 8492U));
  
#line 1718 
  adapter->stats.vptch += (unsigned long long)tmp_41;
  
#line 1719 
  tmp_42 = readl((void const volatile *)(adapter->hw.hw_addr + 8496U));
  
#line 1719 
  adapter->stats.jptcl += (unsigned long long)tmp_42;
  
#line 1720 
  tmp_43 = readl((void const volatile *)(adapter->hw.hw_addr + 8500U));
  
#line 1720 
  adapter->stats.jptch += (unsigned long long)tmp_43;
  
#line 1721 
  tmp_44 = readl((void const volatile *)(adapter->hw.hw_addr + 8504U));
  
#line 1721 
  adapter->stats.gotcl += (unsigned long long)tmp_44;
  
#line 1722 
  tmp_45 = readl((void const volatile *)(adapter->hw.hw_addr + 8508U));
  
#line 1722 
  adapter->stats.gotch += (unsigned long long)tmp_45;
  
#line 1723 
  tmp_46 = readl((void const volatile *)(adapter->hw.hw_addr + 8512U));
  
#line 1723 
  adapter->stats.totl += (unsigned long long)tmp_46;
  
#line 1724 
  tmp_47 = readl((void const volatile *)(adapter->hw.hw_addr + 8516U));
  
#line 1724 
  adapter->stats.toth += (unsigned long long)tmp_47;
  
#line 1725 
  tmp_48 = readl((void const volatile *)(adapter->hw.hw_addr + 8520U));
  
#line 1725 
  adapter->stats.dc += (unsigned long long)tmp_48;
  
#line 1726 
  tmp_49 = readl((void const volatile *)(adapter->hw.hw_addr + 8528U));
  
#line 1726 
  adapter->stats.plt64c += (unsigned long long)tmp_49;
  
#line 1727 
  tmp_50 = readl((void const volatile *)(adapter->hw.hw_addr + 8560U));
  
#line 1727 
  adapter->stats.tsctc += (unsigned long long)tmp_50;
  
#line 1728 
  tmp_51 = readl((void const volatile *)(adapter->hw.hw_addr + 8568U));
  
#line 1728 
  adapter->stats.tsctfc += (unsigned long long)tmp_51;
  
#line 1729 
  tmp_52 = readl((void const volatile *)(adapter->hw.hw_addr + 8576U));
  
#line 1729 
  adapter->stats.ibic += (unsigned long long)tmp_52;
  
#line 1730 
  tmp_53 = readl((void const volatile *)(adapter->hw.hw_addr + 8584U));
  
#line 1730 
  adapter->stats.rfc += (unsigned long long)tmp_53;
  
#line 1731 
  tmp_54 = readl((void const volatile *)(adapter->hw.hw_addr + 8592U));
  
#line 1731 
  adapter->stats.lfc += (unsigned long long)tmp_54;
  
#line 1732 
  tmp_55 = readl((void const volatile *)(adapter->hw.hw_addr + 8600U));
  
#line 1732 
  adapter->stats.pfrc += (unsigned long long)tmp_55;
  
#line 1733 
  tmp_56 = readl((void const volatile *)(adapter->hw.hw_addr + 8608U));
  
#line 1733 
  adapter->stats.pftc += (unsigned long long)tmp_56;
  
#line 1734 
  tmp_57 = readl((void const volatile *)(adapter->hw.hw_addr + 8616U));
  
#line 1734 
  adapter->stats.mcfrc += (unsigned long long)tmp_57;
  
#line 1735 
  tmp_58 = readl((void const volatile *)(adapter->hw.hw_addr + 8624U));
  
#line 1735 
  adapter->stats.mcftc += (unsigned long long)tmp_58;
  
#line 1736 
  tmp_59 = readl((void const volatile *)(adapter->hw.hw_addr + 8632U));
  
#line 1736 
  adapter->stats.xonrxc += (unsigned long long)tmp_59;
  
#line 1737 
  tmp_60 = readl((void const volatile *)(adapter->hw.hw_addr + 8640U));
  
#line 1737 
  adapter->stats.xontxc += (unsigned long long)tmp_60;
  
#line 1738 
  tmp_61 = readl((void const volatile *)(adapter->hw.hw_addr + 8648U));
  
#line 1738 
  adapter->stats.xoffrxc += (unsigned long long)tmp_61;
  
#line 1739 
  tmp_62 = readl((void const volatile *)(adapter->hw.hw_addr + 8656U));
  
#line 1739 
  adapter->stats.xofftxc += (unsigned long long)tmp_62;
  
#line 1740 
  tmp_63 = readl((void const volatile *)(adapter->hw.hw_addr + 8664U));
  
#line 1740 
  adapter->stats.rjc += (unsigned long long)tmp_63;
  
#line 1744 
  netdev->stats.rx_packets = (unsigned long)adapter->stats.gprcl;
  
#line 1745 
  netdev->stats.tx_packets = (unsigned long)adapter->stats.gptcl;
  
#line 1746 
  netdev->stats.rx_bytes = (unsigned long)adapter->stats.gorcl;
  
#line 1747 
  netdev->stats.tx_bytes = (unsigned long)adapter->stats.gotcl;
  
#line 1748 
  netdev->stats.multicast = (unsigned long)adapter->stats.mprcl;
  
#line 1749 
  netdev->stats.collisions = 0UL;
  
#line 1753 
  netdev->stats.rx_errors = (unsigned long)(((((adapter->stats.crcerrs + adapter->stats.ruc) + adapter->stats.roc) + adapter->stats.icbc) + adapter->stats.ecbc) + adapter->stats.mpc);
  
#line 1764 
  netdev->stats.rx_crc_errors = (unsigned long)adapter->stats.crcerrs;
  
#line 1765 
  netdev->stats.rx_fifo_errors = (unsigned long)adapter->stats.mpc;
  
#line 1766 
  netdev->stats.rx_missed_errors = (unsigned long)adapter->stats.mpc;
  
#line 1767 
  netdev->stats.rx_over_errors = (unsigned long)adapter->stats.mpc;
  
#line 1769 
  netdev->stats.tx_errors = 0UL;
  
#line 1770 
  netdev->stats.rx_frame_errors = 0UL;
  
#line 1771 
  netdev->stats.tx_aborted_errors = 0UL;
  
#line 1772 
  netdev->stats.tx_carrier_errors = 0UL;
  
#line 1773 
  netdev->stats.tx_fifo_errors = 0UL;
  
#line 1774 
  netdev->stats.tx_heartbeat_errors = 0UL;
  
#line 1775 
  netdev->stats.tx_window_errors = 0UL;
  return_label: 
#line 1776 
                return;
}


#line 1786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static irqreturn_t ixgb_intr(int irq, void *data)
{
  irqreturn_t __retres;
  bool tmp_2;
  
#line 1788 
  struct net_device *netdev = (struct net_device *)data;
  
#line 1789 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1790 
  struct ixgb_hw *hw = & adapter->hw;
  
#line 1791 
  u32 icr = readl((void const volatile *)(hw->hw_addr + 128U));
  
#line 1793 
  if ((long)(icr == 0U) != 0L) {
    
#line 1794 
    __retres = IRQ_NONE;
    
#line 1794 
    goto return_label;
  }
  else ;
  
#line 1796 
  if ((long)((icr & 12U) != 0U) != 0L) {
    int tmp_1;
    
#line 1797 
    tmp_1 = constant_test_bit(0L,(unsigned long const volatile *)(& adapter->flags));
    
#line 1797 
    if (tmp_1 == 0) 
#line 1798 
                    ldv_mod_timer_91(& adapter->watchdog_timer,jiffies); else ;
  }
  else ;
  
#line 1800 
  tmp_2 = napi_schedule_prep(& adapter->napi);
  
#line 1800 
  if ((int)tmp_2 != 0) {
    
#line 1806 
    writel(4294967295U,(void volatile *)(adapter->hw.hw_addr + 152U));
    
#line 1807 
    __napi_schedule(& adapter->napi);
  }
  else ;
  
#line 1809 
  __retres = IRQ_HANDLED;
  return_label: 
#line 1809 
                return __retres;
}


#line 1818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_clean(struct napi_struct *napi, int budget)
{
  struct ixgb_adapter *tmp;
  {
    
#line 1820 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1820 
    tmp = (struct ixgb_adapter *)__mptr + 18446744073709550688U;
  }
  
#line 1820 
  struct ixgb_adapter *adapter = tmp;
  
#line 1821 
  int work_done = 0;
  
#line 1823 
  ixgb_clean_tx_irq(adapter);
  
#line 1824 
  ixgb_clean_rx_irq(adapter,& work_done,budget);
  
#line 1827 
  if (work_done < budget) {
    int tmp_0;
    
#line 1828 
    napi_complete(napi);
    
#line 1829 
    tmp_0 = constant_test_bit(0L,(unsigned long const volatile *)(& adapter->flags));
    
#line 1829 
    if (tmp_0 == 0) 
#line 1830 
                    ixgb_irq_enable(adapter); else ;
  }
  else ;
  
#line 1833 
  return work_done;
}


#line 1842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static bool ixgb_clean_tx_irq(struct ixgb_adapter *adapter)
{
  struct ixgb_tx_desc *tx_desc;
  struct ixgb_tx_desc *eop_desc;
  struct ixgb_buffer *buffer_info;
  unsigned int i;
  unsigned int eop;
  int tmp_2;
  
#line 1844 
  struct ixgb_desc_ring *tx_ring = & adapter->tx_ring;
  
#line 1845 
  struct net_device *netdev = adapter->netdev;
  
#line 1849 
  bool cleaned = (_Bool)0;
  
#line 1851 
  i = tx_ring->next_to_clean;
  
#line 1852 
  eop = (unsigned int)(tx_ring->buffer_info + i)->next_to_watch;
  
#line 1853 
  eop_desc = (struct ixgb_tx_desc *)tx_ring->desc + eop;
  
#line 1855 
  goto ldv_54324;
  ldv_54323: 
#line 1856 
  ;
  
#line 1857 
  ldv_inline_asm();
  
#line 1858 
  cleaned = (_Bool)0;
  
#line 1858 
  goto ldv_54321;
  ldv_54320: 
#line 1859 
  ;
  
#line 1859 
  tx_desc = (struct ixgb_tx_desc *)tx_ring->desc + i;
  
#line 1860 
  buffer_info = tx_ring->buffer_info + i;
  
#line 1862 
  if (((int)tx_desc->popts & 3) != 0) 
#line 1865 
                                      adapter->hw_csum_tx_good += 1ULL; else ;
  
#line 1867 
  ixgb_unmap_and_free_tx_resource(adapter,buffer_info);
  
#line 1869 
  *((u32 *)(& tx_desc->status)) = 0U;
  
#line 1871 
  cleaned = (_Bool)(i == eop);
  
#line 1872 
  i += 1U;
  
#line 1872 
  ;
  
#line 1872 
  if (i == tx_ring->count) 
#line 1872 
                           i = 0U; else ;
  ldv_54321: 
#line 1873 
  ;
  
#line 1858 
  if (! cleaned) 
#line 1860 
                 goto ldv_54320; else 
#line 1863 
                                      goto ldv_54322;
  ldv_54322: 
#line 1864 
  ;
  
#line 1875 
  eop = (unsigned int)(tx_ring->buffer_info + i)->next_to_watch;
  
#line 1876 
  eop_desc = (struct ixgb_tx_desc *)tx_ring->desc + eop;
  ldv_54324: 
#line 1877 
  ;
  
#line 1855 
  if (((int)eop_desc->status & 1) != 0) 
#line 1857 
                                        goto ldv_54323; else 
#line 1860 
                                                             goto ldv_54325;
  ldv_54325: 
#line 1861 
  ;
  
#line 1879 
  tx_ring->next_to_clean = i;
  
#line 1881 
  if ((long)((int)cleaned != 0) != 0L) {
    bool tmp_1;
    
#line 1881 
    tmp_1 = netif_carrier_ok((struct net_device const *)netdev);
    
#line 1881 
    if ((long)((int)tmp_1 != 0) != 0L) 
#line 1881 
                                       tmp_2 = 1; else 
#line 1881 
                                                       tmp_2 = 0;
  }
  else 
#line 1881 
       tmp_2 = 0;
  
#line 1881 
  if (tmp_2 != 0) {
    unsigned int tmp_3;
    
#line 1881 
    if (tx_ring->next_to_clean <= tx_ring->next_to_use) 
#line 1881 
                                                        tmp_3 = tx_ring->count; else 
                                                                    
#line 1881 
                                                                    tmp_3 = 0U;
    
#line 1881 
    ;
    
#line 1881 
    if ((long)(((tmp_3 + tx_ring->next_to_clean) - tx_ring->next_to_use) + 4294967295U > 19U) != 0L) {
      bool tmp;
      
#line 1883 
      ldv_inline_asm();
      
#line 1887 
      tmp = netif_queue_stopped((struct net_device const *)netdev);
      
#line 1887 
      if ((int)tmp != 0) {
        int tmp_0;
        
#line 1887 
        tmp_0 = constant_test_bit(0L,(unsigned long const volatile *)(& adapter->flags));
        
#line 1887 
        if (tmp_0 == 0) {
          
#line 1889 
          netif_wake_queue(netdev);
          
#line 1890 
          adapter->restart_queue += 1U;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1894 
  if ((int)adapter->detect_tx_hung != 0) {
    
#line 1897 
    adapter->detect_tx_hung = (_Bool)0;
    
#line 1898 
    if ((tx_ring->buffer_info + eop)->time_stamp != 0UL) {
      int tmp_6;
      {
        unsigned long __dummy;
        unsigned long volatile __dummy2;
        
#line 1899 
        tmp_6 = 1;
      }
      
#line 1898 
      if (tmp_6 != 0) {
        int tmp_7;
        {
          unsigned long __dummy_0;
          unsigned long __dummy2_0;
          
#line 1899 
          tmp_7 = 1;
        }
        
#line 1899 
        if (tmp_7 != 0) {
          
#line 1899 
          if ((long)(((tx_ring->buffer_info + eop)->time_stamp - jiffies) + 250UL) < 0L) {
            unsigned int tmp_8;
            
#line 1900 
            tmp_8 = readl((void const volatile *)(adapter->hw.hw_addr + 16U));
            
#line 1900 
            if ((tmp_8 & 16U) == 0U) {
              
#line 1903 
              if (((int)adapter->msg_enable & 1) != 0) {
                unsigned int tmp_4;
                unsigned int tmp_5;
                
#line 1903 
                ;
                
#line 1903 
                ;
                
#line 1903 
                ;
                
#line 1903 
                ;
                
#line 1903 
                ;
                
#line 1903 
                ;
                
#line 1903 
                tmp_4 = readl((void const volatile *)(adapter->hw.hw_addr + 1568U));
                
#line 1903 
                tmp_5 = readl((void const volatile *)(adapter->hw.hw_addr + 1560U));
                
#line 1903 
                ;
                
#line 1903 
                netdev_err((struct net_device const *)adapter->netdev,"Detected Tx Unit Hang\n",tmp_5,tmp_4,tx_ring->next_to_use,tx_ring->next_to_clean,(tx_ring->buffer_info + eop)->time_stamp,eop,jiffies,(int)eop_desc->status);
              }
              else ;
              
#line 1922 
              netif_start_queue(netdev);
            }
            else ;
          }
          else ;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1926 
  return cleaned;
}


#line 1937  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_rx_checksum(struct ixgb_adapter *adapter, struct ixgb_rx_desc *rx_desc, struct sk_buff *skb)
{
  
#line 1944 
  if (((int)rx_desc->status & 4) != 0 || ((int)rx_desc->status & 32) == 0) {
    
#line 1946 
    skb_checksum_none_assert((struct sk_buff const *)skb);
    
#line 1947 
    goto return_label;
  }
  else ;
  
#line 1952 
  if (((int)rx_desc->errors & 32) != 0) {
    
#line 1954 
    skb_checksum_none_assert((struct sk_buff const *)skb);
    
#line 1955 
    adapter->hw_csum_rx_error += 1ULL;
  }
  else {
    
#line 1958 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
    
#line 1959 
    adapter->hw_csum_rx_good += 1ULL;
  }
  return_label: 
#line 1961 
                return;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_check_copybreak(struct napi_struct *napi, struct ixgb_buffer *buffer_info, u32 length, struct sk_buff **skb)
{
  struct sk_buff *new_skb;
  
#line 1973 
  if (length > copybreak) 
#line 1974 
                          goto return_label; else ;
  
#line 1976 
  new_skb = napi_alloc_skb(napi,length);
  
#line 1977 
  if (new_skb == (struct sk_buff *)0) 
#line 1978 
                                      goto return_label; else ;
  
#line 1980 
  skb_copy_to_linear_data_offset(new_skb,0,(void const *)(*skb)->data,length);
  
#line 1984 
  buffer_info->skb = *skb;
  
#line 1985 
  *skb = new_skb;
  return_label: 
#line 1986 
                return;
}


#line 1994  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static bool ixgb_clean_rx_irq(struct ixgb_adapter *adapter, int *work_done, int work_to_do)
{
  struct ixgb_rx_desc *rx_desc;
  struct ixgb_rx_desc *next_rxd;
  struct ixgb_buffer *buffer_info;
  struct ixgb_buffer *next_buffer;
  struct ixgb_buffer *next2_buffer;
  u32 length;
  unsigned int i;
  unsigned int j;
  unsigned int tmp;
  
#line 1996 
  struct ixgb_desc_ring *rx_ring = & adapter->rx_ring;
  
#line 1997 
  struct net_device *netdev = adapter->netdev;
  
#line 1998 
  struct pci_dev *pdev = adapter->pdev;
  
#line 2003 
  int cleaned_count = 0;
  
#line 2004 
  bool cleaned = (_Bool)0;
  
#line 2006 
  i = rx_ring->next_to_clean;
  
#line 2007 
  rx_desc = (struct ixgb_rx_desc *)rx_ring->desc + i;
  
#line 2008 
  buffer_info = rx_ring->buffer_info + i;
  
#line 2010 
  goto ldv_54369;
  ldv_54368: 
#line 2011 
  ;
  {
    struct sk_buff *skb;
    u8 status;
    
#line 2014 
    if (*work_done >= work_to_do) 
#line 2015 
                                  goto ldv_54364; else ;
    
#line 2017 
    *work_done += 1;
    
#line 2018 
    ldv_inline_asm();
    
#line 2019 
    status = rx_desc->status;
    
#line 2020 
    skb = buffer_info->skb;
    
#line 2021 
    buffer_info->skb = (struct sk_buff *)0;
    
#line 2023 
    __builtin_prefetch((void const *)skb->data);
    
#line 2025 
    i += 1U;
    
#line 2025 
    ;
    
#line 2025 
    if (i == rx_ring->count) 
#line 2026 
                             i = 0U; else ;
    
#line 2027 
    next_rxd = (struct ixgb_rx_desc *)rx_ring->desc + i;
    
#line 2028 
    __builtin_prefetch((void const *)next_rxd);
    
#line 2030 
    j = i + 1U;
    
#line 2031 
    if (rx_ring->count == j) 
#line 2032 
                             j = 0U; else ;
    
#line 2033 
    next2_buffer = rx_ring->buffer_info + j;
    
#line 2034 
    __builtin_prefetch((void const *)next2_buffer);
    
#line 2036 
    next_buffer = rx_ring->buffer_info + i;
    
#line 2038 
    cleaned = (_Bool)1;
    
#line 2039 
    cleaned_count += 1;
    
#line 2041 
    dma_unmap_single_attrs(& pdev->dev,buffer_info->dma,(unsigned long)buffer_info->length,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 2045 
    buffer_info->dma = 0ULL;
    
#line 2047 
    length = (unsigned int)rx_desc->length;
    
#line 2048 
    rx_desc->length = (unsigned short)0U;
    
#line 2050 
    if ((long)(((int)status & 2) == 0) != 0L) {
      {
        
#line 2054 
        struct _ddebug descriptor = {.modname = "ixgb", .function = "ixgb_clean_rx_irq", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c", .format = "Receive packet consumed multiple buffers length<%x>\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2055U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 2054 
        if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2054 
                                                            __dynamic_pr_debug(& descriptor,"ixgb",length); else ;
      }
      
#line 2057 
      dev_kfree_skb_irq(skb);
      
#line 2058 
      goto rxdesc_done;
    }
    else ;
    
#line 2061 
    if ((long)(((int)rx_desc->errors & 139) != 0) != 0L) {
      
#line 2064 
      dev_kfree_skb_irq(skb);
      
#line 2065 
      goto rxdesc_done;
    }
    else ;
    
#line 2068 
    ixgb_check_copybreak(& adapter->napi,buffer_info,length,& skb);
    
#line 2071 
    skb_put(skb,length);
    
#line 2074 
    ixgb_rx_checksum(adapter,rx_desc,skb);
    
#line 2076 
    skb->protocol = eth_type_trans(skb,netdev);
    
#line 2077 
    if (((int)status & 8) != 0) 
#line 2078 
                                __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)rx_desc->special)); else ;
    
#line 2081 
    netif_receive_skb(skb);
    rxdesc_done: 
#line 2083 
    ;
    
#line 2085 
    rx_desc->status = (unsigned char)0U;
    
#line 2088 
    if ((long)(cleaned_count > 7) != 0L) {
      
#line 2089 
      ixgb_alloc_rx_buffers(adapter,cleaned_count);
      
#line 2090 
      cleaned_count = 0;
    }
    else ;
    
#line 2094 
    rx_desc = next_rxd;
    
#line 2095 
    buffer_info = next_buffer;
  }
  ldv_54369: 
#line 2097 
  ;
  
#line 2010 
  if (((int)rx_desc->status & 1) != 0) 
#line 2012 
                                       goto ldv_54368; else 
#line 2015 
                                                            goto ldv_54364;
  ldv_54364: 
#line 2016 
  ;
  
#line 2098 
  rx_ring->next_to_clean = i;
  
#line 2100 
  if (rx_ring->next_to_clean <= rx_ring->next_to_use) 
#line 2100 
                                                      tmp = rx_ring->count; else 
                                                                    
#line 2100 
                                                                    tmp = 0U;
  
#line 2100 
  cleaned_count = (int)(((tmp + rx_ring->next_to_clean) - rx_ring->next_to_use) + 4294967295U);
  
#line 2101 
  if (cleaned_count != 0) 
#line 2102 
                          ixgb_alloc_rx_buffers(adapter,cleaned_count); else ;
  
#line 2104 
  return cleaned;
}


#line 2113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_alloc_rx_buffers(struct ixgb_adapter *adapter, int cleaned_count)
{
  struct ixgb_rx_desc *rx_desc;
  struct ixgb_buffer *buffer_info;
  struct sk_buff *skb;
  unsigned int i;
  long cleancount;
  unsigned int tmp;
  int tmp_0;
  
#line 2115 
  struct ixgb_desc_ring *rx_ring = & adapter->rx_ring;
  
#line 2116 
  struct net_device *netdev = adapter->netdev;
  
#line 2117 
  struct pci_dev *pdev = adapter->pdev;
  
#line 2124 
  i = rx_ring->next_to_use;
  
#line 2125 
  buffer_info = rx_ring->buffer_info + i;
  
#line 2126 
  if (rx_ring->next_to_clean <= rx_ring->next_to_use) 
#line 2126 
                                                      tmp = rx_ring->count; else 
                                                                    
#line 2126 
                                                                    tmp = 0U;
  
#line 2126 
  cleancount = (long)(((tmp + rx_ring->next_to_clean) - rx_ring->next_to_use) + 4294967295U);
  
#line 2130 
  goto ldv_54385;
  ldv_54384: 
#line 2131 
  ;
  
#line 2132 
  skb = buffer_info->skb;
  
#line 2133 
  if (skb != (struct sk_buff *)0) {
    
#line 2134 
    skb_trim(skb,0U);
    
#line 2135 
    goto map_skb;
  }
  else ;
  
#line 2138 
  skb = netdev_alloc_skb_ip_align(netdev,adapter->rx_buffer_len);
  
#line 2139 
  if ((long)(skb == (struct sk_buff *)0) != 0L) {
    
#line 2141 
    adapter->alloc_rx_buff_failed += 1U;
    
#line 2142 
    goto ldv_54383;
  }
  else ;
  
#line 2145 
  buffer_info->skb = skb;
  
#line 2146 
  buffer_info->length = (unsigned short)adapter->rx_buffer_len;
  map_skb: 
#line 2147 
  ;
  
#line 2148 
  buffer_info->dma = dma_map_single_attrs(& pdev->dev,(void *)skb->data,(unsigned long)adapter->rx_buffer_len,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 2152 
  tmp_0 = dma_mapping_error(& pdev->dev,buffer_info->dma);
  
#line 2152 
  if (tmp_0 != 0) {
    
#line 2153 
    adapter->alloc_rx_buff_failed += 1U;
    
#line 2154 
    goto ldv_54383;
  }
  else ;
  
#line 2157 
  rx_desc = (struct ixgb_rx_desc *)rx_ring->desc + i;
  
#line 2158 
  rx_desc->buff_addr = buffer_info->dma;
  
#line 2162 
  rx_desc->status = (unsigned char)0U;
  
#line 2165 
  i += 1U;
  
#line 2165 
  ;
  
#line 2165 
  if (i == rx_ring->count) 
#line 2166 
                           i = 0U; else ;
  
#line 2167 
  buffer_info = rx_ring->buffer_info + i;
  ldv_54385: 
#line 2168 
  ;
  
#line 2130 
  cleancount -= 1L;
  
#line 2130 
  if (cleancount > 2L) {
    int tmp_1;
    
#line 2130 
    tmp_1 = cleaned_count;
    
#line 2130 
    cleaned_count -= 1;
    
#line 2130 
    ;
    
#line 2130 
    if (tmp_1 != 0) 
#line 2132 
                    goto ldv_54384; else 
#line 2135 
                                         goto ldv_54383;
  }
  else 
#line 2135 
       goto ldv_54383;
  ldv_54383: 
#line 2136 
  ;
  
#line 2170 
  if ((long)(rx_ring->next_to_use != i) != 0L) {
    unsigned int tmp_2;
    
#line 2171 
    rx_ring->next_to_use = i;
    
#line 2172 
    tmp_2 = i;
    
#line 2172 
    i -= 1U;
    
#line 2172 
    ;
    
#line 2172 
    if ((long)(tmp_2 == 0U) != 0L) 
#line 2173 
                                   i = rx_ring->count + 4294967295U; else ;
    
#line 2174 
    ldv_inline_asm();
    
#line 2180 
    writel(i,(void volatile *)(adapter->hw.hw_addr + 304U));
  }
  else ;
  
#line 2182 
  return;
}


#line 2185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_vlan_strip_enable(struct ixgb_adapter *adapter)
{
  u32 ctrl;
  
#line 2190 
  ctrl = readl((void const volatile *)adapter->hw.hw_addr);
  
#line 2191 
  ctrl |= 1073741824U;
  
#line 2192 
  writel(ctrl,(void volatile *)adapter->hw.hw_addr);
  
#line 2193 
  return;
}


#line 2196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_vlan_strip_disable(struct ixgb_adapter *adapter)
{
  u32 ctrl;
  
#line 2201 
  ctrl = readl((void const volatile *)adapter->hw.hw_addr);
  
#line 2202 
  ctrl &= 3221225471U;
  
#line 2203 
  writel(ctrl,(void volatile *)adapter->hw.hw_addr);
  
#line 2204 
  return;
}


#line 2207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  u32 vfta;
  u32 index;
  
#line 2209 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2214 
  index = (unsigned int)((int)vid >> 5) & 127U;
  
#line 2215 
  vfta = readl((void const volatile *)(adapter->hw.hw_addr + ((index << 2) + 1024U)));
  
#line 2216 
  vfta = (unsigned int)(1 << ((int)vid & 31)) | vfta;
  
#line 2217 
  ixgb_write_vfta(& adapter->hw,index,vfta);
  
#line 2218 
  set_bit((long)vid,(unsigned long volatile *)(& adapter->active_vlans));
  
#line 2220 
  __retres = 0;
  
#line 2220 
  return __retres;
}


#line 2224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static int ixgb_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  u32 vfta;
  u32 index;
  
#line 2226 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2231 
  index = (unsigned int)((int)vid >> 5) & 127U;
  
#line 2232 
  vfta = readl((void const volatile *)(adapter->hw.hw_addr + ((index << 2) + 1024U)));
  
#line 2233 
  vfta = (unsigned int)(~ (1 << ((int)vid & 31))) & vfta;
  
#line 2234 
  ixgb_write_vfta(& adapter->hw,index,vfta);
  
#line 2235 
  set_bit((long)vid,(unsigned long volatile *)(& adapter->active_vlans));
  
#line 2237 
  __retres = 0;
  
#line 2237 
  return __retres;
}


#line 2241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_restore_vlan(struct ixgb_adapter *adapter)
{
  u16 vid;
  unsigned long tmp;
  unsigned long tmp_0;
  
#line 2245 
  tmp = find_first_bit((unsigned long const *)(& adapter->active_vlans),4096UL);
  
#line 2245 
  vid = (unsigned short)tmp;
  
#line 2245 
  goto ldv_54415;
  ldv_54414: 
#line 2246 
  ;
  
#line 2246 
  ixgb_vlan_rx_add_vid(adapter->netdev,(unsigned short)129,(unsigned short)((int)vid));
  
#line 2245 
  tmp_0 = find_next_bit((unsigned long const *)(& adapter->active_vlans),4096UL,(unsigned long)((int)vid + 1));
  
#line 2245 
  vid = (unsigned short)tmp_0;
  ldv_54415: 
#line 2246 
  ;
  
#line 2245 
  if ((unsigned int)vid <= 4095U) 
#line 2247 
                                  goto ldv_54414; else 
#line 2250 
                                                       goto ldv_54416;
  ldv_54416: 
#line 2251 
  ;
  
#line 2252 
  return;
}


#line 2256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_netpoll(struct net_device *dev)
{
  
#line 2258 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 2260 
  disable_irq((adapter->pdev)->irq);
  
#line 2261 
  ixgb_intr((int)(adapter->pdev)->irq,(void *)dev);
  
#line 2262 
  enable_irq((adapter->pdev)->irq);
  
#line 2263 
  return;
}


#line 2274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static pci_ers_result_t ixgb_io_error_detected(struct pci_dev *pdev, enum pci_channel_state state)
{
  pci_ers_result_t __retres;
  bool tmp_1;
  
#line 2277 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2278 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2280 
  netif_device_detach(netdev);
  
#line 2282 
  if (state == (unsigned int)pci_channel_io_perm_failure) {
    
#line 2283 
    __retres = 4U;
    
#line 2283 
    goto return_label;
  }
  else ;
  
#line 2285 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 2285 
  if ((int)tmp_1 != 0) 
#line 2286 
                       ixgb_down(adapter,(_Bool)1); else ;
  
#line 2288 
  pci_disable_device(pdev);
  
#line 2291 
  __retres = 3U;
  return_label: 
#line 2291 
                return __retres;
}


#line 2303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static pci_ers_result_t ixgb_io_slot_reset(struct pci_dev *pdev)
{
  pci_ers_result_t __retres;
  int tmp_1;
  int tmp_3;
  bool tmp_2;
  int tmp_5;
  bool tmp_4;
  
#line 2305 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2306 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2308 
  tmp_1 = pci_enable_device(pdev);
  
#line 2308 
  if (tmp_1 != 0) {
    
#line 2309 
    if (((int)adapter->msg_enable & 2) != 0) 
#line 2309 
                                             netdev_err((struct net_device const *)adapter->netdev,"Cannot re-enable PCI device after reset\n"); else ;
    
#line 2311 
    __retres = 4U;
    
#line 2311 
    goto return_label;
  }
  else ;
  
#line 2315 
  if ((pdev->devfn & 7U) != 0U) {
    
#line 2316 
    __retres = 5U;
    
#line 2316 
    goto return_label;
  }
  else ;
  
#line 2318 
  pci_set_master(pdev);
  
#line 2320 
  netif_carrier_off(netdev);
  
#line 2321 
  netif_start_queue(netdev);
  
#line 2322 
  ixgb_reset(adapter);
  
#line 2325 
  tmp_2 = ixgb_validate_eeprom_checksum(& adapter->hw);
  
#line 2325 
  if (tmp_2) 
#line 2325 
             tmp_3 = 0; else 
#line 2325 
                             tmp_3 = 1;
  
#line 2325 
  if (tmp_3) {
    
#line 2326 
    if (((int)adapter->msg_enable & 2) != 0) 
#line 2326 
                                             netdev_err((struct net_device const *)adapter->netdev,"After reset, the EEPROM checksum is not valid\n"); else ;
    
#line 2328 
    __retres = 4U;
    
#line 2328 
    goto return_label;
  }
  else ;
  
#line 2330 
  ixgb_get_ee_mac_addr(& adapter->hw,netdev->dev_addr);
  
#line 2331 
  memcpy((void *)(& netdev->perm_addr),(void const *)netdev->dev_addr,(unsigned long)netdev->addr_len);
  
#line 2333 
  tmp_4 = is_valid_ether_addr((u8 const *)(& netdev->perm_addr));
  
#line 2333 
  if (tmp_4) 
#line 2333 
             tmp_5 = 0; else 
#line 2333 
                             tmp_5 = 1;
  
#line 2333 
  if (tmp_5) {
    
#line 2334 
    if (((int)adapter->msg_enable & 2) != 0) 
#line 2334 
                                             netdev_err((struct net_device const *)adapter->netdev,"After reset, invalid MAC address\n"); else ;
    
#line 2336 
    __retres = 4U;
    
#line 2336 
    goto return_label;
  }
  else ;
  
#line 2339 
  __retres = 5U;
  return_label: 
#line 2339 
                return __retres;
}


#line 2350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgb/ixgb_main.c"
static void ixgb_io_resume(struct pci_dev *pdev)
{
  bool tmp_2;
  
#line 2352 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2353 
  struct ixgb_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2355 
  pci_set_master(pdev);
  
#line 2357 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 2357 
  if ((int)tmp_2 != 0) {
    int tmp_1;
    
#line 2358 
    tmp_1 = ixgb_up(adapter);
    
#line 2358 
    if (tmp_1 != 0) {
      
#line 2359 
      printk("\001");
      
#line 2360 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2364 
  netif_device_attach(netdev);
  
#line 2365 
  ldv_mod_timer_92(& adapter->watchdog_timer,jiffies);
  return_label: 
#line 2366 
                return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int (*ldv_emg_alias_eth_validate_addr_23)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
struct pci_driver *ldv_emg_alias_ixgb_driver_2 = & ixgb_driver;

#line 60 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 61 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 62 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 63 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 64 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 65 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 66 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 67 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 68 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 69 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 70 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int ldv_emg_wrapper_ixgb_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 75 
  tmp = ixgb_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 75 
  return tmp;
}


#line 79  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
void ldv_emg_wrapper_ixgb_netpoll_31(struct net_device *arg0)
{
  
#line 80 
  ixgb_netpoll(arg0);
  
#line 81 
  return;
}


#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
void ldv_emg_wrapper_ixgb_set_multi_7(struct net_device *arg0)
{
  
#line 85 
  ixgb_set_multi(arg0);
  
#line 86 
  return;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
enum irqreturn ldv_emg_wrapper_ixgb_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 90 
  tmp = ixgb_intr(arg0,arg1);
  
#line 90 
  return tmp;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int ldv_emg_wrapper_ixgb_vlan_rx_add_vid_22(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 95 
  tmp = ixgb_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 95 
  return tmp;
}


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int ldv_emg_wrapper_ixgb_change_mtu_10(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 100 
  tmp = ixgb_change_mtu(arg0,arg1);
  
#line 100 
  return tmp;
}


#line 104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
void ldv_emg_ixgb_exit_module(void)
{
  
#line 105 
  ixgb_exit_module();
  
#line 106 
  return;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int ldv_emg_wrapper_ixgb_vlan_rx_kill_vid_30(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 109 
  tmp = ixgb_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
struct net_device_stats *ldv_emg_wrapper_ixgb_get_stats_26(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 114 
  tmp = ixgb_get_stats(arg0);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
enum netdev_tx ldv_emg_wrapper_ixgb_xmit_frame_18(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 119 
  tmp = ixgb_xmit_frame(arg0,arg1);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int ldv_emg_ixgb_init_module(void)
{
  int tmp;
  
#line 124 
  tmp = ixgb_init_module();
  
#line 124 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
void ldv_emg_wrapper_ixgb_tx_timeout_21(struct net_device *arg0)
{
  
#line 128 
  ixgb_tx_timeout(arg0);
  
#line 129 
  return;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int ldv_emg_wrapper_ixgb_set_mac_19(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 133 
  tmp = ixgb_set_mac(arg0,arg1);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int ldv_emg_wrapper_ixgb_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 138 
  tmp = ixgb_close(arg0);
  
#line 138 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int ldv_emg_wrapper_ixgb_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 143 
  tmp = ixgb_open(arg0);
  
#line 143 
  return tmp;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
int ldv_emg_wrapper_ixgb_set_features_12(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 148 
  tmp = ixgb_set_features(arg0,arg1);
  
#line 148 
  return tmp;
}


#line 152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
void ldv_emg_wrapper_ixgb_remove_3(struct pci_dev *arg0)
{
  
#line 153 
  ixgb_remove(arg0);
  
#line 154 
  return;
}


#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
unsigned long long ldv_emg_wrapper_ixgb_fix_features_14(struct net_device *arg0, unsigned long long arg1)
{
  unsigned long long tmp;
  
#line 158 
  tmp = ixgb_fix_features(arg0,arg1);
  
#line 158 
  return tmp;
}


#line 576  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static void *kmalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 579 
  tmp = ldv_kmalloc(size,flags);
  
#line 579 
  return tmp;
}


#line 883  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static int ldv___pci_register_driver_77(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 887 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 887 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static void ldv_pci_unregister_driver_78(struct pci_driver *ldv_func_arg1)
{
  
#line 895 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 896 
  return;
}


#line 899  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static int ldv_request_irq_79(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 903 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 903 
  return tmp;
}


#line 907  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static int ldv_mod_timer_80(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 911 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 911 
  return tmp;
}


#line 915  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static void ldv_free_irq_81(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 919 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 920 
  return;
}


#line 923  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static int ldv_del_timer_sync_82(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 927 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 927 
  return tmp;
}


#line 931  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_83(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 935 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 935 
  return tmp;
}


#line 939  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static int ldv_register_netdev_84(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 943 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 943 
  return tmp;
}


#line 947  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static void ldv_free_netdev_85(struct net_device *ldv_func_arg1)
{
  
#line 951 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 952 
  return;
}


#line 955  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static void ldv_unregister_netdev_86(struct net_device *ldv_func_arg1)
{
  
#line 959 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 960 
  return;
}


#line 963  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static void ldv_free_netdev_87(struct net_device *ldv_func_arg1)
{
  
#line 967 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 968 
  return;
}


#line 971  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static bool ldv_schedule_work_88(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 975 
  tmp = ldv_emg_schedule_work(work);
  
#line 975 
  __retres = tmp != 0;
  
#line 975 
  return __retres;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static int ldv_mod_timer_89(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 983 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 983 
  return tmp;
}


#line 987  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static bool ldv_schedule_work_90(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 991 
  tmp = ldv_emg_schedule_work(work);
  
#line 991 
  __retres = tmp != 0;
  
#line 991 
  return __retres;
}


#line 995  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static int ldv_mod_timer_91(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 999 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 999 
  return tmp;
}


#line 1003  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/weaver/.tmp_ixgb_main.c.aux"
static int ldv_mod_timer_92(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1007 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1007 
  return tmp;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 89 
int main(void);


#line 90 
void *ldv_timer_scenario_15(void *arg0);


#line 91 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 92 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 94 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 97 
void *ldv_initialization_1(void *arg0);


#line 98 
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0);


#line 99 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 100 
void *ldv_pci_scenario_13(void *arg0);


#line 105 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 106 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 108 
void *ldv_random_allocationless_scenario_16(void *arg0);


#line 109 
void *ldv_interrupt_scenario_14(void *arg0);


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_16 *cf_arg_16;
  int tmp;
  
#line 123 
  tmp = ldv_undef_int();
  
#line 123 
  switch (tmp) {
    case 0: 
#line 124 
    ;
    
#line 125 
    cf_arg_16 = (struct ldv_struct_random_allocationless_scenario_16 *)ldv_xmalloc(16UL);
    
#line 126 
    cf_arg_16->arg0 = arg0;
    
#line 127 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_16,(void *)cf_arg_16);
    
#line 128 
    __VERIFIER_assume(ret == 0);
    
#line 129 
    goto ldv_44741;
    default: 
#line 131 
    ;
    
#line 131 
    __VERIFIER_assume(0);
  }
  ldv_44741: 
#line 132 
  ;
  
#line 133 
  return;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_9_timer_list;
  
#line 143 
  ldv_9_timer_list = arg0;
  
#line 147 
  ldv_dispatch_instance_deregister_9_1(ldv_9_timer_list);
  
#line 148 
  ;
  
#line 148 
  __retres = 0;
  
#line 148 
  return __retres;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 159 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_ixgb_driver_2;
  
#line 163 
  tmp_0 = ldv_undef_int();
  
#line 163 
  if (tmp_0 != 0) {
    
#line 165 
    ldv_7_pci_driver = arg0;
    
#line 169 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 173 
    __retres = 0;
    
#line 173 
    goto return_label;
  }
  else {
    int tmp;
    
#line 180 
    tmp = ldv_undef_int_negative();
    
#line 180 
    __retres = tmp;
    
#line 180 
    goto return_label;
  }
  return_label: 
#line 163 
                return __retres;
}


#line 190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 193 
  ldv_initialize();
  
#line 196 
  ldv_initialization_1((void *)0);
  
#line 198 
  __retres = 0;
  
#line 198 
  return __retres;
}


#line 203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_15(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_15_container;
  
#line 208 
  struct ldv_struct_timer_scenario_15 *data = (struct ldv_struct_timer_scenario_15 *)arg0;
  
#line 213 
  if (data != (struct ldv_struct_timer_scenario_15 *)0) {
    
#line 214 
    ldv_15_container = data->arg0;
    
#line 215 
    ldv_free((void *)data);
  }
  else ;
  
#line 220 
  if (ldv_15_container->function != (void (*)(unsigned long ))0) {
    
#line 222 
    ldv_switch_to_interrupt_context();
    
#line 224 
    (*(ldv_15_container->function))(ldv_15_container->data);
    
#line 226 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 235 
  __retres = (void *)0;
  
#line 235 
  goto return_label;
  
#line 237 
  __retres = (void *)0;
  return_label: 
#line 237 
                return __retres;
}


#line 242  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_14;
  int tmp;
  
#line 245 
  tmp = ldv_undef_int();
  
#line 245 
  switch (tmp) {
    case 0: 
#line 246 
    ;
    
#line 247 
    cf_arg_14 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 248 
    cf_arg_14->arg0 = arg0;
    
#line 249 
    cf_arg_14->arg1 = arg1;
    
#line 250 
    cf_arg_14->arg2 = arg2;
    
#line 251 
    cf_arg_14->arg3 = arg3;
    
#line 252 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_interrupt_scenario_14,(void *)cf_arg_14);
    
#line 253 
    __VERIFIER_assume(ret == 0);
    
#line 254 
    goto ldv_44774;
    default: 
#line 256 
    ;
    
#line 256 
    __VERIFIER_assume(0);
  }
  ldv_44774: 
#line 257 
  ;
  
#line 258 
  return;
}


#line 262  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_14;
  int tmp;
  
#line 265 
  tmp = ldv_undef_int();
  
#line 265 
  switch (tmp) {
    case 0: 
#line 266 
    ;
    
#line 267 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 268 
    __VERIFIER_assume(ret == 0);
    
#line 269 
    goto ldv_44782;
    default: 
#line 271 
    ;
    
#line 271 
    __VERIFIER_assume(0);
  }
  ldv_44782: 
#line 272 
  ;
  
#line 273 
  return;
}


#line 277  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 284 
  tmp_0 = ldv_undef_int();
  
#line 284 
  if (tmp_0 != 0) {
    
#line 286 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 290 
    __retres = ldv_5_netdev;
    
#line 290 
    goto return_label;
  }
  else {
    
#line 297 
    __retres = (struct net_device *)0;
    
#line 297 
    goto return_label;
  }
  return_label: 
#line 284 
                return __retres;
}


#line 307  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_13 *cf_arg_13;
  int tmp;
  
#line 310 
  tmp = ldv_undef_int();
  
#line 310 
  switch (tmp) {
    case 0: 
#line 311 
    ;
    
#line 312 
    cf_arg_13 = (struct ldv_struct_pci_scenario_13 *)ldv_xmalloc(16UL);
    
#line 313 
    cf_arg_13->arg0 = arg0;
    
#line 314 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_pci_scenario_13,(void *)cf_arg_13);
    
#line 315 
    __VERIFIER_assume(ret == 0);
    
#line 316 
    goto ldv_44796;
    default: 
#line 318 
    ;
    
#line 318 
    __VERIFIER_assume(0);
  }
  ldv_44796: 
#line 319 
  ;
  
#line 320 
  return;
}


#line 324  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 329 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_ixgb_intr_2;
  
#line 334 
  tmp_0 = ldv_undef_int();
  
#line 334 
  if (tmp_0 != 0) {
    
#line 336 
    ldv_12_line = (int)arg0;
    
#line 337 
    ldv_12_callback = arg1;
    
#line 338 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 339 
    ldv_12_data = arg4;
    
#line 343 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 347 
    __retres = 0;
    
#line 347 
    goto return_label;
  }
  else {
    int tmp;
    
#line 354 
    tmp = ldv_undef_int_negative();
    
#line 354 
    __retres = tmp;
    
#line 354 
    goto return_label;
  }
  return_label: 
#line 334 
                return __retres;
}


#line 364  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_8_work_struct;
  int tmp;
  
#line 371 
  tmp = ldv_undef_int();
  
#line 371 
  if (tmp != 0) {
    
#line 373 
    ldv_8_work_struct = arg0;
    
#line 377 
    if (ldv_8_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 379 
      (*(ldv_8_work_struct->func))(ldv_8_work_struct); else ;
    
#line 384 
    __retres = (_Bool)1;
    
#line 384 
    goto return_label;
  }
  else {
    
#line 391 
    __retres = (_Bool)0;
    
#line 391 
    goto return_label;
  }
  return_label: 
#line 371 
                return __retres;
}


#line 401  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 408 
  ldv_1_ret = ldv_emg_ixgb_init_module();
  
#line 409 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 412 
  tmp = ldv_undef_int();
  
#line 412 
  if (tmp != 0) {
    
#line 414 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 418 
    __retres = (void *)0;
    
#line 418 
    goto return_label;
  }
  else {
    
#line 422 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 427 
    ldv_emg_ixgb_exit_module();
    
#line 431 
    __retres = (void *)0;
    
#line 431 
    goto return_label;
  }
  
#line 434 
  __retres = (void *)0;
  return_label: 
#line 434 
                return __retres;
}


#line 439  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 442 
  tmp = ldv_undef_int();
  
#line 442 
  switch (tmp) {
    case 0: 
#line 443 
    ;
    
#line 444 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 445 
    __VERIFIER_assume(ret == 0);
    
#line 446 
    goto ldv_44829;
    default: 
#line 448 
    ;
    
#line 448 
    __VERIFIER_assume(0);
  }
  ldv_44829: 
#line 449 
  ;
  
#line 450 
  return;
}


#line 454  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_13 *cf_arg_13;
  int tmp;
  
#line 457 
  tmp = ldv_undef_int();
  
#line 457 
  switch (tmp) {
    case 0: 
#line 458 
    ;
    
#line 459 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 460 
    __VERIFIER_assume(ret == 0);
    
#line 461 
    goto ldv_44837;
    default: 
#line 463 
    ;
    
#line 463 
    __VERIFIER_assume(0);
  }
  ldv_44837: 
#line 464 
  ;
  
#line 465 
  return;
}


#line 469  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_13(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_13_resource_1;
  struct pci_device_id *ldv_13_ldv_param_1_2;
  struct pm_message ldv_13_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 474 
  struct pci_driver *ldv_13_container = ldv_emg_alias_ixgb_driver_2;
  
#line 475 
  int ldv_13_ret = ldv_undef_int();
  
#line 478 
  struct ldv_struct_pci_scenario_13 *data = (struct ldv_struct_pci_scenario_13 *)arg0;
  
#line 482 
  ldv_13_ret = ldv_undef_int();
  
#line 485 
  if (data != (struct ldv_struct_pci_scenario_13 *)0) {
    
#line 486 
    ldv_13_container = data->arg0;
    
#line 487 
    ldv_free((void *)data);
  }
  else ;
  
#line 498 
  goto ldv_main_13;
  
#line 500 
  __retres = (void *)0;
  
#line 500 
  goto return_label;
  ldv_main_13: 
#line 503 
  ;
  
#line 506 
  tmp_2 = ldv_undef_int();
  
#line 506 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 508 
    ldv_13_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 513 
    ldv_pre_probe();
    
#line 515 
    ldv_13_ret = ldv_emg_wrapper_ixgb_probe_2(ldv_13_resource_1,ldv_13_ldv_param_1_2);
    
#line 517 
    ldv_13_ret = ldv_post_probe(ldv_13_ret);
    
#line 521 
    ldv_free((void *)ldv_13_ldv_param_1_2);
    
#line 524 
    tmp_1 = ldv_undef_int();
    
#line 524 
    if (tmp_1 != 0) {
      
#line 526 
      __VERIFIER_assume(ldv_13_ret == 0);
      
#line 533 
      goto ldv_call_13;
    }
    else {
      
#line 537 
      __VERIFIER_assume(ldv_13_ret != 0);
      
#line 544 
      goto ldv_main_13;
    }
  }
  else {
    
#line 556 
    __retres = (void *)0;
    
#line 556 
    goto return_label;
  }
  
#line 559 
  __retres = (void *)0;
  
#line 559 
  goto return_label;
  ldv_call_13: 
#line 562 
  ;
  
#line 565 
  tmp_3 = ldv_undef_int();
  
#line 565 
  switch (tmp_3) {
    case 1: 
#line 566 
    ;
    
#line 575 
    goto ldv_call_13;
    case 2: 
#line 578 
    ;
    
#line 580 
    if (ldv_13_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 582 
      ldv_13_ret = (*(ldv_13_container->suspend))(ldv_13_resource_1,ldv_13_resource_0);
      
#line 584 
      ldv_13_ret = ldv_filter_err_code(ldv_13_ret);
    }
    else 
#line 586 
         ldv_13_ret = ldv_undef_int();
    
#line 591 
    if (ldv_13_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 593 
      ldv_13_ret = (*(ldv_13_container->suspend_late))(ldv_13_resource_1,ldv_13_resource_0);
      
#line 595 
      ldv_13_ret = ldv_filter_err_code(ldv_13_ret);
    }
    else 
#line 597 
         ldv_13_ret = ldv_undef_int();
    
#line 602 
    if (ldv_13_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 604 
      (*(ldv_13_container->resume_early))(ldv_13_resource_1); else ;
    
#line 609 
    if (ldv_13_container->resume != (int (*)(struct pci_dev *))0) 
#line 611 
                                                                  (*(ldv_13_container->resume))(ldv_13_resource_1); else ;
    
#line 619 
    goto ldv_call_13;
    case 3: 
#line 622 
    ;
    
#line 624 
    if (ldv_13_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 626 
      (*(ldv_13_container->shutdown))(ldv_13_resource_1); else ;
    
#line 632 
    ldv_emg_wrapper_ixgb_remove_3(ldv_13_resource_1);
    
#line 639 
    goto ldv_main_13;
    default: 
#line 642 
    ;
    
#line 642 
    __VERIFIER_assume(0);
  }
  
#line 645 
  __retres = (void *)0;
  return_label: 
#line 645 
                return __retres;
}


#line 650  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 653 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_ixgb_driver_2;
  
#line 656 
  ldv_10_pci_driver = arg0;
  
#line 660 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 664 
  goto return_label;
  return_label: 
#line 666 
                return;
}


#line 671  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 675 
  int ldv_11_ret = ldv_undef_int();
  
#line 678 
  ldv_11_ret = ldv_undef_int();
  
#line 681 
  tmp_3 = ldv_undef_int();
  
#line 681 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 683 
    ldv_11_netdev = arg0;
    
#line 688 
    ldv_11_ret = ldv_emg_wrapper_ixgb_open_2(ldv_11_netdev);
    
#line 691 
    tmp_1 = ldv_undef_int();
    
#line 691 
    if (tmp_1 != 0) {
      
#line 693 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 697 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 701 
      __retres = 0;
      
#line 701 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 708 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 709 
      ldv_failed_register_netdev();
      
#line 710 
      tmp_0 = ldv_undef_int_negative();
      
#line 710 
      __retres = tmp_0;
      
#line 710 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 718 
    ldv_failed_register_netdev();
    
#line 719 
    tmp_2 = ldv_undef_int_negative();
    
#line 719 
    __retres = tmp_2;
    
#line 719 
    goto return_label;
  }
  return_label: 
#line 681 
                return __retres;
}


#line 729  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 735 
  ldv_6_netdev = arg0;
  
#line 740 
  ldv_emg_wrapper_ixgb_close_2(ldv_6_netdev);
  
#line 744 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 748 
  goto return_label;
  return_label: 
#line 750 
                return;
}


#line 755  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 761 
  ldv_3_line = (int)arg0;
  
#line 765 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 769 
  goto return_label;
  return_label: 
#line 771 
                return;
}


#line 776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 779 
  tmp = ldv_undef_int();
  
#line 779 
  switch (tmp) {
    case 0: 
#line 780 
    ;
    
#line 781 
    cf_arg_15 = (struct ldv_struct_timer_scenario_15 *)ldv_xmalloc(16UL);
    
#line 782 
    cf_arg_15->arg0 = arg0;
    
#line 783 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_timer_scenario_15,(void *)cf_arg_15);
    
#line 784 
    __VERIFIER_assume(ret == 0);
    
#line 785 
    goto ldv_44878;
    default: 
#line 787 
    ;
    
#line 787 
    __VERIFIER_assume(0);
  }
  ldv_44878: 
#line 788 
  ;
  
#line 789 
  return;
}


#line 793  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_16 *cf_arg_16;
  int tmp;
  
#line 796 
  tmp = ldv_undef_int();
  
#line 796 
  switch (tmp) {
    case 0: 
#line 797 
    ;
    
#line 798 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 799 
    __VERIFIER_assume(ret == 0);
    
#line 800 
    goto ldv_44886;
    default: 
#line 802 
    ;
    
#line 802 
    __VERIFIER_assume(0);
  }
  ldv_44886: 
#line 803 
  ;
  
#line 804 
  return;
}


#line 808  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 814 
  ldv_2_netdev = arg0;
  
#line 815 
  ldv_free((void *)ldv_2_netdev);
  
#line 819 
  goto return_label;
  return_label: 
#line 821 
                return;
}


#line 826  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_16(void *arg0)
{
  void *__retres;
  struct ethtool_pauseparam *ldv_16_ldv_param_1_28;
  struct ethtool_cmd *ldv_16_ldv_param_1_3;
  unsigned long long ldv_16_ldv_param_1_13;
  unsigned long long *ldv_16_ldv_param_2_10;
  struct ethtool_ringparam *ldv_16_ldv_param_1_16;
  unsigned char *ldv_16_ldv_param_2_15;
  unsigned short ldv_16_ldv_param_2_23;
  unsigned char *ldv_16_ldv_param_2_27;
  struct ethtool_eeprom *ldv_16_ldv_param_1_14;
  unsigned short ldv_16_ldv_param_1_29;
  struct ethtool_pauseparam *ldv_16_ldv_param_1_2;
  struct ethtool_cmd *ldv_16_ldv_param_1_4;
  void *ldv_16_ldv_param_2_25;
  unsigned long long ldv_16_ldv_param_1_11;
  unsigned int ldv_16_ldv_param_1_26;
  struct ethtool_ringparam *ldv_16_ldv_param_1_8;
  enum ethtool_phys_id_state *ldv_16_ldv_param_1_5;
  unsigned char *ldv_16_ldv_param_2_20;
  struct ethtool_drvinfo *ldv_16_ldv_param_1_12;
  struct sk_buff *ldv_16_ldv_param_0_17;
  void *ldv_16_ldv_param_1_18;
  int ldv_16_ldv_param_1_21;
  struct net_device *ldv_16_container;
  unsigned int ldv_16_ldv_param_1_6;
  struct ethtool_stats *ldv_16_ldv_param_1_9;
  struct ethtool_eeprom *ldv_16_ldv_param_1_19;
  struct ethtool_regs *ldv_16_ldv_param_1_24;
  unsigned short ldv_16_ldv_param_2_30;
  unsigned short ldv_16_ldv_param_1_22;
  int ldv_16_ldv_param_1_7;
  int tmp_17;
  
#line 860 
  struct ldv_struct_random_allocationless_scenario_16 *data = (struct ldv_struct_random_allocationless_scenario_16 *)arg0;
  
#line 865 
  if (data != (struct ldv_struct_random_allocationless_scenario_16 *)0) {
    
#line 866 
    ldv_16_container = data->arg0;
    
#line 867 
    ldv_free((void *)data);
  }
  else ;
  
#line 875 
  goto ldv_call_16;
  
#line 877 
  __retres = (void *)0;
  
#line 877 
  goto return_label;
  ldv_call_16: 
#line 880 
  ;
  
#line 883 
  tmp_17 = ldv_undef_int();
  
#line 883 
  if (tmp_17 != 0) {
    int tmp_0;
    
#line 885 
    ldv_16_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 888 
    tmp_0 = ldv_undef_int();
    
#line 888 
    switch (tmp_0) {
      case 1: 
#line 889 
      ;
      
#line 892 
      ldv_emg_wrapper_ixgb_get_pauseparam_2(ldv_16_container,ldv_16_ldv_param_1_2);
      
#line 895 
      goto ldv_44928;
      case 2: 
#line 897 
      ;
      
#line 900 
      ldv_emg_wrapper_ixgb_set_multi_7(ldv_16_container);
      
#line 903 
      goto ldv_44928;
      case 3: 
#line 905 
      ;
      
#line 908 
      ldv_emg_wrapper_ixgb_netpoll_31(ldv_16_container);
      
#line 911 
      goto ldv_44928;
      case 4: 
#line 913 
      ;
      
#line 919 
      ldv_emg_wrapper_ixgb_vlan_rx_kill_vid_30(ldv_16_container,(unsigned short)((int)ldv_16_ldv_param_1_29),(unsigned short)((int)ldv_16_ldv_param_2_30));
      
#line 925 
      goto ldv_44928;
      case 5: 
#line 927 
      ;
      
#line 929 
      ldv_16_ldv_param_1_28 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 934 
      ldv_emg_wrapper_ixgb_set_pauseparam_29(ldv_16_container,ldv_16_ldv_param_1_28);
      
#line 938 
      ldv_free((void *)ldv_16_ldv_param_1_28);
      
#line 941 
      goto ldv_44928;
      case 6: 
#line 943 
      ;
      
#line 946 
      ldv_emg_wrapper_ixgb_get_regs_len_28(ldv_16_container);
      
#line 949 
      goto ldv_44928;
      case 7: 
#line 951 
      ;
      
#line 953 
      ldv_16_ldv_param_2_27 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 958 
      ldv_emg_wrapper_ixgb_get_strings_6(ldv_16_container,ldv_16_ldv_param_1_26,ldv_16_ldv_param_2_27);
      
#line 962 
      ldv_free((void *)ldv_16_ldv_param_2_27);
      
#line 965 
      goto ldv_44928;
      case 8: 
#line 967 
      ;
      
#line 970 
      ldv_emg_wrapper_ixgb_get_stats_26(ldv_16_container);
      
#line 973 
      goto ldv_44928;
      case 9: 
#line 975 
      ;
      
#line 978 
      ldv_emg_wrapper_ixgb_tx_timeout_21(ldv_16_container);
      
#line 981 
      goto ldv_44928;
      case 10: 
#line 983 
      ;
      
#line 985 
      ldv_16_ldv_param_1_24 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 986 
      ldv_16_ldv_param_2_25 = ldv_xmalloc_unknown_size(0UL);
      
#line 991 
      ldv_emg_wrapper_ixgb_get_regs_24(ldv_16_container,ldv_16_ldv_param_1_24,ldv_16_ldv_param_2_25);
      
#line 995 
      ldv_free((void *)ldv_16_ldv_param_1_24);
      
#line 996 
      ldv_free(ldv_16_ldv_param_2_25);
      
#line 999 
      goto ldv_44928;
      case 11: 
#line 1001 
      ;
      
#line 1007 
      ldv_emg_wrapper_ixgb_vlan_rx_add_vid_22(ldv_16_container,(unsigned short)((int)ldv_16_ldv_param_1_22),(unsigned short)((int)ldv_16_ldv_param_2_23));
      
#line 1013 
      goto ldv_44928;
      case 12: 
#line 1015 
      ;
      
#line 1021 
      ldv_emg_wrapper_ixgb_get_sset_count_25(ldv_16_container,ldv_16_ldv_param_1_21);
      
#line 1027 
      goto ldv_44928;
      case 13: 
#line 1029 
      ;
      
#line 1031 
      ldv_16_ldv_param_2_20 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1032 
      ldv_16_ldv_param_1_19 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1037 
      ldv_emg_wrapper_ixgb_get_eeprom_3(ldv_16_container,ldv_16_ldv_param_1_19,ldv_16_ldv_param_2_20);
      
#line 1041 
      ldv_free((void *)ldv_16_ldv_param_2_20);
      
#line 1042 
      ldv_free((void *)ldv_16_ldv_param_1_19);
      
#line 1045 
      goto ldv_44928;
      case 14: 
#line 1047 
      ;
      
#line 1049 
      ldv_16_ldv_param_1_18 = ldv_xmalloc_unknown_size(0UL);
      
#line 1054 
      ldv_emg_wrapper_ixgb_set_mac_19(ldv_16_container,ldv_16_ldv_param_1_18);
      
#line 1058 
      ldv_free(ldv_16_ldv_param_1_18);
      
#line 1061 
      goto ldv_44928;
      case 15: 
#line 1063 
      ;
      
#line 1065 
      ldv_16_ldv_param_0_17 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1070 
      ldv_emg_wrapper_ixgb_xmit_frame_18(ldv_16_ldv_param_0_17,ldv_16_container);
      
#line 1074 
      ldv_free((void *)ldv_16_ldv_param_0_17);
      
#line 1077 
      goto ldv_44928;
      case 16: 
#line 1079 
      ;
      
#line 1082 
      ldv_emg_wrapper_ixgb_get_msglevel_17(ldv_16_container);
      
#line 1085 
      goto ldv_44928;
      case 17: 
#line 1087 
      ;
      
#line 1089 
      ldv_16_ldv_param_1_16 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1094 
      ldv_emg_wrapper_ixgb_set_ringparam_16(ldv_16_container,ldv_16_ldv_param_1_16);
      
#line 1098 
      ldv_free((void *)ldv_16_ldv_param_1_16);
      
#line 1101 
      goto ldv_44928;
      case 18: 
#line 1103 
      ;
      
#line 1105 
      ldv_16_ldv_param_1_14 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1106 
      ldv_16_ldv_param_2_15 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1111 
      ldv_emg_wrapper_ixgb_set_eeprom_15(ldv_16_container,ldv_16_ldv_param_1_14,ldv_16_ldv_param_2_15);
      
#line 1115 
      ldv_free((void *)ldv_16_ldv_param_1_14);
      
#line 1116 
      ldv_free((void *)ldv_16_ldv_param_2_15);
      
#line 1119 
      goto ldv_44928;
      case 19: 
#line 1121 
      ;
      
#line 1124 
      ldv_emg_wrapper_ixgb_get_eeprom_len_32(ldv_16_container);
      
#line 1127 
      goto ldv_44928;
      case 20: 
#line 1129 
      ;
      
#line 1135 
      ldv_emg_wrapper_ixgb_fix_features_14(ldv_16_container,ldv_16_ldv_param_1_13);
      
#line 1141 
      goto ldv_44928;
      case 21: 
#line 1143 
      ;
      
#line 1145 
      ldv_16_ldv_param_1_12 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1150 
      ldv_emg_wrapper_ixgb_get_drvinfo_13(ldv_16_container,ldv_16_ldv_param_1_12);
      
#line 1154 
      ldv_free((void *)ldv_16_ldv_param_1_12);
      
#line 1157 
      goto ldv_44928;
      case 22: 
#line 1159 
      ;
      
#line 1165 
      ldv_emg_wrapper_ixgb_set_features_12(ldv_16_container,ldv_16_ldv_param_1_11);
      
#line 1171 
      goto ldv_44928;
      case 23: 
#line 1173 
      ;
      
#line 1176 
      (*ldv_emg_alias_ethtool_op_get_link_11)(ldv_16_container);
      
#line 1179 
      goto ldv_44928;
      case 24: 
#line 1181 
      ;
      
#line 1184 
      (*ldv_emg_alias_eth_validate_addr_23)(ldv_16_container);
      
#line 1187 
      goto ldv_44928;
      case 25: 
#line 1189 
      ;
      
#line 1191 
      ldv_16_ldv_param_2_10 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1192 
      ldv_16_ldv_param_1_9 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1197 
      ldv_emg_wrapper_ixgb_get_ethtool_stats_9(ldv_16_container,ldv_16_ldv_param_1_9,ldv_16_ldv_param_2_10);
      
#line 1201 
      ldv_free((void *)ldv_16_ldv_param_2_10);
      
#line 1202 
      ldv_free((void *)ldv_16_ldv_param_1_9);
      
#line 1205 
      goto ldv_44928;
      case 26: 
#line 1207 
      ;
      
#line 1209 
      ldv_16_ldv_param_1_8 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1214 
      ldv_emg_wrapper_ixgb_get_ringparam_8(ldv_16_container,ldv_16_ldv_param_1_8);
      
#line 1218 
      ldv_free((void *)ldv_16_ldv_param_1_8);
      
#line 1221 
      goto ldv_44928;
      case 27: 
#line 1223 
      ;
      
#line 1229 
      ldv_emg_wrapper_ixgb_change_mtu_10(ldv_16_container,ldv_16_ldv_param_1_7);
      
#line 1235 
      goto ldv_44928;
      case 28: 
#line 1237 
      ;
      
#line 1243 
      ldv_emg_wrapper_ixgb_set_msglevel_27(ldv_16_container,ldv_16_ldv_param_1_6);
      
#line 1249 
      goto ldv_44928;
      case 29: 
#line 1251 
      ;
      
#line 1253 
      ldv_16_ldv_param_1_5 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 1258 
      ldv_emg_wrapper_ixgb_set_phys_id_5(ldv_16_container,*ldv_16_ldv_param_1_5);
      
#line 1262 
      ldv_free((void *)ldv_16_ldv_param_1_5);
      
#line 1265 
      goto ldv_44928;
      case 30: 
#line 1267 
      ;
      
#line 1269 
      ldv_16_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1274 
      ldv_emg_wrapper_ixgb_set_settings_4(ldv_16_container,ldv_16_ldv_param_1_4);
      
#line 1278 
      ldv_free((void *)ldv_16_ldv_param_1_4);
      
#line 1281 
      goto ldv_44928;
      case 31: 
#line 1283 
      ;
      
#line 1285 
      ldv_16_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1290 
      ldv_emg_wrapper_ixgb_get_settings_20(ldv_16_container,ldv_16_ldv_param_1_3);
      
#line 1294 
      ldv_free((void *)ldv_16_ldv_param_1_3);
      
#line 1297 
      goto ldv_44928;
      default: 
#line 1299 
      ;
      
#line 1299 
      __VERIFIER_assume(0);
    }
    ldv_44928: 
#line 1302 
    ;
    
#line 1302 
    ldv_free((void *)ldv_16_ldv_param_1_2);
    
#line 1309 
    goto ldv_call_16;
  }
  else {
    
#line 1317 
    __retres = (void *)0;
    
#line 1317 
    goto return_label;
  }
  
#line 1320 
  __retres = (void *)0;
  return_label: 
#line 1320 
                return __retres;
}


#line 1325  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_14(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_14_ret_val;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp;
  
#line 1331 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_ixgb_intr_2;
  
#line 1334 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 1339 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 1340 
    ldv_14_line = data->arg0;
    
#line 1341 
    ldv_14_callback = data->arg1;
    
#line 1342 
    ldv_14_thread = data->arg2;
    
#line 1343 
    ldv_14_data = data->arg3;
    
#line 1344 
    ldv_free((void *)data);
  }
  else ;
  
#line 1350 
  ldv_switch_to_interrupt_context();
  
#line 1352 
  ldv_14_ret_val = ldv_emg_wrapper_ixgb_intr_2(ldv_14_line,ldv_14_data);
  
#line 1354 
  ldv_switch_to_process_context();
  
#line 1357 
  tmp = ldv_undef_int();
  
#line 1357 
  if (tmp != 0) {
    
#line 1359 
    __VERIFIER_assume(ldv_14_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1363 
    if (ldv_14_thread != (enum irqreturn (*)(int , void *))0) 
#line 1365 
                                                              (*ldv_14_thread)(ldv_14_line,ldv_14_data); else ;
  }
  else 
#line 1372 
       __VERIFIER_assume(ldv_14_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1381 
  __retres = (void *)0;
  
#line 1381 
  goto return_label;
  
#line 1383 
  __retres = (void *)0;
  return_label: 
#line 1383 
                return __retres;
}


#line 1388  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgb/ixgb.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1395 
  tmp_0 = ldv_undef_int();
  
#line 1395 
  if (tmp_0 != 0) {
    
#line 1397 
    ldv_4_timer_list = arg0;
    
#line 1401 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1405 
    __retres = 0;
    
#line 1405 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1412 
    tmp = ldv_undef_int_negative();
    
#line 1412 
    __retres = tmp;
    
#line 1412 
    goto return_label;
  }
  return_label: 
#line 1395 
                return __retres;
}


