/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_48 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_48 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
union __anonunion_49 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_49 __anonCompField_idr_layer_19 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 97 
struct dentry;

#line 98 
struct iattr;

#line 99 
struct vm_area_struct;

#line 100 
struct super_block;

#line 101 
struct file_system_type;

#line 102 
struct kernfs_open_node;

#line 103 
struct kernfs_iattrs;

#line 126 
struct kernfs_root;

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_54 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_54 __anonCompField_kernfs_node_20 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171 
struct vm_operations_struct;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 281 
struct inode;

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_55 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_55 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_56 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_56 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kref.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_58 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_57 {
   struct __anonstruct_58 __anonCompField___anonunion_57_21 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_57 __anonCompField_ctl_table_header_22 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_59 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_59 nodemask_t;

#line 520 
struct path;

#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_124 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_124 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dma_map_ops;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemleak.h"
struct kmem_cache;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_157 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_158 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_156 {
   struct __anonstruct_157 __anonCompField___anonunion_156_35 ;
   struct __anonstruct_158 __anonCompField___anonunion_156_36 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_156 __anonCompField_uprobe_task_37 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_159 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_161 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_165 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_164 {
   atomic_t _mapcount ;
   struct __anonstruct_165 __anonCompField___anonunion_164_40 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_163 {
   union __anonunion_164 __anonCompField___anonstruct_163_41 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_162 {
   unsigned long counters ;
   struct __anonstruct_163 __anonCompField___anonunion_162_42 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_160 {
   union __anonunion_161 __anonCompField___anonstruct_160_39 ;
   union __anonunion_162 __anonCompField___anonstruct_160_43 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_167 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_168 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_166 {
   struct list_head lru ;
   struct __anonstruct_167 __anonCompField___anonunion_166_45 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_168 __anonCompField___anonunion_166_46 ;
   pgtable_t pmd_huge_pte ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_169 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_159 __anonCompField_page_38 ;
   struct __anonstruct_160 __anonCompField_page_44 ;
   union __anonunion_166 __anonCompField_page_47 ;
   union __anonunion_169 __anonCompField_page_48 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_170 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_170 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_172 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_172 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_174 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_175 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_176 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_177 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_179 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_178 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_179 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_180 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_181 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_173 {
   int _pad[28U] ;
   struct __anonstruct__kill_174 _kill ;
   struct __anonstruct__timer_175 _timer ;
   struct __anonstruct__rt_176 _rt ;
   struct __anonstruct__sigchld_177 _sigchld ;
   struct __anonstruct__sigfault_178 _sigfault ;
   struct __anonstruct__sigpoll_180 _sigpoll ;
   struct __anonstruct__sigsys_181 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_173 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct cred;

#line 38 
struct key_type;

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_188 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_189 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_191 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_190 {
   struct keyring_index_key index_key ;
   struct __anonstruct_191 __anonCompField___anonunion_190_51 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_192 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_194 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_193 {
   union __anonunion_payload_194 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_188 __anonCompField_key_49 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_189 __anonCompField_key_50 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_190 __anonCompField_key_52 ;
   union __anonunion_type_data_192 type_data ;
   union __anonunion_193 __anonCompField_key_53 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct proc_dir_entry;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_218 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_218 __anonCompField_iov_iter_65 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_23821 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_23821 socket_state;

#line 54 
struct poll_table_struct;

#line 55 
struct net;

#line 72 
struct fasync_struct;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_219 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_219 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_24228 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_225 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_24228 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_224 __anonCompField_nf_bridge_info_69 ;
   union __anonunion_225 __anonCompField_nf_bridge_info_70 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_228 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_227 {
   u64 v64 ;
   struct __anonstruct_228 __anonCompField___anonunion_227_71 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_227 __anonCompField_skb_mstamp_72 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_231 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_230 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_231 __anonCompField___anonstruct_230_73 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_229 {
   struct __anonstruct_230 __anonCompField___anonunion_229_74 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_233 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_232 {
   __wsum csum ;
   struct __anonstruct_233 __anonCompField___anonunion_232_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_234 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_235 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_236 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_229 __anonCompField_sk_buff_75 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_232 __anonCompField_sk_buff_77 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_234 __anonCompField_sk_buff_78 ;
   __u32 secmark ;
   union __anonunion_235 __anonCompField_sk_buff_79 ;
   union __anonunion_236 __anonCompField_sk_buff_80 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_238 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_238 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_239 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_239 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_240 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_240 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_241 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_241 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_242 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_242 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_243 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_243 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_244 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_244 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_245 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_245 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_246 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_247 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_246 ifr_ifrn ;
   union __anonunion_ifr_ifru_247 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_252 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_251 {
   struct __anonstruct_252 __anonCompField___anonunion_251_81 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_251 __anonCompField_lockref_82 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_254 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_253 {
   struct __anonstruct_254 __anonCompField___anonunion_253_83 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_253 __anonCompField_qstr_84 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_255 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_255 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_259 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_258 {
   struct __anonstruct_259 __anonCompField___anonunion_258_85 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_258 __anonCompField_radix_tree_node_86 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_263 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_263 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_264 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_264 __anonCompField_kqid_88 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_267 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_268 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_269 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_267 __anonCompField_inode_89 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_268 __anonCompField_inode_90 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_269 __anonCompField_inode_91 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_270 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_270 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_272 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_271 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_272 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_271 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_295 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_295 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28702 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28702 phy_interface_t;

#line 126 
enum ldv_28755 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28755 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30467 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30468 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_306 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_307 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_305 adj_list ;
   struct __anonstruct_all_adj_list_306 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30467 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30468 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_307 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
typedef u32 ixgbe_link_speed;

#line 241 
struct ixgbe_hw;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
enum ixgbe_media_type;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
struct ixgbe_mac_operations {
   s32 (*init_hw)(struct ixgbe_hw *) ;
   s32 (*reset_hw)(struct ixgbe_hw *) ;
   s32 (*start_hw)(struct ixgbe_hw *) ;
   s32 (*clear_hw_cntrs)(struct ixgbe_hw *) ;
   enum ixgbe_media_type (*get_media_type)(struct ixgbe_hw *) ;
   s32 (*get_mac_addr)(struct ixgbe_hw *, u8 *) ;
   s32 (*stop_adapter)(struct ixgbe_hw *) ;
   s32 (*get_bus_info)(struct ixgbe_hw *) ;
   s32 (*setup_link)(struct ixgbe_hw *, ixgbe_link_speed , bool , bool ) ;
   s32 (*check_link)(struct ixgbe_hw *, ixgbe_link_speed *, bool *, bool ) ;
   s32 (*get_link_capabilities)(struct ixgbe_hw *, ixgbe_link_speed *, bool *) ;
   s32 (*set_rar)(struct ixgbe_hw *, u32 , u8 *, u32 ) ;
   s32 (*set_uc_addr)(struct ixgbe_hw *, u32 , u8 *) ;
   s32 (*init_rx_addrs)(struct ixgbe_hw *) ;
   s32 (*update_mc_addr_list)(struct ixgbe_hw *, struct net_device *) ;
   s32 (*enable_mc)(struct ixgbe_hw *) ;
   s32 (*disable_mc)(struct ixgbe_hw *) ;
   s32 (*clear_vfta)(struct ixgbe_hw *) ;
   s32 (*set_vfta)(struct ixgbe_hw *, u32 , u32 , bool ) ;
};

#line 71 
enum ixgbe_mac_type {
    ixgbe_mac_unknown = 0,
    ixgbe_mac_82599_vf = 1,
    ixgbe_mac_X540_vf = 2,
    ixgbe_mac_X550_vf = 3,
    ixgbe_mac_X550EM_x_vf = 4,
    ixgbe_num_macs = 5
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
struct ixgbe_mac_info {
   struct ixgbe_mac_operations ops ;
   u8 addr[6U] ;
   u8 perm_addr[6U] ;
   enum ixgbe_mac_type type ;
   s32 mc_filter_type ;
   bool get_link_status ;
   u32 max_tx_queues ;
   u32 max_rx_queues ;
   u32 max_msix_vectors ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
struct ixgbe_mbx_operations {
   s32 (*init_params)(struct ixgbe_hw *) ;
   s32 (*read)(struct ixgbe_hw *, u32 *, u16 ) ;
   s32 (*write)(struct ixgbe_hw *, u32 *, u16 ) ;
   s32 (*read_posted)(struct ixgbe_hw *, u32 *, u16 ) ;
   s32 (*write_posted)(struct ixgbe_hw *, u32 *, u16 ) ;
   s32 (*check_for_msg)(struct ixgbe_hw *) ;
   s32 (*check_for_ack)(struct ixgbe_hw *) ;
   s32 (*check_for_rst)(struct ixgbe_hw *) ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
struct ixgbe_mbx_stats {
   u32 msgs_tx ;
   u32 msgs_rx ;
   u32 acks ;
   u32 reqs ;
   u32 rsts ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
struct ixgbe_mbx_info {
   struct ixgbe_mbx_operations ops ;
   struct ixgbe_mbx_stats stats ;
   u32 timeout ;
   u32 udelay ;
   u32 v2p_mailbox ;
   u16 size ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
struct ixgbe_hw {
   void *back ;
   u8 *hw_addr ;
   struct ixgbe_mac_info mac ;
   struct ixgbe_mbx_info mbx ;
   u16 device_id ;
   u16 subsystem_vendor_id ;
   u16 subsystem_device_id ;
   u16 vendor_id ;
   u8 revision_id ;
   bool adapter_stopped ;
   int api_version ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_336 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_336 __anonCompField_bpf_prog_99 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_344 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_344 __anonCompField_dst_entry_100 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_345 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_345 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_347 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_346 {
   __addrpair skc_addrpair ;
   struct __anonstruct_347 __anonCompField___anonunion_346_101 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_348 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_350 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_349 {
   __portpair skc_portpair ;
   struct __anonstruct_350 __anonCompField___anonunion_349_104 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_351 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_352 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_346 __anonCompField_sock_common_102 ;
   union __anonunion_348 __anonCompField_sock_common_103 ;
   union __anonunion_349 __anonCompField_sock_common_105 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_351 __anonCompField_sock_common_106 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_352 __anonCompField_sock_common_107 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_353 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_353 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_356 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_356 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 2242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_376 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_376 __anonCompField_inetpeer_addr_base_109 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_377 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_379 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_378 {
   struct __anonstruct_379 __anonCompField___anonunion_378_111 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_377 __anonCompField_inet_peer_110 ;
   union __anonunion_378 __anonCompField_inet_peer_112 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_554 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_554 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_602 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_602 __anonCompField_pci_dev_58 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
struct __anonstruct_read_713 {
   __le64 buffer_addr ;
   __le32 cmd_type_len ;
   __le32 olinfo_status ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
struct __anonstruct_wb_714 {
   __le64 rsvd ;
   __le32 nxtseq_seed ;
   __le32 status ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
union ixgbe_adv_tx_desc {
   struct __anonstruct_read_713 read ;
   struct __anonstruct_wb_714 wb ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
struct ixgbevf_hw_stats {
   u64 base_vfgprc ;
   u64 base_vfgptc ;
   u64 base_vfgorc ;
   u64 base_vfgotc ;
   u64 base_vfmprc ;
   u64 last_vfgprc ;
   u64 last_vfgptc ;
   u64 last_vfgorc ;
   u64 last_vfgotc ;
   u64 last_vfmprc ;
   u64 vfgprc ;
   u64 vfgptc ;
   u64 vfgorc ;
   u64 vfgotc ;
   u64 vfmprc ;
   u64 saved_reset_vfgprc ;
   u64 saved_reset_vfgptc ;
   u64 saved_reset_vfgorc ;
   u64 saved_reset_vfgotc ;
   u64 saved_reset_vfmprc ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/busy_poll.h"
struct ixgbevf_tx_buffer {
   union ixgbe_adv_tx_desc *next_to_watch ;
   unsigned long time_stamp ;
   struct sk_buff *skb ;
   unsigned int bytecount ;
   unsigned short gso_segs ;
   __be16 protocol ;
   dma_addr_t dma ;
   __u32 len ;
   u32 tx_flags ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbevf_rx_buffer {
   dma_addr_t dma ;
   struct page *page ;
   unsigned int page_offset ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbevf_stats {
   u64 packets ;
   u64 bytes ;
   u64 yields ;
   u64 misses ;
   u64 cleaned ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbevf_tx_queue_stats {
   u64 restart_queue ;
   u64 tx_busy ;
   u64 tx_done_old ;
};

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbevf_rx_queue_stats {
   u64 alloc_rx_page_failed ;
   u64 alloc_rx_buff_failed ;
   u64 csum_err ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
union __anonunion_774 {
   struct ixgbevf_tx_buffer *tx_buffer_info ;
   struct ixgbevf_rx_buffer *rx_buffer_info ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
union __anonunion_775 {
   struct ixgbevf_tx_queue_stats tx_stats ;
   struct ixgbevf_rx_queue_stats rx_stats ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbevf_ring {
   struct ixgbevf_ring *next ;
   struct net_device *netdev ;
   struct device *dev ;
   void *desc ;
   dma_addr_t dma ;
   unsigned int size ;
   u16 count ;
   u16 next_to_use ;
   u16 next_to_clean ;
   u16 next_to_alloc ;
   union __anonunion_774 __anonCompField_ixgbevf_ring_115 ;
   unsigned long state ;
   struct ixgbevf_stats stats ;
   struct u64_stats_sync syncp ;
   union __anonunion_775 __anonCompField_ixgbevf_ring_116 ;
   u64 hw_csum_rx_error ;
   u8 *tail ;
   struct sk_buff *skb ;
   u16 reg_idx ;
   int queue_index ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbevf_ring_container {
   struct ixgbevf_ring *ring ;
   unsigned int total_bytes ;
   unsigned int total_packets ;
   u8 count ;
   u8 itr ;
};

#line 182 
struct ixgbevf_adapter;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbevf_q_vector {
   struct ixgbevf_adapter *adapter ;
   u16 v_idx ;
   u16 itr ;
   struct napi_struct napi ;
   struct ixgbevf_ring_container rx ;
   struct ixgbevf_ring_container tx ;
   char name[25U] ;
   unsigned int state ;
   spinlock_t lock ;
};

#line 357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbevf_adapter {
   unsigned long active_vlans[64U] ;
   struct ixgbevf_q_vector *q_vector[2U] ;
   u16 rx_itr_setting ;
   u16 tx_itr_setting ;
   u32 eims_enable_mask ;
   u32 eims_other ;
   int num_tx_queues ;
   struct ixgbevf_ring *tx_ring[8U] ;
   u64 restart_queue ;
   u32 tx_timeout_count ;
   int num_rx_queues ;
   struct ixgbevf_ring *rx_ring[8U] ;
   u64 hw_csum_rx_error ;
   u64 hw_rx_no_dma_resources ;
   int num_msix_vectors ;
   u32 alloc_rx_page_failed ;
   u32 alloc_rx_buff_failed ;
   u32 flags ;
   struct msix_entry *msix_entries ;
   struct net_device *netdev ;
   struct pci_dev *pdev ;
   struct ixgbe_hw hw ;
   u16 msg_enable ;
   u32 eitr_param ;
   struct ixgbevf_hw_stats stats ;
   unsigned long state ;
   u64 tx_busy ;
   unsigned int tx_ring_count ;
   unsigned int rx_ring_count ;
   u64 bp_rx_yields ;
   u64 bp_rx_cleaned ;
   u64 bp_rx_missed ;
   u64 bp_tx_yields ;
   u64 bp_tx_cleaned ;
   u64 bp_tx_missed ;
   u8 *io_addr ;
   u32 link_speed ;
   bool link_up ;
   struct timer_list service_timer ;
   struct work_struct service_task ;
   spinlock_t mbx_lock ;
   unsigned long last_reset ;
};

#line 495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct __anonstruct_776 {
   int sizeof_stat ;
   int stat_offset ;
   int base_stat_offset ;
   int saved_reset_offset ;
};

#line 495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbe_stats {
   char stat_string[32U] ;
   struct __anonstruct_776 __anonCompField_ixgbe_stats_117 ;
};

#line 492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
struct ixgbevf_reg_test {
   u16 reg ;
   u8 array_len ;
   u8 test_type ;
   u32 mask ;
   u32 write ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};

#line 96 
struct pglist_data;

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};

#line 215 
struct zone;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   struct zone *zone ;
};

#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   s8 stat_threshold ;
   s8 vm_stat_diff[39U] ;
};

#line 270 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    __MAX_NR_ZONES = 4
};

#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zone {
   unsigned long watermark[3U] ;
   long lowmem_reserve[4U] ;
   int node ;
   unsigned int inactive_ratio ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long dirty_balance_reserve ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   unsigned long zone_start_pfn ;
   unsigned long managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char const *name ;
   int nr_migrate_reserve_block ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   wait_queue_head_t *wait_table ;
   unsigned long wait_table_hash_nr_entries ;
   unsigned long wait_table_bits ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   spinlock_t lru_lock ;
   struct lruvec lruvec ;
   atomic_long_t inactive_age ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[39U] ;
};

#line 567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zonelist_cache {
   unsigned short z_to_n[4096U] ;
   unsigned long fullzones[64U] ;
   unsigned long last_full_zap ;
};

#line 654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};

#line 667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zonelist {
   struct zonelist_cache *zlcache_ptr ;
   struct zoneref _zonerefs[4097U] ;
   struct zonelist_cache zlcache ;
};

#line 705  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[4U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_max_order ;
   enum zone_type classzone_idx ;
   spinlock_t numabalancing_migrate_lock ;
   unsigned long numabalancing_migrate_next_window ;
   unsigned long numabalancing_migrate_nr_pages ;
   unsigned long first_deferred_pfn ;
};

#line 773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
typedef struct pglist_data pg_data_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11836 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_1059 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_1059 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) priority : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_vlan.h"
struct vlan_hdr {
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
struct __anonstruct_read_1168 {
   __le64 pkt_addr ;
   __le64 hdr_addr ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
struct __anonstruct_hs_rss_1172 {
   __le16 pkt_info ;
   __le16 hdr_info ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
union __anonunion_lo_dword_1171 {
   __le32 data ;
   struct __anonstruct_hs_rss_1172 hs_rss ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
struct __anonstruct_csum_ip_1174 {
   __le16 ip_id ;
   __le16 csum ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
union __anonunion_hi_dword_1173 {
   __le32 rss ;
   struct __anonstruct_csum_ip_1174 csum_ip ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
struct __anonstruct_lower_1170 {
   union __anonunion_lo_dword_1171 lo_dword ;
   union __anonunion_hi_dword_1173 hi_dword ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
struct __anonstruct_upper_1175 {
   __le32 status_error ;
   __le16 length ;
   __le16 vlan ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
struct __anonstruct_wb_1169 {
   struct __anonstruct_lower_1170 lower ;
   struct __anonstruct_upper_1175 upper ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
union ixgbe_adv_rx_desc {
   struct __anonstruct_read_1168 read ;
   struct __anonstruct_wb_1169 wb ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/defines.h"
struct ixgbe_adv_tx_context_desc {
   __le32 vlan_macip_lens ;
   __le32 seqnum_seed ;
   __le32 type_tucmd_mlhl ;
   __le32 mss_l4len_idx ;
};

#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
struct ixgbevf_info {
   enum ixgbe_mac_type mac ;
   struct ixgbe_mac_operations const *mac_ops ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_13 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_14 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_17 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_15 {
   struct timer_list *arg0 ;
   int signal_pending ;
};

#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/fvtp/.tmp_mbx.c"
void ldv_inline_asm(void);


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 5  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __bad_udelay(void);


#line 8 
void __udelay(unsigned long);


#line 10 
void __const_udelay(unsigned long);


#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
__inline static void ixgbe_write_reg(struct ixgbe_hw *hw, u32 reg, u32 value)
{
  u8 * volatile *tmp;
  {
    
#line 181 
    u8 *__var = (u8 *)0U;
    
#line 181 
    tmp = (u8 * volatile *)(& hw->hw_addr);
  }
  
#line 181 
  u8 *reg_addr = *tmp;
  
#line 183 
  if ((long)(reg_addr == (u8 *)0U) != 0L) 
#line 184 
                                          goto return_label; else ;
  
#line 185 
  writel(value,(void volatile *)(reg_addr + reg));
  return_label: 
#line 186 
                return;
}


#line 190 
u32 ixgbevf_read_reg(struct ixgbe_hw *hw, u32 reg);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
__inline static void ixgbe_write_reg_array(struct ixgbe_hw *hw, u32 reg, u32 offset, u32 value)
{
  
#line 196 
  ixgbe_write_reg(hw,(offset << 2) + reg,value);
  
#line 197 
  return;
}


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
__inline static u32 ixgbe_read_reg_array(struct ixgbe_hw *hw, u32 reg, u32 offset)
{
  u32 tmp;
  
#line 204 
  tmp = ixgbevf_read_reg(hw,(offset << 2) + reg);
  
#line 204 
  return tmp;
}


#line 473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
struct ixgbe_mbx_operations const ixgbevf_mbx_ops;


#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_poll_for_msg(struct ixgbe_hw *hw)
{
  int tmp_0;
  
#line 38 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 39 
  int countdown = (int)mbx->timeout;
  
#line 41 
  goto ldv_52802;
  ldv_52801: 
#line 42 
  ;
  
#line 42 
  countdown -= 1;
  
#line 43 
  if (0 != 0) 
    
#line 43 
    if (mbx->udelay > 19999U) 
#line 43 
                              __bad_udelay(); else 
#line 43 
                                                   __const_udelay((unsigned long)mbx->udelay * 4295UL);
  else 
#line 43 
       __udelay((unsigned long)mbx->udelay);
  ldv_52802: 
#line 45 
  ;
  
#line 41 
  if (countdown != 0) {
    s32 tmp;
    
#line 41 
    tmp = (*(mbx->ops.check_for_msg))(hw);
    
#line 41 
    if (tmp != 0) 
#line 43 
                  goto ldv_52801; else 
#line 46 
                                       goto ldv_52803;
  }
  else 
#line 46 
       goto ldv_52803;
  ldv_52803: 
#line 47 
  ;
  
#line 47 
  if (countdown == 0) 
#line 48 
                      mbx->timeout = 0U; else ;
  
#line 50 
  if (countdown != 0) 
#line 50 
                      tmp_0 = 0; else 
#line 50 
                                      tmp_0 = -100;
  
#line 50 
  return tmp_0;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_poll_for_ack(struct ixgbe_hw *hw)
{
  int tmp_0;
  
#line 61 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 62 
  int countdown = (int)mbx->timeout;
  
#line 64 
  goto ldv_52810;
  ldv_52809: 
#line 65 
  ;
  
#line 65 
  countdown -= 1;
  
#line 66 
  if (0 != 0) 
    
#line 66 
    if (mbx->udelay > 19999U) 
#line 66 
                              __bad_udelay(); else 
#line 66 
                                                   __const_udelay((unsigned long)mbx->udelay * 4295UL);
  else 
#line 66 
       __udelay((unsigned long)mbx->udelay);
  ldv_52810: 
#line 68 
  ;
  
#line 64 
  if (countdown != 0) {
    s32 tmp;
    
#line 64 
    tmp = (*(mbx->ops.check_for_ack))(hw);
    
#line 64 
    if (tmp != 0) 
#line 66 
                  goto ldv_52809; else 
#line 69 
                                       goto ldv_52811;
  }
  else 
#line 69 
       goto ldv_52811;
  ldv_52811: 
#line 70 
  ;
  
#line 70 
  if (countdown == 0) 
#line 71 
                      mbx->timeout = 0U; else ;
  
#line 73 
  if (countdown != 0) 
#line 73 
                      tmp_0 = 0; else 
#line 73 
                                      tmp_0 = -100;
  
#line 73 
  return tmp_0;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_read_posted_mbx(struct ixgbe_hw *hw, u32 *msg, u16 size)
{
  
#line 87 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 88 
  s32 ret_val = 100;
  
#line 90 
  if (mbx->ops.read == (s32 (*)(struct ixgbe_hw *, u32 *, u16 ))0) 
#line 91 
                                                                   goto out; else ;
  
#line 93 
  ret_val = ixgbevf_poll_for_msg(hw);
  
#line 96 
  if (ret_val == 0) 
#line 97 
                    ret_val = (*(mbx->ops.read))(hw,msg,(unsigned short)((int)size)); else ;
  out: 
#line 98 
  ;
  
#line 99 
  return ret_val;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_write_posted_mbx(struct ixgbe_hw *hw, u32 *msg, u16 size)
{
  
#line 113 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 114 
  s32 ret_val = 100;
  
#line 117 
  if (mbx->ops.write == (s32 (*)(struct ixgbe_hw *, u32 *, u16 ))0 || mbx->timeout == 0U) 
    
#line 118 
    goto out; else ;
  
#line 121 
  ret_val = (*(mbx->ops.write))(hw,msg,(unsigned short)((int)size));
  
#line 124 
  if (ret_val == 0) 
#line 125 
                    ret_val = ixgbevf_poll_for_ack(hw); else ;
  out: 
#line 126 
  ;
  
#line 127 
  return ret_val;
}


#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static u32 ixgbevf_read_v2p_mailbox(struct ixgbe_hw *hw)
{
  
#line 139 
  u32 v2p_mailbox = ixgbevf_read_reg(hw,764U);
  
#line 141 
  v2p_mailbox = hw->mbx.v2p_mailbox | v2p_mailbox;
  
#line 142 
  hw->mbx.v2p_mailbox |= v2p_mailbox & 176U;
  
#line 144 
  return v2p_mailbox;
}


#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_check_for_bit_vf(struct ixgbe_hw *hw, u32 mask)
{
  
#line 157 
  u32 v2p_mailbox = ixgbevf_read_v2p_mailbox(hw);
  
#line 158 
  s32 ret_val = -100;
  
#line 160 
  if ((v2p_mailbox & mask) != 0U) 
#line 161 
                                  ret_val = 0; else ;
  
#line 163 
  hw->mbx.v2p_mailbox &= ~ mask;
  
#line 165 
  return ret_val;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_check_for_msg_vf(struct ixgbe_hw *hw)
{
  s32 tmp;
  
#line 176 
  s32 ret_val = -100;
  
#line 178 
  tmp = ixgbevf_check_for_bit_vf(hw,16U);
  
#line 178 
  if (tmp == 0) {
    
#line 179 
    ret_val = 0;
    
#line 180 
    hw->mbx.stats.reqs += 1U;
  }
  else ;
  
#line 183 
  return ret_val;
}


#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_check_for_ack_vf(struct ixgbe_hw *hw)
{
  s32 tmp;
  
#line 194 
  s32 ret_val = -100;
  
#line 196 
  tmp = ixgbevf_check_for_bit_vf(hw,32U);
  
#line 196 
  if (tmp == 0) {
    
#line 197 
    ret_val = 0;
    
#line 198 
    hw->mbx.stats.acks += 1U;
  }
  else ;
  
#line 201 
  return ret_val;
}


#line 210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_check_for_rst_vf(struct ixgbe_hw *hw)
{
  s32 tmp;
  
#line 212 
  s32 ret_val = -100;
  
#line 214 
  tmp = ixgbevf_check_for_bit_vf(hw,192U);
  
#line 214 
  if (tmp == 0) {
    
#line 216 
    ret_val = 0;
    
#line 217 
    hw->mbx.stats.rsts += 1U;
  }
  else ;
  
#line 220 
  return ret_val;
}


#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_obtain_mbx_lock_vf(struct ixgbe_hw *hw)
{
  u32 tmp;
  
#line 231 
  s32 ret_val = -100;
  
#line 234 
  ixgbe_write_reg(hw,764U,4U);
  
#line 237 
  tmp = ixgbevf_read_v2p_mailbox(hw);
  
#line 237 
  if ((tmp & 4U) != 0U) 
#line 238 
                        ret_val = 0; else ;
  
#line 240 
  return ret_val;
}


#line 251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_write_mbx_vf(struct ixgbe_hw *hw, u32 *msg, u16 size)
{
  s32 ret_val;
  u16 i;
  
#line 257 
  ret_val = ixgbevf_obtain_mbx_lock_vf(hw);
  
#line 258 
  if (ret_val != 0) 
#line 259 
                    goto out_no_write; else ;
  
#line 262 
  ixgbevf_check_for_msg_vf(hw);
  
#line 263 
  ixgbevf_check_for_ack_vf(hw);
  
#line 266 
  i = (unsigned short)0U;
  
#line 266 
  goto ldv_52863;
  ldv_52862: 
#line 267 
  ;
  
#line 267 
  ixgbe_write_reg_array(hw,512U,(unsigned int)i,*(msg + (int)i));
  
#line 266 
  i = (u16)((int)i + 1);
  ldv_52863: 
#line 267 
  ;
  
#line 266 
  if ((int)i < (int)size) 
#line 268 
                          goto ldv_52862; else 
#line 271 
                                               goto ldv_52864;
  ldv_52864: 
#line 272 
  ;
  
#line 270 
  hw->mbx.stats.msgs_tx += 1U;
  
#line 273 
  ixgbe_write_reg(hw,764U,1U);
  out_no_write: 
#line 275 
  ;
  
#line 276 
  return ret_val;
}


#line 287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_read_mbx_vf(struct ixgbe_hw *hw, u32 *msg, u16 size)
{
  u16 i;
  
#line 289 
  s32 ret_val = 0;
  
#line 293 
  ret_val = ixgbevf_obtain_mbx_lock_vf(hw);
  
#line 294 
  if (ret_val != 0) 
#line 295 
                    goto out_no_read; else ;
  
#line 298 
  i = (unsigned short)0U;
  
#line 298 
  goto ldv_52874;
  ldv_52873: 
#line 299 
  ;
  
#line 299 
  *(msg + (int)i) = ixgbe_read_reg_array(hw,512U,(unsigned int)i);
  
#line 298 
  i = (u16)((int)i + 1);
  ldv_52874: 
#line 299 
  ;
  
#line 298 
  if ((int)i < (int)size) 
#line 300 
                          goto ldv_52873; else 
#line 303 
                                               goto ldv_52875;
  ldv_52875: 
#line 304 
  ;
  
#line 302 
  ixgbe_write_reg(hw,764U,2U);
  
#line 305 
  hw->mbx.stats.msgs_rx += 1U;
  out_no_read: 
#line 307 
  ;
  
#line 308 
  return ret_val;
}


#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
static s32 ixgbevf_init_mbx_params_vf(struct ixgbe_hw *hw)
{
  s32 __retres;
  
#line 319 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 324 
  mbx->timeout = 0U;
  
#line 325 
  mbx->udelay = 500U;
  
#line 327 
  mbx->size = (unsigned short)16U;
  
#line 329 
  mbx->stats.msgs_tx = 0U;
  
#line 330 
  mbx->stats.msgs_rx = 0U;
  
#line 331 
  mbx->stats.reqs = 0U;
  
#line 332 
  mbx->stats.acks = 0U;
  
#line 333 
  mbx->stats.rsts = 0U;
  
#line 335 
  __retres = 0;
  
#line 335 
  return __retres;
}


#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/mbx.c"
struct ixgbe_mbx_operations const ixgbevf_mbx_ops = {.init_params = & ixgbevf_init_mbx_params_vf, .read = & ixgbevf_read_mbx_vf, .write = & ixgbevf_write_mbx_vf, .read_posted = & ixgbevf_read_posted_mbx, .write_posted = & ixgbevf_write_posted_mbx, .check_for_msg = & ixgbevf_check_for_msg_vf, .check_for_ack = & ixgbevf_check_for_ack_vf, .check_for_rst = & ixgbevf_check_for_rst_vf};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 403 
static void ldv_spin_lock_bh_83(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 456 
static void ldv_spin_unlock_bh_84(spinlock_t *lock);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
unsigned long msleep_interruptible(unsigned int);


#line 48 
void usleep_range(unsigned long, unsigned long);


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2182 
int dev_open(struct net_device *);


#line 2183 
int dev_close(struct net_device *);


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vmalloc(unsigned long);


#line 83 
void vfree(void const *);


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
int ixgbevf_get_reta_locked(struct ixgbe_hw *hw, u32 *reta, int num_rx_queues);


#line 214 
int ixgbevf_get_rss_key_locked(struct ixgbe_hw *hw, u8 *rss_key);


#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
char const ixgbevf_driver_name[8U];


#line 477 
char const ixgbevf_driver_version[9U];


#line 479 
void ixgbevf_up(struct ixgbevf_adapter *adapter);


#line 480 
void ixgbevf_down(struct ixgbevf_adapter *adapter);


#line 481 
void ixgbevf_reinit_locked(struct ixgbevf_adapter *adapter);


#line 482 
void ixgbevf_reset(struct ixgbevf_adapter *adapter);


#line 483 
void ixgbevf_set_ethtool_ops(struct net_device *netdev);


#line 484 
int ixgbevf_setup_rx_resources(struct ixgbevf_ring *rx_ring);


#line 485 
int ixgbevf_setup_tx_resources(struct ixgbevf_ring *tx_ring);


#line 486 
void ixgbevf_free_rx_resources(struct ixgbevf_ring *rx_ring);


#line 487 
void ixgbevf_free_tx_resources(struct ixgbevf_ring *tx_ring);


#line 488 
void ixgbevf_update_stats(struct ixgbevf_adapter *adapter);


#line 491 
void ixgbevf_write_eitr(struct ixgbevf_q_vector *q_vector);


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static struct ixgbe_stats const ixgbe_gstrings_stats[15U] = {{.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1160, .base_stat_offset = 1080, .saved_reset_offset = 1200}}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1168, .base_stat_offset = 1088, .saved_reset_offset = 1208}}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1176, .base_stat_offset = 1096, .saved_reset_offset = 1216}}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1184, .base_stat_offset = 1104, .saved_reset_offset = 1224}}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'u', (char)'s', (char)'y', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1248, .base_stat_offset = -1, .saved_reset_offset = -1}}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'r', (char)'e', (char)'s', (char)'t', (char)'a', (char)'r', (char)'t', (char)'_', (char)'q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 608, .base_stat_offset = -1, .saved_reset_offset = -1}}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'t', (char)'i', (char)'m', (char)'e', (char)'o', (char)'u', (char)'t', (char)'_', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 4, .stat_offset = 616, .base_stat_offset = -1, .saved_reset_offset = -1}}, {.stat_string = {(char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1192, .base_stat_offset = 1112, .saved_reset_offset = 1232}}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 688, .base_stat_offset = -1, .saved_reset_offset = -1}}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'p', (char)'_', (char)'p', (char)'o', (char)'l', (char)'l', (char)'_', (char)'y', (char)'i', (char)'e', (char)'l', (char)'d', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1264, .base_stat_offset = -1, .saved_reset_offset = -1}}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'p', (char)'_', (char)'c', (char)'l', (char)'e', (char)'a', (char)'n', (char)'e', (char)'d', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1272, .base_stat_offset = -1, .saved_reset_offset = -1}}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'p', (char)'_', (char)'m', (char)'i', (char)'s', (char)'s', (char)'e', (char)'s', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1280, .base_stat_offset = -1, .saved_reset_offset = -1}}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'p', (char)'_', (char)'n', (char)'a', (char)'p', (char)'i', (char)'_', (char)'y', (char)'i', (char)'e', (char)'l', (char)'d', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1288, .base_stat_offset = -1, .saved_reset_offset = -1}}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'p', (char)'_', (char)'c', (char)'l', (char)'e', (char)'a', (char)'n', (char)'e', (char)'d', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1296, .base_stat_offset = -1, .saved_reset_offset = -1}}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'p', (char)'_', (char)'m', (char)'i', (char)'s', (char)'s', (char)'e', (char)'s', (char)'\000'}, .__anonCompField_ixgbe_stats_117 = {.sizeof_stat = 8, .stat_offset = 1304, .base_stat_offset = -1, .saved_reset_offset = -1}}};

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static char const ixgbe_gstrings_test[2U][32U] = {{(char)'R', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)' ', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}, {(char)'L', (char)'i', (char)'n', (char)'k', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)' ', (char)' ', (char)'(', (char)'o', (char)'n', (char)'/', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
{
  int __retres;
  bool link_up;
  
#line 108 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 109 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 110 
  u32 link_speed = 0U;
  
#line 113 
  ecmd->supported = 4096U;
  
#line 114 
  ecmd->autoneg = (unsigned char)0U;
  
#line 115 
  ecmd->transceiver = (unsigned char)2U;
  
#line 116 
  ecmd->port = (unsigned char)255U;
  
#line 118 
  hw->mac.get_link_status = (_Bool)1;
  
#line 119 
  (*(hw->mac.ops.check_link))(hw,& link_speed,& link_up,(_Bool)0);
  
#line 121 
  if ((int)link_up != 0) {
    
#line 122 
    __u32 speed = 10000U;
    
#line 124 
    switch (link_speed) {
      case (u32)128: 
#line 125 
      ;
      
#line 126 
      speed = 10000U;
      
#line 127 
      goto ldv_53878;
      case (u32)32: 
#line 128 
      ;
      
#line 129 
      speed = 1000U;
      
#line 130 
      goto ldv_53878;
      case (u32)8: 
#line 131 
      ;
      
#line 132 
      speed = 100U;
      
#line 133 
      goto ldv_53878;
    }
    ldv_53878: 
#line 136 
    ;
    
#line 136 
    ethtool_cmd_speed_set(ecmd,speed);
    
#line 137 
    ecmd->duplex = (unsigned char)1U;
  }
  else {
    
#line 139 
    ethtool_cmd_speed_set(ecmd,4294967295U);
    
#line 140 
    ecmd->duplex = (unsigned char)255U;
  }
  
#line 143 
  __retres = 0;
  
#line 143 
  return __retres;
}


#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static u32 ixgbevf_get_msglevel(struct net_device *netdev)
{
  u32 __retres;
  
#line 148 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 150 
  __retres = (unsigned int)adapter->msg_enable;
  
#line 150 
  return __retres;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static void ixgbevf_set_msglevel(struct net_device *netdev, u32 data)
{
  
#line 155 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 157 
  adapter->msg_enable = (unsigned short)data;
  
#line 158 
  return;
}


#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_get_regs_len(struct net_device *netdev)
{
  int __retres;
  
#line 165 
  __retres = 180;
  
#line 165 
  return __retres;
}


#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static void ixgbevf_get_regs(struct net_device *netdev, struct ethtool_regs *regs, void *p)
{
  int tmp_0;
  u8 i;
  
#line 172 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 173 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 174 
  u32 *regs_buff = (u32 *)p;
  
#line 175 
  tmp_0 = ixgbevf_get_regs_len(netdev);
  
#line 175 
  u32 regs_len = (unsigned int)tmp_0;
  
#line 178 
  memset(p,0,(unsigned long)regs_len);
  
#line 180 
  regs->version = (unsigned int)((((int)hw->revision_id << 16) | 16777216) | (int)hw->device_id);
  
#line 183 
  *regs_buff = ixgbevf_read_reg(hw,0U);
  
#line 184 
  *(regs_buff + 1U) = ixgbevf_read_reg(hw,8U);
  
#line 185 
  *(regs_buff + 2U) = ixgbevf_read_reg(hw,16U);
  
#line 186 
  *(regs_buff + 3U) = ixgbevf_read_reg(hw,12688U);
  
#line 187 
  *(regs_buff + 4U) = ixgbevf_read_reg(hw,72U);
  
#line 193 
  *(regs_buff + 5U) = ixgbevf_read_reg(hw,260U);
  
#line 194 
  *(regs_buff + 6U) = ixgbevf_read_reg(hw,260U);
  
#line 195 
  *(regs_buff + 7U) = ixgbevf_read_reg(hw,264U);
  
#line 196 
  *(regs_buff + 8U) = ixgbevf_read_reg(hw,268U);
  
#line 197 
  *(regs_buff + 9U) = ixgbevf_read_reg(hw,272U);
  
#line 198 
  *(regs_buff + 10U) = ixgbevf_read_reg(hw,276U);
  
#line 199 
  *(regs_buff + 11U) = ixgbevf_read_reg(hw,2080U);
  
#line 200 
  *(regs_buff + 12U) = ixgbevf_read_reg(hw,288U);
  
#line 201 
  *(regs_buff + 13U) = ixgbevf_read_reg(hw,320U);
  
#line 204 
  i = (unsigned char)0U;
  
#line 204 
  goto ldv_53904;
  ldv_53903: 
#line 205 
  ;
  
#line 205 
  *(regs_buff + ((int)i + 14)) = ixgbevf_read_reg(hw,(unsigned int)(((int)i + 64) * 64));
  
#line 204 
  i = (u8)((int)i + 1);
  ldv_53904: 
#line 205 
  ;
  
#line 204 
  if ((unsigned int)i <= 1U) 
#line 206 
                             goto ldv_53903; else 
#line 209 
                                                  goto ldv_53905;
  ldv_53905: 
#line 210 
  ;
  
#line 206 
  i = (unsigned char)0U;
  
#line 206 
  goto ldv_53907;
  ldv_53906: 
#line 207 
  ;
  
#line 207 
  *(regs_buff + ((int)i + 16)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 4100));
  
#line 206 
  i = (u8)((int)i + 1);
  ldv_53907: 
#line 207 
  ;
  
#line 206 
  if ((unsigned int)i <= 1U) 
#line 208 
                             goto ldv_53906; else 
#line 211 
                                                  goto ldv_53908;
  ldv_53908: 
#line 212 
  ;
  
#line 208 
  i = (unsigned char)0U;
  
#line 208 
  goto ldv_53910;
  ldv_53909: 
#line 209 
  ;
  
#line 209 
  *(regs_buff + ((int)i + 18)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 4104));
  
#line 208 
  i = (u8)((int)i + 1);
  ldv_53910: 
#line 209 
  ;
  
#line 208 
  if ((unsigned int)i <= 1U) 
#line 210 
                             goto ldv_53909; else 
#line 213 
                                                  goto ldv_53911;
  ldv_53911: 
#line 214 
  ;
  
#line 210 
  i = (unsigned char)0U;
  
#line 210 
  goto ldv_53913;
  ldv_53912: 
#line 211 
  ;
  
#line 211 
  *(regs_buff + ((int)i + 20)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 4112));
  
#line 210 
  i = (u8)((int)i + 1);
  ldv_53913: 
#line 211 
  ;
  
#line 210 
  if ((unsigned int)i <= 1U) 
#line 212 
                             goto ldv_53912; else 
#line 215 
                                                  goto ldv_53914;
  ldv_53914: 
#line 216 
  ;
  
#line 212 
  i = (unsigned char)0U;
  
#line 212 
  goto ldv_53916;
  ldv_53915: 
#line 213 
  ;
  
#line 213 
  *(regs_buff + ((int)i + 22)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 4120));
  
#line 212 
  i = (u8)((int)i + 1);
  ldv_53916: 
#line 213 
  ;
  
#line 212 
  if ((unsigned int)i <= 1U) 
#line 214 
                             goto ldv_53915; else 
#line 217 
                                                  goto ldv_53917;
  ldv_53917: 
#line 218 
  ;
  
#line 214 
  i = (unsigned char)0U;
  
#line 214 
  goto ldv_53919;
  ldv_53918: 
#line 215 
  ;
  
#line 215 
  *(regs_buff + ((int)i + 24)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 4136));
  
#line 214 
  i = (u8)((int)i + 1);
  ldv_53919: 
#line 215 
  ;
  
#line 214 
  if ((unsigned int)i <= 1U) 
#line 216 
                             goto ldv_53918; else 
#line 219 
                                                  goto ldv_53920;
  ldv_53920: 
#line 220 
  ;
  
#line 216 
  i = (unsigned char)0U;
  
#line 216 
  goto ldv_53922;
  ldv_53921: 
#line 217 
  ;
  
#line 217 
  *(regs_buff + ((int)i + 26)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 4116));
  
#line 216 
  i = (u8)((int)i + 1);
  ldv_53922: 
#line 217 
  ;
  
#line 216 
  if ((unsigned int)i <= 1U) 
#line 218 
                             goto ldv_53921; else 
#line 221 
                                                  goto ldv_53923;
  ldv_53923: 
#line 222 
  ;
  
#line 220 
  *(regs_buff + 28U) = ixgbevf_read_reg(hw,768U);
  
#line 223 
  i = (unsigned char)0U;
  
#line 223 
  goto ldv_53925;
  ldv_53924: 
#line 224 
  ;
  
#line 224 
  *(regs_buff + ((int)i + 29)) = ixgbevf_read_reg(hw,(unsigned int)(((int)i + 128) * 64));
  
#line 223 
  i = (u8)((int)i + 1);
  ldv_53925: 
#line 224 
  ;
  
#line 223 
  if ((unsigned int)i <= 1U) 
#line 225 
                             goto ldv_53924; else 
#line 228 
                                                  goto ldv_53926;
  ldv_53926: 
#line 229 
  ;
  
#line 225 
  i = (unsigned char)0U;
  
#line 225 
  goto ldv_53928;
  ldv_53927: 
#line 226 
  ;
  
#line 226 
  *(regs_buff + ((int)i + 31)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 8196));
  
#line 225 
  i = (u8)((int)i + 1);
  ldv_53928: 
#line 226 
  ;
  
#line 225 
  if ((unsigned int)i <= 1U) 
#line 227 
                             goto ldv_53927; else 
#line 230 
                                                  goto ldv_53929;
  ldv_53929: 
#line 231 
  ;
  
#line 227 
  i = (unsigned char)0U;
  
#line 227 
  goto ldv_53931;
  ldv_53930: 
#line 228 
  ;
  
#line 228 
  *(regs_buff + ((int)i + 33)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 8200));
  
#line 227 
  i = (u8)((int)i + 1);
  ldv_53931: 
#line 228 
  ;
  
#line 227 
  if ((unsigned int)i <= 1U) 
#line 229 
                             goto ldv_53930; else 
#line 232 
                                                  goto ldv_53932;
  ldv_53932: 
#line 233 
  ;
  
#line 229 
  i = (unsigned char)0U;
  
#line 229 
  goto ldv_53934;
  ldv_53933: 
#line 230 
  ;
  
#line 230 
  *(regs_buff + ((int)i + 35)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 8208));
  
#line 229 
  i = (u8)((int)i + 1);
  ldv_53934: 
#line 230 
  ;
  
#line 229 
  if ((unsigned int)i <= 1U) 
#line 231 
                             goto ldv_53933; else 
#line 234 
                                                  goto ldv_53935;
  ldv_53935: 
#line 235 
  ;
  
#line 231 
  i = (unsigned char)0U;
  
#line 231 
  goto ldv_53937;
  ldv_53936: 
#line 232 
  ;
  
#line 232 
  *(regs_buff + ((int)i + 37)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 8216));
  
#line 231 
  i = (u8)((int)i + 1);
  ldv_53937: 
#line 232 
  ;
  
#line 231 
  if ((unsigned int)i <= 1U) 
#line 233 
                             goto ldv_53936; else 
#line 236 
                                                  goto ldv_53938;
  ldv_53938: 
#line 237 
  ;
  
#line 233 
  i = (unsigned char)0U;
  
#line 233 
  goto ldv_53940;
  ldv_53939: 
#line 234 
  ;
  
#line 234 
  *(regs_buff + ((int)i + 39)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 8232));
  
#line 233 
  i = (u8)((int)i + 1);
  ldv_53940: 
#line 234 
  ;
  
#line 233 
  if ((unsigned int)i <= 1U) 
#line 235 
                             goto ldv_53939; else 
#line 238 
                                                  goto ldv_53941;
  ldv_53941: 
#line 239 
  ;
  
#line 235 
  i = (unsigned char)0U;
  
#line 235 
  goto ldv_53943;
  ldv_53942: 
#line 236 
  ;
  
#line 236 
  *(regs_buff + ((int)i + 41)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 8248));
  
#line 235 
  i = (u8)((int)i + 1);
  ldv_53943: 
#line 236 
  ;
  
#line 235 
  if ((unsigned int)i <= 1U) 
#line 237 
                             goto ldv_53942; else 
#line 240 
                                                  goto ldv_53944;
  ldv_53944: 
#line 241 
  ;
  
#line 237 
  i = (unsigned char)0U;
  
#line 237 
  goto ldv_53946;
  ldv_53945: 
#line 238 
  ;
  
#line 238 
  *(regs_buff + ((int)i + 43)) = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 8252));
  
#line 237 
  i = (u8)((int)i + 1);
  ldv_53946: 
#line 238 
  ;
  
#line 237 
  if ((unsigned int)i <= 1U) 
#line 239 
                             goto ldv_53945; else 
#line 242 
                                                  goto ldv_53947;
  ldv_53947: 
#line 243 
  ;
  
#line 244 
  return;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static void ixgbevf_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *drvinfo)
{
  char const *tmp_0;
  
#line 244 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 246 
  strlcpy((char *)(& drvinfo->driver),(char const *)(& ixgbevf_driver_name),32UL);
  
#line 247 
  strlcpy((char *)(& drvinfo->version),(char const *)(& ixgbevf_driver_version),32UL);
  
#line 249 
  tmp_0 = pci_name((struct pci_dev const *)adapter->pdev);
  
#line 249 
  ;
  
#line 249 
  strlcpy((char *)(& drvinfo->bus_info),tmp_0,32UL);
  
#line 250 
  return;
}


#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static void ixgbevf_get_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  
#line 256 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 258 
  ring->rx_max_pending = 4096U;
  
#line 259 
  ring->tx_max_pending = 4096U;
  
#line 260 
  ring->rx_pending = adapter->rx_ring_count;
  
#line 261 
  ring->tx_pending = adapter->tx_ring_count;
  
#line 262 
  return;
}


#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_set_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  int __retres;
  u32 new_rx_count;
  u32 new_tx_count;
  int i;
  u32 tmp_1;
  u32 tmp_3;
  u32 tmp_5;
  u32 tmp_7;
  int tmp_8;
  int tmp_10;
  bool tmp_9;
  
#line 267 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 268 
  struct ixgbevf_ring *tx_ring = (struct ixgbevf_ring *)0;
  
#line 268 
  struct ixgbevf_ring *rx_ring = (struct ixgbevf_ring *)0;
  
#line 270 
  int err = 0;
  
#line 272 
  if (ring->rx_mini_pending != 0U || ring->rx_jumbo_pending != 0U) {
    
#line 273 
    __retres = -22;
    
#line 273 
    goto return_label;
  }
  else ;
  {
    u32 tmp_0;
    
#line 275 
    u32 __max1 = ring->tx_pending;
    
#line 275 
    u32 __max2 = 64U;
    
#line 275 
    if (__max1 > __max2) 
#line 275 
                         tmp_0 = __max1; else 
#line 275 
                                              tmp_0 = __max2;
    
#line 275 
    tmp_1 = tmp_0;
  }
  
#line 275 
  new_tx_count = tmp_1;
  {
    u32 tmp_2;
    
#line 276 
    u32 __min1 = new_tx_count;
    
#line 276 
    u32 __min2 = 4096U;
    
#line 276 
    if (__min1 < __min2) 
#line 276 
                         tmp_2 = __min1; else 
#line 276 
                                              tmp_2 = __min2;
    
#line 276 
    tmp_3 = tmp_2;
  }
  
#line 276 
  new_tx_count = tmp_3;
  
#line 277 
  new_tx_count = (new_tx_count + 7U) & 4294967288U;
  {
    u32 tmp_4;
    
#line 279 
    u32 __max1_0 = ring->rx_pending;
    
#line 279 
    u32 __max2_0 = 64U;
    
#line 279 
    if (__max1_0 > __max2_0) 
#line 279 
                             tmp_4 = __max1_0; else 
#line 279 
                                                    tmp_4 = __max2_0;
    
#line 279 
    tmp_5 = tmp_4;
  }
  
#line 279 
  new_rx_count = tmp_5;
  {
    u32 tmp_6;
    
#line 280 
    u32 __min1_0 = new_rx_count;
    
#line 280 
    u32 __min2_0 = 4096U;
    
#line 280 
    if (__min1_0 < __min2_0) 
#line 280 
                             tmp_6 = __min1_0; else 
#line 280 
                                                    tmp_6 = __min2_0;
    
#line 280 
    tmp_7 = tmp_6;
  }
  
#line 280 
  new_rx_count = tmp_7;
  
#line 281 
  new_rx_count = (new_rx_count + 7U) & 4294967288U;
  
#line 284 
  if (adapter->tx_ring_count == new_tx_count && adapter->rx_ring_count == new_rx_count) {
    
#line 286 
    __retres = 0;
    
#line 286 
    goto return_label;
  }
  else ;
  
#line 288 
  goto ldv_53982;
  ldv_53981: 
#line 289 
  ;
  
#line 289 
  usleep_range(1000UL,2000UL);
  ldv_53982: 
#line 290 
  ;
  
#line 288 
  tmp_8 = test_and_set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 288 
  if (tmp_8 != 0) 
#line 290 
                  goto ldv_53981; else 
#line 293 
                                       goto ldv_53983;
  ldv_53983: 
#line 294 
  ;
  
#line 291 
  tmp_9 = netif_running((struct net_device const *)adapter->netdev);
  
#line 291 
  if (tmp_9) 
#line 291 
             tmp_10 = 0; else 
#line 291 
                              tmp_10 = 1;
  
#line 291 
  if (tmp_10) {
    
#line 292 
    i = 0;
    
#line 292 
    goto ldv_53985;
    ldv_53984: 
#line 293 
    ;
    
#line 293 
    (adapter->tx_ring[i])->count = (unsigned short)new_tx_count;
    
#line 292 
    i += 1;
    ldv_53985: 
#line 293 
    ;
    
#line 292 
    if (adapter->num_tx_queues > i) 
#line 294 
                                    goto ldv_53984; else 
#line 297 
                                                         goto ldv_53986;
    ldv_53986: 
#line 298 
    ;
    
#line 294 
    i = 0;
    
#line 294 
    goto ldv_53988;
    ldv_53987: 
#line 295 
    ;
    
#line 295 
    (adapter->rx_ring[i])->count = (unsigned short)new_rx_count;
    
#line 294 
    i += 1;
    ldv_53988: 
#line 295 
    ;
    
#line 294 
    if (adapter->num_rx_queues > i) 
#line 296 
                                    goto ldv_53987; else 
#line 299 
                                                         goto ldv_53989;
    ldv_53989: 
#line 300 
    ;
    
#line 296 
    adapter->tx_ring_count = new_tx_count;
    
#line 297 
    adapter->rx_ring_count = new_rx_count;
    
#line 298 
    goto clear_reset;
  }
  else ;
  
#line 301 
  if (adapter->tx_ring_count != new_tx_count) {
    
#line 302 
    tx_ring = (struct ixgbevf_ring *)vmalloc((unsigned long)adapter->num_tx_queues * 168UL);
    
#line 303 
    if (tx_ring == (struct ixgbevf_ring *)0) {
      
#line 304 
      err = -12;
      
#line 305 
      goto clear_reset;
    }
    else ;
    
#line 308 
    i = 0;
    
#line 308 
    goto ldv_53995;
    ldv_53994: 
#line 309 
    ;
    
#line 310 
    *(tx_ring + i) = *(adapter->tx_ring[i]);
    
#line 311 
    (tx_ring + i)->count = (unsigned short)new_tx_count;
    
#line 312 
    err = ixgbevf_setup_tx_resources(tx_ring + i);
    
#line 313 
    if (err != 0) {
      
#line 314 
      goto ldv_53992;
      ldv_53991: 
#line 315 
      ;
      
#line 315 
      i -= 1;
      
#line 316 
      ixgbevf_free_tx_resources(tx_ring + i);
      ldv_53992: 
#line 317 
      ;
      
#line 314 
      if (i != 0) 
#line 316 
                  goto ldv_53991; else 
#line 319 
                                       goto ldv_53993;
      ldv_53993: 
#line 320 
      ;
      
#line 319 
      vfree((void const *)tx_ring);
      
#line 320 
      tx_ring = (struct ixgbevf_ring *)0;
      
#line 322 
      goto clear_reset;
    }
    else ;
    
#line 308 
    i += 1;
    ldv_53995: 
#line 309 
    ;
    
#line 308 
    if (adapter->num_tx_queues > i) 
#line 310 
                                    goto ldv_53994; else 
#line 313 
                                                         goto ldv_53996;
    ldv_53996: 
#line 314 
    ;
  }
  else ;
  
#line 327 
  if (adapter->rx_ring_count != new_rx_count) {
    
#line 328 
    rx_ring = (struct ixgbevf_ring *)vmalloc((unsigned long)adapter->num_rx_queues * 168UL);
    
#line 329 
    if (rx_ring == (struct ixgbevf_ring *)0) {
      
#line 330 
      err = -12;
      
#line 331 
      goto clear_reset;
    }
    else ;
    
#line 334 
    i = 0;
    
#line 334 
    goto ldv_54001;
    ldv_54000: 
#line 335 
    ;
    
#line 336 
    *(rx_ring + i) = *(adapter->rx_ring[i]);
    
#line 337 
    (rx_ring + i)->count = (unsigned short)new_rx_count;
    
#line 338 
    err = ixgbevf_setup_rx_resources(rx_ring + i);
    
#line 339 
    if (err != 0) {
      
#line 340 
      goto ldv_53998;
      ldv_53997: 
#line 341 
      ;
      
#line 341 
      i -= 1;
      
#line 342 
      ixgbevf_free_rx_resources(rx_ring + i);
      ldv_53998: 
#line 343 
      ;
      
#line 340 
      if (i != 0) 
#line 342 
                  goto ldv_53997; else 
#line 345 
                                       goto ldv_53999;
      ldv_53999: 
#line 346 
      ;
      
#line 345 
      vfree((void const *)rx_ring);
      
#line 346 
      rx_ring = (struct ixgbevf_ring *)0;
      
#line 348 
      goto clear_reset;
    }
    else ;
    
#line 334 
    i += 1;
    ldv_54001: 
#line 335 
    ;
    
#line 334 
    if (adapter->num_rx_queues > i) 
#line 336 
                                    goto ldv_54000; else 
#line 339 
                                                         goto ldv_54002;
    ldv_54002: 
#line 340 
    ;
  }
  else ;
  
#line 354 
  ixgbevf_down(adapter);
  
#line 357 
  if (tx_ring != (struct ixgbevf_ring *)0) {
    
#line 358 
    i = 0;
    
#line 358 
    goto ldv_54004;
    ldv_54003: 
#line 359 
    ;
    
#line 359 
    ixgbevf_free_tx_resources(adapter->tx_ring[i]);
    
#line 360 
    *(adapter->tx_ring[i]) = *(tx_ring + i);
    
#line 358 
    i += 1;
    ldv_54004: 
#line 359 
    ;
    
#line 358 
    if (adapter->num_tx_queues > i) 
#line 360 
                                    goto ldv_54003; else 
#line 363 
                                                         goto ldv_54005;
    ldv_54005: 
#line 364 
    ;
    
#line 362 
    adapter->tx_ring_count = new_tx_count;
    
#line 364 
    vfree((void const *)tx_ring);
    
#line 365 
    tx_ring = (struct ixgbevf_ring *)0;
  }
  else ;
  
#line 369 
  if (rx_ring != (struct ixgbevf_ring *)0) {
    
#line 370 
    i = 0;
    
#line 370 
    goto ldv_54007;
    ldv_54006: 
#line 371 
    ;
    
#line 371 
    ixgbevf_free_rx_resources(adapter->rx_ring[i]);
    
#line 372 
    *(adapter->rx_ring[i]) = *(rx_ring + i);
    
#line 370 
    i += 1;
    ldv_54007: 
#line 371 
    ;
    
#line 370 
    if (adapter->num_rx_queues > i) 
#line 372 
                                    goto ldv_54006; else 
#line 375 
                                                         goto ldv_54008;
    ldv_54008: 
#line 376 
    ;
    
#line 374 
    adapter->rx_ring_count = new_rx_count;
    
#line 376 
    vfree((void const *)rx_ring);
    
#line 377 
    rx_ring = (struct ixgbevf_ring *)0;
  }
  else ;
  
#line 381 
  ixgbevf_up(adapter);
  clear_reset: 
#line 383 
  ;
  
#line 385 
  if (tx_ring != (struct ixgbevf_ring *)0) {
    
#line 386 
    i = 0;
    
#line 386 
    goto ldv_54010;
    ldv_54009: 
#line 387 
    ;
    
#line 387 
    ixgbevf_free_tx_resources(tx_ring + i);
    
#line 386 
    i += 1;
    ldv_54010: 
#line 387 
    ;
    
#line 386 
    if (adapter->num_tx_queues > i) 
#line 388 
                                    goto ldv_54009; else 
#line 391 
                                                         goto ldv_54011;
    ldv_54011: 
#line 392 
    ;
    
#line 388 
    vfree((void const *)tx_ring);
  }
  else ;
  
#line 391 
  set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 392 
  __retres = err;
  return_label: 
#line 392 
                return __retres;
}


#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_get_sset_count(struct net_device *dev, int stringset)
{
  int __retres;
  
#line 397 
  switch (stringset) {
    case 0: 
#line 398 
    ;
    
#line 399 
    __retres = 2;
    
#line 399 
    goto return_label;
    case 1: 
#line 400 
    ;
    
#line 401 
    __retres = 15;
    
#line 401 
    goto return_label;
    default: 
#line 402 
    ;
    
#line 403 
    __retres = -22;
    
#line 403 
    goto return_label;
  }
  return_label: 
#line 397 
                return __retres;
}


#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static void ixgbevf_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *data)
{
  int i;
  
#line 410 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 411 
  char *base = (char *)adapter;
  
#line 414 
  u64 rx_yields = 0ULL;
  
#line 414 
  u64 rx_cleaned = 0ULL;
  
#line 414 
  u64 rx_missed = 0ULL;
  
#line 415 
  u64 tx_yields = 0ULL;
  
#line 415 
  u64 tx_cleaned = 0ULL;
  
#line 415 
  u64 tx_missed = 0ULL;
  
#line 417 
  i = 0;
  
#line 417 
  goto ldv_54037;
  ldv_54036: 
#line 418 
  ;
  
#line 418 
  rx_yields = (adapter->rx_ring[i])->stats.yields + rx_yields;
  
#line 419 
  rx_cleaned = (adapter->rx_ring[i])->stats.cleaned + rx_cleaned;
  
#line 420 
  rx_yields = (adapter->rx_ring[i])->stats.yields + rx_yields;
  
#line 417 
  i += 1;
  ldv_54037: 
#line 418 
  ;
  
#line 417 
  if (adapter->num_rx_queues > i) 
#line 419 
                                  goto ldv_54036; else 
#line 422 
                                                       goto ldv_54038;
  ldv_54038: 
#line 423 
  ;
  
#line 423 
  i = 0;
  
#line 423 
  goto ldv_54040;
  ldv_54039: 
#line 424 
  ;
  
#line 424 
  tx_yields = (adapter->tx_ring[i])->stats.yields + tx_yields;
  
#line 425 
  tx_cleaned = (adapter->tx_ring[i])->stats.cleaned + tx_cleaned;
  
#line 426 
  tx_yields = (adapter->tx_ring[i])->stats.yields + tx_yields;
  
#line 423 
  i += 1;
  ldv_54040: 
#line 424 
  ;
  
#line 423 
  if (adapter->num_tx_queues > i) 
#line 425 
                                  goto ldv_54039; else 
#line 428 
                                                       goto ldv_54041;
  ldv_54041: 
#line 429 
  ;
  
#line 429 
  adapter->bp_rx_yields = rx_yields;
  
#line 430 
  adapter->bp_rx_cleaned = rx_cleaned;
  
#line 431 
  adapter->bp_rx_missed = rx_missed;
  
#line 433 
  adapter->bp_tx_yields = tx_yields;
  
#line 434 
  adapter->bp_tx_cleaned = tx_cleaned;
  
#line 435 
  adapter->bp_tx_missed = tx_missed;
  
#line 438 
  ixgbevf_update_stats(adapter);
  
#line 439 
  i = 0;
  
#line 439 
  goto ldv_54049;
  ldv_54048: 
#line 440 
  ;
  {
    
#line 440 
    char *p = base + ixgbe_gstrings_stats[i].__anonCompField_ixgbe_stats_117.stat_offset;
    
#line 441 
    char *b = base + ixgbe_gstrings_stats[i].__anonCompField_ixgbe_stats_117.base_stat_offset;
    
#line 442 
    char *r = base + ixgbe_gstrings_stats[i].__anonCompField_ixgbe_stats_117.saved_reset_offset;
    
#line 444 
    if (ixgbe_gstrings_stats[i].__anonCompField_ixgbe_stats_117.sizeof_stat == 8) 
      
#line 445 
      if (ixgbe_gstrings_stats[i].__anonCompField_ixgbe_stats_117.base_stat_offset >= 0) 
        
#line 446 
        *(data + i) = (*((u64 *)p) - *((u64 *)b)) + *((u64 *)r); else 
                                                                   
#line 448 
                                                                   *(data + i) = *((u64 *)p);
    else 
      
#line 450 
      if (ixgbe_gstrings_stats[i].__anonCompField_ixgbe_stats_117.base_stat_offset >= 0) 
        
#line 451 
        *(data + i) = (unsigned long long)((*((u32 *)p) - *((u32 *)b)) + *((u32 *)r)); else 
                                                                    
#line 453 
                                                                    *(data + i) = (unsigned long long)*((u32 *)p);
  }
  
#line 439 
  i += 1;
  ldv_54049: 
#line 440 
  ;
  
#line 439 
  if ((unsigned int)i <= 14U) 
#line 441 
                              goto ldv_54048; else 
#line 444 
                                                   goto ldv_54050;
  ldv_54050: 
#line 445 
  ;
  
#line 446 
  return;
}


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static void ixgbevf_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  int i;
  
#line 461 
  char *p = (char *)data;
  
#line 464 
  switch (stringset) {
    case (u32)0: 
#line 465 
    ;
    
#line 466 
    memcpy((void *)data,(void const *)(& ixgbe_gstrings_test),64UL);
    
#line 468 
    goto ldv_54059;
    case (u32)1: 
#line 469 
    ;
    
#line 470 
    i = 0;
    
#line 470 
    goto ldv_54065;
    ldv_54064: 
#line 471 
    ;
    
#line 471 
    memcpy((void *)p,(void const *)(& ixgbe_gstrings_stats[i].stat_string),32UL);
    
#line 473 
    p += 32U;
    
#line 470 
    i += 1;
    ldv_54065: 
#line 471 
    ;
    
#line 470 
    if ((unsigned int)i <= 14U) 
#line 472 
                                goto ldv_54064; else 
#line 475 
                                                     goto ldv_54066;
    ldv_54066: 
#line 476 
    ;
    
#line 475 
    goto ldv_54059;
  }
  ldv_54059: 
#line 477 
  ;
  
#line 478 
  return;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_link_test(struct ixgbevf_adapter *adapter, u64 *data)
{
  int __retres;
  bool link_up;
  
#line 481 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 483 
  u32 link_speed = 0U;
  
#line 484 
  *data = 0ULL;
  
#line 486 
  (*(hw->mac.ops.check_link))(hw,& link_speed,& link_up,(_Bool)1);
  
#line 487 
  if (! link_up) 
#line 488 
                 *data = 1ULL; else ;
  
#line 490 
  __retres = (int)*data;
  
#line 490 
  return __retres;
}


#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static struct ixgbevf_reg_test const reg_test_vf[10U] = {{.reg = (unsigned short)4096U, .array_len = (unsigned char)2U, .test_type = (unsigned char)1U, .mask = 4294967168U, .write = 4294967168U}, {.reg = (unsigned short)4100U, .array_len = (unsigned char)2U, .test_type = (unsigned char)1U, .mask = 4294967295U, .write = 4294967295U}, {.reg = (unsigned short)4104U, .array_len = (unsigned char)2U, .test_type = (unsigned char)1U, .mask = 1048448U, .write = 1048575U}, {.reg = (unsigned short)4136U, .array_len = (unsigned char)2U, .test_type = (unsigned char)3U, .mask = 0U, .write = 33554432U}, {.reg = (unsigned short)4120U, .array_len = (unsigned char)2U, .test_type = (unsigned char)1U, .mask = 65535U, .write = 65535U}, {.reg = (unsigned short)4136U, .array_len = (unsigned char)2U, .test_type = (unsigned char)3U, .mask = 0U, .write = 0U}, {.reg = (unsigned short)8192U, .array_len = (unsigned char)2U, .test_type = (unsigned char)1U, .mask = 4294967168U, .write = 4294967295U}, {.reg = (unsigned short)8196U, .array_len = (unsigned char)2U, .test_type = (unsigned char)1U, .mask = 4294967295U, .write = 4294967295U}, {.reg = (unsigned short)8200U, .array_len = (unsigned char)2U, .test_type = (unsigned char)1U, .mask = 1048448U, .write = 1048448U}, {.reg = (unsigned short)0U, .array_len = (unsigned char)0, .test_type = (unsigned char)0, .mask = 0U, .write = 0U}};

#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static u32 const register_test_patterns[4U] = {1515870810U, 2779096485U, 0U, 4294967295U};

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static bool reg_pattern_test(struct ixgbevf_adapter *adapter, u64 *data, int reg, u32 mask, u32 write)
{
  bool __retres;
  u32 pat;
  u32 val;
  u32 before;
  
#line 542 
  if ((long)(adapter->hw.hw_addr == (u8 *)0U) != 0L) {
    
#line 543 
    *data = 1ULL;
    
#line 544 
    __retres = (_Bool)1;
    
#line 544 
    goto return_label;
  }
  else ;
  
#line 546 
  pat = 0U;
  
#line 546 
  goto ldv_54096;
  ldv_54095: 
#line 547 
  ;
  
#line 547 
  before = ixgbevf_read_reg(& adapter->hw,(unsigned int)reg);
  
#line 548 
  ixgbe_write_reg(& adapter->hw,(unsigned int)reg,register_test_patterns[pat] & write);
  
#line 550 
  val = ixgbevf_read_reg(& adapter->hw,(unsigned int)reg);
  
#line 551 
  if (((register_test_patterns[pat] & write) & mask) != val) {
    
#line 556 
    *data = (unsigned long long)reg;
    
#line 557 
    ixgbe_write_reg(& adapter->hw,(unsigned int)reg,before);
    
#line 558 
    __retres = (_Bool)1;
    
#line 558 
    goto return_label;
  }
  else ;
  
#line 560 
  ixgbe_write_reg(& adapter->hw,(unsigned int)reg,before);
  
#line 546 
  pat += 1U;
  ldv_54096: 
#line 547 
  ;
  
#line 546 
  if (pat <= 3U) 
#line 548 
                 goto ldv_54095; else 
#line 551 
                                      goto ldv_54097;
  ldv_54097: 
#line 552 
  ;
  
#line 562 
  __retres = (_Bool)0;
  return_label: 
#line 562 
                return __retres;
}


#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static bool reg_set_and_check(struct ixgbevf_adapter *adapter, u64 *data, int reg, u32 mask, u32 write)
{
  bool __retres;
  u32 val;
  u32 before;
  
#line 570 
  if ((long)(adapter->hw.hw_addr == (u8 *)0U) != 0L) {
    
#line 571 
    *data = 1ULL;
    
#line 572 
    __retres = (_Bool)1;
    
#line 572 
    goto return_label;
  }
  else ;
  
#line 574 
  before = ixgbevf_read_reg(& adapter->hw,(unsigned int)reg);
  
#line 575 
  ixgbe_write_reg(& adapter->hw,(unsigned int)reg,write & mask);
  
#line 576 
  val = ixgbevf_read_reg(& adapter->hw,(unsigned int)reg);
  
#line 577 
  if (((write ^ val) & mask) != 0U) {
    
#line 578 
    printk("\001",reg,val & mask,write & mask);
    
#line 580 
    *data = (unsigned long long)reg;
    
#line 581 
    ixgbe_write_reg(& adapter->hw,(unsigned int)reg,before);
    
#line 582 
    __retres = (_Bool)1;
    
#line 582 
    goto return_label;
  }
  else ;
  
#line 584 
  ixgbe_write_reg(& adapter->hw,(unsigned int)reg,before);
  
#line 585 
  __retres = (_Bool)0;
  return_label: 
#line 585 
                return __retres;
}


#line 588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_reg_test(struct ixgbevf_adapter *adapter, u64 *data)
{
  int __retres;
  struct ixgbevf_reg_test const *test;
  u32 i;
  
#line 593 
  if ((long)(adapter->hw.hw_addr == (u8 *)0U) != 0L) {
    
#line 594 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Adapter removed - register test blocked\n");
    
#line 596 
    *data = 1ULL;
    
#line 597 
    __retres = 1;
    
#line 597 
    goto return_label;
  }
  else ;
  
#line 599 
  test = (struct ixgbevf_reg_test const *)(& reg_test_vf);
  
#line 604 
  goto ldv_54125;
  ldv_54124: 
#line 605 
  ;
  
#line 605 
  i = 0U;
  
#line 605 
  goto ldv_54122;
  ldv_54121: 
#line 606 
  ;
  {
    
#line 606 
    bool b = (_Bool)0;
    
#line 608 
    switch ((int)test->test_type) {
      case 1: 
#line 609 
      ;
      
#line 610 
      b = reg_pattern_test(adapter,data,(int)((unsigned int)test->reg + i * 64U),test->mask,test->write);
      
#line 614 
      goto ldv_54115;
      case 2: 
#line 615 
      ;
      
#line 616 
      b = reg_set_and_check(adapter,data,(int)((unsigned int)test->reg + i * 64U),test->mask,test->write);
      
#line 620 
      goto ldv_54115;
      case 3: 
#line 621 
      ;
      
#line 622 
      ixgbe_write_reg(& adapter->hw,(unsigned int)test->reg + i * 64U,test->write);
      
#line 625 
      goto ldv_54115;
      case 4: 
#line 626 
      ;
      
#line 627 
      b = reg_pattern_test(adapter,data,(int)((unsigned int)test->reg + i * 4U),test->mask,test->write);
      
#line 631 
      goto ldv_54115;
      case 5: 
#line 632 
      ;
      
#line 633 
      b = reg_pattern_test(adapter,data,(int)((unsigned int)test->reg + i * 8U),test->mask,test->write);
      
#line 637 
      goto ldv_54115;
      case 6: 
#line 638 
      ;
      
#line 639 
      b = reg_pattern_test(adapter,data,(int)(((unsigned int)test->reg + i * 8U) + 4U),test->mask,test->write);
      
#line 643 
      goto ldv_54115;
    }
    ldv_54115: 
#line 645 
    ;
    
#line 645 
    if ((int)b != 0) {
      
#line 646 
      __retres = 1;
      
#line 646 
      goto return_label;
    }
    else ;
  }
  
#line 605 
  i += 1U;
  ldv_54122: 
#line 606 
  ;
  
#line 605 
  if ((unsigned int)test->array_len > i) 
#line 607 
                                         goto ldv_54121; else 
#line 610 
                                                              goto ldv_54123;
  ldv_54123: 
#line 611 
  ;
  
#line 648 
  test += 1;
  ldv_54125: 
#line 649 
  ;
  
#line 604 
  if ((unsigned int)test->reg != 0U) 
#line 606 
                                     goto ldv_54124; else 
#line 609 
                                                          goto ldv_54126;
  ldv_54126: 
#line 610 
  ;
  
#line 651 
  *data = 0ULL;
  
#line 652 
  __retres = (int)*data;
  return_label: 
#line 652 
                return __retres;
}


#line 655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static void ixgbevf_diag_test(struct net_device *netdev, struct ethtool_test *eth_test, u64 *data)
{
  
#line 658 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 659 
  bool if_running = netif_running((struct net_device const *)netdev);
  
#line 661 
  if ((long)(adapter->hw.hw_addr == (u8 *)0U) != 0L) {
    
#line 662 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Adapter removed - test blocked\n");
    
#line 664 
    *data = 1ULL;
    
#line 665 
    *(data + 1U) = 1ULL;
    
#line 666 
    eth_test->flags |= 2U;
    
#line 667 
    goto return_label;
  }
  else ;
  
#line 669 
  set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 670 
  if (eth_test->flags == 1U) {
    int tmp_1;
    int tmp_2;
    
#line 678 
    tmp_1 = ixgbevf_link_test(adapter,data + 1U);
    
#line 678 
    if (tmp_1 != 0) 
#line 679 
                    eth_test->flags |= 2U; else ;
    
#line 681 
    if ((int)if_running != 0) 
#line 683 
                              dev_close(netdev); else 
#line 685 
                                                      ixgbevf_reset(adapter);
    
#line 688 
    tmp_2 = ixgbevf_reg_test(adapter,data);
    
#line 688 
    if (tmp_2 != 0) 
#line 689 
                    eth_test->flags |= 2U; else ;
    
#line 691 
    ixgbevf_reset(adapter);
    
#line 693 
    set_bit(0L,(unsigned long volatile *)(& adapter->state));
    
#line 694 
    if ((int)if_running != 0) 
#line 695 
                              dev_open(netdev); else ;
  }
  else {
    int tmp_3;
    
#line 699 
    tmp_3 = ixgbevf_link_test(adapter,data + 1U);
    
#line 699 
    if (tmp_3 != 0) 
#line 700 
                    eth_test->flags |= 2U; else ;
    
#line 703 
    *data = 0ULL;
    
#line 705 
    set_bit(0L,(unsigned long volatile *)(& adapter->state));
  }
  
#line 707 
  msleep_interruptible(4000U);
  return_label: 
#line 708 
                return;
}


#line 710  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_nway_reset(struct net_device *netdev)
{
  int __retres;
  bool tmp_0;
  
#line 712 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 714 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 714 
  if ((int)tmp_0 != 0) 
#line 715 
                       ixgbevf_reinit_locked(adapter); else ;
  
#line 717 
  __retres = 0;
  
#line 717 
  return __retres;
}


#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec)
{
  int __retres;
  
#line 723 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 726 
  if ((unsigned int)adapter->rx_itr_setting <= 1U) 
#line 727 
                                                   ec->rx_coalesce_usecs = (unsigned int)adapter->rx_itr_setting; else 
                                                                    
#line 729 
                                                                    ec->rx_coalesce_usecs = (unsigned int)((int)adapter->rx_itr_setting >> 2);
  
#line 732 
  if ((unsigned int)(adapter->q_vector[0])->tx.count != 0U && (unsigned int)(adapter->q_vector[0])->rx.count != 0U) {
    
#line 733 
    __retres = 0;
    
#line 733 
    goto return_label;
  }
  else ;
  
#line 736 
  if ((unsigned int)adapter->tx_itr_setting <= 1U) 
#line 737 
                                                   ec->tx_coalesce_usecs = (unsigned int)adapter->tx_itr_setting; else 
                                                                    
#line 739 
                                                                    ec->tx_coalesce_usecs = (unsigned int)((int)adapter->tx_itr_setting >> 2);
  
#line 741 
  __retres = 0;
  return_label: 
#line 741 
                return __retres;
}


#line 744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec)
{
  int __retres;
  struct ixgbevf_q_vector *q_vector;
  int num_vectors;
  int i;
  u16 tx_itr_param;
  u16 rx_itr_param;
  
#line 747 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 753 
  if (((unsigned int)(adapter->q_vector[0])->tx.count != 0U && (unsigned int)(adapter->q_vector[0])->rx.count != 0U) && ec->tx_coalesce_usecs != 0U) {
    
#line 755 
    __retres = -22;
    
#line 755 
    goto return_label;
  }
  else ;
  
#line 757 
  if (ec->rx_coalesce_usecs > 1022U || ec->tx_coalesce_usecs > 1022U) {
    
#line 759 
    __retres = -22;
    
#line 759 
    goto return_label;
  }
  else ;
  
#line 761 
  if (ec->rx_coalesce_usecs > 1U) 
#line 762 
                                  adapter->rx_itr_setting = (unsigned short)((int)((unsigned short)ec->rx_coalesce_usecs) << 2U); else 
                                                                    
#line 764 
                                                                    adapter->rx_itr_setting = (unsigned short)ec->rx_coalesce_usecs;
  
#line 766 
  if ((unsigned int)adapter->rx_itr_setting == 1U) 
#line 767 
                                                   rx_itr_param = (unsigned short)200U; else 
                                                                    
#line 769 
                                                                    rx_itr_param = adapter->rx_itr_setting;
  
#line 771 
  if (ec->tx_coalesce_usecs > 1U) 
#line 772 
                                  adapter->tx_itr_setting = (unsigned short)((int)((unsigned short)ec->tx_coalesce_usecs) << 2U); else 
                                                                    
#line 774 
                                                                    adapter->tx_itr_setting = (unsigned short)ec->tx_coalesce_usecs;
  
#line 776 
  if ((unsigned int)adapter->tx_itr_setting == 1U) 
#line 777 
                                                   tx_itr_param = (unsigned short)400U; else 
                                                                    
#line 779 
                                                                    tx_itr_param = adapter->tx_itr_setting;
  
#line 781 
  num_vectors = adapter->num_msix_vectors + -1;
  
#line 783 
  i = 0;
  
#line 783 
  goto ldv_54154;
  ldv_54153: 
#line 784 
  ;
  
#line 784 
  q_vector = adapter->q_vector[i];
  
#line 785 
  if ((unsigned int)q_vector->tx.count != 0U && (unsigned int)q_vector->rx.count == 0U) 
    
#line 787 
    q_vector->itr = tx_itr_param; else 
#line 790 
                                       q_vector->itr = rx_itr_param;
  
#line 791 
  ixgbevf_write_eitr(q_vector);
  
#line 783 
  i += 1;
  ldv_54154: 
#line 784 
  ;
  
#line 783 
  if (i < num_vectors) 
#line 785 
                       goto ldv_54153; else 
#line 788 
                                            goto ldv_54155;
  ldv_54155: 
#line 789 
  ;
  
#line 794 
  __retres = 0;
  return_label: 
#line 794 
                return __retres;
}


#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_get_rxnfc(struct net_device *dev, struct ethtool_rxnfc *info, u32 *rules)
{
  int __retres;
  
#line 800 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 802 
  switch (info->cmd) {
    case (__u32)45: 
#line 803 
    ;
    
#line 804 
    info->data = (unsigned long long)adapter->num_rx_queues;
    
#line 805 
    __retres = 0;
    
#line 805 
    goto return_label;
    default: 
#line 806 
    ;
    
#line 808 
    __retres = -95;
    
#line 808 
    goto return_label;
  }
  return_label: 
#line 802 
                return __retres;
}


#line 812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static u32 ixgbevf_get_rxfh_indir_size(struct net_device *netdev)
{
  u32 __retres;
  
#line 814 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 817 
  if (adapter->hw.mac.type <= (unsigned int)ixgbe_mac_X540_vf) {
    
#line 818 
    __retres = 128U;
    
#line 818 
    goto return_label;
  }
  else ;
  
#line 820 
  __retres = 0U;
  return_label: 
#line 820 
                return __retres;
}


#line 823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static u32 ixgbevf_get_rxfh_key_size(struct net_device *netdev)
{
  u32 __retres;
  
#line 825 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 828 
  if (adapter->hw.mac.type <= (unsigned int)ixgbe_mac_X540_vf) {
    
#line 829 
    __retres = 40U;
    
#line 829 
    goto return_label;
  }
  else ;
  
#line 831 
  __retres = 0U;
  return_label: 
#line 831 
                return __retres;
}


#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static int ixgbevf_get_rxfh(struct net_device *netdev, u32 *indir, u8 *key, u8 *hfunc)
{
  int __retres;
  
#line 837 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 838 
  int err = 0;
  
#line 840 
  if (hfunc != (u8 *)0U) 
#line 841 
                         *hfunc = (unsigned char)1U; else ;
  
#line 846 
  if (indir == (u32 *)0U && key == (u8 *)0U) {
    
#line 847 
    __retres = 0;
    
#line 847 
    goto return_label;
  }
  else ;
  
#line 849 
  ldv_spin_lock_bh_83(& adapter->mbx_lock);
  
#line 850 
  if (indir != (u32 *)0U) 
#line 851 
                          err = ixgbevf_get_reta_locked(& adapter->hw,indir,adapter->num_rx_queues); else ;
  
#line 854 
  if (err == 0 && key != (u8 *)0U) 
#line 855 
                                   err = ixgbevf_get_rss_key_locked(& adapter->hw,key); else ;
  
#line 857 
  ldv_spin_unlock_bh_84(& adapter->mbx_lock);
  
#line 859 
  __retres = err;
  return_label: 
#line 859 
                return __retres;
}


#line 862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
static struct ethtool_ops const ixgbevf_ethtool_ops = {.get_settings = & ixgbevf_get_settings, .set_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .get_drvinfo = & ixgbevf_get_drvinfo, .get_regs_len = & ixgbevf_get_regs_len, .get_regs = & ixgbevf_get_regs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & ixgbevf_get_msglevel, .set_msglevel = & ixgbevf_set_msglevel, .nway_reset = & ixgbevf_nway_reset, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & ixgbevf_get_coalesce, .set_coalesce = & ixgbevf_set_coalesce, .get_ringparam = & ixgbevf_get_ringparam, .set_ringparam = & ixgbevf_set_ringparam, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = & ixgbevf_diag_test, .get_strings = & ixgbevf_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & ixgbevf_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & ixgbevf_get_sset_count, .get_rxnfc = & ixgbevf_get_rxnfc, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = & ixgbevf_get_rxfh_key_size, .get_rxfh_indir_size = & ixgbevf_get_rxfh_indir_size, .get_rxfh = & ixgbevf_get_rxfh, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ethtool.c"
void ixgbevf_set_ethtool_ops(struct net_device *netdev)
{
  
#line 887 
  netdev->ethtool_ops = & ixgbevf_ethtool_ops;
  
#line 888 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_2)(struct net_device *) = & ethtool_op_get_link;

#line 73  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_ixgbevf_nway_reset_25(struct net_device *arg0)
{
  int tmp;
  
#line 74 
  tmp = ixgbevf_nway_reset(arg0);
  
#line 74 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_ixgbevf_set_coalesce_29(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 79 
  tmp = ixgbevf_set_coalesce(arg0,arg1);
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_ixgbevf_get_rxnfc_24(struct net_device *arg0, struct ethtool_rxnfc *arg1, unsigned int *arg2)
{
  int tmp;
  
#line 84 
  tmp = ixgbevf_get_rxnfc(arg0,arg1,arg2);
  
#line 84 
  return tmp;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_ixgbevf_get_ringparam_27(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 89 
  ixgbevf_get_ringparam(arg0,arg1);
  
#line 90 
  return;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_ixgbevf_get_settings_17(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 94 
  tmp = ixgbevf_get_settings(arg0,arg1);
  
#line 94 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_ixgbevf_set_msglevel_26(struct net_device *arg0, unsigned int arg1)
{
  
#line 99 
  ixgbevf_set_msglevel(arg0,arg1);
  
#line 100 
  return;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_ixgbevf_get_ethtool_stats_7(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 104 
  ixgbevf_get_ethtool_stats(arg0,arg1,arg2);
  
#line 105 
  return;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
unsigned int ldv_emg_wrapper_ixgbevf_get_msglevel_14(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 109 
  tmp = ixgbevf_get_msglevel(arg0);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_ixgbevf_set_ringparam_13(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 114 
  tmp = ixgbevf_set_ringparam(arg0,arg1);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_ixgbevf_get_sset_count_23(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 119 
  tmp = ixgbevf_get_sset_count(arg0,arg1);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_ixgbevf_get_drvinfo_9(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 124 
  ixgbevf_get_drvinfo(arg0,arg1);
  
#line 125 
  return;
}


#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_ixgbevf_get_regs_len_28(struct net_device *arg0)
{
  int tmp;
  
#line 129 
  tmp = ixgbevf_get_regs_len(arg0);
  
#line 129 
  return tmp;
}


#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
unsigned int ldv_emg_wrapper_ixgbevf_get_rxfh_indir_size_3(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 134 
  tmp = ixgbevf_get_rxfh_indir_size(arg0);
  
#line 134 
  return tmp;
}


#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_ixgbevf_get_regs_22(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 139 
  ixgbevf_get_regs(arg0,arg1,arg2);
  
#line 140 
  return;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_ixgbevf_get_strings_4(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 144 
  ixgbevf_get_strings(arg0,arg1,arg2);
  
#line 145 
  return;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_ixgbevf_get_rxfh_11(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char *arg3)
{
  int tmp;
  
#line 149 
  tmp = ixgbevf_get_rxfh(arg0,arg1,arg2,arg3);
  
#line 149 
  return tmp;
}


#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
unsigned int ldv_emg_wrapper_ixgbevf_get_rxfh_key_size_10(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 154 
  tmp = ixgbevf_get_rxfh_key_size(arg0);
  
#line 154 
  return tmp;
}


#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_ixgbevf_diag_test_19(struct net_device *arg0, struct ethtool_test *arg1, unsigned long long *arg2)
{
  
#line 159 
  ixgbevf_diag_test(arg0,arg1,arg2);
  
#line 160 
  return;
}


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_ixgbevf_get_coalesce_21(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 164 
  tmp = ixgbevf_get_coalesce(arg0,arg1);
  
#line 164 
  return tmp;
}


#line 949  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
static void ldv_spin_lock_bh_83(spinlock_t *lock)
{
  
#line 953 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 955 
  spin_lock_bh(lock);
  
#line 956 
  return;
}


#line 959  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
static void ldv_spin_unlock_bh_84(spinlock_t *lock)
{
  
#line 963 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 965 
  spin_unlock_bh(lock);
  
#line 966 
  return;
}

void __builtin_prefetch(void const * , ...);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_next_bit(unsigned long const *, unsigned long, unsigned long);


#line 42 
unsigned long find_first_bit(unsigned long const *, unsigned long);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  
#line 47 
  unsigned long res = 0UL;
  
#line 48 
  ldv_inline_asm();
  
#line 58 
  return res;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  unsigned long tmp_0;
  
#line 80 
  if (0 != 0) 
#line 80 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 8) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 8) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 16) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 16) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 24) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 24) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 128ULL) != 0ULL)))) + (((unsigned int)((((((((((unsigned long long)(w >> 32) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 32) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 40) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 40) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 48) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 48) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 56) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 56) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 128ULL) != 0ULL))))); else 
                                                                    
#line 80 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  
#line 80 
  return tmp_0;
}


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
char *strcpy(char *, char const *);


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
int __bitmap_weight(unsigned long const *, unsigned int);


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long const *src, unsigned int nbits)
{
  int __retres;
  int tmp_0;
  
#line 300 
  if (0 != 0 && nbits <= 64U) {
    unsigned long tmp;
    
#line 301 
    tmp = hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
    
#line 301 
    __retres = (int)tmp;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 302 
  tmp_0 = __bitmap_weight(src,nbits);
  
#line 302 
  __retres = tmp_0;
  return_label: 
#line 302 
                return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
extern int nr_cpu_ids;


#line 89 
extern struct cpumask const * const cpu_online_mask;


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_weight(struct cpumask const *srcp)
{
  unsigned int __retres;
  int tmp;
  
#line 476 
  tmp = bitmap_weight((unsigned long const *)(& srcp->bits),(unsigned int)nr_cpu_ids);
  
#line 476 
  __retres = (unsigned int)tmp;
  
#line 476 
  return __retres;
}


#line 697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void prefetchw(void const *x)
{
  
#line 699 
  ldv_inline_asm();
  
#line 700 
  return;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_73(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_75(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_77(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_79(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_81(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_89(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_91(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_93(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_95(spinlock_t *lock);


#line 419 
static void ldv_spin_lock_bh_97(spinlock_t *lock);


#line 423 
static void ldv_spin_lock_bh_99(spinlock_t *lock);


#line 427 
static void ldv_spin_lock_bh_103(spinlock_t *lock);


#line 431 
static void ldv_spin_lock_bh_106(spinlock_t *lock);


#line 435 
static void ldv_spin_lock_bh_108(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 436 
static void ldv_spin_unlock_bh_74(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_76(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_78(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_80(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_82(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_90(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_92(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_94(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_96(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_98(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_100(spinlock_t *lock);


#line 480 
static void ldv_spin_unlock_bh_104(spinlock_t *lock);


#line 484 
static void ldv_spin_unlock_bh_107(spinlock_t *lock);


#line 488 
static void ldv_spin_unlock_bh_109(spinlock_t *lock);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_101(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_105(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_102(struct timer_list *ldv_func_arg1);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_83(struct work_struct *work);


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/memory_hotplug.h"
extern pg_data_t *node_data[];


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 181 
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/topology.h"
__inline static int numa_node_id(void)
{
  int tmp_3;
  {
    int pscr_ret__;
    {
      
#line 77 
      void const *__vpp_verify = (void const *)0;
      
#line 77 
      void const *tmp = __vpp_verify;
    }
    
#line 77 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 77 
      ;
      {
        int pfo_ret__;
        
#line 77 
        switch (4UL) {
          case (unsigned long)1: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14403;
          case (unsigned long)2: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14403;
          case (unsigned long)4: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14403;
          case (unsigned long)8: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14403;
          default: 
#line 77 
          ;
          
#line 77 
          __bad_percpu_size();
        }
        ldv_14403: 
#line 77 
        ;
        
#line 77 
        tmp_0 = pfo_ret__;
      }
      
#line 77 
      pscr_ret__ = tmp_0;
      
#line 77 
      goto ldv_14409;
      case (unsigned long)2: 
#line 77 
      ;
      {
        int pfo_ret___0;
        
#line 77 
        switch (4UL) {
          case (unsigned long)1: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14413;
          case (unsigned long)2: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14413;
          case (unsigned long)4: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14413;
          case (unsigned long)8: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14413;
          default: 
#line 77 
          ;
          
#line 77 
          __bad_percpu_size();
        }
        ldv_14413: 
#line 77 
        ;
        
#line 77 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 77 
      pscr_ret__ = tmp_0_0;
      
#line 77 
      goto ldv_14409;
      case (unsigned long)4: 
#line 77 
      ;
      {
        int pfo_ret___1;
        
#line 77 
        switch (4UL) {
          case (unsigned long)1: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14422;
          case (unsigned long)2: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14422;
          case (unsigned long)4: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14422;
          case (unsigned long)8: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14422;
          default: 
#line 77 
          ;
          
#line 77 
          __bad_percpu_size();
        }
        ldv_14422: 
#line 77 
        ;
        
#line 77 
        tmp_1 = pfo_ret___1;
      }
      
#line 77 
      pscr_ret__ = tmp_1;
      
#line 77 
      goto ldv_14409;
      case (unsigned long)8: 
#line 77 
      ;
      {
        int pfo_ret___2;
        
#line 77 
        switch (4UL) {
          case (unsigned long)1: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14431;
          case (unsigned long)2: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14431;
          case (unsigned long)4: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14431;
          case (unsigned long)8: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_14431;
          default: 
#line 77 
          ;
          
#line 77 
          __bad_percpu_size();
        }
        ldv_14431: 
#line 77 
        ;
        
#line 77 
        tmp_2 = pfo_ret___2;
      }
      
#line 77 
      pscr_ret__ = tmp_2;
      
#line 77 
      goto ldv_14409;
      default: 
#line 77 
      ;
      
#line 77 
      __bad_size_call_parameter();
      
#line 77 
      goto ldv_14409;
    }
    ldv_14409: 
#line 77 
    ;
    
#line 77 
    tmp_3 = pscr_ret__;
  }
  
#line 77 
  return tmp_3;
}


#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/topology.h"
__inline static int numa_mem_id(void)
{
  int tmp;
  
#line 168 
  tmp = numa_node_id();
  
#line 168 
  return tmp;
}


#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static int gfp_zonelist(gfp_t flags)
{
  int __retres;
  
#line 265 
  if ((long)((flags & 262144U) != 0U) != 0L) {
    
#line 266 
    __retres = 1;
    
#line 266 
    goto return_label;
  }
  else ;
  
#line 268 
  __retres = 0;
  return_label: 
#line 268 
                return __retres;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct zonelist *node_zonelist(int nid, gfp_t flags)
{
  struct zonelist *__retres;
  int tmp;
  
#line 282 
  tmp = gfp_zonelist(flags);
  
#line 282 
  ;
  
#line 282 
  __retres = (struct zonelist *)(& (node_data[nid])->node_zonelists) + tmp;
  
#line 282 
  return __retres;
}


#line 293 
struct page *__alloc_pages_nodemask(gfp_t, unsigned int, struct zonelist *, nodemask_t *);


#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *__alloc_pages(gfp_t gfp_mask, unsigned int order, struct zonelist *zonelist)
{
  struct page *tmp;
  
#line 300 
  tmp = __alloc_pages_nodemask(gfp_mask,order,zonelist,(nodemask_t *)0);
  
#line 300 
  return tmp;
}


#line 303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages_node(int nid, gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp_0;
  struct zonelist *tmp;
  
#line 307 
  if (nid < 0) 
#line 308 
               nid = numa_node_id(); else ;
  
#line 310 
  tmp = node_zonelist(nid,gfp_mask);
  
#line 310 
  ;
  
#line 310 
  ;
  
#line 310 
  tmp_0 = __alloc_pages(gfp_mask,order,tmp);
  
#line 310 
  return tmp_0;
}


#line 366 
void __free_pages(struct page *, unsigned int);


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_channel_offline(struct pci_dev *pdev)
{
  int __retres;
  
#line 403 
  __retres = pdev->error_state != 1U;
  
#line 403 
  return __retres;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 953 
int pci_enable_device_mem(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_115(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_116(struct pci_driver *ldv_func_arg1);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_48.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static int page_count(struct page *page)
{
  int tmp_0;
  struct page *tmp;
  
#line 498 
  tmp = compound_head(page);
  
#line 498 
  tmp_0 = atomic_read((atomic_t const *)(& tmp->__anonCompField_page_44.__anonCompField___anonstruct_160_43.__anonCompField___anonunion_162_42._count));
  
#line 498 
  return tmp_0;
}


#line 569 
void put_page(struct page *);


#line 760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static int page_to_nid(struct page const *page)
{
  int __retres;
  
#line 762 
  __retres = (int)(page->flags >> 54UL);
  
#line 762 
  return __retres;
}


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static bool page_is_pfmemalloc(struct page *page)
{
  bool __retres;
  
#line 1037 
  __retres = (_Bool)(page->__anonCompField_page_44.__anonCompField___anonstruct_160_39.index == 18446744073709551615UL);
  
#line 1037 
  return __retres;
}


#line 1216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
void pci_disable_msix(struct pci_dev *);


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 67 
void debug_dma_sync_single_range_for_cpu(struct device *, dma_addr_t, unsigned long, size_t, int);


#line 73 
void debug_dma_sync_single_range_for_device(struct device *, dma_addr_t, unsigned long, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_range_for_cpu(struct device *dev, dma_addr_t addr, unsigned long offset, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 132 
  struct dma_map_ops const *ops = get_dma_ops(dev);
  
#line 134 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 134 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 136 
    ldv_inline_asm();
    
#line 134 
    ;
  }
  else ;
  
#line 135 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 136 
    (*(ops->sync_single_for_cpu))(dev,addr + (unsigned long long)offset,size,dir); else ;
  
#line 137 
  debug_dma_sync_single_range_for_cpu(dev,addr,offset,size,(int)dir);
  
#line 138 
  return;
}


#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_range_for_device(struct device *dev, dma_addr_t addr, unsigned long offset, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 146 
  struct dma_map_ops const *ops = get_dma_ops(dev);
  
#line 148 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 148 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 150 
    ldv_inline_asm();
    
#line 148 
    ;
  }
  else ;
  
#line 149 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 150 
    (*(ops->sync_single_for_device))(dev,addr + (unsigned long long)offset,size,dir); else ;
  
#line 151 
  debug_dma_sync_single_range_for_device(dev,addr,offset,size,(int)dir);
  
#line 152 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_mask_and_coherent(struct device *dev, u64 mask)
{
  
#line 118 
  int rc = dma_set_mask(dev,mask);
  
#line 119 
  if (rc == 0) 
#line 120 
               dma_set_coherent_mask(dev,mask); else ;
  
#line 121 
  return rc;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
int net_ratelimit(void);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_fold(__wsum sum)
{
  __sum16 __retres;
  
#line 24 
  ldv_inline_asm();
  
#line 29 
  __retres = (unsigned short)(~ sum >> 16);
  
#line 29 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  
#line 89 
  ldv_inline_asm();
  
#line 97 
  return sum;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_tcpudp_magic(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  __sum16 tmp_0;
  __wsum tmp;
  
#line 116 
  tmp = csum_tcpudp_nofold(saddr,daddr,(unsigned short)((int)len),(unsigned short)((int)proto),sum);
  
#line 116 
  tmp_0 = csum_fold(tmp);
  
#line 116 
  return tmp_0;
}


#line 179 
__sum16 csum_ipv6_magic(struct in6_addr const *, struct in6_addr const *, __u32, unsigned short, __wsum);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_sub(skb_frag_t *frag, int delta)
{
  
#line 247 
  frag->size -= (unsigned int)delta;
  
#line 248 
  return;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 852 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 862 
int skb_pad(struct sk_buff *, int);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_header_cloned(struct sk_buff const *skb)
{
  int __retres;
  int dataref;
  unsigned char *tmp;
  
#line 1131 
  if ((unsigned int)*((unsigned char *)skb + 142UL) == 0U) {
    
#line 1132 
    __retres = 0;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1134 
  tmp = skb_end_pointer(skb);
  
#line 1134 
  dataref = atomic_read((atomic_t const *)(& ((struct skb_shared_info *)tmp)->dataref));
  
#line 1135 
  dataref = (dataref & 65535) - (dataref >> 16);
  
#line 1136 
  __retres = dataref != 1;
  return_label: 
#line 1136 
                return __retres;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1639 
void skb_add_rx_frag(struct sk_buff *, int, struct page *, int, int, unsigned int);


#line 1650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_tail_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1652 
  __retres = skb->head + skb->tail;
  
#line 1652 
  return __retres;
}


#line 1689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *__skb_put(struct sk_buff *skb, unsigned int len)
{
  bool tmp_1;
  
#line 1691 
  unsigned char *tmp = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 1692 
  tmp_1 = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 1692 
  if ((long)((int)tmp_1 != 0) != 0L) {
    
#line 1694 
    ldv_inline_asm();
    
#line 1692 
    ;
  }
  else ;
  
#line 1693 
  skb->tail += len;
  
#line 1694 
  skb->len += len;
  
#line 1695 
  return tmp;
}


#line 1719 
unsigned char *__pskb_pull_tail(struct sk_buff *, int);


#line 1735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int pskb_may_pull(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  unsigned int tmp;
  unsigned char *tmp_1;
  unsigned int tmp_0;
  
#line 1737 
  tmp = skb_headlen((struct sk_buff const *)skb);
  
#line 1737 
  ;
  
#line 1737 
  if ((long)(tmp >= len) != 0L) {
    
#line 1738 
    __retres = 1;
    
#line 1738 
    goto return_label;
  }
  else ;
  
#line 1739 
  if ((long)(skb->len < len) != 0L) {
    
#line 1740 
    __retres = 0;
    
#line 1740 
    goto return_label;
  }
  else ;
  
#line 1741 
  tmp_0 = skb_headlen((struct sk_buff const *)skb);
  
#line 1741 
  ;
  
#line 1741 
  ;
  
#line 1741 
  tmp_1 = __pskb_pull_tail(skb,(int)(len - tmp_0));
  
#line 1741 
  __retres = tmp_1 != (unsigned char *)0U;
  return_label: 
#line 1741 
                return __retres;
}


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_mac_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1915 
  __retres = skb->head + (int)skb->mac_header;
  
#line 1915 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 1972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u32 skb_network_header_len(struct sk_buff const *skb)
{
  u32 __retres;
  
#line 1974 
  __retres = (unsigned int)((int)skb->transport_header - (int)skb->network_header);
  
#line 1974 
  return __retres;
}


#line 1982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_network_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1984 
  tmp = skb_network_header(skb);
  
#line 1984 
  ;
  
#line 1984 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1984 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *__dev_alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 2226 
  gfp_mask |= 24832U;
  
#line 2228 
  tmp = alloc_pages_node(-1,gfp_mask,order);
  
#line 2228 
  return tmp;
}


#line 2244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *__dev_alloc_page(gfp_t gfp_mask)
{
  struct page *tmp;
  
#line 2246 
  tmp = __dev_alloc_pages(gfp_mask,0U);
  
#line 2246 
  return tmp;
}


#line 2249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *dev_alloc_page(void)
{
  struct page *tmp;
  
#line 2251 
  tmp = __dev_alloc_page(32U);
  
#line 2251 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void *skb_frag_address(skb_frag_t const *frag)
{
  void *__retres;
  void *tmp_0;
  struct page *tmp;
  
#line 2332 
  tmp = skb_frag_page(frag);
  
#line 2332 
  tmp_0 = lowmem_page_address((struct page const *)tmp);
  
#line 2332 
  ;
  
#line 2332 
  __retres = tmp_0 + frag->page_offset;
  
#line 2332 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_cow(struct sk_buff *skb, unsigned int headroom, int cloned)
{
  int __retres;
  unsigned int tmp_0;
  
#line 2430 
  int delta = 0;
  
#line 2432 
  tmp_0 = skb_headroom((struct sk_buff const *)skb);
  
#line 2432 
  ;
  
#line 2432 
  if (tmp_0 < headroom) {
    unsigned int tmp;
    
#line 2433 
    tmp = skb_headroom((struct sk_buff const *)skb);
    
#line 2433 
    delta = (int)(headroom - tmp);
  }
  else ;
  
#line 2435 
  if (delta != 0 || cloned != 0) {
    int tmp_5;
    int tmp_2;
    int tmp_4;
    {
      int tmp_1;
      
#line 2436 
      int _max1 = 32;
      
#line 2436 
      int _max2 = 64;
      
#line 2436 
      if (_max1 > _max2) 
#line 2436 
                         tmp_1 = _max1; else 
#line 2436 
                                             tmp_1 = _max2;
      
#line 2436 
      tmp_2 = tmp_1;
    }
    {
      int tmp_3;
      
#line 2436 
      int _max1_0 = 32;
      
#line 2436 
      int _max2_0 = 64;
      
#line 2436 
      if (_max1_0 > _max2_0) 
#line 2436 
                             tmp_3 = _max1_0; else 
#line 2436 
                                                   tmp_3 = _max2_0;
      
#line 2436 
      tmp_4 = tmp_3;
    }
    
#line 2436 
    ;
    
#line 2436 
    ;
    
#line 2436 
    tmp_5 = pskb_expand_head(skb,((tmp_2 + -1) + delta) & ~ (tmp_4 + -1),0,32U);
    
#line 2436 
    __retres = tmp_5;
    
#line 2436 
    goto return_label;
  }
  else ;
  
#line 2438 
  __retres = 0;
  return_label: 
#line 2438 
                return __retres;
}


#line 2468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_cow_head(struct sk_buff *skb, unsigned int headroom)
{
  int tmp_0;
  int tmp;
  
#line 2470 
  tmp = skb_header_cloned((struct sk_buff const *)skb);
  
#line 2470 
  ;
  
#line 2470 
  ;
  
#line 2470 
  tmp_0 = __skb_cow(skb,headroom,tmp);
  
#line 2470 
  return tmp_0;
}


#line 2501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_put_padto(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  
#line 2503 
  unsigned int size = skb->len;
  
#line 2505 
  if ((long)(size < len) != 0L) {
    int tmp;
    
#line 2506 
    len -= size;
    
#line 2507 
    tmp = skb_pad(skb,(int)len);
    
#line 2507 
    if (tmp != 0) {
      
#line 2508 
      __retres = -12;
      
#line 2508 
      goto return_label;
    }
    else ;
    
#line 2509 
    __skb_put(skb,len);
  }
  else ;
  
#line 2511 
  __retres = 0;
  return_label: 
#line 2511 
                return __retres;
}


#line 2703 
int skb_copy_bits(struct sk_buff const *, int, void *, int);


#line 2751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void *__skb_header_pointer(struct sk_buff const *skb, int offset, int len, void *data, int hlen, void *buffer)
{
  void *__retres;
  
#line 2754 
  if (hlen - offset >= len) {
    
#line 2755 
    __retres = data + offset;
    
#line 2755 
    goto return_label;
  }
  else ;
  
#line 2757 
  if (skb == (struct sk_buff const *)0) {
    
#line 2759 
    __retres = (void *)0;
    
#line 2759 
    goto return_label;
  }
  else {
    int tmp;
    
#line 2757 
    tmp = skb_copy_bits(skb,offset,buffer,len);
    
#line 2757 
    if (tmp < 0) {
      
#line 2759 
      __retres = (void *)0;
      
#line 2759 
      goto return_label;
    }
    else ;
  }
  
#line 2761 
  __retres = buffer;
  return_label: 
#line 2761 
                return __retres;
}


#line 2765  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void *skb_header_pointer(struct sk_buff const *skb, int offset, int len, void *buffer)
{
  void *tmp_0;
  unsigned int tmp;
  
#line 2767 
  ;
  
#line 2768 
  tmp = skb_headlen(skb);
  
#line 2767 
  ;
  
#line 2767 
  ;
  
#line 2767 
  ;
  
#line 2767 
  ;
  
#line 2767 
  tmp_0 = __skb_header_pointer(skb,offset,len,(void *)skb->data,(int)tmp,buffer);
  
#line 2767 
  return tmp_0;
}


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data(struct sk_buff *skb, void const *from, unsigned int const len)
{
  
#line 2807 
  memcpy((void *)skb->data,from,(unsigned long)len);
  
#line 2808 
  return;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 3390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso_v6(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3392 
  tmp = skb_end_pointer(skb);
  
#line 3392 
  ;
  
#line 3392 
  __retres = (_Bool)(((int)((struct skb_shared_info *)tmp)->gso_type & 16) != 0);
  
#line 3392 
  return __retres;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
__inline static struct ethhdr *eth_hdr(struct sk_buff const *skb)
{
  struct ethhdr *tmp;
  
#line 28 
  tmp = (struct ethhdr *)skb_mac_header(skb);
  
#line 28 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
__inline static void u64_stats_update_begin(struct u64_stats_sync *syncp)
{
  
#line 80 
  return;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
__inline static unsigned int u64_stats_fetch_begin_irq(struct u64_stats_sync const *syncp)
{
  unsigned int __retres;
  
#line 131 
  __retres = 0U;
  
#line 131 
  return __retres;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
__inline static bool u64_stats_fetch_retry_irq(struct u64_stats_sync const *syncp, unsigned int start)
{
  bool __retres;
  
#line 144 
  __retres = (_Bool)0;
  
#line 144 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
void synchronize_irq(unsigned int);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_84(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_85(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 157 
static void ldv_free_irq_86(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 161 
static void ldv_free_irq_87(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 165 
static void ldv_free_irq_88(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 478 
void napi_hash_add(struct napi_struct *);


#line 487 
void napi_hash_del(struct napi_struct *);


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2205 
static void ldv_free_netdev_112(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_114(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2535 
  i = 0U;
  
#line 2535 
  goto ldv_44941;
  ldv_44940: 
#line 2536 
  ;
  {
    
#line 2536 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2537 
    netif_tx_start_queue(txq);
  }
  
#line 2535 
  i += 1U;
  ldv_44941: 
#line 2536 
  ;
  
#line 2535 
  if (dev->num_tx_queues > i) 
#line 2537 
                              goto ldv_44940; else 
#line 2540 
                                                   goto ldv_44942;
  ldv_44942: 
#line 2541 
  ;
  
#line 2542 
  return;
}


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_subqueue(struct net_device *dev, u16 queue_index)
{
  
#line 2790 
  struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)queue_index);
  
#line 2792 
  netif_tx_start_queue(txq);
  
#line 2793 
  return;
}


#line 2815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool __netif_subqueue_stopped(struct net_device const *dev, u16 queue_index)
{
  bool tmp_0;
  
#line 2818 
  struct netdev_queue *txq = netdev_get_tx_queue(dev,(unsigned int)queue_index);
  
#line 2820 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)txq);
  
#line 2820 
  return tmp_0;
}


#line 2829 
void netif_wake_subqueue(struct net_device *, u16);


#line 2867 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);


#line 2870 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45515;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45515;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45515;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45515;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45515: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_45521;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45525;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45525;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45525;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45525;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45525: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_45521;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45534;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45534;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45534;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45534;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45534: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_45521;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45543;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45543;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45543;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45543;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45543: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_45521;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_45521;
    }
    ldv_45521: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_45553;
  ldv_45552: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_start_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_45553: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_45552; else 
#line 3294 
                                                   goto ldv_45554;
  ldv_45554: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3355 
static int ldv_register_netdev_111(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_113(struct net_device *ldv_func_arg1);


#line 3549 
void netdev_rss_key_fill(void *, size_t);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vzalloc(unsigned long);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff const *skb)
{
  struct ipv6hdr *tmp;
  
#line 76 
  tmp = (struct ipv6hdr *)skb_network_header(skb);
  
#line 76 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
u32 eth_get_headlen(void *, unsigned int);


#line 33 
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_110(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
static u8 const eth_reserved_addr_base[6U] = {(unsigned char)1U, (unsigned char)128U, (unsigned char)194U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_link_local_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 73 
  __be16 *a = (__be16 *)addr;
  
#line 74 
  __be16 const *b = (__be16 const *)(& eth_reserved_addr_base);
  
#line 75 
  __be16 const m = (unsigned short)61695U;
  
#line 79 
  __retres = (_Bool)(((*((u32 const *)addr) ^ *((u32 const *)b)) | ((unsigned int)((int)*(a + 2U) ^ (int)*(b + 2U)) & 61695U)) == 0U);
  
#line 79 
  return __retres;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 445  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static int eth_skb_pad(struct sk_buff *skb)
{
  int tmp;
  
#line 447 
  tmp = skb_put_padto(skb,60U);
  
#line 447 
  return tmp;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 __vlan_get_protocol(struct sk_buff *skb, __be16 type, int *depth)
{
  __be16 __retres;
  
#line 484 
  unsigned int vlan_depth = (unsigned int)skb->mac_len;
  
#line 490 
  if ((unsigned int)type == 129U || (unsigned int)type == 43144U) {
    
#line 491 
    if (vlan_depth != 0U) {
      int tmp;
      {
        
#line 492 
        int __ret_warn_on = vlan_depth <= 3U;
        
#line 492 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 492 
                                              warn_slowpath_null("include/linux/if_vlan.h",492); else ;
        
#line 492 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 492 
      if ((long)tmp != 0L) {
        
#line 493 
        __retres = (unsigned short)0U;
        
#line 493 
        goto return_label;
      }
      else ;
      
#line 494 
      vlan_depth += 4294967292U;
    }
    else 
#line 496 
         vlan_depth = 14U;
    ldv_54118: 
#line 497 
    ;
    {
      struct vlan_hdr *vh;
      int tmp_0;
      
#line 501 
      tmp_0 = pskb_may_pull(skb,vlan_depth + 4U);
      
#line 501 
      if ((long)(tmp_0 == 0) != 0L) {
        
#line 503 
        __retres = (unsigned short)0U;
        
#line 503 
        goto return_label;
      }
      else ;
      
#line 505 
      vh = (struct vlan_hdr *)(skb->data + vlan_depth);
      
#line 506 
      type = vh->h_vlan_encapsulated_proto;
      
#line 507 
      vlan_depth += 4U;
    }
    
#line 509 
    if ((unsigned int)type == 129U || (unsigned int)type == 43144U) 
#line 511 
                                                                    goto ldv_54118; else 
                                                                    
#line 514 
                                                                    goto ldv_54119;
    ldv_54119: 
#line 515 
    ;
  }
  else ;
  
#line 512 
  if (depth != (int *)0) 
#line 513 
                         *depth = (int)vlan_depth; else ;
  
#line 515 
  __retres = type;
  return_label: 
#line 515 
                return __retres;
}


#line 525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 vlan_get_protocol(struct sk_buff *skb)
{
  __be16 tmp;
  
#line 527 
  tmp = __vlan_get_protocol(skb,(unsigned short)((int)skb->protocol),(int *)0);
  
#line 527 
  return tmp;
}


#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.h"
void ixgbevf_rlpml_set_vf(struct ixgbe_hw *hw, u16 max_size);


#line 210 
int ixgbevf_negotiate_api_version(struct ixgbe_hw *hw, int api);


#line 211 
int ixgbevf_get_queues(struct ixgbe_hw *hw, unsigned int *num_tcs, unsigned int *default_tc);


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/busy_poll.h"
__inline static void skb_mark_napi_id(struct sk_buff *skb, struct napi_struct *napi)
{
  
#line 124 
  skb->__anonCompField_sk_buff_78.napi_id = napi->napi_id;
  
#line 125 
  return;
}


#line 219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static void ixgbevf_qv_init_lock(struct ixgbevf_q_vector *q_vector)
{
  
#line 221 
  spinlock_check(& q_vector->lock);
  {
    struct lock_class_key __key;
    
#line 221 
    __raw_spin_lock_init(& q_vector->lock.__anonCompField_spinlock_18.rlock,"&(&q_vector->lock)->rlock",& __key);
  }
  
#line 222 
  q_vector->state = 0U;
  
#line 223 
  return;
}


#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static bool ixgbevf_qv_lock_napi(struct ixgbevf_q_vector *q_vector)
{
  bool __retres;
  
#line 228 
  int rc = 1;
  
#line 230 
  ldv_spin_lock_bh_73(& q_vector->lock);
  
#line 231 
  if ((q_vector->state & 7U) != 0U) {
    {
      
#line 232 
      int __ret_warn_on = (q_vector->state & 1U) != 0U;
      
#line 232 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 232 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h",232); else ;
      
#line 232 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 233 
    q_vector->state |= 8U;
    
#line 234 
    rc = 0;
    
#line 236 
    (q_vector->tx.ring)->stats.yields += 1ULL;
  }
  else 
#line 240 
       q_vector->state = 1U;
  
#line 242 
  ldv_spin_unlock_bh_74(& q_vector->lock);
  
#line 243 
  __retres = (_Bool)(rc != 0);
  
#line 243 
  return __retres;
}


#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static bool ixgbevf_qv_unlock_napi(struct ixgbevf_q_vector *q_vector)
{
  bool __retres;
  
#line 249 
  int rc = 0;
  
#line 251 
  ldv_spin_lock_bh_75(& q_vector->lock);
  {
    
#line 252 
    int __ret_warn_on = (q_vector->state & 10U) != 0U;
    
#line 252 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 252 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h",253); else ;
    
#line 252 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 255 
  if ((q_vector->state & 16U) != 0U) 
#line 256 
                                     rc = 1; else ;
  
#line 258 
  q_vector->state &= 4U;
  
#line 259 
  ldv_spin_unlock_bh_76(& q_vector->lock);
  
#line 260 
  __retres = (_Bool)(rc != 0);
  
#line 260 
  return __retres;
}


#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static bool ixgbevf_qv_lock_poll(struct ixgbevf_q_vector *q_vector)
{
  bool __retres;
  
#line 266 
  int rc = 1;
  
#line 268 
  ldv_spin_lock_bh_77(& q_vector->lock);
  
#line 269 
  if ((q_vector->state & 7U) != 0U) {
    
#line 270 
    q_vector->state |= 16U;
    
#line 271 
    rc = 0;
    
#line 273 
    (q_vector->rx.ring)->stats.yields += 1ULL;
  }
  else 
#line 277 
       q_vector->state |= 2U;
  
#line 279 
  ldv_spin_unlock_bh_78(& q_vector->lock);
  
#line 280 
  __retres = (_Bool)(rc != 0);
  
#line 280 
  return __retres;
}


#line 284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static bool ixgbevf_qv_unlock_poll(struct ixgbevf_q_vector *q_vector)
{
  bool __retres;
  
#line 286 
  int rc = 0;
  
#line 288 
  ldv_spin_lock_bh_79(& q_vector->lock);
  {
    
#line 289 
    int __ret_warn_on = (q_vector->state & 1U) != 0U;
    
#line 289 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 289 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h",289); else ;
    
#line 289 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 291 
  if ((q_vector->state & 16U) != 0U) 
#line 292 
                                     rc = 1; else ;
  
#line 294 
  q_vector->state &= 4U;
  
#line 295 
  ldv_spin_unlock_bh_80(& q_vector->lock);
  
#line 296 
  __retres = (_Bool)(rc != 0);
  
#line 296 
  return __retres;
}


#line 300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static bool ixgbevf_qv_busy_polling(struct ixgbevf_q_vector *q_vector)
{
  bool __retres;
  {
    
#line 302 
    int __ret_warn_on = (q_vector->state & 3U) == 0U;
    
#line 302 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 302 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h",302); else ;
    
#line 302 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 303 
  __retres = (_Bool)((q_vector->state & 18U) != 0U);
  
#line 303 
  return __retres;
}


#line 307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static bool ixgbevf_qv_disable(struct ixgbevf_q_vector *q_vector)
{
  bool __retres;
  
#line 309 
  int rc = 1;
  
#line 311 
  ldv_spin_lock_bh_81(& q_vector->lock);
  
#line 312 
  if ((q_vector->state & 3U) != 0U) 
#line 313 
                                    rc = 0; else ;
  
#line 314 
  q_vector->state |= 4U;
  
#line 315 
  ldv_spin_unlock_bh_82(& q_vector->lock);
  
#line 316 
  __retres = (_Bool)(rc != 0);
  
#line 316 
  return __retres;
}


#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static __le32 ixgbevf_test_staterr(union ixgbe_adv_rx_desc *rx_desc, u32 const stat_err_bits)
{
  __le32 __retres;
  
#line 342 
  __retres = rx_desc->wb.upper.status_error & stat_err_bits;
  
#line 342 
  return __retres;
}


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static u16 ixgbevf_desc_unused(struct ixgbevf_ring *ring)
{
  u16 __retres;
  unsigned int tmp;
  
#line 347 
  u16 ntc = ring->next_to_clean;
  
#line 348 
  u16 ntu = ring->next_to_use;
  
#line 350 
  if ((int)ntc <= (int)ntu) 
#line 350 
                            tmp = (unsigned int)ring->count; else 
#line 350 
                                                                  tmp = 0U;
  
#line 350 
  ;
  
#line 350 
  __retres = (unsigned short)(((tmp + (unsigned int)ntc) - (unsigned int)ntu) + 65535U);
  
#line 350 
  return __retres;
}


#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h"
__inline static void ixgbevf_write_tail(struct ixgbevf_ring *ring, u32 value)
{
  
#line 355 
  writel(value,(void volatile *)ring->tail);
  
#line 356 
  return;
}


#line 469 
struct ixgbevf_info const ixgbevf_82599_vf_info;


#line 470 
struct ixgbevf_info const ixgbevf_X540_vf_info;


#line 471 
struct ixgbevf_info const ixgbevf_X550_vf_info;


#line 472 
struct ixgbevf_info const ixgbevf_X550EM_x_vf_info;


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
char const ixgbevf_driver_name[8U] = {(char)'i', (char)'x', (char)'g', (char)'b', (char)'e', (char)'v', (char)'f', (char)'\000'};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static char const ixgbevf_driver_string[64U] = {(char)'I', (char)'n', (char)'t', (char)'e', (char)'l', (char)'(', (char)'R', (char)')', (char)' ', (char)'1', (char)'0', (char)' ', (char)'G', (char)'i', (char)'g', (char)'a', (char)'b', (char)'i', (char)'t', (char)' ', (char)'P', (char)'C', (char)'I', (char)' ', (char)'E', (char)'x', (char)'p', (char)'r', (char)'e', (char)'s', (char)'s', (char)' ', (char)'V', (char)'i', (char)'r', (char)'t', (char)'u', (char)'a', (char)'l', (char)' ', (char)'F', (char)'u', (char)'n', (char)'c', (char)'t', (char)'i', (char)'o', (char)'n', (char)' ', (char)'N', (char)'e', (char)'t', (char)'w', (char)'o', (char)'r', (char)'k', (char)' ', (char)'D', (char)'r', (char)'i', (char)'v', (char)'e', (char)'r', (char)'\000'};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
char const ixgbevf_driver_version[9U] = {(char)'2', (char)'.', (char)'1', (char)'2', (char)'.', (char)'1', (char)'-', (char)'k', (char)'\000'};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static char ixgbevf_copyright[45U] = {(char)'C', (char)'o', (char)'p', (char)'y', (char)'r', (char)'i', (char)'g', (char)'h', (char)'t', (char)' ', (char)'(', (char)'c', (char)')', (char)' ', (char)'2', (char)'0', (char)'0', (char)'9', (char)' ', (char)'-', (char)' ', (char)'2', (char)'0', (char)'1', (char)'2', (char)' ', (char)'I', (char)'n', (char)'t', (char)'e', (char)'l', (char)' ', (char)'C', (char)'o', (char)'r', (char)'p', (char)'o', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'.', (char)'\000'};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static struct ixgbevf_info const *ixgbevf_info_tbl[4U] = {& ixgbevf_82599_vf_info, & ixgbevf_X540_vf_info, & ixgbevf_X550_vf_info, & ixgbevf_X550EM_x_vf_info};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static struct pci_device_id const ixgbevf_pci_tbl[5U] = {{.vendor = 32902U, .device = 4333U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 5397U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 1UL}, {.vendor = 32902U, .device = 5477U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 32902U, .device = 5544U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 3UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
struct pci_device_id const __mod_pci__ixgbevf_pci_tbl_device_table[5U];

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int debug = -1;

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_service_event_schedule(struct ixgbevf_adapter *adapter)
{
  int tmp;
  
#line 101 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 101 
  if (tmp == 0) {
    int tmp_0;
    
#line 101 
    tmp_0 = constant_test_bit(4L,(unsigned long const volatile *)(& adapter->state));
    
#line 101 
    if (tmp_0 == 0) {
      int tmp_1;
      
#line 102 
      tmp_1 = test_and_set_bit(5L,(unsigned long volatile *)(& adapter->state));
      
#line 102 
      if (tmp_1 == 0) 
#line 104 
                      ldv_schedule_work_83(& adapter->service_task); else ;
    }
    else ;
  }
  else ;
  
#line 105 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_service_event_complete(struct ixgbevf_adapter *adapter)
{
  int tmp;
  
#line 109 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& adapter->state));
  
#line 109 
  if ((long)(tmp == 0) != 0L) {
    
#line 111 
    ldv_inline_asm();
    
#line 109 
    ;
  }
  else ;
  
#line 111 
  ldv_inline_asm();
  
#line 113 
  set_bit(5L,(unsigned long volatile *)(& adapter->state));
  
#line 114 
  return;
}


#line 117 
static void ixgbevf_queue_reset_subtask(struct ixgbevf_adapter *adapter);


#line 118 
static void ixgbevf_set_itr(struct ixgbevf_q_vector *q_vector);


#line 119 
static void ixgbevf_free_all_rx_resources(struct ixgbevf_adapter *adapter);


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_remove_adapter(struct ixgbe_hw *hw)
{
  int tmp;
  
#line 123 
  struct ixgbevf_adapter *adapter = (struct ixgbevf_adapter *)hw->back;
  
#line 125 
  if (hw->hw_addr == (u8 *)0U) 
#line 126 
                               goto return_label; else ;
  
#line 127 
  hw->hw_addr = (u8 *)0U;
  
#line 128 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"Adapter removed\n");
  
#line 129 
  tmp = constant_test_bit(6L,(unsigned long const volatile *)(& adapter->state));
  
#line 129 
  if (tmp != 0) 
#line 130 
                ixgbevf_service_event_schedule(adapter); else ;
  return_label: 
#line 131 
                return;
}


#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_check_remove(struct ixgbe_hw *hw, u32 reg)
{
  u32 value;
  
#line 143 
  if (reg == 8U) {
    
#line 144 
    ixgbevf_remove_adapter(hw);
    
#line 145 
    goto return_label;
  }
  else ;
  
#line 147 
  value = ixgbevf_read_reg(hw,8U);
  
#line 148 
  if (value == 4294967295U) 
#line 149 
                            ixgbevf_remove_adapter(hw); else ;
  return_label: 
#line 150 
                return;
}


#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
u32 ixgbevf_read_reg(struct ixgbe_hw *hw, u32 reg)
{
  u32 __retres;
  u8 * volatile *tmp;
  u32 value;
  {
    
#line 154 
    u8 *__var = (u8 *)0U;
    
#line 154 
    tmp = (u8 * volatile *)(& hw->hw_addr);
  }
  
#line 154 
  u8 *reg_addr = *tmp;
  
#line 157 
  if ((long)(reg_addr == (u8 *)0U) != 0L) {
    
#line 158 
    __retres = 4294967295U;
    
#line 158 
    goto return_label;
  }
  else ;
  
#line 159 
  value = readl((void const volatile *)(reg_addr + reg));
  
#line 160 
  if ((long)(value == 4294967295U) != 0L) 
#line 161 
                                          ixgbevf_check_remove(hw,reg); else ;
  
#line 162 
  __retres = value;
  return_label: 
#line 162 
                return __retres;
}


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_set_ivar(struct ixgbevf_adapter *adapter, s8 direction, u8 queue, u8 msix_vector)
{
  u32 ivar;
  u32 index;
  
#line 176 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 178 
  if ((int)direction == -1) {
    
#line 180 
    msix_vector = (unsigned char)((unsigned int)msix_vector | 128U);
    
#line 181 
    ivar = ixgbevf_read_reg(hw,320U);
    
#line 182 
    ivar &= 4294967040U;
    
#line 183 
    ivar = (unsigned int)msix_vector | ivar;
    
#line 184 
    ixgbe_write_reg(hw,320U,ivar);
  }
  else {
    
#line 187 
    msix_vector = (unsigned char)((unsigned int)msix_vector | 128U);
    
#line 188 
    index = (unsigned int)((((int)queue & 1) * 2 + (int)direction) * 8);
    
#line 189 
    ivar = ixgbevf_read_reg(hw,(unsigned int)((((int)queue >> 1) + 72) * 4));
    
#line 190 
    ivar = (unsigned int)(~ (255 << index)) & ivar;
    
#line 191 
    ivar = (unsigned int)((int)msix_vector << index) | ivar;
    
#line 192 
    ixgbe_write_reg(hw,(unsigned int)((((int)queue >> 1) + 72) * 4),ivar);
  }
  
#line 194 
  return;
}


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_unmap_and_free_tx_resource(struct ixgbevf_ring *tx_ring, struct ixgbevf_tx_buffer *tx_buffer)
{
  
#line 199 
  if (tx_buffer->skb != (struct sk_buff *)0) {
    
#line 200 
    dev_kfree_skb_any(tx_buffer->skb);
    
#line 201 
    if (tx_buffer->len != 0U) 
#line 202 
                              dma_unmap_single_attrs(tx_ring->dev,tx_buffer->dma,(unsigned long)tx_buffer->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0); else ;
  }
  else 
    
#line 206 
    if (tx_buffer->len != 0U) 
#line 207 
                              dma_unmap_page(tx_ring->dev,tx_buffer->dma,(unsigned long)tx_buffer->len,(enum dma_data_direction)DMA_TO_DEVICE); else ;
  
#line 212 
  tx_buffer->next_to_watch = (union ixgbe_adv_tx_desc *)0;
  
#line 213 
  tx_buffer->skb = (struct sk_buff *)0;
  
#line 214 
  tx_buffer->len = 0U;
  
#line 215 
  return;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static u64 ixgbevf_get_tx_completed(struct ixgbevf_ring *ring)
{
  u64 __retres;
  
#line 220 
  __retres = ring->stats.packets;
  
#line 220 
  return __retres;
}


#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static u32 ixgbevf_get_tx_pending(struct ixgbevf_ring *ring)
{
  u32 __retres;
  
#line 225 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)ring->netdev);
  
#line 226 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 228 
  u32 head = ixgbevf_read_reg(hw,(unsigned int)((int)ring->reg_idx * 64 + 8208));
  
#line 229 
  u32 tail = ixgbevf_read_reg(hw,(unsigned int)((int)ring->reg_idx * 64 + 8216));
  
#line 231 
  if (head != tail) {
    u32 tmp_2;
    
#line 233 
    if (head < tail) 
#line 233 
                     tmp_2 = tail - head; else 
#line 233 
                                               tmp_2 = ((unsigned int)ring->count + tail) - head;
    
#line 233 
    __retres = tmp_2;
    
#line 233 
    goto return_label;
  }
  else ;
  
#line 235 
  __retres = 0U;
  return_label: 
#line 235 
                return __retres;
}


#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
__inline static bool ixgbevf_check_tx_hang(struct ixgbevf_ring *tx_ring)
{
  bool __retres;
  u64 tmp;
  
#line 240 
  tmp = ixgbevf_get_tx_completed(tx_ring);
  
#line 240 
  u32 tx_done = (unsigned int)tmp;
  
#line 241 
  u32 tx_done_old = (unsigned int)tx_ring->__anonCompField_ixgbevf_ring_116.tx_stats.tx_done_old;
  
#line 242 
  u32 tx_pending = ixgbevf_get_tx_pending(tx_ring);
  
#line 244 
  set_bit(0L,(unsigned long volatile *)(& tx_ring->state));
  
#line 251 
  if (tx_done_old == tx_done && tx_pending != 0U) {
    int tmp_1;
    
#line 253 
    tmp_1 = test_and_set_bit(1L,(unsigned long volatile *)(& tx_ring->state));
    
#line 253 
    __retres = (_Bool)(tmp_1 != 0);
    
#line 253 
    goto return_label;
  }
  else ;
  
#line 257 
  set_bit(1L,(unsigned long volatile *)(& tx_ring->state));
  
#line 260 
  tx_ring->__anonCompField_ixgbevf_ring_116.tx_stats.tx_done_old = (unsigned long long)tx_done;
  
#line 262 
  __retres = (_Bool)0;
  return_label: 
#line 262 
                return __retres;
}


#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_tx_timeout_reset(struct ixgbevf_adapter *adapter)
{
  int tmp;
  
#line 268 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 268 
  if (tmp == 0) {
    
#line 269 
    adapter->flags |= 1U;
    
#line 270 
    ixgbevf_service_event_schedule(adapter);
  }
  else ;
  
#line 272 
  return;
}


#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_tx_timeout(struct net_device *netdev)
{
  
#line 280 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 282 
  ixgbevf_tx_timeout_reset(adapter);
  
#line 283 
  return;
}


#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static bool ixgbevf_clean_tx_irq(struct ixgbevf_q_vector *q_vector, struct ixgbevf_ring *tx_ring)
{
  bool __retres;
  struct ixgbevf_tx_buffer *tx_buffer;
  union ixgbe_adv_tx_desc *tx_desc;
  int tmp;
  int tmp_3;
  int tmp_8;
  
#line 293 
  struct ixgbevf_adapter *adapter = q_vector->adapter;
  
#line 296 
  unsigned int total_bytes = 0U;
  
#line 296 
  unsigned int total_packets = 0U;
  
#line 297 
  unsigned int budget = (unsigned int)tx_ring->count / 2U;
  
#line 298 
  unsigned int i = (unsigned int)tx_ring->next_to_clean;
  
#line 300 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 300 
  if (tmp != 0) {
    
#line 301 
    __retres = (_Bool)1;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 303 
  tx_buffer = tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info + i;
  
#line 304 
  tx_desc = (union ixgbe_adv_tx_desc *)tx_ring->desc + i;
  
#line 305 
  i -= (unsigned int)tx_ring->count;
  ldv_54812: 
#line 306 
  ;
  {
    
#line 308 
    union ixgbe_adv_tx_desc *eop_desc = tx_buffer->next_to_watch;
    
#line 311 
    if (eop_desc == (union ixgbe_adv_tx_desc *)0) 
#line 312 
                                                  goto ldv_54808; else ;
    
#line 318 
    if ((eop_desc->wb.status & 1U) == 0U) 
#line 319 
                                          goto ldv_54808; else ;
    
#line 322 
    tx_buffer->next_to_watch = (union ixgbe_adv_tx_desc *)0;
    
#line 325 
    total_bytes = tx_buffer->bytecount + total_bytes;
    
#line 326 
    total_packets = (unsigned int)tx_buffer->gso_segs + total_packets;
    
#line 329 
    dev_kfree_skb_any(tx_buffer->skb);
    
#line 332 
    dma_unmap_single_attrs(tx_ring->dev,tx_buffer->dma,(unsigned long)tx_buffer->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 338 
    tx_buffer->skb = (struct sk_buff *)0;
    
#line 339 
    tx_buffer->len = 0U;
    
#line 342 
    goto ldv_54810;
    ldv_54809: 
#line 343 
    ;
    
#line 343 
    tx_buffer += 1;
    
#line 344 
    tx_desc += 1;
    
#line 345 
    i += 1U;
    
#line 346 
    if ((long)(i == 0U) != 0L) {
      
#line 347 
      i -= (unsigned int)tx_ring->count;
      
#line 348 
      tx_buffer = tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info;
      
#line 349 
      tx_desc = (union ixgbe_adv_tx_desc *)tx_ring->desc;
    }
    else ;
    
#line 353 
    if (tx_buffer->len != 0U) {
      
#line 354 
      dma_unmap_page(tx_ring->dev,tx_buffer->dma,(unsigned long)tx_buffer->len,(enum dma_data_direction)DMA_TO_DEVICE);
      
#line 358 
      tx_buffer->len = 0U;
    }
    else ;
    ldv_54810: 
#line 360 
    ;
    
#line 342 
    if (tx_desc != eop_desc) 
#line 344 
                             goto ldv_54809; else 
#line 347 
                                                  goto ldv_54811;
    ldv_54811: 
#line 348 
    ;
    
#line 363 
    tx_buffer += 1;
    
#line 364 
    tx_desc += 1;
    
#line 365 
    i += 1U;
    
#line 366 
    if ((long)(i == 0U) != 0L) {
      
#line 367 
      i -= (unsigned int)tx_ring->count;
      
#line 368 
      tx_buffer = tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info;
      
#line 369 
      tx_desc = (union ixgbe_adv_tx_desc *)tx_ring->desc;
    }
    else ;
    
#line 373 
    __builtin_prefetch((void const *)tx_desc);
    
#line 376 
    budget -= 1U;
  }
  
#line 377 
  if ((long)(budget != 0U) != 0L) 
#line 379 
                                  goto ldv_54812; else 
#line 382 
                                                       goto ldv_54808;
  ldv_54808: 
#line 383 
  ;
  
#line 379 
  i = (unsigned int)tx_ring->count + i;
  
#line 380 
  tx_ring->next_to_clean = (unsigned short)i;
  
#line 381 
  u64_stats_update_begin(& tx_ring->syncp);
  
#line 382 
  tx_ring->stats.bytes += (unsigned long long)total_bytes;
  
#line 383 
  tx_ring->stats.packets += (unsigned long long)total_packets;
  
#line 384 
  u64_stats_update_begin(& tx_ring->syncp);
  
#line 385 
  q_vector->tx.total_bytes += total_bytes;
  
#line 386 
  q_vector->tx.total_packets += total_packets;
  
#line 388 
  tmp_3 = constant_test_bit(0L,(unsigned long const volatile *)(& tx_ring->state));
  
#line 388 
  if (tmp_3 != 0) {
    bool tmp_4;
    
#line 388 
    tmp_4 = ixgbevf_check_tx_hang(tx_ring);
    
#line 388 
    if ((int)tmp_4 != 0) {
      union ixgbe_adv_tx_desc *eop_desc_0;
      __le32 tmp_0;
      u32 tmp_1;
      u32 tmp_2;
      
#line 389 
      struct ixgbe_hw *hw = & adapter->hw;
      
#line 392 
      eop_desc_0 = (tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info + i)->next_to_watch;
      
#line 394 
      ;
      
#line 394 
      ;
      
#line 394 
      if (eop_desc_0 != (union ixgbe_adv_tx_desc *)0) 
#line 394 
                                                      tmp_0 = eop_desc_0->wb.status; else 
                                                                    
#line 394 
                                                                    tmp_0 = 0U;
      
#line 394 
      ;
      
#line 394 
      ;
      
#line 394 
      ;
      
#line 394 
      tmp_1 = ixgbevf_read_reg(hw,(unsigned int)((int)tx_ring->reg_idx * 64 + 8216));
      
#line 394 
      tmp_2 = ixgbevf_read_reg(hw,(unsigned int)((int)tx_ring->reg_idx * 64 + 8208));
      
#line 394 
      ;
      
#line 394 
      printk("\001",tx_ring->queue_index,tmp_2,tmp_1,(int)tx_ring->next_to_use,i,eop_desc_0,tmp_0,(tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info + i)->time_stamp,jiffies);
      
#line 411 
      netif_start_subqueue(tx_ring->netdev,(unsigned short)((int)((unsigned short)tx_ring->queue_index)));
      
#line 414 
      ixgbevf_tx_timeout_reset(adapter);
      
#line 416 
      __retres = (_Bool)1;
      
#line 416 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 420 
  if ((long)(total_packets != 0U) != 0L) {
    bool tmp_7;
    
#line 420 
    tmp_7 = netif_carrier_ok((struct net_device const *)tx_ring->netdev);
    
#line 420 
    if ((long)((int)tmp_7 != 0) != 0L) 
#line 420 
                                       tmp_8 = 1; else 
#line 420 
                                                       tmp_8 = 0;
  }
  else 
#line 420 
       tmp_8 = 0;
  
#line 420 
  if (tmp_8 != 0) {
    u16 tmp_9;
    
#line 420 
    tmp_9 = ixgbevf_desc_unused(tx_ring);
    
#line 420 
    if ((long)((unsigned int)tmp_9 > 41U) != 0L) {
      bool tmp_5;
      
#line 422 
      ldv_inline_asm();
      
#line 427 
      tmp_5 = __netif_subqueue_stopped((struct net_device const *)tx_ring->netdev,(unsigned short)((int)((unsigned short)tx_ring->queue_index)));
      
#line 427 
      if ((int)tmp_5 != 0) {
        int tmp_6;
        
#line 428 
        tmp_6 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
        
#line 428 
        if (tmp_6 == 0) {
          
#line 430 
          netif_wake_subqueue(tx_ring->netdev,(unsigned short)((int)((unsigned short)tx_ring->queue_index)));
          
#line 432 
          tx_ring->__anonCompField_ixgbevf_ring_116.tx_stats.restart_queue += 1ULL;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 436 
  __retres = (_Bool)(budget != 0U);
  return_label: 
#line 436 
                return __retres;
}


#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_rx_skb(struct ixgbevf_q_vector *q_vector, struct sk_buff *skb)
{
  bool tmp;
  
#line 448 
  skb_mark_napi_id(skb,& q_vector->napi);
  
#line 450 
  tmp = ixgbevf_qv_busy_polling(q_vector);
  
#line 450 
  if ((int)tmp != 0) {
    
#line 451 
    netif_receive_skb(skb);
    
#line 453 
    goto return_label;
  }
  else ;
  
#line 457 
  napi_gro_receive(& q_vector->napi,skb);
  return_label: 
#line 458 
                return;
}


#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
__inline static void ixgbevf_rx_checksum(struct ixgbevf_ring *ring, union ixgbe_adv_rx_desc *rx_desc, struct sk_buff *skb)
{
  __le32 tmp;
  __le32 tmp_1;
  __le32 tmp_2;
  
#line 470 
  skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 473 
  if (((ring->netdev)->features & 17179869184ULL) == 0ULL) 
#line 474 
                                                           goto return_label; else ;
  
#line 477 
  tmp = ixgbevf_test_staterr(rx_desc,64U);
  
#line 477 
  if (tmp != 0U) {
    __le32 tmp_0;
    
#line 477 
    tmp_0 = ixgbevf_test_staterr(rx_desc,2147483648U);
    
#line 477 
    if (tmp_0 != 0U) {
      
#line 479 
      ring->__anonCompField_ixgbevf_ring_116.rx_stats.csum_err += 1ULL;
      
#line 480 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 483 
  tmp_1 = ixgbevf_test_staterr(rx_desc,32U);
  
#line 483 
  if (tmp_1 == 0U) 
#line 484 
                   goto return_label; else ;
  
#line 486 
  tmp_2 = ixgbevf_test_staterr(rx_desc,1073741824U);
  
#line 486 
  if (tmp_2 != 0U) {
    
#line 487 
    ring->__anonCompField_ixgbevf_ring_116.rx_stats.csum_err += 1ULL;
    
#line 488 
    goto return_label;
  }
  else ;
  
#line 492 
  skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
  return_label: 
#line 493 
                return;
}


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_process_skb_fields(struct ixgbevf_ring *rx_ring, union ixgbe_adv_rx_desc *rx_desc, struct sk_buff *skb)
{
  __le32 tmp_3;
  
#line 509 
  ixgbevf_rx_checksum(rx_ring,rx_desc,skb);
  
#line 511 
  tmp_3 = ixgbevf_test_staterr(rx_desc,8U);
  
#line 511 
  if (tmp_3 != 0U) {
    int tmp_2;
    
#line 512 
    u16 vid = rx_desc->wb.upper.vlan;
    
#line 513 
    unsigned long *active_vlans = netdev_priv((struct net_device const *)rx_ring->netdev);
    
#line 515 
    if (0 != 0) {
      int tmp_0;
      
#line 515 
      tmp_0 = constant_test_bit((long)vid & 4095L,(unsigned long const volatile *)active_vlans);
      
#line 515 
      tmp_2 = tmp_0 != 0;
    }
    else {
      int tmp_1;
      
#line 515 
      tmp_1 = variable_test_bit((long)vid & 4095L,(unsigned long const volatile *)active_vlans);
      
#line 515 
      tmp_2 = tmp_1 != 0;
    }
    
#line 515 
    if (tmp_2) 
#line 516 
               __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)vid)); else ;
  }
  else ;
  
#line 519 
  skb->protocol = eth_type_trans(skb,rx_ring->netdev);
  
#line 520 
  return;
}


#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static bool ixgbevf_is_non_eop(struct ixgbevf_ring *rx_ring, union ixgbe_adv_rx_desc *rx_desc)
{
  bool __retres;
  __le32 tmp;
  
#line 536 
  u32 ntc = (unsigned int)((int)rx_ring->next_to_clean + 1);
  
#line 539 
  if ((unsigned int)rx_ring->count > ntc) 
#line 539 
                                          ntc = ntc; else 
#line 539 
                                                          ntc = 0U;
  
#line 540 
  rx_ring->next_to_clean = (unsigned short)ntc;
  
#line 542 
  __builtin_prefetch((void const *)rx_ring->desc + ntc);
  
#line 544 
  tmp = ixgbevf_test_staterr(rx_desc,2U);
  
#line 544 
  if ((long)(tmp != 0U) != 0L) {
    
#line 545 
    __retres = (_Bool)0;
    
#line 545 
    goto return_label;
  }
  else ;
  
#line 547 
  __retres = (_Bool)1;
  return_label: 
#line 547 
                return __retres;
}


#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static bool ixgbevf_alloc_mapped_page(struct ixgbevf_ring *rx_ring, struct ixgbevf_rx_buffer *bi)
{
  bool __retres;
  int tmp;
  
#line 553 
  struct page *page = bi->page;
  
#line 554 
  dma_addr_t dma = bi->dma;
  
#line 557 
  if ((long)(page != (struct page *)0) != 0L) {
    
#line 558 
    __retres = (_Bool)1;
    
#line 558 
    goto return_label;
  }
  else ;
  
#line 561 
  page = dev_alloc_page();
  
#line 562 
  if ((long)(page == (struct page *)0) != 0L) {
    
#line 563 
    rx_ring->__anonCompField_ixgbevf_ring_116.rx_stats.alloc_rx_page_failed += 1ULL;
    
#line 564 
    __retres = (_Bool)0;
    
#line 564 
    goto return_label;
  }
  else ;
  
#line 568 
  dma = dma_map_page(rx_ring->dev,page,0UL,4096UL,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 574 
  tmp = dma_mapping_error(rx_ring->dev,dma);
  
#line 574 
  if (tmp != 0) {
    
#line 575 
    __free_pages(page,0U);
    
#line 577 
    rx_ring->__anonCompField_ixgbevf_ring_116.rx_stats.alloc_rx_buff_failed += 1ULL;
    
#line 578 
    __retres = (_Bool)0;
    
#line 578 
    goto return_label;
  }
  else ;
  
#line 581 
  bi->dma = dma;
  
#line 582 
  bi->page = page;
  
#line 583 
  bi->page_offset = 0U;
  
#line 585 
  __retres = (_Bool)1;
  return_label: 
#line 585 
                return __retres;
}


#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_alloc_rx_buffers(struct ixgbevf_ring *rx_ring, u16 cleaned_count)
{
  union ixgbe_adv_rx_desc *rx_desc;
  struct ixgbevf_rx_buffer *bi;
  int tmp_0;
  bool tmp;
  
#line 598 
  unsigned int i = (unsigned int)rx_ring->next_to_use;
  
#line 601 
  if ((unsigned int)cleaned_count == 0U || rx_ring->netdev == (struct net_device *)0) 
    
#line 602 
    goto return_label; else ;
  
#line 604 
  rx_desc = (union ixgbe_adv_rx_desc *)rx_ring->desc + i;
  
#line 605 
  bi = rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info + i;
  
#line 606 
  i -= (unsigned int)rx_ring->count;
  ldv_54850: 
#line 607 
  ;
  
#line 609 
  tmp = ixgbevf_alloc_mapped_page(rx_ring,bi);
  
#line 609 
  if (tmp) 
#line 609 
           tmp_0 = 0; else 
#line 609 
                           tmp_0 = 1;
  
#line 609 
  if (tmp_0) 
#line 610 
             goto ldv_54849; else ;
  
#line 615 
  rx_desc->read.pkt_addr = bi->dma + (unsigned long long)bi->page_offset;
  
#line 617 
  rx_desc += 1;
  
#line 618 
  bi += 1;
  
#line 619 
  i += 1U;
  
#line 620 
  if ((long)(i == 0U) != 0L) {
    
#line 621 
    rx_desc = (union ixgbe_adv_rx_desc *)rx_ring->desc;
    
#line 622 
    bi = rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info;
    
#line 623 
    i -= (unsigned int)rx_ring->count;
  }
  else ;
  
#line 627 
  rx_desc->read.hdr_addr = 0ULL;
  
#line 629 
  cleaned_count = (u16)((int)cleaned_count - 1);
  
#line 630 
  if ((unsigned int)cleaned_count != 0U) 
#line 632 
                                         goto ldv_54850; else 
#line 635 
                                                              goto ldv_54849;
  ldv_54849: 
#line 636 
  ;
  
#line 632 
  i = (unsigned int)rx_ring->count + i;
  
#line 634 
  if ((unsigned int)rx_ring->next_to_use != i) {
    
#line 636 
    rx_ring->next_to_use = (unsigned short)i;
    
#line 639 
    rx_ring->next_to_alloc = (unsigned short)i;
    
#line 640 
    ldv_inline_asm();
    
#line 647 
    ixgbevf_write_tail(rx_ring,i);
  }
  else ;
  return_label: 
#line 649 
                return;
}


#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_pull_tail(struct ixgbevf_ring *rx_ring, struct sk_buff *skb)
{
  unsigned char *tmp;
  unsigned char *va;
  unsigned int pull_len;
  
#line 666 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 666 
  struct skb_frag_struct *frag = & ((struct skb_shared_info *)tmp)->frags[0];
  
#line 674 
  va = (unsigned char *)skb_frag_address((skb_frag_t const *)frag);
  
#line 679 
  pull_len = eth_get_headlen((void *)va,256U);
  
#line 682 
  skb_copy_to_linear_data(skb,(void const *)va,(pull_len + 7U) & 4294967288U);
  
#line 685 
  skb_frag_size_sub(frag,(int)pull_len);
  
#line 686 
  frag->page_offset += pull_len;
  
#line 687 
  skb->data_len -= pull_len;
  
#line 688 
  skb->tail += pull_len;
  
#line 689 
  return;
}


#line 709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static bool ixgbevf_cleanup_headers(struct ixgbevf_ring *rx_ring, union ixgbe_adv_rx_desc *rx_desc, struct sk_buff *skb)
{
  bool __retres;
  __le32 tmp;
  bool tmp_0;
  int tmp_1;
  
#line 714 
  tmp = ixgbevf_test_staterr(rx_desc,989855744U);
  
#line 714 
  if ((long)(tmp != 0U) != 0L) {
    
#line 716 
    struct net_device *netdev = rx_ring->netdev;
    
#line 718 
    if ((netdev->features & 274877906944ULL) == 0ULL) {
      
#line 719 
      dev_kfree_skb_any(skb);
      
#line 720 
      __retres = (_Bool)1;
      
#line 720 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 725 
  tmp_0 = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 725 
  if ((int)tmp_0 != 0) 
#line 726 
                       ixgbevf_pull_tail(rx_ring,skb); else ;
  
#line 729 
  tmp_1 = eth_skb_pad(skb);
  
#line 729 
  if (tmp_1 != 0) {
    
#line 730 
    __retres = (_Bool)1;
    
#line 730 
    goto return_label;
  }
  else ;
  
#line 732 
  __retres = (_Bool)0;
  return_label: 
#line 732 
                return __retres;
}


#line 742  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_reuse_rx_page(struct ixgbevf_ring *rx_ring, struct ixgbevf_rx_buffer *old_buff)
{
  struct ixgbevf_rx_buffer *new_buff;
  
#line 746 
  u16 nta = rx_ring->next_to_alloc;
  
#line 748 
  new_buff = rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info + (int)nta;
  
#line 751 
  nta = (u16)((int)nta + 1);
  
#line 752 
  if ((int)rx_ring->count > (int)nta) 
#line 752 
                                      rx_ring->next_to_alloc = nta; else 
                                                                    
#line 752 
                                                                    rx_ring->next_to_alloc = (unsigned short)0U;
  
#line 755 
  new_buff->page = old_buff->page;
  
#line 756 
  new_buff->dma = old_buff->dma;
  
#line 757 
  new_buff->page_offset = old_buff->page_offset;
  
#line 760 
  dma_sync_single_range_for_device(rx_ring->dev,new_buff->dma,(unsigned long)new_buff->page_offset,2048UL,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 762 
  return;
}


#line 766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
__inline static bool ixgbevf_page_is_reserved(struct page *page)
{
  bool __retres;
  int tmp_2;
  int tmp;
  int tmp_0;
  
#line 768 
  tmp = page_to_nid((struct page const *)page);
  
#line 768 
  tmp_0 = numa_mem_id();
  
#line 768 
  if (tmp != tmp_0) 
#line 768 
                    tmp_2 = 1;
  else {
    bool tmp_1;
    
#line 768 
    tmp_1 = page_is_pfmemalloc(page);
    
#line 768 
    if ((int)tmp_1 != 0) 
#line 768 
                         tmp_2 = 1; else 
#line 768 
                                         tmp_2 = 0;
  }
  
#line 768 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 768 
  return __retres;
}


#line 786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static bool ixgbevf_add_rx_frag(struct ixgbevf_ring *rx_ring, struct ixgbevf_rx_buffer *rx_buffer, union ixgbe_adv_rx_desc *rx_desc, struct sk_buff *skb)
{
  bool __retres;
  unsigned char *tmp_5;
  bool tmp_6;
  int tmp_7;
  
#line 791 
  struct page *page = rx_buffer->page;
  
#line 792 
  unsigned int size = (unsigned int)rx_desc->wb.upper.length;
  
#line 794 
  unsigned int truesize = 2048U;
  
#line 799 
  if (size <= 256U) {
    int tmp_4;
    bool tmp_3;
    
#line 799 
    tmp_3 = skb_is_nonlinear((struct sk_buff const *)skb);
    
#line 799 
    if (tmp_3) 
#line 799 
               tmp_4 = 0; else 
#line 799 
                               tmp_4 = 1;
    
#line 799 
    if (tmp_4) {
      void *tmp;
      unsigned char *tmp_0;
      int tmp_2;
      bool tmp_1;
      
#line 800 
      tmp = lowmem_page_address((struct page const *)page);
      
#line 800 
      unsigned char *va = (unsigned char *)(tmp + rx_buffer->page_offset);
      
#line 802 
      ;
      
#line 802 
      ;
      
#line 802 
      tmp_0 = __skb_put(skb,size);
      
#line 802 
      memcpy((void *)tmp_0,(void const *)va,(unsigned long)(size + 7U) & 4294967288UL);
      
#line 805 
      tmp_1 = ixgbevf_page_is_reserved(page);
      
#line 805 
      if (tmp_1) 
#line 805 
                 tmp_2 = 0; else 
#line 805 
                                 tmp_2 = 1;
      
#line 805 
      if ((long)tmp_2 != 0L) {
        
#line 806 
        __retres = (_Bool)1;
        
#line 806 
        goto return_label;
      }
      else ;
      
#line 809 
      put_page(page);
      
#line 810 
      __retres = (_Bool)0;
      
#line 810 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 813 
  ;
  
#line 813 
  ;
  
#line 813 
  ;
  
#line 813 
  ;
  
#line 813 
  tmp_5 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 813 
  ;
  
#line 813 
  skb_add_rx_frag(skb,(int)((struct skb_shared_info *)tmp_5)->nr_frags,page,(int)rx_buffer->page_offset,(int)size,truesize);
  
#line 817 
  tmp_6 = ixgbevf_page_is_reserved(page);
  
#line 817 
  if ((long)((int)tmp_6 != 0) != 0L) {
    
#line 818 
    __retres = (_Bool)0;
    
#line 818 
    goto return_label;
  }
  else ;
  
#line 822 
  tmp_7 = page_count(page);
  
#line 822 
  if ((long)(tmp_7 != 1) != 0L) {
    
#line 823 
    __retres = (_Bool)0;
    
#line 823 
    goto return_label;
  }
  else ;
  
#line 826 
  rx_buffer->page_offset ^= 2048U;
  
#line 839 
  atomic_inc(& page->__anonCompField_page_44.__anonCompField___anonstruct_160_43.__anonCompField___anonunion_162_42._count);
  
#line 841 
  __retres = (_Bool)1;
  return_label: 
#line 841 
                return __retres;
}


#line 844  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static struct sk_buff *ixgbevf_fetch_rx_buffer(struct ixgbevf_ring *rx_ring, union ixgbe_adv_rx_desc *rx_desc, struct sk_buff *skb)
{
  struct sk_buff *__retres;
  struct ixgbevf_rx_buffer *rx_buffer;
  struct page *page;
  bool tmp_0;
  
#line 851 
  rx_buffer = rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info + (int)rx_ring->next_to_clean;
  
#line 852 
  page = rx_buffer->page;
  
#line 853 
  prefetchw((void const *)page);
  
#line 855 
  if ((long)(skb == (struct sk_buff *)0) != 0L) {
    void *tmp;
    
#line 856 
    tmp = lowmem_page_address((struct page const *)page);
    
#line 856 
    void *page_addr = tmp + rx_buffer->page_offset;
    
#line 860 
    __builtin_prefetch((void const *)page_addr);
    
#line 862 
    __builtin_prefetch((void const *)(page_addr + 64U));
    
#line 866 
    skb = netdev_alloc_skb_ip_align(rx_ring->netdev,256U);
    
#line 868 
    if ((long)(skb == (struct sk_buff *)0) != 0L) {
      
#line 869 
      rx_ring->__anonCompField_ixgbevf_ring_116.rx_stats.alloc_rx_buff_failed += 1ULL;
      
#line 870 
      __retres = (struct sk_buff *)0;
      
#line 870 
      goto return_label;
    }
    else ;
    
#line 877 
    prefetchw((void const *)skb->data);
  }
  else ;
  
#line 881 
  dma_sync_single_range_for_cpu(rx_ring->dev,rx_buffer->dma,(unsigned long)rx_buffer->page_offset,2048UL,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 888 
  tmp_0 = ixgbevf_add_rx_frag(rx_ring,rx_buffer,rx_desc,skb);
  
#line 888 
  if ((int)tmp_0 != 0) 
#line 890 
                       ixgbevf_reuse_rx_page(rx_ring,rx_buffer); else 
                                                                   
#line 893 
                                                                   dma_unmap_page(rx_ring->dev,rx_buffer->dma,4096UL,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 898 
  rx_buffer->dma = 0ULL;
  
#line 899 
  rx_buffer->page = (struct page *)0;
  
#line 901 
  __retres = skb;
  return_label: 
#line 901 
                return __retres;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
__inline static void ixgbevf_irq_enable_queues(struct ixgbevf_adapter *adapter, u32 qmask)
{
  
#line 907 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 909 
  ixgbe_write_reg(hw,264U,qmask);
  
#line 910 
  return;
}


#line 912  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_clean_rx_irq(struct ixgbevf_q_vector *q_vector, struct ixgbevf_ring *rx_ring, int budget)
{
  int __retres;
  
#line 916 
  unsigned int total_rx_bytes = 0U;
  
#line 916 
  unsigned int total_rx_packets = 0U;
  
#line 917 
  u16 cleaned_count = ixgbevf_desc_unused(rx_ring);
  
#line 918 
  struct sk_buff *skb = rx_ring->skb;
  
#line 920 
  goto ldv_54907;
  ldv_54908: 
#line 921 
  ;
  {
    union ixgbe_adv_rx_desc *rx_desc;
    __le32 tmp_0;
    bool tmp_1;
    bool tmp_2;
    
#line 924 
    if ((unsigned int)cleaned_count > 15U) {
      
#line 925 
      ixgbevf_alloc_rx_buffers(rx_ring,(unsigned short)((int)cleaned_count));
      
#line 926 
      cleaned_count = (unsigned short)0U;
    }
    else ;
    
#line 929 
    rx_desc = (union ixgbe_adv_rx_desc *)rx_ring->desc + (int)rx_ring->next_to_clean;
    
#line 931 
    tmp_0 = ixgbevf_test_staterr(rx_desc,1U);
    
#line 931 
    if (tmp_0 == 0U) 
#line 932 
                     goto ldv_54906; else ;
    
#line 933 
    ldv_inline_asm();
    
#line 941 
    skb = ixgbevf_fetch_rx_buffer(rx_ring,rx_desc,skb);
    
#line 944 
    if (skb == (struct sk_buff *)0) 
#line 945 
                                    goto ldv_54906; else ;
    
#line 947 
    cleaned_count = (u16)((int)cleaned_count + 1);
    
#line 950 
    tmp_1 = ixgbevf_is_non_eop(rx_ring,rx_desc);
    
#line 950 
    if ((int)tmp_1 != 0) 
#line 951 
                         goto ldv_54907; else ;
    
#line 954 
    tmp_2 = ixgbevf_cleanup_headers(rx_ring,rx_desc,skb);
    
#line 954 
    if ((int)tmp_2 != 0) {
      
#line 955 
      skb = (struct sk_buff *)0;
      
#line 956 
      goto ldv_54907;
    }
    else ;
    
#line 960 
    total_rx_bytes = skb->len + total_rx_bytes;
    
#line 965 
    if ((unsigned int)*((unsigned char *)skb + 144UL) + 255U <= 1U) {
      bool tmp_4;
      struct ethhdr *tmp_3;
      
#line 968 
      tmp_3 = eth_hdr((struct sk_buff const *)skb);
      
#line 966 
      ;
      
#line 966 
      tmp_4 = ether_addr_equal((u8 const *)(rx_ring->netdev)->dev_addr,(u8 const *)(& tmp_3->h_source));
      
#line 966 
      if ((int)tmp_4 != 0) {
        
#line 969 
        dev_kfree_skb_irq(skb);
        
#line 970 
        goto ldv_54907;
      }
      else ;
    }
    else ;
    
#line 974 
    ixgbevf_process_skb_fields(rx_ring,rx_desc,skb);
    
#line 976 
    ixgbevf_rx_skb(q_vector,skb);
    
#line 979 
    skb = (struct sk_buff *)0;
    
#line 982 
    total_rx_packets += 1U;
  }
  ldv_54907: 
#line 984 
  ;
  
#line 920 
  if ((long)(total_rx_packets < (unsigned int)budget) != 0L) 
#line 922 
                                                             goto ldv_54908; else 
                                                                    
#line 925 
                                                                    goto ldv_54906;
  ldv_54906: 
#line 926 
  ;
  
#line 986 
  rx_ring->skb = skb;
  
#line 988 
  u64_stats_update_begin(& rx_ring->syncp);
  
#line 989 
  rx_ring->stats.packets += (unsigned long long)total_rx_packets;
  
#line 990 
  rx_ring->stats.bytes += (unsigned long long)total_rx_bytes;
  
#line 991 
  u64_stats_update_begin(& rx_ring->syncp);
  
#line 992 
  q_vector->rx.total_packets += total_rx_packets;
  
#line 993 
  q_vector->rx.total_bytes += total_rx_bytes;
  
#line 995 
  __retres = (int)total_rx_packets;
  
#line 995 
  return __retres;
}


#line 1006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_poll(struct napi_struct *napi, int budget)
{
  int __retres;
  struct ixgbevf_q_vector *tmp;
  struct ixgbevf_ring *ring;
  int per_ring_budget;
  bool tmp_0;
  int tmp_2;
  bool tmp_1;
  int tmp_5;
  int tmp_6;
  {
    
#line 1009 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1009 
    tmp = (struct ixgbevf_q_vector *)__mptr + 18446744073709551600U;
  }
  
#line 1008 
  struct ixgbevf_q_vector *q_vector = tmp;
  
#line 1010 
  struct ixgbevf_adapter *adapter = q_vector->adapter;
  
#line 1013 
  bool clean_complete = (_Bool)1;
  
#line 1015 
  ring = q_vector->tx.ring;
  
#line 1015 
  goto ldv_54921;
  ldv_54920: 
#line 1016 
  ;
  
#line 1016 
  tmp_0 = ixgbevf_clean_tx_irq(q_vector,ring);
  
#line 1016 
  clean_complete = (_Bool)(((int)clean_complete & (int)tmp_0) != 0);
  
#line 1015 
  ring = ring->next;
  ldv_54921: 
#line 1016 
  ;
  
#line 1015 
  if (ring != (struct ixgbevf_ring *)0) 
#line 1017 
                                        goto ldv_54920; else 
#line 1020 
                                                             goto ldv_54922;
  ldv_54922: 
#line 1021 
  ;
  
#line 1019 
  tmp_1 = ixgbevf_qv_lock_napi(q_vector);
  
#line 1019 
  if (tmp_1) 
#line 1019 
             tmp_2 = 0; else 
#line 1019 
                             tmp_2 = 1;
  
#line 1019 
  if (tmp_2) {
    
#line 1020 
    __retres = budget;
    
#line 1020 
    goto return_label;
  }
  else ;
  
#line 1026 
  if ((unsigned int)q_vector->rx.count > 1U) {
    int tmp_4;
    {
      int tmp_3;
      
#line 1027 
      int _max1 = budget / (int)q_vector->rx.count;
      
#line 1027 
      int _max2 = 1;
      
#line 1027 
      if (_max1 > _max2) 
#line 1027 
                         tmp_3 = _max1; else 
#line 1027 
                                             tmp_3 = _max2;
      
#line 1027 
      tmp_4 = tmp_3;
    }
    
#line 1027 
    per_ring_budget = tmp_4;
  }
  else 
#line 1029 
       per_ring_budget = budget;
  
#line 1031 
  ring = q_vector->rx.ring;
  
#line 1031 
  goto ldv_54927;
  ldv_54926: 
#line 1032 
  ;
  
#line 1032 
  tmp_5 = ixgbevf_clean_rx_irq(q_vector,ring,per_ring_budget);
  
#line 1034 
  clean_complete = (_Bool)(((int)clean_complete & (tmp_5 < per_ring_budget)) != 0);
  
#line 1031 
  ring = ring->next;
  ldv_54927: 
#line 1032 
  ;
  
#line 1031 
  if (ring != (struct ixgbevf_ring *)0) 
#line 1033 
                                        goto ldv_54926; else 
#line 1036 
                                                             goto ldv_54928;
  ldv_54928: 
#line 1037 
  ;
  
#line 1037 
  ixgbevf_qv_unlock_napi(q_vector);
  
#line 1041 
  if (! clean_complete) {
    
#line 1042 
    __retres = budget;
    
#line 1042 
    goto return_label;
  }
  else ;
  
#line 1044 
  napi_complete(napi);
  
#line 1045 
  if (((int)adapter->rx_itr_setting & 1) != 0) 
#line 1046 
                                               ixgbevf_set_itr(q_vector); else ;
  
#line 1047 
  tmp_6 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 1047 
  if (tmp_6 == 0) {
    int tmp_7;
    
#line 1047 
    tmp_7 = constant_test_bit(4L,(unsigned long const volatile *)(& adapter->state));
    
#line 1047 
    if (tmp_7 == 0) 
#line 1049 
                    ixgbevf_irq_enable_queues(adapter,(unsigned int)(1 << (int)q_vector->v_idx)); else ;
  }
  else ;
  
#line 1052 
  __retres = 0;
  return_label: 
#line 1052 
                return __retres;
}


#line 1059  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
void ixgbevf_write_eitr(struct ixgbevf_q_vector *q_vector)
{
  
#line 1061 
  struct ixgbevf_adapter *adapter = q_vector->adapter;
  
#line 1062 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1063 
  int v_idx = (int)q_vector->v_idx;
  
#line 1064 
  u32 itr_reg = (unsigned int)q_vector->itr & 4088U;
  
#line 1069 
  itr_reg |= 2147483648U;
  
#line 1071 
  ixgbe_write_reg(hw,(unsigned int)((v_idx + 520) * 4),itr_reg);
  
#line 1072 
  return;
}


#line 1076  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_busy_poll_recv(struct napi_struct *napi)
{
  int __retres;
  struct ixgbevf_q_vector *tmp;
  struct ixgbevf_ring *ring;
  int tmp_0;
  int tmp_2;
  bool tmp_1;
  {
    
#line 1079 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1079 
    tmp = (struct ixgbevf_q_vector *)__mptr + 18446744073709551600U;
  }
  
#line 1078 
  struct ixgbevf_q_vector *q_vector = tmp;
  
#line 1080 
  struct ixgbevf_adapter *adapter = q_vector->adapter;
  
#line 1082 
  int found = 0;
  
#line 1084 
  tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 1084 
  if (tmp_0 != 0) {
    
#line 1085 
    __retres = -1;
    
#line 1085 
    goto return_label;
  }
  else ;
  
#line 1087 
  tmp_1 = ixgbevf_qv_lock_poll(q_vector);
  
#line 1087 
  if (tmp_1) 
#line 1087 
             tmp_2 = 0; else 
#line 1087 
                             tmp_2 = 1;
  
#line 1087 
  if (tmp_2) {
    
#line 1088 
    __retres = -2;
    
#line 1088 
    goto return_label;
  }
  else ;
  
#line 1090 
  ring = q_vector->rx.ring;
  
#line 1090 
  goto ldv_54947;
  ldv_54946: 
#line 1091 
  ;
  
#line 1091 
  found = ixgbevf_clean_rx_irq(q_vector,ring,4);
  
#line 1093 
  if (found != 0) 
#line 1094 
                  ring->stats.cleaned += (unsigned long long)found; else 
                                                                    
#line 1096 
                                                                    ring->stats.misses += 1ULL;
  
#line 1098 
  if (found != 0) 
#line 1099 
                  goto ldv_54945; else ;
  
#line 1090 
  ring = ring->next;
  ldv_54947: 
#line 1091 
  ;
  
#line 1090 
  if (ring != (struct ixgbevf_ring *)0) 
#line 1092 
                                        goto ldv_54946; else 
#line 1095 
                                                             goto ldv_54945;
  ldv_54945: 
#line 1096 
  ;
  
#line 1102 
  ixgbevf_qv_unlock_poll(q_vector);
  
#line 1104 
  __retres = found;
  return_label: 
#line 1104 
                return __retres;
}


#line 1115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_configure_msix(struct ixgbevf_adapter *adapter)
{
  struct ixgbevf_q_vector *q_vector;
  int q_vectors;
  int v_idx;
  
#line 1120 
  q_vectors = adapter->num_msix_vectors + -1;
  
#line 1121 
  adapter->eims_enable_mask = 0U;
  
#line 1126 
  v_idx = 0;
  
#line 1126 
  goto ldv_54962;
  ldv_54961: 
#line 1127 
  ;
  {
    struct ixgbevf_ring *ring;
    
#line 1129 
    q_vector = adapter->q_vector[v_idx];
    
#line 1131 
    ring = q_vector->rx.ring;
    
#line 1131 
    goto ldv_54956;
    ldv_54955: 
#line 1132 
    ;
    
#line 1132 
    ixgbevf_set_ivar(adapter,(signed char)0,(unsigned char)((int)((unsigned char)ring->reg_idx)),(unsigned char)((int)((unsigned char)v_idx)));
    
#line 1131 
    ring = ring->next;
    ldv_54956: 
#line 1132 
    ;
    
#line 1131 
    if (ring != (struct ixgbevf_ring *)0) 
#line 1133 
                                          goto ldv_54955; else 
#line 1136 
                                                               goto ldv_54957;
    ldv_54957: 
#line 1137 
    ;
    
#line 1134 
    ring = q_vector->tx.ring;
    
#line 1134 
    goto ldv_54959;
    ldv_54958: 
#line 1135 
    ;
    
#line 1135 
    ixgbevf_set_ivar(adapter,(signed char)1,(unsigned char)((int)((unsigned char)ring->reg_idx)),(unsigned char)((int)((unsigned char)v_idx)));
    
#line 1134 
    ring = ring->next;
    ldv_54959: 
#line 1135 
    ;
    
#line 1134 
    if (ring != (struct ixgbevf_ring *)0) 
#line 1136 
                                          goto ldv_54958; else 
#line 1139 
                                                               goto ldv_54960;
    ldv_54960: 
#line 1140 
    ;
    
#line 1137 
    if (q_vector->tx.ring != (struct ixgbevf_ring *)0 && q_vector->rx.ring == (struct ixgbevf_ring *)0) 
      
#line 1139 
      if ((unsigned int)adapter->tx_itr_setting == 1U) 
#line 1140 
                                                       q_vector->itr = (unsigned short)400U; else 
                                                                    
#line 1142 
                                                                    q_vector->itr = adapter->tx_itr_setting;
    else 
      
#line 1145 
      if ((unsigned int)adapter->rx_itr_setting == 1U) 
#line 1146 
                                                       q_vector->itr = (unsigned short)200U; else 
                                                                    
#line 1148 
                                                                    q_vector->itr = adapter->rx_itr_setting;
    
#line 1152 
    adapter->eims_enable_mask |= (unsigned int)(1 << v_idx);
    
#line 1154 
    ixgbevf_write_eitr(q_vector);
  }
  
#line 1126 
  v_idx += 1;
  ldv_54962: 
#line 1127 
  ;
  
#line 1126 
  if (v_idx < q_vectors) 
#line 1128 
                         goto ldv_54961; else 
#line 1131 
                                              goto ldv_54963;
  ldv_54963: 
#line 1132 
  ;
  
#line 1157 
  ixgbevf_set_ivar(adapter,(signed char)(-1),(unsigned char)1,(unsigned char)((int)((unsigned char)v_idx)));
  
#line 1159 
  adapter->eims_other = (unsigned int)(1 << v_idx);
  
#line 1160 
  adapter->eims_enable_mask |= adapter->eims_other;
  
#line 1161 
  return;
}


#line 1183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_update_itr(struct ixgbevf_q_vector *q_vector, struct ixgbevf_ring_container *ring_container)
{
  u32 timepassed_us;
  u64 bytes_perint;
  
#line 1186 
  int bytes = (int)ring_container->total_bytes;
  
#line 1187 
  int packets = (int)ring_container->total_packets;
  
#line 1190 
  u8 itr_setting = ring_container->itr;
  
#line 1192 
  if (packets == 0) 
#line 1193 
                    goto return_label; else ;
  
#line 1201 
  timepassed_us = (unsigned int)((int)q_vector->itr >> 2);
  
#line 1202 
  bytes_perint = (unsigned long long)((unsigned int)bytes / timepassed_us);
  
#line 1204 
  switch ((int)itr_setting) {
    case 0: 
#line 1205 
    ;
    
#line 1206 
    if (bytes_perint > 10ULL) 
#line 1207 
                              itr_setting = (unsigned char)1U; else ;
    
#line 1208 
    goto ldv_54979;
    case 1: 
#line 1209 
    ;
    
#line 1210 
    if (bytes_perint > 20ULL) 
#line 1211 
                              itr_setting = (unsigned char)2U;
    else 
      
#line 1212 
      if (bytes_perint <= 10ULL) 
#line 1213 
                                 itr_setting = (unsigned char)0U; else ;
    
#line 1214 
    goto ldv_54979;
    case 2: 
#line 1215 
    ;
    
#line 1216 
    if (bytes_perint <= 20ULL) 
#line 1217 
                               itr_setting = (unsigned char)1U; else ;
    
#line 1218 
    goto ldv_54979;
  }
  ldv_54979: 
#line 1222 
  ;
  
#line 1222 
  ring_container->total_bytes = 0U;
  
#line 1223 
  ring_container->total_packets = 0U;
  
#line 1226 
  ring_container->itr = itr_setting;
  return_label: 
#line 1227 
                return;
}


#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_set_itr(struct ixgbevf_q_vector *q_vector)
{
  u8 current_itr;
  int tmp_0;
  
#line 1231 
  u32 new_itr = (unsigned int)q_vector->itr;
  
#line 1234 
  ixgbevf_update_itr(q_vector,& q_vector->tx);
  
#line 1235 
  ixgbevf_update_itr(q_vector,& q_vector->rx);
  {
    int tmp;
    
#line 1237 
    u8 _max1 = q_vector->rx.itr;
    
#line 1237 
    u8 _max2 = q_vector->tx.itr;
    
#line 1237 
    if ((int)_max1 > (int)_max2) 
#line 1237 
                                 tmp = (int)_max1; else 
#line 1237 
                                                        tmp = (int)_max2;
    
#line 1237 
    tmp_0 = tmp;
  }
  
#line 1237 
  current_itr = (unsigned char)tmp_0;
  
#line 1239 
  switch ((int)current_itr) {
    case 0: 
#line 1241 
    ;
    
#line 1242 
    new_itr = 40U;
    
#line 1243 
    goto ldv_54991;
    case 1: 
#line 1244 
    ;
    
#line 1245 
    new_itr = 200U;
    
#line 1246 
    goto ldv_54991;
    case 2: 
#line 1247 
    ;
    default: 
#line 1248 
    ;
    
#line 1249 
    new_itr = 500U;
    
#line 1250 
    goto ldv_54991;
  }
  ldv_54991: 
#line 1253 
  ;
  
#line 1253 
  if ((unsigned int)q_vector->itr != new_itr) {
    
#line 1255 
    new_itr = (((unsigned int)q_vector->itr * new_itr) * 10U) / (new_itr * 9U + (unsigned int)q_vector->itr);
    
#line 1259 
    q_vector->itr = (unsigned short)new_itr;
    
#line 1261 
    ixgbevf_write_eitr(q_vector);
  }
  else ;
  
#line 1263 
  return;
}


#line 1265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static irqreturn_t ixgbevf_msix_other(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 1267 
  struct ixgbevf_adapter *adapter = (struct ixgbevf_adapter *)data;
  
#line 1268 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1270 
  hw->mac.get_link_status = (_Bool)1;
  
#line 1272 
  ixgbevf_service_event_schedule(adapter);
  
#line 1274 
  ixgbe_write_reg(hw,264U,adapter->eims_other);
  
#line 1276 
  __retres = IRQ_HANDLED;
  
#line 1276 
  return __retres;
}


#line 1284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static irqreturn_t ixgbevf_msix_clean_rings(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 1286 
  struct ixgbevf_q_vector *q_vector = (struct ixgbevf_q_vector *)data;
  
#line 1289 
  if (q_vector->rx.ring != (struct ixgbevf_ring *)0 || q_vector->tx.ring != (struct ixgbevf_ring *)0) 
    
#line 1290 
    napi_schedule(& q_vector->napi); else ;
  
#line 1292 
  __retres = IRQ_HANDLED;
  
#line 1292 
  return __retres;
}


#line 1295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
__inline static void map_vector_to_rxq(struct ixgbevf_adapter *a, int v_idx, int r_idx)
{
  
#line 1298 
  struct ixgbevf_q_vector *q_vector = a->q_vector[v_idx];
  
#line 1300 
  (a->rx_ring[r_idx])->next = q_vector->rx.ring;
  
#line 1301 
  q_vector->rx.ring = a->rx_ring[r_idx];
  
#line 1302 
  q_vector->rx.count = (u8)((int)q_vector->rx.count + 1);
  
#line 1303 
  return;
}


#line 1305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
__inline static void map_vector_to_txq(struct ixgbevf_adapter *a, int v_idx, int t_idx)
{
  
#line 1308 
  struct ixgbevf_q_vector *q_vector = a->q_vector[v_idx];
  
#line 1310 
  (a->tx_ring[t_idx])->next = q_vector->tx.ring;
  
#line 1311 
  q_vector->tx.ring = a->tx_ring[t_idx];
  
#line 1312 
  q_vector->tx.count = (u8)((int)q_vector->tx.count + 1);
  
#line 1313 
  return;
}


#line 1325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_map_rings_to_vectors(struct ixgbevf_adapter *adapter)
{
  int q_vectors;
  int i;
  int j;
  int rqpv;
  int tqpv;
  
#line 1328 
  int v_start = 0;
  
#line 1329 
  int rxr_idx = 0;
  
#line 1329 
  int txr_idx = 0;
  
#line 1330 
  int rxr_remaining = adapter->num_rx_queues;
  
#line 1331 
  int txr_remaining = adapter->num_tx_queues;
  
#line 1334 
  int err = 0;
  
#line 1336 
  q_vectors = adapter->num_msix_vectors + -1;
  
#line 1341 
  if (adapter->num_rx_queues + adapter->num_tx_queues == q_vectors) {
    
#line 1342 
    goto ldv_55033;
    ldv_55032: 
#line 1343 
    ;
    
#line 1343 
    map_vector_to_rxq(adapter,v_start,rxr_idx);
    
#line 1342 
    v_start += 1;
    
#line 1342 
    rxr_idx += 1;
    ldv_55033: 
#line 1343 
    ;
    
#line 1342 
    if (rxr_idx < rxr_remaining) 
#line 1344 
                                 goto ldv_55032; else 
#line 1347 
                                                      goto ldv_55034;
    ldv_55034: 
#line 1348 
    ;
    
#line 1345 
    goto ldv_55036;
    ldv_55035: 
#line 1346 
    ;
    
#line 1346 
    map_vector_to_txq(adapter,v_start,txr_idx);
    
#line 1345 
    v_start += 1;
    
#line 1345 
    txr_idx += 1;
    ldv_55036: 
#line 1346 
    ;
    
#line 1345 
    if (txr_idx < txr_remaining) 
#line 1347 
                                 goto ldv_55035; else 
#line 1350 
                                                      goto ldv_55037;
    ldv_55037: 
#line 1351 
    ;
    
#line 1347 
    goto out;
  }
  else ;
  
#line 1355 
  i = v_start;
  
#line 1355 
  goto ldv_55043;
  ldv_55042: 
#line 1356 
  ;
  
#line 1356 
  rqpv = (((q_vectors - i) + rxr_remaining) + -1) / (q_vectors - i);
  
#line 1357 
  j = 0;
  
#line 1357 
  goto ldv_55040;
  ldv_55039: 
#line 1358 
  ;
  
#line 1358 
  map_vector_to_rxq(adapter,i,rxr_idx);
  
#line 1359 
  rxr_idx += 1;
  
#line 1360 
  rxr_remaining -= 1;
  
#line 1357 
  j += 1;
  ldv_55040: 
#line 1358 
  ;
  
#line 1357 
  if (j < rqpv) 
#line 1359 
                goto ldv_55039; else 
#line 1362 
                                     goto ldv_55041;
  ldv_55041: 
#line 1363 
  ;
  
#line 1355 
  i += 1;
  ldv_55043: 
#line 1356 
  ;
  
#line 1355 
  if (i < q_vectors) 
#line 1357 
                     goto ldv_55042; else 
#line 1360 
                                          goto ldv_55044;
  ldv_55044: 
#line 1361 
  ;
  
#line 1363 
  i = v_start;
  
#line 1363 
  goto ldv_55049;
  ldv_55048: 
#line 1364 
  ;
  
#line 1364 
  tqpv = (((q_vectors - i) + txr_remaining) + -1) / (q_vectors - i);
  
#line 1365 
  j = 0;
  
#line 1365 
  goto ldv_55046;
  ldv_55045: 
#line 1366 
  ;
  
#line 1366 
  map_vector_to_txq(adapter,i,txr_idx);
  
#line 1367 
  txr_idx += 1;
  
#line 1368 
  txr_remaining -= 1;
  
#line 1365 
  j += 1;
  ldv_55046: 
#line 1366 
  ;
  
#line 1365 
  if (j < tqpv) 
#line 1367 
                goto ldv_55045; else 
#line 1370 
                                     goto ldv_55047;
  ldv_55047: 
#line 1371 
  ;
  
#line 1363 
  i += 1;
  ldv_55049: 
#line 1364 
  ;
  
#line 1363 
  if (i < q_vectors) 
#line 1365 
                     goto ldv_55048; else 
#line 1368 
                                          goto ldv_55050;
  ldv_55050: 
#line 1369 
  ;
  out: 
#line 1372 
  ;
  
#line 1373 
  return err;
}


#line 1383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_request_msix_irqs(struct ixgbevf_adapter *adapter)
{
  int __retres;
  int vector;
  int err;
  
#line 1385 
  struct net_device *netdev = adapter->netdev;
  
#line 1386 
  int q_vectors = adapter->num_msix_vectors + -1;
  
#line 1388 
  int ri = 0;
  
#line 1388 
  int ti = 0;
  
#line 1390 
  vector = 0;
  
#line 1390 
  goto ldv_55065;
  ldv_55064: 
#line 1391 
  ;
  {
    
#line 1391 
    struct ixgbevf_q_vector *q_vector = adapter->q_vector[vector];
    
#line 1392 
    struct msix_entry *entry = adapter->msix_entries + vector;
    
#line 1394 
    if (q_vector->tx.ring != (struct ixgbevf_ring *)0 && q_vector->rx.ring != (struct ixgbevf_ring *)0) {
      int tmp;
      
#line 1396 
      tmp = ri;
      
#line 1396 
      ri += 1;
      
#line 1395 
      ;
      
#line 1395 
      ;
      
#line 1395 
      ;
      
#line 1395 
      snprintf((char *)(& q_vector->name),24UL,"%s-%s-%d",(char *)(& netdev->name),(char *)"TxRx",tmp);
      
#line 1397 
      ti += 1;
    }
    else 
      
#line 1398 
      if (q_vector->rx.ring != (struct ixgbevf_ring *)0) {
        int tmp_0;
        
#line 1400 
        tmp_0 = ri;
        
#line 1400 
        ri += 1;
        
#line 1399 
        ;
        
#line 1399 
        ;
        
#line 1399 
        ;
        
#line 1399 
        snprintf((char *)(& q_vector->name),24UL,"%s-%s-%d",(char *)(& netdev->name),(char *)"rx",tmp_0);
      }
      else 
        
#line 1401 
        if (q_vector->tx.ring != (struct ixgbevf_ring *)0) {
          int tmp_1;
          
#line 1403 
          tmp_1 = ti;
          
#line 1403 
          ti += 1;
          
#line 1402 
          ;
          
#line 1402 
          ;
          
#line 1402 
          ;
          
#line 1402 
          snprintf((char *)(& q_vector->name),24UL,"%s-%s-%d",(char *)(& netdev->name),(char *)"tx",tmp_1);
        }
        else 
#line 1406 
             goto ldv_55062;
    
#line 1408 
    err = ldv_request_irq_84(entry->vector,& ixgbevf_msix_clean_rings,0UL,(char const *)(& q_vector->name),(void *)q_vector);
    
#line 1410 
    if (err != 0) 
#line 1414 
                  goto free_queue_irqs; else ;
  }
  ldv_55062: 
#line 1416 
  ;
  
#line 1390 
  vector += 1;
  ldv_55065: 
#line 1391 
  ;
  
#line 1390 
  if (vector < q_vectors) 
#line 1392 
                          goto ldv_55064; else 
#line 1395 
                                               goto ldv_55066;
  ldv_55066: 
#line 1396 
  ;
  
#line 1418 
  err = ldv_request_irq_85((adapter->msix_entries + vector)->vector,& ixgbevf_msix_other,0UL,(char const *)(& netdev->name),(void *)adapter);
  
#line 1420 
  if (err != 0) 
#line 1423 
                goto free_queue_irqs; else ;
  
#line 1426 
  __retres = 0;
  
#line 1426 
  goto return_label;
  free_queue_irqs: 
#line 1428 
  ;
  
#line 1429 
  goto ldv_55068;
  ldv_55067: 
#line 1430 
  ;
  
#line 1430 
  vector -= 1;
  
#line 1431 
  ldv_free_irq_86((adapter->msix_entries + vector)->vector,(void *)adapter->q_vector[vector]);
  ldv_55068: 
#line 1433 
  ;
  
#line 1429 
  if (vector != 0) 
#line 1431 
                   goto ldv_55067; else 
#line 1434 
                                        goto ldv_55069;
  ldv_55069: 
#line 1435 
  ;
  
#line 1444 
  adapter->num_msix_vectors = 0;
  
#line 1445 
  __retres = err;
  return_label: 
#line 1445 
                return __retres;
}


#line 1448  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
__inline static void ixgbevf_reset_q_vectors(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 1450 
  int q_vectors = adapter->num_msix_vectors + -1;
  
#line 1452 
  i = 0;
  
#line 1452 
  goto ldv_55077;
  ldv_55076: 
#line 1453 
  ;
  {
    
#line 1453 
    struct ixgbevf_q_vector *q_vector = adapter->q_vector[i];
    
#line 1455 
    q_vector->rx.ring = (struct ixgbevf_ring *)0;
    
#line 1456 
    q_vector->tx.ring = (struct ixgbevf_ring *)0;
    
#line 1457 
    q_vector->rx.count = (unsigned char)0U;
    
#line 1458 
    q_vector->tx.count = (unsigned char)0U;
  }
  
#line 1452 
  i += 1;
  ldv_55077: 
#line 1453 
  ;
  
#line 1452 
  if (i < q_vectors) 
#line 1454 
                     goto ldv_55076; else 
#line 1457 
                                          goto ldv_55078;
  ldv_55078: 
#line 1458 
  ;
  
#line 1459 
  return;
}


#line 1469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_request_irq(struct ixgbevf_adapter *adapter)
{
  
#line 1471 
  int err = 0;
  
#line 1473 
  err = ixgbevf_request_msix_irqs(adapter);
  
#line 1475 
  if (err != 0) ; else ;
  
#line 1478 
  return err;
}


#line 1481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_free_irq(struct ixgbevf_adapter *adapter)
{
  int i;
  int q_vectors;
  
#line 1485 
  q_vectors = adapter->num_msix_vectors;
  
#line 1486 
  i = q_vectors + -1;
  
#line 1488 
  ldv_free_irq_87((adapter->msix_entries + i)->vector,(void *)adapter);
  
#line 1489 
  i -= 1;
  
#line 1491 
  goto ldv_55090;
  ldv_55089: 
#line 1492 
  ;
  
#line 1493 
  if ((adapter->q_vector[i])->rx.ring == (struct ixgbevf_ring *)0 && (adapter->q_vector[i])->tx.ring == (struct ixgbevf_ring *)0) 
    
#line 1495 
    goto ldv_55088; else ;
  
#line 1497 
  ldv_free_irq_88((adapter->msix_entries + i)->vector,(void *)adapter->q_vector[i]);
  ldv_55088: 
#line 1499 
  ;
  
#line 1491 
  i -= 1;
  ldv_55090: 
#line 1492 
  ;
  
#line 1491 
  if (i >= 0) 
#line 1493 
              goto ldv_55089; else 
#line 1496 
                                   goto ldv_55091;
  ldv_55091: 
#line 1497 
  ;
  
#line 1501 
  ixgbevf_reset_q_vectors(adapter);
  
#line 1502 
  return;
}


#line 1508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
__inline static void ixgbevf_irq_disable(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 1510 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1513 
  ixgbe_write_reg(hw,276U,0U);
  
#line 1514 
  ixgbe_write_reg(hw,268U,4294967295U);
  
#line 1515 
  ixgbe_write_reg(hw,272U,0U);
  
#line 1517 
  ixgbevf_read_reg(hw,8U);
  
#line 1519 
  i = 0;
  
#line 1519 
  goto ldv_55098;
  ldv_55097: 
#line 1520 
  ;
  
#line 1520 
  synchronize_irq((adapter->msix_entries + i)->vector);
  
#line 1519 
  i += 1;
  ldv_55098: 
#line 1520 
  ;
  
#line 1519 
  if (adapter->num_msix_vectors > i) 
#line 1521 
                                     goto ldv_55097; else 
#line 1524 
                                                          goto ldv_55099;
  ldv_55099: 
#line 1525 
  ;
  
#line 1526 
  return;
}


#line 1527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
__inline static void ixgbevf_irq_enable(struct ixgbevf_adapter *adapter)
{
  
#line 1529 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1531 
  ixgbe_write_reg(hw,276U,adapter->eims_enable_mask);
  
#line 1532 
  ixgbe_write_reg(hw,272U,adapter->eims_enable_mask);
  
#line 1533 
  ixgbe_write_reg(hw,264U,adapter->eims_enable_mask);
  
#line 1534 
  return;
}


#line 1543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_configure_tx_ring(struct ixgbevf_adapter *adapter, struct ixgbevf_ring *ring)
{
  
#line 1546 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1547 
  u64 tdba = ring->dma;
  
#line 1548 
  int wait_loop = 10;
  
#line 1549 
  u32 txdctl = 33554432U;
  
#line 1550 
  u8 reg_idx = (unsigned char)ring->reg_idx;
  
#line 1553 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8232),67108864U);
  
#line 1554 
  ixgbevf_read_reg(hw,8U);
  
#line 1556 
  ixgbe_write_reg(hw,(unsigned int)(((int)reg_idx + 128) * 64),(unsigned int)tdba);
  
#line 1557 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8196),(unsigned int)(tdba >> 32));
  
#line 1558 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8200),(unsigned int)ring->count * 16U);
  
#line 1562 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8252),0U);
  
#line 1563 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8248),0U);
  
#line 1566 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8204),8704U);
  
#line 1571 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8208),0U);
  
#line 1572 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8216),0U);
  
#line 1573 
  ring->tail = adapter->io_addr + ((int)reg_idx * 64 + 8216);
  
#line 1576 
  ring->next_to_clean = (unsigned short)0U;
  
#line 1577 
  ring->next_to_use = (unsigned short)0U;
  
#line 1583 
  txdctl |= 524288U;
  
#line 1586 
  txdctl |= 288U;
  
#line 1589 
  set_bit(1L,(unsigned long volatile *)(& ring->state));
  
#line 1591 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8232),txdctl);
  ldv_55113: 
#line 1592 
  ;
  
#line 1595 
  usleep_range(1000UL,2000UL);
  
#line 1596 
  txdctl = ixgbevf_read_reg(hw,(unsigned int)((int)reg_idx * 64 + 8232));
  
#line 1597 
  wait_loop -= 1;
  
#line 1597 
  if (wait_loop != 0) {
    
#line 1597 
    if ((txdctl & 33554432U) == 0U) 
#line 1599 
                                    goto ldv_55113; else 
#line 1602 
                                                         goto ldv_55114;
  }
  else 
#line 1602 
       goto ldv_55114;
  ldv_55114: 
#line 1603 
  ;
  
#line 1598 
  if (wait_loop == 0) 
#line 1599 
                      printk("\001",(int)reg_idx); else ;
  
#line 1600 
  return;
}


#line 1608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_configure_tx(struct ixgbevf_adapter *adapter)
{
  u32 i;
  
#line 1613 
  i = 0U;
  
#line 1613 
  goto ldv_55120;
  ldv_55119: 
#line 1614 
  ;
  
#line 1614 
  ixgbevf_configure_tx_ring(adapter,adapter->tx_ring[i]);
  
#line 1613 
  i += 1U;
  ldv_55120: 
#line 1614 
  ;
  
#line 1613 
  if ((unsigned int)adapter->num_tx_queues > i) 
#line 1615 
                                                goto ldv_55119; else 
                                                                  
#line 1618 
                                                                  goto ldv_55121;
  ldv_55121: 
#line 1619 
  ;
  
#line 1620 
  return;
}


#line 1619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_configure_srrctl(struct ixgbevf_adapter *adapter, int index)
{
  u32 srrctl;
  
#line 1621 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1624 
  srrctl = 268435456U;
  
#line 1626 
  srrctl |= 1024U;
  
#line 1627 
  srrctl |= 2U;
  
#line 1628 
  srrctl |= 33554432U;
  
#line 1630 
  ixgbe_write_reg(hw,(unsigned int)(index * 64 + 4116),srrctl);
  
#line 1631 
  return;
}


#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_setup_psrtype(struct ixgbevf_adapter *adapter)
{
  
#line 1635 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1638 
  u32 psrtype = 4912U;
  
#line 1642 
  if (adapter->num_rx_queues > 1) 
#line 1643 
                                  psrtype |= 536870912U; else ;
  
#line 1645 
  ixgbe_write_reg(hw,768U,psrtype);
  
#line 1646 
  return;
}


#line 1649  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_disable_rx_queue(struct ixgbevf_adapter *adapter, struct ixgbevf_ring *ring)
{
  u32 rxdctl;
  
#line 1652 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1653 
  int wait_loop = 10;
  
#line 1655 
  u8 reg_idx = (unsigned char)ring->reg_idx;
  
#line 1657 
  if ((long)(hw->hw_addr == (u8 *)0U) != 0L) 
#line 1658 
                                             goto return_label; else ;
  
#line 1659 
  rxdctl = ixgbevf_read_reg(hw,(unsigned int)((int)reg_idx * 64 + 4136));
  
#line 1660 
  rxdctl &= 4261412863U;
  
#line 1663 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 4136),rxdctl);
  ldv_55141: 
#line 1664 
  ;
  
#line 1667 
  __const_udelay(42950UL);
  
#line 1668 
  rxdctl = ixgbevf_read_reg(hw,(unsigned int)((int)reg_idx * 64 + 4136));
  
#line 1669 
  wait_loop -= 1;
  
#line 1669 
  if (wait_loop != 0) {
    
#line 1669 
    if ((rxdctl & 33554432U) != 0U) 
#line 1671 
                                    goto ldv_55141; else 
#line 1674 
                                                         goto ldv_55142;
  }
  else 
#line 1674 
       goto ldv_55142;
  ldv_55142: 
#line 1675 
  ;
  
#line 1671 
  if (wait_loop == 0) 
#line 1672 
                      printk("\001",(int)reg_idx); else ;
  return_label: 
#line 1673 
                return;
}


#line 1676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_rx_desc_queue_enable(struct ixgbevf_adapter *adapter, struct ixgbevf_ring *ring)
{
  u32 rxdctl;
  
#line 1679 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1680 
  int wait_loop = 10;
  
#line 1682 
  u8 reg_idx = (unsigned char)ring->reg_idx;
  
#line 1684 
  if ((long)(hw->hw_addr == (u8 *)0U) != 0L) 
#line 1685 
                                             goto return_label; else ;
  ldv_55151: 
#line 1686 
  ;
  
#line 1687 
  usleep_range(1000UL,2000UL);
  
#line 1688 
  rxdctl = ixgbevf_read_reg(hw,(unsigned int)((int)reg_idx * 64 + 4136));
  
#line 1689 
  wait_loop -= 1;
  
#line 1689 
  if (wait_loop != 0) {
    
#line 1689 
    if ((rxdctl & 33554432U) == 0U) 
#line 1691 
                                    goto ldv_55151; else 
#line 1694 
                                                         goto ldv_55152;
  }
  else 
#line 1694 
       goto ldv_55152;
  ldv_55152: 
#line 1695 
  ;
  
#line 1691 
  if (wait_loop == 0) 
#line 1692 
                      printk("\001",(int)reg_idx); else ;
  return_label: 
#line 1693 
                return;
}


#line 1696  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_setup_vfmrqc(struct ixgbevf_adapter *adapter)
{
  u32 rss_key[10U];
  int i;
  int j;
  
#line 1698 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1699 
  u32 vfmrqc = 0U;
  
#line 1699 
  u32 vfreta = 0U;
  
#line 1701 
  u16 rss_i = (unsigned short)adapter->num_rx_queues;
  
#line 1705 
  netdev_rss_key_fill((void *)(& rss_key),40UL);
  
#line 1706 
  i = 0;
  
#line 1706 
  goto ldv_55164;
  ldv_55163: 
#line 1707 
  ;
  
#line 1707 
  ixgbe_write_reg(hw,(unsigned int)((i + 3136) * 4),rss_key[i]);
  
#line 1706 
  i += 1;
  ldv_55164: 
#line 1707 
  ;
  
#line 1706 
  if (i <= 9) 
#line 1708 
              goto ldv_55163; else 
#line 1711 
                                   goto ldv_55165;
  ldv_55165: 
#line 1712 
  ;
  
#line 1710 
  i = 0;
  
#line 1710 
  j = 0;
  
#line 1710 
  goto ldv_55167;
  ldv_55166: 
#line 1711 
  ;
  
#line 1711 
  if ((int)rss_i == j) 
#line 1712 
                       j = 0; else ;
  
#line 1713 
  vfreta = (vfreta << 8) | (unsigned int)j;
  
#line 1714 
  if ((i & 3) == 3) 
#line 1715 
                    ixgbe_write_reg(hw,(unsigned int)(((i >> 2) + 3200) * 4),vfreta); else ;
  
#line 1710 
  i += 1;
  
#line 1710 
  j += 1;
  ldv_55167: 
#line 1711 
  ;
  
#line 1710 
  if (i <= 63) 
#line 1712 
               goto ldv_55166; else 
#line 1715 
                                    goto ldv_55168;
  ldv_55168: 
#line 1716 
  ;
  
#line 1719 
  vfmrqc |= 3342336U;
  
#line 1724 
  vfmrqc |= 1U;
  
#line 1726 
  ixgbe_write_reg(hw,12288U,vfmrqc);
  
#line 1727 
  return;
}


#line 1729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_configure_rx_ring(struct ixgbevf_adapter *adapter, struct ixgbevf_ring *ring)
{
  u32 rxdctl;
  u16 tmp;
  
#line 1732 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1733 
  u64 rdba = ring->dma;
  
#line 1735 
  u8 reg_idx = (unsigned char)ring->reg_idx;
  
#line 1738 
  rxdctl = ixgbevf_read_reg(hw,(unsigned int)((int)reg_idx * 64 + 4136));
  
#line 1739 
  ixgbevf_disable_rx_queue(adapter,ring);
  
#line 1741 
  ixgbe_write_reg(hw,(unsigned int)(((int)reg_idx + 64) * 64),(unsigned int)rdba);
  
#line 1742 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 4100),(unsigned int)(rdba >> 32));
  
#line 1743 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 4104),(unsigned int)ring->count * 16U);
  
#line 1747 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 4108),512U);
  
#line 1751 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 4112),0U);
  
#line 1752 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 4120),0U);
  
#line 1753 
  ring->tail = adapter->io_addr + ((int)reg_idx * 64 + 4120);
  
#line 1756 
  ring->next_to_clean = (unsigned short)0U;
  
#line 1757 
  ring->next_to_use = (unsigned short)0U;
  
#line 1758 
  ring->next_to_alloc = (unsigned short)0U;
  
#line 1760 
  ixgbevf_configure_srrctl(adapter,(int)reg_idx);
  
#line 1763 
  rxdctl &= 4294934527U;
  
#line 1765 
  rxdctl |= 1107296256U;
  
#line 1766 
  ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 4136),rxdctl);
  
#line 1768 
  ixgbevf_rx_desc_queue_enable(adapter,ring);
  
#line 1769 
  tmp = ixgbevf_desc_unused(ring);
  
#line 1769 
  ;
  
#line 1769 
  ixgbevf_alloc_rx_buffers(ring,(unsigned short)((int)tmp));
  
#line 1770 
  return;
}


#line 1778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_configure_rx(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 1781 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1782 
  struct net_device *netdev = adapter->netdev;
  
#line 1784 
  ixgbevf_setup_psrtype(adapter);
  
#line 1785 
  if (hw->mac.type > (unsigned int)ixgbe_mac_X540_vf) 
#line 1786 
                                                      ixgbevf_setup_vfmrqc(adapter); else ;
  
#line 1789 
  ixgbevf_rlpml_set_vf(hw,(unsigned short)((int)((unsigned int)((unsigned short)netdev->mtu) + 18U)));
  
#line 1794 
  i = 0;
  
#line 1794 
  goto ldv_55184;
  ldv_55183: 
#line 1795 
  ;
  
#line 1795 
  ixgbevf_configure_rx_ring(adapter,adapter->rx_ring[i]);
  
#line 1794 
  i += 1;
  ldv_55184: 
#line 1795 
  ;
  
#line 1794 
  if (adapter->num_rx_queues > i) 
#line 1796 
                                  goto ldv_55183; else 
#line 1799 
                                                       goto ldv_55185;
  ldv_55185: 
#line 1800 
  ;
  
#line 1801 
  return;
}


#line 1798  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  int err;
  
#line 1801 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1802 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1805 
  ldv_spin_lock_bh_89(& adapter->mbx_lock);
  
#line 1808 
  err = (*(hw->mac.ops.set_vfta))(hw,(unsigned int)vid,0U,(_Bool)1);
  
#line 1810 
  ldv_spin_unlock_bh_90(& adapter->mbx_lock);
  
#line 1813 
  if (err == -100) {
    
#line 1814 
    __retres = -5;
    
#line 1814 
    goto return_label;
  }
  else ;
  
#line 1816 
  if (err == -3) {
    
#line 1817 
    __retres = -13;
    
#line 1817 
    goto return_label;
  }
  else ;
  
#line 1819 
  set_bit((long)vid,(unsigned long volatile *)(& adapter->active_vlans));
  
#line 1821 
  __retres = err;
  return_label: 
#line 1821 
                return __retres;
}


#line 1824  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  
#line 1827 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1828 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1829 
  int err = -95;
  
#line 1831 
  ldv_spin_lock_bh_91(& adapter->mbx_lock);
  
#line 1834 
  err = (*(hw->mac.ops.set_vfta))(hw,(unsigned int)vid,0U,(_Bool)0);
  
#line 1836 
  ldv_spin_unlock_bh_92(& adapter->mbx_lock);
  
#line 1838 
  set_bit((long)vid,(unsigned long volatile *)(& adapter->active_vlans));
  
#line 1840 
  return err;
}


#line 1843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_restore_vlan(struct ixgbevf_adapter *adapter)
{
  u16 vid;
  unsigned long tmp;
  unsigned long tmp_0;
  
#line 1847 
  tmp = find_first_bit((unsigned long const *)(& adapter->active_vlans),4096UL);
  
#line 1847 
  vid = (unsigned short)tmp;
  
#line 1847 
  goto ldv_55207;
  ldv_55206: 
#line 1848 
  ;
  
#line 1848 
  ixgbevf_vlan_rx_add_vid(adapter->netdev,(unsigned short)129,(unsigned short)((int)vid));
  
#line 1847 
  tmp_0 = find_next_bit((unsigned long const *)(& adapter->active_vlans),4096UL,(unsigned long)((int)vid + 1));
  
#line 1847 
  vid = (unsigned short)tmp_0;
  ldv_55207: 
#line 1848 
  ;
  
#line 1847 
  if ((unsigned int)vid <= 4095U) 
#line 1849 
                                  goto ldv_55206; else 
#line 1852 
                                                       goto ldv_55208;
  ldv_55208: 
#line 1853 
  ;
  
#line 1854 
  return;
}


#line 1852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_write_uc_addr_list(struct net_device *netdev)
{
  int __retres;
  
#line 1854 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1855 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1856 
  int count = 0;
  
#line 1858 
  if (netdev->uc.count > 10) {
    
#line 1859 
    printk("\001");
    
#line 1860 
    __retres = -28;
    
#line 1860 
    goto return_label;
  }
  else ;
  
#line 1863 
  if (netdev->uc.count != 0) {
    struct netdev_hw_addr *ha;
    struct netdev_hw_addr *tmp_0;
    struct netdev_hw_addr *tmp_1;
    {
      
#line 1866 
      struct list_head const *__mptr = (struct list_head const *)netdev->uc.list.next;
      
#line 1866 
      tmp_0 = (struct netdev_hw_addr *)__mptr;
    }
    
#line 1866 
    ha = tmp_0;
    
#line 1866 
    goto ldv_55221;
    ldv_55220: 
#line 1867 
    ;
    
#line 1867 
    ;
    
#line 1867 
    count += 1;
    
#line 1867 
    ;
    
#line 1867 
    (*(hw->mac.ops.set_uc_addr))(hw,(unsigned int)count,(u8 *)(& ha->addr));
    
#line 1868 
    __const_udelay(859000UL);
    {
      
#line 1866 
      struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
      
#line 1866 
      tmp_1 = (struct netdev_hw_addr *)__mptr_0;
    }
    
#line 1866 
    ha = tmp_1;
    ldv_55221: 
#line 1868 
    ;
    
#line 1866 
    if (& ha->list != & netdev->uc.list) 
#line 1868 
                                         goto ldv_55220; else 
#line 1871 
                                                              goto ldv_55222;
    ldv_55222: 
#line 1872 
    ;
  }
  else 
#line 1874 
       (*(hw->mac.ops.set_uc_addr))(hw,0U,(u8 *)0U);
  
#line 1877 
  __retres = count;
  return_label: 
#line 1877 
                return __retres;
}


#line 1889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_set_rx_mode(struct net_device *netdev)
{
  
#line 1891 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1892 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1894 
  ldv_spin_lock_bh_93(& adapter->mbx_lock);
  
#line 1897 
  (*(hw->mac.ops.update_mc_addr_list))(hw,netdev);
  
#line 1899 
  ixgbevf_write_uc_addr_list(netdev);
  
#line 1901 
  ldv_spin_unlock_bh_94(& adapter->mbx_lock);
  
#line 1902 
  return;
}


#line 1904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_napi_enable_all(struct ixgbevf_adapter *adapter)
{
  int q_idx;
  struct ixgbevf_q_vector *q_vector;
  
#line 1908 
  int q_vectors = adapter->num_msix_vectors + -1;
  
#line 1910 
  q_idx = 0;
  
#line 1910 
  goto ldv_55235;
  ldv_55234: 
#line 1911 
  ;
  
#line 1911 
  q_vector = adapter->q_vector[q_idx];
  
#line 1913 
  ixgbevf_qv_init_lock(adapter->q_vector[q_idx]);
  
#line 1915 
  napi_enable(& q_vector->napi);
  
#line 1910 
  q_idx += 1;
  ldv_55235: 
#line 1911 
  ;
  
#line 1910 
  if (q_idx < q_vectors) 
#line 1912 
                         goto ldv_55234; else 
#line 1915 
                                              goto ldv_55236;
  ldv_55236: 
#line 1916 
  ;
  
#line 1917 
  return;
}


#line 1919  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_napi_disable_all(struct ixgbevf_adapter *adapter)
{
  int q_idx;
  struct ixgbevf_q_vector *q_vector;
  int tmp_0;
  bool tmp;
  
#line 1923 
  int q_vectors = adapter->num_msix_vectors + -1;
  
#line 1925 
  q_idx = 0;
  
#line 1925 
  goto ldv_55247;
  ldv_55246: 
#line 1926 
  ;
  
#line 1926 
  q_vector = adapter->q_vector[q_idx];
  
#line 1927 
  napi_disable(& q_vector->napi);
  
#line 1929 
  goto ldv_55244;
  ldv_55243: 
#line 1930 
  ;
  
#line 1930 
  printk("\001",q_idx);
  
#line 1931 
  usleep_range(1000UL,20000UL);
  ldv_55244: 
#line 1932 
  ;
  
#line 1929 
  tmp = ixgbevf_qv_disable(adapter->q_vector[q_idx]);
  
#line 1929 
  if (tmp) 
#line 1929 
           tmp_0 = 0; else 
#line 1929 
                           tmp_0 = 1;
  
#line 1929 
  if (tmp_0) 
#line 1931 
             goto ldv_55243; else 
#line 1934 
                                  goto ldv_55245;
  ldv_55245: 
#line 1935 
  ;
  
#line 1925 
  q_idx += 1;
  ldv_55247: 
#line 1926 
  ;
  
#line 1925 
  if (q_idx < q_vectors) 
#line 1927 
                         goto ldv_55246; else 
#line 1930 
                                              goto ldv_55248;
  ldv_55248: 
#line 1931 
  ;
  
#line 1932 
  return;
}


#line 1937  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_configure_dcb(struct ixgbevf_adapter *adapter)
{
  int __retres;
  int err;
  
#line 1939 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 1940 
  unsigned int def_q = 0U;
  
#line 1941 
  unsigned int num_tcs = 0U;
  
#line 1942 
  unsigned int num_rx_queues = (unsigned int)adapter->num_rx_queues;
  
#line 1943 
  unsigned int num_tx_queues = (unsigned int)adapter->num_tx_queues;
  
#line 1946 
  ldv_spin_lock_bh_95(& adapter->mbx_lock);
  
#line 1949 
  err = ixgbevf_get_queues(hw,& num_tcs,& def_q);
  
#line 1951 
  ldv_spin_unlock_bh_96(& adapter->mbx_lock);
  
#line 1953 
  if (err != 0) {
    
#line 1954 
    __retres = err;
    
#line 1954 
    goto return_label;
  }
  else ;
  
#line 1956 
  if (num_tcs > 1U) {
    
#line 1958 
    num_tx_queues = 1U;
    
#line 1961 
    (adapter->tx_ring[0])->reg_idx = (unsigned short)def_q;
    
#line 1964 
    num_rx_queues = num_tcs;
  }
  else ;
  
#line 1968 
  if ((unsigned int)adapter->num_rx_queues != num_rx_queues || (unsigned int)adapter->num_tx_queues != num_tx_queues) {
    
#line 1971 
    hw->mbx.timeout = 0U;
    
#line 1974 
    adapter->flags |= 4U;
  }
  else ;
  
#line 1977 
  __retres = 0;
  return_label: 
#line 1977 
                return __retres;
}


#line 1980  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_configure(struct ixgbevf_adapter *adapter)
{
  
#line 1982 
  ixgbevf_configure_dcb(adapter);
  
#line 1984 
  ixgbevf_set_rx_mode(adapter->netdev);
  
#line 1986 
  ixgbevf_restore_vlan(adapter);
  
#line 1988 
  ixgbevf_configure_tx(adapter);
  
#line 1989 
  ixgbevf_configure_rx(adapter);
  
#line 1990 
  return;
}


#line 1992  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_save_reset_stats(struct ixgbevf_adapter *adapter)
{
  
#line 1995 
  if (adapter->stats.vfgprc != 0ULL || adapter->stats.vfgptc != 0ULL) {
    
#line 1996 
    adapter->stats.saved_reset_vfgprc += adapter->stats.vfgprc - adapter->stats.base_vfgprc;
    
#line 1998 
    adapter->stats.saved_reset_vfgptc += adapter->stats.vfgptc - adapter->stats.base_vfgptc;
    
#line 2000 
    adapter->stats.saved_reset_vfgorc += adapter->stats.vfgorc - adapter->stats.base_vfgorc;
    
#line 2002 
    adapter->stats.saved_reset_vfgotc += adapter->stats.vfgotc - adapter->stats.base_vfgotc;
    
#line 2004 
    adapter->stats.saved_reset_vfmprc += adapter->stats.vfmprc - adapter->stats.base_vfmprc;
  }
  else ;
  
#line 2007 
  return;
}


#line 2009  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_init_last_counter_stats(struct ixgbevf_adapter *adapter)
{
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_5;
  
#line 2011 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2013 
  tmp = ixgbevf_read_reg(hw,4124U);
  
#line 2013 
  adapter->stats.last_vfgprc = (unsigned long long)tmp;
  
#line 2014 
  tmp_0 = ixgbevf_read_reg(hw,4128U);
  
#line 2014 
  adapter->stats.last_vfgorc = (unsigned long long)tmp_0;
  
#line 2016 
  tmp_1 = ixgbevf_read_reg(hw,4132U);
  
#line 2016 
  adapter->stats.last_vfgorc |= (unsigned long long)tmp_1 << 32;
  
#line 2017 
  tmp_2 = ixgbevf_read_reg(hw,8220U);
  
#line 2017 
  adapter->stats.last_vfgptc = (unsigned long long)tmp_2;
  
#line 2018 
  tmp_3 = ixgbevf_read_reg(hw,8224U);
  
#line 2018 
  adapter->stats.last_vfgotc = (unsigned long long)tmp_3;
  
#line 2020 
  tmp_4 = ixgbevf_read_reg(hw,8228U);
  
#line 2020 
  adapter->stats.last_vfgotc |= (unsigned long long)tmp_4 << 32;
  
#line 2021 
  tmp_5 = ixgbevf_read_reg(hw,4148U);
  
#line 2021 
  adapter->stats.last_vfmprc = (unsigned long long)tmp_5;
  
#line 2023 
  adapter->stats.base_vfgprc = adapter->stats.last_vfgprc;
  
#line 2024 
  adapter->stats.base_vfgorc = adapter->stats.last_vfgorc;
  
#line 2025 
  adapter->stats.base_vfgptc = adapter->stats.last_vfgptc;
  
#line 2026 
  adapter->stats.base_vfgotc = adapter->stats.last_vfgotc;
  
#line 2027 
  adapter->stats.base_vfmprc = adapter->stats.last_vfmprc;
  
#line 2028 
  return;
}


#line 2030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_negotiate_api(struct ixgbevf_adapter *adapter)
{
  
#line 2032 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2033 
  int api[4U] = {3, 2, 0, 4};
  
#line 2037 
  int err = 0;
  
#line 2037 
  int idx = 0;
  
#line 2039 
  ldv_spin_lock_bh_97(& adapter->mbx_lock);
  
#line 2041 
  goto ldv_55277;
  ldv_55276: 
#line 2042 
  ;
  
#line 2042 
  err = ixgbevf_negotiate_api_version(hw,api[idx]);
  
#line 2043 
  if (err == 0) 
#line 2044 
                goto ldv_55275; else ;
  
#line 2045 
  idx += 1;
  ldv_55277: 
#line 2046 
  ;
  
#line 2041 
  if (api[idx] != 4) 
#line 2043 
                     goto ldv_55276; else 
#line 2046 
                                          goto ldv_55275;
  ldv_55275: 
#line 2047 
  ;
  
#line 2048 
  ldv_spin_unlock_bh_98(& adapter->mbx_lock);
  
#line 2049 
  return;
}


#line 2051  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_up_complete(struct ixgbevf_adapter *adapter)
{
  bool tmp;
  
#line 2053 
  struct net_device *netdev = adapter->netdev;
  
#line 2054 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2056 
  ixgbevf_configure_msix(adapter);
  
#line 2058 
  ldv_spin_lock_bh_99(& adapter->mbx_lock);
  
#line 2060 
  tmp = is_valid_ether_addr((u8 const *)(& hw->mac.addr));
  
#line 2060 
  if ((int)tmp != 0) 
#line 2061 
                     (*(hw->mac.ops.set_rar))(hw,0U,(u8 *)(& hw->mac.addr),0U); else 
                                                                    
#line 2063 
                                                                    (*(hw->mac.ops.set_rar))(hw,0U,(u8 *)(& hw->mac.perm_addr),0U);
  
#line 2065 
  ldv_spin_unlock_bh_100(& adapter->mbx_lock);
  
#line 2066 
  ldv_inline_asm();
  
#line 2068 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 2069 
  ixgbevf_napi_enable_all(adapter);
  
#line 2072 
  ixgbevf_read_reg(hw,256U);
  
#line 2073 
  ixgbevf_irq_enable(adapter);
  
#line 2076 
  netif_tx_start_all_queues(netdev);
  
#line 2078 
  ixgbevf_save_reset_stats(adapter);
  
#line 2079 
  ixgbevf_init_last_counter_stats(adapter);
  
#line 2081 
  hw->mac.get_link_status = (_Bool)1;
  
#line 2082 
  ldv_mod_timer_101(& adapter->service_timer,jiffies);
  
#line 2083 
  return;
}


#line 2085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
void ixgbevf_up(struct ixgbevf_adapter *adapter)
{
  
#line 2087 
  ixgbevf_configure(adapter);
  
#line 2089 
  ixgbevf_up_complete(adapter);
  
#line 2090 
  return;
}


#line 2096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_clean_rx_ring(struct ixgbevf_ring *rx_ring)
{
  unsigned long size;
  unsigned int i;
  
#line 2098 
  struct device *dev = rx_ring->dev;
  
#line 2103 
  if (rx_ring->skb != (struct sk_buff *)0) {
    
#line 2104 
    consume_skb(rx_ring->skb);
    
#line 2105 
    rx_ring->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 2109 
  if (rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info == (struct ixgbevf_rx_buffer *)0) 
    
#line 2110 
    goto return_label; else ;
  
#line 2113 
  i = 0U;
  
#line 2113 
  goto ldv_55294;
  ldv_55293: 
#line 2114 
  ;
  {
    struct ixgbevf_rx_buffer *rx_buffer;
    
#line 2116 
    rx_buffer = rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info + i;
    
#line 2117 
    if (rx_buffer->dma != 0ULL) 
#line 2118 
                                dma_unmap_page(dev,rx_buffer->dma,4096UL,(enum dma_data_direction)DMA_FROM_DEVICE); else ;
    
#line 2120 
    rx_buffer->dma = 0ULL;
    
#line 2121 
    if (rx_buffer->page != (struct page *)0) 
#line 2122 
                                             __free_pages(rx_buffer->page,0U); else ;
    
#line 2123 
    rx_buffer->page = (struct page *)0;
  }
  
#line 2113 
  i += 1U;
  ldv_55294: 
#line 2114 
  ;
  
#line 2113 
  if ((unsigned int)rx_ring->count > i) 
#line 2115 
                                        goto ldv_55293; else 
#line 2118 
                                                             goto ldv_55295;
  ldv_55295: 
#line 2119 
  ;
  
#line 2126 
  size = (unsigned long)rx_ring->count * 24UL;
  
#line 2127 
  memset((void *)rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info,0,size);
  
#line 2130 
  memset(rx_ring->desc,0,(unsigned long)rx_ring->size);
  return_label: 
#line 2131 
                return;
}


#line 2137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_clean_tx_ring(struct ixgbevf_ring *tx_ring)
{
  struct ixgbevf_tx_buffer *tx_buffer_info;
  unsigned long size;
  unsigned int i;
  
#line 2143 
  if (tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info == (struct ixgbevf_tx_buffer *)0) 
    
#line 2144 
    goto return_label; else ;
  
#line 2147 
  i = 0U;
  
#line 2147 
  goto ldv_55303;
  ldv_55302: 
#line 2148 
  ;
  
#line 2148 
  tx_buffer_info = tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info + i;
  
#line 2149 
  ixgbevf_unmap_and_free_tx_resource(tx_ring,tx_buffer_info);
  
#line 2147 
  i += 1U;
  ldv_55303: 
#line 2148 
  ;
  
#line 2147 
  if ((unsigned int)tx_ring->count > i) 
#line 2149 
                                        goto ldv_55302; else 
#line 2152 
                                                             goto ldv_55304;
  ldv_55304: 
#line 2153 
  ;
  
#line 2152 
  size = (unsigned long)tx_ring->count * 48UL;
  
#line 2153 
  memset((void *)tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info,0,size);
  
#line 2155 
  memset(tx_ring->desc,0,(unsigned long)tx_ring->size);
  return_label: 
#line 2156 
                return;
}


#line 2162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_clean_all_rx_rings(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 2166 
  i = 0;
  
#line 2166 
  goto ldv_55310;
  ldv_55309: 
#line 2167 
  ;
  
#line 2167 
  ixgbevf_clean_rx_ring(adapter->rx_ring[i]);
  
#line 2166 
  i += 1;
  ldv_55310: 
#line 2167 
  ;
  
#line 2166 
  if (adapter->num_rx_queues > i) 
#line 2168 
                                  goto ldv_55309; else 
#line 2171 
                                                       goto ldv_55311;
  ldv_55311: 
#line 2172 
  ;
  
#line 2173 
  return;
}


#line 2174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_clean_all_tx_rings(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 2178 
  i = 0;
  
#line 2178 
  goto ldv_55317;
  ldv_55316: 
#line 2179 
  ;
  
#line 2179 
  ixgbevf_clean_tx_ring(adapter->tx_ring[i]);
  
#line 2178 
  i += 1;
  ldv_55317: 
#line 2179 
  ;
  
#line 2178 
  if (adapter->num_tx_queues > i) 
#line 2180 
                                  goto ldv_55316; else 
#line 2183 
                                                       goto ldv_55318;
  ldv_55318: 
#line 2184 
  ;
  
#line 2185 
  return;
}


#line 2182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
void ixgbevf_down(struct ixgbevf_adapter *adapter)
{
  int i;
  int tmp;
  int tmp_0;
  
#line 2184 
  struct net_device *netdev = adapter->netdev;
  
#line 2185 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2189 
  tmp = test_and_set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 2189 
  if (tmp != 0) 
#line 2190 
                goto return_label; else ;
  
#line 2193 
  i = 0;
  
#line 2193 
  goto ldv_55326;
  ldv_55325: 
#line 2194 
  ;
  
#line 2194 
  ixgbevf_disable_rx_queue(adapter,adapter->rx_ring[i]);
  
#line 2193 
  i += 1;
  ldv_55326: 
#line 2194 
  ;
  
#line 2193 
  if (adapter->num_rx_queues > i) 
#line 2195 
                                  goto ldv_55325; else 
#line 2198 
                                                       goto ldv_55327;
  ldv_55327: 
#line 2199 
  ;
  
#line 2196 
  usleep_range(10000UL,20000UL);
  
#line 2198 
  netif_tx_stop_all_queues(netdev);
  
#line 2201 
  netif_carrier_off(netdev);
  
#line 2202 
  netif_tx_disable(netdev);
  
#line 2204 
  ixgbevf_irq_disable(adapter);
  
#line 2206 
  ixgbevf_napi_disable_all(adapter);
  
#line 2208 
  ldv_del_timer_sync_102(& adapter->service_timer);
  
#line 2211 
  i = 0;
  
#line 2211 
  goto ldv_55330;
  ldv_55329: 
#line 2212 
  ;
  {
    
#line 2212 
    u8 reg_idx = (unsigned char)(adapter->tx_ring[i])->reg_idx;
    
#line 2214 
    ixgbe_write_reg(hw,(unsigned int)((int)reg_idx * 64 + 8232),67108864U);
  }
  
#line 2211 
  i += 1;
  ldv_55330: 
#line 2212 
  ;
  
#line 2211 
  if (adapter->num_tx_queues > i) 
#line 2213 
                                  goto ldv_55329; else 
#line 2216 
                                                       goto ldv_55331;
  ldv_55331: 
#line 2217 
  ;
  
#line 2218 
  tmp_0 = pci_channel_offline(adapter->pdev);
  
#line 2218 
  if (tmp_0 == 0) 
#line 2219 
                  ixgbevf_reset(adapter); else ;
  
#line 2221 
  ixgbevf_clean_all_tx_rings(adapter);
  
#line 2222 
  ixgbevf_clean_all_rx_rings(adapter);
  return_label: 
#line 2223 
                return;
}


#line 2225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
void ixgbevf_reinit_locked(struct ixgbevf_adapter *adapter)
{
  int tmp_0;
  {
    int tmp;
    
#line 2227 
    tmp = preempt_count();
    
#line 2227 
    int __ret_warn_on = ((unsigned long)tmp & 2096896UL) != 0UL;
    
#line 2227 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 2227 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c",2227); else ;
    
#line 2227 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 2229 
  goto ldv_55338;
  ldv_55337: 
#line 2230 
  ;
  
#line 2230 
  msleep(1U);
  ldv_55338: 
#line 2231 
  ;
  
#line 2229 
  tmp_0 = test_and_set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 2229 
  if (tmp_0 != 0) 
#line 2231 
                  goto ldv_55337; else 
#line 2234 
                                       goto ldv_55339;
  ldv_55339: 
#line 2235 
  ;
  
#line 2232 
  ixgbevf_down(adapter);
  
#line 2233 
  ixgbevf_up(adapter);
  
#line 2235 
  set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 2236 
  return;
}


#line 2238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
void ixgbevf_reset(struct ixgbevf_adapter *adapter)
{
  s32 tmp;
  bool tmp_0;
  
#line 2240 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2241 
  struct net_device *netdev = adapter->netdev;
  
#line 2243 
  tmp = (*(hw->mac.ops.reset_hw))(hw);
  
#line 2243 
  if (tmp != 0) ;
  else {
    
#line 2246 
    (*(hw->mac.ops.init_hw))(hw);
    
#line 2247 
    ixgbevf_negotiate_api(adapter);
  }
  
#line 2250 
  tmp_0 = is_valid_ether_addr((u8 const *)(& adapter->hw.mac.addr));
  
#line 2250 
  if ((int)tmp_0 != 0) {
    
#line 2251 
    memcpy((void *)netdev->dev_addr,(void const *)(& adapter->hw.mac.addr),(unsigned long)netdev->addr_len);
    
#line 2253 
    memcpy((void *)(& netdev->perm_addr),(void const *)(& adapter->hw.mac.addr),(unsigned long)netdev->addr_len);
  }
  else ;
  
#line 2257 
  adapter->last_reset = jiffies;
  
#line 2258 
  return;
}


#line 2260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_acquire_msix_vectors(struct ixgbevf_adapter *adapter, int vectors)
{
  int __retres;
  int vector_threshold;
  
#line 2269 
  vector_threshold = 2;
  
#line 2276 
  vectors = pci_enable_msix_range(adapter->pdev,adapter->msix_entries,vector_threshold,vectors);
  
#line 2279 
  if (vectors < 0) {
    
#line 2280 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Unable to allocate MSI-X interrupts\n");
    
#line 2282 
    kfree((void const *)adapter->msix_entries);
    
#line 2283 
    adapter->msix_entries = (struct msix_entry *)0;
    
#line 2284 
    __retres = vectors;
    
#line 2284 
    goto return_label;
  }
  else ;
  
#line 2291 
  adapter->num_msix_vectors = vectors;
  
#line 2293 
  __retres = 0;
  return_label: 
#line 2293 
                return __retres;
}


#line 2307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_set_num_queues(struct ixgbevf_adapter *adapter)
{
  int err;
  
#line 2309 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2310 
  unsigned int def_q = 0U;
  
#line 2311 
  unsigned int num_tcs = 0U;
  
#line 2315 
  adapter->num_rx_queues = 1;
  
#line 2316 
  adapter->num_tx_queues = 1;
  
#line 2318 
  ldv_spin_lock_bh_103(& adapter->mbx_lock);
  
#line 2321 
  err = ixgbevf_get_queues(hw,& num_tcs,& def_q);
  
#line 2323 
  ldv_spin_unlock_bh_104(& adapter->mbx_lock);
  
#line 2325 
  if (err != 0) 
#line 2326 
                goto return_label; else ;
  
#line 2329 
  if (num_tcs > 1U) 
#line 2330 
                    adapter->num_rx_queues = (int)num_tcs;
  else {
    int tmp_1;
    {
      unsigned int tmp;
      int tmp_0;
      
#line 2332 
      tmp = cpumask_weight(cpu_online_mask);
      
#line 2332 
      u16 __min1 = (unsigned short)tmp;
      
#line 2332 
      u16 __min2 = (unsigned short)2U;
      
#line 2332 
      if ((int)__min1 < (int)__min2) 
#line 2332 
                                     tmp_0 = (int)__min1; else 
#line 2332 
                                                               tmp_0 = (int)__min2;
      
#line 2332 
      tmp_1 = tmp_0;
    }
    
#line 2332 
    u16 rss = (unsigned short)tmp_1;
    
#line 2334 
    switch (hw->api_version) {
      case 2: 
#line 2335 
      ;
      case 3: 
#line 2336 
      ;
      
#line 2337 
      adapter->num_rx_queues = (int)rss;
      
#line 2338 
      adapter->num_tx_queues = (int)rss;
      default: 
#line 2339 
      ;
      
#line 2340 
      goto ldv_55364;
    }
    ldv_55364: 
#line 2342 
    ;
  }
  return_label: 
#line 2344 
                return;
}


#line 2353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_alloc_queues(struct ixgbevf_adapter *adapter)
{
  int __retres;
  struct ixgbevf_ring *ring;
  
#line 2356 
  int rx = 0;
  
#line 2356 
  int tx = 0;
  
#line 2358 
  goto ldv_55373;
  ldv_55372: 
#line 2359 
  ;
  
#line 2359 
  ring = (struct ixgbevf_ring *)kzalloc(168UL,208U);
  
#line 2360 
  if (ring == (struct ixgbevf_ring *)0) 
#line 2361 
                                        goto err_allocation; else ;
  
#line 2363 
  ring->dev = & (adapter->pdev)->dev;
  
#line 2364 
  ring->netdev = adapter->netdev;
  
#line 2365 
  ring->count = (unsigned short)adapter->tx_ring_count;
  
#line 2366 
  ring->queue_index = tx;
  
#line 2367 
  ring->reg_idx = (unsigned short)tx;
  
#line 2369 
  adapter->tx_ring[tx] = ring;
  
#line 2358 
  tx += 1;
  ldv_55373: 
#line 2359 
  ;
  
#line 2358 
  if (adapter->num_tx_queues > tx) 
#line 2360 
                                   goto ldv_55372; else 
#line 2363 
                                                        goto ldv_55374;
  ldv_55374: 
#line 2364 
  ;
  
#line 2372 
  goto ldv_55376;
  ldv_55375: 
#line 2373 
  ;
  
#line 2373 
  ring = (struct ixgbevf_ring *)kzalloc(168UL,208U);
  
#line 2374 
  if (ring == (struct ixgbevf_ring *)0) 
#line 2375 
                                        goto err_allocation; else ;
  
#line 2377 
  ring->dev = & (adapter->pdev)->dev;
  
#line 2378 
  ring->netdev = adapter->netdev;
  
#line 2380 
  ring->count = (unsigned short)adapter->rx_ring_count;
  
#line 2381 
  ring->queue_index = rx;
  
#line 2382 
  ring->reg_idx = (unsigned short)rx;
  
#line 2384 
  adapter->rx_ring[rx] = ring;
  
#line 2372 
  rx += 1;
  ldv_55376: 
#line 2373 
  ;
  
#line 2372 
  if (adapter->num_rx_queues > rx) 
#line 2374 
                                   goto ldv_55375; else 
#line 2377 
                                                        goto ldv_55377;
  ldv_55377: 
#line 2378 
  ;
  
#line 2387 
  __retres = 0;
  
#line 2387 
  goto return_label;
  err_allocation: 
#line 2389 
  ;
  
#line 2390 
  goto ldv_55379;
  ldv_55378: 
#line 2391 
  ;
  
#line 2391 
  tx -= 1;
  
#line 2391 
  ;
  
#line 2391 
  kfree((void const *)adapter->tx_ring[tx]);
  
#line 2392 
  adapter->tx_ring[tx] = (struct ixgbevf_ring *)0;
  ldv_55379: 
#line 2393 
  ;
  
#line 2390 
  if (tx != 0) 
#line 2392 
               goto ldv_55378; else 
#line 2395 
                                    goto ldv_55380;
  ldv_55380: 
#line 2396 
  ;
  
#line 2395 
  goto ldv_55382;
  ldv_55381: 
#line 2396 
  ;
  
#line 2396 
  rx -= 1;
  
#line 2396 
  ;
  
#line 2396 
  kfree((void const *)adapter->rx_ring[rx]);
  
#line 2397 
  adapter->rx_ring[rx] = (struct ixgbevf_ring *)0;
  ldv_55382: 
#line 2398 
  ;
  
#line 2395 
  if (rx != 0) 
#line 2397 
               goto ldv_55381; else 
#line 2400 
                                    goto ldv_55383;
  ldv_55383: 
#line 2401 
  ;
  
#line 2399 
  __retres = -12;
  return_label: 
#line 2399 
                return __retres;
}


#line 2409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_set_interrupt_capability(struct ixgbevf_adapter *adapter)
{
  int vector;
  int v_budget;
  int tmp_0;
  int tmp_3;
  
#line 2411 
  struct net_device *netdev = adapter->netdev;
  
#line 2412 
  int err = 0;
  {
    int tmp;
    
#line 2421 
    int _max1 = adapter->num_rx_queues;
    
#line 2421 
    int _max2 = adapter->num_tx_queues;
    
#line 2421 
    if (_max1 > _max2) 
#line 2421 
                       tmp = _max1; else 
#line 2421 
                                         tmp = _max2;
    
#line 2421 
    tmp_0 = tmp;
  }
  
#line 2421 
  v_budget = tmp_0;
  {
    unsigned int tmp_1;
    int tmp_2;
    
#line 2422 
    int __min1 = v_budget;
    
#line 2422 
    tmp_1 = cpumask_weight(cpu_online_mask);
    
#line 2422 
    int __min2 = (int)tmp_1;
    
#line 2422 
    if (__min1 < __min2) 
#line 2422 
                         tmp_2 = __min1; else 
#line 2422 
                                              tmp_2 = __min2;
    
#line 2422 
    tmp_3 = tmp_2;
  }
  
#line 2422 
  v_budget = tmp_3;
  
#line 2423 
  v_budget += 1;
  
#line 2428 
  adapter->msix_entries = (struct msix_entry *)kcalloc((unsigned long)v_budget,8UL,208U);
  
#line 2430 
  if (adapter->msix_entries == (struct msix_entry *)0) {
    
#line 2431 
    err = -12;
    
#line 2432 
    goto out;
  }
  else ;
  
#line 2435 
  vector = 0;
  
#line 2435 
  goto ldv_55399;
  ldv_55398: 
#line 2436 
  ;
  
#line 2436 
  (adapter->msix_entries + vector)->entry = (unsigned short)vector;
  
#line 2435 
  vector += 1;
  ldv_55399: 
#line 2436 
  ;
  
#line 2435 
  if (vector < v_budget) 
#line 2437 
                         goto ldv_55398; else 
#line 2440 
                                              goto ldv_55400;
  ldv_55400: 
#line 2441 
  ;
  
#line 2438 
  err = ixgbevf_acquire_msix_vectors(adapter,v_budget);
  
#line 2439 
  if (err != 0) 
#line 2440 
                goto out; else ;
  
#line 2442 
  err = netif_set_real_num_tx_queues(netdev,(unsigned int)adapter->num_tx_queues);
  
#line 2443 
  if (err != 0) 
#line 2444 
                goto out; else ;
  
#line 2446 
  err = netif_set_real_num_rx_queues(netdev,(unsigned int)adapter->num_rx_queues);
  out: 
#line 2448 
  ;
  
#line 2449 
  return err;
}


#line 2459  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_alloc_q_vectors(struct ixgbevf_adapter *adapter)
{
  int __retres;
  int q_idx;
  int num_q_vectors;
  struct ixgbevf_q_vector *q_vector;
  
#line 2464 
  num_q_vectors = adapter->num_msix_vectors + -1;
  
#line 2466 
  q_idx = 0;
  
#line 2466 
  goto ldv_55409;
  ldv_55408: 
#line 2467 
  ;
  
#line 2467 
  q_vector = (struct ixgbevf_q_vector *)kzalloc(448UL,208U);
  
#line 2468 
  if (q_vector == (struct ixgbevf_q_vector *)0) 
#line 2469 
                                                goto err_out; else ;
  
#line 2470 
  q_vector->adapter = adapter;
  
#line 2471 
  q_vector->v_idx = (unsigned short)q_idx;
  
#line 2472 
  netif_napi_add(adapter->netdev,& q_vector->napi,& ixgbevf_poll,64);
  
#line 2475 
  napi_hash_add(& q_vector->napi);
  
#line 2477 
  adapter->q_vector[q_idx] = q_vector;
  
#line 2466 
  q_idx += 1;
  ldv_55409: 
#line 2467 
  ;
  
#line 2466 
  if (q_idx < num_q_vectors) 
#line 2468 
                             goto ldv_55408; else 
#line 2471 
                                                  goto ldv_55410;
  ldv_55410: 
#line 2472 
  ;
  
#line 2480 
  __retres = 0;
  
#line 2480 
  goto return_label;
  err_out: 
#line 2482 
  ;
  
#line 2483 
  goto ldv_55412;
  ldv_55411: 
#line 2484 
  ;
  
#line 2484 
  q_idx -= 1;
  
#line 2485 
  q_vector = adapter->q_vector[q_idx];
  
#line 2487 
  napi_hash_del(& q_vector->napi);
  
#line 2489 
  netif_napi_del(& q_vector->napi);
  
#line 2490 
  kfree((void const *)q_vector);
  
#line 2491 
  adapter->q_vector[q_idx] = (struct ixgbevf_q_vector *)0;
  ldv_55412: 
#line 2492 
  ;
  
#line 2483 
  if (q_idx != 0) 
#line 2485 
                  goto ldv_55411; else 
#line 2488 
                                       goto ldv_55413;
  ldv_55413: 
#line 2489 
  ;
  
#line 2493 
  __retres = -12;
  return_label: 
#line 2493 
                return __retres;
}


#line 2504  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_free_q_vectors(struct ixgbevf_adapter *adapter)
{
  int q_idx;
  
#line 2506 
  int num_q_vectors = adapter->num_msix_vectors + -1;
  
#line 2508 
  q_idx = 0;
  
#line 2508 
  goto ldv_55421;
  ldv_55420: 
#line 2509 
  ;
  {
    
#line 2509 
    struct ixgbevf_q_vector *q_vector = adapter->q_vector[q_idx];
    
#line 2511 
    adapter->q_vector[q_idx] = (struct ixgbevf_q_vector *)0;
    
#line 2513 
    napi_hash_del(& q_vector->napi);
    
#line 2515 
    netif_napi_del(& q_vector->napi);
    
#line 2516 
    kfree((void const *)q_vector);
  }
  
#line 2508 
  q_idx += 1;
  ldv_55421: 
#line 2509 
  ;
  
#line 2508 
  if (q_idx < num_q_vectors) 
#line 2510 
                             goto ldv_55420; else 
#line 2513 
                                                  goto ldv_55422;
  ldv_55422: 
#line 2514 
  ;
  
#line 2515 
  return;
}


#line 2525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_reset_interrupt_capability(struct ixgbevf_adapter *adapter)
{
  
#line 2527 
  pci_disable_msix(adapter->pdev);
  
#line 2528 
  kfree((void const *)adapter->msix_entries);
  
#line 2529 
  adapter->msix_entries = (struct msix_entry *)0;
  
#line 2530 
  return;
}


#line 2537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_init_interrupt_scheme(struct ixgbevf_adapter *adapter)
{
  int __retres;
  int err;
  
#line 2542 
  ixgbevf_set_num_queues(adapter);
  
#line 2544 
  err = ixgbevf_set_interrupt_capability(adapter);
  
#line 2545 
  if (err != 0) 
#line 2548 
                goto err_set_interrupt; else ;
  
#line 2551 
  err = ixgbevf_alloc_q_vectors(adapter);
  
#line 2552 
  if (err != 0) 
#line 2554 
                goto err_alloc_q_vectors; else ;
  
#line 2557 
  err = ixgbevf_alloc_queues(adapter);
  
#line 2558 
  if (err != 0) {
    
#line 2559 
    printk("\001");
    
#line 2560 
    goto err_alloc_queues;
  }
  else ;
  
#line 2567 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 2569 
  __retres = 0;
  
#line 2569 
  goto return_label;
  err_alloc_queues: 
#line 2570 
  ;
  
#line 2571 
  ixgbevf_free_q_vectors(adapter);
  err_alloc_q_vectors: 
#line 2572 
  ;
  
#line 2573 
  ixgbevf_reset_interrupt_capability(adapter);
  err_set_interrupt: 
#line 2574 
  ;
  
#line 2575 
  __retres = err;
  return_label: 
#line 2575 
                return __retres;
}


#line 2585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_clear_interrupt_scheme(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 2589 
  i = 0;
  
#line 2589 
  goto ldv_55438;
  ldv_55437: 
#line 2590 
  ;
  
#line 2590 
  kfree((void const *)adapter->tx_ring[i]);
  
#line 2591 
  adapter->tx_ring[i] = (struct ixgbevf_ring *)0;
  
#line 2589 
  i += 1;
  ldv_55438: 
#line 2590 
  ;
  
#line 2589 
  if (adapter->num_tx_queues > i) 
#line 2591 
                                  goto ldv_55437; else 
#line 2594 
                                                       goto ldv_55439;
  ldv_55439: 
#line 2595 
  ;
  
#line 2593 
  i = 0;
  
#line 2593 
  goto ldv_55441;
  ldv_55440: 
#line 2594 
  ;
  
#line 2594 
  kfree((void const *)adapter->rx_ring[i]);
  
#line 2595 
  adapter->rx_ring[i] = (struct ixgbevf_ring *)0;
  
#line 2593 
  i += 1;
  ldv_55441: 
#line 2594 
  ;
  
#line 2593 
  if (adapter->num_rx_queues > i) 
#line 2595 
                                  goto ldv_55440; else 
#line 2598 
                                                       goto ldv_55442;
  ldv_55442: 
#line 2599 
  ;
  
#line 2598 
  adapter->num_tx_queues = 0;
  
#line 2599 
  adapter->num_rx_queues = 0;
  
#line 2601 
  ixgbevf_free_q_vectors(adapter);
  
#line 2602 
  ixgbevf_reset_interrupt_capability(adapter);
  
#line 2603 
  return;
}


#line 2613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_sw_init(struct ixgbevf_adapter *adapter)
{
  int __retres;
  int err;
  int tmp_1;
  bool tmp_0;
  
#line 2615 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2616 
  struct pci_dev *pdev = adapter->pdev;
  
#line 2617 
  struct net_device *netdev = adapter->netdev;
  
#line 2621 
  hw->vendor_id = pdev->vendor;
  
#line 2622 
  hw->device_id = pdev->device;
  
#line 2623 
  hw->revision_id = pdev->revision;
  
#line 2624 
  hw->subsystem_vendor_id = pdev->subsystem_vendor;
  
#line 2625 
  hw->subsystem_device_id = pdev->subsystem_device;
  
#line 2627 
  (*(hw->mbx.ops.init_params))(hw);
  
#line 2630 
  hw->mac.max_tx_queues = 2U;
  
#line 2631 
  hw->mac.max_rx_queues = 2U;
  
#line 2634 
  spinlock_check(& adapter->mbx_lock);
  {
    struct lock_class_key __key;
    
#line 2634 
    __raw_spin_lock_init(& adapter->mbx_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->mbx_lock)->rlock",& __key);
  }
  
#line 2636 
  err = (*(hw->mac.ops.reset_hw))(hw);
  
#line 2637 
  if (err != 0) 
#line 2638 
                _dev_info((struct device const *)(& pdev->dev),"PF still in reset state.  Is the PF interface up?\n");
  else {
    
#line 2641 
    err = (*(hw->mac.ops.init_hw))(hw);
    
#line 2642 
    if (err != 0) {
      
#line 2643 
      printk("\001",err);
      
#line 2644 
      goto out;
    }
    else ;
    
#line 2646 
    ixgbevf_negotiate_api(adapter);
    
#line 2647 
    err = (*(hw->mac.ops.get_mac_addr))(hw,(u8 *)(& hw->mac.addr));
    
#line 2648 
    if (err != 0) 
#line 2649 
                  _dev_info((struct device const *)(& pdev->dev),"Error reading MAC address\n");
    else {
      bool tmp;
      
#line 2650 
      tmp = is_zero_ether_addr((u8 const *)(& adapter->hw.mac.addr));
      
#line 2650 
      if ((int)tmp != 0) 
#line 2651 
                         _dev_info((struct device const *)(& pdev->dev),"MAC address not assigned by administrator.\n"); else ;
    }
    
#line 2653 
    memcpy((void *)netdev->dev_addr,(void const *)(& hw->mac.addr),(unsigned long)netdev->addr_len);
  }
  
#line 2656 
  tmp_0 = is_valid_ether_addr((u8 const *)netdev->dev_addr);
  
#line 2656 
  if (tmp_0) 
#line 2656 
             tmp_1 = 0; else 
#line 2656 
                             tmp_1 = 1;
  
#line 2656 
  if (tmp_1) {
    
#line 2657 
    _dev_info((struct device const *)(& pdev->dev),"Assigning random MAC address\n");
    
#line 2658 
    eth_hw_addr_random(netdev);
    
#line 2659 
    memcpy((void *)(& hw->mac.addr),(void const *)netdev->dev_addr,(unsigned long)netdev->addr_len);
  }
  else ;
  
#line 2663 
  adapter->rx_itr_setting = (unsigned short)1U;
  
#line 2664 
  adapter->tx_itr_setting = (unsigned short)1U;
  
#line 2667 
  adapter->tx_ring_count = 1024U;
  
#line 2668 
  adapter->rx_ring_count = 512U;
  
#line 2670 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 2671 
  __retres = 0;
  
#line 2671 
  goto return_label;
  out: 
#line 2673 
  ;
  
#line 2674 
  __retres = err;
  return_label: 
#line 2674 
                return __retres;
}


#line 2703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
void ixgbevf_update_stats(struct ixgbevf_adapter *adapter)
{
  int i;
  int tmp;
  
#line 2705 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2708 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 2708 
  if (tmp != 0) 
#line 2710 
                goto return_label;
  else {
    int tmp_0;
    
#line 2708 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
    
#line 2708 
    if (tmp_0 != 0) 
#line 2710 
                    goto return_label; else ;
  }
  {
    
#line 2712 
    u32 current_counter = ixgbevf_read_reg(hw,4124U);
    
#line 2712 
    if ((unsigned long long)current_counter < adapter->stats.last_vfgprc) 
      
#line 2712 
      adapter->stats.vfgprc += 4294967296ULL; else ;
    
#line 2712 
    adapter->stats.last_vfgprc = (unsigned long long)current_counter;
    
#line 2712 
    adapter->stats.vfgprc &= 18446744069414584320ULL;
    
#line 2712 
    adapter->stats.vfgprc |= (unsigned long long)current_counter;
  }
  {
    
#line 2714 
    u32 current_counter_0 = ixgbevf_read_reg(hw,8220U);
    
#line 2714 
    if ((unsigned long long)current_counter_0 < adapter->stats.last_vfgptc) 
      
#line 2714 
      adapter->stats.vfgptc += 4294967296ULL; else ;
    
#line 2714 
    adapter->stats.last_vfgptc = (unsigned long long)current_counter_0;
    
#line 2714 
    adapter->stats.vfgptc &= 18446744069414584320ULL;
    
#line 2714 
    adapter->stats.vfgptc |= (unsigned long long)current_counter_0;
  }
  {
    u32 tmp_3;
    u32 tmp_4;
    
#line 2716 
    tmp_3 = ixgbevf_read_reg(hw,4128U);
    
#line 2716 
    u64 current_counter_lsb = (unsigned long long)tmp_3;
    
#line 2716 
    tmp_4 = ixgbevf_read_reg(hw,4132U);
    
#line 2716 
    u64 current_counter_msb = (unsigned long long)tmp_4;
    
#line 2716 
    u64 current_counter_1 = (current_counter_msb << 32) | current_counter_lsb;
    
#line 2716 
    if (adapter->stats.last_vfgorc > current_counter_1) 
#line 2716 
                                                        adapter->stats.vfgorc += 68719476736ULL; else ;
    
#line 2716 
    adapter->stats.last_vfgorc = current_counter_1;
    
#line 2716 
    adapter->stats.vfgorc &= 18446744004990074880ULL;
    
#line 2716 
    adapter->stats.vfgorc |= current_counter_1;
  }
  {
    u32 tmp_5;
    u32 tmp_6;
    
#line 2719 
    tmp_5 = ixgbevf_read_reg(hw,8224U);
    
#line 2719 
    u64 current_counter_lsb_0 = (unsigned long long)tmp_5;
    
#line 2719 
    tmp_6 = ixgbevf_read_reg(hw,8228U);
    
#line 2719 
    u64 current_counter_msb_0 = (unsigned long long)tmp_6;
    
#line 2719 
    u64 current_counter_2 = (current_counter_msb_0 << 32) | current_counter_lsb_0;
    
#line 2719 
    if (adapter->stats.last_vfgotc > current_counter_2) 
#line 2719 
                                                        adapter->stats.vfgotc += 68719476736ULL; else ;
    
#line 2719 
    adapter->stats.last_vfgotc = current_counter_2;
    
#line 2719 
    adapter->stats.vfgotc &= 18446744004990074880ULL;
    
#line 2719 
    adapter->stats.vfgotc |= current_counter_2;
  }
  {
    
#line 2722 
    u32 current_counter_3 = ixgbevf_read_reg(hw,4148U);
    
#line 2722 
    if ((unsigned long long)current_counter_3 < adapter->stats.last_vfmprc) 
      
#line 2722 
      adapter->stats.vfmprc += 4294967296ULL; else ;
    
#line 2722 
    adapter->stats.last_vfmprc = (unsigned long long)current_counter_3;
    
#line 2722 
    adapter->stats.vfmprc &= 18446744069414584320ULL;
    
#line 2722 
    adapter->stats.vfmprc |= (unsigned long long)current_counter_3;
  }
  
#line 2725 
  i = 0;
  
#line 2725 
  goto ldv_55467;
  ldv_55466: 
#line 2726 
  ;
  
#line 2726 
  adapter->hw_csum_rx_error += (adapter->rx_ring[i])->hw_csum_rx_error;
  
#line 2728 
  (adapter->rx_ring[i])->hw_csum_rx_error = 0ULL;
  
#line 2725 
  i += 1;
  ldv_55467: 
#line 2726 
  ;
  
#line 2725 
  if (adapter->num_rx_queues > i) 
#line 2727 
                                  goto ldv_55466; else 
#line 2730 
                                                       goto ldv_55468;
  ldv_55468: 
#line 2731 
  ;
  return_label: 
#line 2732 
                return;
}


#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_service_timer(unsigned long data)
{
  
#line 2738 
  struct ixgbevf_adapter *adapter = (struct ixgbevf_adapter *)data;
  
#line 2741 
  ldv_mod_timer_105(& adapter->service_timer,jiffies + 500UL);
  
#line 2743 
  ixgbevf_service_event_schedule(adapter);
  
#line 2744 
  return;
}


#line 2746  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_reset_subtask(struct ixgbevf_adapter *adapter)
{
  int tmp;
  
#line 2748 
  if ((adapter->flags & 1U) == 0U) 
#line 2749 
                                   goto return_label; else ;
  
#line 2751 
  adapter->flags &= 4294967294U;
  
#line 2754 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 2754 
  if (tmp != 0) 
#line 2756 
                goto return_label;
  else {
    int tmp_0;
    
#line 2754 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
    
#line 2754 
    if (tmp_0 != 0) 
#line 2756 
                    goto return_label; else ;
  }
  
#line 2758 
  adapter->tx_timeout_count += 1U;
  
#line 2760 
  ixgbevf_reinit_locked(adapter);
  return_label: 
#line 2761 
                return;
}


#line 2772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_check_hang_subtask(struct ixgbevf_adapter *adapter)
{
  int i;
  int tmp;
  bool tmp_1;
  
#line 2774 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2775 
  u32 eics = 0U;
  
#line 2779 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 2779 
  if (tmp != 0) 
#line 2781 
                goto return_label;
  else {
    int tmp_0;
    
#line 2779 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
    
#line 2779 
    if (tmp_0 != 0) 
#line 2781 
                    goto return_label; else ;
  }
  
#line 2784 
  tmp_1 = netif_carrier_ok((struct net_device const *)adapter->netdev);
  
#line 2784 
  if ((int)tmp_1 != 0) {
    
#line 2785 
    i = 0;
    
#line 2785 
    goto ldv_55483;
    ldv_55482: 
#line 2786 
    ;
    
#line 2786 
    set_bit(0L,(unsigned long volatile *)(& (adapter->tx_ring[i])->state));
    
#line 2785 
    i += 1;
    ldv_55483: 
#line 2786 
    ;
    
#line 2785 
    if (adapter->num_tx_queues > i) 
#line 2787 
                                    goto ldv_55482; else 
#line 2790 
                                                         goto ldv_55484;
    ldv_55484: 
#line 2791 
    ;
  }
  else ;
  
#line 2790 
  i = 0;
  
#line 2790 
  goto ldv_55487;
  ldv_55486: 
#line 2791 
  ;
  {
    
#line 2791 
    struct ixgbevf_q_vector *qv = adapter->q_vector[i];
    
#line 2793 
    if (qv->rx.ring != (struct ixgbevf_ring *)0 || qv->tx.ring != (struct ixgbevf_ring *)0) 
      
#line 2794 
      eics = (unsigned int)(1 << i) | eics; else ;
  }
  
#line 2790 
  i += 1;
  ldv_55487: 
#line 2791 
  ;
  
#line 2790 
  if (adapter->num_msix_vectors + -1 > i) 
#line 2792 
                                          goto ldv_55486; else 
#line 2795 
                                                               goto ldv_55488;
  ldv_55488: 
#line 2796 
  ;
  
#line 2798 
  ixgbe_write_reg(hw,260U,eics);
  return_label: 
#line 2799 
                return;
}


#line 2805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_watchdog_update_link(struct ixgbevf_adapter *adapter)
{
  s32 err;
  
#line 2807 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2808 
  u32 link_speed = adapter->link_speed;
  
#line 2809 
  bool link_up = adapter->link_up;
  
#line 2812 
  ldv_spin_lock_bh_106(& adapter->mbx_lock);
  
#line 2814 
  err = (*(hw->mac.ops.check_link))(hw,& link_speed,& link_up,(_Bool)0);
  
#line 2816 
  ldv_spin_unlock_bh_107(& adapter->mbx_lock);
  
#line 2819 
  if (err != 0) {
    int tmp;
    {
      unsigned long __dummy;
      unsigned long volatile __dummy2;
      
#line 2819 
      tmp = 1;
    }
    
#line 2819 
    if (tmp != 0) {
      int tmp_0;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 2819 
        tmp_0 = 1;
      }
      
#line 2819 
      if (tmp_0 != 0) {
        
#line 2819 
        if ((long)((adapter->last_reset - jiffies) + 2500UL) < 0L) {
          
#line 2820 
          adapter->flags |= 1U;
          
#line 2821 
          link_up = (_Bool)0;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 2824 
  adapter->link_up = link_up;
  
#line 2825 
  adapter->link_speed = link_speed;
  
#line 2826 
  return;
}


#line 2833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_watchdog_link_is_up(struct ixgbevf_adapter *adapter)
{
  bool tmp;
  char *tmp_2;
  
#line 2835 
  struct net_device *netdev = adapter->netdev;
  
#line 2838 
  tmp = netif_carrier_ok((struct net_device const *)netdev);
  
#line 2838 
  if ((int)tmp != 0) 
#line 2839 
                     goto return_label; else ;
  
#line 2841 
  if (adapter->link_speed != 128U) {
    char *tmp_1;
    
#line 2841 
    if (adapter->link_speed != 32U) {
      char *tmp_0;
      
#line 2841 
      if (adapter->link_speed == 8U) 
#line 2841 
                                     tmp_0 = (char *)"100 Mbps"; else 
                                                                   
#line 2841 
                                                                   tmp_0 = (char *)"unknown speed";
      
#line 2841 
      tmp_1 = tmp_0;
    }
    else 
#line 2841 
         tmp_1 = (char *)"1 Gbps";
    
#line 2841 
    tmp_2 = tmp_1;
  }
  else 
#line 2841 
       tmp_2 = (char *)"10 Gbps";
  
#line 2841 
  ;
  
#line 2841 
  _dev_info((struct device const *)(& (adapter->pdev)->dev),"NIC Link is Up %s\n",tmp_2);
  
#line 2850 
  netif_carrier_on(netdev);
  return_label: 
#line 2851 
                return;
}


#line 2858  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_watchdog_link_is_down(struct ixgbevf_adapter *adapter)
{
  int tmp_0;
  bool tmp;
  
#line 2860 
  struct net_device *netdev = adapter->netdev;
  
#line 2862 
  adapter->link_speed = 0U;
  
#line 2865 
  tmp = netif_carrier_ok((struct net_device const *)netdev);
  
#line 2865 
  if (tmp) 
#line 2865 
           tmp_0 = 0; else 
#line 2865 
                           tmp_0 = 1;
  
#line 2865 
  if (tmp_0) 
#line 2866 
             goto return_label; else ;
  
#line 2868 
  _dev_info((struct device const *)(& (adapter->pdev)->dev),"NIC Link is Down\n");
  
#line 2870 
  netif_carrier_off(netdev);
  return_label: 
#line 2871 
                return;
}


#line 2877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_watchdog_subtask(struct ixgbevf_adapter *adapter)
{
  int tmp;
  
#line 2880 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 2880 
  if (tmp != 0) 
#line 2882 
                goto return_label;
  else {
    int tmp_0;
    
#line 2880 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
    
#line 2880 
    if (tmp_0 != 0) 
#line 2882 
                    goto return_label; else ;
  }
  
#line 2884 
  ixgbevf_watchdog_update_link(adapter);
  
#line 2886 
  if ((int)adapter->link_up != 0) 
#line 2887 
                                  ixgbevf_watchdog_link_is_up(adapter); else 
                                                                    
#line 2889 
                                                                    ixgbevf_watchdog_link_is_down(adapter);
  
#line 2891 
  ixgbevf_update_stats(adapter);
  return_label: 
#line 2892 
                return;
}


#line 2898  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_service_task(struct work_struct *work)
{
  struct ixgbevf_adapter *tmp;
  {
    
#line 2900 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2900 
    tmp = (struct ixgbevf_adapter *)__mptr + 18446744073709550160U;
  }
  
#line 2900 
  struct ixgbevf_adapter *adapter = tmp;
  
#line 2903 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 2905 
  if ((long)(hw->hw_addr == (u8 *)0U) != 0L) {
    int tmp_0;
    
#line 2906 
    tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
    
#line 2906 
    if (tmp_0 == 0) {
      
#line 2907 
      rtnl_lock();
      
#line 2908 
      ixgbevf_down(adapter);
      
#line 2909 
      rtnl_unlock();
    }
    else ;
    
#line 2911 
    goto return_label;
  }
  else ;
  
#line 2914 
  ixgbevf_queue_reset_subtask(adapter);
  
#line 2915 
  ixgbevf_reset_subtask(adapter);
  
#line 2916 
  ixgbevf_watchdog_subtask(adapter);
  
#line 2917 
  ixgbevf_check_hang_subtask(adapter);
  
#line 2919 
  ixgbevf_service_event_complete(adapter);
  return_label: 
#line 2920 
                return;
}


#line 2928  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
void ixgbevf_free_tx_resources(struct ixgbevf_ring *tx_ring)
{
  
#line 2930 
  ixgbevf_clean_tx_ring(tx_ring);
  
#line 2932 
  vfree((void const *)tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info);
  
#line 2933 
  tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info = (struct ixgbevf_tx_buffer *)0;
  
#line 2936 
  if (tx_ring->desc == (void *)0) 
#line 2937 
                                  goto return_label; else ;
  
#line 2939 
  dma_free_attrs(tx_ring->dev,(unsigned long)tx_ring->size,tx_ring->desc,tx_ring->dma,(struct dma_attrs *)0);
  
#line 2942 
  tx_ring->desc = (void *)0;
  return_label: 
#line 2943 
                return;
}


#line 2951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_free_all_tx_resources(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 2955 
  i = 0;
  
#line 2955 
  goto ldv_55528;
  ldv_55527: 
#line 2956 
  ;
  
#line 2956 
  if ((adapter->tx_ring[i])->desc != (void *)0) 
#line 2957 
                                                ixgbevf_free_tx_resources(adapter->tx_ring[i]); else ;
  
#line 2955 
  i += 1;
  ldv_55528: 
#line 2956 
  ;
  
#line 2955 
  if (adapter->num_tx_queues > i) 
#line 2957 
                                  goto ldv_55527; else 
#line 2960 
                                                       goto ldv_55529;
  ldv_55529: 
#line 2961 
  ;
  
#line 2962 
  return;
}


#line 2966  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
int ixgbevf_setup_tx_resources(struct ixgbevf_ring *tx_ring)
{
  int __retres;
  int size;
  
#line 2970 
  size = (int)((unsigned int)tx_ring->count * 48U);
  
#line 2971 
  tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info = (struct ixgbevf_tx_buffer *)vzalloc((unsigned long)size);
  
#line 2972 
  if (tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info == (struct ixgbevf_tx_buffer *)0) 
    
#line 2973 
    goto err; else ;
  
#line 2976 
  tx_ring->size = (unsigned int)tx_ring->count * 16U;
  
#line 2977 
  tx_ring->size = (tx_ring->size + 4095U) & 4294963200U;
  
#line 2979 
  tx_ring->desc = dma_alloc_attrs(tx_ring->dev,(unsigned long)tx_ring->size,& tx_ring->dma,208U,(struct dma_attrs *)0);
  
#line 2981 
  if (tx_ring->desc == (void *)0) 
#line 2982 
                                  goto err; else ;
  
#line 2984 
  __retres = 0;
  
#line 2984 
  goto return_label;
  err: 
#line 2986 
  ;
  
#line 2987 
  vfree((void const *)tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info);
  
#line 2988 
  tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info = (struct ixgbevf_tx_buffer *)0;
  
#line 2990 
  __retres = -12;
  return_label: 
#line 2990 
                return __retres;
}


#line 3003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_setup_all_tx_resources(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 3005 
  int err = 0;
  
#line 3007 
  i = 0;
  
#line 3007 
  goto ldv_55543;
  ldv_55542: 
#line 3008 
  ;
  
#line 3008 
  err = ixgbevf_setup_tx_resources(adapter->tx_ring[i]);
  
#line 3009 
  if (err == 0) 
#line 3010 
                goto ldv_55540; else ;
  
#line 3012 
  goto ldv_55541;
  ldv_55540: 
#line 3013 
  ;
  
#line 3007 
  i += 1;
  ldv_55543: 
#line 3008 
  ;
  
#line 3007 
  if (adapter->num_tx_queues > i) 
#line 3009 
                                  goto ldv_55542; else 
#line 3012 
                                                       goto ldv_55541;
  ldv_55541: 
#line 3013 
  ;
  
#line 3015 
  return err;
}


#line 3024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
int ixgbevf_setup_rx_resources(struct ixgbevf_ring *rx_ring)
{
  int __retres;
  int size;
  
#line 3028 
  size = (int)((unsigned int)rx_ring->count * 24U);
  
#line 3029 
  rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info = (struct ixgbevf_rx_buffer *)vzalloc((unsigned long)size);
  
#line 3030 
  if (rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info == (struct ixgbevf_rx_buffer *)0) 
    
#line 3031 
    goto err; else ;
  
#line 3034 
  rx_ring->size = (unsigned int)rx_ring->count * 16U;
  
#line 3035 
  rx_ring->size = (rx_ring->size + 4095U) & 4294963200U;
  
#line 3037 
  rx_ring->desc = dma_alloc_attrs(rx_ring->dev,(unsigned long)rx_ring->size,& rx_ring->dma,208U,(struct dma_attrs *)0);
  
#line 3040 
  if (rx_ring->desc == (void *)0) 
#line 3041 
                                  goto err; else ;
  
#line 3043 
  __retres = 0;
  
#line 3043 
  goto return_label;
  err: 
#line 3044 
  ;
  
#line 3045 
  vfree((void const *)rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info);
  
#line 3046 
  rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info = (struct ixgbevf_rx_buffer *)0;
  
#line 3047 
  dev_err((struct device const *)rx_ring->dev,"Unable to allocate memory for the Rx descriptor ring\n");
  
#line 3048 
  __retres = -12;
  return_label: 
#line 3048 
                return __retres;
}


#line 3061  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_setup_all_rx_resources(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 3063 
  int err = 0;
  
#line 3065 
  i = 0;
  
#line 3065 
  goto ldv_55557;
  ldv_55556: 
#line 3066 
  ;
  
#line 3066 
  err = ixgbevf_setup_rx_resources(adapter->rx_ring[i]);
  
#line 3067 
  if (err == 0) 
#line 3068 
                goto ldv_55554; else ;
  
#line 3070 
  goto ldv_55555;
  ldv_55554: 
#line 3071 
  ;
  
#line 3065 
  i += 1;
  ldv_55557: 
#line 3066 
  ;
  
#line 3065 
  if (adapter->num_rx_queues > i) 
#line 3067 
                                  goto ldv_55556; else 
#line 3070 
                                                       goto ldv_55555;
  ldv_55555: 
#line 3071 
  ;
  
#line 3072 
  return err;
}


#line 3081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
void ixgbevf_free_rx_resources(struct ixgbevf_ring *rx_ring)
{
  
#line 3083 
  ixgbevf_clean_rx_ring(rx_ring);
  
#line 3085 
  vfree((void const *)rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info);
  
#line 3086 
  rx_ring->__anonCompField_ixgbevf_ring_115.rx_buffer_info = (struct ixgbevf_rx_buffer *)0;
  
#line 3088 
  dma_free_attrs(rx_ring->dev,(unsigned long)rx_ring->size,rx_ring->desc,rx_ring->dma,(struct dma_attrs *)0);
  
#line 3091 
  rx_ring->desc = (void *)0;
  
#line 3092 
  return;
}


#line 3100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_free_all_rx_resources(struct ixgbevf_adapter *adapter)
{
  int i;
  
#line 3104 
  i = 0;
  
#line 3104 
  goto ldv_55566;
  ldv_55565: 
#line 3105 
  ;
  
#line 3105 
  if ((adapter->rx_ring[i])->desc != (void *)0) 
#line 3106 
                                                ixgbevf_free_rx_resources(adapter->rx_ring[i]); else ;
  
#line 3104 
  i += 1;
  ldv_55566: 
#line 3105 
  ;
  
#line 3104 
  if (adapter->num_rx_queues > i) 
#line 3106 
                                  goto ldv_55565; else 
#line 3109 
                                                       goto ldv_55567;
  ldv_55567: 
#line 3110 
  ;
  
#line 3111 
  return;
}


#line 3121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_open(struct net_device *netdev)
{
  int __retres;
  int err;
  int tmp_0;
  
#line 3123 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3124 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 3133 
  if (adapter->num_msix_vectors == 0) {
    
#line 3134 
    __retres = -12;
    
#line 3134 
    goto return_label;
  }
  else ;
  
#line 3136 
  if ((int)hw->adapter_stopped != 0) {
    
#line 3137 
    ixgbevf_reset(adapter);
    
#line 3141 
    if ((int)hw->adapter_stopped != 0) {
      
#line 3142 
      err = -100;
      
#line 3143 
      printk("\001");
      
#line 3144 
      goto err_setup_reset;
    }
    else ;
  }
  else ;
  
#line 3149 
  tmp_0 = constant_test_bit(0L,(unsigned long const volatile *)(& adapter->state));
  
#line 3149 
  if (tmp_0 != 0) {
    
#line 3150 
    __retres = -16;
    
#line 3150 
    goto return_label;
  }
  else ;
  
#line 3152 
  netif_carrier_off(netdev);
  
#line 3155 
  err = ixgbevf_setup_all_tx_resources(adapter);
  
#line 3156 
  if (err != 0) 
#line 3157 
                goto err_setup_tx; else ;
  
#line 3160 
  err = ixgbevf_setup_all_rx_resources(adapter);
  
#line 3161 
  if (err != 0) 
#line 3162 
                goto err_setup_rx; else ;
  
#line 3164 
  ixgbevf_configure(adapter);
  
#line 3170 
  ixgbevf_map_rings_to_vectors(adapter);
  
#line 3172 
  err = ixgbevf_request_irq(adapter);
  
#line 3173 
  if (err != 0) 
#line 3174 
                goto err_req_irq; else ;
  
#line 3176 
  ixgbevf_up_complete(adapter);
  
#line 3178 
  __retres = 0;
  
#line 3178 
  goto return_label;
  err_req_irq: 
#line 3180 
  ;
  
#line 3181 
  ixgbevf_down(adapter);
  err_setup_rx: 
#line 3182 
  ;
  
#line 3183 
  ixgbevf_free_all_rx_resources(adapter);
  err_setup_tx: 
#line 3184 
  ;
  
#line 3185 
  ixgbevf_free_all_tx_resources(adapter);
  
#line 3186 
  ixgbevf_reset(adapter);
  err_setup_reset: 
#line 3188 
  ;
  
#line 3190 
  __retres = err;
  return_label: 
#line 3190 
                return __retres;
}


#line 3204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_close(struct net_device *netdev)
{
  int __retres;
  
#line 3206 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3208 
  ixgbevf_down(adapter);
  
#line 3209 
  ixgbevf_free_irq(adapter);
  
#line 3211 
  ixgbevf_free_all_tx_resources(adapter);
  
#line 3212 
  ixgbevf_free_all_rx_resources(adapter);
  
#line 3214 
  __retres = 0;
  
#line 3214 
  return __retres;
}


#line 3217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_queue_reset_subtask(struct ixgbevf_adapter *adapter)
{
  int tmp;
  bool tmp_1;
  bool tmp_2;
  
#line 3219 
  struct net_device *dev = adapter->netdev;
  
#line 3221 
  if ((adapter->flags & 4U) == 0U) 
#line 3222 
                                   goto return_label; else ;
  
#line 3224 
  adapter->flags &= 4294967291U;
  
#line 3227 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 3227 
  if (tmp != 0) 
#line 3229 
                goto return_label;
  else {
    int tmp_0;
    
#line 3227 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
    
#line 3227 
    if (tmp_0 != 0) 
#line 3229 
                    goto return_label; else ;
  }
  
#line 3235 
  tmp_1 = netif_running((struct net_device const *)dev);
  
#line 3235 
  if ((int)tmp_1 != 0) 
#line 3236 
                       ixgbevf_close(dev); else ;
  
#line 3238 
  ixgbevf_clear_interrupt_scheme(adapter);
  
#line 3239 
  ixgbevf_init_interrupt_scheme(adapter);
  
#line 3241 
  tmp_2 = netif_running((struct net_device const *)dev);
  
#line 3241 
  if ((int)tmp_2 != 0) 
#line 3242 
                       ixgbevf_open(dev); else ;
  return_label: 
#line 3243 
                return;
}


#line 3245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_tx_ctxtdesc(struct ixgbevf_ring *tx_ring, u32 vlan_macip_lens, u32 type_tucmd, u32 mss_l4len_idx)
{
  struct ixgbe_adv_tx_context_desc *context_desc;
  
#line 3250 
  u16 i = tx_ring->next_to_use;
  
#line 3252 
  context_desc = (struct ixgbe_adv_tx_context_desc *)tx_ring->desc + (int)i;
  
#line 3254 
  i = (u16)((int)i + 1);
  
#line 3255 
  if ((int)tx_ring->count > (int)i) 
#line 3255 
                                    tx_ring->next_to_use = i; else 
#line 3255 
                                                                   tx_ring->next_to_use = (unsigned short)0U;
  
#line 3258 
  type_tucmd |= 538968064U;
  
#line 3260 
  context_desc->vlan_macip_lens = vlan_macip_lens;
  
#line 3261 
  context_desc->seqnum_seed = 0U;
  
#line 3262 
  context_desc->type_tucmd_mlhl = type_tucmd;
  
#line 3263 
  context_desc->mss_l4len_idx = mss_l4len_idx;
  
#line 3264 
  return;
}


#line 3266  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_tso(struct ixgbevf_ring *tx_ring, struct ixgbevf_tx_buffer *first, u8 *hdr_len)
{
  int __retres;
  u32 vlan_macip_lens;
  u32 type_tucmd;
  u32 mss_l4len_idx;
  u32 l4len;
  int err;
  int tmp_0;
  bool tmp;
  int tmp_10;
  unsigned char *tmp_11;
  unsigned char *tmp_12;
  int tmp_13;
  
#line 3270 
  struct sk_buff *skb = first->skb;
  
#line 3275 
  if ((unsigned int)*((unsigned char *)skb + 145UL) != 6U) {
    
#line 3276 
    __retres = 0;
    
#line 3276 
    goto return_label;
  }
  else ;
  
#line 3278 
  tmp = skb_is_gso((struct sk_buff const *)skb);
  
#line 3278 
  if (tmp) 
#line 3278 
           tmp_0 = 0; else 
#line 3278 
                           tmp_0 = 1;
  
#line 3278 
  if (tmp_0) {
    
#line 3279 
    __retres = 0;
    
#line 3279 
    goto return_label;
  }
  else ;
  
#line 3281 
  err = skb_cow_head(skb,0U);
  
#line 3282 
  if (err < 0) {
    
#line 3283 
    __retres = err;
    
#line 3283 
    goto return_label;
  }
  else ;
  
#line 3286 
  type_tucmd = 2048U;
  
#line 3288 
  if ((unsigned int)first->protocol == 8U) {
    struct tcphdr *tmp_2;
    __sum16 tmp_3;
    
#line 3289 
    struct iphdr *iph = ip_hdr((struct sk_buff const *)skb);
    
#line 3291 
    iph->tot_len = (unsigned short)0U;
    
#line 3292 
    iph->check = (unsigned short)0U;
    
#line 3293 
    tmp_2 = tcp_hdr((struct sk_buff const *)skb);
    
#line 3293 
    tmp_3 = csum_tcpudp_magic(iph->saddr,iph->daddr,(unsigned short)0,(unsigned short)6,0U);
    
#line 3293 
    tmp_2->check = (unsigned short)(~ ((int)tmp_3));
    
#line 3297 
    type_tucmd |= 1024U;
    
#line 3298 
    first->tx_flags |= 13U;
  }
  else {
    bool tmp_9;
    
#line 3301 
    tmp_9 = skb_is_gso_v6((struct sk_buff const *)skb);
    
#line 3301 
    if ((int)tmp_9 != 0) {
      struct ipv6hdr *tmp_4;
      struct tcphdr *tmp_5;
      __sum16 tmp_8;
      struct ipv6hdr *tmp_6;
      struct ipv6hdr *tmp_7;
      
#line 3302 
      tmp_4 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 3302 
      tmp_4->payload_len = (unsigned short)0U;
      
#line 3303 
      tmp_5 = tcp_hdr((struct sk_buff const *)skb);
      
#line 3305 
      tmp_6 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 3304 
      tmp_7 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 3303 
      tmp_8 = csum_ipv6_magic((struct in6_addr const *)(& tmp_7->saddr),(struct in6_addr const *)(& tmp_6->daddr),0U,(unsigned short)6,0U);
      
#line 3303 
      tmp_5->check = (unsigned short)(~ ((int)tmp_8));
      
#line 3307 
      first->tx_flags |= 5U;
    }
    else ;
  }
  
#line 3312 
  l4len = tcp_hdrlen((struct sk_buff const *)skb);
  
#line 3313 
  *hdr_len = (unsigned char)((int)*hdr_len + (int)((unsigned char)l4len));
  
#line 3314 
  tmp_10 = skb_transport_offset((struct sk_buff const *)skb);
  
#line 3314 
  *hdr_len = (unsigned char)((int)((unsigned char)tmp_10) + (int)((unsigned char)l4len));
  
#line 3317 
  tmp_11 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 3317 
  first->gso_segs = ((struct skb_shared_info *)tmp_11)->gso_segs;
  
#line 3318 
  first->bytecount += (unsigned int)(((int)first->gso_segs + -1) * (int)*hdr_len);
  
#line 3321 
  mss_l4len_idx = l4len << 8;
  
#line 3322 
  tmp_12 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 3322 
  mss_l4len_idx = (unsigned int)((int)((struct skb_shared_info *)tmp_12)->gso_size << 16) | mss_l4len_idx;
  
#line 3323 
  mss_l4len_idx |= 16U;
  
#line 3326 
  vlan_macip_lens = skb_network_header_len((struct sk_buff const *)skb);
  
#line 3327 
  tmp_13 = skb_network_offset((struct sk_buff const *)skb);
  
#line 3327 
  vlan_macip_lens = (unsigned int)(tmp_13 << 9) | vlan_macip_lens;
  
#line 3328 
  vlan_macip_lens = (first->tx_flags & 4294901760U) | vlan_macip_lens;
  
#line 3330 
  ixgbevf_tx_ctxtdesc(tx_ring,vlan_macip_lens,type_tucmd,mss_l4len_idx);
  
#line 3333 
  __retres = 1;
  return_label: 
#line 3333 
                return __retres;
}


#line 3336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_tx_csum(struct ixgbevf_ring *tx_ring, struct ixgbevf_tx_buffer *first)
{
  int tmp_6;
  
#line 3339 
  struct sk_buff *skb = first->skb;
  
#line 3340 
  u32 vlan_macip_lens = 0U;
  
#line 3341 
  u32 mss_l4len_idx = 0U;
  
#line 3342 
  u32 type_tucmd = 0U;
  
#line 3344 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
    
#line 3345 
    u8 l4_hdr = (unsigned char)0U;
    
#line 3347 
    switch ((int)first->protocol) {
      u32 tmp;
      struct iphdr *tmp_0;
      u32 tmp_1;
      struct ipv6hdr *tmp_2;
      int tmp_3;
      case 8: 
#line 3348 
      ;
      
#line 3349 
      tmp = skb_network_header_len((struct sk_buff const *)skb);
      
#line 3349 
      vlan_macip_lens = tmp | vlan_macip_lens;
      
#line 3350 
      type_tucmd |= 1024U;
      
#line 3351 
      tmp_0 = ip_hdr((struct sk_buff const *)skb);
      
#line 3351 
      l4_hdr = tmp_0->protocol;
      
#line 3352 
      goto ldv_55616;
      case 56710: 
#line 3353 
      ;
      
#line 3354 
      tmp_1 = skb_network_header_len((struct sk_buff const *)skb);
      
#line 3354 
      vlan_macip_lens = tmp_1 | vlan_macip_lens;
      
#line 3355 
      tmp_2 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 3355 
      l4_hdr = tmp_2->nexthdr;
      
#line 3356 
      goto ldv_55616;
      default: 
#line 3357 
      ;
      
#line 3358 
      tmp_3 = net_ratelimit();
      
#line 3358 
      if ((long)(tmp_3 != 0) != 0L) 
#line 3359 
                                    dev_warn((struct device const *)tx_ring->dev,"partial checksum but proto=%x!\n",(int)first->protocol); else ;
      
#line 3363 
      goto ldv_55616;
    }
    ldv_55616: 
#line 3366 
    ;
    
#line 3366 
    switch ((int)l4_hdr) {
      unsigned int tmp_4;
      int tmp_5;
      case 6: 
#line 3367 
      ;
      
#line 3368 
      type_tucmd |= 2048U;
      
#line 3369 
      tmp_4 = tcp_hdrlen((struct sk_buff const *)skb);
      
#line 3369 
      mss_l4len_idx = tmp_4 << 8;
      
#line 3371 
      goto ldv_55620;
      case 132: 
#line 3372 
      ;
      
#line 3373 
      type_tucmd |= 4096U;
      
#line 3374 
      mss_l4len_idx = 3072U;
      
#line 3376 
      goto ldv_55620;
      case 17: 
#line 3377 
      ;
      
#line 3378 
      mss_l4len_idx = 2048U;
      
#line 3380 
      goto ldv_55620;
      default: 
#line 3381 
      ;
      
#line 3382 
      tmp_5 = net_ratelimit();
      
#line 3382 
      if ((long)(tmp_5 != 0) != 0L) 
#line 3383 
                                    dev_warn((struct device const *)tx_ring->dev,"partial checksum but l4 proto=%x!\n",(int)l4_hdr); else ;
      
#line 3387 
      goto ldv_55620;
    }
    ldv_55620: 
#line 3391 
    ;
    
#line 3391 
    first->tx_flags |= 1U;
  }
  else ;
  
#line 3395 
  tmp_6 = skb_network_offset((struct sk_buff const *)skb);
  
#line 3395 
  vlan_macip_lens = (unsigned int)(tmp_6 << 9) | vlan_macip_lens;
  
#line 3396 
  vlan_macip_lens = (first->tx_flags & 4294901760U) | vlan_macip_lens;
  
#line 3398 
  ixgbevf_tx_ctxtdesc(tx_ring,vlan_macip_lens,type_tucmd,mss_l4len_idx);
  
#line 3399 
  return;
}


#line 3402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static __le32 ixgbevf_tx_cmd_type(u32 tx_flags)
{
  
#line 3405 
  __le32 cmd_type = 573571072U;
  
#line 3410 
  if ((tx_flags & 2U) != 0U) 
#line 3411 
                             cmd_type |= 1073741824U; else ;
  
#line 3414 
  if ((tx_flags & 4U) != 0U) 
#line 3415 
                             cmd_type |= 2147483648U; else ;
  
#line 3417 
  return cmd_type;
}


#line 3420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_tx_olinfo_status(union ixgbe_adv_tx_desc *tx_desc, u32 tx_flags, unsigned int paylen)
{
  
#line 3423 
  __le32 olinfo_status = paylen << 14;
  
#line 3426 
  if ((tx_flags & 1U) != 0U) 
#line 3427 
                             olinfo_status |= 512U; else ;
  
#line 3430 
  if ((tx_flags & 8U) != 0U) 
#line 3431 
                             olinfo_status |= 256U; else ;
  
#line 3434 
  if ((tx_flags & 4U) != 0U) 
#line 3435 
                             olinfo_status |= 16U; else ;
  
#line 3440 
  olinfo_status |= 128U;
  
#line 3442 
  tx_desc->read.olinfo_status = olinfo_status;
  
#line 3443 
  return;
}


#line 3445  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_tx_map(struct ixgbevf_ring *tx_ring, struct ixgbevf_tx_buffer *first, u8 const hdr_len)
{
  dma_addr_t dma;
  struct ixgbevf_tx_buffer *tx_buffer;
  union ixgbe_adv_tx_desc *tx_desc;
  unsigned char *tmp;
  __le32 cmd_type;
  int tmp_1;
  int tmp_2;
  
#line 3450 
  struct sk_buff *skb = first->skb;
  
#line 3453 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 3453 
  struct skb_frag_struct *frag = & ((struct skb_shared_info *)tmp)->frags[0];
  
#line 3454 
  unsigned int data_len = skb->data_len;
  
#line 3455 
  unsigned int size = skb_headlen((struct sk_buff const *)skb);
  
#line 3456 
  unsigned int paylen = skb->len - (unsigned int)hdr_len;
  
#line 3457 
  u32 tx_flags = first->tx_flags;
  
#line 3459 
  u16 i = tx_ring->next_to_use;
  
#line 3461 
  tx_desc = (union ixgbe_adv_tx_desc *)tx_ring->desc + (int)i;
  
#line 3463 
  ixgbevf_tx_olinfo_status(tx_desc,tx_flags,paylen);
  
#line 3464 
  cmd_type = ixgbevf_tx_cmd_type(tx_flags);
  
#line 3466 
  dma = dma_map_single_attrs(tx_ring->dev,(void *)skb->data,(unsigned long)size,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 3467 
  tmp_1 = dma_mapping_error(tx_ring->dev,dma);
  
#line 3467 
  if (tmp_1 != 0) 
#line 3468 
                  goto dma_error; else ;
  
#line 3471 
  first->len = size;
  
#line 3472 
  first->dma = dma;
  
#line 3474 
  tx_desc->read.buffer_addr = dma;
  ldv_55655: 
#line 3475 
  ;
  
#line 3477 
  goto ldv_55652;
  ldv_55651: 
#line 3478 
  ;
  
#line 3478 
  tx_desc->read.cmd_type_len = cmd_type | 16384U;
  
#line 3481 
  i = (u16)((int)i + 1);
  
#line 3482 
  tx_desc += 1;
  
#line 3483 
  if ((int)tx_ring->count == (int)i) {
    
#line 3484 
    tx_desc = (union ixgbe_adv_tx_desc *)tx_ring->desc;
    
#line 3485 
    i = (unsigned short)0U;
  }
  else ;
  
#line 3488 
  dma += 16384ULL;
  
#line 3489 
  size += 4294950912U;
  
#line 3491 
  tx_desc->read.buffer_addr = dma;
  
#line 3492 
  tx_desc->read.olinfo_status = 0U;
  ldv_55652: 
#line 3493 
  ;
  
#line 3477 
  if ((long)(size > 16384U) != 0L) 
#line 3479 
                                   goto ldv_55651; else 
#line 3482 
                                                        goto ldv_55653;
  ldv_55653: 
#line 3483 
  ;
  
#line 3495 
  if ((long)(data_len == 0U) != 0L) 
#line 3496 
                                    goto ldv_55654; else ;
  
#line 3498 
  tx_desc->read.cmd_type_len = cmd_type | size;
  
#line 3500 
  i = (u16)((int)i + 1);
  
#line 3501 
  tx_desc += 1;
  
#line 3502 
  if ((int)tx_ring->count == (int)i) {
    
#line 3503 
    tx_desc = (union ixgbe_adv_tx_desc *)tx_ring->desc;
    
#line 3504 
    i = (unsigned short)0U;
  }
  else ;
  
#line 3507 
  size = skb_frag_size((skb_frag_t const *)frag);
  
#line 3508 
  data_len -= size;
  
#line 3510 
  dma = skb_frag_dma_map(tx_ring->dev,(skb_frag_t const *)frag,0UL,(unsigned long)size,(enum dma_data_direction)DMA_TO_DEVICE);
  
#line 3512 
  tmp_2 = dma_mapping_error(tx_ring->dev,dma);
  
#line 3512 
  if (tmp_2 != 0) 
#line 3513 
                  goto dma_error; else ;
  
#line 3515 
  tx_buffer = tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info + (int)i;
  
#line 3516 
  tx_buffer->len = size;
  
#line 3517 
  tx_buffer->dma = dma;
  
#line 3519 
  tx_desc->read.buffer_addr = dma;
  
#line 3520 
  tx_desc->read.olinfo_status = 0U;
  
#line 3522 
  frag += 1;
  
#line 3477 
  goto ldv_55655;
  ldv_55654: 
#line 3478 
  ;
  
#line 3526 
  cmd_type = (size | cmd_type) | 150994944U;
  
#line 3527 
  tx_desc->read.cmd_type_len = cmd_type;
  
#line 3530 
  first->time_stamp = jiffies;
  
#line 3531 
  ldv_inline_asm();
  
#line 3542 
  first->next_to_watch = tx_desc;
  
#line 3544 
  i = (u16)((int)i + 1);
  
#line 3545 
  if ((int)tx_ring->count == (int)i) 
#line 3546 
                                     i = (unsigned short)0U; else ;
  
#line 3548 
  tx_ring->next_to_use = i;
  
#line 3551 
  ixgbevf_write_tail(tx_ring,(unsigned int)i);
  
#line 3553 
  goto return_label;
  dma_error: 
#line 3554 
  ;
  
#line 3555 
  dev_err((struct device const *)tx_ring->dev,"TX DMA map failed\n");
  ldv_55657: 
#line 3556 
  ;
  
#line 3559 
  tx_buffer = tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info + (int)i;
  
#line 3560 
  ixgbevf_unmap_and_free_tx_resource(tx_ring,tx_buffer);
  
#line 3561 
  if (tx_buffer == first) 
#line 3562 
                          goto ldv_55656; else ;
  
#line 3563 
  if ((unsigned int)i == 0U) 
#line 3564 
                             i = tx_ring->count; else ;
  
#line 3565 
  i = (u16)((int)i - 1);
  
#line 3559 
  goto ldv_55657;
  ldv_55656: 
#line 3560 
  ;
  
#line 3568 
  tx_ring->next_to_use = i;
  return_label: 
#line 3569 
                return;
}


#line 3571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int __ixgbevf_maybe_stop_tx(struct ixgbevf_ring *tx_ring, int size)
{
  int __retres;
  u16 tmp;
  
#line 3573 
  netif_start_subqueue(tx_ring->netdev,(unsigned short)((int)((unsigned short)tx_ring->queue_index)));
  
#line 3574 
  ldv_inline_asm();
  
#line 3583 
  tmp = ixgbevf_desc_unused(tx_ring);
  
#line 3583 
  ;
  
#line 3583 
  if ((long)((int)tmp < size) != 0L) {
    
#line 3584 
    __retres = -16;
    
#line 3584 
    goto return_label;
  }
  else ;
  
#line 3587 
  netif_start_subqueue(tx_ring->netdev,(unsigned short)((int)((unsigned short)tx_ring->queue_index)));
  
#line 3588 
  tx_ring->__anonCompField_ixgbevf_ring_116.tx_stats.restart_queue += 1ULL;
  
#line 3590 
  __retres = 0;
  return_label: 
#line 3590 
                return __retres;
}


#line 3593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_maybe_stop_tx(struct ixgbevf_ring *tx_ring, int size)
{
  int __retres;
  u16 tmp;
  int tmp_0;
  
#line 3595 
  tmp = ixgbevf_desc_unused(tx_ring);
  
#line 3595 
  ;
  
#line 3595 
  if ((long)((int)tmp >= size) != 0L) {
    
#line 3596 
    __retres = 0;
    
#line 3596 
    goto return_label;
  }
  else ;
  
#line 3597 
  tmp_0 = __ixgbevf_maybe_stop_tx(tx_ring,size);
  
#line 3597 
  __retres = tmp_0;
  return_label: 
#line 3597 
                return __retres;
}


#line 3600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_xmit_frame(struct sk_buff *skb, struct net_device *netdev)
{
  int __retres;
  struct ixgbevf_tx_buffer *first;
  struct ixgbevf_ring *tx_ring;
  int tso;
  unsigned int tmp_0;
  unsigned char *tmp_3;
  int tmp_4;
  
#line 3602 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3606 
  u32 tx_flags = 0U;
  
#line 3607 
  tmp_0 = skb_headlen((struct sk_buff const *)skb);
  
#line 3607 
  u16 count = (unsigned short)(((unsigned long)tmp_0 + 16383UL) / 16384UL);
  
#line 3611 
  u8 hdr_len = (unsigned char)0U;
  
#line 3612 
  u8 *dst_mac = skb_header_pointer((struct sk_buff const *)skb,0,0,(void *)0);
  
#line 3614 
  if (dst_mac == (u8 *)0U) 
#line 3614 
                           goto _LOR;
  else {
    bool tmp_2;
    
#line 3614 
    tmp_2 = is_link_local_ether_addr((u8 const *)dst_mac);
    
#line 3614 
    if ((int)tmp_2 != 0) {
      _LOR: {
              
#line 3615 
              dev_kfree_skb_any(skb);
              
#line 3616 
              __retres = 0;
              
#line 3616 
              goto return_label;
            }
    }
    else ;
  }
  
#line 3619 
  tx_ring = adapter->tx_ring[(int)skb->queue_mapping];
  
#line 3631 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 3631 
  count = (unsigned short)((int)((unsigned short)((struct skb_shared_info *)tmp_3)->nr_frags) + (int)count);
  
#line 3633 
  tmp_4 = ixgbevf_maybe_stop_tx(tx_ring,(int)count + 3);
  
#line 3633 
  if (tmp_4 != 0) {
    
#line 3634 
    tx_ring->__anonCompField_ixgbevf_ring_116.tx_stats.tx_busy += 1ULL;
    
#line 3635 
    __retres = 16;
    
#line 3635 
    goto return_label;
  }
  else ;
  
#line 3639 
  first = tx_ring->__anonCompField_ixgbevf_ring_115.tx_buffer_info + (int)tx_ring->next_to_use;
  
#line 3640 
  first->skb = skb;
  
#line 3641 
  first->bytecount = skb->len;
  
#line 3642 
  first->gso_segs = (unsigned short)1U;
  
#line 3644 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 3645 
    tx_flags = ((unsigned int)skb->vlan_tci & 4294963199U) | tx_flags;
    
#line 3646 
    tx_flags <<= 16;
    
#line 3647 
    tx_flags |= 2U;
  }
  else ;
  
#line 3651 
  first->tx_flags = tx_flags;
  
#line 3652 
  first->protocol = vlan_get_protocol(skb);
  
#line 3654 
  tso = ixgbevf_tso(tx_ring,first,& hdr_len);
  
#line 3655 
  if (tso < 0) 
#line 3656 
               goto out_drop;
  else 
    
#line 3657 
    if (tso == 0) 
#line 3658 
                  ixgbevf_tx_csum(tx_ring,first); else ;
  
#line 3660 
  ixgbevf_tx_map(tx_ring,first,(unsigned char)((int)hdr_len));
  
#line 3662 
  ixgbevf_maybe_stop_tx(tx_ring,21);
  
#line 3664 
  __retres = 0;
  
#line 3664 
  goto return_label;
  out_drop: 
#line 3666 
  ;
  
#line 3667 
  dev_kfree_skb_any(first->skb);
  
#line 3668 
  first->skb = (struct sk_buff *)0;
  
#line 3670 
  __retres = 0;
  return_label: 
#line 3670 
                return __retres;
}


#line 3680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_set_mac(struct net_device *netdev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 3682 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3683 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 3684 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 3686 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 3686 
  if (tmp_0) 
#line 3686 
             tmp_1 = 0; else 
#line 3686 
                             tmp_1 = 1;
  
#line 3686 
  if (tmp_1) {
    
#line 3687 
    __retres = -99;
    
#line 3687 
    goto return_label;
  }
  else ;
  
#line 3689 
  memcpy((void *)netdev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 3690 
  memcpy((void *)(& hw->mac.addr),(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 3692 
  ldv_spin_lock_bh_108(& adapter->mbx_lock);
  
#line 3694 
  (*(hw->mac.ops.set_rar))(hw,0U,(u8 *)(& hw->mac.addr),0U);
  
#line 3696 
  ldv_spin_unlock_bh_109(& adapter->mbx_lock);
  
#line 3698 
  __retres = 0;
  return_label: 
#line 3698 
                return __retres;
}


#line 3708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_change_mtu(struct net_device *netdev, int new_mtu)
{
  int __retres;
  
#line 3710 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3711 
  struct ixgbe_hw *hw = & adapter->hw;
  
#line 3712 
  int max_frame = new_mtu + 18;
  
#line 3713 
  int max_possible_frame = 1522;
  
#line 3715 
  switch (adapter->hw.api_version) {
    case 2: 
#line 3716 
    ;
    case 3: 
#line 3717 
    ;
    
#line 3718 
    max_possible_frame = 9728;
    
#line 3719 
    goto ldv_55696;
    default: 
#line 3720 
    ;
    
#line 3721 
    if (adapter->hw.mac.type != (unsigned int)ixgbe_mac_82599_vf) 
#line 3722 
                                                                  max_possible_frame = 9728; else ;
    
#line 3723 
    goto ldv_55696;
  }
  ldv_55696: 
#line 3727 
  ;
  
#line 3727 
  if (new_mtu <= 67 || max_frame > max_possible_frame) {
    
#line 3728 
    __retres = -22;
    
#line 3728 
    goto return_label;
  }
  else ;
  
#line 3733 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 3736 
  ixgbevf_rlpml_set_vf(hw,(unsigned short)((int)((unsigned short)max_frame)));
  
#line 3738 
  __retres = 0;
  return_label: 
#line 3738 
                return __retres;
}


#line 3746  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_netpoll(struct net_device *netdev)
{
  int i;
  int tmp_0;
  
#line 3748 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3752 
  tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 3752 
  if (tmp_0 != 0) 
#line 3753 
                  goto return_label; else ;
  
#line 3754 
  i = 0;
  
#line 3754 
  goto ldv_55704;
  ldv_55703: 
#line 3755 
  ;
  
#line 3755 
  ixgbevf_msix_clean_rings(0,(void *)adapter->q_vector[i]);
  
#line 3754 
  i += 1;
  ldv_55704: 
#line 3755 
  ;
  
#line 3754 
  if (adapter->num_rx_queues > i) 
#line 3756 
                                  goto ldv_55703; else 
#line 3759 
                                                       goto ldv_55705;
  ldv_55705: 
#line 3760 
  ;
  return_label: 
#line 3761 
                return;
}


#line 3759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_suspend(struct pci_dev *pdev, pm_message_t state)
{
  int __retres;
  bool tmp_1;
  int tmp_2;
  
#line 3761 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3762 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3764 
  int retval = 0;
  
#line 3767 
  netif_device_detach(netdev);
  
#line 3769 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 3769 
  if ((int)tmp_1 != 0) {
    
#line 3770 
    rtnl_lock();
    
#line 3771 
    ixgbevf_down(adapter);
    
#line 3772 
    ixgbevf_free_irq(adapter);
    
#line 3773 
    ixgbevf_free_all_tx_resources(adapter);
    
#line 3774 
    ixgbevf_free_all_rx_resources(adapter);
    
#line 3775 
    rtnl_unlock();
  }
  else ;
  
#line 3778 
  ixgbevf_clear_interrupt_scheme(adapter);
  
#line 3781 
  retval = pci_save_state(pdev);
  
#line 3782 
  if (retval != 0) {
    
#line 3783 
    __retres = retval;
    
#line 3783 
    goto return_label;
  }
  else ;
  
#line 3786 
  tmp_2 = test_and_set_bit(3L,(unsigned long volatile *)(& adapter->state));
  
#line 3786 
  if (tmp_2 == 0) 
#line 3787 
                  pci_disable_device(pdev); else ;
  
#line 3789 
  __retres = 0;
  return_label: 
#line 3789 
                return __retres;
}


#line 3793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_resume(struct pci_dev *pdev)
{
  int __retres;
  u32 err;
  int tmp_1;
  int tmp_2;
  bool tmp_4;
  
#line 3795 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3796 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3799 
  pci_restore_state(pdev);
  
#line 3803 
  pci_save_state(pdev);
  
#line 3805 
  tmp_1 = pci_enable_device_mem(pdev);
  
#line 3805 
  err = (unsigned int)tmp_1;
  
#line 3806 
  if (err != 0U) {
    
#line 3807 
    dev_err((struct device const *)(& pdev->dev),"Cannot enable PCI device from suspend\n");
    
#line 3808 
    __retres = (int)err;
    
#line 3808 
    goto return_label;
  }
  else ;
  
#line 3810 
  ldv_inline_asm();
  
#line 3811 
  set_bit(3L,(unsigned long volatile *)(& adapter->state));
  
#line 3812 
  pci_set_master(pdev);
  
#line 3814 
  ixgbevf_reset(adapter);
  
#line 3816 
  rtnl_lock();
  
#line 3817 
  tmp_2 = ixgbevf_init_interrupt_scheme(adapter);
  
#line 3817 
  err = (unsigned int)tmp_2;
  
#line 3818 
  rtnl_unlock();
  
#line 3819 
  if (err != 0U) {
    
#line 3820 
    dev_err((struct device const *)(& pdev->dev),"Cannot initialize interrupts\n");
    
#line 3821 
    __retres = (int)err;
    
#line 3821 
    goto return_label;
  }
  else ;
  
#line 3824 
  tmp_4 = netif_running((struct net_device const *)netdev);
  
#line 3824 
  if ((int)tmp_4 != 0) {
    int tmp_3;
    
#line 3825 
    tmp_3 = ixgbevf_open(netdev);
    
#line 3825 
    err = (unsigned int)tmp_3;
    
#line 3826 
    if (err != 0U) {
      
#line 3827 
      __retres = (int)err;
      
#line 3827 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3830 
  netif_device_attach(netdev);
  
#line 3832 
  __retres = (int)err;
  return_label: 
#line 3832 
                return __retres;
}


#line 3836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_shutdown(struct pci_dev *pdev)
{
  
#line 3838 
  struct pm_message __constr_expr_37 = {.event = 2};
  
#line 3838 
  ;
  
#line 3838 
  ixgbevf_suspend(pdev,__constr_expr_37);
  
#line 3839 
  return;
}


#line 3841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static struct rtnl_link_stats64 *ixgbevf_get_stats(struct net_device *netdev, struct rtnl_link_stats64 *stats)
{
  unsigned int start;
  u64 bytes;
  u64 packets;
  struct ixgbevf_ring const *ring;
  int i;
  bool tmp_0;
  bool tmp_1;
  
#line 3844 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3850 
  ixgbevf_update_stats(adapter);
  
#line 3852 
  stats->multicast = adapter->stats.vfmprc - adapter->stats.base_vfmprc;
  
#line 3854 
  i = 0;
  
#line 3854 
  goto ldv_55736;
  ldv_55735: 
#line 3855 
  ;
  
#line 3855 
  ring = (struct ixgbevf_ring const *)adapter->rx_ring[i];
  ldv_55733: 
#line 3856 
  ;
  
#line 3857 
  start = u64_stats_fetch_begin_irq(& ring->syncp);
  
#line 3858 
  bytes = ring->stats.bytes;
  
#line 3859 
  packets = ring->stats.packets;
  
#line 3860 
  tmp_0 = u64_stats_fetch_retry_irq(& ring->syncp,start);
  
#line 3860 
  if ((int)tmp_0 != 0) 
#line 3862 
                       goto ldv_55733; else 
#line 3865 
                                            goto ldv_55734;
  ldv_55734: 
#line 3866 
  ;
  
#line 3861 
  stats->rx_bytes += bytes;
  
#line 3862 
  stats->rx_packets += packets;
  
#line 3854 
  i += 1;
  ldv_55736: 
#line 3855 
  ;
  
#line 3854 
  if (adapter->num_rx_queues > i) 
#line 3856 
                                  goto ldv_55735; else 
#line 3859 
                                                       goto ldv_55737;
  ldv_55737: 
#line 3860 
  ;
  
#line 3865 
  i = 0;
  
#line 3865 
  goto ldv_55741;
  ldv_55740: 
#line 3866 
  ;
  
#line 3866 
  ring = (struct ixgbevf_ring const *)adapter->tx_ring[i];
  ldv_55738: 
#line 3867 
  ;
  
#line 3868 
  start = u64_stats_fetch_begin_irq(& ring->syncp);
  
#line 3869 
  bytes = ring->stats.bytes;
  
#line 3870 
  packets = ring->stats.packets;
  
#line 3871 
  tmp_1 = u64_stats_fetch_retry_irq(& ring->syncp,start);
  
#line 3871 
  if ((int)tmp_1 != 0) 
#line 3873 
                       goto ldv_55738; else 
#line 3876 
                                            goto ldv_55739;
  ldv_55739: 
#line 3877 
  ;
  
#line 3872 
  stats->tx_bytes += bytes;
  
#line 3873 
  stats->tx_packets += packets;
  
#line 3865 
  i += 1;
  ldv_55741: 
#line 3866 
  ;
  
#line 3865 
  if (adapter->num_tx_queues > i) 
#line 3867 
                                  goto ldv_55740; else 
#line 3870 
                                                       goto ldv_55742;
  ldv_55742: 
#line 3871 
  ;
  
#line 3876 
  return stats;
}


#line 3879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static struct net_device_ops const ixgbevf_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & ixgbevf_open, .ndo_stop = & ixgbevf_close, .ndo_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *))(& ixgbevf_xmit_frame), .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & ixgbevf_set_rx_mode, .ndo_set_mac_address = & ixgbevf_set_mac, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & ixgbevf_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & ixgbevf_tx_timeout, .ndo_get_stats64 = & ixgbevf_get_stats, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = & ixgbevf_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & ixgbevf_vlan_rx_kill_vid, .ndo_poll_controller = & ixgbevf_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = & ixgbevf_busy_poll_recv, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 3899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_assign_netdev_ops(struct net_device *dev)
{
  
#line 3901 
  dev->netdev_ops = & ixgbevf_netdev_ops;
  
#line 3902 
  ixgbevf_set_ethtool_ops(dev);
  
#line 3903 
  dev->watchdog_timeo = 1250;
  
#line 3904 
  return;
}


#line 3917  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct net_device *netdev;
  int err;
  int pci_using_dac;
  int tmp;
  u32 tmp_1;
  void *tmp_3;
  resource_size_t tmp_2;
  int tmp_5;
  bool tmp_4;
  int tmp_6;
  
#line 3920 
  struct ixgbevf_adapter *adapter = (struct ixgbevf_adapter *)0;
  
#line 3921 
  struct ixgbe_hw *hw = (struct ixgbe_hw *)0;
  
#line 3922 
  struct ixgbevf_info const *ii = ixgbevf_info_tbl[ent->driver_data];
  
#line 3924 
  bool disable_dev = (_Bool)0;
  
#line 3926 
  err = pci_enable_device(pdev);
  
#line 3927 
  if (err != 0) {
    
#line 3928 
    __retres = err;
    
#line 3928 
    goto return_label;
  }
  else ;
  
#line 3930 
  tmp = dma_set_mask_and_coherent(& pdev->dev,18446744073709551615ULL);
  
#line 3930 
  if (tmp == 0) 
#line 3931 
                pci_using_dac = 1;
  else {
    
#line 3933 
    err = dma_set_mask_and_coherent(& pdev->dev,4294967295ULL);
    
#line 3934 
    if (err != 0) {
      
#line 3935 
      dev_err((struct device const *)(& pdev->dev),"No usable DMA configuration, aborting\n");
      
#line 3936 
      goto err_dma;
    }
    else ;
    
#line 3938 
    pci_using_dac = 0;
  }
  
#line 3941 
  err = pci_request_regions(pdev,(char const *)(& ixgbevf_driver_name));
  
#line 3942 
  if (err != 0) {
    
#line 3943 
    dev_err((struct device const *)(& pdev->dev),"pci_request_regions failed 0x%x\n",err);
    
#line 3944 
    goto err_pci_reg;
  }
  else ;
  
#line 3947 
  pci_set_master(pdev);
  
#line 3949 
  netdev = ldv_alloc_etherdev_mqs_110(1616,8U,8U);
  
#line 3951 
  if (netdev == (struct net_device *)0) {
    
#line 3952 
    err = -12;
    
#line 3953 
    goto err_alloc_etherdev;
  }
  else ;
  
#line 3956 
  netdev->dev.parent = & pdev->dev;
  
#line 3958 
  adapter = (struct ixgbevf_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 3960 
  adapter->netdev = netdev;
  
#line 3961 
  adapter->pdev = pdev;
  
#line 3962 
  hw = & adapter->hw;
  
#line 3963 
  hw->back = (void *)adapter;
  
#line 3964 
  tmp_1 = netif_msg_init(debug,7);
  
#line 3964 
  adapter->msg_enable = (unsigned short)tmp_1;
  
#line 3969 
  pci_save_state(pdev);
  
#line 3972 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 3972 
    tmp_2 = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 3972 
                                                                    tmp_2 = 0ULL;
  
#line 3971 
  ;
  
#line 3971 
  tmp_3 = ioremap(pdev->resource[0].start,(unsigned long)tmp_2);
  
#line 3971 
  hw->hw_addr = (u8 *)tmp_3;
  
#line 3973 
  adapter->io_addr = hw->hw_addr;
  
#line 3974 
  if (hw->hw_addr == (u8 *)0U) {
    
#line 3975 
    err = -5;
    
#line 3976 
    goto err_ioremap;
  }
  else ;
  
#line 3979 
  ixgbevf_assign_netdev_ops(netdev);
  
#line 3982 
  memcpy((void *)(& hw->mac.ops),(void const *)ii->mac_ops,152UL);
  
#line 3983 
  hw->mac.type = ii->mac;
  
#line 3985 
  memcpy((void *)(& hw->mbx.ops),(void const *)(& ixgbevf_mbx_ops),64UL);
  
#line 3989 
  err = ixgbevf_sw_init(adapter);
  
#line 3990 
  if (err != 0) 
#line 3991 
                goto err_sw_init; else ;
  
#line 3994 
  tmp_4 = is_valid_ether_addr((u8 const *)netdev->dev_addr);
  
#line 3994 
  if (tmp_4) 
#line 3994 
             tmp_5 = 0; else 
#line 3994 
                             tmp_5 = 1;
  
#line 3994 
  if (tmp_5) {
    
#line 3995 
    printk("\001");
    
#line 3996 
    err = -5;
    
#line 3997 
    goto err_sw_init;
  }
  else ;
  
#line 4000 
  netdev->hw_features = 17180983315ULL;
  
#line 4007 
  netdev->features = netdev->hw_features | 896ULL;
  
#line 4012 
  netdev->vlan_features |= 1114131ULL;
  
#line 4018 
  if (pci_using_dac != 0) 
#line 4019 
                          netdev->features |= 32ULL; else ;
  
#line 4021 
  netdev->priv_flags |= 131072U;
  
#line 4023 
  if ((long)(hw->hw_addr == (u8 *)0U) != 0L) {
    
#line 4024 
    err = -5;
    
#line 4025 
    goto err_sw_init;
  }
  else ;
  {
    struct lock_class_key __key;
    
#line 4028 
    init_timer_key(& adapter->service_timer,0U,"((&adapter->service_timer))",& __key);
  }
  
#line 4028 
  adapter->service_timer.function = & ixgbevf_service_timer;
  
#line 4028 
  adapter->service_timer.data = (unsigned long)adapter;
  {
    struct lock_class_key __key_0;
    
#line 4031 
    __init_work(& adapter->service_task,0);
    
#line 4031 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 4031 
    adapter->service_task.data = __constr_expr_38;
    
#line 4031 
    lockdep_init_map(& adapter->service_task.lockdep_map,"(&adapter->service_task)",& __key_0,0);
    
#line 4031 
    INIT_LIST_HEAD(& adapter->service_task.entry);
    
#line 4031 
    adapter->service_task.func = & ixgbevf_service_task;
  }
  
#line 4032 
  set_bit(6L,(unsigned long volatile *)(& adapter->state));
  
#line 4033 
  set_bit(5L,(unsigned long volatile *)(& adapter->state));
  
#line 4035 
  err = ixgbevf_init_interrupt_scheme(adapter);
  
#line 4036 
  if (err != 0) 
#line 4037 
                goto err_sw_init; else ;
  
#line 4039 
  strcpy((char *)(& netdev->name),"eth%d");
  
#line 4041 
  err = ldv_register_netdev_111(netdev);
  
#line 4042 
  if (err != 0) 
#line 4043 
                goto err_register; else ;
  
#line 4045 
  pci_set_drvdata(pdev,(void *)netdev);
  
#line 4046 
  netif_carrier_off(netdev);
  
#line 4048 
  ixgbevf_init_last_counter_stats(adapter);
  
#line 4051 
  _dev_info((struct device const *)(& pdev->dev),"%pM\n",netdev->dev_addr);
  
#line 4052 
  _dev_info((struct device const *)(& pdev->dev),"MAC: %d\n",(unsigned int)hw->mac.type);
  
#line 4054 
  switch ((unsigned int)hw->mac.type) {
    case (unsigned int)3: 
#line 4055 
    ;
    
#line 4056 
    _dev_info((struct device const *)(& pdev->dev),"Intel(R) X550 Virtual Function\n");
    
#line 4057 
    goto ldv_55768;
    case (unsigned int)2: 
#line 4058 
    ;
    
#line 4059 
    _dev_info((struct device const *)(& pdev->dev),"Intel(R) X540 Virtual Function\n");
    
#line 4060 
    goto ldv_55768;
    case (unsigned int)1: 
#line 4061 
    ;
    default: 
#line 4062 
    ;
    
#line 4063 
    _dev_info((struct device const *)(& pdev->dev),"Intel(R) 82599 Virtual Function\n");
    
#line 4064 
    goto ldv_55768;
  }
  ldv_55768: 
#line 4067 
  ;
  
#line 4067 
  __retres = 0;
  
#line 4067 
  goto return_label;
  err_register: 
#line 4069 
  ;
  
#line 4070 
  ixgbevf_clear_interrupt_scheme(adapter);
  err_sw_init: 
#line 4071 
  ;
  
#line 4072 
  ixgbevf_reset_interrupt_capability(adapter);
  
#line 4073 
  iounmap((void volatile *)adapter->io_addr);
  err_ioremap: 
#line 4074 
  ;
  
#line 4075 
  tmp_6 = test_and_set_bit(3L,(unsigned long volatile *)(& adapter->state));
  
#line 4075 
  disable_dev = (_Bool)(tmp_6 == 0);
  
#line 4076 
  ldv_free_netdev_112(netdev);
  err_alloc_etherdev: 
#line 4077 
  ;
  
#line 4078 
  pci_release_regions(pdev);
  err_pci_reg: 
#line 4079 
  ;
  err_dma: 
#line 4080 
  ;
  
#line 4081 
  if (adapter == (struct ixgbevf_adapter *)0 || (int)disable_dev != 0) 
    
#line 4082 
    pci_disable_device(pdev); else ;
  
#line 4083 
  __retres = err;
  return_label: 
#line 4083 
                return __retres;
}


#line 4095  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_remove(struct pci_dev *pdev)
{
  struct ixgbevf_adapter *adapter;
  bool disable_dev;
  int tmp_1;
  
#line 4097 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 4101 
  if (netdev == (struct net_device *)0) 
#line 4102 
                                        goto return_label; else ;
  
#line 4104 
  adapter = (struct ixgbevf_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 4106 
  set_bit(4L,(unsigned long volatile *)(& adapter->state));
  
#line 4107 
  cancel_work_sync(& adapter->service_task);
  
#line 4109 
  if ((unsigned int)netdev->reg_state == 1U) 
#line 4110 
                                             ldv_unregister_netdev_113(netdev); else ;
  
#line 4112 
  ixgbevf_clear_interrupt_scheme(adapter);
  
#line 4113 
  ixgbevf_reset_interrupt_capability(adapter);
  
#line 4115 
  iounmap((void volatile *)adapter->io_addr);
  
#line 4116 
  pci_release_regions(pdev);
  
#line 4120 
  tmp_1 = test_and_set_bit(3L,(unsigned long volatile *)(& adapter->state));
  
#line 4120 
  disable_dev = (_Bool)(tmp_1 == 0);
  
#line 4121 
  ldv_free_netdev_114(netdev);
  
#line 4123 
  if ((int)disable_dev != 0) 
#line 4124 
                             pci_disable_device(pdev); else ;
  return_label: 
#line 4125 
                return;
}


#line 4135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static pci_ers_result_t ixgbevf_io_error_detected(struct pci_dev *pdev, pci_channel_state_t state)
{
  pci_ers_result_t __retres;
  int tmp_1;
  bool tmp_2;
  int tmp_3;
  
#line 4138 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 4139 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 4141 
  tmp_1 = constant_test_bit(6L,(unsigned long const volatile *)(& adapter->state));
  
#line 4141 
  if (tmp_1 == 0) {
    
#line 4142 
    __retres = 4U;
    
#line 4142 
    goto return_label;
  }
  else ;
  
#line 4144 
  rtnl_lock();
  
#line 4145 
  netif_device_detach(netdev);
  
#line 4147 
  if (state == 3U) {
    
#line 4148 
    rtnl_unlock();
    
#line 4149 
    __retres = 4U;
    
#line 4149 
    goto return_label;
  }
  else ;
  
#line 4152 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 4152 
  if ((int)tmp_2 != 0) 
#line 4153 
                       ixgbevf_down(adapter); else ;
  
#line 4155 
  tmp_3 = test_and_set_bit(3L,(unsigned long volatile *)(& adapter->state));
  
#line 4155 
  if (tmp_3 == 0) 
#line 4156 
                  pci_disable_device(pdev); else ;
  
#line 4157 
  rtnl_unlock();
  
#line 4160 
  __retres = 3U;
  return_label: 
#line 4160 
                return __retres;
}


#line 4170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static pci_ers_result_t ixgbevf_io_slot_reset(struct pci_dev *pdev)
{
  pci_ers_result_t __retres;
  int tmp_1;
  
#line 4172 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 4173 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 4175 
  tmp_1 = pci_enable_device_mem(pdev);
  
#line 4175 
  if (tmp_1 != 0) {
    
#line 4176 
    dev_err((struct device const *)(& pdev->dev),"Cannot re-enable PCI device after reset.\n");
    
#line 4178 
    __retres = 4U;
    
#line 4178 
    goto return_label;
  }
  else ;
  
#line 4180 
  ldv_inline_asm();
  
#line 4182 
  set_bit(3L,(unsigned long volatile *)(& adapter->state));
  
#line 4183 
  pci_set_master(pdev);
  
#line 4185 
  ixgbevf_reset(adapter);
  
#line 4187 
  __retres = 5U;
  return_label: 
#line 4187 
                return __retres;
}


#line 4198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_io_resume(struct pci_dev *pdev)
{
  bool tmp_1;
  
#line 4200 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 4201 
  struct ixgbevf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 4203 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 4203 
  if ((int)tmp_1 != 0) 
#line 4204 
                       ixgbevf_up(adapter); else ;
  
#line 4206 
  netif_device_attach(netdev);
  
#line 4207 
  return;
}


#line 4210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static struct pci_error_handlers const ixgbevf_err_handler = {.error_detected = (pci_ers_result_t (*)(struct pci_dev *, enum pci_channel_state ))(& ixgbevf_io_error_detected), .mmio_enabled = (pci_ers_result_t (*)(struct pci_dev *))0, .link_reset = (pci_ers_result_t (*)(struct pci_dev *))0, .slot_reset = & ixgbevf_io_slot_reset, .reset_notify = (void (*)(struct pci_dev *, bool ))0, .resume = & ixgbevf_io_resume};

#line 4216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static struct pci_driver ixgbevf_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = (char const *)(& ixgbevf_driver_name), .id_table = (struct pci_device_id const *)(& ixgbevf_pci_tbl), .probe = & ixgbevf_probe, .remove = & ixgbevf_remove, .suspend = & ixgbevf_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & ixgbevf_resume, .shutdown = & ixgbevf_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = & ixgbevf_err_handler, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 4236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static int ixgbevf_init_module(void)
{
  int ret;
  
#line 4240 
  printk("\001",(char const *)(& ixgbevf_driver_string),(char const *)(& ixgbevf_driver_version));
  
#line 4243 
  printk("\001",(char *)(& ixgbevf_copyright));
  
#line 4245 
  ret = ldv___pci_register_driver_115(& ixgbevf_driver,& __this_module,"ixgbevf");
  
#line 4246 
  return ret;
}


#line 4257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c"
static void ixgbevf_exit_module(void)
{
  
#line 4259 
  ldv_pci_unregister_driver_116(& ixgbevf_driver);
  
#line 4260 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
struct pci_driver *ldv_emg_alias_ixgbevf_driver_2 = & ixgbevf_driver;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int (*ldv_emg_alias_eth_validate_addr_6)(struct net_device *) = & eth_validate_addr;

#line 60 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 61 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 62 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 63 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 64 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 65 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 66 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 67 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 68 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 69 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 70 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
enum irqreturn ldv_emg_wrapper_ixgbevf_msix_clean_rings_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 75 
  tmp = ixgbevf_msix_clean_rings(arg0,arg1);
  
#line 75 
  return tmp;
}


#line 79  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_probe_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 80 
  tmp = ixgbevf_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 80 
  return tmp;
}


#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
struct rtnl_link_stats64 *ldv_emg_wrapper_ixgbevf_get_stats_5(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  struct rtnl_link_stats64 *tmp;
  
#line 85 
  tmp = ixgbevf_get_stats(arg0,arg1);
  
#line 85 
  return tmp;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
void ldv_emg_wrapper_ixgbevf_netpoll_31(struct net_device *arg0)
{
  
#line 90 
  ixgbevf_netpoll(arg0);
  
#line 91 
  return;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
void ldv_emg_ixgbevf_exit_module(void)
{
  
#line 95 
  ixgbevf_exit_module();
  
#line 96 
  return;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_vlan_rx_add_vid_20(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 99 
  tmp = ixgbevf_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 104 
  tmp = ixgbevf_close(arg0);
  
#line 104 
  return tmp;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
void ldv_emg_wrapper_ixgbevf_remove_5(struct pci_dev *arg0)
{
  
#line 109 
  ixgbevf_remove(arg0);
  
#line 110 
  return;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_ixgbevf_init_module(void)
{
  int tmp;
  
#line 114 
  tmp = ixgbevf_init_module();
  
#line 114 
  return tmp;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_xmit_frame_15(struct sk_buff *arg0, struct net_device *arg1)
{
  int tmp;
  
#line 118 
  tmp = ixgbevf_xmit_frame(arg0,arg1);
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_resume_6(struct pci_dev *arg0)
{
  int tmp;
  
#line 123 
  tmp = ixgbevf_resume(arg0);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_vlan_rx_kill_vid_12(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 128 
  tmp = ixgbevf_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 128 
  return tmp;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_suspend_4(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 133 
  tmp = ixgbevf_suspend(arg0,arg1);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
void ldv_emg_wrapper_ixgbevf_tx_timeout_18(struct net_device *arg0)
{
  
#line 138 
  ixgbevf_tx_timeout(arg0);
  
#line 139 
  return;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
enum irqreturn ldv_emg_wrapper_ixgbevf_msix_other_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 143 
  tmp = ixgbevf_msix_other(arg0,arg1);
  
#line 143 
  return tmp;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
void ldv_emg_wrapper_ixgbevf_shutdown_2(struct pci_dev *arg0)
{
  
#line 148 
  ixgbevf_shutdown(arg0);
  
#line 149 
  return;
}


#line 152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_set_mac_16(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 153 
  tmp = ixgbevf_set_mac(arg0,arg1);
  
#line 153 
  return tmp;
}


#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 158 
  tmp = ixgbevf_open(arg0);
  
#line 158 
  return tmp;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_busy_poll_recv_30(struct napi_struct *arg0)
{
  int tmp;
  
#line 163 
  tmp = ixgbevf_busy_poll_recv(arg0);
  
#line 163 
  return tmp;
}


#line 167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
void ldv_emg_wrapper_ixgbevf_set_rx_mode_32(struct net_device *arg0)
{
  
#line 168 
  ixgbevf_set_rx_mode(arg0);
  
#line 169 
  return;
}


#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
int ldv_emg_wrapper_ixgbevf_change_mtu_8(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 173 
  tmp = ixgbevf_change_mtu(arg0,arg1);
  
#line 173 
  return tmp;
}


#line 231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 234 
  ldv_atomic_inc(v);
  
#line 235 
  return;
}


#line 595  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 598 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 598 
  return tmp;
}


#line 602  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 605 
  tmp = ldv_kzalloc(size,flags);
  
#line 605 
  return tmp;
}


#line 715  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 719 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 721 
  spin_lock(lock);
  
#line 722 
  return;
}


#line 758  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 762 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 764 
  spin_unlock(lock);
  
#line 765 
  return;
}


#line 858  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_73(spinlock_t *lock)
{
  
#line 862 
  ldv_spin_model_lock((char *)"lock_of_ixgbevf_q_vector");
  
#line 864 
  spin_lock_bh_0(lock);
  
#line 865 
  return;
}


#line 868  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_74(spinlock_t *lock)
{
  
#line 872 
  ldv_spin_model_unlock((char *)"lock_of_ixgbevf_q_vector");
  
#line 874 
  spin_unlock_bh_0(lock);
  
#line 875 
  return;
}


#line 878  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_75(spinlock_t *lock)
{
  
#line 882 
  ldv_spin_model_lock((char *)"lock_of_ixgbevf_q_vector");
  
#line 884 
  spin_lock_bh_0(lock);
  
#line 885 
  return;
}


#line 888  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_76(spinlock_t *lock)
{
  
#line 892 
  ldv_spin_model_unlock((char *)"lock_of_ixgbevf_q_vector");
  
#line 894 
  spin_unlock_bh_0(lock);
  
#line 895 
  return;
}


#line 898  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_77(spinlock_t *lock)
{
  
#line 902 
  ldv_spin_model_lock((char *)"lock_of_ixgbevf_q_vector");
  
#line 904 
  spin_lock_bh_0(lock);
  
#line 905 
  return;
}


#line 908  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_78(spinlock_t *lock)
{
  
#line 912 
  ldv_spin_model_unlock((char *)"lock_of_ixgbevf_q_vector");
  
#line 914 
  spin_unlock_bh_0(lock);
  
#line 915 
  return;
}


#line 918  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_79(spinlock_t *lock)
{
  
#line 922 
  ldv_spin_model_lock((char *)"lock_of_ixgbevf_q_vector");
  
#line 924 
  spin_lock_bh_0(lock);
  
#line 925 
  return;
}


#line 928  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_80(spinlock_t *lock)
{
  
#line 932 
  ldv_spin_model_unlock((char *)"lock_of_ixgbevf_q_vector");
  
#line 934 
  spin_unlock_bh_0(lock);
  
#line 935 
  return;
}


#line 938  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_81(spinlock_t *lock)
{
  
#line 942 
  ldv_spin_model_lock((char *)"lock_of_ixgbevf_q_vector");
  
#line 944 
  spin_lock_bh_0(lock);
  
#line 945 
  return;
}


#line 948  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_82(spinlock_t *lock)
{
  
#line 952 
  ldv_spin_model_unlock((char *)"lock_of_ixgbevf_q_vector");
  
#line 954 
  spin_unlock_bh_0(lock);
  
#line 955 
  return;
}


#line 958  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static bool ldv_schedule_work_83(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 962 
  tmp = ldv_emg_schedule_work(work);
  
#line 962 
  __retres = tmp != 0;
  
#line 962 
  return __retres;
}


#line 966  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static int ldv_request_irq_84(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 970 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 970 
  return tmp;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static int ldv_request_irq_85(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 978 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 978 
  return tmp;
}


#line 982  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_free_irq_86(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 986 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 987 
  return;
}


#line 990  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_free_irq_87(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 994 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 995 
  return;
}


#line 998  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_free_irq_88(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1002 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1003 
  return;
}


#line 1006  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_89(spinlock_t *lock)
{
  
#line 1010 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1012 
  spin_lock_bh_0(lock);
  
#line 1013 
  return;
}


#line 1016  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_90(spinlock_t *lock)
{
  
#line 1020 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1022 
  spin_unlock_bh_0(lock);
  
#line 1023 
  return;
}


#line 1026  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_91(spinlock_t *lock)
{
  
#line 1030 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1032 
  spin_lock_bh_0(lock);
  
#line 1033 
  return;
}


#line 1036  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_92(spinlock_t *lock)
{
  
#line 1040 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1042 
  spin_unlock_bh_0(lock);
  
#line 1043 
  return;
}


#line 1046  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_93(spinlock_t *lock)
{
  
#line 1050 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1052 
  spin_lock_bh_0(lock);
  
#line 1053 
  return;
}


#line 1056  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_94(spinlock_t *lock)
{
  
#line 1060 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1062 
  spin_unlock_bh_0(lock);
  
#line 1063 
  return;
}


#line 1066  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_95(spinlock_t *lock)
{
  
#line 1070 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1072 
  spin_lock_bh_0(lock);
  
#line 1073 
  return;
}


#line 1076  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_96(spinlock_t *lock)
{
  
#line 1080 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1082 
  spin_unlock_bh_0(lock);
  
#line 1083 
  return;
}


#line 1086  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_97(spinlock_t *lock)
{
  
#line 1090 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1092 
  spin_lock_bh_0(lock);
  
#line 1093 
  return;
}


#line 1096  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_98(spinlock_t *lock)
{
  
#line 1100 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1102 
  spin_unlock_bh_0(lock);
  
#line 1103 
  return;
}


#line 1106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_99(spinlock_t *lock)
{
  
#line 1110 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1112 
  spin_lock_bh_0(lock);
  
#line 1113 
  return;
}


#line 1116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_100(spinlock_t *lock)
{
  
#line 1120 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1122 
  spin_unlock_bh_0(lock);
  
#line 1123 
  return;
}


#line 1126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static int ldv_mod_timer_101(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1130 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1130 
  return tmp;
}


#line 1134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static int ldv_del_timer_sync_102(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1138 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1138 
  return tmp;
}


#line 1142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_103(spinlock_t *lock)
{
  
#line 1146 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1148 
  spin_lock_bh_0(lock);
  
#line 1149 
  return;
}


#line 1152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_104(spinlock_t *lock)
{
  
#line 1156 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1158 
  spin_unlock_bh_0(lock);
  
#line 1159 
  return;
}


#line 1162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static int ldv_mod_timer_105(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1166 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1166 
  return tmp;
}


#line 1170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_106(spinlock_t *lock)
{
  
#line 1174 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1176 
  spin_lock_bh_0(lock);
  
#line 1177 
  return;
}


#line 1180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_107(spinlock_t *lock)
{
  
#line 1184 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1186 
  spin_unlock_bh_0(lock);
  
#line 1187 
  return;
}


#line 1190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_lock_bh_108(spinlock_t *lock)
{
  
#line 1194 
  ldv_spin_model_lock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1196 
  spin_lock_bh_0(lock);
  
#line 1197 
  return;
}


#line 1200  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_spin_unlock_bh_109(spinlock_t *lock)
{
  
#line 1204 
  ldv_spin_model_unlock((char *)"mbx_lock_of_ixgbevf_adapter");
  
#line 1206 
  spin_unlock_bh_0(lock);
  
#line 1207 
  return;
}


#line 1210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_110(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1214 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1214 
  return tmp;
}


#line 1218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static int ldv_register_netdev_111(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1222 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1222 
  return tmp;
}


#line 1226  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_free_netdev_112(struct net_device *ldv_func_arg1)
{
  
#line 1230 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1231 
  return;
}


#line 1234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_unregister_netdev_113(struct net_device *ldv_func_arg1)
{
  
#line 1238 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1239 
  return;
}


#line 1242  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_free_netdev_114(struct net_device *ldv_func_arg1)
{
  
#line 1246 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1247 
  return;
}


#line 1250  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static int ldv___pci_register_driver_115(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1254 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1254 
  return tmp;
}


#line 1258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/weaver/.tmp_ixgbevf_main.c.aux"
static void ldv_pci_unregister_driver_116(struct pci_driver *ldv_func_arg1)
{
  
#line 1262 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1263 
  return;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
static u8 const eth_reserved_addr_base_0[6U] = {(unsigned char)1U, (unsigned char)128U, (unsigned char)194U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_link_local_ether_addr_0(u8 const *addr)
{
  bool __retres;
  
#line 73 
  __be16 *a = (__be16 *)addr;
  
#line 74 
  __be16 const *b = (__be16 const *)(& eth_reserved_addr_base_0);
  
#line 75 
  __be16 const m = (unsigned short)61695U;
  
#line 79 
  __retres = (_Bool)(((*((u32 const *)addr) ^ *((u32 const *)b)) | ((unsigned int)((int)*(a + 2U) ^ (int)*(b + 2U)) & 61695U)) == 0U);
  
#line 79 
  return __retres;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 const *src)
{
  
#line 274 
  *((u32 *)dst) = *((u32 const *)src);
  
#line 275 
  *((u16 *)(dst + 4U)) = *((u16 const *)(src + 4U));
  
#line 276 
  return;
}


#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_start_hw_vf(struct ixgbe_hw *hw)
{
  s32 __retres;
  
#line 42 
  hw->adapter_stopped = (_Bool)0;
  
#line 44 
  __retres = 0;
  
#line 44 
  return __retres;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_init_hw_vf(struct ixgbe_hw *hw)
{
  s32 tmp;
  
#line 56 
  tmp = (*(hw->mac.ops.start_hw))(hw);
  
#line 56 
  s32 status = tmp;
  
#line 58 
  (*(hw->mac.ops.get_mac_addr))(hw,(u8 *)(& hw->mac.addr));
  
#line 60 
  return status;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_reset_hw_vf(struct ixgbe_hw *hw)
{
  s32 __retres;
  u32 msgbuf[4U];
  s32 tmp;
  
#line 72 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 73 
  u32 timeout = 200U;
  
#line 74 
  s32 ret_val = -1;
  
#line 76 
  u8 *addr = (u8 *)(& msgbuf[1]);
  
#line 79 
  (*(hw->mac.ops.stop_adapter))(hw);
  
#line 82 
  hw->api_version = 0;
  
#line 84 
  ixgbe_write_reg(hw,0U,67108864U);
  
#line 85 
  ixgbevf_read_reg(hw,8U);
  
#line 88 
  goto ldv_52812;
  ldv_52811: 
#line 89 
  ;
  
#line 89 
  timeout -= 1U;
  
#line 90 
  __const_udelay(21475UL);
  ldv_52812: 
#line 92 
  ;
  
#line 88 
  tmp = (*(mbx->ops.check_for_rst))(hw);
  
#line 88 
  if (tmp == 0) {
    
#line 88 
    if (timeout != 0U) 
#line 90 
                       goto ldv_52811; else 
#line 93 
                                            goto ldv_52813;
  }
  else 
#line 93 
       goto ldv_52813;
  ldv_52813: 
#line 94 
  ;
  
#line 93 
  if (timeout == 0U) {
    
#line 94 
    __retres = -2;
    
#line 94 
    goto return_label;
  }
  else ;
  
#line 97 
  mbx->timeout = 2000U;
  
#line 99 
  msgbuf[0] = 1U;
  
#line 100 
  (*(mbx->ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)1);
  {
    
#line 102 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_0;
      
#line 102 
      goto ldv_52816;
      ldv_52815: 
#line 103 
      ;
      
#line 102 
      __const_udelay(4295000UL);
      ldv_52816: 
#line 104 
      ;
      
#line 102 
      tmp_0 = __ms;
      
#line 102 
      __ms -= 1UL;
      
#line 102 
      ;
      
#line 102 
      if (tmp_0 != 0UL) 
#line 104 
                        goto ldv_52815; else 
#line 107 
                                             goto ldv_52817;
      ldv_52817: 
#line 108 
      ;
    }
  }
  
#line 108 
  ret_val = (*(mbx->ops.read_posted))(hw,(u32 *)(& msgbuf),(unsigned short)4);
  
#line 109 
  if (ret_val != 0) {
    
#line 110 
    __retres = ret_val;
    
#line 110 
    goto return_label;
  }
  else ;
  
#line 116 
  if (msgbuf[0] != 2147483649U && msgbuf[0] != 1073741825U) {
    
#line 118 
    __retres = -1;
    
#line 118 
    goto return_label;
  }
  else ;
  
#line 120 
  ether_addr_copy((u8 *)(& hw->mac.perm_addr),(u8 const *)addr);
  
#line 121 
  hw->mac.mc_filter_type = (int)msgbuf[3];
  
#line 123 
  __retres = 0;
  return_label: 
#line 123 
                return __retres;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_stop_hw_vf(struct ixgbe_hw *hw)
{
  s32 __retres;
  u32 number_of_queues;
  u32 reg_val;
  u16 i;
  
#line 144 
  hw->adapter_stopped = (_Bool)1;
  
#line 147 
  number_of_queues = hw->mac.max_rx_queues;
  
#line 148 
  i = (unsigned short)0U;
  
#line 148 
  goto ldv_52825;
  ldv_52824: 
#line 149 
  ;
  
#line 149 
  reg_val = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 4136));
  
#line 150 
  if ((reg_val & 33554432U) != 0U) {
    
#line 151 
    reg_val &= 4261412863U;
    
#line 152 
    ixgbe_write_reg(hw,(unsigned int)((int)i * 64 + 4136),reg_val);
  }
  else ;
  
#line 148 
  i = (u16)((int)i + 1);
  ldv_52825: 
#line 149 
  ;
  
#line 148 
  if ((unsigned int)i < number_of_queues) 
#line 150 
                                          goto ldv_52824; else 
#line 153 
                                                               goto ldv_52826;
  ldv_52826: 
#line 154 
  ;
  
#line 156 
  ixgbevf_read_reg(hw,8U);
  
#line 159 
  ixgbe_write_reg(hw,268U,7U);
  
#line 162 
  ixgbevf_read_reg(hw,256U);
  
#line 165 
  number_of_queues = hw->mac.max_tx_queues;
  
#line 166 
  i = (unsigned short)0U;
  
#line 166 
  goto ldv_52828;
  ldv_52827: 
#line 167 
  ;
  
#line 167 
  reg_val = ixgbevf_read_reg(hw,(unsigned int)((int)i * 64 + 8232));
  
#line 168 
  if ((reg_val & 33554432U) != 0U) {
    
#line 169 
    reg_val &= 4261412863U;
    
#line 170 
    ixgbe_write_reg(hw,(unsigned int)((int)i * 64 + 8232),reg_val);
  }
  else ;
  
#line 166 
  i = (u16)((int)i + 1);
  ldv_52828: 
#line 167 
  ;
  
#line 166 
  if ((unsigned int)i < number_of_queues) 
#line 168 
                                          goto ldv_52827; else 
#line 171 
                                                               goto ldv_52829;
  ldv_52829: 
#line 172 
  ;
  
#line 174 
  __retres = 0;
  
#line 174 
  return __retres;
}


#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_mta_vector(struct ixgbe_hw *hw, u8 *mc_addr)
{
  s32 __retres;
  
#line 191 
  u32 vector = 0U;
  
#line 193 
  switch (hw->mac.mc_filter_type) {
    case 0: 
#line 194 
    ;
    
#line 195 
    vector = (unsigned int)(((int)*(mc_addr + 4U) >> 4) | ((int)*(mc_addr + 5U) << 4));
    
#line 196 
    goto ldv_52836;
    case 1: 
#line 197 
    ;
    
#line 198 
    vector = (unsigned int)(((int)*(mc_addr + 4U) >> 3) | ((int)*(mc_addr + 5U) << 5));
    
#line 199 
    goto ldv_52836;
    case 2: 
#line 200 
    ;
    
#line 201 
    vector = (unsigned int)(((int)*(mc_addr + 4U) >> 2) | ((int)*(mc_addr + 5U) << 6));
    
#line 202 
    goto ldv_52836;
    case 3: 
#line 203 
    ;
    
#line 204 
    vector = (unsigned int)((int)*(mc_addr + 4U) | ((int)*(mc_addr + 5U) << 8));
    
#line 205 
    goto ldv_52836;
    default: 
#line 206 
    ;
    
#line 207 
    goto ldv_52836;
  }
  ldv_52836: 
#line 211 
  ;
  
#line 211 
  vector &= 4095U;
  
#line 212 
  __retres = (int)vector;
  
#line 212 
  return __retres;
}


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_get_mac_addr_vf(struct ixgbe_hw *hw, u8 *mac_addr)
{
  s32 __retres;
  
#line 222 
  ether_addr_copy(mac_addr,(u8 const *)(& hw->mac.perm_addr));
  
#line 224 
  __retres = 0;
  
#line 224 
  return __retres;
}


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_set_uc_addr_vf(struct ixgbe_hw *hw, u32 index, u8 *addr)
{
  u32 msgbuf[3U];
  s32 ret_val;
  
#line 229 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 231 
  u8 *msg_addr = (u8 *)(& msgbuf[1]);
  
#line 234 
  memset((void *)(& msgbuf),0,12UL);
  
#line 240 
  msgbuf[0] |= index << 16;
  
#line 241 
  msgbuf[0] |= 6U;
  
#line 242 
  if (addr != (u8 *)0U) 
#line 243 
                        ether_addr_copy(msg_addr,(u8 const *)addr); else ;
  
#line 244 
  ret_val = (*(mbx->ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)3);
  
#line 246 
  if (ret_val == 0) 
#line 247 
                    ret_val = (*(mbx->ops.read_posted))(hw,(u32 *)(& msgbuf),(unsigned short)3); else ;
  
#line 249 
  msgbuf[0] &= 3758096383U;
  
#line 251 
  if (ret_val == 0) {
    
#line 252 
    if (msgbuf[0] == 1073741830U) 
#line 254 
                                  ret_val = -12; else ;
  }
  else ;
  
#line 256 
  return ret_val;
}


#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
int ixgbevf_get_reta_locked(struct ixgbe_hw *hw, u32 *reta, int num_rx_queues)
{
  int __retres;
  int err;
  int i;
  int j;
  u32 msgbuf[16U];
  
#line 274 
  u32 *hw_reta = & msgbuf[1];
  
#line 275 
  u32 mask = 0U;
  
#line 282 
  int dwords = 8;
  
#line 288 
  if (hw->api_version != 3 || hw->mac.type > (unsigned int)ixgbe_mac_X540_vf) {
    
#line 290 
    __retres = -95;
    
#line 290 
    goto return_label;
  }
  else ;
  
#line 292 
  msgbuf[0] = 10U;
  
#line 294 
  err = (*(hw->mbx.ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)1);
  
#line 296 
  if (err != 0) {
    
#line 297 
    __retres = err;
    
#line 297 
    goto return_label;
  }
  else ;
  
#line 299 
  err = (*(hw->mbx.ops.read_posted))(hw,(u32 *)(& msgbuf),(unsigned short)((int)((unsigned int)((unsigned short)dwords) + 1U)));
  
#line 301 
  if (err != 0) {
    
#line 302 
    __retres = err;
    
#line 302 
    goto return_label;
  }
  else ;
  
#line 304 
  msgbuf[0] &= 3758096383U;
  
#line 307 
  if (msgbuf[0] == 1073741834U) {
    
#line 308 
    __retres = -1;
    
#line 308 
    goto return_label;
  }
  else ;
  
#line 314 
  if (msgbuf[0] != 2147483658U) {
    
#line 315 
    __retres = -100;
    
#line 315 
    goto return_label;
  }
  else ;
  
#line 318 
  if (num_rx_queues > 1) 
#line 319 
                         mask = 1U; else ;
  
#line 321 
  i = 0;
  
#line 321 
  goto ldv_52870;
  ldv_52869: 
#line 322 
  ;
  
#line 322 
  j = 0;
  
#line 322 
  goto ldv_52867;
  ldv_52866: 
#line 323 
  ;
  
#line 323 
  *(reta + (i * 16 + j)) = (*(hw_reta + i) >> j * 2) & mask;
  
#line 322 
  j += 1;
  ldv_52867: 
#line 323 
  ;
  
#line 322 
  if (j <= 15) 
#line 324 
               goto ldv_52866; else 
#line 327 
                                    goto ldv_52868;
  ldv_52868: 
#line 328 
  ;
  
#line 321 
  i += 1;
  ldv_52870: 
#line 322 
  ;
  
#line 321 
  if (i < dwords) 
#line 323 
                  goto ldv_52869; else 
#line 326 
                                       goto ldv_52871;
  ldv_52871: 
#line 327 
  ;
  
#line 325 
  __retres = 0;
  return_label: 
#line 325 
                return __retres;
}


#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
int ixgbevf_get_rss_key_locked(struct ixgbe_hw *hw, u8 *rss_key)
{
  int __retres;
  int err;
  u32 msgbuf[16U];
  
#line 349 
  if (hw->api_version != 3 || hw->mac.type > (unsigned int)ixgbe_mac_X540_vf) {
    
#line 351 
    __retres = -95;
    
#line 351 
    goto return_label;
  }
  else ;
  
#line 353 
  msgbuf[0] = 11U;
  
#line 354 
  err = (*(hw->mbx.ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)1);
  
#line 356 
  if (err != 0) {
    
#line 357 
    __retres = err;
    
#line 357 
    goto return_label;
  }
  else ;
  
#line 359 
  err = (*(hw->mbx.ops.read_posted))(hw,(u32 *)(& msgbuf),(unsigned short)11);
  
#line 361 
  if (err != 0) {
    
#line 362 
    __retres = err;
    
#line 362 
    goto return_label;
  }
  else ;
  
#line 364 
  msgbuf[0] &= 3758096383U;
  
#line 367 
  if (msgbuf[0] == 1073741834U) {
    
#line 368 
    __retres = -1;
    
#line 368 
    goto return_label;
  }
  else ;
  
#line 374 
  if (msgbuf[0] != 2147483659U) {
    
#line 375 
    __retres = -100;
    
#line 375 
    goto return_label;
  }
  else ;
  
#line 377 
  memcpy((void *)rss_key,(void const *)(& msgbuf) + 1U,40UL);
  
#line 379 
  __retres = 0;
  return_label: 
#line 379 
                return __retres;
}


#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_set_rar_vf(struct ixgbe_hw *hw, u32 index, u8 *addr, u32 vmdq)
{
  u32 msgbuf[3U];
  s32 ret_val;
  
#line 392 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 394 
  u8 *msg_addr = (u8 *)(& msgbuf[1]);
  
#line 397 
  memset((void *)(& msgbuf),0,12UL);
  
#line 398 
  msgbuf[0] = 2U;
  
#line 399 
  ether_addr_copy(msg_addr,(u8 const *)addr);
  
#line 400 
  ret_val = (*(mbx->ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)3);
  
#line 402 
  if (ret_val == 0) 
#line 403 
                    ret_val = (*(mbx->ops.read_posted))(hw,(u32 *)(& msgbuf),(unsigned short)3); else ;
  
#line 405 
  msgbuf[0] &= 3758096383U;
  
#line 408 
  if (ret_val == 0 && msgbuf[0] == 1073741826U) 
#line 410 
                                                ixgbevf_get_mac_addr_vf(hw,(u8 *)(& hw->mac.addr)); else ;
  
#line 412 
  return ret_val;
}


#line 415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static void ixgbevf_write_msg_read_ack(struct ixgbe_hw *hw, u32 *msg, u16 size)
{
  u32 retmsg[16U];
  s32 tmp;
  
#line 418 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 420 
  tmp = (*(mbx->ops.write_posted))(hw,msg,(unsigned short)((int)size));
  
#line 420 
  s32 retval = tmp;
  
#line 422 
  if (retval == 0) 
#line 423 
                   (*(mbx->ops.read_posted))(hw,(u32 *)(& retmsg),(unsigned short)((int)size)); else ;
  
#line 424 
  return;
}


#line 433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_update_mc_addr_list_vf(struct ixgbe_hw *hw, struct net_device *netdev)
{
  s32 __retres;
  struct netdev_hw_addr *ha;
  u32 msgbuf[16U];
  u32 cnt;
  u32 i;
  struct netdev_hw_addr *tmp;
  bool tmp_0;
  u32 tmp_1;
  s32 tmp_2;
  struct netdev_hw_addr *tmp_3;
  
#line 438 
  u16 *vector_list = (u16 *)(& msgbuf[1]);
  
#line 450 
  cnt = (unsigned int)netdev->mc.count;
  
#line 451 
  if (cnt > 30U) 
#line 452 
                 cnt = 30U; else ;
  
#line 453 
  msgbuf[0] = 3U;
  
#line 454 
  msgbuf[0] |= cnt << 16;
  
#line 456 
  i = 0U;
  {
    
#line 457 
    struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
    
#line 457 
    tmp = (struct netdev_hw_addr *)__mptr;
  }
  
#line 457 
  ha = tmp;
  
#line 457 
  goto ldv_52912;
  ldv_52911: 
#line 458 
  ;
  
#line 458 
  if (i == cnt) 
#line 459 
                goto ldv_52909; else ;
  
#line 460 
  tmp_0 = is_link_local_ether_addr_0((u8 const *)(& ha->addr));
  
#line 460 
  if ((int)tmp_0 != 0) 
#line 461 
                       goto ldv_52910; else ;
  
#line 463 
  tmp_1 = i;
  
#line 463 
  i += 1U;
  
#line 463 
  tmp_2 = ixgbevf_mta_vector(hw,(u8 *)(& ha->addr));
  
#line 463 
  *(vector_list + tmp_1) = (unsigned short)tmp_2;
  ldv_52910: 
#line 464 
  ;
  {
    
#line 457 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 457 
    tmp_3 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 457 
  ha = tmp_3;
  ldv_52912: 
#line 459 
  ;
  
#line 457 
  if (& ha->list != & netdev->mc.list) 
#line 459 
                                       goto ldv_52911; else 
#line 462 
                                                            goto ldv_52909;
  ldv_52909: 
#line 463 
  ;
  
#line 466 
  ixgbevf_write_msg_read_ack(hw,(u32 *)(& msgbuf),(unsigned short)16);
  
#line 468 
  __retres = 0;
  
#line 468 
  return __retres;
}


#line 478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_set_vfta_vf(struct ixgbe_hw *hw, u32 vlan, u32 vind, bool vlan_on)
{
  u32 msgbuf[2U];
  s32 err;
  
#line 481 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 485 
  msgbuf[0] = 4U;
  
#line 486 
  msgbuf[1] = vlan;
  
#line 488 
  msgbuf[0] |= (unsigned int)((int)vlan_on << 16);
  
#line 490 
  err = (*(mbx->ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)2);
  
#line 491 
  if (err != 0) 
#line 492 
                goto mbx_err; else ;
  
#line 494 
  err = (*(mbx->ops.read_posted))(hw,(u32 *)(& msgbuf),(unsigned short)2);
  
#line 495 
  if (err != 0) 
#line 496 
                goto mbx_err; else ;
  
#line 499 
  msgbuf[0] &= 3758096383U;
  
#line 500 
  msgbuf[0] &= 4278255615U;
  
#line 502 
  if (msgbuf[0] != 2147483652U) 
#line 503 
                                err = -3; else ;
  mbx_err: 
#line 505 
  ;
  
#line 506 
  return err;
}


#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_setup_mac_link_vf(struct ixgbe_hw *hw, ixgbe_link_speed speed, bool autoneg, bool autoneg_wait_to_complete)
{
  s32 __retres;
  
#line 523 
  __retres = 0;
  
#line 523 
  return __retres;
}


#line 535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static s32 ixgbevf_check_mac_link_vf(struct ixgbe_hw *hw, ixgbe_link_speed *speed, bool *link_up, bool autoneg_wait_to_complete)
{
  u32 links_reg;
  s32 tmp;
  s32 tmp_0;
  
#line 540 
  struct ixgbe_mbx_info *mbx = & hw->mbx;
  
#line 541 
  struct ixgbe_mac_info *mac = & hw->mac;
  
#line 542 
  s32 ret_val = 0;
  
#line 544 
  u32 in_msg = 0U;
  
#line 547 
  tmp = (*(mbx->ops.check_for_rst))(hw);
  
#line 547 
  if (tmp == 0) 
#line 548 
                mac->get_link_status = (_Bool)1;
  else 
    
#line 547 
    if (mbx->timeout == 0U) 
#line 548 
                            mac->get_link_status = (_Bool)1; else ;
  
#line 550 
  if (! mac->get_link_status) 
#line 551 
                              goto out; else ;
  
#line 554 
  links_reg = ixgbevf_read_reg(hw,16U);
  
#line 555 
  if ((links_reg & 1073741824U) == 0U) 
#line 556 
                                       goto out; else ;
  
#line 561 
  if (mac->type == (unsigned int)ixgbe_mac_82599_vf) {
    int i;
    
#line 564 
    i = 0;
    
#line 564 
    goto ldv_52943;
    ldv_52942: 
#line 565 
    ;
    
#line 565 
    __const_udelay(429500UL);
    
#line 566 
    links_reg = ixgbevf_read_reg(hw,16U);
    
#line 568 
    if ((links_reg & 1073741824U) == 0U) 
#line 569 
                                         goto out; else ;
    
#line 564 
    i += 1;
    ldv_52943: 
#line 565 
    ;
    
#line 564 
    if (i <= 4) 
#line 566 
                goto ldv_52942; else 
#line 569 
                                     goto ldv_52944;
    ldv_52944: 
#line 570 
    ;
  }
  else ;
  
#line 573 
  switch (links_reg & 805306368U) {
    case (unsigned int)805306368: 
#line 574 
    ;
    
#line 575 
    *speed = 128U;
    
#line 576 
    goto ldv_52946;
    case (unsigned int)536870912: 
#line 577 
    ;
    
#line 578 
    *speed = 32U;
    
#line 579 
    goto ldv_52946;
    case (unsigned int)268435456: 
#line 580 
    ;
    
#line 581 
    *speed = 8U;
    
#line 582 
    goto ldv_52946;
  }
  ldv_52946: 
#line 588 
  ;
  
#line 588 
  tmp_0 = (*(mbx->ops.read))(hw,& in_msg,(unsigned short)1);
  
#line 588 
  if (tmp_0 != 0) 
#line 589 
                  goto out; else ;
  
#line 591 
  if ((in_msg & 536870912U) == 0U) {
    
#line 593 
    if ((in_msg & 1073741824U) != 0U) 
#line 594 
                                      ret_val = -1; else ;
    
#line 595 
    goto out;
  }
  else ;
  
#line 599 
  if (mbx->timeout == 0U) {
    
#line 600 
    ret_val = -1;
    
#line 601 
    goto out;
  }
  else ;
  
#line 607 
  mac->get_link_status = (_Bool)0;
  out: 
#line 609 
  ;
  
#line 610 
  *link_up = (_Bool)(! ((int)mac->get_link_status != 0));
  
#line 611 
  return ret_val;
}


#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
void ixgbevf_rlpml_set_vf(struct ixgbe_hw *hw, u16 max_size)
{
  u32 msgbuf[2U];
  
#line 623 
  msgbuf[0] = 5U;
  
#line 624 
  msgbuf[1] = (unsigned int)max_size;
  
#line 625 
  ixgbevf_write_msg_read_ack(hw,(u32 *)(& msgbuf),(unsigned short)2);
  
#line 626 
  return;
}


#line 633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
int ixgbevf_negotiate_api_version(struct ixgbe_hw *hw, int api)
{
  int __retres;
  int err;
  u32 msg[3U];
  
#line 639 
  msg[0] = 8U;
  
#line 640 
  msg[1] = (unsigned int)api;
  
#line 641 
  msg[2] = 0U;
  
#line 642 
  err = (*(hw->mbx.ops.write_posted))(hw,(u32 *)(& msg),(unsigned short)3);
  
#line 644 
  if (err == 0) 
#line 645 
                err = (*(hw->mbx.ops.read_posted))(hw,(u32 *)(& msg),(unsigned short)3); else ;
  
#line 647 
  if (err == 0) {
    
#line 648 
    msg[0] &= 3758096383U;
    
#line 651 
    if (msg[0] == 2147483656U) {
      
#line 652 
      hw->api_version = api;
      
#line 653 
      __retres = 0;
      
#line 653 
      goto return_label;
    }
    else ;
    
#line 656 
    err = -3;
  }
  else ;
  
#line 659 
  __retres = err;
  return_label: 
#line 659 
                return __retres;
}


#line 662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
int ixgbevf_get_queues(struct ixgbe_hw *hw, unsigned int *num_tcs, unsigned int *default_tc)
{
  int __retres;
  int err;
  u32 msg[5U];
  
#line 669 
  switch (hw->api_version) {
    case 2: 
#line 670 
    ;
    case 3: 
#line 671 
    ;
    
#line 672 
    goto ldv_52969;
    default: 
#line 673 
    ;
    
#line 674 
    __retres = 0;
    
#line 674 
    goto return_label;
  }
  ldv_52969: 
#line 678 
  ;
  
#line 678 
  msg[0] = 9U;
  
#line 679 
  msg[4] = 0U;
  
#line 679 
  msg[3] = msg[4];
  
#line 679 
  msg[2] = msg[3];
  
#line 679 
  msg[1] = msg[2];
  
#line 680 
  err = (*(hw->mbx.ops.write_posted))(hw,(u32 *)(& msg),(unsigned short)5);
  
#line 682 
  if (err == 0) 
#line 683 
                err = (*(hw->mbx.ops.read_posted))(hw,(u32 *)(& msg),(unsigned short)5); else ;
  
#line 685 
  if (err == 0) {
    
#line 686 
    msg[0] &= 3758096383U;
    
#line 692 
    if (msg[0] != 2147483657U) {
      
#line 693 
      __retres = -100;
      
#line 693 
      goto return_label;
    }
    else ;
    
#line 696 
    hw->mac.max_tx_queues = msg[1];
    
#line 697 
    if (hw->mac.max_tx_queues + 4294967295U > 7U) 
#line 699 
                                                  hw->mac.max_tx_queues = 8U; else ;
    
#line 701 
    hw->mac.max_rx_queues = msg[2];
    
#line 702 
    if (hw->mac.max_rx_queues + 4294967295U > 7U) 
#line 704 
                                                  hw->mac.max_rx_queues = 8U; else ;
    
#line 706 
    *num_tcs = msg[3];
    
#line 708 
    if (*num_tcs > hw->mac.max_rx_queues) 
#line 709 
                                          *num_tcs = 1U; else ;
    
#line 711 
    *default_tc = msg[4];
    
#line 713 
    if (*default_tc >= hw->mac.max_tx_queues) 
#line 714 
                                              *default_tc = 0U; else ;
  }
  else ;
  
#line 717 
  __retres = err;
  return_label: 
#line 717 
                return __retres;
}


#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
static struct ixgbe_mac_operations const ixgbevf_mac_ops = {.init_hw = & ixgbevf_init_hw_vf, .reset_hw = & ixgbevf_reset_hw_vf, .start_hw = & ixgbevf_start_hw_vf, .clear_hw_cntrs = (s32 (*)(struct ixgbe_hw *))0, .get_media_type = (enum ixgbe_media_type (*)(struct ixgbe_hw *))0, .get_mac_addr = & ixgbevf_get_mac_addr_vf, .stop_adapter = & ixgbevf_stop_hw_vf, .get_bus_info = (s32 (*)(struct ixgbe_hw *))0, .setup_link = & ixgbevf_setup_mac_link_vf, .check_link = & ixgbevf_check_mac_link_vf, .get_link_capabilities = (s32 (*)(struct ixgbe_hw *, ixgbe_link_speed *, bool *))0, .set_rar = & ixgbevf_set_rar_vf, .set_uc_addr = & ixgbevf_set_uc_addr_vf, .init_rx_addrs = (s32 (*)(struct ixgbe_hw *))0, .update_mc_addr_list = & ixgbevf_update_mc_addr_list_vf, .enable_mc = (s32 (*)(struct ixgbe_hw *))0, .disable_mc = (s32 (*)(struct ixgbe_hw *))0, .clear_vfta = (s32 (*)(struct ixgbe_hw *))0, .set_vfta = & ixgbevf_set_vfta_vf};

#line 734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
struct ixgbevf_info const ixgbevf_82599_vf_info = {.mac = ixgbe_mac_82599_vf, .mac_ops = & ixgbevf_mac_ops};

#line 739  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
struct ixgbevf_info const ixgbevf_X540_vf_info = {.mac = ixgbe_mac_X540_vf, .mac_ops = & ixgbevf_mac_ops};

#line 744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
struct ixgbevf_info const ixgbevf_X550_vf_info = {.mac = ixgbe_mac_X550_vf, .mac_ops = & ixgbevf_mac_ops};

#line 749  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/ixgbevf/vf.c"
struct ixgbevf_info const ixgbevf_X550EM_x_vf_info = {.mac = ixgbe_mac_X550EM_x_vf, .mac_ops = & ixgbevf_mac_ops};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 93 
int main(void);


#line 94 
void *ldv_timer_scenario_15(void *arg0);


#line 95 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 96 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 98 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 100 
void *ldv_pci_scenario_14(void *arg0);


#line 101 
void *ldv_interrupt_scenario_16(void *arg0);


#line 103 
void *ldv_initialization_1(void *arg0);


#line 105 
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0);


#line 106 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 110 
void *ldv_interrupt_scenario_13(void *arg0);


#line 111 
void *ldv_random_allocationless_scenario_17(void *arg0);


#line 112 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 113 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_17 *cf_arg_17;
  int tmp;
  
#line 129 
  tmp = ldv_undef_int();
  
#line 129 
  switch (tmp) {
    case 0: 
#line 130 
    ;
    
#line 131 
    cf_arg_17 = (struct ldv_struct_random_allocationless_scenario_17 *)ldv_xmalloc(16UL);
    
#line 132 
    cf_arg_17->arg0 = arg0;
    
#line 133 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_17,(void *)cf_arg_17);
    
#line 134 
    __VERIFIER_assume(ret == 0);
    
#line 135 
    goto ldv_44754;
    default: 
#line 137 
    ;
    
#line 137 
    __VERIFIER_assume(0);
  }
  ldv_44754: 
#line 138 
  ;
  
#line 139 
  return;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_9_timer_list;
  
#line 149 
  ldv_9_timer_list = arg0;
  
#line 153 
  ldv_dispatch_instance_deregister_9_1(ldv_9_timer_list);
  
#line 154 
  ;
  
#line 154 
  __retres = 0;
  
#line 154 
  return __retres;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 165 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_ixgbevf_driver_2;
  
#line 169 
  tmp_0 = ldv_undef_int();
  
#line 169 
  if (tmp_0 != 0) {
    
#line 171 
    ldv_7_pci_driver = arg0;
    
#line 175 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 179 
    __retres = 0;
    
#line 179 
    goto return_label;
  }
  else {
    int tmp;
    
#line 186 
    tmp = ldv_undef_int_negative();
    
#line 186 
    __retres = tmp;
    
#line 186 
    goto return_label;
  }
  return_label: 
#line 169 
                return __retres;
}


#line 196  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 199 
  ldv_initialize();
  
#line 202 
  ldv_initialization_1((void *)0);
  
#line 204 
  __retres = 0;
  
#line 204 
  return __retres;
}


#line 209  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_15(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_15_container;
  
#line 214 
  struct ldv_struct_timer_scenario_15 *data = (struct ldv_struct_timer_scenario_15 *)arg0;
  
#line 219 
  if (data != (struct ldv_struct_timer_scenario_15 *)0) {
    
#line 220 
    ldv_15_container = data->arg0;
    
#line 221 
    ldv_free((void *)data);
  }
  else ;
  
#line 226 
  if (ldv_15_container->function != (void (*)(unsigned long ))0) {
    
#line 228 
    ldv_switch_to_interrupt_context();
    
#line 230 
    (*(ldv_15_container->function))(ldv_15_container->data);
    
#line 232 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 241 
  __retres = (void *)0;
  
#line 241 
  goto return_label;
  
#line 243 
  __retres = (void *)0;
  return_label: 
#line 243 
                return __retres;
}


#line 248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_13 *cf_arg_16;
  struct ldv_struct_interrupt_scenario_13 *cf_arg_13;
  int tmp;
  
#line 252 
  tmp = ldv_undef_int();
  
#line 252 
  switch (tmp) {
    case 0: 
#line 253 
    ;
    
#line 254 
    cf_arg_16 = (struct ldv_struct_interrupt_scenario_13 *)ldv_xmalloc(32UL);
    
#line 255 
    cf_arg_16->arg0 = arg0;
    
#line 256 
    cf_arg_16->arg1 = arg1;
    
#line 257 
    cf_arg_16->arg2 = arg2;
    
#line 258 
    cf_arg_16->arg3 = arg3;
    
#line 259 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_interrupt_scenario_16,(void *)cf_arg_16);
    
#line 260 
    __VERIFIER_assume(ret == 0);
    
#line 261 
    goto ldv_44788;
    case 1: 
#line 263 
    ;
    
#line 264 
    cf_arg_13 = (struct ldv_struct_interrupt_scenario_13 *)ldv_xmalloc(32UL);
    
#line 265 
    cf_arg_13->arg0 = arg0;
    
#line 266 
    cf_arg_13->arg1 = arg1;
    
#line 267 
    cf_arg_13->arg2 = arg2;
    
#line 268 
    cf_arg_13->arg3 = arg3;
    
#line 269 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_interrupt_scenario_13,(void *)cf_arg_13);
    
#line 270 
    __VERIFIER_assume(ret == 0);
    
#line 271 
    goto ldv_44788;
    default: 
#line 273 
    ;
    
#line 273 
    __VERIFIER_assume(0);
  }
  ldv_44788: 
#line 274 
  ;
  
#line 275 
  return;
}


#line 279  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_16;
  struct ldv_struct_free_irq_3 *cf_arg_13;
  int tmp;
  
#line 283 
  tmp = ldv_undef_int();
  
#line 283 
  switch (tmp) {
    case 0: 
#line 284 
    ;
    
#line 285 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 286 
    __VERIFIER_assume(ret == 0);
    
#line 287 
    goto ldv_44798;
    case 1: 
#line 289 
    ;
    
#line 290 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 291 
    __VERIFIER_assume(ret == 0);
    
#line 292 
    goto ldv_44798;
    default: 
#line 294 
    ;
    
#line 294 
    __VERIFIER_assume(0);
  }
  ldv_44798: 
#line 295 
  ;
  
#line 296 
  return;
}


#line 300  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 307 
  tmp_0 = ldv_undef_int();
  
#line 307 
  if (tmp_0 != 0) {
    
#line 309 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 313 
    __retres = ldv_5_netdev;
    
#line 313 
    goto return_label;
  }
  else {
    
#line 320 
    __retres = (struct net_device *)0;
    
#line 320 
    goto return_label;
  }
  return_label: 
#line 307 
                return __retres;
}


#line 330  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_14 *cf_arg_14;
  int tmp;
  
#line 333 
  tmp = ldv_undef_int();
  
#line 333 
  switch (tmp) {
    case 0: 
#line 334 
    ;
    
#line 335 
    cf_arg_14 = (struct ldv_struct_pci_scenario_14 *)ldv_xmalloc(16UL);
    
#line 336 
    cf_arg_14->arg0 = arg0;
    
#line 337 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_pci_scenario_14,(void *)cf_arg_14);
    
#line 338 
    __VERIFIER_assume(ret == 0);
    
#line 339 
    goto ldv_44813;
    default: 
#line 341 
    ;
    
#line 341 
    __VERIFIER_assume(0);
  }
  ldv_44813: 
#line 342 
  ;
  
#line 343 
  return;
}


#line 347  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 352 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_ixgbevf_msix_other_2;
  
#line 357 
  tmp_0 = ldv_undef_int();
  
#line 357 
  if (tmp_0 != 0) {
    
#line 359 
    ldv_12_line = (int)arg0;
    
#line 360 
    ldv_12_callback = arg1;
    
#line 361 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 362 
    ldv_12_data = arg4;
    
#line 366 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 370 
    __retres = 0;
    
#line 370 
    goto return_label;
  }
  else {
    int tmp;
    
#line 377 
    tmp = ldv_undef_int_negative();
    
#line 377 
    __retres = tmp;
    
#line 377 
    goto return_label;
  }
  return_label: 
#line 357 
                return __retres;
}


#line 387  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_16(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_16_ret_val;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp;
  
#line 393 
  enum irqreturn (*ldv_16_callback)(int , void *) = & ldv_emg_wrapper_ixgbevf_msix_other_2;
  
#line 396 
  struct ldv_struct_interrupt_scenario_13 *data = (struct ldv_struct_interrupt_scenario_13 *)arg0;
  
#line 401 
  if (data != (struct ldv_struct_interrupt_scenario_13 *)0) {
    
#line 402 
    ldv_16_line = data->arg0;
    
#line 403 
    ldv_16_callback = data->arg1;
    
#line 404 
    ldv_16_thread = data->arg2;
    
#line 405 
    ldv_16_data = data->arg3;
    
#line 406 
    ldv_free((void *)data);
  }
  else ;
  
#line 412 
  ldv_switch_to_interrupt_context();
  
#line 414 
  ldv_16_ret_val = ldv_emg_wrapper_ixgbevf_msix_other_2(ldv_16_line,ldv_16_data);
  
#line 416 
  ldv_switch_to_process_context();
  
#line 419 
  tmp = ldv_undef_int();
  
#line 419 
  if (tmp != 0) {
    
#line 421 
    __VERIFIER_assume(ldv_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 425 
    if (ldv_16_thread != (enum irqreturn (*)(int , void *))0) 
#line 427 
                                                              (*ldv_16_thread)(ldv_16_line,ldv_16_data); else ;
  }
  else 
#line 434 
       __VERIFIER_assume(ldv_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 443 
  __retres = (void *)0;
  
#line 443 
  goto return_label;
  
#line 445 
  __retres = (void *)0;
  return_label: 
#line 445 
                return __retres;
}


#line 450  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_8_work_struct;
  int tmp;
  
#line 457 
  tmp = ldv_undef_int();
  
#line 457 
  if (tmp != 0) {
    
#line 459 
    ldv_8_work_struct = arg0;
    
#line 463 
    if (ldv_8_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 465 
      (*(ldv_8_work_struct->func))(ldv_8_work_struct); else ;
    
#line 470 
    __retres = (_Bool)1;
    
#line 470 
    goto return_label;
  }
  else {
    
#line 477 
    __retres = (_Bool)0;
    
#line 477 
    goto return_label;
  }
  return_label: 
#line 457 
                return __retres;
}


#line 487  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 494 
  ldv_1_ret = ldv_emg_ixgbevf_init_module();
  
#line 495 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 498 
  tmp = ldv_undef_int();
  
#line 498 
  if (tmp != 0) {
    
#line 500 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 504 
    __retres = (void *)0;
    
#line 504 
    goto return_label;
  }
  else {
    
#line 508 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 513 
    ldv_emg_ixgbevf_exit_module();
    
#line 517 
    __retres = (void *)0;
    
#line 517 
    goto return_label;
  }
  
#line 520 
  __retres = (void *)0;
  return_label: 
#line 520 
                return __retres;
}


#line 525  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 531 
  ldv_3_line = (int)arg0;
  
#line 535 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 539 
  goto return_label;
  return_label: 
#line 541 
                return;
}


#line 546  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 549 
  tmp = ldv_undef_int();
  
#line 549 
  switch (tmp) {
    case 0: 
#line 550 
    ;
    
#line 551 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 552 
    __VERIFIER_assume(ret == 0);
    
#line 553 
    goto ldv_44864;
    default: 
#line 555 
    ;
    
#line 555 
    __VERIFIER_assume(0);
  }
  ldv_44864: 
#line 556 
  ;
  
#line 557 
  return;
}


#line 561  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_14 *cf_arg_14;
  int tmp;
  
#line 564 
  tmp = ldv_undef_int();
  
#line 564 
  switch (tmp) {
    case 0: 
#line 565 
    ;
    
#line 566 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 567 
    __VERIFIER_assume(ret == 0);
    
#line 568 
    goto ldv_44872;
    default: 
#line 570 
    ;
    
#line 570 
    __VERIFIER_assume(0);
  }
  ldv_44872: 
#line 571 
  ;
  
#line 572 
  return;
}


#line 576  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 579 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_ixgbevf_driver_2;
  
#line 582 
  ldv_10_pci_driver = arg0;
  
#line 586 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 590 
  goto return_label;
  return_label: 
#line 592 
                return;
}


#line 597  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 601 
  int ldv_11_ret = ldv_undef_int();
  
#line 604 
  ldv_11_ret = ldv_undef_int();
  
#line 607 
  tmp_3 = ldv_undef_int();
  
#line 607 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 609 
    ldv_11_netdev = arg0;
    
#line 614 
    ldv_11_ret = ldv_emg_wrapper_ixgbevf_open_2(ldv_11_netdev);
    
#line 617 
    tmp_1 = ldv_undef_int();
    
#line 617 
    if (tmp_1 != 0) {
      
#line 619 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 623 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 627 
      __retres = 0;
      
#line 627 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 634 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 635 
      ldv_failed_register_netdev();
      
#line 636 
      tmp_0 = ldv_undef_int_negative();
      
#line 636 
      __retres = tmp_0;
      
#line 636 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 644 
    ldv_failed_register_netdev();
    
#line 645 
    tmp_2 = ldv_undef_int_negative();
    
#line 645 
    __retres = tmp_2;
    
#line 645 
    goto return_label;
  }
  return_label: 
#line 607 
                return __retres;
}


#line 655  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 661 
  ldv_6_netdev = arg0;
  
#line 666 
  ldv_emg_wrapper_ixgbevf_close_2(ldv_6_netdev);
  
#line 670 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 674 
  goto return_label;
  return_label: 
#line 676 
                return;
}


#line 681  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_13(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_13_ret_val;
  int ldv_13_line;
  void *ldv_13_data;
  enum irqreturn (*ldv_13_thread)(int , void *);
  int tmp;
  
#line 687 
  enum irqreturn (*ldv_13_callback)(int , void *) = & ldv_emg_wrapper_ixgbevf_msix_clean_rings_2;
  
#line 690 
  struct ldv_struct_interrupt_scenario_13 *data = (struct ldv_struct_interrupt_scenario_13 *)arg0;
  
#line 695 
  if (data != (struct ldv_struct_interrupt_scenario_13 *)0) {
    
#line 696 
    ldv_13_line = data->arg0;
    
#line 697 
    ldv_13_callback = data->arg1;
    
#line 698 
    ldv_13_thread = data->arg2;
    
#line 699 
    ldv_13_data = data->arg3;
    
#line 700 
    ldv_free((void *)data);
  }
  else ;
  
#line 706 
  ldv_switch_to_interrupt_context();
  
#line 708 
  ldv_13_ret_val = ldv_emg_wrapper_ixgbevf_msix_clean_rings_2(ldv_13_line,ldv_13_data);
  
#line 710 
  ldv_switch_to_process_context();
  
#line 713 
  tmp = ldv_undef_int();
  
#line 713 
  if (tmp != 0) {
    
#line 715 
    __VERIFIER_assume(ldv_13_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 719 
    if (ldv_13_thread != (enum irqreturn (*)(int , void *))0) 
#line 721 
                                                              (*ldv_13_thread)(ldv_13_line,ldv_13_data); else ;
  }
  else 
#line 728 
       __VERIFIER_assume(ldv_13_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 737 
  __retres = (void *)0;
  
#line 737 
  goto return_label;
  
#line 739 
  __retres = (void *)0;
  return_label: 
#line 739 
                return __retres;
}


#line 744  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_17(void *arg0)
{
  void *__retres;
  struct sk_buff *ldv_17_ldv_param_0_9;
  struct rtnl_link_stats64 *ldv_17_ldv_param_1_3;
  void *ldv_17_ldv_param_1_10;
  unsigned short ldv_17_ldv_param_2_17;
  unsigned long long *ldv_17_ldv_param_2_15;
  struct ethtool_ringparam *ldv_17_ldv_param_1_25;
  unsigned char *ldv_17_ldv_param_2_24;
  unsigned char *ldv_17_ldv_param_2_27;
  struct ethtool_test *ldv_17_ldv_param_1_14;
  struct ethtool_coalesce *ldv_17_ldv_param_1_29;
  unsigned int ldv_17_ldv_param_1_2;
  int ldv_17_ldv_param_1_4;
  struct ethtool_stats *ldv_17_ldv_param_1_5;
  struct ethtool_cmd *ldv_17_ldv_param_1_11;
  unsigned short ldv_17_ldv_param_2_31;
  unsigned int *ldv_17_ldv_param_1_26;
  struct ethtool_ringparam *ldv_17_ldv_param_1_8;
  void *ldv_17_ldv_param_2_20;
  unsigned short ldv_17_ldv_param_1_30;
  struct napi_struct *ldv_17_ldv_param_0_13;
  unsigned short ldv_17_ldv_param_1_16;
  struct ethtool_coalesce *ldv_17_ldv_param_1_18;
  int ldv_17_ldv_param_1_12;
  struct ethtool_rxnfc *ldv_17_ldv_param_1_21;
  unsigned int ldv_17_ldv_param_1_23;
  struct ethtool_regs *ldv_17_ldv_param_1_19;
  unsigned char *ldv_17_ldv_param_3_28;
  unsigned long long *ldv_17_ldv_param_2_6;
  struct net_device *ldv_17_container;
  unsigned int *ldv_17_ldv_param_2_22;
  struct ethtool_drvinfo *ldv_17_ldv_param_1_7;
  int tmp;
  
#line 779 
  struct ldv_struct_random_allocationless_scenario_17 *data = (struct ldv_struct_random_allocationless_scenario_17 *)arg0;
  
#line 784 
  if (data != (struct ldv_struct_random_allocationless_scenario_17 *)0) {
    
#line 785 
    ldv_17_container = data->arg0;
    
#line 786 
    ldv_free((void *)data);
  }
  else ;
  
#line 794 
  goto ldv_call_17;
  
#line 796 
  __retres = (void *)0;
  
#line 796 
  goto return_label;
  ldv_call_17: 
#line 799 
  ;
  
#line 802 
  tmp = ldv_undef_int();
  
#line 802 
  switch (tmp) {
    case 1: 
#line 803 
    ;
    
#line 806 
    (*ldv_emg_alias_ethtool_op_get_link_2)(ldv_17_container);
    
#line 813 
    goto ldv_call_17;
    case 2: 
#line 816 
    ;
    
#line 819 
    ldv_emg_wrapper_ixgbevf_set_rx_mode_32(ldv_17_container);
    
#line 826 
    goto ldv_call_17;
    case 3: 
#line 829 
    ;
    
#line 832 
    ldv_emg_wrapper_ixgbevf_nway_reset_25(ldv_17_container);
    
#line 839 
    goto ldv_call_17;
    case 4: 
#line 842 
    ;
    
#line 848 
    ldv_emg_wrapper_ixgbevf_vlan_rx_kill_vid_12(ldv_17_container,(unsigned short)((int)ldv_17_ldv_param_1_30),(unsigned short)((int)ldv_17_ldv_param_2_31));
    
#line 858 
    goto ldv_call_17;
    case 5: 
#line 861 
    ;
    
#line 863 
    ldv_17_ldv_param_1_29 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
    
#line 868 
    ldv_emg_wrapper_ixgbevf_set_coalesce_29(ldv_17_container,ldv_17_ldv_param_1_29);
    
#line 872 
    ldv_free((void *)ldv_17_ldv_param_1_29);
    
#line 879 
    goto ldv_call_17;
    case 6: 
#line 882 
    ;
    
#line 884 
    ldv_17_ldv_param_3_28 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    
#line 885 
    ldv_17_ldv_param_1_26 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    
#line 886 
    ldv_17_ldv_param_2_27 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    
#line 891 
    ldv_emg_wrapper_ixgbevf_get_rxfh_11(ldv_17_container,ldv_17_ldv_param_1_26,ldv_17_ldv_param_2_27,ldv_17_ldv_param_3_28);
    
#line 895 
    ldv_free((void *)ldv_17_ldv_param_3_28);
    
#line 896 
    ldv_free((void *)ldv_17_ldv_param_1_26);
    
#line 897 
    ldv_free((void *)ldv_17_ldv_param_2_27);
    
#line 904 
    goto ldv_call_17;
    case 7: 
#line 907 
    ;
    
#line 909 
    ldv_17_ldv_param_1_25 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 914 
    ldv_emg_wrapper_ixgbevf_get_ringparam_27(ldv_17_container,ldv_17_ldv_param_1_25);
    
#line 918 
    ldv_free((void *)ldv_17_ldv_param_1_25);
    
#line 925 
    goto ldv_call_17;
    case 8: 
#line 928 
    ;
    
#line 930 
    ldv_17_ldv_param_2_24 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    
#line 935 
    ldv_emg_wrapper_ixgbevf_get_strings_4(ldv_17_container,ldv_17_ldv_param_1_23,ldv_17_ldv_param_2_24);
    
#line 939 
    ldv_free((void *)ldv_17_ldv_param_2_24);
    
#line 946 
    goto ldv_call_17;
    case 9: 
#line 949 
    ;
    
#line 952 
    ldv_emg_wrapper_ixgbevf_netpoll_31(ldv_17_container);
    
#line 959 
    goto ldv_call_17;
    case 10: 
#line 962 
    ;
    
#line 964 
    ldv_17_ldv_param_1_21 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
    
#line 965 
    ldv_17_ldv_param_2_22 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    
#line 970 
    ldv_emg_wrapper_ixgbevf_get_rxnfc_24(ldv_17_container,ldv_17_ldv_param_1_21,ldv_17_ldv_param_2_22);
    
#line 974 
    ldv_free((void *)ldv_17_ldv_param_1_21);
    
#line 975 
    ldv_free((void *)ldv_17_ldv_param_2_22);
    
#line 982 
    goto ldv_call_17;
    case 11: 
#line 985 
    ;
    
#line 988 
    ldv_emg_wrapper_ixgbevf_tx_timeout_18(ldv_17_container);
    
#line 995 
    goto ldv_call_17;
    case 12: 
#line 998 
    ;
    
#line 1000 
    ldv_17_ldv_param_2_20 = ldv_xmalloc_unknown_size(0UL);
    
#line 1001 
    ldv_17_ldv_param_1_19 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
    
#line 1006 
    ldv_emg_wrapper_ixgbevf_get_regs_22(ldv_17_container,ldv_17_ldv_param_1_19,ldv_17_ldv_param_2_20);
    
#line 1010 
    ldv_free(ldv_17_ldv_param_2_20);
    
#line 1011 
    ldv_free((void *)ldv_17_ldv_param_1_19);
    
#line 1018 
    goto ldv_call_17;
    case 13: 
#line 1021 
    ;
    
#line 1023 
    ldv_17_ldv_param_1_18 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
    
#line 1028 
    ldv_emg_wrapper_ixgbevf_get_coalesce_21(ldv_17_container,ldv_17_ldv_param_1_18);
    
#line 1032 
    ldv_free((void *)ldv_17_ldv_param_1_18);
    
#line 1039 
    goto ldv_call_17;
    case 14: 
#line 1042 
    ;
    
#line 1048 
    ldv_emg_wrapper_ixgbevf_vlan_rx_add_vid_20(ldv_17_container,(unsigned short)((int)ldv_17_ldv_param_1_16),(unsigned short)((int)ldv_17_ldv_param_2_17));
    
#line 1058 
    goto ldv_call_17;
    case 15: 
#line 1061 
    ;
    
#line 1063 
    ldv_17_ldv_param_1_14 = (struct ethtool_test *)ldv_xmalloc_unknown_size(0UL);
    
#line 1064 
    ldv_17_ldv_param_2_15 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1069 
    ldv_emg_wrapper_ixgbevf_diag_test_19(ldv_17_container,ldv_17_ldv_param_1_14,ldv_17_ldv_param_2_15);
    
#line 1073 
    ldv_free((void *)ldv_17_ldv_param_1_14);
    
#line 1074 
    ldv_free((void *)ldv_17_ldv_param_2_15);
    
#line 1081 
    goto ldv_call_17;
    case 16: 
#line 1084 
    ;
    
#line 1086 
    ldv_17_ldv_param_0_13 = (struct napi_struct *)ldv_xmalloc_unknown_size(0UL);
    
#line 1091 
    ldv_emg_wrapper_ixgbevf_busy_poll_recv_30(ldv_17_ldv_param_0_13);
    
#line 1095 
    ldv_free((void *)ldv_17_ldv_param_0_13);
    
#line 1102 
    goto ldv_call_17;
    case 17: 
#line 1105 
    ;
    
#line 1111 
    ldv_emg_wrapper_ixgbevf_get_sset_count_23(ldv_17_container,ldv_17_ldv_param_1_12);
    
#line 1121 
    goto ldv_call_17;
    case 18: 
#line 1124 
    ;
    
#line 1126 
    ldv_17_ldv_param_1_11 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 1131 
    ldv_emg_wrapper_ixgbevf_get_settings_17(ldv_17_container,ldv_17_ldv_param_1_11);
    
#line 1135 
    ldv_free((void *)ldv_17_ldv_param_1_11);
    
#line 1142 
    goto ldv_call_17;
    case 19: 
#line 1145 
    ;
    
#line 1147 
    ldv_17_ldv_param_1_10 = ldv_xmalloc_unknown_size(0UL);
    
#line 1152 
    ldv_emg_wrapper_ixgbevf_set_mac_16(ldv_17_container,ldv_17_ldv_param_1_10);
    
#line 1156 
    ldv_free(ldv_17_ldv_param_1_10);
    
#line 1163 
    goto ldv_call_17;
    case 20: 
#line 1166 
    ;
    
#line 1168 
    ldv_17_ldv_param_0_9 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    
#line 1173 
    ldv_emg_wrapper_ixgbevf_xmit_frame_15(ldv_17_ldv_param_0_9,ldv_17_container);
    
#line 1177 
    ldv_free((void *)ldv_17_ldv_param_0_9);
    
#line 1184 
    goto ldv_call_17;
    case 21: 
#line 1187 
    ;
    
#line 1190 
    ldv_emg_wrapper_ixgbevf_get_msglevel_14(ldv_17_container);
    
#line 1197 
    goto ldv_call_17;
    case 22: 
#line 1200 
    ;
    
#line 1203 
    ldv_emg_wrapper_ixgbevf_get_rxfh_key_size_10(ldv_17_container);
    
#line 1210 
    goto ldv_call_17;
    case 23: 
#line 1213 
    ;
    
#line 1215 
    ldv_17_ldv_param_1_8 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 1220 
    ldv_emg_wrapper_ixgbevf_set_ringparam_13(ldv_17_container,ldv_17_ldv_param_1_8);
    
#line 1224 
    ldv_free((void *)ldv_17_ldv_param_1_8);
    
#line 1231 
    goto ldv_call_17;
    case 24: 
#line 1234 
    ;
    
#line 1237 
    ldv_emg_wrapper_ixgbevf_get_regs_len_28(ldv_17_container);
    
#line 1244 
    goto ldv_call_17;
    case 25: 
#line 1247 
    ;
    
#line 1249 
    ldv_17_ldv_param_1_7 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
    
#line 1254 
    ldv_emg_wrapper_ixgbevf_get_drvinfo_9(ldv_17_container,ldv_17_ldv_param_1_7);
    
#line 1258 
    ldv_free((void *)ldv_17_ldv_param_1_7);
    
#line 1265 
    goto ldv_call_17;
    case 26: 
#line 1268 
    ;
    
#line 1271 
    (*ldv_emg_alias_eth_validate_addr_6)(ldv_17_container);
    
#line 1278 
    goto ldv_call_17;
    case 27: 
#line 1281 
    ;
    
#line 1283 
    ldv_17_ldv_param_2_6 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1284 
    ldv_17_ldv_param_1_5 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
    
#line 1289 
    ldv_emg_wrapper_ixgbevf_get_ethtool_stats_7(ldv_17_container,ldv_17_ldv_param_1_5,ldv_17_ldv_param_2_6);
    
#line 1293 
    ldv_free((void *)ldv_17_ldv_param_2_6);
    
#line 1294 
    ldv_free((void *)ldv_17_ldv_param_1_5);
    
#line 1301 
    goto ldv_call_17;
    case 28: 
#line 1304 
    ;
    
#line 1310 
    ldv_emg_wrapper_ixgbevf_change_mtu_8(ldv_17_container,ldv_17_ldv_param_1_4);
    
#line 1320 
    goto ldv_call_17;
    case 29: 
#line 1323 
    ;
    
#line 1325 
    ldv_17_ldv_param_1_3 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
    
#line 1330 
    ldv_emg_wrapper_ixgbevf_get_stats_5(ldv_17_container,ldv_17_ldv_param_1_3);
    
#line 1334 
    ldv_free((void *)ldv_17_ldv_param_1_3);
    
#line 1341 
    goto ldv_call_17;
    case 30: 
#line 1344 
    ;
    
#line 1350 
    ldv_emg_wrapper_ixgbevf_set_msglevel_26(ldv_17_container,ldv_17_ldv_param_1_2);
    
#line 1360 
    goto ldv_call_17;
    case 31: 
#line 1363 
    ;
    
#line 1366 
    ldv_emg_wrapper_ixgbevf_get_rxfh_indir_size_3(ldv_17_container);
    
#line 1373 
    goto ldv_call_17;
    case 32: 
#line 1376 
    ;
    
#line 1382 
    __retres = (void *)0;
    
#line 1382 
    goto return_label;
    default: 
#line 1385 
    ;
    
#line 1385 
    __VERIFIER_assume(0);
  }
  
#line 1388 
  __retres = (void *)0;
  return_label: 
#line 1388 
                return __retres;
}


#line 1393  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1396 
  tmp = ldv_undef_int();
  
#line 1396 
  switch (tmp) {
    case 0: 
#line 1397 
    ;
    
#line 1398 
    cf_arg_15 = (struct ldv_struct_timer_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1399 
    cf_arg_15->arg0 = arg0;
    
#line 1400 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_timer_scenario_15,(void *)cf_arg_15);
    
#line 1401 
    __VERIFIER_assume(ret == 0);
    
#line 1402 
    goto ldv_44975;
    default: 
#line 1404 
    ;
    
#line 1404 
    __VERIFIER_assume(0);
  }
  ldv_44975: 
#line 1405 
  ;
  
#line 1406 
  return;
}


#line 1410  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_14(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_14_resource_1;
  struct pci_device_id *ldv_14_ldv_param_1_2;
  struct pm_message ldv_14_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 1415 
  struct pci_driver *ldv_14_container = ldv_emg_alias_ixgbevf_driver_2;
  
#line 1416 
  int ldv_14_ret = ldv_undef_int();
  
#line 1419 
  struct ldv_struct_pci_scenario_14 *data = (struct ldv_struct_pci_scenario_14 *)arg0;
  
#line 1423 
  ldv_14_ret = ldv_undef_int();
  
#line 1426 
  if (data != (struct ldv_struct_pci_scenario_14 *)0) {
    
#line 1427 
    ldv_14_container = data->arg0;
    
#line 1428 
    ldv_free((void *)data);
  }
  else ;
  
#line 1439 
  goto ldv_main_14;
  
#line 1441 
  __retres = (void *)0;
  
#line 1441 
  goto return_label;
  ldv_main_14: 
#line 1444 
  ;
  
#line 1447 
  tmp_2 = ldv_undef_int();
  
#line 1447 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1449 
    ldv_14_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 1454 
    ldv_pre_probe();
    
#line 1456 
    ldv_14_ret = ldv_emg_wrapper_ixgbevf_probe_3(ldv_14_resource_1,ldv_14_ldv_param_1_2);
    
#line 1458 
    ldv_14_ret = ldv_post_probe(ldv_14_ret);
    
#line 1462 
    ldv_free((void *)ldv_14_ldv_param_1_2);
    
#line 1465 
    tmp_1 = ldv_undef_int();
    
#line 1465 
    if (tmp_1 != 0) {
      
#line 1467 
      __VERIFIER_assume(ldv_14_ret == 0);
      
#line 1474 
      goto ldv_call_14;
    }
    else {
      
#line 1478 
      __VERIFIER_assume(ldv_14_ret != 0);
      
#line 1485 
      goto ldv_main_14;
    }
  }
  else {
    
#line 1497 
    __retres = (void *)0;
    
#line 1497 
    goto return_label;
  }
  
#line 1500 
  __retres = (void *)0;
  
#line 1500 
  goto return_label;
  ldv_call_14: 
#line 1503 
  ;
  
#line 1506 
  tmp_3 = ldv_undef_int();
  
#line 1506 
  switch (tmp_3) {
    case 1: 
#line 1507 
    ;
    
#line 1516 
    goto ldv_call_14;
    case 2: 
#line 1519 
    ;
    
#line 1522 
    ldv_14_ret = ldv_emg_wrapper_ixgbevf_suspend_4(ldv_14_resource_1,ldv_14_resource_0);
    
#line 1524 
    ldv_14_ret = ldv_filter_err_code(ldv_14_ret);
    
#line 1528 
    if (ldv_14_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1530 
      ldv_14_ret = (*(ldv_14_container->suspend_late))(ldv_14_resource_1,ldv_14_resource_0);
      
#line 1532 
      ldv_14_ret = ldv_filter_err_code(ldv_14_ret);
    }
    else 
#line 1534 
         ldv_14_ret = ldv_undef_int();
    
#line 1539 
    if (ldv_14_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1541 
      (*(ldv_14_container->resume_early))(ldv_14_resource_1); else ;
    
#line 1547 
    ldv_emg_wrapper_ixgbevf_resume_6(ldv_14_resource_1);
    
#line 1554 
    goto ldv_call_14;
    case 3: 
#line 1557 
    ;
    
#line 1560 
    ldv_emg_wrapper_ixgbevf_shutdown_2(ldv_14_resource_1);
    
#line 1565 
    ldv_emg_wrapper_ixgbevf_remove_5(ldv_14_resource_1);
    
#line 1572 
    goto ldv_main_14;
    default: 
#line 1575 
    ;
    
#line 1575 
    __VERIFIER_assume(0);
  }
  
#line 1578 
  __retres = (void *)0;
  return_label: 
#line 1578 
                return __retres;
}


#line 1583  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_17 *cf_arg_17;
  int tmp;
  
#line 1586 
  tmp = ldv_undef_int();
  
#line 1586 
  switch (tmp) {
    case 0: 
#line 1587 
    ;
    
#line 1588 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 1589 
    __VERIFIER_assume(ret == 0);
    
#line 1590 
    goto ldv_44998;
    default: 
#line 1592 
    ;
    
#line 1592 
    __VERIFIER_assume(0);
  }
  ldv_44998: 
#line 1593 
  ;
  
#line 1594 
  return;
}


#line 1598  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1604 
  ldv_2_netdev = arg0;
  
#line 1605 
  ldv_free((void *)ldv_2_netdev);
  
#line 1609 
  goto return_label;
  return_label: 
#line 1611 
                return;
}


#line 1616  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/ixgbevf/ixgbevf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1623 
  tmp_0 = ldv_undef_int();
  
#line 1623 
  if (tmp_0 != 0) {
    
#line 1625 
    ldv_4_timer_list = arg0;
    
#line 1629 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1633 
    __retres = 0;
    
#line 1633 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1640 
    tmp = ldv_undef_int_negative();
    
#line 1640 
    __retres = tmp;
    
#line 1640 
    goto return_label;
  }
  return_label: 
#line 1623 
                return __retres;
}


