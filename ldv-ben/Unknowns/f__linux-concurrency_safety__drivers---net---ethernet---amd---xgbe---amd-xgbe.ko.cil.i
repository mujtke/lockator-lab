/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 cycle_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
union __anonunion_46 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_46 __anonCompField_idr_layer_19 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 97 
struct dentry;

#line 98 
struct iattr;

#line 99 
struct vm_area_struct;

#line 100 
struct super_block;

#line 101 
struct file_system_type;

#line 102 
struct kernfs_open_node;

#line 103 
struct kernfs_iattrs;

#line 126 
struct kernfs_root;

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_51 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_51 __anonCompField_kernfs_node_20 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171 
struct vm_operations_struct;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 281 
struct inode;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_52 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_52 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_53 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_53 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kref.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_55 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_54 {
   struct __anonstruct_55 __anonCompField___anonunion_54_21 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_54 __anonCompField_ctl_table_header_22 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_56 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_56 nodemask_t;

#line 520 
struct path;

#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_121 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_121 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dma_map_ops;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_153 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_154 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_152 {
   struct __anonstruct_153 __anonCompField___anonunion_152_35 ;
   struct __anonstruct_154 __anonCompField___anonunion_152_36 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_152 __anonCompField_uprobe_task_37 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_161 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   atomic_t _mapcount ;
   struct __anonstruct_161 __anonCompField___anonunion_160_40 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   union __anonunion_160 __anonCompField___anonstruct_159_41 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_158 {
   unsigned long counters ;
   struct __anonstruct_159 __anonCompField___anonunion_158_42 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   union __anonunion_157 __anonCompField___anonstruct_156_39 ;
   union __anonunion_158 __anonCompField___anonstruct_156_43 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_163 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_164 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_162 {
   struct list_head lru ;
   struct __anonstruct_163 __anonCompField___anonunion_162_45 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_164 __anonCompField___anonunion_162_46 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_165 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_155 __anonCompField_page_38 ;
   struct __anonstruct_156 __anonCompField_page_44 ;
   union __anonunion_162 __anonCompField_page_47 ;
   union __anonunion_165 __anonCompField_page_48 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_166 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_166 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct user_struct;

#line 66 
struct writeback_control;

#line 67 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_172 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_172 __anonCompField_iov_iter_49 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_174 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_174 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_175 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_175 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_176 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_176 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_177 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_177 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_178 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_178 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_179 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_179 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_180 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_180 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_181 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_181 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_182 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_183 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_182 ifr_ifrn ;
   union __anonunion_ifr_ifru_183 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_188 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_187 {
   struct __anonstruct_188 __anonCompField___anonunion_187_50 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_187 __anonCompField_lockref_51 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_190 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_189 {
   struct __anonstruct_190 __anonCompField___anonunion_189_52 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_189 __anonCompField_qstr_53 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_191 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_191 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_195 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_194 {
   struct __anonstruct_195 __anonCompField___anonunion_194_54 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_194 __anonCompField_radix_tree_node_55 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 435 
struct pid_namespace;

#line 435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct block_device;

#line 31 
struct io_context;

#line 32 
struct cgroup_subsys_state;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct backing_dev_info;

#line 61 
struct export_operations;

#line 63 
struct pipe_inode_info;

#line 65 
struct kstatfs;

#line 66 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_200 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_200 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_201 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_201 __anonCompField_kqid_57 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_204 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_205 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_206 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_204 __anonCompField_inode_58 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_205 __anonCompField_inode_59 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_206 __anonCompField_inode_60 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_207 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_207 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_209 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_208 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_209 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_208 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1061 
struct files_struct;

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_210 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_210 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_212 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_213 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_214 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_215 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_217 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_216 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_217 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_218 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_219 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_211 {
   int _pad[28U] ;
   struct __anonstruct__kill_212 _kill ;
   struct __anonstruct__timer_213 _timer ;
   struct __anonstruct__rt_214 _rt ;
   struct __anonstruct__sigchld_215 _sigchld ;
   struct __anonstruct__sigfault_216 _sigfault ;
   struct __anonstruct__sigpoll_218 _sigpoll ;
   struct __anonstruct__sigsys_219 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_211 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_222 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_223 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_225 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_224 {
   struct keyring_index_key index_key ;
   struct __anonstruct_225 __anonCompField___anonunion_224_63 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_226 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_228 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_227 {
   union __anonunion_payload_228 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_222 __anonCompField_key_61 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_223 __anonCompField_key_62 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_224 __anonCompField_key_64 ;
   union __anonunion_type_data_226 type_data ;
   union __anonunion_227 __anonCompField_key_65 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 327 
struct cgroup;

#line 328 
struct cgroup_root;

#line 329 
struct cgroup_subsys;

#line 330 
struct cgroup_taskset;

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 134 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct reclaim_state;

#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_257 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_257 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_25001 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_262 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_263 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_25001 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_262 __anonCompField_nf_bridge_info_72 ;
   union __anonunion_263 __anonCompField_nf_bridge_info_73 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_264 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_264 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_266 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_265 {
   u64 v64 ;
   struct __anonstruct_266 __anonCompField___anonunion_265_74 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_265 __anonCompField_skb_mstamp_75 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_269 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_268 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_269 __anonCompField___anonstruct_268_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_267 {
   struct __anonstruct_268 __anonCompField___anonunion_267_77 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_271 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_270 {
   __wsum csum ;
   struct __anonstruct_271 __anonCompField___anonunion_270_79 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_272 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_273 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_274 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_267 __anonCompField_sk_buff_78 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_270 __anonCompField_sk_buff_80 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_272 __anonCompField_sk_buff_81 ;
   __u32 secmark ;
   union __anonunion_273 __anonCompField_sk_buff_82 ;
   union __anonunion_274 __anonCompField_sk_buff_83 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 890 
enum pkt_hash_types {
    PKT_HASH_TYPE_NONE = 0,
    PKT_HASH_TYPE_L2 = 1,
    PKT_HASH_TYPE_L3 = 2,
    PKT_HASH_TYPE_L4 = 3
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_27932 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_27932 phy_interface_t;

#line 126 
enum ldv_27985 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_27985 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29697 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29698 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29697 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29698 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/pps.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations const *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pps_kernel.h"
struct ptp_clock_time {
   __s64 sec ;
   __u32 nsec ;
   __u32 reserved ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_extts_request {
   unsigned int index ;
   unsigned int flags ;
   unsigned int rsv[2U] ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_perout_request {
   struct ptp_clock_time start ;
   struct ptp_clock_time period ;
   unsigned int index ;
   unsigned int flags ;
   unsigned int rsv[4U] ;
};

#line 83 
enum ptp_pin_function {
    PTP_PF_NONE = 0,
    PTP_PF_EXTTS = 1,
    PTP_PF_PEROUT = 2,
    PTP_PF_PHYSYNC = 3
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_pin_desc {
   char name[64U] ;
   unsigned int index ;
   unsigned int func ;
   unsigned int chan ;
   unsigned int rsv[5U] ;
};

#line 134 
enum ldv_31720 {
    PTP_CLK_REQ_EXTTS = 0,
    PTP_CLK_REQ_PEROUT = 1,
    PTP_CLK_REQ_PPS = 2
};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
union __anonunion_319 {
   struct ptp_extts_request extts ;
   struct ptp_perout_request perout ;
};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_clock_request {
   enum ldv_31720 type ;
   union __anonunion_319 __anonCompField_ptp_clock_request_94 ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
struct ptp_clock_info {
   struct module *owner ;
   char name[16U] ;
   s32 max_adj ;
   int n_alarm ;
   int n_ext_ts ;
   int n_per_out ;
   int n_pins ;
   int pps ;
   struct ptp_pin_desc *pin_config ;
   int (*adjfreq)(struct ptp_clock_info *, s32 ) ;
   int (*adjtime)(struct ptp_clock_info *, s64 ) ;
   int (*gettime64)(struct ptp_clock_info *, struct timespec *) ;
   int (*settime64)(struct ptp_clock_info *, struct timespec const *) ;
   int (*enable)(struct ptp_clock_info *, struct ptp_clock_request *, int ) ;
   int (*verify)(struct ptp_clock_info *, unsigned int , enum ptp_pin_function , unsigned int ) ;
};

#line 113 
struct ptp_clock;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
struct cyclecounter {
   cycle_t (*read)(struct cyclecounter const *) ;
   cycle_t mask ;
   u32 mult ;
   u32 shift ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timecounter.h"
struct timecounter {
   struct cyclecounter const *cc ;
   cycle_t cycle_last ;
   u64 nsec ;
   u64 mask ;
   u64 frac ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timecounter.h"
struct hwtstamp_config {
   int flags ;
   int tx_type ;
   int rx_filter ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net_tstamp.h"
struct xgbe_prv_data;

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net_tstamp.h"
struct xgbe_packet_data {
   struct sk_buff *skb ;
   unsigned int attributes ;
   unsigned int errors ;
   unsigned int rdesc_count ;
   unsigned int length ;
   unsigned int header_len ;
   unsigned int tcp_header_len ;
   unsigned int tcp_payload_len ;
   unsigned short mss ;
   unsigned short vlan_ctag ;
   u64 rx_tstamp ;
   u32 rss_hash ;
   enum pkt_hash_types rss_hash_type ;
   unsigned int tx_packets ;
   unsigned int tx_bytes ;
};

#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_ring_desc {
   __le32 desc0 ;
   __le32 desc1 ;
   __le32 desc2 ;
   __le32 desc3 ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_page_alloc {
   struct page *pages ;
   unsigned int pages_len ;
   unsigned int pages_offset ;
   dma_addr_t pages_dma ;
};

#line 334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_buffer_data {
   struct xgbe_page_alloc pa ;
   struct xgbe_page_alloc pa_unmap ;
   dma_addr_t dma_base ;
   unsigned long dma_off ;
   unsigned int dma_len ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_tx_ring_data {
   unsigned int packets ;
   unsigned int bytes ;
};

#line 350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_rx_ring_data {
   struct xgbe_buffer_data hdr ;
   struct xgbe_buffer_data buf ;
   unsigned short hdr_len ;
   unsigned short len ;
};

#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct __anonstruct_state_321 {
   struct sk_buff *skb ;
   unsigned int len ;
   unsigned int error ;
};

#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_ring_data {
   struct xgbe_ring_desc *rdesc ;
   dma_addr_t rdesc_dma ;
   struct sk_buff *skb ;
   dma_addr_t skb_dma ;
   unsigned int skb_dma_len ;
   struct xgbe_tx_ring_data tx ;
   struct xgbe_rx_ring_data rx ;
   unsigned int mapped_as_page ;
   unsigned int state_saved ;
   struct __anonstruct_state_321 state ;
};

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct __anonstruct_tx_323 {
   unsigned int queue_stopped ;
   unsigned int xmit_more ;
   unsigned short cur_mss ;
   unsigned short cur_vlan_ctag ;
};

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
union __anonunion_322 {
   struct __anonstruct_tx_323 tx ;
};

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_ring {
   spinlock_t lock ;
   struct xgbe_packet_data packet_data ;
   struct xgbe_ring_desc *rdesc ;
   dma_addr_t rdesc_dma ;
   unsigned int rdesc_count ;
   struct xgbe_ring_data *rdata ;
   struct xgbe_page_alloc rx_hdr_pa ;
   struct xgbe_page_alloc rx_buf_pa ;
   unsigned int cur ;
   unsigned int dirty ;
   unsigned int coalesce_count ;
   union __anonunion_322 __anonCompField_xgbe_ring_96 ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_channel {
   char name[16U] ;
   struct xgbe_prv_data *pdata ;
   unsigned int queue_index ;
   void *dma_regs ;
   int dma_irq ;
   char dma_irq_name[48U] ;
   struct napi_struct napi ;
   unsigned int saved_ier ;
   unsigned int tx_timer_active ;
   struct timer_list tx_timer ;
   struct xgbe_ring *tx_ring ;
   struct xgbe_ring *rx_ring ;
};

#line 468 
enum xgbe_int {
    XGMAC_INT_DMA_CH_SR_TI = 0,
    XGMAC_INT_DMA_CH_SR_TPS = 1,
    XGMAC_INT_DMA_CH_SR_TBU = 2,
    XGMAC_INT_DMA_CH_SR_RI = 3,
    XGMAC_INT_DMA_CH_SR_RBU = 4,
    XGMAC_INT_DMA_CH_SR_RPS = 5,
    XGMAC_INT_DMA_CH_SR_TI_RI = 6,
    XGMAC_INT_DMA_CH_SR_FBE = 7,
    XGMAC_INT_DMA_ALL = 8
};

#line 506 
enum xgbe_an {
    XGBE_AN_READY = 0,
    XGBE_AN_PAGE_RECEIVED = 1,
    XGBE_AN_INCOMPAT_LINK = 2,
    XGBE_AN_COMPLETE = 3,
    XGBE_AN_NO_LINK = 4,
    XGBE_AN_ERROR = 5
};

#line 515 
enum xgbe_rx {
    XGBE_RX_BPA = 0,
    XGBE_RX_XNP = 1,
    XGBE_RX_COMPLETE = 2,
    XGBE_RX_ERROR = 3
};

#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_phy {
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int address ;
   int autoneg ;
   int speed ;
   int duplex ;
   int link ;
   int pause_autoneg ;
   int tx_pause ;
   int rx_pause ;
};

#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_mmc_stats {
   u64 txoctetcount_gb ;
   u64 txframecount_gb ;
   u64 txbroadcastframes_g ;
   u64 txmulticastframes_g ;
   u64 tx64octets_gb ;
   u64 tx65to127octets_gb ;
   u64 tx128to255octets_gb ;
   u64 tx256to511octets_gb ;
   u64 tx512to1023octets_gb ;
   u64 tx1024tomaxoctets_gb ;
   u64 txunicastframes_gb ;
   u64 txmulticastframes_gb ;
   u64 txbroadcastframes_gb ;
   u64 txunderflowerror ;
   u64 txoctetcount_g ;
   u64 txframecount_g ;
   u64 txpauseframes ;
   u64 txvlanframes_g ;
   u64 rxframecount_gb ;
   u64 rxoctetcount_gb ;
   u64 rxoctetcount_g ;
   u64 rxbroadcastframes_g ;
   u64 rxmulticastframes_g ;
   u64 rxcrcerror ;
   u64 rxrunterror ;
   u64 rxjabbererror ;
   u64 rxundersize_g ;
   u64 rxoversize_g ;
   u64 rx64octets_gb ;
   u64 rx65to127octets_gb ;
   u64 rx128to255octets_gb ;
   u64 rx256to511octets_gb ;
   u64 rx512to1023octets_gb ;
   u64 rx1024tomaxoctets_gb ;
   u64 rxunicastframes_g ;
   u64 rxlengtherror ;
   u64 rxoutofrangetype ;
   u64 rxpauseframes ;
   u64 rxfifooverflow ;
   u64 rxvlanframes_gb ;
   u64 rxwatchdogerror ;
};

#line 597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_ext_stats {
   u64 tx_tso_packets ;
   u64 rx_split_header_packets ;
};

#line 602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_hw_if {
   int (*tx_complete)(struct xgbe_ring_desc *) ;
   int (*set_mac_address)(struct xgbe_prv_data *, u8 *) ;
   int (*config_rx_mode)(struct xgbe_prv_data *) ;
   int (*enable_rx_csum)(struct xgbe_prv_data *) ;
   int (*disable_rx_csum)(struct xgbe_prv_data *) ;
   int (*enable_rx_vlan_stripping)(struct xgbe_prv_data *) ;
   int (*disable_rx_vlan_stripping)(struct xgbe_prv_data *) ;
   int (*enable_rx_vlan_filtering)(struct xgbe_prv_data *) ;
   int (*disable_rx_vlan_filtering)(struct xgbe_prv_data *) ;
   int (*update_vlan_hash_table)(struct xgbe_prv_data *) ;
   int (*read_mmd_regs)(struct xgbe_prv_data *, int , int ) ;
   void (*write_mmd_regs)(struct xgbe_prv_data *, int , int , int ) ;
   int (*set_gmii_speed)(struct xgbe_prv_data *) ;
   int (*set_gmii_2500_speed)(struct xgbe_prv_data *) ;
   int (*set_xgmii_speed)(struct xgbe_prv_data *) ;
   void (*enable_tx)(struct xgbe_prv_data *) ;
   void (*disable_tx)(struct xgbe_prv_data *) ;
   void (*enable_rx)(struct xgbe_prv_data *) ;
   void (*disable_rx)(struct xgbe_prv_data *) ;
   void (*powerup_tx)(struct xgbe_prv_data *) ;
   void (*powerdown_tx)(struct xgbe_prv_data *) ;
   void (*powerup_rx)(struct xgbe_prv_data *) ;
   void (*powerdown_rx)(struct xgbe_prv_data *) ;
   int (*init)(struct xgbe_prv_data *) ;
   int (*exit)(struct xgbe_prv_data *) ;
   int (*enable_int)(struct xgbe_channel *, enum xgbe_int ) ;
   int (*disable_int)(struct xgbe_channel *, enum xgbe_int ) ;
   void (*dev_xmit)(struct xgbe_channel *) ;
   int (*dev_read)(struct xgbe_channel *) ;
   void (*tx_desc_init)(struct xgbe_channel *) ;
   void (*rx_desc_init)(struct xgbe_channel *) ;
   void (*tx_desc_reset)(struct xgbe_ring_data *) ;
   void (*rx_desc_reset)(struct xgbe_prv_data *, struct xgbe_ring_data *, unsigned int ) ;
   int (*is_last_desc)(struct xgbe_ring_desc *) ;
   int (*is_context_desc)(struct xgbe_ring_desc *) ;
   void (*tx_start_xmit)(struct xgbe_channel *, struct xgbe_ring *) ;
   int (*config_tx_flow_control)(struct xgbe_prv_data *) ;
   int (*config_rx_flow_control)(struct xgbe_prv_data *) ;
   int (*config_rx_coalesce)(struct xgbe_prv_data *) ;
   int (*config_tx_coalesce)(struct xgbe_prv_data *) ;
   unsigned int (*usec_to_riwt)(struct xgbe_prv_data *, unsigned int ) ;
   unsigned int (*riwt_to_usec)(struct xgbe_prv_data *, unsigned int ) ;
   int (*config_rx_threshold)(struct xgbe_prv_data *, unsigned int ) ;
   int (*config_tx_threshold)(struct xgbe_prv_data *, unsigned int ) ;
   int (*config_rsf_mode)(struct xgbe_prv_data *, unsigned int ) ;
   int (*config_tsf_mode)(struct xgbe_prv_data *, unsigned int ) ;
   int (*config_osp_mode)(struct xgbe_prv_data *) ;
   int (*config_rx_pbl_val)(struct xgbe_prv_data *) ;
   int (*get_rx_pbl_val)(struct xgbe_prv_data *) ;
   int (*config_tx_pbl_val)(struct xgbe_prv_data *) ;
   int (*get_tx_pbl_val)(struct xgbe_prv_data *) ;
   int (*config_pblx8)(struct xgbe_prv_data *) ;
   void (*rx_mmc_int)(struct xgbe_prv_data *) ;
   void (*tx_mmc_int)(struct xgbe_prv_data *) ;
   void (*read_mmc_stats)(struct xgbe_prv_data *) ;
   int (*config_tstamp)(struct xgbe_prv_data *, unsigned int ) ;
   void (*update_tstamp_addend)(struct xgbe_prv_data *, unsigned int ) ;
   void (*set_tstamp_time)(struct xgbe_prv_data *, unsigned int , unsigned int ) ;
   u64 (*get_tstamp_time)(struct xgbe_prv_data *) ;
   u64 (*get_tx_tstamp)(struct xgbe_prv_data *) ;
   void (*config_dcb_tc)(struct xgbe_prv_data *) ;
   void (*config_dcb_pfc)(struct xgbe_prv_data *) ;
   int (*enable_rss)(struct xgbe_prv_data *) ;
   int (*disable_rss)(struct xgbe_prv_data *) ;
   int (*set_rss_hash_key)(struct xgbe_prv_data *, u8 const *) ;
   int (*set_rss_lookup_table)(struct xgbe_prv_data *, u32 const *) ;
};

#line 701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_phy_if {
   void (*phy_init)(struct xgbe_prv_data *) ;
   int (*phy_reset)(struct xgbe_prv_data *) ;
   int (*phy_start)(struct xgbe_prv_data *) ;
   void (*phy_stop)(struct xgbe_prv_data *) ;
   void (*phy_status)(struct xgbe_prv_data *) ;
   int (*phy_config_aneg)(struct xgbe_prv_data *) ;
};

#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_desc_if {
   int (*alloc_ring_resources)(struct xgbe_prv_data *) ;
   void (*free_ring_resources)(struct xgbe_prv_data *) ;
   int (*map_tx_skb)(struct xgbe_channel *, struct sk_buff *) ;
   int (*map_rx_buffer)(struct xgbe_prv_data *, struct xgbe_ring *, struct xgbe_ring_data *) ;
   void (*unmap_rdata)(struct xgbe_prv_data *, struct xgbe_ring_data *) ;
   void (*wrapper_tx_desc_init)(struct xgbe_prv_data *) ;
   void (*wrapper_rx_desc_init)(struct xgbe_prv_data *) ;
};

#line 726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_hw_features {
   unsigned int version ;
   unsigned int gmii ;
   unsigned int vlhash ;
   unsigned int sma ;
   unsigned int rwk ;
   unsigned int mgk ;
   unsigned int mmc ;
   unsigned int aoe ;
   unsigned int ts ;
   unsigned int eee ;
   unsigned int tx_coe ;
   unsigned int rx_coe ;
   unsigned int addn_mac ;
   unsigned int ts_src ;
   unsigned int sa_vlan_ins ;
   unsigned int rx_fifo_size ;
   unsigned int tx_fifo_size ;
   unsigned int adv_ts_hi ;
   unsigned int dma_width ;
   unsigned int dcb ;
   unsigned int sph ;
   unsigned int tso ;
   unsigned int dma_debug ;
   unsigned int rss ;
   unsigned int tc_cnt ;
   unsigned int hash_table_size ;
   unsigned int l3l4_filter_num ;
   unsigned int rx_q_cnt ;
   unsigned int tx_q_cnt ;
   unsigned int rx_ch_cnt ;
   unsigned int tx_ch_cnt ;
   unsigned int pps_out_num ;
   unsigned int aux_snap_num ;
};

#line 772 
struct clk;

#line 772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_prv_data {
   struct net_device *netdev ;
   struct platform_device *pdev ;
   struct acpi_device *adev ;
   struct device *dev ;
   unsigned int use_acpi ;
   void *xgmac_regs ;
   void *xpcs_regs ;
   void *rxtx_regs ;
   void *sir0_regs ;
   void *sir1_regs ;
   spinlock_t lock ;
   struct mutex xpcs_mutex ;
   struct mutex rss_mutex ;
   unsigned long dev_state ;
   int dev_irq ;
   unsigned int per_channel_irq ;
   struct xgbe_hw_if hw_if ;
   struct xgbe_phy_if phy_if ;
   struct xgbe_desc_if desc_if ;
   unsigned int coherent ;
   unsigned int axdomain ;
   unsigned int arcache ;
   unsigned int awcache ;
   struct workqueue_struct *dev_workqueue ;
   struct work_struct service_work ;
   struct timer_list service_timer ;
   struct xgbe_channel *channel ;
   unsigned int channel_count ;
   unsigned int tx_ring_count ;
   unsigned int tx_desc_count ;
   unsigned int rx_ring_count ;
   unsigned int rx_desc_count ;
   unsigned int tx_q_count ;
   unsigned int rx_q_count ;
   unsigned int pblx8 ;
   unsigned int tx_sf_mode ;
   unsigned int tx_threshold ;
   unsigned int tx_pbl ;
   unsigned int tx_osp_mode ;
   unsigned int rx_sf_mode ;
   unsigned int rx_threshold ;
   unsigned int rx_pbl ;
   unsigned int tx_usecs ;
   unsigned int tx_frames ;
   unsigned int rx_riwt ;
   unsigned int rx_usecs ;
   unsigned int rx_frames ;
   unsigned int rx_buf_size ;
   unsigned int pause_autoneg ;
   unsigned int tx_pause ;
   unsigned int rx_pause ;
   u8 rss_key[40U] ;
   u32 rss_table[256U] ;
   u32 rss_options ;
   unsigned char mac_addr[6U] ;
   netdev_features_t netdev_features ;
   struct napi_struct napi ;
   struct xgbe_mmc_stats mmc_stats ;
   struct xgbe_ext_stats ext_stats ;
   unsigned long active_vlans[64U] ;
   struct clk *sysclk ;
   unsigned long sysclk_rate ;
   struct clk *ptpclk ;
   unsigned long ptpclk_rate ;
   spinlock_t tstamp_lock ;
   struct ptp_clock_info ptp_clock_info ;
   struct ptp_clock *ptp_clock ;
   struct hwtstamp_config tstamp_config ;
   struct cyclecounter tstamp_cc ;
   struct timecounter tstamp_tc ;
   unsigned int tstamp_addend ;
   struct work_struct tx_tstamp_work ;
   struct sk_buff *tx_tstamp_skb ;
   u64 tx_tstamp ;
   struct ieee_ets *ets ;
   struct ieee_pfc *pfc ;
   unsigned int q2tc_map[16U] ;
   unsigned int prio2q_map[8U] ;
   struct xgbe_hw_features hw_feat ;
   struct work_struct restart_work ;
   unsigned int power_down ;
   u32 msg_enable ;
   phy_interface_t phy_mode ;
   int phy_link ;
   int phy_speed ;
   struct xgbe_phy phy ;
   int mdio_mmd ;
   unsigned long link_check ;
   char an_name[48U] ;
   struct workqueue_struct *an_workqueue ;
   int an_irq ;
   struct work_struct an_irq_work ;
   unsigned int speed_set ;
   u32 serdes_blwc[3U] ;
   u32 serdes_cdr_rate[3U] ;
   u32 serdes_pq_skew[3U] ;
   u32 serdes_tx_amp[3U] ;
   u32 serdes_dfe_tap_cfg[3U] ;
   u32 serdes_dfe_tap_ena[3U] ;
   struct mutex an_mutex ;
   enum xgbe_an an_result ;
   enum xgbe_an an_state ;
   enum xgbe_rx kr_state ;
   enum xgbe_rx kx_state ;
   struct work_struct an_work ;
   unsigned int an_supported ;
   unsigned int parallel_detect ;
   unsigned int fec_ability ;
   unsigned long an_start ;
   unsigned int lpm_ctrl ;
   struct dentry *xgbe_debugfs ;
   unsigned int debugfs_xgmac_reg ;
   unsigned int debugfs_xpcs_mmd ;
   unsigned int debugfs_xpcs_reg ;
};

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_495 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_495 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct pdev_archdata {
   
};

#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};

#line 652 
struct mfd_cell;

#line 653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct platform_device {
   char const *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id const *id_entry ;
   char *driver_override ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};

#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device *) ;
   int (*remove)(struct platform_device *) ;
   void (*shutdown)(struct platform_device *) ;
   int (*suspend)(struct platform_device *, pm_message_t ) ;
   int (*resume)(struct platform_device *) ;
   struct device_driver driver ;
   struct platform_device_id const *id_table ;
   bool prevent_deferred_probe ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
typedef u64 acpi_io_address;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
typedef void *acpi_handle;

#line 644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
typedef u32 acpi_object_type;

#line 899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
struct __anonstruct_integer_649 {
   acpi_object_type type ;
   u64 value ;
};

#line 899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
struct __anonstruct_string_650 {
   acpi_object_type type ;
   u32 length ;
   char *pointer ;
};

#line 899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
struct __anonstruct_buffer_651 {
   acpi_object_type type ;
   u32 length ;
   u8 *pointer ;
};

#line 899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
struct __anonstruct_package_652 {
   acpi_object_type type ;
   u32 count ;
   union acpi_object *elements ;
};

#line 899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
struct __anonstruct_reference_653 {
   acpi_object_type type ;
   acpi_object_type actual_type ;
   acpi_handle handle ;
};

#line 899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
struct __anonstruct_processor_654 {
   acpi_object_type type ;
   u32 proc_id ;
   acpi_io_address pblk_address ;
   u32 pblk_length ;
};

#line 899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
struct __anonstruct_power_resource_655 {
   acpi_object_type type ;
   u32 system_level ;
   u32 resource_order ;
};

#line 899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/actypes.h"
union acpi_object {
   acpi_object_type type ;
   struct __anonstruct_integer_649 integer ;
   struct __anonstruct_string_650 string ;
   struct __anonstruct_buffer_651 buffer ;
   struct __anonstruct_package_652 package ;
   struct __anonstruct_reference_653 reference ;
   struct __anonstruct_processor_654 processor ;
   struct __anonstruct_power_resource_655 power_resource ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_driver;

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_hotplug_profile {
   struct kobject kobj ;
   int (*scan_dependent)(struct acpi_device *) ;
   void (*notify_online)(struct acpi_device *) ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) enabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) demand_offline : 1 ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_scan_handler {
   struct acpi_device_id const *ids ;
   struct list_head list_node ;
   bool (*match)(char *, struct acpi_device_id const **) ;
   int (*attach)(struct acpi_device *, struct acpi_device_id const *) ;
   void (*detach)(struct acpi_device *) ;
   void (*bind)(struct device *) ;
   void (*unbind)(struct device *) ;
   struct acpi_hotplug_profile hotplug ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_hotplug_context {
   struct acpi_device *self ;
   int (*notify)(struct acpi_device *, u32 ) ;
   void (*uevent)(struct acpi_device *, u32 ) ;
   void (*fixup)(struct acpi_device *) ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_ops {
   int (*add)(struct acpi_device *) ;
   int (*remove)(struct acpi_device *) ;
   void (*notify)(struct acpi_device *, u32 ) ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_driver {
   char name[80U] ;
   char class[80U] ;
   struct acpi_device_id const *ids ;
   unsigned int flags ;
   struct acpi_device_ops ops ;
   struct device_driver drv ;
   struct module *owner ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_status {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) present : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) enabled : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) show_in_ui : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) functional : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) battery_present : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(27))) reserved : 27 ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_flags {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) dynamic_status : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) removable : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ejectable : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) power_manageable : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) match_driver : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) initialized : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) visited : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hotplug_notify : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dock_station : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) of_compatible_ok : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) coherent_dma : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cca_seen : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(20))) reserved : 20 ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_dir {
   struct proc_dir_entry *entry ;
};

#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
typedef char acpi_bus_id[8U];

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
typedef unsigned long acpi_bus_address;

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
typedef char acpi_device_name[40U];

#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
typedef char acpi_device_class[20U];

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_pnp_type {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardware_id : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) bus_address : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) platform_id : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(29))) reserved : 29 ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_pnp {
   acpi_bus_id bus_id ;
   struct acpi_pnp_type type ;
   acpi_bus_address bus_address ;
   char *unique_id ;
   struct list_head ids ;
   acpi_device_name device_name ;
   acpi_device_class device_class ;
   union acpi_object *str_obj ;
};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_power_flags {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) explicit_get : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) power_resources : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inrush_current : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) power_removed : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_parent : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) dsw_present : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(26))) reserved : 26 ;
};

#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct __anonstruct_flags_656 {
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) valid : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) explicit_set : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(6))) reserved : 6 ;
};

#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_power_state {
   struct __anonstruct_flags_656 flags ;
   int power ;
   int latency ;
   struct list_head resources ;
};

#line 284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_power {
   int state ;
   struct acpi_device_power_flags flags ;
   struct acpi_device_power_state states[5U] ;
};

#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_perf_flags {
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reserved : 8 ;
};

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct __anonstruct_flags_657 {
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) valid : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) reserved : 7 ;
};

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_perf_state {
   struct __anonstruct_flags_657 flags ;
   u8 power ;
   u8 performance ;
   int latency ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_perf {
   int state ;
   struct acpi_device_perf_flags flags ;
   int state_count ;
   struct acpi_device_perf_state *states ;
};

#line 313  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_wakeup_flags {
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) valid : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) notifier_present : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) enabled : 1 ;
};

#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_wakeup_context {
   struct work_struct work ;
   struct device *dev ;
};

#line 326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_wakeup {
   acpi_handle gpe_device ;
   u64 gpe_number ;
   u64 sleep_state ;
   struct list_head resources ;
   struct acpi_device_wakeup_flags flags ;
   struct acpi_device_wakeup_context context ;
   struct wakeup_source *ws ;
   int prepare_count ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device_data {
   union acpi_object const *pointer ;
   union acpi_object const *properties ;
   union acpi_object const *of_compatible ;
};

#line 351 
struct acpi_gpio_mapping;

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
struct acpi_device {
   int device_type ;
   acpi_handle handle ;
   struct fwnode_handle fwnode ;
   struct acpi_device *parent ;
   struct list_head children ;
   struct list_head node ;
   struct list_head wakeup_list ;
   struct list_head del_list ;
   struct acpi_device_status status ;
   struct acpi_device_flags flags ;
   struct acpi_device_pnp pnp ;
   struct acpi_device_power power ;
   struct acpi_device_wakeup wakeup ;
   struct acpi_device_perf performance ;
   struct acpi_device_dir dir ;
   struct acpi_device_data data ;
   struct acpi_scan_handler *handler ;
   struct acpi_hotplug_context *hp ;
   struct acpi_driver *driver ;
   struct acpi_gpio_mapping const *driver_gpios ;
   void *driver_data ;
   struct device dev ;
   unsigned int physical_node_count ;
   unsigned int dep_unmet ;
   struct list_head physical_node_list ;
   struct mutex physical_node_lock ;
   void (*remove)(struct acpi_device *) ;
};

#line 653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/acpi.h"
struct acpi_gpio_params {
   unsigned int crs_entry_index ;
   unsigned int line_index ;
   bool active_low ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/acpi.h"
struct acpi_gpio_mapping {
   char const *name ;
   struct acpi_gpio_params const *data ;
   unsigned int size ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
enum tk_offsets {
    TK_OFFS_REAL = 0,
    TK_OFFS_BOOT = 1,
    TK_OFFS_TAI = 2,
    TK_OFFS_MAX = 3
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11826 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_15940 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_15940 socket_state;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct rtable;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqhandler.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_1963 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_1963 __anonCompField_bpf_prog_98 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_1974 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_1974 __anonCompField_dst_entry_99 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_1975 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_1975 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_1977 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1976 {
   __addrpair skc_addrpair ;
   struct __anonstruct_1977 __anonCompField___anonunion_1976_100 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1978 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_1980 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1979 {
   __portpair skc_portpair ;
   struct __anonstruct_1980 __anonCompField___anonunion_1979_103 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1981 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1982 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_1976 __anonCompField_sock_common_101 ;
   union __anonunion_1978 __anonCompField_sock_common_102 ;
   union __anonunion_1979 __anonCompField_sock_common_104 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_1981 __anonCompField_sock_common_105 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_1982 __anonCompField_sock_common_106 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_1983 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_1983 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_1986 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_1986 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_2011 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_2011 __anonCompField_inetpeer_addr_base_108 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_2012 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_2014 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_2013 {
   struct __anonstruct_2014 __anonCompField___anonunion_2013_110 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_2012 __anonCompField_inet_peer_109 ;
   union __anonunion_2013 __anonCompField_inet_peer_111 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 994  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
struct xgbe_stats {
   char stat_string[32U] ;
   int stat_size ;
   int stat_offset ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
enum xgbe_mtl_fifo_size {
    XGMAC_MTL_FIFO_SIZE_256 = 0,
    XGMAC_MTL_FIFO_SIZE_512 = 1,
    XGMAC_MTL_FIFO_SIZE_1K = 3,
    XGMAC_MTL_FIFO_SIZE_2K = 7,
    XGMAC_MTL_FIFO_SIZE_4K = 15,
    XGMAC_MTL_FIFO_SIZE_8K = 31,
    XGMAC_MTL_FIFO_SIZE_16K = 63,
    XGMAC_MTL_FIFO_SIZE_32K = 127,
    XGMAC_MTL_FIFO_SIZE_64K = 255,
    XGMAC_MTL_FIFO_SIZE_128K = 511,
    XGMAC_MTL_FIFO_SIZE_256K = 1023
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11722 {
    WORK_STRUCT_PENDING_BIT_0 = 0,
    WORK_STRUCT_DELAYED_BIT_0 = 1,
    WORK_STRUCT_PWQ_BIT_0 = 2,
    WORK_STRUCT_LINKED_BIT_0 = 3,
    WORK_STRUCT_STATIC_BIT_0 = 4,
    WORK_STRUCT_COLOR_SHIFT_0 = 5,
    WORK_STRUCT_COLOR_BITS_0 = 4,
    WORK_STRUCT_PENDING_0 = 1,
    WORK_STRUCT_DELAYED_0 = 2,
    WORK_STRUCT_PWQ_0 = 4,
    WORK_STRUCT_LINKED_0 = 8,
    WORK_STRUCT_STATIC_0 = 16,
    WORK_NR_COLORS_0 = 15,
    WORK_NO_COLOR_0 = 15,
    WORK_CPU_UNBOUND_0 = 8192,
    WORK_STRUCT_FLAG_BITS_0 = 9,
    WORK_OFFQ_FLAG_BASE_0 = 5,
    __WORK_OFFQ_CANCELING_0 = 5,
    WORK_OFFQ_CANCELING_0 = 32,
    WORK_OFFQ_FLAG_BITS_0 = 1,
    WORK_OFFQ_POOL_SHIFT_0 = 6,
    WORK_OFFQ_LEFT_0 = 58,
    WORK_OFFQ_POOL_BITS_0 = 31,
    WORK_OFFQ_POOL_NONE_0 = 2147483647,
    WORK_STRUCT_FLAG_MASK_0 = 511,
    WORK_STRUCT_WQ_DATA_MASK_0 = -512,
    WORK_STRUCT_NO_POOL_0 = 137438953408,
    WORK_BUSY_PENDING_0 = 1,
    WORK_BUSY_RUNNING_0 = 2,
    WORKER_DESC_LEN_0 = 24
};

#line 522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
enum xgbe_mode {
    XGBE_MODE_KR = 0,
    XGBE_MODE_KX = 1
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_character_driver_scenario_15 {
   struct file_operations *arg0 ;
   int signal_pending ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_platform_instance_19 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_16 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_22 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/fvtp/.tmp_xgbe-desc.c"
void ldv_inline_asm(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-desc.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device const *, char const * , ...);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memset(void *, int, size_t);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
void dump_page(struct page *, char const *);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
bool __get_page_tail(struct page *);


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void get_page(struct page *page)
{
  int tmp_0;
  int tmp_1;
  
#line 536 
  tmp_0 = PageTail((struct page const *)page);
  
#line 536 
  if ((long)(tmp_0 != 0) != 0L) {
    bool tmp;
    
#line 537 
    tmp = __get_page_tail(page);
    
#line 537 
    if ((long)((int)tmp != 0) != 0L) 
#line 538 
                                     goto return_label; else ;
  }
  else ;
  
#line 543 
  tmp_1 = atomic_read((atomic_t const *)(& page->__anonCompField_page_44.__anonCompField___anonstruct_156_43.__anonCompField___anonunion_158_42._count));
  
#line 543 
  if ((long)(tmp_1 <= 0) != 0L) {
    
#line 543 
    dump_page(page,"VM_BUG_ON_PAGE(");
    
#line 544 
    ldv_inline_asm();
    
#line 543 
    ;
  }
  else ;
  
#line 544 
  atomic_inc(& page->__anonCompField_page_44.__anonCompField___anonstruct_156_43.__anonCompField___anonunion_158_42._count);
  return_label: 
#line 545 
                return;
}


#line 569 
void put_page(struct page *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 3824 
void netdev_alert(struct net_device const *, char const * , ...);


#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
void xgbe_init_function_ptrs_desc(struct xgbe_desc_if *desc_if);


#line 120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static void xgbe_unmap_rdata(struct xgbe_prv_data *pdata, struct xgbe_ring_data *rdata);


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static void xgbe_free_ring(struct xgbe_prv_data *pdata, struct xgbe_ring *ring)
{
  struct xgbe_ring_data *rdata;
  unsigned int i;
  
#line 128 
  if (ring == (struct xgbe_ring *)0) 
#line 129 
                                     goto return_label; else ;
  
#line 131 
  if (ring->rdata != (struct xgbe_ring_data *)0) {
    
#line 132 
    i = 0U;
    
#line 132 
    goto ldv_44933;
    ldv_44932: 
#line 133 
    ;
    
#line 133 
    rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & i);
    
#line 134 
    xgbe_unmap_rdata(pdata,rdata);
    
#line 132 
    i += 1U;
    ldv_44933: 
#line 133 
    ;
    
#line 132 
    if (ring->rdesc_count > i) 
#line 134 
                               goto ldv_44932; else 
#line 137 
                                                    goto ldv_44934;
    ldv_44934: 
#line 138 
    ;
    
#line 137 
    kfree((void const *)ring->rdata);
    
#line 138 
    ring->rdata = (struct xgbe_ring_data *)0;
  }
  else ;
  
#line 141 
  if (ring->rx_hdr_pa.pages != (struct page *)0) {
    
#line 142 
    dma_unmap_page(pdata->dev,ring->rx_hdr_pa.pages_dma,(unsigned long)ring->rx_hdr_pa.pages_len,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 144 
    put_page(ring->rx_hdr_pa.pages);
    
#line 146 
    ring->rx_hdr_pa.pages = (struct page *)0;
    
#line 147 
    ring->rx_hdr_pa.pages_len = 0U;
    
#line 148 
    ring->rx_hdr_pa.pages_offset = 0U;
    
#line 149 
    ring->rx_hdr_pa.pages_dma = 0ULL;
  }
  else ;
  
#line 152 
  if (ring->rx_buf_pa.pages != (struct page *)0) {
    
#line 153 
    dma_unmap_page(pdata->dev,ring->rx_buf_pa.pages_dma,(unsigned long)ring->rx_buf_pa.pages_len,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 155 
    put_page(ring->rx_buf_pa.pages);
    
#line 157 
    ring->rx_buf_pa.pages = (struct page *)0;
    
#line 158 
    ring->rx_buf_pa.pages_len = 0U;
    
#line 159 
    ring->rx_buf_pa.pages_offset = 0U;
    
#line 160 
    ring->rx_buf_pa.pages_dma = 0ULL;
  }
  else ;
  
#line 163 
  if (ring->rdesc != (struct xgbe_ring_desc *)0) {
    
#line 164 
    dma_free_attrs(pdata->dev,(unsigned long)ring->rdesc_count * 16UL,(void *)ring->rdesc,ring->rdesc_dma,(struct dma_attrs *)0);
    
#line 168 
    ring->rdesc = (struct xgbe_ring_desc *)0;
  }
  else ;
  return_label: 
#line 170 
                return;
}


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static void xgbe_free_ring_resources(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 179 
  channel = pdata->channel;
  
#line 180 
  i = 0U;
  
#line 180 
  goto ldv_44941;
  ldv_44940: 
#line 181 
  ;
  
#line 181 
  xgbe_free_ring(pdata,channel->tx_ring);
  
#line 182 
  xgbe_free_ring(pdata,channel->rx_ring);
  
#line 180 
  i += 1U;
  
#line 180 
  channel += 1;
  ldv_44941: 
#line 181 
  ;
  
#line 180 
  if (pdata->channel_count > i) 
#line 182 
                                goto ldv_44940; else 
#line 185 
                                                     goto ldv_44942;
  ldv_44942: 
#line 186 
  ;
  
#line 187 
  return;
}


#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static int xgbe_init_ring(struct xgbe_prv_data *pdata, struct xgbe_ring *ring, unsigned int rdesc_count)
{
  int __retres;
  
#line 193 
  if (ring == (struct xgbe_ring *)0) {
    
#line 194 
    __retres = 0;
    
#line 194 
    goto return_label;
  }
  else ;
  
#line 197 
  ring->rdesc_count = rdesc_count;
  
#line 198 
  ring->rdesc = (struct xgbe_ring_desc *)dma_alloc_attrs(pdata->dev,(unsigned long)rdesc_count * 16UL,& ring->rdesc_dma,208U,(struct dma_attrs *)0);
  
#line 202 
  if (ring->rdesc == (struct xgbe_ring_desc *)0) {
    
#line 203 
    __retres = -12;
    
#line 203 
    goto return_label;
  }
  else ;
  
#line 206 
  ring->rdata = (struct xgbe_ring_data *)kcalloc((unsigned long)rdesc_count,224UL,208U);
  
#line 208 
  if (ring->rdata == (struct xgbe_ring_data *)0) {
    
#line 209 
    __retres = -12;
    
#line 209 
    goto return_label;
  }
  else ;
  
#line 211 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 211 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_init_ring", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c", .format = "rdesc=%p, rdesc_dma=%pad, rdata=%p\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))213U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 211 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 211 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"rdesc=%p, rdesc_dma=%pad, rdata=%p\n",ring->rdesc,& ring->rdesc_dma,ring->rdata); else ;
  }
  else ;
  
#line 217 
  __retres = 0;
  return_label: 
#line 217 
                return __retres;
}


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static int xgbe_alloc_ring_resources(struct xgbe_prv_data *pdata)
{
  int __retres;
  struct xgbe_channel *channel;
  unsigned int i;
  int ret;
  
#line 228 
  channel = pdata->channel;
  
#line 229 
  i = 0U;
  
#line 229 
  goto ldv_44961;
  ldv_44960: 
#line 230 
  ;
  
#line 230 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 230 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_alloc_ring_resources", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c", .format = "%s - Tx ring:\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))231U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 230 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 230 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"%s - Tx ring:\n",(char *)(& channel->name)); else ;
  }
  else ;
  
#line 233 
  ret = xgbe_init_ring(pdata,channel->tx_ring,pdata->tx_desc_count);
  
#line 235 
  if (ret != 0) {
    
#line 236 
    netdev_alert((struct net_device const *)pdata->netdev,"error initializing Tx ring\n");
    
#line 238 
    goto err_ring;
  }
  else ;
  
#line 241 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 241 
    struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_alloc_ring_resources", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c", .format = "%s - Rx ring:\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))242U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 241 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 241 
                                                          __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)pdata->netdev,"%s - Rx ring:\n",(char *)(& channel->name)); else ;
  }
  else ;
  
#line 244 
  ret = xgbe_init_ring(pdata,channel->rx_ring,pdata->rx_desc_count);
  
#line 246 
  if (ret != 0) {
    
#line 247 
    netdev_alert((struct net_device const *)pdata->netdev,"error initializing Rx ring\n");
    
#line 249 
    goto err_ring;
  }
  else ;
  
#line 229 
  i += 1U;
  
#line 229 
  channel += 1;
  ldv_44961: 
#line 230 
  ;
  
#line 229 
  if (pdata->channel_count > i) 
#line 231 
                                goto ldv_44960; else 
#line 234 
                                                     goto ldv_44962;
  ldv_44962: 
#line 235 
  ;
  
#line 255 
  __retres = 0;
  
#line 255 
  goto return_label;
  err_ring: 
#line 257 
  ;
  
#line 258 
  xgbe_free_ring_resources(pdata);
  
#line 260 
  __retres = ret;
  return_label: 
#line 260 
                return __retres;
}


#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static int xgbe_alloc_pages(struct xgbe_prv_data *pdata, struct xgbe_page_alloc *pa, gfp_t gfp, int order)
{
  int __retres;
  dma_addr_t pages_dma;
  int ret;
  
#line 266 
  struct page *pages = (struct page *)0;
  
#line 271 
  gfp |= 17152U;
  
#line 272 
  goto ldv_44974;
  ldv_44973: 
#line 273 
  ;
  
#line 273 
  pages = alloc_pages(gfp,(unsigned int)order);
  
#line 274 
  if (pages != (struct page *)0) 
#line 275 
                                 goto ldv_44972; else ;
  
#line 277 
  order -= 1;
  ldv_44974: 
#line 278 
  ;
  
#line 272 
  if (order >= 0) 
#line 274 
                  goto ldv_44973; else 
#line 277 
                                       goto ldv_44972;
  ldv_44972: 
#line 278 
  ;
  
#line 279 
  if (pages == (struct page *)0) {
    
#line 280 
    __retres = -12;
    
#line 280 
    goto return_label;
  }
  else ;
  
#line 283 
  pages_dma = dma_map_page(pdata->dev,pages,0UL,4096UL << order,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 285 
  ret = dma_mapping_error(pdata->dev,pages_dma);
  
#line 286 
  if (ret != 0) {
    
#line 287 
    put_page(pages);
    
#line 288 
    __retres = ret;
    
#line 288 
    goto return_label;
  }
  else ;
  
#line 291 
  pa->pages = pages;
  
#line 292 
  pa->pages_len = (unsigned int)(4096UL << order);
  
#line 293 
  pa->pages_offset = 0U;
  
#line 294 
  pa->pages_dma = pages_dma;
  
#line 296 
  __retres = 0;
  return_label: 
#line 296 
                return __retres;
}


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static void xgbe_set_buffer_data(struct xgbe_buffer_data *bd, struct xgbe_page_alloc *pa, unsigned int len)
{
  
#line 303 
  get_page(pa->pages);
  
#line 304 
  bd->pa = *pa;
  
#line 306 
  bd->dma_base = pa->pages_dma;
  
#line 307 
  bd->dma_off = (unsigned long)pa->pages_offset;
  
#line 308 
  bd->dma_len = len;
  
#line 310 
  pa->pages_offset += len;
  
#line 311 
  if (pa->pages_offset + len > pa->pages_len) {
    
#line 313 
    bd->pa_unmap = *pa;
    
#line 316 
    pa->pages = (struct page *)0;
    
#line 317 
    pa->pages_len = 0U;
    
#line 318 
    pa->pages_offset = 0U;
    
#line 319 
    pa->pages_dma = 0ULL;
  }
  else ;
  
#line 321 
  return;
}


#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static int xgbe_map_rx_buffer(struct xgbe_prv_data *pdata, struct xgbe_ring *ring, struct xgbe_ring_data *rdata)
{
  int __retres;
  int order;
  int ret;
  
#line 329 
  if (ring->rx_hdr_pa.pages == (struct page *)0) {
    
#line 330 
    ret = xgbe_alloc_pages(pdata,& ring->rx_hdr_pa,32U,0);
    
#line 331 
    if (ret != 0) {
      
#line 332 
      __retres = ret;
      
#line 332 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 335 
  if (ring->rx_buf_pa.pages == (struct page *)0) {
    int tmp_0;
    {
      int tmp;
      
#line 336 
      int __max1 = 2;
      
#line 336 
      int __max2 = 0;
      
#line 336 
      if (__max1 > __max2) 
#line 336 
                           tmp = __max1; else 
#line 336 
                                              tmp = __max2;
      
#line 336 
      tmp_0 = tmp;
    }
    
#line 336 
    order = tmp_0;
    
#line 337 
    ret = xgbe_alloc_pages(pdata,& ring->rx_buf_pa,32U,order);
    
#line 339 
    if (ret != 0) {
      
#line 340 
      __retres = ret;
      
#line 340 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 344 
  xgbe_set_buffer_data(& rdata->rx.hdr,& ring->rx_hdr_pa,256U);
  
#line 348 
  xgbe_set_buffer_data(& rdata->rx.buf,& ring->rx_buf_pa,pdata->rx_buf_size);
  
#line 351 
  __retres = 0;
  return_label: 
#line 351 
                return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static void xgbe_wrapper_tx_descriptor_init(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  struct xgbe_ring *ring;
  struct xgbe_ring_data *rdata;
  struct xgbe_ring_desc *rdesc;
  dma_addr_t rdesc_dma;
  unsigned int i;
  unsigned int j;
  
#line 356 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 366 
  channel = pdata->channel;
  
#line 367 
  i = 0U;
  
#line 367 
  goto ldv_45006;
  ldv_45005: 
#line 368 
  ;
  
#line 368 
  ring = channel->tx_ring;
  
#line 369 
  if (ring == (struct xgbe_ring *)0) 
#line 370 
                                     goto ldv_45001; else ;
  
#line 372 
  rdesc = ring->rdesc;
  
#line 373 
  rdesc_dma = ring->rdesc_dma;
  
#line 375 
  j = 0U;
  
#line 375 
  goto ldv_45003;
  ldv_45002: 
#line 376 
  ;
  
#line 376 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & j);
  
#line 378 
  rdata->rdesc = rdesc;
  
#line 379 
  rdata->rdesc_dma = rdesc_dma;
  
#line 381 
  rdesc += 1;
  
#line 382 
  rdesc_dma += 16ULL;
  
#line 375 
  j += 1U;
  ldv_45003: 
#line 376 
  ;
  
#line 375 
  if (ring->rdesc_count > j) 
#line 377 
                             goto ldv_45002; else 
#line 380 
                                                  goto ldv_45004;
  ldv_45004: 
#line 381 
  ;
  
#line 385 
  ring->cur = 0U;
  
#line 386 
  ring->dirty = 0U;
  
#line 387 
  memset((void *)(& ring->__anonCompField_xgbe_ring_96.tx),0,12UL);
  
#line 389 
  (*(hw_if->tx_desc_init))(channel);
  
#line 367 
  i += 1U;
  
#line 367 
  channel += 1;
  ldv_45006: 
#line 368 
  ;
  
#line 367 
  if (pdata->channel_count > i) 
#line 369 
                                goto ldv_45005; else 
#line 372 
                                                     goto ldv_45001;
  ldv_45001: 
#line 373 
  ;
  
#line 374 
  return;
}


#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static void xgbe_wrapper_rx_descriptor_init(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  struct xgbe_ring *ring;
  struct xgbe_ring_desc *rdesc;
  struct xgbe_ring_data *rdata;
  dma_addr_t rdesc_dma;
  unsigned int i;
  unsigned int j;
  int tmp;
  
#line 397 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 407 
  channel = pdata->channel;
  
#line 408 
  i = 0U;
  
#line 408 
  goto ldv_45023;
  ldv_45022: 
#line 409 
  ;
  
#line 409 
  ring = channel->rx_ring;
  
#line 410 
  if (ring == (struct xgbe_ring *)0) 
#line 411 
                                     goto ldv_45018; else ;
  
#line 413 
  rdesc = ring->rdesc;
  
#line 414 
  rdesc_dma = ring->rdesc_dma;
  
#line 416 
  j = 0U;
  
#line 416 
  goto ldv_45021;
  ldv_45020: 
#line 417 
  ;
  
#line 417 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & j);
  
#line 419 
  rdata->rdesc = rdesc;
  
#line 420 
  rdata->rdesc_dma = rdesc_dma;
  
#line 422 
  tmp = xgbe_map_rx_buffer(pdata,ring,rdata);
  
#line 422 
  if (tmp != 0) 
#line 423 
                goto ldv_45019; else ;
  
#line 425 
  rdesc += 1;
  
#line 426 
  rdesc_dma += 16ULL;
  
#line 416 
  j += 1U;
  ldv_45021: 
#line 417 
  ;
  
#line 416 
  if (ring->rdesc_count > j) 
#line 418 
                             goto ldv_45020; else 
#line 421 
                                                  goto ldv_45019;
  ldv_45019: 
#line 422 
  ;
  
#line 429 
  ring->cur = 0U;
  
#line 430 
  ring->dirty = 0U;
  
#line 432 
  (*(hw_if->rx_desc_init))(channel);
  
#line 408 
  i += 1U;
  
#line 408 
  channel += 1;
  ldv_45023: 
#line 409 
  ;
  
#line 408 
  if (pdata->channel_count > i) 
#line 410 
                                goto ldv_45022; else 
#line 413 
                                                     goto ldv_45018;
  ldv_45018: 
#line 414 
  ;
  
#line 415 
  return;
}


#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static void xgbe_unmap_rdata(struct xgbe_prv_data *pdata, struct xgbe_ring_data *rdata)
{
  
#line 441 
  if (rdata->skb_dma != 0ULL) {
    
#line 442 
    if (rdata->mapped_as_page != 0U) 
#line 443 
                                     dma_unmap_page(pdata->dev,rdata->skb_dma,(unsigned long)rdata->skb_dma_len,(enum dma_data_direction)DMA_TO_DEVICE); else 
                                                                    
#line 446 
                                                                    dma_unmap_single_attrs(pdata->dev,rdata->skb_dma,(unsigned long)rdata->skb_dma_len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 449 
    rdata->skb_dma = 0ULL;
    
#line 450 
    rdata->skb_dma_len = 0U;
  }
  else ;
  
#line 453 
  if (rdata->skb != (struct sk_buff *)0) {
    
#line 454 
    dev_kfree_skb_any(rdata->skb);
    
#line 455 
    rdata->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 458 
  if (rdata->rx.hdr.pa.pages != (struct page *)0) 
#line 459 
                                                  put_page(rdata->rx.hdr.pa.pages); else ;
  
#line 461 
  if (rdata->rx.hdr.pa_unmap.pages != (struct page *)0) {
    
#line 462 
    dma_unmap_page(pdata->dev,rdata->rx.hdr.pa_unmap.pages_dma,(unsigned long)rdata->rx.hdr.pa_unmap.pages_len,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 465 
    put_page(rdata->rx.hdr.pa_unmap.pages);
  }
  else ;
  
#line 468 
  if (rdata->rx.buf.pa.pages != (struct page *)0) 
#line 469 
                                                  put_page(rdata->rx.buf.pa.pages); else ;
  
#line 471 
  if (rdata->rx.buf.pa_unmap.pages != (struct page *)0) {
    
#line 472 
    dma_unmap_page(pdata->dev,rdata->rx.buf.pa_unmap.pages_dma,(unsigned long)rdata->rx.buf.pa_unmap.pages_len,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 475 
    put_page(rdata->rx.buf.pa_unmap.pages);
  }
  else ;
  
#line 478 
  memset((void *)(& rdata->tx),0,8UL);
  
#line 479 
  memset((void *)(& rdata->rx),0,152UL);
  
#line 481 
  rdata->mapped_as_page = 0U;
  
#line 483 
  if (rdata->state_saved != 0U) {
    
#line 484 
    rdata->state_saved = 0U;
    
#line 485 
    rdata->state.skb = (struct sk_buff *)0;
    
#line 486 
    rdata->state.len = 0U;
    
#line 487 
    rdata->state.error = 0U;
  }
  else ;
  
#line 489 
  return;
}


#line 491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
static int xgbe_map_tx_skb(struct xgbe_channel *channel, struct sk_buff *skb)
{
  int __retres;
  struct xgbe_ring_data *rdata;
  struct xgbe_packet_data *packet;
  struct skb_frag_struct *frag;
  dma_addr_t skb_dma;
  unsigned int start_index;
  unsigned int cur_index;
  unsigned int offset;
  unsigned int tso;
  unsigned int vlan;
  unsigned int datalen;
  unsigned int len;
  unsigned int i;
  unsigned int tmp_0;
  unsigned int tmp_2;
  int tmp_3;
  unsigned char *tmp_4;
  unsigned int tmp_6;
  int tmp_7;
  unsigned char *tmp_8;
  unsigned int tmp_9;
  
#line 493 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 494 
  struct xgbe_ring *ring = channel->tx_ring;
  
#line 505 
  offset = 0U;
  
#line 506 
  start_index = ring->cur;
  
#line 507 
  cur_index = ring->cur;
  
#line 509 
  packet = & ring->packet_data;
  
#line 510 
  packet->rdesc_count = 0U;
  
#line 511 
  packet->length = 0U;
  
#line 513 
  tso = (packet->attributes >> 1) & 1U;
  
#line 515 
  vlan = (packet->attributes >> 2) & 1U;
  
#line 519 
  if ((tso != 0U && (int)packet->mss != (int)ring->__anonCompField_xgbe_ring_96.tx.cur_mss) || (vlan != 0U && (int)packet->vlan_ctag != (int)ring->__anonCompField_xgbe_ring_96.tx.cur_vlan_ctag)) 
    
#line 521 
    cur_index += 1U; else ;
  
#line 522 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & cur_index);
  
#line 524 
  if (tso != 0U) {
    int tmp;
    
#line 526 
    skb_dma = dma_map_single_attrs(pdata->dev,(void *)skb->data,(unsigned long)packet->header_len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 528 
    tmp = dma_mapping_error(pdata->dev,skb_dma);
    
#line 528 
    if (tmp != 0) {
      
#line 529 
      netdev_alert((struct net_device const *)pdata->netdev,"dma_map_single failed\n");
      
#line 530 
      goto err_out;
    }
    else ;
    
#line 532 
    rdata->skb_dma = skb_dma;
    
#line 533 
    rdata->skb_dma_len = packet->header_len;
    
#line 534 
    if ((pdata->msg_enable & 256U) != 0U) {
      
#line 534 
      struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_map_tx_skb", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c", .format = "skb header: index=%u, dma=%pad, len=%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))536U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 534 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 534 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"skb header: index=%u, dma=%pad, len=%u\n",cur_index,& skb_dma,packet->header_len); else ;
    }
    else ;
    
#line 538 
    offset = packet->header_len;
    
#line 540 
    packet->length += packet->header_len;
    
#line 542 
    cur_index += 1U;
    
#line 543 
    rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & cur_index);
  }
  else ;
  
#line 547 
  tmp_0 = skb_headlen((struct sk_buff const *)skb);
  
#line 547 
  datalen = tmp_0 - offset;
  
#line 547 
  goto ldv_45054;
  ldv_45053: 
#line 548 
  ;
  {
    unsigned int tmp_1;
    
#line 548 
    unsigned int __min1 = datalen;
    
#line 548 
    unsigned int __min2 = 16320U;
    
#line 548 
    if (__min1 < __min2) 
#line 548 
                         tmp_1 = __min1; else 
#line 548 
                                              tmp_1 = __min2;
    
#line 548 
    tmp_2 = tmp_1;
  }
  
#line 548 
  len = tmp_2;
  
#line 550 
  skb_dma = dma_map_single_attrs(pdata->dev,(void *)(skb->data + offset),(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 552 
  tmp_3 = dma_mapping_error(pdata->dev,skb_dma);
  
#line 552 
  if (tmp_3 != 0) {
    
#line 553 
    netdev_alert((struct net_device const *)pdata->netdev,"dma_map_single failed\n");
    
#line 554 
    goto err_out;
  }
  else ;
  
#line 556 
  rdata->skb_dma = skb_dma;
  
#line 557 
  rdata->skb_dma_len = len;
  
#line 558 
  if ((pdata->msg_enable & 256U) != 0U) {
    
#line 558 
    struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_map_tx_skb", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c", .format = "skb data: index=%u, dma=%pad, len=%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))560U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 558 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 558 
                                                          __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)pdata->netdev,"skb data: index=%u, dma=%pad, len=%u\n",cur_index,& skb_dma,len); else ;
  }
  else ;
  
#line 562 
  datalen -= len;
  
#line 563 
  offset += len;
  
#line 565 
  packet->length += len;
  
#line 567 
  cur_index += 1U;
  
#line 568 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & cur_index);
  ldv_45054: 
#line 569 
  ;
  
#line 547 
  if (datalen != 0U) 
#line 549 
                     goto ldv_45053; else 
#line 552 
                                          goto ldv_45055;
  ldv_45055: 
#line 553 
  ;
  
#line 571 
  i = 0U;
  
#line 571 
  goto ldv_45065;
  ldv_45064: 
#line 572 
  ;
  
#line 572 
  if ((pdata->msg_enable & 256U) != 0U) {
    
#line 572 
    struct _ddebug descriptor_1 = {.modname = "amd_xgbe", .function = "xgbe_map_tx_skb", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c", .format = "mapping frag %u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))573U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 572 
    if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 572 
                                                          __dynamic_netdev_dbg(& descriptor_1,(struct net_device const *)pdata->netdev,"mapping frag %u\n",i); else ;
  }
  else ;
  
#line 575 
  tmp_4 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 575 
  frag = & ((struct skb_shared_info *)tmp_4)->frags[i];
  
#line 576 
  offset = 0U;
  
#line 578 
  datalen = skb_frag_size((skb_frag_t const *)frag);
  
#line 578 
  goto ldv_45062;
  ldv_45061: 
#line 579 
  ;
  {
    unsigned int tmp_5;
    
#line 579 
    unsigned int __min1_0 = datalen;
    
#line 579 
    unsigned int __min2_0 = 16320U;
    
#line 579 
    if (__min1_0 < __min2_0) 
#line 579 
                             tmp_5 = __min1_0; else 
#line 579 
                                                    tmp_5 = __min2_0;
    
#line 579 
    tmp_6 = tmp_5;
  }
  
#line 579 
  len = tmp_6;
  
#line 582 
  skb_dma = skb_frag_dma_map(pdata->dev,(skb_frag_t const *)frag,(unsigned long)offset,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE);
  
#line 584 
  tmp_7 = dma_mapping_error(pdata->dev,skb_dma);
  
#line 584 
  if (tmp_7 != 0) {
    
#line 585 
    netdev_alert((struct net_device const *)pdata->netdev,"skb_frag_dma_map failed\n");
    
#line 587 
    goto err_out;
  }
  else ;
  
#line 589 
  rdata->skb_dma = skb_dma;
  
#line 590 
  rdata->skb_dma_len = len;
  
#line 591 
  rdata->mapped_as_page = 1U;
  
#line 592 
  if ((pdata->msg_enable & 256U) != 0U) {
    
#line 592 
    struct _ddebug descriptor_2 = {.modname = "amd_xgbe", .function = "xgbe_map_tx_skb", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c", .format = "skb frag: index=%u, dma=%pad, len=%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))594U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 592 
    if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 592 
                                                          __dynamic_netdev_dbg(& descriptor_2,(struct net_device const *)pdata->netdev,"skb frag: index=%u, dma=%pad, len=%u\n",cur_index,& skb_dma,len); else ;
  }
  else ;
  
#line 596 
  datalen -= len;
  
#line 597 
  offset += len;
  
#line 599 
  packet->length += len;
  
#line 601 
  cur_index += 1U;
  
#line 602 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & cur_index);
  ldv_45062: 
#line 603 
  ;
  
#line 578 
  if (datalen != 0U) 
#line 580 
                     goto ldv_45061; else 
#line 583 
                                          goto ldv_45063;
  ldv_45063: 
#line 584 
  ;
  
#line 571 
  i += 1U;
  ldv_45065: 
#line 572 
  ;
  
#line 571 
  tmp_8 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 571 
  ;
  
#line 571 
  if ((unsigned int)((struct skb_shared_info *)tmp_8)->nr_frags > i) 
    
#line 573 
    goto ldv_45064; else 
#line 576 
                         goto ldv_45066;
  ldv_45066: 
#line 577 
  ;
  
#line 610 
  rdata = ring->rdata + ((cur_index + 4294967295U) & (ring->rdesc_count + 4294967295U));
  
#line 611 
  rdata->skb = skb;
  
#line 614 
  packet->rdesc_count = cur_index - start_index;
  
#line 618 
  __retres = (int)packet->rdesc_count;
  
#line 618 
  goto return_label;
  err_out: 
#line 620 
  ;
  
#line 621 
  goto ldv_45068;
  ldv_45067: 
#line 622 
  ;
  
#line 622 
  tmp_9 = start_index;
  
#line 622 
  start_index += 1U;
  
#line 622 
  rdata = ring->rdata + (tmp_9 & (ring->rdesc_count + 4294967295U));
  
#line 623 
  xgbe_unmap_rdata(pdata,rdata);
  ldv_45068: 
#line 624 
  ;
  
#line 621 
  if (start_index < cur_index) 
#line 623 
                               goto ldv_45067; else 
#line 626 
                                                    goto ldv_45069;
  ldv_45069: 
#line 627 
  ;
  
#line 628 
  __retres = 0;
  return_label: 
#line 628 
                return __retres;
}


#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-desc.c"
void xgbe_init_function_ptrs_desc(struct xgbe_desc_if *desc_if)
{
  
#line 635 
  desc_if->alloc_ring_resources = & xgbe_alloc_ring_resources;
  
#line 636 
  desc_if->free_ring_resources = & xgbe_free_ring_resources;
  
#line 637 
  desc_if->map_tx_skb = & xgbe_map_tx_skb;
  
#line 638 
  desc_if->map_rx_buffer = & xgbe_map_rx_buffer;
  
#line 639 
  desc_if->unmap_rdata = & xgbe_unmap_rdata;
  
#line 640 
  desc_if->wrapper_tx_desc_init = & xgbe_wrapper_tx_descriptor_init;
  
#line 641 
  desc_if->wrapper_rx_desc_init = & xgbe_wrapper_rx_descriptor_init;
  
#line 642 
  return;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-desc.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 124 
  ldv_atomic_inc(v);
  
#line 125 
  return;
}


#line 599  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-desc.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 602 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 602 
  return tmp;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  
#line 47 
  unsigned long res = 0UL;
  
#line 48 
  ldv_inline_asm();
  
#line 58 
  return res;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  unsigned long tmp_0;
  
#line 80 
  if (0 != 0) 
#line 80 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 8) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 8) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 16) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 16) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 24) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 24) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 128ULL) != 0ULL)))) + (((unsigned int)((((((((((unsigned long long)(w >> 32) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 32) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 40) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 40) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 48) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 48) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 56) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 56) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 128ULL) != 0ULL))))); else 
                                                                    
#line 80 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  
#line 80 
  return tmp_0;
}


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_dev_dbg(struct _ddebug *, struct device const *, char const * , ...);


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 67 
int strcmp(char const *, char const *);


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strchr(char const *, int);


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
int __bitmap_weight(unsigned long const *, unsigned int);


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long const *src, unsigned int nbits)
{
  int __retres;
  int tmp_0;
  
#line 300 
  if (0 != 0 && nbits <= 64U) {
    unsigned long tmp;
    
#line 301 
    tmp = hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
    
#line 301 
    __retres = (int)tmp;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 302 
  tmp_0 = __bitmap_weight(src,nbits);
  
#line 302 
  __retres = tmp_0;
  return_label: 
#line 302 
                return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
extern int nr_cpu_ids;


#line 89 
extern struct cpumask const * const cpu_online_mask;


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_weight(struct cpumask const *srcp)
{
  unsigned int __retres;
  int tmp;
  
#line 476 
  tmp = bitmap_weight((unsigned long const *)(& srcp->bits),(unsigned int)nr_cpu_ids);
  
#line 476 
  __retres = (unsigned int)tmp;
  
#line 476 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct workqueue_struct *__alloc_workqueue_key(char const *, unsigned int, int, struct lock_class_key *, char const * , ...);


#line 421 
void destroy_workqueue(struct workqueue_struct *);


#line 436 
void flush_workqueue(struct workqueue_struct *);


#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ioport.h"
__inline static unsigned long resource_type(struct resource const *res)
{
  unsigned long __retres;
  
#line 170 
  __retres = res->flags & 7936UL;
  
#line 170 
  return __retres;
}


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/acpi.h"
extern int acpi_disabled;


#line 670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void *devm_ioremap_resource(struct device *, struct resource *);


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1045 
struct device *get_device(struct device *);


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1087 
void dev_notice(struct device const *, char const * , ...);


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct resource *platform_get_resource(struct platform_device *, unsigned int, unsigned int);


#line 53 
int platform_get_irq(struct platform_device *, unsigned int);


#line 172 
void platform_device_put(struct platform_device *);


#line 197 
static int ldv___platform_driver_register_79(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2);


#line 202 
static void ldv_platform_driver_unregister_80(struct platform_driver *ldv_func_arg1);


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
__inline static void *platform_get_drvdata(struct platform_device const *pdev)
{
  void *tmp;
  
#line 215 
  tmp = dev_get_drvdata(& pdev->dev);
  
#line 215 
  return tmp;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
__inline static void platform_set_drvdata(struct platform_device *pdev, void *data)
{
  
#line 221 
  dev_set_drvdata(& pdev->dev,data);
  
#line 222 
  return;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_mask_and_coherent(struct device *dev, u64 mask)
{
  
#line 118 
  int rc = dma_set_mask(dev,mask);
  
#line 119 
  if (rc == 0) 
#line 120 
               dma_set_coherent_mask(dev,mask); else ;
  
#line 121 
  return rc;
}


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/property.h"
bool device_property_present(struct device *, char const *);


#line 31 
int device_property_read_u8_array(struct device *, char const *, u8 *, size_t);


#line 35 
int device_property_read_u32_array(struct device *, char const *, u32 *, size_t);


#line 41 
int device_property_read_string(struct device *, char const *, char const **);


#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/property.h"
__inline static int device_property_read_u32(struct device *dev, char const *propname, u32 *val)
{
  int tmp;
  
#line 95 
  tmp = device_property_read_u32_array(dev,propname,val,1UL);
  
#line 95 
  return tmp;
}


#line 167 
bool device_dma_is_coherent(struct device *);


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
void of_node_put(struct device_node *);


#line 324 
struct device_node *of_parse_phandle(struct device_node const *, char const *, int);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
__inline static char const *phy_modes(phy_interface_t interface)
{
  char const *__retres;
  
#line 89 
  switch ((unsigned int)interface) {
    case (unsigned int)0: 
#line 90 
    ;
    
#line 91 
    __retres = "";
    
#line 91 
    goto return_label;
    case (unsigned int)1: 
#line 92 
    ;
    
#line 93 
    __retres = "mii";
    
#line 93 
    goto return_label;
    case (unsigned int)2: 
#line 94 
    ;
    
#line 95 
    __retres = "gmii";
    
#line 95 
    goto return_label;
    case (unsigned int)3: 
#line 96 
    ;
    
#line 97 
    __retres = "sgmii";
    
#line 97 
    goto return_label;
    case (unsigned int)4: 
#line 98 
    ;
    
#line 99 
    __retres = "tbi";
    
#line 99 
    goto return_label;
    case (unsigned int)5: 
#line 100 
    ;
    
#line 101 
    __retres = "rev-mii";
    
#line 101 
    goto return_label;
    case (unsigned int)6: 
#line 102 
    ;
    
#line 103 
    __retres = "rmii";
    
#line 103 
    goto return_label;
    case (unsigned int)7: 
#line 104 
    ;
    
#line 105 
    __retres = "rgmii";
    
#line 105 
    goto return_label;
    case (unsigned int)8: 
#line 106 
    ;
    
#line 107 
    __retres = "rgmii-id";
    
#line 107 
    goto return_label;
    case (unsigned int)9: 
#line 108 
    ;
    
#line 109 
    __retres = "rgmii-rxid";
    
#line 109 
    goto return_label;
    case (unsigned int)10: 
#line 110 
    ;
    
#line 111 
    __retres = "rgmii-txid";
    
#line 111 
    goto return_label;
    case (unsigned int)11: 
#line 112 
    ;
    
#line 113 
    __retres = "rtbi";
    
#line 113 
    goto return_label;
    case (unsigned int)12: 
#line 114 
    ;
    
#line 115 
    __retres = "smii";
    
#line 115 
    goto return_label;
    case (unsigned int)13: 
#line 116 
    ;
    
#line 117 
    __retres = "xgmii";
    
#line 117 
    goto return_label;
    case (unsigned int)14: 
#line 118 
    ;
    
#line 119 
    __retres = "moca";
    
#line 119 
    goto return_label;
    case (unsigned int)15: 
#line 120 
    ;
    
#line 121 
    __retres = "qsgmii";
    
#line 121 
    goto return_label;
    default: 
#line 122 
    ;
    
#line 123 
    __retres = "unknown";
    
#line 123 
    goto return_label;
  }
  return_label: 
#line 89 
                return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2205 
static void ldv_free_netdev_76(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_78(struct net_device *ldv_func_arg1);


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2867 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);


#line 2870 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);


#line 2892 
int netif_get_num_default_rss_queues(void);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3355 
static int ldv_register_netdev_74(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_75(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_77(struct net_device *ldv_func_arg1);


#line 3549 
void netdev_rss_key_fill(void *, size_t);


#line 3796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static char const *netdev_name(struct net_device const *dev)
{
  char const *__retres;
  
#line 3798 
  if ((int)dev->name[0] == 0) {
    
#line 3799 
    __retres = "(unnamed net_device)";
    
#line 3799 
    goto return_label;
  }
  else {
    char *tmp;
    
#line 3798 
    tmp = strchr((char const *)(& dev->name),37);
    
#line 3798 
    if (tmp != (char *)0) {
      
#line 3799 
      __retres = "(unnamed net_device)";
      
#line 3799 
      goto return_label;
    }
    else ;
  }
  
#line 3800 
  __retres = (char const *)(& dev->name);
  return_label: 
#line 3800 
                return __retres;
}


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3832 
void netdev_notice(struct net_device const *, char const * , ...);


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
static struct net_device *ldv_alloc_etherdev_mqs_73(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_platform.h"
struct platform_device *of_find_device_by_node(struct device_node *);


#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
struct clk *devm_clk_get(struct device *, char const *);


#line 272 
unsigned long clk_get_rate(struct clk *);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
__inline static bool is_acpi_node(struct fwnode_handle *fwnode)
{
  bool __retres;
  
#line 420 
  __retres = (_Bool)((fwnode != (struct fwnode_handle *)0 && fwnode->type == (unsigned int)FWNODE_ACPI) != 0);
  
#line 420 
  return __retres;
}


#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/acpi/acpi_bus.h"
__inline static struct acpi_device *to_acpi_node(struct fwnode_handle *fwnode)
{
  struct acpi_device *tmp_1;
  bool tmp;
  
#line 426 
  tmp = is_acpi_node(fwnode);
  
#line 426 
  if ((int)tmp != 0) {
    struct acpi_device *tmp_0;
    {
      
#line 426 
      struct fwnode_handle const *__mptr = (struct fwnode_handle const *)fwnode;
      
#line 426 
      tmp_0 = (struct acpi_device *)__mptr + 18446744073709551600U;
    }
    
#line 426 
    tmp_1 = tmp_0;
  }
  else 
#line 426 
       tmp_1 = (struct acpi_device *)0;
  
#line 426 
  return tmp_1;
}


#line 969  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
void xgbe_init_function_ptrs_dev(struct xgbe_hw_if *hw_if);


#line 970 
void xgbe_init_function_ptrs_phy(struct xgbe_phy_if *phy_if);


#line 972 
struct net_device_ops *xgbe_get_netdev_ops(void);


#line 973 
struct ethtool_ops *xgbe_get_ethtool_ops(void);


#line 975 
struct dcbnl_rtnl_ops const *xgbe_get_dcbnl_ops(void);


#line 978 
void xgbe_ptp_register(struct xgbe_prv_data *pdata);


#line 979 
void xgbe_ptp_unregister(struct xgbe_prv_data *pdata);


#line 985 
void xgbe_get_all_hw_features(struct xgbe_prv_data *pdata);


#line 986 
int xgbe_powerup(struct net_device *netdev, unsigned int caller);


#line 987 
int xgbe_powerdown(struct net_device *netdev, unsigned int caller);


#line 988 
void xgbe_init_rx_coalesce(struct xgbe_prv_data *pdata);


#line 989 
void xgbe_init_tx_coalesce(struct xgbe_prv_data *pdata);


#line 992 
void xgbe_debugfs_init(struct xgbe_prv_data *pdata);


#line 993 
void xgbe_debugfs_exit(struct xgbe_prv_data *pdata);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static int debug = -1;

#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static u32 const default_msg_level = 52U;

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static u32 const xgbe_serdes_blwc[3U] = {1U, 1U, 0U};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static u32 const xgbe_serdes_cdr_rate[3U] = {2U, 2U, 7U};

#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static u32 const xgbe_serdes_pq_skew[3U] = {10U, 10U, 18U};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static u32 const xgbe_serdes_tx_amp[3U] = {15U, 15U, 10U};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static u32 const xgbe_serdes_dfe_tap_cfg[3U] = {3U, 3U, 1U};

#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static u32 const xgbe_serdes_dfe_tap_ena[3U] = {0U, 0U, 127U};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static void xgbe_default_config(struct xgbe_prv_data *pdata)
{
  
#line 188 
  pdata->pblx8 = 1U;
  
#line 189 
  pdata->tx_sf_mode = 1U;
  
#line 190 
  pdata->tx_threshold = 0U;
  
#line 191 
  pdata->tx_pbl = 16U;
  
#line 192 
  pdata->tx_osp_mode = 1U;
  
#line 193 
  pdata->rx_sf_mode = 0U;
  
#line 194 
  pdata->rx_threshold = 0U;
  
#line 195 
  pdata->rx_pbl = 16U;
  
#line 196 
  pdata->pause_autoneg = 1U;
  
#line 197 
  pdata->tx_pause = 1U;
  
#line 198 
  pdata->rx_pause = 1U;
  
#line 199 
  pdata->phy_speed = -1;
  
#line 200 
  pdata->power_down = 0U;
  
#line 201 
  return;
}


#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static void xgbe_init_all_fptrs(struct xgbe_prv_data *pdata)
{
  
#line 207 
  xgbe_init_function_ptrs_dev(& pdata->hw_if);
  
#line 208 
  xgbe_init_function_ptrs_phy(& pdata->phy_if);
  
#line 209 
  xgbe_init_function_ptrs_desc(& pdata->desc_if);
  
#line 210 
  return;
}


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static int xgbe_acpi_support(struct xgbe_prv_data *pdata)
{
  int __retres;
  u32 property;
  int ret;
  
#line 215 
  struct device *dev = pdata->dev;
  
#line 220 
  ret = device_property_read_u32(dev,"amd,dma-freq",& property);
  
#line 221 
  if (ret != 0) {
    
#line 222 
    dev_err((struct device const *)dev,"unable to obtain %s property\n",(char *)"amd,dma-freq");
    
#line 224 
    __retres = ret;
    
#line 224 
    goto return_label;
  }
  else ;
  
#line 226 
  pdata->sysclk_rate = (unsigned long)property;
  
#line 229 
  ret = device_property_read_u32(dev,"amd,ptp-freq",& property);
  
#line 230 
  if (ret != 0) {
    
#line 231 
    dev_err((struct device const *)dev,"unable to obtain %s property\n",(char *)"amd,ptp-freq");
    
#line 233 
    __retres = ret;
    
#line 233 
    goto return_label;
  }
  else ;
  
#line 235 
  pdata->ptpclk_rate = (unsigned long)property;
  
#line 237 
  __retres = 0;
  return_label: 
#line 237 
                return __retres;
}


#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static int xgbe_of_support(struct xgbe_prv_data *pdata)
{
  int __retres;
  bool tmp_0;
  bool tmp_2;
  
#line 249 
  struct device *dev = pdata->dev;
  
#line 252 
  pdata->sysclk = devm_clk_get(dev,"dma_clk");
  
#line 253 
  tmp_0 = IS_ERR((void const *)pdata->sysclk);
  
#line 253 
  if ((int)tmp_0 != 0) {
    long tmp;
    
#line 254 
    dev_err((struct device const *)dev,"dma devm_clk_get failed\n");
    
#line 255 
    tmp = PTR_ERR((void const *)pdata->sysclk);
    
#line 255 
    __retres = (int)tmp;
    
#line 255 
    goto return_label;
  }
  else ;
  
#line 257 
  pdata->sysclk_rate = clk_get_rate(pdata->sysclk);
  
#line 260 
  pdata->ptpclk = devm_clk_get(dev,"ptp_clk");
  
#line 261 
  tmp_2 = IS_ERR((void const *)pdata->ptpclk);
  
#line 261 
  if ((int)tmp_2 != 0) {
    long tmp_1;
    
#line 262 
    dev_err((struct device const *)dev,"ptp devm_clk_get failed\n");
    
#line 263 
    tmp_1 = PTR_ERR((void const *)pdata->ptpclk);
    
#line 263 
    __retres = (int)tmp_1;
    
#line 263 
    goto return_label;
  }
  else ;
  
#line 265 
  pdata->ptpclk_rate = clk_get_rate(pdata->ptpclk);
  
#line 267 
  __retres = 0;
  return_label: 
#line 267 
                return __retres;
}


#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static struct platform_device *xgbe_of_get_phy_pdev(struct xgbe_prv_data *pdata)
{
  struct device_node *phy_node;
  struct platform_device *phy_pdev;
  
#line 272 
  struct device *dev = pdata->dev;
  
#line 276 
  phy_node = of_parse_phandle((struct device_node const *)dev->of_node,"phy-handle",0);
  
#line 277 
  if (phy_node != (struct device_node *)0) {
    
#line 281 
    phy_pdev = of_find_device_by_node(phy_node);
    
#line 282 
    of_node_put(phy_node);
  }
  else {
    
#line 288 
    get_device(dev);
    
#line 289 
    phy_pdev = pdata->pdev;
  }
  
#line 292 
  return phy_pdev;
}


#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static unsigned int xgbe_resource_count(struct platform_device *pdev, unsigned int type)
{
  unsigned int count;
  int i;
  
#line 312 
  i = 0;
  
#line 312 
  count = 0U;
  
#line 312 
  goto ldv_50296;
  ldv_50295: 
#line 313 
  ;
  {
    unsigned long tmp;
    
#line 313 
    struct resource *res = pdev->resource + i;
    
#line 315 
    tmp = resource_type((struct resource const *)res);
    
#line 315 
    ;
    
#line 315 
    if ((unsigned long)type == tmp) 
#line 316 
                                    count += 1U; else ;
  }
  
#line 312 
  i += 1;
  ldv_50296: 
#line 313 
  ;
  
#line 312 
  if (pdev->num_resources > (unsigned int)i) 
#line 314 
                                             goto ldv_50295; else 
#line 317 
                                                                  goto ldv_50297;
  ldv_50297: 
#line 318 
  ;
  
#line 319 
  return count;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static struct platform_device *xgbe_get_phy_pdev(struct xgbe_prv_data *pdata)
{
  struct platform_device *phy_pdev;
  
#line 326 
  if (pdata->use_acpi != 0U) {
    
#line 327 
    get_device(pdata->dev);
    
#line 328 
    phy_pdev = pdata->pdev;
  }
  else 
#line 330 
       phy_pdev = xgbe_of_get_phy_pdev(pdata);
  
#line 333 
  return phy_pdev;
}


#line 400 
void __compiletime_assert_400(void);


#line 408 
void __compiletime_assert_408(void);


#line 336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static int xgbe_probe(struct platform_device *pdev)
{
  int __retres;
  struct xgbe_prv_data *pdata;
  struct net_device *netdev;
  struct device *phy_dev;
  struct platform_device *phy_pdev;
  struct resource *res;
  char const *phy_mode;
  unsigned int i;
  unsigned int phy_memnum;
  unsigned int phy_irqnum;
  int ret;
  bool tmp_3;
  bool tmp_5;
  unsigned int tmp_6;
  bool tmp_8;
  unsigned int tmp_9;
  bool tmp_11;
  unsigned int tmp_12;
  bool tmp_14;
  bool tmp_19;
  bool tmp_20;
  bool tmp_21;
  bool tmp_22;
  bool tmp_23;
  bool tmp_24;
  bool tmp_25;
  bool tmp_26;
  unsigned int tmp_27;
  unsigned long long tmp_28;
  unsigned int tmp_31;
  unsigned int tmp_34;
  char const *tmp_37;
  struct workqueue_struct *tmp_40;
  struct workqueue_struct *tmp_42;
  
#line 340 
  struct device *dev = & pdev->dev;
  
#line 349 
  netdev = ldv_alloc_etherdev_mqs_73(5024,16U,16U);
  
#line 351 
  if (netdev == (struct net_device *)0) {
    
#line 352 
    dev_err((struct device const *)dev,"alloc_etherdev failed\n");
    
#line 353 
    ret = -12;
    
#line 354 
    goto err_alloc;
  }
  else ;
  
#line 356 
  netdev->dev.parent = dev;
  
#line 357 
  pdata = (struct xgbe_prv_data *)netdev_priv((struct net_device const *)netdev);
  
#line 358 
  pdata->netdev = netdev;
  
#line 359 
  pdata->pdev = pdev;
  
#line 360 
  pdata->adev = to_acpi_node(dev->fwnode);
  
#line 361 
  pdata->dev = dev;
  
#line 362 
  platform_set_drvdata(pdev,(void *)netdev);
  
#line 364 
  spinlock_check(& pdata->lock);
  {
    struct lock_class_key __key;
    
#line 364 
    __raw_spin_lock_init(& pdata->lock.__anonCompField_spinlock_18.rlock,"&(&pdata->lock)->rlock",& __key);
  }
  {
    struct lock_class_key __key_0;
    
#line 365 
    __mutex_init(& pdata->xpcs_mutex,"&pdata->xpcs_mutex",& __key_0);
  }
  {
    struct lock_class_key __key_1;
    
#line 366 
    __mutex_init(& pdata->rss_mutex,"&pdata->rss_mutex",& __key_1);
  }
  
#line 367 
  spinlock_check(& pdata->tstamp_lock);
  {
    struct lock_class_key __key_2;
    
#line 367 
    __raw_spin_lock_init(& pdata->tstamp_lock.__anonCompField_spinlock_18.rlock,"&(&pdata->tstamp_lock)->rlock",& __key_2);
  }
  
#line 369 
  pdata->msg_enable = netif_msg_init(debug,(int)default_msg_level);
  
#line 371 
  set_bit(0L,(unsigned long volatile *)(& pdata->dev_state));
  
#line 374 
  pdata->use_acpi = (unsigned int)((pdata->adev != (struct acpi_device *)0 && acpi_disabled == 0) != 0);
  
#line 376 
  phy_pdev = xgbe_get_phy_pdev(pdata);
  
#line 377 
  if (phy_pdev == (struct platform_device *)0) {
    
#line 378 
    dev_err((struct device const *)dev,"unable to obtain phy device\n");
    
#line 379 
    ret = -22;
    
#line 380 
    goto err_phydev;
  }
  else ;
  
#line 382 
  phy_dev = & phy_pdev->dev;
  
#line 384 
  if (pdev == phy_pdev) {
    unsigned int tmp_0;
    unsigned int tmp_1;
    
#line 389 
    tmp_0 = xgbe_resource_count(pdev,512U);
    
#line 389 
    phy_memnum = tmp_0 + 4294967293U;
    
#line 390 
    tmp_1 = xgbe_resource_count(pdev,1024U);
    
#line 390 
    phy_irqnum = tmp_1 + 4294967295U;
  }
  else {
    
#line 395 
    phy_memnum = 0U;
    
#line 396 
    phy_irqnum = 0U;
  }
  {
    
#line 400 
    bool __cond = (_Bool)0;
    
#line 400 
    if ((int)__cond != 0) 
#line 400 
                          __compiletime_assert_400(); else ;
  }
  
#line 401 
  pdata->tx_desc_count = 512U;
  
#line 402 
  if ((pdata->tx_desc_count & (pdata->tx_desc_count + 4294967295U)) != 0U) {
    
#line 403 
    dev_err((struct device const *)dev,"tx descriptor count (%d) is not valid\n",pdata->tx_desc_count);
    
#line 405 
    ret = -22;
    
#line 406 
    goto err_io;
  }
  else ;
  {
    
#line 408 
    bool __cond_0 = (_Bool)0;
    
#line 408 
    if ((int)__cond_0 != 0) 
#line 408 
                            __compiletime_assert_408(); else ;
  }
  
#line 409 
  pdata->rx_desc_count = 512U;
  
#line 410 
  if ((pdata->rx_desc_count & (pdata->rx_desc_count + 4294967295U)) != 0U) {
    
#line 411 
    dev_err((struct device const *)dev,"rx descriptor count (%d) is not valid\n",pdata->rx_desc_count);
    
#line 413 
    ret = -22;
    
#line 414 
    goto err_io;
  }
  else ;
  
#line 418 
  res = platform_get_resource(pdev,512U,0U);
  
#line 419 
  pdata->xgmac_regs = devm_ioremap_resource(dev,res);
  
#line 420 
  tmp_3 = IS_ERR((void const *)pdata->xgmac_regs);
  
#line 420 
  if ((int)tmp_3 != 0) {
    long tmp_2;
    
#line 421 
    dev_err((struct device const *)dev,"xgmac ioremap failed\n");
    
#line 422 
    tmp_2 = PTR_ERR((void const *)pdata->xgmac_regs);
    
#line 422 
    ret = (int)tmp_2;
    
#line 423 
    goto err_io;
  }
  else ;
  
#line 425 
  if ((pdata->msg_enable & 2U) != 0U) {
    
#line 426 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_probe", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c", .format = "xgmac_regs = %p\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))426U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 426 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 426 
                                                        __dynamic_dev_dbg(& descriptor,(struct device const *)dev,"xgmac_regs = %p\n",pdata->xgmac_regs); else ;
  }
  else ;
  
#line 428 
  res = platform_get_resource(pdev,512U,1U);
  
#line 429 
  pdata->xpcs_regs = devm_ioremap_resource(dev,res);
  
#line 430 
  tmp_5 = IS_ERR((void const *)pdata->xpcs_regs);
  
#line 430 
  if ((int)tmp_5 != 0) {
    long tmp_4;
    
#line 431 
    dev_err((struct device const *)dev,"xpcs ioremap failed\n");
    
#line 432 
    tmp_4 = PTR_ERR((void const *)pdata->xpcs_regs);
    
#line 432 
    ret = (int)tmp_4;
    
#line 433 
    goto err_io;
  }
  else ;
  
#line 435 
  if ((pdata->msg_enable & 2U) != 0U) {
    
#line 436 
    struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_probe", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c", .format = "xpcs_regs  = %p\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))436U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 436 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 436 
                                                          __dynamic_dev_dbg(& descriptor_0,(struct device const *)dev,"xpcs_regs  = %p\n",pdata->xpcs_regs); else ;
  }
  else ;
  
#line 438 
  tmp_6 = phy_memnum;
  
#line 438 
  phy_memnum += 1U;
  
#line 438 
  ;
  
#line 438 
  ;
  
#line 438 
  res = platform_get_resource(phy_pdev,512U,tmp_6);
  
#line 439 
  pdata->rxtx_regs = devm_ioremap_resource(dev,res);
  
#line 440 
  tmp_8 = IS_ERR((void const *)pdata->rxtx_regs);
  
#line 440 
  if ((int)tmp_8 != 0) {
    long tmp_7;
    
#line 441 
    dev_err((struct device const *)dev,"rxtx ioremap failed\n");
    
#line 442 
    tmp_7 = PTR_ERR((void const *)pdata->rxtx_regs);
    
#line 442 
    ret = (int)tmp_7;
    
#line 443 
    goto err_io;
  }
  else ;
  
#line 445 
  if ((pdata->msg_enable & 2U) != 0U) {
    
#line 446 
    struct _ddebug descriptor_1 = {.modname = "amd_xgbe", .function = "xgbe_probe", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c", .format = "rxtx_regs  = %p\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))446U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 446 
    if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 446 
                                                          __dynamic_dev_dbg(& descriptor_1,(struct device const *)dev,"rxtx_regs  = %p\n",pdata->rxtx_regs); else ;
  }
  else ;
  
#line 448 
  tmp_9 = phy_memnum;
  
#line 448 
  phy_memnum += 1U;
  
#line 448 
  ;
  
#line 448 
  ;
  
#line 448 
  res = platform_get_resource(phy_pdev,512U,tmp_9);
  
#line 449 
  pdata->sir0_regs = devm_ioremap_resource(dev,res);
  
#line 450 
  tmp_11 = IS_ERR((void const *)pdata->sir0_regs);
  
#line 450 
  if ((int)tmp_11 != 0) {
    long tmp_10;
    
#line 451 
    dev_err((struct device const *)dev,"sir0 ioremap failed\n");
    
#line 452 
    tmp_10 = PTR_ERR((void const *)pdata->sir0_regs);
    
#line 452 
    ret = (int)tmp_10;
    
#line 453 
    goto err_io;
  }
  else ;
  
#line 455 
  if ((pdata->msg_enable & 2U) != 0U) {
    
#line 456 
    struct _ddebug descriptor_2 = {.modname = "amd_xgbe", .function = "xgbe_probe", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c", .format = "sir0_regs  = %p\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))456U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 456 
    if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 456 
                                                          __dynamic_dev_dbg(& descriptor_2,(struct device const *)dev,"sir0_regs  = %p\n",pdata->sir0_regs); else ;
  }
  else ;
  
#line 458 
  tmp_12 = phy_memnum;
  
#line 458 
  phy_memnum += 1U;
  
#line 458 
  ;
  
#line 458 
  ;
  
#line 458 
  res = platform_get_resource(phy_pdev,512U,tmp_12);
  
#line 459 
  pdata->sir1_regs = devm_ioremap_resource(dev,res);
  
#line 460 
  tmp_14 = IS_ERR((void const *)pdata->sir1_regs);
  
#line 460 
  if ((int)tmp_14 != 0) {
    long tmp_13;
    
#line 461 
    dev_err((struct device const *)dev,"sir1 ioremap failed\n");
    
#line 462 
    tmp_13 = PTR_ERR((void const *)pdata->sir1_regs);
    
#line 462 
    ret = (int)tmp_13;
    
#line 463 
    goto err_io;
  }
  else ;
  
#line 465 
  if ((pdata->msg_enable & 2U) != 0U) {
    
#line 466 
    struct _ddebug descriptor_3 = {.modname = "amd_xgbe", .function = "xgbe_probe", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c", .format = "sir1_regs  = %p\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))466U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 466 
    if ((long)(((int)descriptor_3.flags & 1) != 0) != 0L) 
#line 466 
                                                          __dynamic_dev_dbg(& descriptor_3,(struct device const *)dev,"sir1_regs  = %p\n",pdata->sir1_regs); else ;
  }
  else ;
  
#line 469 
  ret = device_property_read_u8_array(dev,"mac-address",(u8 *)(& pdata->mac_addr),6UL);
  
#line 472 
  if (ret != 0) 
#line 472 
                goto _LOR;
  else {
    int tmp_16;
    bool tmp_15;
    
#line 472 
    tmp_15 = is_valid_ether_addr((u8 const *)(& pdata->mac_addr));
    
#line 472 
    if (tmp_15) 
#line 472 
                tmp_16 = 0; else 
#line 472 
                                 tmp_16 = 1;
    
#line 472 
    if (tmp_16) {
      _LOR: {
              
#line 473 
              dev_err((struct device const *)dev,"invalid %s property\n",(char *)"mac-address");
              
#line 474 
              if (ret == 0) 
#line 475 
                            ret = -22; else ;
              
#line 476 
              goto err_io;
            }
    }
    else ;
  }
  
#line 480 
  ret = device_property_read_string(dev,"phy-mode",& phy_mode);
  
#line 482 
  if (ret != 0) 
#line 482 
                goto _LOR_0;
  else {
    int tmp_18;
    char const *tmp_17;
    
#line 482 
    tmp_17 = phy_modes((enum ldv_27932)PHY_INTERFACE_MODE_XGMII);
    
#line 482 
    ;
    
#line 482 
    tmp_18 = strcmp(phy_mode,tmp_17);
    
#line 482 
    if (tmp_18 != 0) {
      _LOR_0: {
                
#line 483 
                dev_err((struct device const *)dev,"invalid %s property\n",(char *)"phy-mode");
                
#line 484 
                if (ret == 0) 
#line 485 
                              ret = -22; else ;
                
#line 486 
                goto err_io;
              }
    }
    else ;
  }
  
#line 488 
  pdata->phy_mode = PHY_INTERFACE_MODE_XGMII;
  
#line 491 
  tmp_19 = device_property_present(dev,"amd,per-channel-interrupt");
  
#line 491 
  if ((int)tmp_19 != 0) 
#line 492 
                        pdata->per_channel_irq = 1U; else ;
  
#line 495 
  ret = device_property_read_u32(phy_dev,"amd,speed-set",& pdata->speed_set);
  
#line 497 
  if (ret != 0) {
    
#line 498 
    dev_err((struct device const *)dev,"invalid %s property\n",(char *)"amd,speed-set");
    
#line 499 
    goto err_io;
  }
  else ;
  
#line 502 
  switch (pdata->speed_set) {
    case (unsigned int)0: 
#line 503 
    ;
    case (unsigned int)1: 
#line 504 
    ;
    
#line 505 
    goto ldv_50339;
    default: 
#line 506 
    ;
    
#line 507 
    dev_err((struct device const *)dev,"invalid %s property\n",(char *)"amd,speed-set");
    
#line 508 
    ret = -22;
    
#line 509 
    goto err_io;
  }
  ldv_50339: 
#line 513 
  ;
  
#line 513 
  tmp_20 = device_property_present(phy_dev,"amd,serdes-blwc");
  
#line 513 
  if ((int)tmp_20 != 0) {
    
#line 514 
    ret = device_property_read_u32_array(phy_dev,"amd,serdes-blwc",(u32 *)(& pdata->serdes_blwc),3UL);
    
#line 518 
    if (ret != 0) {
      
#line 519 
      dev_err((struct device const *)dev,"invalid %s property\n",(char *)"amd,serdes-blwc");
      
#line 521 
      goto err_io;
    }
    else ;
  }
  else 
#line 524 
       memcpy((void *)(& pdata->serdes_blwc),(void const *)(& xgbe_serdes_blwc),12UL);
  
#line 528 
  tmp_21 = device_property_present(phy_dev,"amd,serdes-cdr-rate");
  
#line 528 
  if ((int)tmp_21 != 0) {
    
#line 529 
    ret = device_property_read_u32_array(phy_dev,"amd,serdes-cdr-rate",(u32 *)(& pdata->serdes_cdr_rate),3UL);
    
#line 533 
    if (ret != 0) {
      
#line 534 
      dev_err((struct device const *)dev,"invalid %s property\n",(char *)"amd,serdes-cdr-rate");
      
#line 536 
      goto err_io;
    }
    else ;
  }
  else 
#line 539 
       memcpy((void *)(& pdata->serdes_cdr_rate),(void const *)(& xgbe_serdes_cdr_rate),12UL);
  
#line 543 
  tmp_22 = device_property_present(phy_dev,"amd,serdes-pq-skew");
  
#line 543 
  if ((int)tmp_22 != 0) {
    
#line 544 
    ret = device_property_read_u32_array(phy_dev,"amd,serdes-pq-skew",(u32 *)(& pdata->serdes_pq_skew),3UL);
    
#line 548 
    if (ret != 0) {
      
#line 549 
      dev_err((struct device const *)dev,"invalid %s property\n",(char *)"amd,serdes-pq-skew");
      
#line 551 
      goto err_io;
    }
    else ;
  }
  else 
#line 554 
       memcpy((void *)(& pdata->serdes_pq_skew),(void const *)(& xgbe_serdes_pq_skew),12UL);
  
#line 558 
  tmp_23 = device_property_present(phy_dev,"amd,serdes-tx-amp");
  
#line 558 
  if ((int)tmp_23 != 0) {
    
#line 559 
    ret = device_property_read_u32_array(phy_dev,"amd,serdes-tx-amp",(u32 *)(& pdata->serdes_tx_amp),3UL);
    
#line 563 
    if (ret != 0) {
      
#line 564 
      dev_err((struct device const *)dev,"invalid %s property\n",(char *)"amd,serdes-tx-amp");
      
#line 566 
      goto err_io;
    }
    else ;
  }
  else 
#line 569 
       memcpy((void *)(& pdata->serdes_tx_amp),(void const *)(& xgbe_serdes_tx_amp),12UL);
  
#line 573 
  tmp_24 = device_property_present(phy_dev,"amd,serdes-dfe-tap-config");
  
#line 573 
  if ((int)tmp_24 != 0) {
    
#line 574 
    ret = device_property_read_u32_array(phy_dev,"amd,serdes-dfe-tap-config",(u32 *)(& pdata->serdes_dfe_tap_cfg),3UL);
    
#line 578 
    if (ret != 0) {
      
#line 579 
      dev_err((struct device const *)dev,"invalid %s property\n",(char *)"amd,serdes-dfe-tap-config");
      
#line 581 
      goto err_io;
    }
    else ;
  }
  else 
#line 584 
       memcpy((void *)(& pdata->serdes_dfe_tap_cfg),(void const *)(& xgbe_serdes_dfe_tap_cfg),12UL);
  
#line 588 
  tmp_25 = device_property_present(phy_dev,"amd,serdes-dfe-tap-enable");
  
#line 588 
  if ((int)tmp_25 != 0) {
    
#line 589 
    ret = device_property_read_u32_array(phy_dev,"amd,serdes-dfe-tap-enable",(u32 *)(& pdata->serdes_dfe_tap_ena),3UL);
    
#line 593 
    if (ret != 0) {
      
#line 594 
      dev_err((struct device const *)dev,"invalid %s property\n",(char *)"amd,serdes-dfe-tap-enable");
      
#line 596 
      goto err_io;
    }
    else ;
  }
  else 
#line 599 
       memcpy((void *)(& pdata->serdes_dfe_tap_ena),(void const *)(& xgbe_serdes_dfe_tap_ena),12UL);
  
#line 604 
  if (pdata->use_acpi != 0U) 
#line 605 
                             ret = xgbe_acpi_support(pdata); else 
#line 607 
                                                                  ret = xgbe_of_support(pdata);
  
#line 608 
  if (ret != 0) 
#line 609 
                goto err_io; else ;
  
#line 612 
  tmp_26 = device_dma_is_coherent(pdata->dev);
  
#line 612 
  pdata->coherent = (unsigned int)tmp_26;
  
#line 613 
  if (pdata->coherent != 0U) {
    
#line 614 
    pdata->axdomain = 2U;
    
#line 615 
    pdata->arcache = 11U;
    
#line 616 
    pdata->awcache = 15U;
  }
  else {
    
#line 618 
    pdata->axdomain = 3U;
    
#line 619 
    pdata->arcache = 0U;
    
#line 620 
    pdata->awcache = 0U;
  }
  
#line 624 
  ret = platform_get_irq(pdev,0U);
  
#line 625 
  if (ret < 0) {
    
#line 626 
    dev_err((struct device const *)dev,"platform_get_irq 0 failed\n");
    
#line 627 
    goto err_io;
  }
  else ;
  
#line 629 
  pdata->dev_irq = ret;
  
#line 632 
  tmp_27 = phy_irqnum;
  
#line 632 
  phy_irqnum += 1U;
  
#line 632 
  ;
  
#line 632 
  ;
  
#line 632 
  ret = platform_get_irq(phy_pdev,tmp_27);
  
#line 633 
  if (ret < 0) {
    
#line 634 
    dev_err((struct device const *)dev,"platform_get_irq phy 0 failed\n");
    
#line 635 
    goto err_io;
  }
  else ;
  
#line 637 
  pdata->an_irq = ret;
  
#line 639 
  netdev->irq = pdata->dev_irq;
  
#line 640 
  netdev->base_addr = (unsigned long)pdata->xgmac_regs;
  
#line 641 
  memcpy((void *)netdev->dev_addr,(void const *)(& pdata->mac_addr),(unsigned long)netdev->addr_len);
  
#line 644 
  xgbe_init_all_fptrs(pdata);
  
#line 647 
  (*(pdata->hw_if.exit))(pdata);
  
#line 650 
  xgbe_get_all_hw_features(pdata);
  
#line 653 
  xgbe_default_config(pdata);
  
#line 656 
  if (pdata->hw_feat.dma_width != 64U) 
#line 656 
                                       tmp_28 = (1ULL << pdata->hw_feat.dma_width) + 18446744073709551615ULL; else 
                                                                    
#line 656 
                                                                    tmp_28 = 18446744073709551615ULL;
  
#line 656 
  ;
  
#line 656 
  ret = dma_set_mask_and_coherent(dev,tmp_28);
  
#line 658 
  if (ret != 0) {
    
#line 659 
    dev_err((struct device const *)dev,"dma_set_mask_and_coherent failed\n");
    
#line 660 
    goto err_io;
  }
  else ;
  {
    unsigned int tmp_30;
    
#line 670 
    unsigned int __min1 = cpumask_weight(cpu_online_mask);
    
#line 670 
    unsigned int __min2 = pdata->hw_feat.tx_ch_cnt;
    
#line 670 
    if (__min1 < __min2) 
#line 670 
                         tmp_30 = __min1; else 
#line 670 
                                               tmp_30 = __min2;
    
#line 670 
    tmp_31 = tmp_30;
  }
  
#line 670 
  pdata->tx_ring_count = tmp_31;
  
#line 672 
  pdata->tx_q_count = pdata->tx_ring_count;
  
#line 673 
  ret = netif_set_real_num_tx_queues(netdev,pdata->tx_ring_count);
  
#line 674 
  if (ret != 0) {
    
#line 675 
    dev_err((struct device const *)dev,"error setting real tx queue count\n");
    
#line 676 
    goto err_io;
  }
  else ;
  {
    int tmp_32;
    unsigned int tmp_33;
    
#line 679 
    tmp_32 = netif_get_num_default_rss_queues();
    
#line 679 
    unsigned int __min1_0 = (unsigned int)tmp_32;
    
#line 679 
    unsigned int __min2_0 = pdata->hw_feat.rx_ch_cnt;
    
#line 679 
    if (__min1_0 < __min2_0) 
#line 679 
                             tmp_33 = __min1_0; else 
#line 679 
                                                     tmp_33 = __min2_0;
    
#line 679 
    tmp_34 = tmp_33;
  }
  
#line 679 
  pdata->rx_ring_count = tmp_34;
  
#line 682 
  pdata->rx_q_count = pdata->hw_feat.rx_q_cnt;
  
#line 683 
  ret = netif_set_real_num_rx_queues(netdev,pdata->rx_ring_count);
  
#line 684 
  if (ret != 0) {
    
#line 685 
    dev_err((struct device const *)dev,"error setting real rx queue count\n");
    
#line 686 
    goto err_io;
  }
  else ;
  
#line 690 
  netdev_rss_key_fill((void *)(& pdata->rss_key),40UL);
  
#line 692 
  i = 0U;
  
#line 692 
  goto ldv_50348;
  ldv_50347: 
#line 693 
  ;
  
#line 693 
  pdata->rss_table[i] &= 4294967280U;
  
#line 693 
  pdata->rss_table[i] |= i % pdata->rx_ring_count & 15U;
  
#line 692 
  i += 1U;
  ldv_50348: 
#line 693 
  ;
  
#line 692 
  if (i <= 255U) 
#line 694 
                 goto ldv_50347; else 
#line 697 
                                      goto ldv_50349;
  ldv_50349: 
#line 698 
  ;
  
#line 696 
  pdata->rss_options &= 4294967293U;
  
#line 696 
  pdata->rss_options |= 2U;
  
#line 697 
  pdata->rss_options &= 4294967291U;
  
#line 697 
  pdata->rss_options |= 4U;
  
#line 698 
  pdata->rss_options &= 4294967287U;
  
#line 698 
  pdata->rss_options |= 8U;
  
#line 701 
  (*(pdata->phy_if.phy_init))(pdata);
  
#line 704 
  netdev->netdev_ops = (struct net_device_ops const *)xgbe_get_netdev_ops();
  
#line 705 
  netdev->ethtool_ops = (struct ethtool_ops const *)xgbe_get_ethtool_ops();
  
#line 707 
  netdev->dcbnl_ops = xgbe_get_dcbnl_ops();
  
#line 711 
  netdev->hw_features = 17181000595ULL;
  
#line 722 
  if (pdata->hw_feat.rss != 0U) 
#line 723 
                                netdev->hw_features |= 8589934592ULL; else ;
  
#line 725 
  netdev->vlan_features |= 1114131ULL;
  
#line 731 
  netdev->features |= netdev->hw_features;
  
#line 732 
  pdata->netdev_features = netdev->features;
  
#line 734 
  netdev->priv_flags |= 131072U;
  
#line 737 
  netdev->watchdog_timeo = 0;
  
#line 739 
  xgbe_init_rx_coalesce(pdata);
  
#line 740 
  xgbe_init_tx_coalesce(pdata);
  
#line 742 
  netif_carrier_off(netdev);
  
#line 743 
  ret = ldv_register_netdev_74(netdev);
  
#line 744 
  if (ret != 0) {
    
#line 745 
    dev_err((struct device const *)dev,"net device registration failed\n");
    
#line 746 
    goto err_io;
  }
  else ;
  
#line 750 
  tmp_37 = netdev_name((struct net_device const *)netdev);
  
#line 750 
  ;
  
#line 750 
  snprintf((char *)(& pdata->an_name),47UL,"%s-pcs",tmp_37);
  {
    struct lock_class_key __key_3;
    char const *__lock_name;
    char const *tmp_38;
    
#line 755 
    __lock_name = "\"%s\"";
    
#line 755 
    tmp_38 = netdev_name((struct net_device const *)netdev);
    
#line 755 
    ;
    
#line 755 
    tmp_40 = __alloc_workqueue_key("%s",131082U,1,& __key_3,__lock_name,tmp_38);
  }
  
#line 754 
  pdata->dev_workqueue = tmp_40;
  
#line 756 
  if (pdata->dev_workqueue == (struct workqueue_struct *)0) {
    
#line 757 
    netdev_err((struct net_device const *)netdev,"device workqueue creation failed\n");
    
#line 758 
    ret = -12;
    
#line 759 
    goto err_netdev;
  }
  else ;
  {
    struct lock_class_key __key_4;
    char const *__lock_name_0;
    
#line 763 
    __lock_name_0 = "\"%s\"";
    
#line 763 
    tmp_42 = __alloc_workqueue_key("%s",131082U,1,& __key_4,__lock_name_0,(char *)(& pdata->an_name));
  }
  
#line 762 
  pdata->an_workqueue = tmp_42;
  
#line 764 
  if (pdata->an_workqueue == (struct workqueue_struct *)0) {
    
#line 765 
    netdev_err((struct net_device const *)netdev,"phy workqueue creation failed\n");
    
#line 766 
    ret = -12;
    
#line 767 
    goto err_wq;
  }
  else ;
  
#line 770 
  xgbe_ptp_register(pdata);
  
#line 772 
  xgbe_debugfs_init(pdata);
  
#line 774 
  platform_device_put(phy_pdev);
  
#line 776 
  netdev_notice((struct net_device const *)netdev,"net device enabled\n");
  
#line 780 
  __retres = 0;
  
#line 780 
  goto return_label;
  err_wq: 
#line 782 
  ;
  
#line 783 
  destroy_workqueue(pdata->dev_workqueue);
  err_netdev: 
#line 785 
  ;
  
#line 786 
  ldv_unregister_netdev_75(netdev);
  err_io: 
#line 788 
  ;
  
#line 789 
  platform_device_put(phy_pdev);
  err_phydev: 
#line 791 
  ;
  
#line 792 
  ldv_free_netdev_76(netdev);
  err_alloc: 
#line 794 
  ;
  
#line 795 
  dev_notice((struct device const *)dev,"net device not enabled\n");
  
#line 797 
  __retres = ret;
  return_label: 
#line 797 
                return __retres;
}


#line 800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static int xgbe_remove(struct platform_device *pdev)
{
  int __retres;
  
#line 802 
  struct net_device *netdev = platform_get_drvdata((struct platform_device const *)pdev);
  
#line 803 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 807 
  xgbe_debugfs_exit(pdata);
  
#line 809 
  xgbe_ptp_unregister(pdata);
  
#line 811 
  flush_workqueue(pdata->an_workqueue);
  
#line 812 
  destroy_workqueue(pdata->an_workqueue);
  
#line 814 
  flush_workqueue(pdata->dev_workqueue);
  
#line 815 
  destroy_workqueue(pdata->dev_workqueue);
  
#line 817 
  ldv_unregister_netdev_77(netdev);
  
#line 819 
  ldv_free_netdev_78(netdev);
  
#line 823 
  __retres = 0;
  
#line 823 
  return __retres;
}


#line 827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static int xgbe_suspend(struct device *dev)
{
  bool tmp_1;
  int tmp_2;
  
#line 829 
  struct net_device *netdev = dev_get_drvdata((struct device const *)dev);
  
#line 830 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 831 
  int ret = 0;
  
#line 835 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 835 
  if ((int)tmp_1 != 0) 
#line 836 
                       ret = xgbe_powerdown(netdev,1U); else ;
  
#line 838 
  tmp_2 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938432);
  
#line 838 
  pdata->lpm_ctrl = (unsigned int)tmp_2;
  
#line 839 
  pdata->lpm_ctrl |= 2048U;
  
#line 840 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938432,(int)pdata->lpm_ctrl);
  
#line 844 
  return ret;
}


#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static int xgbe_resume(struct device *dev)
{
  bool tmp_1;
  
#line 849 
  struct net_device *netdev = dev_get_drvdata((struct device const *)dev);
  
#line 850 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 851 
  int ret = 0;
  
#line 855 
  pdata->lpm_ctrl &= 4294965247U;
  
#line 856 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938432,(int)pdata->lpm_ctrl);
  
#line 858 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 858 
  if ((int)tmp_1 != 0) 
#line 859 
                       ret = xgbe_powerup(netdev,1U); else ;
  
#line 863 
  return ret;
}


#line 868  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static struct acpi_device_id const xgbe_acpi_match[2U] = {{.id = {(unsigned char)'A', (unsigned char)'M', (unsigned char)'D', (unsigned char)'I', (unsigned char)'8', (unsigned char)'0', (unsigned char)'0', (unsigned char)'1', (unsigned char)'\000'}, .driver_data = 0UL, .cls = 0U, .cls_msk = 0U}, {.id = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .driver_data = 0UL, .cls = 0U, .cls_msk = 0U}};

#line 873  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
struct acpi_device_id const __mod_acpi__xgbe_acpi_match_device_table[2U];

#line 877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static struct of_device_id const xgbe_of_match[2U] = {{.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'a', (char)'m', (char)'d', (char)',', (char)'x', (char)'g', (char)'b', (char)'e', (char)'-', (char)'s', (char)'e', (char)'a', (char)'t', (char)'t', (char)'l', (char)'e', (char)'-', (char)'v', (char)'1', (char)'a', (char)'\000'}, .data = (void const *)0}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .data = (void const *)0}};

#line 882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
struct of_device_id const __mod_of__xgbe_of_match_device_table[2U];

#line 885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static struct dev_pm_ops const xgbe_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & xgbe_suspend, .resume = & xgbe_resume, .freeze = & xgbe_suspend, .thaw = & xgbe_resume, .poweroff = & xgbe_suspend, .restore = & xgbe_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static struct platform_driver xgbe_driver = {.probe = & xgbe_probe, .remove = & xgbe_remove, .shutdown = (void (*)(struct platform_device *))0, .suspend = (int (*)(struct platform_device *, pm_message_t ))0, .resume = (int (*)(struct platform_device *))0, .driver = {.name = "amd-xgbe", .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)(& xgbe_of_match), .acpi_match_table = (struct acpi_device_id const *)(& xgbe_acpi_match), .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & xgbe_pm_ops, .p = (struct driver_private *)0}, .id_table = (struct platform_device_id const *)0, .prevent_deferred_probe = (_Bool)0};

#line 902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static int xgbe_driver_init(void)
{
  int tmp;
  
#line 902 
  tmp = ldv___platform_driver_register_79(& xgbe_driver,& __this_module);
  
#line 902 
  return tmp;
}


#line 902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-main.c"
static void xgbe_driver_exit(void)
{
  
#line 902 
  ldv_platform_driver_unregister_80(& xgbe_driver);
  
#line 903 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
struct dev_pm_ops *ldv_emg_alias_xgbe_pm_ops_3 = (struct dev_pm_ops *)(& xgbe_pm_ops);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
struct platform_driver *ldv_emg_alias_xgbe_driver_2 = & xgbe_driver;

#line 62 
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0);


#line 63 
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1);


#line 64 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 66 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 67 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 68 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
int ldv_emg_wrapper_xgbe_remove_3(struct platform_device *arg0)
{
  int tmp;
  
#line 76 
  tmp = xgbe_remove(arg0);
  
#line 76 
  return tmp;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
int ldv_emg_wrapper_xgbe_resume_4(struct device *arg0)
{
  int tmp;
  
#line 81 
  tmp = xgbe_resume(arg0);
  
#line 81 
  return tmp;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
void ldv_emg_xgbe_driver_exit(void)
{
  
#line 86 
  xgbe_driver_exit();
  
#line 87 
  return;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
int ldv_emg_wrapper_xgbe_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 90 
  tmp = xgbe_suspend(arg0);
  
#line 90 
  return tmp;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
int ldv_emg_xgbe_driver_init(void)
{
  int tmp;
  
#line 95 
  tmp = xgbe_driver_init();
  
#line 95 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
int ldv_emg_wrapper_xgbe_probe_2(struct platform_device *arg0)
{
  int tmp;
  
#line 99 
  tmp = xgbe_probe(arg0);
  
#line 99 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 114 
  tmp = ldv_ptr_err(ptr);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 122 
  ret = ldv_is_err(ptr);
  
#line 123 
  __retres = (_Bool)(ret != 0L);
  
#line 123 
  return __retres;
}


#line 782  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_73(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 786 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 786 
  return tmp;
}


#line 790  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static int ldv_register_netdev_74(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 794 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 794 
  return tmp;
}


#line 798  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static void ldv_unregister_netdev_75(struct net_device *ldv_func_arg1)
{
  
#line 802 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 803 
  return;
}


#line 806  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static void ldv_free_netdev_76(struct net_device *ldv_func_arg1)
{
  
#line 810 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 811 
  return;
}


#line 814  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static void ldv_unregister_netdev_77(struct net_device *ldv_func_arg1)
{
  
#line 818 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 819 
  return;
}


#line 822  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static void ldv_free_netdev_78(struct net_device *ldv_func_arg1)
{
  
#line 826 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 827 
  return;
}


#line 830  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static int ldv___platform_driver_register_79(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2)
{
  int tmp;
  
#line 834 
  tmp = ldv_emg___platform_driver_register(ldv_func_arg1,ldv_func_arg2);
  
#line 834 
  return tmp;
}


#line 838  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-main.c.aux"
static void ldv_platform_driver_unregister_80(struct platform_driver *ldv_func_arg1)
{
  
#line 842 
  ldv_emg_platform_driver_unregister(ldv_func_arg1);
  
#line 843 
  return;
}


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/math64.h"
__inline static u64 div_u64_rem(u64 dividend, u32 divisor, u32 *remainder)
{
  u64 __retres;
  
#line 20 
  *remainder = (unsigned int)(dividend % (unsigned long long)divisor);
  
#line 21 
  __retres = dividend / (unsigned long long)divisor;
  
#line 21 
  return __retres;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/math64.h"
__inline static u64 div_u64(u64 dividend, u32 divisor)
{
  u32 remainder;
  u64 tmp;
  
#line 100 
  tmp = div_u64_rem(dividend,divisor,& remainder);
  
#line 100 
  return tmp;
}


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static bool IS_ERR_0(void const *ptr);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 444 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 445 
  return;
}


#line 474 
static void ldv_spin_unlock_irqrestore_74(spinlock_t *lock, unsigned long flags);


#line 478 
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_73(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1);


#line 90 
void ldv_spin_model_lock(char *);


#line 91 
void ldv_spin_model_unlock(char *);


#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/time.h"
__inline static s64 timespec_to_ns(struct timespec const *ts)
{
  s64 __retres;
  
#line 193 
  __retres = (long long)ts->tv_sec * 1000000000LL + (long long)ts->tv_nsec;
  
#line 193 
  return __retres;
}


#line 215 
struct timespec ns_to_timespec(s64 const);


#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
ktime_t ktime_get_with_offset(enum tk_offsets);


#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
__inline static ktime_t ktime_get_real(void)
{
  ktime_t tmp;
  
#line 172 
  tmp = ktime_get_with_offset((enum tk_offsets)TK_OFFS_REAL);
  
#line 172 
  return tmp;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
void iowrite32(u32, void *);


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
struct ptp_clock *ptp_clock_register(struct ptp_clock_info *, struct device *);


#line 133 
int ptp_clock_unregister(struct ptp_clock *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timecounter.h"
__inline static void timecounter_adjtime(struct timecounter *tc, s64 delta)
{
  
#line 95 
  tc->nsec += (unsigned long long)delta;
  
#line 96 
  return;
}


#line 108 
void timecounter_init(struct timecounter *, struct cyclecounter const *, u64);


#line 120 
u64 timecounter_read(struct timecounter *);


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ptp.c"
static cycle_t xgbe_cc_read(struct cyclecounter const *cc)
{
  struct xgbe_prv_data *tmp;
  u64 nsec;
  {
    
#line 127 
    struct cyclecounter const *__mptr = cc;
    
#line 127 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709547704U;
  }
  
#line 127 
  struct xgbe_prv_data *pdata = tmp;
  
#line 132 
  nsec = (*(pdata->hw_if.get_tstamp_time))(pdata);
  
#line 134 
  return nsec;
}


#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ptp.c"
static int xgbe_adjfreq(struct ptp_clock_info *info, s32 delta)
{
  int __retres;
  struct xgbe_prv_data *tmp;
  unsigned long flags;
  u64 adjust;
  u32 addend;
  u32 diff;
  u64 tmp_0;
  {
    
#line 139 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)info;
    
#line 139 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709547832U;
  }
  
#line 139 
  struct xgbe_prv_data *pdata = tmp;
  
#line 145 
  unsigned int neg_adjust = 0U;
  
#line 147 
  if (delta < 0) {
    
#line 148 
    neg_adjust = 1U;
    
#line 149 
    delta = - delta;
  }
  else ;
  
#line 152 
  adjust = (unsigned long long)pdata->tstamp_addend;
  
#line 153 
  adjust = (unsigned long long)delta * adjust;
  
#line 154 
  tmp_0 = div_u64(adjust,1000000000U);
  
#line 154 
  diff = (unsigned int)tmp_0;
  
#line 156 
  if (neg_adjust != 0U) 
#line 156 
                        addend = pdata->tstamp_addend - diff; else 
#line 156 
                                                                   addend = pdata->tstamp_addend + diff;
  
#line 159 
  ldv___ldv_spin_lock_73(& pdata->tstamp_lock);
  
#line 161 
  (*(pdata->hw_if.update_tstamp_addend))(pdata,addend);
  
#line 163 
  ldv_spin_unlock_irqrestore_74(& pdata->tstamp_lock,flags);
  
#line 165 
  __retres = 0;
  
#line 165 
  return __retres;
}


#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ptp.c"
static int xgbe_adjtime(struct ptp_clock_info *info, s64 delta)
{
  int __retres;
  struct xgbe_prv_data *tmp;
  unsigned long flags;
  {
    
#line 170 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)info;
    
#line 170 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709547832U;
  }
  
#line 170 
  struct xgbe_prv_data *pdata = tmp;
  
#line 175 
  ldv___ldv_spin_lock_75(& pdata->tstamp_lock);
  
#line 176 
  timecounter_adjtime(& pdata->tstamp_tc,delta);
  
#line 177 
  ldv_spin_unlock_irqrestore_76(& pdata->tstamp_lock,flags);
  
#line 179 
  __retres = 0;
  
#line 179 
  return __retres;
}


#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ptp.c"
static int xgbe_gettime(struct ptp_clock_info *info, struct timespec *ts)
{
  int __retres;
  struct xgbe_prv_data *tmp;
  unsigned long flags;
  u64 nsec;
  {
    
#line 184 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)info;
    
#line 184 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709547832U;
  }
  
#line 184 
  struct xgbe_prv_data *pdata = tmp;
  
#line 190 
  ldv___ldv_spin_lock_77(& pdata->tstamp_lock);
  
#line 192 
  nsec = timecounter_read(& pdata->tstamp_tc);
  
#line 194 
  ldv_spin_unlock_irqrestore_78(& pdata->tstamp_lock,flags);
  
#line 196 
  *ts = ns_to_timespec((long long)nsec);
  
#line 198 
  __retres = 0;
  
#line 198 
  return __retres;
}


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ptp.c"
static int xgbe_settime(struct ptp_clock_info *info, struct timespec const *ts)
{
  int __retres;
  struct xgbe_prv_data *tmp;
  unsigned long flags;
  u64 nsec;
  s64 tmp_0;
  {
    
#line 204 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)info;
    
#line 204 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709547832U;
  }
  
#line 204 
  struct xgbe_prv_data *pdata = tmp;
  
#line 210 
  tmp_0 = timespec_to_ns(ts);
  
#line 210 
  nsec = (unsigned long long)tmp_0;
  
#line 212 
  ldv___ldv_spin_lock_79(& pdata->tstamp_lock);
  
#line 214 
  timecounter_init(& pdata->tstamp_tc,(struct cyclecounter const *)(& pdata->tstamp_cc),nsec);
  
#line 216 
  ldv_spin_unlock_irqrestore_80(& pdata->tstamp_lock,flags);
  
#line 218 
  __retres = 0;
  
#line 218 
  return __retres;
}


#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ptp.c"
static int xgbe_enable(struct ptp_clock_info *info, struct ptp_clock_request *request, int on)
{
  int __retres;
  
#line 224 
  __retres = -95;
  
#line 224 
  return __retres;
}


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ptp.c"
void xgbe_ptp_register(struct xgbe_prv_data *pdata)
{
  struct ptp_clock *clock;
  u64 dividend;
  char const *tmp;
  bool tmp_0;
  u64 tmp_1;
  ktime_t tmp_2;
  
#line 229 
  struct ptp_clock_info *info = & pdata->ptp_clock_info;
  
#line 231 
  struct cyclecounter *cc = & pdata->tstamp_cc;
  
#line 234 
  tmp = netdev_name((struct net_device const *)pdata->netdev);
  
#line 234 
  ;
  
#line 234 
  snprintf((char *)(& info->name),16UL,"%s",tmp);
  
#line 236 
  info->owner = & __this_module;
  
#line 237 
  info->max_adj = (int)pdata->ptpclk_rate;
  
#line 238 
  info->adjfreq = & xgbe_adjfreq;
  
#line 239 
  info->adjtime = & xgbe_adjtime;
  
#line 240 
  info->gettime64 = & xgbe_gettime;
  
#line 241 
  info->settime64 = & xgbe_settime;
  
#line 242 
  info->enable = & xgbe_enable;
  
#line 244 
  clock = ptp_clock_register(info,pdata->dev);
  
#line 245 
  tmp_0 = IS_ERR_0((void const *)clock);
  
#line 245 
  if ((int)tmp_0 != 0) {
    
#line 246 
    dev_err((struct device const *)pdata->dev,"ptp_clock_register failed\n");
    
#line 247 
    goto return_label;
  }
  else ;
  
#line 250 
  pdata->ptp_clock = clock;
  
#line 256 
  dividend = 50000000ULL;
  
#line 257 
  dividend <<= 32;
  
#line 258 
  tmp_1 = div_u64(dividend,(unsigned int)pdata->ptpclk_rate);
  
#line 258 
  pdata->tstamp_addend = (unsigned int)tmp_1;
  
#line 261 
  cc->read = & xgbe_cc_read;
  
#line 262 
  cc->mask = 18446744073709551615ULL;
  
#line 263 
  cc->mult = 1U;
  
#line 264 
  cc->shift = 0U;
  
#line 267 
  tmp_2 = ktime_get_real();
  
#line 266 
  ;
  
#line 266 
  ;
  
#line 266 
  timecounter_init(& pdata->tstamp_tc,(struct cyclecounter const *)(& pdata->tstamp_cc),(unsigned long long)tmp_2.tv64);
  
#line 270 
  iowrite32(0U,pdata->xgmac_regs);
  
#line 271 
  pdata->tstamp_config.tx_type = 0;
  
#line 272 
  pdata->tstamp_config.rx_filter = 0;
  return_label: 
#line 273 
                return;
}


#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ptp.c"
void xgbe_ptp_unregister(struct xgbe_prv_data *pdata)
{
  
#line 277 
  if (pdata->ptp_clock != (struct ptp_clock *)0) 
#line 278 
                                                 ptp_clock_unregister(pdata->ptp_clock); else ;
  
#line 279 
  return;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
static bool IS_ERR_0(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 86 
  ret = ldv_is_err(ptr);
  
#line 87 
  __retres = (_Bool)(ret != 0L);
  
#line 87 
  return __retres;
}


#line 746  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
static void ldv___ldv_spin_lock_73(spinlock_t *ldv_func_arg1)
{
  
#line 750 
  ldv_spin_model_lock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 752 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 753 
  return;
}


#line 756  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
static void ldv_spin_unlock_irqrestore_74(spinlock_t *lock, unsigned long flags)
{
  
#line 760 
  ldv_spin_model_unlock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 762 
  spin_unlock_irqrestore(lock,flags);
  
#line 763 
  return;
}


#line 766  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1)
{
  
#line 770 
  ldv_spin_model_lock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 772 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 773 
  return;
}


#line 776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags)
{
  
#line 780 
  ldv_spin_model_unlock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 782 
  spin_unlock_irqrestore(lock,flags);
  
#line 783 
  return;
}


#line 786  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1)
{
  
#line 790 
  ldv_spin_model_lock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 792 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 793 
  return;
}


#line 796  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 800 
  ldv_spin_model_unlock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 802 
  spin_unlock_irqrestore(lock,flags);
  
#line 803 
  return;
}


#line 806  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1)
{
  
#line 810 
  ldv_spin_model_lock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 812 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 813 
  return;
}


#line 816  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ptp.c.aux"
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags)
{
  
#line 820 
  ldv_spin_model_unlock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 822 
  spin_unlock_irqrestore(lock,flags);
  
#line 823 
  return;
}


#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int kstrtouint(char const *, unsigned int, unsigned int *);


#line 413 
char *kasprintf(gfp_t, char const * , ...);


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
size_t strlen(char const *);


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
unsigned int ioread32(void *);


#line 2812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
int simple_open(struct inode *, struct file *);


#line 2843 
ssize_t simple_read_from_buffer(void *, size_t, loff_t *, void const *, size_t);


#line 2845 
ssize_t simple_write_to_buffer(void *, size_t, loff_t *, void const *, size_t);


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
static struct dentry *ldv_debugfs_create_file_73(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 58 
static struct dentry *ldv_debugfs_create_file_74(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 62 
static struct dentry *ldv_debugfs_create_file_75(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 66 
static struct dentry *ldv_debugfs_create_file_76(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 70 
static struct dentry *ldv_debugfs_create_file_77(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 78 
struct dentry *debugfs_create_dir(char const *, struct dentry *);


#line 89 
void debugfs_remove_recursive(struct dentry *);


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xgbe_common_read(char *buffer, size_t count, loff_t *ppos, unsigned int value)
{
  ssize_t __retres;
  char *buf;
  ssize_t len;
  size_t tmp;
  size_t tmp_0;
  
#line 130 
  if (*ppos != 0LL) {
    
#line 131 
    __retres = 0L;
    
#line 131 
    goto return_label;
  }
  else ;
  
#line 133 
  buf = kasprintf(208U,"0x%08x\n",value);
  
#line 134 
  if (buf == (char *)0) {
    
#line 135 
    __retres = -12L;
    
#line 135 
    goto return_label;
  }
  else ;
  
#line 137 
  tmp = strlen((char const *)buf);
  
#line 137 
  ;
  
#line 137 
  if (tmp > count) {
    
#line 138 
    kfree((void const *)buf);
    
#line 139 
    __retres = -28L;
    
#line 139 
    goto return_label;
  }
  else ;
  
#line 142 
  tmp_0 = strlen((char const *)buf);
  
#line 142 
  ;
  
#line 142 
  ;
  
#line 142 
  ;
  
#line 142 
  ;
  
#line 142 
  len = simple_read_from_buffer((void *)buffer,count,ppos,(void const *)buf,tmp_0);
  
#line 143 
  kfree((void const *)buf);
  
#line 145 
  __retres = len;
  return_label: 
#line 145 
                return __retres;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xgbe_common_write(char const *buffer, size_t count, loff_t *ppos, unsigned int *value)
{
  ssize_t __retres;
  char workarea[32U];
  ssize_t len;
  int ret;
  
#line 155 
  if (*ppos != 0LL) {
    
#line 156 
    __retres = 0L;
    
#line 156 
    goto return_label;
  }
  else ;
  
#line 158 
  if (count > 31UL) {
    
#line 159 
    __retres = -28L;
    
#line 159 
    goto return_label;
  }
  else ;
  
#line 161 
  len = simple_write_to_buffer((void *)(& workarea),31UL,ppos,(void const *)buffer,count);
  
#line 163 
  if (len < 0L) {
    
#line 164 
    __retres = len;
    
#line 164 
    goto return_label;
  }
  else ;
  
#line 166 
  workarea[len] = (char)0;
  
#line 167 
  ret = kstrtouint((char const *)(& workarea),16U,value);
  
#line 168 
  if (ret != 0) {
    
#line 169 
    __retres = -5L;
    
#line 169 
    goto return_label;
  }
  else ;
  
#line 171 
  __retres = len;
  return_label: 
#line 171 
                return __retres;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xgmac_reg_addr_read(struct file *filp, char *buffer, size_t count, loff_t *ppos)
{
  ssize_t tmp;
  
#line 177 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 179 
  tmp = xgbe_common_read(buffer,count,ppos,pdata->debugfs_xgmac_reg);
  
#line 179 
  return tmp;
}


#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xgmac_reg_addr_write(struct file *filp, char const *buffer, size_t count, loff_t *ppos)
{
  ssize_t tmp;
  
#line 186 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 188 
  tmp = xgbe_common_write(buffer,count,ppos,& pdata->debugfs_xgmac_reg);
  
#line 188 
  return tmp;
}


#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xgmac_reg_value_read(struct file *filp, char *buffer, size_t count, loff_t *ppos)
{
  unsigned int value;
  ssize_t tmp;
  
#line 195 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 198 
  value = ioread32(pdata->xgmac_regs + pdata->debugfs_xgmac_reg);
  
#line 200 
  tmp = xgbe_common_read(buffer,count,ppos,value);
  
#line 200 
  return tmp;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xgmac_reg_value_write(struct file *filp, char const *buffer, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  unsigned int value;
  ssize_t len;
  
#line 207 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 211 
  len = xgbe_common_write(buffer,count,ppos,& value);
  
#line 212 
  if (len < 0L) {
    
#line 213 
    __retres = len;
    
#line 213 
    goto return_label;
  }
  else ;
  
#line 215 
  iowrite32(value,pdata->xgmac_regs + pdata->debugfs_xgmac_reg);
  
#line 217 
  __retres = len;
  return_label: 
#line 217 
                return __retres;
}


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static struct file_operations const xgmac_reg_addr_fops = {.owner = & __this_module, .llseek = (loff_t (*)(struct file *, loff_t , int ))0, .read = & xgmac_reg_addr_read, .write = & xgmac_reg_addr_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static struct file_operations const xgmac_reg_value_fops = {.owner = & __this_module, .llseek = (loff_t (*)(struct file *, loff_t , int ))0, .read = & xgmac_reg_value_read, .write = & xgmac_reg_value_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xpcs_mmd_read(struct file *filp, char *buffer, size_t count, loff_t *ppos)
{
  ssize_t tmp;
  
#line 237 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 239 
  tmp = xgbe_common_read(buffer,count,ppos,pdata->debugfs_xpcs_mmd);
  
#line 239 
  return tmp;
}


#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xpcs_mmd_write(struct file *filp, char const *buffer, size_t count, loff_t *ppos)
{
  ssize_t tmp;
  
#line 245 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 247 
  tmp = xgbe_common_write(buffer,count,ppos,& pdata->debugfs_xpcs_mmd);
  
#line 247 
  return tmp;
}


#line 251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xpcs_reg_addr_read(struct file *filp, char *buffer, size_t count, loff_t *ppos)
{
  ssize_t tmp;
  
#line 254 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 256 
  tmp = xgbe_common_read(buffer,count,ppos,pdata->debugfs_xpcs_reg);
  
#line 256 
  return tmp;
}


#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xpcs_reg_addr_write(struct file *filp, char const *buffer, size_t count, loff_t *ppos)
{
  ssize_t tmp;
  
#line 262 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 264 
  tmp = xgbe_common_write(buffer,count,ppos,& pdata->debugfs_xpcs_reg);
  
#line 264 
  return tmp;
}


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xpcs_reg_value_read(struct file *filp, char *buffer, size_t count, loff_t *ppos)
{
  unsigned int value;
  int tmp;
  ssize_t tmp_0;
  
#line 271 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 274 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,(int)(((pdata->debugfs_xpcs_mmd << 16) | (pdata->debugfs_xpcs_reg & 65535U)) | 1073741824U));
  
#line 274 
  value = (unsigned int)tmp;
  
#line 277 
  tmp_0 = xgbe_common_read(buffer,count,ppos,value);
  
#line 277 
  return tmp_0;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static ssize_t xpcs_reg_value_write(struct file *filp, char const *buffer, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  unsigned int value;
  ssize_t len;
  
#line 284 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)filp->private_data;
  
#line 288 
  len = xgbe_common_write(buffer,count,ppos,& value);
  
#line 289 
  if (len < 0L) {
    
#line 290 
    __retres = len;
    
#line 290 
    goto return_label;
  }
  else ;
  
#line 292 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,(int)(((pdata->debugfs_xpcs_mmd << 16) | (pdata->debugfs_xpcs_reg & 65535U)) | 1073741824U),(int)value);
  
#line 295 
  __retres = len;
  return_label: 
#line 295 
                return __retres;
}


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static struct file_operations const xpcs_mmd_fops = {.owner = & __this_module, .llseek = (loff_t (*)(struct file *, loff_t , int ))0, .read = & xpcs_mmd_read, .write = & xpcs_mmd_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static struct file_operations const xpcs_reg_addr_fops = {.owner = & __this_module, .llseek = (loff_t (*)(struct file *, loff_t , int ))0, .read = & xpcs_reg_addr_read, .write = & xpcs_reg_addr_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
static struct file_operations const xpcs_reg_value_fops = {.owner = & __this_module, .llseek = (loff_t (*)(struct file *, loff_t , int ))0, .read = & xpcs_reg_value_read, .write = & xpcs_reg_value_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
void xgbe_debugfs_init(struct xgbe_prv_data *pdata)
{
  struct dentry *pfile;
  char *buf;
  
#line 325 
  pdata->debugfs_xgmac_reg = 0U;
  
#line 326 
  pdata->debugfs_xpcs_mmd = 1U;
  
#line 327 
  pdata->debugfs_xpcs_reg = 0U;
  
#line 329 
  buf = kasprintf(208U,"amd-xgbe-%s",(char *)(& (pdata->netdev)->name));
  
#line 330 
  pdata->xgbe_debugfs = debugfs_create_dir((char const *)buf,(struct dentry *)0);
  
#line 331 
  if (pdata->xgbe_debugfs == (struct dentry *)0) {
    
#line 332 
    netdev_err((struct net_device const *)pdata->netdev,"debugfs_create_dir failed\n");
    
#line 333 
    goto return_label;
  }
  else ;
  
#line 336 
  pfile = ldv_debugfs_create_file_73("xgmac_register",(unsigned short)384,pdata->xgbe_debugfs,(void *)pdata,& xgmac_reg_addr_fops);
  
#line 339 
  if (pfile == (struct dentry *)0) 
#line 340 
                                   netdev_err((struct net_device const *)pdata->netdev,"debugfs_create_file failed\n"); else ;
  
#line 342 
  pfile = ldv_debugfs_create_file_74("xgmac_register_value",(unsigned short)384,pdata->xgbe_debugfs,(void *)pdata,& xgmac_reg_value_fops);
  
#line 345 
  if (pfile == (struct dentry *)0) 
#line 346 
                                   netdev_err((struct net_device const *)pdata->netdev,"debugfs_create_file failed\n"); else ;
  
#line 348 
  pfile = ldv_debugfs_create_file_75("xpcs_mmd",(unsigned short)384,pdata->xgbe_debugfs,(void *)pdata,& xpcs_mmd_fops);
  
#line 351 
  if (pfile == (struct dentry *)0) 
#line 352 
                                   netdev_err((struct net_device const *)pdata->netdev,"debugfs_create_file failed\n"); else ;
  
#line 354 
  pfile = ldv_debugfs_create_file_76("xpcs_register",(unsigned short)384,pdata->xgbe_debugfs,(void *)pdata,& xpcs_reg_addr_fops);
  
#line 357 
  if (pfile == (struct dentry *)0) 
#line 358 
                                   netdev_err((struct net_device const *)pdata->netdev,"debugfs_create_file failed\n"); else ;
  
#line 360 
  pfile = ldv_debugfs_create_file_77("xpcs_register_value",(unsigned short)384,pdata->xgbe_debugfs,(void *)pdata,& xpcs_reg_value_fops);
  
#line 363 
  if (pfile == (struct dentry *)0) 
#line 364 
                                   netdev_err((struct net_device const *)pdata->netdev,"debugfs_create_file failed\n"); else ;
  
#line 366 
  kfree((void const *)buf);
  return_label: 
#line 367 
                return;
}


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c"
void xgbe_debugfs_exit(struct xgbe_prv_data *pdata)
{
  
#line 371 
  debugfs_remove_recursive(pdata->xgbe_debugfs);
  
#line 372 
  pdata->xgbe_debugfs = (struct dentry *)0;
  
#line 373 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
struct file_operations *ldv_emg_alias_xgmac_reg_value_fops_2 = (struct file_operations *)(& xgmac_reg_value_fops);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
struct file_operations *ldv_emg_alias_xpcs_reg_addr_fops_2 = (struct file_operations *)(& xpcs_reg_addr_fops);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
struct file_operations *ldv_emg_alias_xgmac_reg_addr_fops_2 = (struct file_operations *)(& xgmac_reg_addr_fops);

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
struct file_operations *ldv_emg_alias_xpcs_mmd_fops_2 = (struct file_operations *)(& xpcs_mmd_fops);

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
struct file_operations *ldv_emg_alias_xpcs_reg_value_fops_2 = (struct file_operations *)(& xpcs_reg_value_fops);

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
int (*ldv_emg_alias_simple_open_5)(struct inode *, struct file *) = & simple_open;

#line 69 
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xpcs_reg_value_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 79 
  tmp = xpcs_reg_value_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xgmac_reg_value_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 84 
  tmp = xgmac_reg_value_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 84 
  return tmp;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xpcs_reg_addr_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 89 
  tmp = xpcs_reg_addr_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 89 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xpcs_mmd_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 94 
  tmp = xpcs_mmd_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 94 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xpcs_reg_value_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 99 
  tmp = xpcs_reg_value_read(arg0,arg1,arg2,arg3);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xgmac_reg_addr_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 104 
  tmp = xgmac_reg_addr_read(arg0,arg1,arg2,arg3);
  
#line 104 
  return tmp;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xgmac_reg_value_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 109 
  tmp = xgmac_reg_value_read(arg0,arg1,arg2,arg3);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xpcs_reg_addr_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 114 
  tmp = xpcs_reg_addr_read(arg0,arg1,arg2,arg3);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xgmac_reg_addr_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 119 
  tmp = xgmac_reg_addr_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
long ldv_emg_wrapper_xpcs_mmd_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 124 
  tmp = xpcs_mmd_read(arg0,arg1,arg2,arg3);
  
#line 124 
  return tmp;
}


#line 807  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_73(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 811 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 811 
  return tmp;
}


#line 815  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_74(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 819 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 819 
  return tmp;
}


#line 823  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_75(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 827 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 827 
  return tmp;
}


#line 831  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_76(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 835 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 835 
  return tmp;
}


#line 839  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_77(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 843 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 843 
  return tmp;
}


#line 639  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void *devm_kmalloc(struct device *, size_t, gfp_t);


#line 645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *devm_kzalloc(struct device *dev, size_t size, gfp_t gfp)
{
  void *tmp;
  
#line 647 
  tmp = devm_kmalloc(dev,size,gfp | 32768U);
  
#line 647 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c"
static int xgbe_dcb_ieee_getets(struct net_device *netdev, struct ieee_ets *ets)
{
  int __retres;
  
#line 126 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 129 
  ets->ets_cap = (unsigned char)pdata->hw_feat.tc_cnt;
  
#line 131 
  if (pdata->ets != (struct ieee_ets *)0) {
    
#line 132 
    ets->cbs = (pdata->ets)->cbs;
    
#line 133 
    memcpy((void *)(& ets->tc_tx_bw),(void const *)(& (pdata->ets)->tc_tx_bw),8UL);
    
#line 135 
    memcpy((void *)(& ets->tc_tsa),(void const *)(& (pdata->ets)->tc_tsa),8UL);
    
#line 137 
    memcpy((void *)(& ets->prio_tc),(void const *)(& (pdata->ets)->prio_tc),8UL);
  }
  else ;
  
#line 141 
  __retres = 0;
  
#line 141 
  return __retres;
}


#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c"
static int xgbe_dcb_ieee_setets(struct net_device *netdev, struct ieee_ets *ets)
{
  int __retres;
  unsigned int i;
  unsigned int tc_ets;
  unsigned int tc_ets_weight;
  
#line 147 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 150 
  tc_ets = 0U;
  
#line 151 
  tc_ets_weight = 0U;
  
#line 152 
  i = 0U;
  
#line 152 
  goto ldv_44944;
  ldv_44943: 
#line 153 
  ;
  
#line 153 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 153 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_dcb_ieee_setets", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c", .format = "TC%u: tx_bw=%hhu, rx_bw=%hhu, tsa=%hhu\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))156U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 153 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 153 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)netdev,"TC%u: tx_bw=%hhu, rx_bw=%hhu, tsa=%hhu\n",i,(int)ets->tc_tx_bw[i],(int)ets->tc_rx_bw[i],(int)ets->tc_tsa[i]); else ;
  }
  else ;
  
#line 157 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 157 
    struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_dcb_ieee_setets", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c", .format = "PRIO%u: TC=%hhu\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))158U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 157 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 157 
                                                          __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)netdev,"PRIO%u: TC=%hhu\n",i,(int)ets->prio_tc[i]); else ;
  }
  else ;
  
#line 160 
  if (((unsigned int)ets->tc_tx_bw[i] != 0U || (unsigned int)ets->tc_tsa[i] != 0U) && pdata->hw_feat.tc_cnt <= i) {
    
#line 162 
    __retres = -22;
    
#line 162 
    goto return_label;
  }
  else ;
  
#line 164 
  if ((unsigned int)ets->prio_tc[i] >= pdata->hw_feat.tc_cnt) {
    
#line 165 
    __retres = -22;
    
#line 165 
    goto return_label;
  }
  else ;
  
#line 167 
  switch ((int)ets->tc_tsa[i]) {
    case 0: 
#line 168 
    ;
    
#line 169 
    goto ldv_44940;
    case 2: 
#line 170 
    ;
    
#line 171 
    tc_ets = 1U;
    
#line 172 
    tc_ets_weight = (unsigned int)ets->tc_tx_bw[i] + tc_ets_weight;
    
#line 173 
    goto ldv_44940;
    default: 
#line 175 
    ;
    
#line 176 
    __retres = -22;
    
#line 176 
    goto return_label;
  }
  ldv_44940: 
#line 178 
  ;
  
#line 152 
  i += 1U;
  ldv_44944: 
#line 153 
  ;
  
#line 152 
  if (i <= 7U) 
#line 154 
               goto ldv_44943; else 
#line 157 
                                    goto ldv_44945;
  ldv_44945: 
#line 158 
  ;
  
#line 181 
  if (tc_ets != 0U && tc_ets_weight != 100U) {
    
#line 182 
    __retres = -22;
    
#line 182 
    goto return_label;
  }
  else ;
  
#line 184 
  if (pdata->ets == (struct ieee_ets *)0) {
    
#line 185 
    pdata->ets = (struct ieee_ets *)devm_kzalloc(pdata->dev,59UL,208U);
    
#line 187 
    if (pdata->ets == (struct ieee_ets *)0) {
      
#line 188 
      __retres = -12;
      
#line 188 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 191 
  memcpy((void *)pdata->ets,(void const *)ets,59UL);
  
#line 193 
  (*(pdata->hw_if.config_dcb_tc))(pdata);
  
#line 195 
  __retres = 0;
  return_label: 
#line 195 
                return __retres;
}


#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c"
static int xgbe_dcb_ieee_getpfc(struct net_device *netdev, struct ieee_pfc *pfc)
{
  int __retres;
  
#line 201 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 204 
  pfc->pfc_cap = (unsigned char)pdata->hw_feat.tc_cnt;
  
#line 206 
  if (pdata->pfc != (struct ieee_pfc *)0) {
    
#line 207 
    pfc->pfc_en = (pdata->pfc)->pfc_en;
    
#line 208 
    pfc->mbc = (pdata->pfc)->mbc;
    
#line 209 
    pfc->delay = (pdata->pfc)->delay;
  }
  else ;
  
#line 212 
  __retres = 0;
  
#line 212 
  return __retres;
}


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c"
static int xgbe_dcb_ieee_setpfc(struct net_device *netdev, struct ieee_pfc *pfc)
{
  int __retres;
  
#line 218 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 220 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 220 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_dcb_ieee_setpfc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c", .format = "cap=%hhu, en=%#hhx, mbc=%hhu, delay=%hhu\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))222U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 220 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 220 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)netdev,"cap=%hhu, en=%#hhx, mbc=%hhu, delay=%hhu\n",(int)pfc->pfc_cap,(int)pfc->pfc_en,(int)pfc->mbc,(int)pfc->delay); else ;
  }
  else ;
  
#line 224 
  if (pdata->pfc == (struct ieee_pfc *)0) {
    
#line 225 
    pdata->pfc = (struct ieee_pfc *)devm_kzalloc(pdata->dev,136UL,208U);
    
#line 227 
    if (pdata->pfc == (struct ieee_pfc *)0) {
      
#line 228 
      __retres = -12;
      
#line 228 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 231 
  memcpy((void *)pdata->pfc,(void const *)pfc,136UL);
  
#line 233 
  (*(pdata->hw_if.config_dcb_pfc))(pdata);
  
#line 235 
  __retres = 0;
  return_label: 
#line 235 
                return __retres;
}


#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c"
static u8 xgbe_dcb_getdcbx(struct net_device *netdev)
{
  u8 __retres;
  
#line 240 
  __retres = (unsigned char)9U;
  
#line 240 
  return __retres;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c"
static u8 xgbe_dcb_setdcbx(struct net_device *netdev, u8 dcbx)
{
  u8 __retres;
  
#line 245 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 246 
  u8 support = xgbe_dcb_getdcbx(netdev);
  
#line 248 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 248 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_dcb_setdcbx", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c", .format = "DCBX=%#hhx\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))248U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 248 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 248 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)netdev,"DCBX=%#hhx\n",(int)dcbx); else ;
  }
  else ;
  
#line 250 
  if (((int)dcbx & ~ ((int)support)) != 0) {
    
#line 251 
    __retres = (unsigned char)1U;
    
#line 251 
    goto return_label;
  }
  else ;
  
#line 253 
  if (((int)dcbx & (int)support) != (int)support) {
    
#line 254 
    __retres = (unsigned char)1U;
    
#line 254 
    goto return_label;
  }
  else ;
  
#line 256 
  __retres = (unsigned char)0U;
  return_label: 
#line 256 
                return __retres;
}


#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c"
static struct dcbnl_rtnl_ops const xgbe_dcbnl_ops = {.ieee_getets = & xgbe_dcb_ieee_getets, .ieee_setets = & xgbe_dcb_ieee_setets, .ieee_getmaxrate = (int (*)(struct net_device *, struct ieee_maxrate *))0, .ieee_setmaxrate = (int (*)(struct net_device *, struct ieee_maxrate *))0, .ieee_getqcn = (int (*)(struct net_device *, struct ieee_qcn *))0, .ieee_setqcn = (int (*)(struct net_device *, struct ieee_qcn *))0, .ieee_getqcnstats = (int (*)(struct net_device *, struct ieee_qcn_stats *))0, .ieee_getpfc = & xgbe_dcb_ieee_getpfc, .ieee_setpfc = & xgbe_dcb_ieee_setpfc, .ieee_getapp = (int (*)(struct net_device *, struct dcb_app *))0, .ieee_setapp = (int (*)(struct net_device *, struct dcb_app *))0, .ieee_delapp = (int (*)(struct net_device *, struct dcb_app *))0, .ieee_peer_getets = (int (*)(struct net_device *, struct ieee_ets *))0, .ieee_peer_getpfc = (int (*)(struct net_device *, struct ieee_pfc *))0, .getstate = (u8 (*)(struct net_device *))0, .setstate = (u8 (*)(struct net_device *, u8 ))0, .getpermhwaddr = (void (*)(struct net_device *, u8 *))0, .setpgtccfgtx = (void (*)(struct net_device *, int , u8 , u8 , u8 , u8 ))0, .setpgbwgcfgtx = (void (*)(struct net_device *, int , u8 ))0, .setpgtccfgrx = (void (*)(struct net_device *, int , u8 , u8 , u8 , u8 ))0, .setpgbwgcfgrx = (void (*)(struct net_device *, int , u8 ))0, .getpgtccfgtx = (void (*)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *))0, .getpgbwgcfgtx = (void (*)(struct net_device *, int , u8 *))0, .getpgtccfgrx = (void (*)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *))0, .getpgbwgcfgrx = (void (*)(struct net_device *, int , u8 *))0, .setpfccfg = (void (*)(struct net_device *, int , u8 ))0, .getpfccfg = (void (*)(struct net_device *, int , u8 *))0, .setall = (u8 (*)(struct net_device *))0, .getcap = (u8 (*)(struct net_device *, int , u8 *))0, .getnumtcs = (int (*)(struct net_device *, int , u8 *))0, .setnumtcs = (int (*)(struct net_device *, int , u8 ))0, .getpfcstate = (u8 (*)(struct net_device *))0, .setpfcstate = (void (*)(struct net_device *, u8 ))0, .getbcncfg = (void (*)(struct net_device *, int , u32 *))0, .setbcncfg = (void (*)(struct net_device *, int , u32 ))0, .getbcnrp = (void (*)(struct net_device *, int , u8 *))0, .setbcnrp = (void (*)(struct net_device *, int , u8 ))0, .setapp = (int (*)(struct net_device *, u8 , u16 , u8 ))0, .getapp = (int (*)(struct net_device *, u8 , u16 ))0, .getfeatcfg = (u8 (*)(struct net_device *, int , u8 *))0, .setfeatcfg = (u8 (*)(struct net_device *, int , u8 ))0, .getdcbx = & xgbe_dcb_getdcbx, .setdcbx = & xgbe_dcb_setdcbx, .peer_getappinfo = (int (*)(struct net_device *, struct dcb_peer_app_info *, u16 *))0, .peer_getapptable = (int (*)(struct net_device *, struct dcb_app *))0, .cee_peer_getpg = (int (*)(struct net_device *, struct cee_pg *))0, .cee_peer_getpfc = (int (*)(struct net_device *, struct cee_pfc *))0};

#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dcb.c"
struct dcbnl_rtnl_ops const *xgbe_get_dcbnl_ops(void)
{
  struct dcbnl_rtnl_ops const *__retres;
  
#line 273 
  __retres = & xgbe_dcbnl_ops;
  
#line 273 
  return __retres;
}

unsigned short __builtin_bswap16(unsigned short);


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_fault(char const *, int);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
static void atomic_inc_0(atomic_t *v);


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 448 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 449 
  return;
}


#line 478 
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_88(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_93(spinlock_t *lock, unsigned long flags);


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_87(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_92(spinlock_t *ldv_func_arg1);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
__inline static ktime_t ns_to_ktime(u64 ns)
{
  
#line 285 
  ktime_t const ktime_zero = {.tv64 = 0LL};
  
#line 287 
  ktime_t __constr_expr_17 = {.tv64 = (long long)((unsigned long long)ktime_zero.tv64 + ns)};
  
#line 287 
  return __constr_expr_17;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_77(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_78(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_79(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_80(struct timer_list *ldv_func_arg1);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 560 
static bool ldv_schedule_work_74(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_75(struct work_struct *work);


#line 568 
static bool ldv_schedule_work_76(struct work_struct *work);


#line 572 
static bool ldv_schedule_work_89(struct work_struct *work);


#line 576 
static bool ldv_schedule_work_94(struct work_struct *work);


#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags);


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_from_user(void *, void const *, unsigned int);


#line 652 
unsigned long _copy_to_user(void *, void const *, unsigned int);


#line 662 
void copy_from_user_overflow(void);


#line 664 
void copy_to_user_overflow(void);


#line 672 
void __copy_from_user_overflow(void);


#line 677 
void __copy_to_user_overflow(void);


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void const *from, unsigned long n)
{
  
#line 695 
  int sz = -1;
  
#line 697 
  __might_fault("./arch/x86/include/asm/uaccess.h",697);
  
#line 717 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 718 
                                                                    n = _copy_from_user(to,from,(unsigned int)n);
  else 
    
#line 719 
    if (0 != 0) 
#line 720 
                copy_from_user_overflow(); else 
#line 722 
                                                __copy_from_user_overflow();
  
#line 724 
  return n;
}


#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_to_user(void *to, void const *from, unsigned long n)
{
  
#line 730 
  int sz = -1;
  
#line 732 
  __might_fault("./arch/x86/include/asm/uaccess.h",732);
  
#line 735 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 736 
                                                                    n = _copy_to_user(to,from,(unsigned int)n);
  else 
    
#line 737 
    if (0 != 0) 
#line 738 
                copy_to_user_overflow(); else 
#line 740 
                                              __copy_to_user_overflow();
  
#line 742 
  return n;
}


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_sync_single_range_for_cpu(struct device *, dma_addr_t, unsigned long, size_t, int);


#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_range_for_cpu(struct device *dev, dma_addr_t addr, unsigned long offset, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 132 
  struct dma_map_ops const *ops = get_dma_ops(dev);
  
#line 134 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 134 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 136 
    ldv_inline_asm();
    
#line 134 
    ;
  }
  else ;
  
#line 135 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 136 
    (*(ops->sync_single_for_cpu))(dev,addr + (unsigned long long)offset,size,dir); else ;
  
#line 137 
  debug_dma_sync_single_range_for_cpu(dev,addr,offset,size,(int)dir);
  
#line 138 
  return;
}


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void consume_skb(struct sk_buff *);


#line 852 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_hash(struct sk_buff *skb, __u32 hash, enum pkt_hash_types type)
{
  
#line 928 
  skb->l4_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))(type == (unsigned int)PKT_HASH_TYPE_L4);
  
#line 929 
  skb->sw_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 930 
  skb->hash = hash;
  
#line 931 
  return;
}


#line 1000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct skb_shared_hwtstamps *skb_hwtstamps(struct sk_buff *skb)
{
  struct skb_shared_hwtstamps *__retres;
  unsigned char *tmp;
  
#line 1002 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1002 
  __retres = & ((struct skb_shared_info *)tmp)->hwtstamps;
  
#line 1002 
  return __retres;
}


#line 1085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *skb_get(struct sk_buff *skb)
{
  
#line 1087 
  atomic_inc_0(& skb->users);
  
#line 1088 
  return skb;
}


#line 1127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_header_cloned(struct sk_buff const *skb)
{
  int __retres;
  int dataref;
  unsigned char *tmp;
  
#line 1131 
  if ((unsigned int)*((unsigned char *)skb + 142UL) == 0U) {
    
#line 1132 
    __retres = 0;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1134 
  tmp = skb_end_pointer(skb);
  
#line 1134 
  dataref = atomic_read((atomic_t const *)(& ((struct skb_shared_info *)tmp)->dataref));
  
#line 1135 
  dataref = (dataref & 65535) - (dataref >> 16);
  
#line 1136 
  __retres = dataref != 1;
  return_label: 
#line 1136 
                return __retres;
}


#line 1639 
void skb_add_rx_frag(struct sk_buff *, int, struct page *, int, int, unsigned int);


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 2198 
struct sk_buff *__napi_alloc_skb(struct napi_struct *, unsigned int, gfp_t);


#line 2200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *napi_alloc_skb(struct napi_struct *napi, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2203 
  tmp = __napi_alloc_skb(napi,length,32U);
  
#line 2203 
  return tmp;
}


#line 2427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_cow(struct sk_buff *skb, unsigned int headroom, int cloned)
{
  int __retres;
  unsigned int tmp_0;
  
#line 2430 
  int delta = 0;
  
#line 2432 
  tmp_0 = skb_headroom((struct sk_buff const *)skb);
  
#line 2432 
  ;
  
#line 2432 
  if (tmp_0 < headroom) {
    unsigned int tmp;
    
#line 2433 
    tmp = skb_headroom((struct sk_buff const *)skb);
    
#line 2433 
    delta = (int)(headroom - tmp);
  }
  else ;
  
#line 2435 
  if (delta != 0 || cloned != 0) {
    int tmp_5;
    int tmp_2;
    int tmp_4;
    {
      int tmp_1;
      
#line 2436 
      int _max1 = 32;
      
#line 2436 
      int _max2 = 64;
      
#line 2436 
      if (_max1 > _max2) 
#line 2436 
                         tmp_1 = _max1; else 
#line 2436 
                                             tmp_1 = _max2;
      
#line 2436 
      tmp_2 = tmp_1;
    }
    {
      int tmp_3;
      
#line 2436 
      int _max1_0 = 32;
      
#line 2436 
      int _max2_0 = 64;
      
#line 2436 
      if (_max1_0 > _max2_0) 
#line 2436 
                             tmp_3 = _max1_0; else 
#line 2436 
                                                   tmp_3 = _max2_0;
      
#line 2436 
      tmp_4 = tmp_3;
    }
    
#line 2436 
    ;
    
#line 2436 
    ;
    
#line 2436 
    tmp_5 = pskb_expand_head(skb,((tmp_2 + -1) + delta) & ~ (tmp_4 + -1),0,32U);
    
#line 2436 
    __retres = tmp_5;
    
#line 2436 
    goto return_label;
  }
  else ;
  
#line 2438 
  __retres = 0;
  return_label: 
#line 2438 
                return __retres;
}


#line 2468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_cow_head(struct sk_buff *skb, unsigned int headroom)
{
  int tmp_0;
  int tmp;
  
#line 2470 
  tmp = skb_header_cloned((struct sk_buff const *)skb);
  
#line 2470 
  ;
  
#line 2470 
  ;
  
#line 2470 
  tmp_0 = __skb_cow(skb,headroom,tmp);
  
#line 2470 
  return tmp_0;
}


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data(struct sk_buff *skb, void const *from, unsigned int const len)
{
  
#line 2807 
  memcpy((void *)skb->data,from,(unsigned long)len);
  
#line 2808 
  return;
}


#line 2865 
void skb_clone_tx_timestamp(struct sk_buff *);


#line 2911 
void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);


#line 2914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void sw_tx_timestamp(struct sk_buff *skb)
{
  unsigned char *tmp;
  
#line 2916 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2916 
  ;
  
#line 2916 
  if (((int)((struct skb_shared_info *)tmp)->tx_flags & 2) != 0) {
    unsigned char *tmp_0;
    
#line 2917 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2916 
    ;
    
#line 2916 
    if (((int)((struct skb_shared_info *)tmp_0)->tx_flags & 4) == 0) 
      
#line 2918 
      skb_tstamp_tx(skb,(struct skb_shared_hwtstamps *)0); else ;
  }
  else ;
  
#line 2919 
  return;
}


#line 2933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_tx_timestamp(struct sk_buff *skb)
{
  
#line 2935 
  skb_clone_tx_timestamp(skb);
  
#line 2936 
  sw_tx_timestamp(skb);
  
#line 2937 
  return;
}


#line 3305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_record_rx_queue(struct sk_buff *skb, u16 rx_queue)
{
  
#line 3307 
  skb->queue_mapping = (unsigned short)((unsigned int)rx_queue + 1U);
  
#line 3308 
  return;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static void dql_queued(struct dql *dql, unsigned int count)
{
  
#line 74 
  if ((long)(count > 268435455U) != 0L) {
    
#line 76 
    ldv_inline_asm();
    
#line 74 
    ;
  }
  else ;
  
#line 76 
  dql->last_obj_cnt = count;
  
#line 77 
  ldv_inline_asm();
  
#line 85 
  dql->num_queued += count;
  
#line 86 
  return;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static int dql_avail(struct dql const *dql)
{
  int __retres;
  unsigned int const volatile *tmp;
  unsigned int const volatile *tmp_0;
  {
    
#line 91 
    unsigned int const __var = 0U;
    
#line 91 
    tmp = (unsigned int const volatile *)(& dql->adj_limit);
  }
  {
    
#line 91 
    unsigned int const __var_0 = 0U;
    
#line 91 
    tmp_0 = (unsigned int const volatile *)(& dql->num_queued);
  }
  
#line 91 
  ;
  
#line 91 
  __retres = (int)(*tmp - *tmp_0);
  
#line 91 
  return __retres;
}


#line 95 
void dql_completed(struct dql *, unsigned int);


#line 98 
void dql_reset(struct dql *);


#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
int devm_request_threaded_irq(struct device *, unsigned int, irqreturn_t (*)(int , void *), irqreturn_t (*)(int , void *), unsigned long, char const *, void *);


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static int devm_request_irq(struct device *dev, unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long irqflags, char const *devname, void *dev_id)
{
  int tmp;
  
#line 161 
  tmp = devm_request_threaded_irq(dev,irq,handler,(irqreturn_t (*)(int , void *))0,irqflags,devname,dev_id);
  
#line 161 
  return tmp;
}


#line 173 
static void ldv_devm_free_irq_81(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3);


#line 177 
static void ldv_devm_free_irq_82(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3);


#line 181 
static void ldv_devm_free_irq_83(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3);


#line 185 
static void ldv_devm_free_irq_84(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3);


#line 190 
void disable_irq_nosync(unsigned int);


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_reset_tc(struct net_device *dev)
{
  
#line 1789 
  dev->num_tc = (unsigned char)0U;
  
#line 1790 
  memset((void *)(& dev->tc_to_txq),0,64UL);
  
#line 1791 
  memset((void *)(& dev->prio_tc_map),0,16UL);
  
#line 1792 
  return;
}


#line 1795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netdev_set_tc_queue(struct net_device *dev, u8 tc, u16 count, u16 offset)
{
  int __retres;
  
#line 1797 
  if ((int)dev->num_tc <= (int)tc) {
    
#line 1798 
    __retres = -22;
    
#line 1798 
    goto return_label;
  }
  else ;
  
#line 1800 
  dev->tc_to_txq[(int)tc].count = count;
  
#line 1801 
  dev->tc_to_txq[(int)tc].offset = offset;
  
#line 1802 
  __retres = 0;
  return_label: 
#line 1802 
                return __retres;
}


#line 1806  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netdev_set_num_tc(struct net_device *dev, u8 num_tc)
{
  int __retres;
  
#line 1808 
  if ((unsigned int)num_tc > 16U) {
    
#line 1809 
    __retres = -22;
    
#line 1809 
    goto return_label;
  }
  else ;
  
#line 1811 
  dev->num_tc = num_tc;
  
#line 1812 
  __retres = 0;
  return_label: 
#line 1812 
                return __retres;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2505 
void netif_schedule_queue(struct netdev_queue *);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2535 
  i = 0U;
  
#line 2535 
  goto ldv_42474;
  ldv_42473: 
#line 2536 
  ;
  {
    
#line 2536 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2537 
    netif_tx_start_queue(txq);
  }
  
#line 2535 
  i += 1U;
  ldv_42474: 
#line 2536 
  ;
  
#line 2535 
  if (dev->num_tx_queues > i) 
#line 2537 
                              goto ldv_42473; else 
#line 2540 
                                                   goto ldv_42475;
  ldv_42475: 
#line 2541 
  ;
  
#line 2542 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_sent_queue(struct netdev_queue *dev_queue, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2649 
  dql_queued(& dev_queue->dql,bytes);
  
#line 2651 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2651 
  if ((long)(tmp >= 0) != 0L) 
#line 2652 
                              goto return_label; else ;
  
#line 2654 
  set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2655 
  ldv_inline_asm();
  
#line 2664 
  tmp_0 = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2664 
  if ((long)(tmp_0 >= 0) != 0L) 
#line 2665 
                                set_bit(1L,(unsigned long volatile *)(& dev_queue->state)); else ;
  return_label: 
#line 2666 
                return;
}


#line 2683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_completed_queue(struct netdev_queue *dev_queue, unsigned int pkts, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2687 
  if ((long)(bytes == 0U) != 0L) 
#line 2688 
                                 goto return_label; else ;
  
#line 2690 
  dql_completed(& dev_queue->dql,bytes);
  
#line 2691 
  ldv_inline_asm();
  
#line 2699 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2699 
  if (tmp < 0) 
#line 2700 
               goto return_label; else ;
  
#line 2702 
  tmp_0 = test_and_set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2702 
  if (tmp_0 != 0) 
#line 2703 
                  netif_schedule_queue(dev_queue); else ;
  return_label: 
#line 2704 
                return;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_reset_queue(struct netdev_queue *q)
{
  
#line 2726 
  set_bit(1L,(unsigned long volatile *)(& q->state));
  
#line 2727 
  dql_reset(& q->dql);
  
#line 2728 
  return;
}


#line 2802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_stop_subqueue(struct net_device *dev, u16 queue_index)
{
  
#line 2804 
  struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)queue_index);
  
#line 2805 
  netif_tx_start_queue(txq);
  
#line 2806 
  return;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/busy_poll.h"
__inline static void skb_mark_napi_id(struct sk_buff *skb, struct napi_struct *napi)
{
  
#line 124 
  skb->__anonCompField_sk_buff_81.napi_id = napi->napi_id;
  
#line 125 
  return;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
int clk_prepare(struct clk *);


#line 193 
void clk_unprepare(struct clk *);


#line 249 
int clk_enable(struct clk *);


#line 265 
void clk_disable(struct clk *);


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
__inline static int clk_prepare_enable(struct clk *clk)
{
  int __retres;
  int ret;
  
#line 471 
  ret = clk_prepare(clk);
  
#line 472 
  if (ret != 0) {
    
#line 473 
    __retres = ret;
    
#line 473 
    goto return_label;
  }
  else ;
  
#line 474 
  ret = clk_enable(clk);
  
#line 475 
  if (ret != 0) 
#line 476 
                clk_unprepare(clk); else ;
  
#line 478 
  __retres = ret;
  return_label: 
#line 478 
                return __retres;
}


#line 482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
__inline static void clk_disable_unprepare(struct clk *clk)
{
  
#line 484 
  clk_disable(clk);
  
#line 485 
  clk_unprepare(clk);
  
#line 486 
  return;
}


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timecounter.h"
u64 timecounter_cyc2time(struct timecounter *, cycle_t);


#line 980  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe.h"
void xgbe_dump_tx_desc(struct xgbe_prv_data *pdata, struct xgbe_ring *ring, unsigned int idx, unsigned int count, unsigned int flag);


#line 982 
void xgbe_dump_rx_desc(struct xgbe_prv_data *pdata, struct xgbe_ring *ring, unsigned int idx);


#line 984 
void xgbe_print_pkt(struct net_device *netdev, struct sk_buff *skb, bool tx_rx);


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_one_poll(struct napi_struct *napi, int budget);


#line 131 
static int xgbe_all_poll(struct napi_struct *napi, int budget);


#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_alloc_channels(struct xgbe_prv_data *pdata)
{
  int __retres;
  struct xgbe_channel *channel_mem;
  struct xgbe_channel *channel;
  struct xgbe_ring *tx_ring;
  struct xgbe_ring *rx_ring;
  unsigned int count;
  unsigned int i;
  unsigned int tmp_0;
  
#line 138 
  int ret = -12;
  {
    unsigned int tmp;
    
#line 140 
    unsigned int __max1 = pdata->tx_ring_count;
    
#line 140 
    unsigned int __max2 = pdata->rx_ring_count;
    
#line 140 
    if (__max1 > __max2) 
#line 140 
                         tmp = __max1; else 
#line 140 
                                            tmp = __max2;
    
#line 140 
    tmp_0 = tmp;
  }
  
#line 140 
  count = tmp_0;
  
#line 142 
  channel_mem = (struct xgbe_channel *)kcalloc_0((unsigned long)count,576UL,208U);
  
#line 143 
  if (channel_mem == (struct xgbe_channel *)0) 
#line 144 
                                               goto err_channel; else ;
  
#line 146 
  tx_ring = (struct xgbe_ring *)kcalloc_0((unsigned long)pdata->tx_ring_count,256UL,208U);
  
#line 148 
  if (tx_ring == (struct xgbe_ring *)0) 
#line 149 
                                        goto err_tx_ring; else ;
  
#line 151 
  rx_ring = (struct xgbe_ring *)kcalloc_0((unsigned long)pdata->rx_ring_count,256UL,208U);
  
#line 153 
  if (rx_ring == (struct xgbe_ring *)0) 
#line 154 
                                        goto err_rx_ring; else ;
  
#line 156 
  i = 0U;
  
#line 156 
  channel = channel_mem;
  
#line 156 
  goto ldv_51902;
  ldv_51901: 
#line 157 
  ;
  
#line 157 
  snprintf((char *)(& channel->name),16UL,"channel-%d",i);
  
#line 158 
  channel->pdata = pdata;
  
#line 159 
  channel->queue_index = i;
  
#line 160 
  channel->dma_regs = pdata->xgmac_regs + (i * 128U + 12544U);
  
#line 163 
  if (pdata->per_channel_irq != 0U) {
    
#line 165 
    ret = platform_get_irq(pdata->pdev,i + 1U);
    
#line 166 
    if (ret < 0) {
      
#line 167 
      netdev_err((struct net_device const *)pdata->netdev,"platform_get_irq %u failed\n",i + 1U);
      
#line 170 
      goto err_irq;
    }
    else ;
    
#line 173 
    channel->dma_irq = ret;
  }
  else ;
  
#line 176 
  if (pdata->tx_ring_count > i) {
    struct xgbe_ring *tmp_4;
    
#line 177 
    spinlock_check(& tx_ring->lock);
    {
      struct lock_class_key __key;
      
#line 177 
      __raw_spin_lock_init(& tx_ring->lock.__anonCompField_spinlock_18.rlock,"&(&tx_ring->lock)->rlock",& __key);
    }
    
#line 178 
    tmp_4 = tx_ring;
    
#line 178 
    tx_ring += 1;
    
#line 178 
    channel->tx_ring = tmp_4;
  }
  else ;
  
#line 181 
  if (pdata->rx_ring_count > i) {
    struct xgbe_ring *tmp_5;
    
#line 182 
    spinlock_check(& rx_ring->lock);
    {
      struct lock_class_key __key_0;
      
#line 182 
      __raw_spin_lock_init(& rx_ring->lock.__anonCompField_spinlock_18.rlock,"&(&rx_ring->lock)->rlock",& __key_0);
    }
    
#line 183 
    tmp_5 = rx_ring;
    
#line 183 
    rx_ring += 1;
    
#line 183 
    channel->rx_ring = tmp_5;
  }
  else ;
  
#line 186 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 186 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_alloc_channels", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "%s: dma_regs=%p, dma_irq=%d, tx=%p, rx=%p\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))189U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 186 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 186 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"%s: dma_regs=%p, dma_irq=%d, tx=%p, rx=%p\n",(char *)(& channel->name),channel->dma_regs,channel->dma_irq,channel->tx_ring,channel->rx_ring); else ;
  }
  else ;
  
#line 156 
  i += 1U;
  
#line 156 
  channel += 1;
  ldv_51902: 
#line 157 
  ;
  
#line 156 
  if (i < count) 
#line 158 
                 goto ldv_51901; else 
#line 161 
                                      goto ldv_51903;
  ldv_51903: 
#line 162 
  ;
  
#line 192 
  pdata->channel = channel_mem;
  
#line 193 
  pdata->channel_count = count;
  
#line 195 
  __retres = 0;
  
#line 195 
  goto return_label;
  err_irq: 
#line 197 
  ;
  
#line 198 
  kfree((void const *)rx_ring);
  err_rx_ring: 
#line 200 
  ;
  
#line 201 
  kfree((void const *)tx_ring);
  err_tx_ring: 
#line 203 
  ;
  
#line 204 
  kfree((void const *)channel_mem);
  err_channel: 
#line 206 
  ;
  
#line 207 
  __retres = ret;
  return_label: 
#line 207 
                return __retres;
}


#line 210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_free_channels(struct xgbe_prv_data *pdata)
{
  
#line 212 
  if (pdata->channel == (struct xgbe_channel *)0) 
#line 213 
                                                  goto return_label; else ;
  
#line 215 
  kfree((void const *)(pdata->channel)->rx_ring);
  
#line 216 
  kfree((void const *)(pdata->channel)->tx_ring);
  
#line 217 
  kfree((void const *)pdata->channel);
  
#line 219 
  pdata->channel = (struct xgbe_channel *)0;
  
#line 220 
  pdata->channel_count = 0U;
  return_label: 
#line 221 
                return;
}


#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
__inline static unsigned int xgbe_tx_avail_desc(struct xgbe_ring *ring)
{
  unsigned int __retres;
  
#line 225 
  __retres = ring->rdesc_count + (ring->dirty - ring->cur);
  
#line 225 
  return __retres;
}


#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
__inline static unsigned int xgbe_rx_dirty_desc(struct xgbe_ring *ring)
{
  unsigned int __retres;
  
#line 230 
  __retres = ring->cur - ring->dirty;
  
#line 230 
  return __retres;
}


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_maybe_stop_tx_queue(struct xgbe_channel *channel, struct xgbe_ring *ring, unsigned int count)
{
  int __retres;
  unsigned int tmp;
  
#line 236 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 238 
  tmp = xgbe_tx_avail_desc(ring);
  
#line 238 
  ;
  
#line 238 
  if (tmp < count) {
    
#line 239 
    if ((pdata->msg_enable & 1U) != 0U) 
#line 239 
                                        netdev_info((struct net_device const *)pdata->netdev,"Tx queue stopped, not enough descriptors available\n"); else ;
    
#line 241 
    netif_stop_subqueue(pdata->netdev,(unsigned short)((int)((unsigned short)channel->queue_index)));
    
#line 242 
    ring->__anonCompField_xgbe_ring_96.tx.queue_stopped = 1U;
    
#line 247 
    if (ring->__anonCompField_xgbe_ring_96.tx.xmit_more != 0U) 
#line 248 
                                                               (*(pdata->hw_if.tx_start_xmit))(channel,ring); else ;
    
#line 250 
    __retres = 16;
    
#line 250 
    goto return_label;
  }
  else ;
  
#line 253 
  __retres = 0;
  return_label: 
#line 253 
                return __retres;
}


#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_calc_rx_buf_size(struct net_device *netdev, unsigned int mtu)
{
  int __retres;
  unsigned int rx_buf_size;
  unsigned int tmp_2;
  
#line 260 
  if (mtu > 9000U) {
    
#line 261 
    netdev_alert((struct net_device const *)netdev,"MTU exceeds maximum supported value\n");
    
#line 262 
    __retres = -22;
    
#line 262 
    goto return_label;
  }
  else ;
  
#line 265 
  rx_buf_size = mtu + 22U;
  {
    unsigned int tmp_0;
    unsigned int tmp_1;
    {
      unsigned int tmp;
      
#line 266 
      unsigned int __max1 = rx_buf_size;
      
#line 266 
      unsigned int __max2 = 1522U;
      
#line 266 
      if (__max1 > __max2) 
#line 266 
                           tmp = __max1; else 
#line 266 
                                              tmp = __max2;
      
#line 266 
      tmp_0 = tmp;
    }
    
#line 266 
    unsigned int __min1 = tmp_0;
    
#line 266 
    unsigned int __min2 = 4096U;
    
#line 266 
    if (__min1 < __min2) 
#line 266 
                         tmp_1 = __min1; else 
#line 266 
                                              tmp_1 = __min2;
    
#line 266 
    tmp_2 = tmp_1;
  }
  
#line 266 
  rx_buf_size = tmp_2;
  
#line 268 
  rx_buf_size = (rx_buf_size + 63U) & 4294967232U;
  
#line 271 
  __retres = (int)rx_buf_size;
  return_label: 
#line 271 
                return __retres;
}


#line 274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_enable_rx_tx_ints(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  enum xgbe_int int_id;
  unsigned int i;
  
#line 276 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 281 
  channel = pdata->channel;
  
#line 282 
  i = 0U;
  
#line 282 
  goto ldv_51939;
  ldv_51938: 
#line 283 
  ;
  
#line 283 
  if (channel->tx_ring != (struct xgbe_ring *)0 && channel->rx_ring != (struct xgbe_ring *)0) 
    
#line 284 
    int_id = XGMAC_INT_DMA_CH_SR_TI_RI;
  else 
    
#line 285 
    if (channel->tx_ring != (struct xgbe_ring *)0) 
#line 286 
                                                   int_id = XGMAC_INT_DMA_CH_SR_TI;
    else 
      
#line 287 
      if (channel->rx_ring != (struct xgbe_ring *)0) 
#line 288 
                                                     int_id = XGMAC_INT_DMA_CH_SR_RI; else 
                                                                    
#line 290 
                                                                    goto ldv_51937;
  
#line 292 
  (*(hw_if->enable_int))(channel,int_id);
  ldv_51937: 
#line 293 
  ;
  
#line 282 
  i += 1U;
  
#line 282 
  channel += 1;
  ldv_51939: 
#line 283 
  ;
  
#line 282 
  if (pdata->channel_count > i) 
#line 284 
                                goto ldv_51938; else 
#line 287 
                                                     goto ldv_51940;
  ldv_51940: 
#line 288 
  ;
  
#line 289 
  return;
}


#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_disable_rx_tx_ints(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  enum xgbe_int int_id;
  unsigned int i;
  
#line 298 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 303 
  channel = pdata->channel;
  
#line 304 
  i = 0U;
  
#line 304 
  goto ldv_51950;
  ldv_51949: 
#line 305 
  ;
  
#line 305 
  if (channel->tx_ring != (struct xgbe_ring *)0 && channel->rx_ring != (struct xgbe_ring *)0) 
    
#line 306 
    int_id = XGMAC_INT_DMA_CH_SR_TI_RI;
  else 
    
#line 307 
    if (channel->tx_ring != (struct xgbe_ring *)0) 
#line 308 
                                                   int_id = XGMAC_INT_DMA_CH_SR_TI;
    else 
      
#line 309 
      if (channel->rx_ring != (struct xgbe_ring *)0) 
#line 310 
                                                     int_id = XGMAC_INT_DMA_CH_SR_RI; else 
                                                                    
#line 312 
                                                                    goto ldv_51948;
  
#line 314 
  (*(hw_if->disable_int))(channel,int_id);
  ldv_51948: 
#line 315 
  ;
  
#line 304 
  i += 1U;
  
#line 304 
  channel += 1;
  ldv_51950: 
#line 305 
  ;
  
#line 304 
  if (pdata->channel_count > i) 
#line 306 
                                goto ldv_51949; else 
#line 309 
                                                     goto ldv_51951;
  ldv_51951: 
#line 310 
  ;
  
#line 311 
  return;
}


#line 318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static irqreturn_t xgbe_isr(int irq, void *data)
{
  irqreturn_t __retres;
  struct xgbe_channel *channel;
  unsigned int dma_isr;
  unsigned int dma_ch_isr;
  unsigned int mac_isr;
  unsigned int mac_tssr;
  unsigned int i;
  
#line 320 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)data;
  
#line 321 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 331 
  dma_isr = ioread32(pdata->xgmac_regs + 12296U);
  
#line 332 
  if (dma_isr == 0U) 
#line 333 
                     goto isr_done; else ;
  
#line 335 
  if ((pdata->msg_enable & 512U) != 0U) {
    
#line 335 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_isr", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "DMA_ISR=%#010x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))335U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 335 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 335 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"DMA_ISR=%#010x\n",dma_isr); else ;
  }
  else ;
  
#line 337 
  i = 0U;
  
#line 337 
  goto ldv_51970;
  ldv_51969: 
#line 338 
  ;
  
#line 338 
  if (((unsigned int)(1 << i) & dma_isr) == 0U) 
#line 339 
                                                goto ldv_51967; else ;
  
#line 341 
  channel = pdata->channel + i;
  
#line 343 
  dma_ch_isr = ioread32(channel->dma_regs + 96U);
  
#line 344 
  if ((pdata->msg_enable & 512U) != 0U) {
    
#line 344 
    struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_isr", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "DMA_CH%u_ISR=%#010x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))345U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 344 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 344 
                                                          __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)pdata->netdev,"DMA_CH%u_ISR=%#010x\n",i,dma_ch_isr); else ;
  }
  else ;
  
#line 351 
  if (pdata->per_channel_irq == 0U && ((dma_ch_isr & 1U) != 0U || (dma_ch_isr & 64U) != 0U)) {
    bool tmp;
    
#line 354 
    tmp = napi_schedule_prep(& pdata->napi);
    
#line 354 
    if ((int)tmp != 0) {
      
#line 356 
      xgbe_disable_rx_tx_ints(pdata);
      
#line 359 
      __napi_schedule(& pdata->napi);
    }
    else ;
  }
  else ;
  
#line 364 
  if ((dma_ch_isr & 4096U) != 0U) 
#line 365 
                                  ldv_schedule_work_74(& pdata->restart_work); else ;
  
#line 368 
  iowrite32(dma_ch_isr,channel->dma_regs + 96U);
  ldv_51967: 
#line 369 
  ;
  
#line 337 
  i += 1U;
  ldv_51970: 
#line 338 
  ;
  
#line 337 
  if (pdata->channel_count > i) 
#line 339 
                                goto ldv_51969; else 
#line 342 
                                                     goto ldv_51971;
  ldv_51971: 
#line 343 
  ;
  
#line 371 
  if ((dma_isr & 131072U) != 0U) {
    
#line 372 
    mac_isr = ioread32(pdata->xgmac_regs + 176U);
    
#line 374 
    if ((mac_isr & 1024U) != 0U) 
#line 375 
                                 (*(hw_if->tx_mmc_int))(pdata); else ;
    
#line 377 
    if ((mac_isr & 512U) != 0U) 
#line 378 
                                (*(hw_if->rx_mmc_int))(pdata); else ;
    
#line 380 
    if ((mac_isr & 4096U) != 0U) {
      
#line 381 
      mac_tssr = ioread32(pdata->xgmac_regs + 3360U);
      
#line 383 
      if ((mac_tssr & 32768U) != 0U) {
        
#line 385 
        pdata->tx_tstamp = (*(hw_if->get_tx_tstamp))(pdata);
        
#line 387 
        ldv_schedule_work_75(& pdata->tx_tstamp_work);
      }
      else ;
    }
    else ;
  }
  else ;
  isr_done: 
#line 392 
  ;
  
#line 393 
  __retres = IRQ_HANDLED;
  
#line 393 
  return __retres;
}


#line 396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static irqreturn_t xgbe_dma_isr(int irq, void *data)
{
  irqreturn_t __retres;
  bool tmp;
  
#line 398 
  struct xgbe_channel *channel = (struct xgbe_channel *)data;
  
#line 403 
  tmp = napi_schedule_prep(& channel->napi);
  
#line 403 
  if ((int)tmp != 0) {
    
#line 405 
    disable_irq_nosync((unsigned int)channel->dma_irq);
    
#line 408 
    __napi_schedule(& channel->napi);
  }
  else ;
  
#line 411 
  __retres = IRQ_HANDLED;
  
#line 411 
  return __retres;
}


#line 414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_tx_timer(unsigned long data)
{
  struct napi_struct *napi;
  bool tmp;
  
#line 416 
  struct xgbe_channel *channel = (struct xgbe_channel *)data;
  
#line 417 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 422 
  if (pdata->per_channel_irq != 0U) 
#line 422 
                                    napi = & channel->napi; else 
#line 422 
                                                                 napi = & pdata->napi;
  
#line 424 
  tmp = napi_schedule_prep(napi);
  
#line 424 
  if ((int)tmp != 0) {
    
#line 426 
    if (pdata->per_channel_irq != 0U) 
#line 427 
                                      disable_irq_nosync((unsigned int)channel->dma_irq); else 
                                                                    
#line 429 
                                                                    xgbe_disable_rx_tx_ints(pdata);
    
#line 432 
    __napi_schedule(napi);
  }
  else ;
  
#line 435 
  channel->tx_timer_active = 0U;
  
#line 436 
  return;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_service(struct work_struct *work)
{
  struct xgbe_prv_data *tmp;
  {
    
#line 442 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 442 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709550472U;
  }
  
#line 442 
  struct xgbe_prv_data *pdata = tmp;
  
#line 446 
  (*(pdata->phy_if.phy_status))(pdata);
  
#line 447 
  return;
}


#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_service_timer(unsigned long data)
{
  
#line 451 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)data;
  
#line 453 
  ldv_schedule_work_76(& pdata->service_work);
  
#line 455 
  ldv_mod_timer_77(& pdata->service_timer,jiffies + 250UL);
  
#line 456 
  return;
}


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_init_timers(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  {
    struct lock_class_key __key;
    
#line 463 
    init_timer_key(& pdata->service_timer,0U,"((&pdata->service_timer))",& __key);
  }
  
#line 463 
  pdata->service_timer.function = & xgbe_service_timer;
  
#line 463 
  pdata->service_timer.data = (unsigned long)pdata;
  
#line 466 
  channel = pdata->channel;
  
#line 467 
  i = 0U;
  
#line 467 
  goto ldv_52002;
  ldv_52001: 
#line 468 
  ;
  
#line 468 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 469 
                                                 goto ldv_51999; else ;
  {
    struct lock_class_key __key_0;
    
#line 471 
    init_timer_key(& channel->tx_timer,0U,"((&channel->tx_timer))",& __key_0);
  }
  
#line 471 
  channel->tx_timer.function = & xgbe_tx_timer;
  
#line 471 
  channel->tx_timer.data = (unsigned long)channel;
  
#line 467 
  i += 1U;
  
#line 467 
  channel += 1;
  ldv_52002: 
#line 468 
  ;
  
#line 467 
  if (pdata->channel_count > i) 
#line 469 
                                goto ldv_52001; else 
#line 472 
                                                     goto ldv_51999;
  ldv_51999: 
#line 473 
  ;
  
#line 474 
  return;
}


#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_start_timers(struct xgbe_prv_data *pdata)
{
  
#line 478 
  ldv_mod_timer_78(& pdata->service_timer,jiffies + 250UL);
  
#line 479 
  return;
}


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_stop_timers(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 486 
  ldv_del_timer_sync_79(& pdata->service_timer);
  
#line 488 
  channel = pdata->channel;
  
#line 489 
  i = 0U;
  
#line 489 
  goto ldv_52013;
  ldv_52012: 
#line 490 
  ;
  
#line 490 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 491 
                                                 goto ldv_52011; else ;
  
#line 493 
  ldv_del_timer_sync_80(& channel->tx_timer);
  
#line 489 
  i += 1U;
  
#line 489 
  channel += 1;
  ldv_52013: 
#line 490 
  ;
  
#line 489 
  if (pdata->channel_count > i) 
#line 491 
                                goto ldv_52012; else 
#line 494 
                                                     goto ldv_52011;
  ldv_52011: 
#line 495 
  ;
  
#line 496 
  return;
}


#line 497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
void xgbe_get_all_hw_features(struct xgbe_prv_data *pdata)
{
  unsigned int mac_hfr0;
  unsigned int mac_hfr1;
  unsigned int mac_hfr2;
  
#line 500 
  struct xgbe_hw_features *hw_feat = & pdata->hw_feat;
  
#line 504 
  mac_hfr0 = ioread32(pdata->xgmac_regs + 284U);
  
#line 505 
  mac_hfr1 = ioread32(pdata->xgmac_regs + 288U);
  
#line 506 
  mac_hfr2 = ioread32(pdata->xgmac_regs + 292U);
  
#line 508 
  memset((void *)hw_feat,0,132UL);
  
#line 510 
  hw_feat->version = ioread32(pdata->xgmac_regs + 272U);
  
#line 513 
  hw_feat->gmii = (mac_hfr0 >> 1) & 1U;
  
#line 514 
  hw_feat->vlhash = (mac_hfr0 >> 4) & 1U;
  
#line 515 
  hw_feat->sma = (mac_hfr0 >> 5) & 1U;
  
#line 516 
  hw_feat->rwk = (mac_hfr0 >> 6) & 1U;
  
#line 517 
  hw_feat->mgk = (mac_hfr0 >> 7) & 1U;
  
#line 518 
  hw_feat->mmc = (mac_hfr0 >> 8) & 1U;
  
#line 519 
  hw_feat->aoe = (mac_hfr0 >> 9) & 1U;
  
#line 520 
  hw_feat->ts = (mac_hfr0 >> 12) & 1U;
  
#line 521 
  hw_feat->eee = (mac_hfr0 >> 13) & 1U;
  
#line 522 
  hw_feat->tx_coe = (mac_hfr0 >> 14) & 1U;
  
#line 523 
  hw_feat->rx_coe = (mac_hfr0 >> 16) & 1U;
  
#line 524 
  hw_feat->addn_mac = (mac_hfr0 >> 18) & 31U;
  
#line 526 
  hw_feat->ts_src = (mac_hfr0 >> 25) & 3U;
  
#line 527 
  hw_feat->sa_vlan_ins = (mac_hfr0 >> 27) & 1U;
  
#line 530 
  hw_feat->rx_fifo_size = mac_hfr1 & 31U;
  
#line 532 
  hw_feat->tx_fifo_size = (mac_hfr1 >> 6) & 31U;
  
#line 534 
  hw_feat->adv_ts_hi = (mac_hfr1 >> 13) & 1U;
  
#line 535 
  hw_feat->dma_width = (mac_hfr1 >> 14) & 3U;
  
#line 536 
  hw_feat->dcb = (mac_hfr1 >> 16) & 1U;
  
#line 537 
  hw_feat->sph = (mac_hfr1 >> 17) & 1U;
  
#line 538 
  hw_feat->tso = (mac_hfr1 >> 18) & 1U;
  
#line 539 
  hw_feat->dma_debug = (mac_hfr1 >> 19) & 1U;
  
#line 540 
  hw_feat->rss = (mac_hfr1 >> 20) & 1U;
  
#line 541 
  hw_feat->tc_cnt = (mac_hfr1 >> 21) & 7U;
  
#line 542 
  hw_feat->hash_table_size = (mac_hfr1 >> 24) & 7U;
  
#line 544 
  hw_feat->l3l4_filter_num = (mac_hfr1 >> 27) & 15U;
  
#line 548 
  hw_feat->rx_q_cnt = mac_hfr2 & 15U;
  
#line 549 
  hw_feat->tx_q_cnt = (mac_hfr2 >> 6) & 15U;
  
#line 550 
  hw_feat->rx_ch_cnt = (mac_hfr2 >> 12) & 15U;
  
#line 551 
  hw_feat->tx_ch_cnt = (mac_hfr2 >> 18) & 15U;
  
#line 552 
  hw_feat->pps_out_num = (mac_hfr2 >> 24) & 7U;
  
#line 553 
  hw_feat->aux_snap_num = (mac_hfr2 >> 28) & 7U;
  
#line 556 
  switch (hw_feat->hash_table_size) {
    case (unsigned int)0: 
#line 557 
    ;
    
#line 558 
    goto ldv_52022;
    case (unsigned int)1: 
#line 559 
    ;
    
#line 560 
    hw_feat->hash_table_size = 64U;
    
#line 561 
    goto ldv_52022;
    case (unsigned int)2: 
#line 562 
    ;
    
#line 563 
    hw_feat->hash_table_size = 128U;
    
#line 564 
    goto ldv_52022;
    case (unsigned int)3: 
#line 565 
    ;
    
#line 566 
    hw_feat->hash_table_size = 256U;
    
#line 567 
    goto ldv_52022;
  }
  ldv_52022: 
#line 571 
  ;
  
#line 571 
  switch (hw_feat->dma_width) {
    case (unsigned int)0: 
#line 572 
    ;
    
#line 573 
    hw_feat->dma_width = 32U;
    
#line 574 
    goto ldv_52027;
    case (unsigned int)1: 
#line 575 
    ;
    
#line 576 
    hw_feat->dma_width = 40U;
    
#line 577 
    goto ldv_52027;
    case (unsigned int)2: 
#line 578 
    ;
    
#line 579 
    hw_feat->dma_width = 48U;
    
#line 580 
    goto ldv_52027;
    default: 
#line 581 
    ;
    
#line 582 
    hw_feat->dma_width = 32U;
  }
  ldv_52027: 
#line 588 
  ;
  
#line 588 
  hw_feat->rx_q_cnt += 1U;
  
#line 589 
  hw_feat->tx_q_cnt += 1U;
  
#line 590 
  hw_feat->rx_ch_cnt += 1U;
  
#line 591 
  hw_feat->tx_ch_cnt += 1U;
  
#line 592 
  hw_feat->tc_cnt += 1U;
  
#line 593 
  return;
}


#line 597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_napi_enable(struct xgbe_prv_data *pdata, unsigned int add)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 602 
  if (pdata->per_channel_irq != 0U) {
    
#line 603 
    channel = pdata->channel;
    
#line 604 
    i = 0U;
    
#line 604 
    goto ldv_52038;
    ldv_52037: 
#line 605 
    ;
    
#line 605 
    if (add != 0U) 
#line 606 
                   netif_napi_add(pdata->netdev,& channel->napi,& xgbe_one_poll,64); else ;
    
#line 609 
    napi_enable(& channel->napi);
    
#line 604 
    i += 1U;
    
#line 604 
    channel += 1;
    ldv_52038: 
#line 605 
    ;
    
#line 604 
    if (pdata->channel_count > i) 
#line 606 
                                  goto ldv_52037; else 
#line 609 
                                                       goto ldv_52039;
    ldv_52039: 
#line 610 
    ;
  }
  else {
    
#line 612 
    if (add != 0U) 
#line 613 
                   netif_napi_add(pdata->netdev,& pdata->napi,& xgbe_all_poll,64); else ;
    
#line 616 
    napi_enable(& pdata->napi);
  }
  
#line 618 
  return;
}


#line 620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_napi_disable(struct xgbe_prv_data *pdata, unsigned int del)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 625 
  if (pdata->per_channel_irq != 0U) {
    
#line 626 
    channel = pdata->channel;
    
#line 627 
    i = 0U;
    
#line 627 
    goto ldv_52047;
    ldv_52046: 
#line 628 
    ;
    
#line 628 
    napi_disable(& channel->napi);
    
#line 630 
    if (del != 0U) 
#line 631 
                   netif_napi_del(& channel->napi); else ;
    
#line 627 
    i += 1U;
    
#line 627 
    channel += 1;
    ldv_52047: 
#line 628 
    ;
    
#line 627 
    if (pdata->channel_count > i) 
#line 629 
                                  goto ldv_52046; else 
#line 632 
                                                       goto ldv_52048;
    ldv_52048: 
#line 633 
    ;
  }
  else {
    
#line 634 
    napi_disable(& pdata->napi);
    
#line 636 
    if (del != 0U) 
#line 637 
                   netif_napi_del(& pdata->napi); else ;
  }
  
#line 639 
  return;
}


#line 641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_request_irqs(struct xgbe_prv_data *pdata)
{
  int __retres;
  struct xgbe_channel *channel;
  unsigned int i;
  int ret;
  char const *tmp;
  
#line 644 
  struct net_device *netdev = pdata->netdev;
  
#line 648 
  ret = devm_request_irq(pdata->dev,(unsigned int)pdata->dev_irq,& xgbe_isr,0UL,(char const *)(& netdev->name),(void *)pdata);
  
#line 650 
  if (ret != 0) {
    
#line 651 
    netdev_alert((struct net_device const *)netdev,"error requesting irq %d\n",pdata->dev_irq);
    
#line 653 
    __retres = ret;
    
#line 653 
    goto return_label;
  }
  else ;
  
#line 656 
  if (pdata->per_channel_irq == 0U) {
    
#line 657 
    __retres = 0;
    
#line 657 
    goto return_label;
  }
  else ;
  
#line 659 
  channel = pdata->channel;
  
#line 660 
  i = 0U;
  
#line 660 
  goto ldv_52058;
  ldv_52057: 
#line 661 
  ;
  
#line 661 
  ;
  
#line 663 
  tmp = netdev_name((struct net_device const *)netdev);
  
#line 661 
  ;
  
#line 661 
  snprintf((char *)(& channel->dma_irq_name),47UL,"%s-TxRx-%u",tmp,channel->queue_index);
  
#line 666 
  ret = devm_request_irq(pdata->dev,(unsigned int)channel->dma_irq,& xgbe_dma_isr,0UL,(char const *)(& channel->dma_irq_name),(void *)channel);
  
#line 669 
  if (ret != 0) {
    
#line 670 
    netdev_alert((struct net_device const *)netdev,"error requesting irq %d\n",channel->dma_irq);
    
#line 672 
    goto err_irq;
  }
  else ;
  
#line 660 
  i += 1U;
  
#line 660 
  channel += 1;
  ldv_52058: 
#line 661 
  ;
  
#line 660 
  if (pdata->channel_count > i) 
#line 662 
                                goto ldv_52057; else 
#line 665 
                                                     goto ldv_52059;
  ldv_52059: 
#line 666 
  ;
  
#line 676 
  __retres = 0;
  
#line 676 
  goto return_label;
  err_irq: 
#line 678 
  ;
  
#line 680 
  i -= 1U;
  
#line 680 
  channel -= 1;
  
#line 680 
  goto ldv_52061;
  ldv_52060: 
#line 681 
  ;
  
#line 681 
  ldv_devm_free_irq_81(pdata->dev,(unsigned int)channel->dma_irq,(void *)channel);
  
#line 680 
  i -= 1U;
  
#line 680 
  channel -= 1;
  ldv_52061: 
#line 681 
  ;
  
#line 680 
  if (pdata->channel_count > i) 
#line 682 
                                goto ldv_52060; else 
#line 685 
                                                     goto ldv_52062;
  ldv_52062: 
#line 686 
  ;
  
#line 683 
  ldv_devm_free_irq_82(pdata->dev,(unsigned int)pdata->dev_irq,(void *)pdata);
  
#line 685 
  __retres = ret;
  return_label: 
#line 685 
                return __retres;
}


#line 688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_free_irqs(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 693 
  ldv_devm_free_irq_83(pdata->dev,(unsigned int)pdata->dev_irq,(void *)pdata);
  
#line 695 
  if (pdata->per_channel_irq == 0U) 
#line 696 
                                    goto return_label; else ;
  
#line 698 
  channel = pdata->channel;
  
#line 699 
  i = 0U;
  
#line 699 
  goto ldv_52069;
  ldv_52068: 
#line 700 
  ;
  
#line 700 
  ldv_devm_free_irq_84(pdata->dev,(unsigned int)channel->dma_irq,(void *)channel);
  
#line 699 
  i += 1U;
  
#line 699 
  channel += 1;
  ldv_52069: 
#line 700 
  ;
  
#line 699 
  if (pdata->channel_count > i) 
#line 701 
                                goto ldv_52068; else 
#line 704 
                                                     goto ldv_52070;
  ldv_52070: 
#line 705 
  ;
  return_label: 
#line 706 
                return;
}


#line 703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
void xgbe_init_tx_coalesce(struct xgbe_prv_data *pdata)
{
  
#line 705 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 709 
  pdata->tx_usecs = 1000U;
  
#line 710 
  pdata->tx_frames = 25U;
  
#line 712 
  (*(hw_if->config_tx_coalesce))(pdata);
  
#line 713 
  return;
}


#line 717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
void xgbe_init_rx_coalesce(struct xgbe_prv_data *pdata)
{
  
#line 719 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 723 
  pdata->rx_riwt = (*(hw_if->usec_to_riwt))(pdata,30U);
  
#line 724 
  pdata->rx_usecs = 30U;
  
#line 725 
  pdata->rx_frames = 25U;
  
#line 727 
  (*(hw_if->config_rx_coalesce))(pdata);
  
#line 728 
  return;
}


#line 732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_free_tx_data(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  struct xgbe_ring *ring;
  struct xgbe_ring_data *rdata;
  unsigned int i;
  unsigned int j;
  
#line 734 
  struct xgbe_desc_if *desc_if = & pdata->desc_if;
  
#line 742 
  channel = pdata->channel;
  
#line 743 
  i = 0U;
  
#line 743 
  goto ldv_52093;
  ldv_52092: 
#line 744 
  ;
  
#line 744 
  ring = channel->tx_ring;
  
#line 745 
  if (ring == (struct xgbe_ring *)0) 
#line 746 
                                     goto ldv_52088; else ;
  
#line 748 
  j = 0U;
  
#line 748 
  goto ldv_52090;
  ldv_52089: 
#line 749 
  ;
  
#line 749 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & j);
  
#line 750 
  (*(desc_if->unmap_rdata))(pdata,rdata);
  
#line 748 
  j += 1U;
  ldv_52090: 
#line 749 
  ;
  
#line 748 
  if (ring->rdesc_count > j) 
#line 750 
                             goto ldv_52089; else 
#line 753 
                                                  goto ldv_52091;
  ldv_52091: 
#line 754 
  ;
  
#line 743 
  i += 1U;
  
#line 743 
  channel += 1;
  ldv_52093: 
#line 744 
  ;
  
#line 743 
  if (pdata->channel_count > i) 
#line 745 
                                goto ldv_52092; else 
#line 748 
                                                     goto ldv_52088;
  ldv_52088: 
#line 749 
  ;
  
#line 750 
  return;
}


#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_free_rx_data(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  struct xgbe_ring *ring;
  struct xgbe_ring_data *rdata;
  unsigned int i;
  unsigned int j;
  
#line 759 
  struct xgbe_desc_if *desc_if = & pdata->desc_if;
  
#line 767 
  channel = pdata->channel;
  
#line 768 
  i = 0U;
  
#line 768 
  goto ldv_52108;
  ldv_52107: 
#line 769 
  ;
  
#line 769 
  ring = channel->rx_ring;
  
#line 770 
  if (ring == (struct xgbe_ring *)0) 
#line 771 
                                     goto ldv_52103; else ;
  
#line 773 
  j = 0U;
  
#line 773 
  goto ldv_52105;
  ldv_52104: 
#line 774 
  ;
  
#line 774 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & j);
  
#line 775 
  (*(desc_if->unmap_rdata))(pdata,rdata);
  
#line 773 
  j += 1U;
  ldv_52105: 
#line 774 
  ;
  
#line 773 
  if (ring->rdesc_count > j) 
#line 775 
                             goto ldv_52104; else 
#line 778 
                                                  goto ldv_52106;
  ldv_52106: 
#line 779 
  ;
  
#line 768 
  i += 1U;
  
#line 768 
  channel += 1;
  ldv_52108: 
#line 769 
  ;
  
#line 768 
  if (pdata->channel_count > i) 
#line 770 
                                goto ldv_52107; else 
#line 773 
                                                     goto ldv_52103;
  ldv_52103: 
#line 774 
  ;
  
#line 775 
  return;
}


#line 782  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_phy_init(struct xgbe_prv_data *pdata)
{
  int tmp;
  
#line 784 
  pdata->phy_link = -1;
  
#line 785 
  pdata->phy_speed = -1;
  
#line 787 
  tmp = (*(pdata->phy_if.phy_reset))(pdata);
  
#line 787 
  return tmp;
}


#line 790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
int xgbe_powerdown(struct net_device *netdev, unsigned int caller)
{
  int __retres;
  unsigned long flags;
  int tmp_1;
  bool tmp_0;
  
#line 792 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 793 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 798 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 798 
  if (tmp_0) 
#line 798 
             tmp_1 = 0; else 
#line 798 
                             tmp_1 = 1;
  
#line 798 
  if (tmp_1) 
#line 798 
             goto _LOR;
  else 
    
#line 798 
    if (caller == 2U && pdata->power_down != 0U) {
      _LOR: {
              
#line 800 
              netdev_alert((struct net_device const *)netdev,"Device is already powered down\n");
              
#line 802 
              __retres = -22;
              
#line 802 
              goto return_label;
            }
    }
    else ;
  
#line 805 
  ldv___ldv_spin_lock_85(& pdata->lock);
  
#line 807 
  if (caller == 1U) 
#line 808 
                    netif_device_detach(netdev); else ;
  
#line 810 
  netif_tx_stop_all_queues(netdev);
  
#line 812 
  xgbe_stop_timers(pdata);
  
#line 813 
  flush_workqueue(pdata->dev_workqueue);
  
#line 815 
  (*(hw_if->powerdown_tx))(pdata);
  
#line 816 
  (*(hw_if->powerdown_rx))(pdata);
  
#line 818 
  xgbe_napi_disable(pdata,0U);
  
#line 820 
  pdata->power_down = 1U;
  
#line 822 
  ldv_spin_unlock_irqrestore_86(& pdata->lock,flags);
  
#line 826 
  __retres = 0;
  return_label: 
#line 826 
                return __retres;
}


#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
int xgbe_powerup(struct net_device *netdev, unsigned int caller)
{
  int __retres;
  unsigned long flags;
  int tmp_1;
  bool tmp_0;
  
#line 831 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 832 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 837 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 837 
  if (tmp_0) 
#line 837 
             tmp_1 = 0; else 
#line 837 
                             tmp_1 = 1;
  
#line 837 
  if (tmp_1) 
#line 837 
             goto _LOR;
  else 
    
#line 837 
    if (caller == 2U && pdata->power_down == 0U) {
      _LOR: {
              
#line 839 
              netdev_alert((struct net_device const *)netdev,"Device is already powered up\n");
              
#line 841 
              __retres = -22;
              
#line 841 
              goto return_label;
            }
    }
    else ;
  
#line 844 
  ldv___ldv_spin_lock_87(& pdata->lock);
  
#line 846 
  pdata->power_down = 0U;
  
#line 848 
  xgbe_napi_enable(pdata,0U);
  
#line 850 
  (*(hw_if->powerup_tx))(pdata);
  
#line 851 
  (*(hw_if->powerup_rx))(pdata);
  
#line 853 
  if (caller == 1U) 
#line 854 
                    netif_device_attach(netdev); else ;
  
#line 856 
  netif_tx_start_all_queues(netdev);
  
#line 858 
  xgbe_start_timers(pdata);
  
#line 860 
  ldv_spin_unlock_irqrestore_88(& pdata->lock,flags);
  
#line 864 
  __retres = 0;
  return_label: 
#line 864 
                return __retres;
}


#line 867  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_start(struct xgbe_prv_data *pdata)
{
  int __retres;
  int ret;
  
#line 869 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 870 
  struct xgbe_phy_if *phy_if = & pdata->phy_if;
  
#line 871 
  struct net_device *netdev = pdata->netdev;
  
#line 876 
  (*(hw_if->init))(pdata);
  
#line 878 
  ret = (*(phy_if->phy_start))(pdata);
  
#line 879 
  if (ret != 0) 
#line 880 
                goto err_phy; else ;
  
#line 882 
  xgbe_napi_enable(pdata,1U);
  
#line 884 
  ret = xgbe_request_irqs(pdata);
  
#line 885 
  if (ret != 0) 
#line 886 
                goto err_napi; else ;
  
#line 888 
  (*(hw_if->enable_tx))(pdata);
  
#line 889 
  (*(hw_if->enable_rx))(pdata);
  
#line 891 
  netif_tx_start_all_queues(netdev);
  
#line 893 
  xgbe_start_timers(pdata);
  
#line 894 
  ldv_schedule_work_89(& pdata->service_work);
  
#line 898 
  __retres = 0;
  
#line 898 
  goto return_label;
  err_napi: 
#line 900 
  ;
  
#line 901 
  xgbe_napi_disable(pdata,1U);
  
#line 903 
  (*(phy_if->phy_stop))(pdata);
  err_phy: 
#line 905 
  ;
  
#line 906 
  (*(hw_if->exit))(pdata);
  
#line 908 
  __retres = ret;
  return_label: 
#line 908 
                return __retres;
}


#line 911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_stop(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  struct netdev_queue *txq;
  unsigned int i;
  
#line 913 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 914 
  struct xgbe_phy_if *phy_if = & pdata->phy_if;
  
#line 916 
  struct net_device *netdev = pdata->netdev;
  
#line 922 
  netif_tx_stop_all_queues(netdev);
  
#line 924 
  xgbe_stop_timers(pdata);
  
#line 925 
  flush_workqueue(pdata->dev_workqueue);
  
#line 927 
  (*(hw_if->disable_tx))(pdata);
  
#line 928 
  (*(hw_if->disable_rx))(pdata);
  
#line 930 
  xgbe_free_irqs(pdata);
  
#line 932 
  xgbe_napi_disable(pdata,1U);
  
#line 934 
  (*(phy_if->phy_stop))(pdata);
  
#line 936 
  (*(hw_if->exit))(pdata);
  
#line 938 
  channel = pdata->channel;
  
#line 939 
  i = 0U;
  
#line 939 
  goto ldv_52146;
  ldv_52145: 
#line 940 
  ;
  
#line 940 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 941 
                                                 goto ldv_52144; else ;
  
#line 943 
  txq = netdev_get_tx_queue((struct net_device const *)netdev,channel->queue_index);
  
#line 944 
  netdev_tx_reset_queue(txq);
  ldv_52144: 
#line 945 
  ;
  
#line 939 
  i += 1U;
  
#line 939 
  channel += 1;
  ldv_52146: 
#line 940 
  ;
  
#line 939 
  if (pdata->channel_count > i) 
#line 941 
                                goto ldv_52145; else 
#line 944 
                                                     goto ldv_52147;
  ldv_52147: 
#line 945 
  ;
  
#line 946 
  return;
}


#line 950  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_restart_dev(struct xgbe_prv_data *pdata)
{
  int tmp_0;
  bool tmp;
  
#line 955 
  tmp = netif_running((struct net_device const *)pdata->netdev);
  
#line 955 
  if (tmp) 
#line 955 
           tmp_0 = 0; else 
#line 955 
                           tmp_0 = 1;
  
#line 955 
  if (tmp_0) 
#line 956 
             goto return_label; else ;
  
#line 958 
  xgbe_stop(pdata);
  
#line 960 
  xgbe_free_tx_data(pdata);
  
#line 961 
  xgbe_free_rx_data(pdata);
  
#line 963 
  xgbe_start(pdata);
  return_label: 
#line 964 
                return;
}


#line 968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_restart(struct work_struct *work)
{
  struct xgbe_prv_data *tmp;
  {
    
#line 970 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 970 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709547288U;
  }
  
#line 970 
  struct xgbe_prv_data *pdata = tmp;
  
#line 974 
  rtnl_lock();
  
#line 976 
  xgbe_restart_dev(pdata);
  
#line 978 
  rtnl_unlock();
  
#line 979 
  return;
}


#line 981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_tx_tstamp(struct work_struct *work)
{
  struct xgbe_prv_data *tmp;
  struct skb_shared_hwtstamps hwtstamps;
  u64 nsec;
  unsigned long flags;
  {
    
#line 983 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 983 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709547632U;
  }
  
#line 983 
  struct xgbe_prv_data *pdata = tmp;
  
#line 990 
  if (pdata->tx_tstamp != 0ULL) {
    
#line 991 
    nsec = timecounter_cyc2time(& pdata->tstamp_tc,pdata->tx_tstamp);
    
#line 994 
    memset((void *)(& hwtstamps),0,8UL);
    
#line 995 
    hwtstamps.hwtstamp = ns_to_ktime(nsec);
    
#line 996 
    skb_tstamp_tx(pdata->tx_tstamp_skb,& hwtstamps);
  }
  else ;
  
#line 999 
  dev_kfree_skb_any(pdata->tx_tstamp_skb);
  
#line 1001 
  ldv___ldv_spin_lock_90(& pdata->tstamp_lock);
  
#line 1002 
  pdata->tx_tstamp_skb = (struct sk_buff *)0;
  
#line 1003 
  ldv_spin_unlock_irqrestore_91(& pdata->tstamp_lock,flags);
  
#line 1004 
  return;
}


#line 1006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_get_hwtstamp_settings(struct xgbe_prv_data *pdata, struct ifreq *ifreq)
{
  int __retres;
  unsigned long tmp;
  
#line 1009 
  tmp = copy_to_user(ifreq->ifr_ifru.ifru_data,(void const *)(& pdata->tstamp_config),12UL);
  
#line 1009 
  if (tmp != 0UL) {
    
#line 1011 
    __retres = -14;
    
#line 1011 
    goto return_label;
  }
  else ;
  
#line 1013 
  __retres = 0;
  return_label: 
#line 1013 
                return __retres;
}


#line 1016  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_set_hwtstamp_settings(struct xgbe_prv_data *pdata, struct ifreq *ifreq)
{
  int __retres;
  struct hwtstamp_config config;
  unsigned int mac_tscr;
  unsigned long tmp;
  
#line 1022 
  tmp = copy_from_user((void *)(& config),(void const *)ifreq->ifr_ifru.ifru_data,12UL);
  
#line 1022 
  if (tmp != 0UL) {
    
#line 1023 
    __retres = -14;
    
#line 1023 
    goto return_label;
  }
  else ;
  
#line 1025 
  if (config.flags != 0) {
    
#line 1026 
    __retres = -22;
    
#line 1026 
    goto return_label;
  }
  else ;
  
#line 1028 
  mac_tscr = 0U;
  
#line 1030 
  switch (config.tx_type) {
    case 0: 
#line 1031 
    ;
    
#line 1032 
    goto ldv_52177;
    case 1: 
#line 1034 
    ;
    
#line 1035 
    mac_tscr &= 4294967294U;
    
#line 1035 
    mac_tscr |= 1U;
    
#line 1036 
    goto ldv_52177;
    default: 
#line 1038 
    ;
    
#line 1039 
    __retres = -34;
    
#line 1039 
    goto return_label;
  }
  ldv_52177: 
#line 1042 
  ;
  
#line 1042 
  switch (config.rx_filter) {
    case 0: 
#line 1043 
    ;
    
#line 1044 
    goto ldv_52181;
    case 1: 
#line 1046 
    ;
    
#line 1047 
    mac_tscr &= 4294967039U;
    
#line 1047 
    mac_tscr |= 256U;
    
#line 1048 
    mac_tscr &= 4294967294U;
    
#line 1048 
    mac_tscr |= 1U;
    
#line 1049 
    goto ldv_52181;
    case 6: 
#line 1052 
    ;
    
#line 1053 
    mac_tscr &= 4294966271U;
    
#line 1053 
    mac_tscr |= 1024U;
    case 3: 
#line 1055 
    ;
    
#line 1056 
    mac_tscr &= 4294959103U;
    
#line 1056 
    mac_tscr |= 8192U;
    
#line 1057 
    mac_tscr &= 4294963199U;
    
#line 1057 
    mac_tscr |= 4096U;
    
#line 1058 
    mac_tscr &= 4294770687U;
    
#line 1058 
    mac_tscr |= 65536U;
    
#line 1059 
    mac_tscr &= 4294967294U;
    
#line 1059 
    mac_tscr |= 1U;
    
#line 1060 
    goto ldv_52181;
    case 7: 
#line 1063 
    ;
    
#line 1064 
    mac_tscr &= 4294966271U;
    
#line 1064 
    mac_tscr |= 1024U;
    case 4: 
#line 1066 
    ;
    
#line 1067 
    mac_tscr &= 4294959103U;
    
#line 1067 
    mac_tscr |= 8192U;
    
#line 1068 
    mac_tscr &= 4294963199U;
    
#line 1068 
    mac_tscr |= 4096U;
    
#line 1069 
    mac_tscr &= 4294950911U;
    
#line 1069 
    mac_tscr |= 16384U;
    
#line 1070 
    mac_tscr &= 4294967294U;
    
#line 1070 
    mac_tscr |= 1U;
    
#line 1071 
    goto ldv_52181;
    case 8: 
#line 1074 
    ;
    
#line 1075 
    mac_tscr &= 4294966271U;
    
#line 1075 
    mac_tscr |= 1024U;
    case 5: 
#line 1077 
    ;
    
#line 1078 
    mac_tscr &= 4294959103U;
    
#line 1078 
    mac_tscr |= 8192U;
    
#line 1079 
    mac_tscr &= 4294963199U;
    
#line 1079 
    mac_tscr |= 4096U;
    
#line 1080 
    mac_tscr &= 4294950911U;
    
#line 1080 
    mac_tscr |= 16384U;
    
#line 1081 
    mac_tscr &= 4294934527U;
    
#line 1081 
    mac_tscr |= 32768U;
    
#line 1082 
    mac_tscr &= 4294967294U;
    
#line 1082 
    mac_tscr |= 1U;
    
#line 1083 
    goto ldv_52181;
    case 9: 
#line 1086 
    ;
    
#line 1087 
    mac_tscr &= 4026531839U;
    
#line 1087 
    mac_tscr |= 268435456U;
    
#line 1088 
    mac_tscr &= 4294770687U;
    
#line 1088 
    mac_tscr |= 65536U;
    
#line 1089 
    mac_tscr &= 4294967294U;
    
#line 1089 
    mac_tscr |= 1U;
    
#line 1090 
    goto ldv_52181;
    case 10: 
#line 1093 
    ;
    
#line 1094 
    mac_tscr &= 4026531839U;
    
#line 1094 
    mac_tscr |= 268435456U;
    
#line 1095 
    mac_tscr &= 4294950911U;
    
#line 1095 
    mac_tscr |= 16384U;
    
#line 1096 
    mac_tscr &= 4294967294U;
    
#line 1096 
    mac_tscr |= 1U;
    
#line 1097 
    goto ldv_52181;
    case 11: 
#line 1100 
    ;
    
#line 1101 
    mac_tscr &= 4026531839U;
    
#line 1101 
    mac_tscr |= 268435456U;
    
#line 1102 
    mac_tscr &= 4294934527U;
    
#line 1102 
    mac_tscr |= 32768U;
    
#line 1103 
    mac_tscr &= 4294950911U;
    
#line 1103 
    mac_tscr |= 16384U;
    
#line 1104 
    mac_tscr &= 4294967294U;
    
#line 1104 
    mac_tscr |= 1U;
    
#line 1105 
    goto ldv_52181;
    case 12: 
#line 1108 
    ;
    
#line 1109 
    mac_tscr &= 4294966271U;
    
#line 1109 
    mac_tscr |= 1024U;
    
#line 1110 
    mac_tscr &= 4294965247U;
    
#line 1110 
    mac_tscr |= 2048U;
    
#line 1111 
    mac_tscr &= 4294959103U;
    
#line 1111 
    mac_tscr |= 8192U;
    
#line 1112 
    mac_tscr &= 4294963199U;
    
#line 1112 
    mac_tscr |= 4096U;
    
#line 1113 
    mac_tscr &= 4294770687U;
    
#line 1113 
    mac_tscr |= 65536U;
    
#line 1114 
    mac_tscr &= 4294967294U;
    
#line 1114 
    mac_tscr |= 1U;
    
#line 1115 
    goto ldv_52181;
    case 13: 
#line 1118 
    ;
    
#line 1119 
    mac_tscr &= 4294966271U;
    
#line 1119 
    mac_tscr |= 1024U;
    
#line 1120 
    mac_tscr &= 4294965247U;
    
#line 1120 
    mac_tscr |= 2048U;
    
#line 1121 
    mac_tscr &= 4294959103U;
    
#line 1121 
    mac_tscr |= 8192U;
    
#line 1122 
    mac_tscr &= 4294963199U;
    
#line 1122 
    mac_tscr |= 4096U;
    
#line 1123 
    mac_tscr &= 4294950911U;
    
#line 1123 
    mac_tscr |= 16384U;
    
#line 1124 
    mac_tscr &= 4294967294U;
    
#line 1124 
    mac_tscr |= 1U;
    
#line 1125 
    goto ldv_52181;
    case 14: 
#line 1128 
    ;
    
#line 1129 
    mac_tscr &= 4294966271U;
    
#line 1129 
    mac_tscr |= 1024U;
    
#line 1130 
    mac_tscr &= 4294965247U;
    
#line 1130 
    mac_tscr |= 2048U;
    
#line 1131 
    mac_tscr &= 4294959103U;
    
#line 1131 
    mac_tscr |= 8192U;
    
#line 1132 
    mac_tscr &= 4294963199U;
    
#line 1132 
    mac_tscr |= 4096U;
    
#line 1133 
    mac_tscr &= 4294934527U;
    
#line 1133 
    mac_tscr |= 32768U;
    
#line 1134 
    mac_tscr &= 4294950911U;
    
#line 1134 
    mac_tscr |= 16384U;
    
#line 1135 
    mac_tscr &= 4294967294U;
    
#line 1135 
    mac_tscr |= 1U;
    
#line 1136 
    goto ldv_52181;
    default: 
#line 1138 
    ;
    
#line 1139 
    __retres = -34;
    
#line 1139 
    goto return_label;
  }
  ldv_52181: 
#line 1142 
  ;
  
#line 1142 
  (*(pdata->hw_if.config_tstamp))(pdata,mac_tscr);
  
#line 1144 
  memcpy((void *)(& pdata->tstamp_config),(void const *)(& config),12UL);
  
#line 1146 
  __retres = 0;
  return_label: 
#line 1146 
                return __retres;
}


#line 1149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_prep_tx_tstamp(struct xgbe_prv_data *pdata, struct sk_buff *skb, struct xgbe_packet_data *packet)
{
  unsigned long flags;
  
#line 1155 
  if ((packet->attributes & 8U) != 0U) {
    
#line 1156 
    ldv___ldv_spin_lock_92(& pdata->tstamp_lock);
    
#line 1157 
    if (pdata->tx_tstamp_skb != (struct sk_buff *)0) {
      
#line 1159 
      packet->attributes &= 4294967287U;
      
#line 1159 
      packet->attributes = packet->attributes;
    }
    else {
      unsigned char *tmp;
      unsigned char *tmp_0;
      
#line 1162 
      pdata->tx_tstamp_skb = skb_get(skb);
      
#line 1163 
      tmp = skb_end_pointer((struct sk_buff const *)skb);
      
#line 1163 
      tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 1163 
      ((struct skb_shared_info *)tmp)->tx_flags = (unsigned char)((unsigned int)((struct skb_shared_info *)tmp_0)->tx_flags | 4U);
    }
    
#line 1165 
    ldv_spin_unlock_irqrestore_93(& pdata->tstamp_lock,flags);
  }
  else ;
  
#line 1168 
  if ((packet->attributes & 8U) == 0U) 
#line 1169 
                                       skb_tx_timestamp(skb); else ;
  
#line 1170 
  return;
}


#line 1172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_prep_vlan(struct sk_buff *skb, struct xgbe_packet_data *packet)
{
  
#line 1174 
  if (((int)skb->vlan_tci & 4096) != 0) 
#line 1175 
                                        packet->vlan_ctag = (unsigned short)((unsigned int)skb->vlan_tci & 61439U); else ;
  
#line 1176 
  return;
}


#line 1178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_prep_tso(struct sk_buff *skb, struct xgbe_packet_data *packet)
{
  int __retres;
  int ret;
  int tmp;
  unsigned int tmp_0;
  unsigned char *tmp_1;
  unsigned char *tmp_2;
  
#line 1182 
  if ((packet->attributes & 2U) == 0U) {
    
#line 1184 
    __retres = 0;
    
#line 1184 
    goto return_label;
  }
  else ;
  
#line 1186 
  ret = skb_cow_head(skb,0U);
  
#line 1187 
  if (ret != 0) {
    
#line 1188 
    __retres = ret;
    
#line 1188 
    goto return_label;
  }
  else ;
  
#line 1190 
  tmp = skb_transport_offset((struct sk_buff const *)skb);
  
#line 1190 
  tmp_0 = tcp_hdrlen((struct sk_buff const *)skb);
  
#line 1190 
  packet->header_len = (unsigned int)tmp + tmp_0;
  
#line 1191 
  packet->tcp_header_len = tcp_hdrlen((struct sk_buff const *)skb);
  
#line 1192 
  packet->tcp_payload_len = skb->len - packet->header_len;
  
#line 1193 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1193 
  packet->mss = ((struct skb_shared_info *)tmp_1)->gso_size;
  
#line 1202 
  tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1202 
  packet->tx_packets = (unsigned int)((struct skb_shared_info *)tmp_2)->gso_segs;
  
#line 1203 
  packet->tx_bytes += (packet->tx_packets + 4294967295U) * packet->header_len;
  
#line 1205 
  __retres = 0;
  return_label: 
#line 1205 
                return __retres;
}


#line 1208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_is_tso(struct sk_buff *skb)
{
  int __retres;
  int tmp_0;
  bool tmp;
  
#line 1210 
  if ((unsigned int)*((unsigned char *)skb + 145UL) != 6U) {
    
#line 1211 
    __retres = 0;
    
#line 1211 
    goto return_label;
  }
  else ;
  
#line 1213 
  tmp = skb_is_gso((struct sk_buff const *)skb);
  
#line 1213 
  if (tmp) 
#line 1213 
           tmp_0 = 0; else 
#line 1213 
                           tmp_0 = 1;
  
#line 1213 
  if (tmp_0) {
    
#line 1214 
    __retres = 0;
    
#line 1214 
    goto return_label;
  }
  else ;
  
#line 1218 
  __retres = 1;
  return_label: 
#line 1218 
                return __retres;
}


#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_packet_info(struct xgbe_prv_data *pdata, struct xgbe_ring *ring, struct sk_buff *skb, struct xgbe_packet_data *packet)
{
  struct skb_frag_struct *frag;
  unsigned int context_desc;
  unsigned int len;
  unsigned int i;
  int tmp_0;
  unsigned char *tmp_1;
  unsigned int tmp_3;
  unsigned char *tmp_4;
  unsigned int tmp_6;
  unsigned char *tmp_7;
  
#line 1230 
  packet->skb = skb;
  
#line 1232 
  context_desc = 0U;
  
#line 1233 
  packet->rdesc_count = 0U;
  
#line 1235 
  packet->tx_packets = 1U;
  
#line 1236 
  packet->tx_bytes = skb->len;
  
#line 1238 
  tmp_0 = xgbe_is_tso(skb);
  
#line 1238 
  if (tmp_0 != 0) {
    unsigned char *tmp;
    
#line 1240 
    tmp = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1240 
    ;
    
#line 1240 
    if ((int)((struct skb_shared_info *)tmp)->gso_size != (int)ring->__anonCompField_xgbe_ring_96.tx.cur_mss) {
      
#line 1241 
      context_desc = 1U;
      
#line 1242 
      packet->rdesc_count += 1U;
    }
    else ;
    
#line 1246 
    packet->rdesc_count += 1U;
    
#line 1248 
    packet->attributes &= 4294967293U;
    
#line 1248 
    packet->attributes |= 2U;
    
#line 1250 
    packet->attributes &= 4294967294U;
    
#line 1250 
    packet->attributes |= 1U;
  }
  else 
    
#line 1252 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
      
#line 1253 
      packet->attributes &= 4294967294U;
      
#line 1253 
      packet->attributes |= 1U;
    }
    else ;
  
#line 1256 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 1258 
    if (((int)skb->vlan_tci & -4097) != (int)ring->__anonCompField_xgbe_ring_96.tx.cur_vlan_ctag) {
      
#line 1260 
      if (context_desc == 0U) {
        
#line 1261 
        context_desc = 1U;
        
#line 1262 
        packet->rdesc_count += 1U;
      }
      else ;
    }
    else ;
    
#line 1265 
    packet->attributes &= 4294967291U;
    
#line 1265 
    packet->attributes |= 4U;
  }
  else ;
  
#line 1269 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1269 
  ;
  
#line 1269 
  if (((int)((struct skb_shared_info *)tmp_1)->tx_flags & 1) != 0) {
    
#line 1269 
    if (pdata->tstamp_config.tx_type == 1) {
      
#line 1271 
      packet->attributes &= 4294967287U;
      
#line 1271 
      packet->attributes |= 8U;
    }
    else ;
  }
  else ;
  
#line 1274 
  len = skb_headlen((struct sk_buff const *)skb);
  
#line 1274 
  goto ldv_52228;
  ldv_52227: 
#line 1275 
  ;
  
#line 1275 
  packet->rdesc_count += 1U;
  {
    unsigned int tmp_2;
    
#line 1276 
    unsigned int __min1 = len;
    
#line 1276 
    unsigned int __min2 = 16320U;
    
#line 1276 
    if (__min1 < __min2) 
#line 1276 
                         tmp_2 = __min1; else 
#line 1276 
                                              tmp_2 = __min2;
    
#line 1276 
    tmp_3 = tmp_2;
  }
  
#line 1276 
  len -= tmp_3;
  ldv_52228: 
#line 1278 
  ;
  
#line 1274 
  if (len != 0U) 
#line 1276 
                 goto ldv_52227; else 
#line 1279 
                                      goto ldv_52229;
  ldv_52229: 
#line 1280 
  ;
  
#line 1279 
  i = 0U;
  
#line 1279 
  goto ldv_52237;
  ldv_52236: 
#line 1280 
  ;
  
#line 1280 
  tmp_4 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1280 
  frag = & ((struct skb_shared_info *)tmp_4)->frags[i];
  
#line 1281 
  len = skb_frag_size((skb_frag_t const *)frag);
  
#line 1281 
  goto ldv_52234;
  ldv_52233: 
#line 1282 
  ;
  
#line 1282 
  packet->rdesc_count += 1U;
  {
    unsigned int tmp_5;
    
#line 1283 
    unsigned int __min1_0 = len;
    
#line 1283 
    unsigned int __min2_0 = 16320U;
    
#line 1283 
    if (__min1_0 < __min2_0) 
#line 1283 
                             tmp_5 = __min1_0; else 
#line 1283 
                                                    tmp_5 = __min2_0;
    
#line 1283 
    tmp_6 = tmp_5;
  }
  
#line 1283 
  len -= tmp_6;
  ldv_52234: 
#line 1285 
  ;
  
#line 1281 
  if (len != 0U) 
#line 1283 
                 goto ldv_52233; else 
#line 1286 
                                      goto ldv_52235;
  ldv_52235: 
#line 1287 
  ;
  
#line 1279 
  i += 1U;
  ldv_52237: 
#line 1280 
  ;
  
#line 1279 
  tmp_7 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1279 
  ;
  
#line 1279 
  if ((unsigned int)((struct skb_shared_info *)tmp_7)->nr_frags > i) 
    
#line 1281 
    goto ldv_52236; else 
#line 1284 
                         goto ldv_52238;
  ldv_52238: 
#line 1285 
  ;
  
#line 1286 
  return;
}


#line 1288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_open(struct net_device *netdev)
{
  int __retres;
  int ret;
  
#line 1290 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1291 
  struct xgbe_desc_if *desc_if = & pdata->desc_if;
  
#line 1297 
  ret = xgbe_phy_init(pdata);
  
#line 1298 
  if (ret != 0) {
    
#line 1299 
    __retres = ret;
    
#line 1299 
    goto return_label;
  }
  else ;
  
#line 1302 
  ret = clk_prepare_enable(pdata->sysclk);
  
#line 1303 
  if (ret != 0) {
    
#line 1304 
    netdev_alert((struct net_device const *)netdev,"dma clk_prepare_enable failed\n");
    
#line 1305 
    __retres = ret;
    
#line 1305 
    goto return_label;
  }
  else ;
  
#line 1308 
  ret = clk_prepare_enable(pdata->ptpclk);
  
#line 1309 
  if (ret != 0) {
    
#line 1310 
    netdev_alert((struct net_device const *)netdev,"ptp clk_prepare_enable failed\n");
    
#line 1311 
    goto err_sysclk;
  }
  else ;
  
#line 1315 
  ret = xgbe_calc_rx_buf_size(netdev,netdev->mtu);
  
#line 1316 
  if (ret < 0) 
#line 1317 
               goto err_ptpclk; else ;
  
#line 1318 
  pdata->rx_buf_size = (unsigned int)ret;
  
#line 1321 
  ret = xgbe_alloc_channels(pdata);
  
#line 1322 
  if (ret != 0) 
#line 1323 
                goto err_ptpclk; else ;
  
#line 1326 
  ret = (*(desc_if->alloc_ring_resources))(pdata);
  
#line 1327 
  if (ret != 0) 
#line 1328 
                goto err_channels; else ;
  {
    struct lock_class_key __key;
    
#line 1330 
    __init_work(& pdata->service_work,0);
    
#line 1330 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 1330 
    pdata->service_work.data = __constr_expr_37;
    
#line 1330 
    lockdep_init_map(& pdata->service_work.lockdep_map,"(&pdata->service_work)",& __key,0);
    
#line 1330 
    INIT_LIST_HEAD(& pdata->service_work.entry);
    
#line 1330 
    pdata->service_work.func = & xgbe_service;
  }
  {
    struct lock_class_key __key_0;
    
#line 1331 
    __init_work(& pdata->restart_work,0);
    
#line 1331 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 1331 
    pdata->restart_work.data = __constr_expr_38;
    
#line 1331 
    lockdep_init_map(& pdata->restart_work.lockdep_map,"(&pdata->restart_work)",& __key_0,0);
    
#line 1331 
    INIT_LIST_HEAD(& pdata->restart_work.entry);
    
#line 1331 
    pdata->restart_work.func = & xgbe_restart;
  }
  {
    struct lock_class_key __key_1;
    
#line 1332 
    __init_work(& pdata->tx_tstamp_work,0);
    
#line 1332 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 1332 
    pdata->tx_tstamp_work.data = __constr_expr_39;
    
#line 1332 
    lockdep_init_map(& pdata->tx_tstamp_work.lockdep_map,"(&pdata->tx_tstamp_work)",& __key_1,0);
    
#line 1332 
    INIT_LIST_HEAD(& pdata->tx_tstamp_work.entry);
    
#line 1332 
    pdata->tx_tstamp_work.func = & xgbe_tx_tstamp;
  }
  
#line 1333 
  xgbe_init_timers(pdata);
  
#line 1335 
  ret = xgbe_start(pdata);
  
#line 1336 
  if (ret != 0) 
#line 1337 
                goto err_rings; else ;
  
#line 1339 
  set_bit(0L,(unsigned long volatile *)(& pdata->dev_state));
  
#line 1343 
  __retres = 0;
  
#line 1343 
  goto return_label;
  err_rings: 
#line 1345 
  ;
  
#line 1346 
  (*(desc_if->free_ring_resources))(pdata);
  err_channels: 
#line 1348 
  ;
  
#line 1349 
  xgbe_free_channels(pdata);
  err_ptpclk: 
#line 1351 
  ;
  
#line 1352 
  clk_disable_unprepare(pdata->ptpclk);
  err_sysclk: 
#line 1354 
  ;
  
#line 1355 
  clk_disable_unprepare(pdata->sysclk);
  
#line 1357 
  __retres = ret;
  return_label: 
#line 1357 
                return __retres;
}


#line 1360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_close(struct net_device *netdev)
{
  int __retres;
  
#line 1362 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1363 
  struct xgbe_desc_if *desc_if = & pdata->desc_if;
  
#line 1368 
  xgbe_stop(pdata);
  
#line 1371 
  (*(desc_if->free_ring_resources))(pdata);
  
#line 1374 
  xgbe_free_channels(pdata);
  
#line 1377 
  clk_disable_unprepare(pdata->ptpclk);
  
#line 1378 
  clk_disable_unprepare(pdata->sysclk);
  
#line 1380 
  set_bit(0L,(unsigned long volatile *)(& pdata->dev_state));
  
#line 1384 
  __retres = 0;
  
#line 1384 
  return __retres;
}


#line 1387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_xmit(struct sk_buff *skb, struct net_device *netdev)
{
  struct xgbe_channel *channel;
  struct xgbe_ring *ring;
  struct xgbe_packet_data *packet;
  struct netdev_queue *txq;
  int ret;
  int tmp_0;
  
#line 1389 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1390 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 1391 
  struct xgbe_desc_if *desc_if = & pdata->desc_if;
  
#line 1400 
  channel = pdata->channel + (int)skb->queue_mapping;
  
#line 1401 
  txq = netdev_get_tx_queue((struct net_device const *)netdev,channel->queue_index);
  
#line 1402 
  ring = channel->tx_ring;
  
#line 1403 
  packet = & ring->packet_data;
  
#line 1405 
  ret = 0;
  
#line 1407 
  if (skb->len == 0U) {
    
#line 1408 
    if ((pdata->msg_enable & 128U) != 0U) 
#line 1408 
                                          netdev_err((struct net_device const *)netdev,"empty skb received from stack\n"); else ;
    
#line 1410 
    dev_kfree_skb_any(skb);
    
#line 1411 
    goto tx_netdev_return;
  }
  else ;
  
#line 1415 
  memset((void *)packet,0,64UL);
  
#line 1416 
  xgbe_packet_info(pdata,ring,skb,packet);
  
#line 1419 
  ret = xgbe_maybe_stop_tx_queue(channel,ring,packet->rdesc_count);
  
#line 1420 
  if (ret != 0) 
#line 1421 
                goto tx_netdev_return; else ;
  
#line 1423 
  ret = xgbe_prep_tso(skb,packet);
  
#line 1424 
  if (ret != 0) {
    
#line 1425 
    if ((pdata->msg_enable & 128U) != 0U) 
#line 1425 
                                          netdev_err((struct net_device const *)netdev,"error processing TSO packet\n"); else ;
    
#line 1427 
    dev_kfree_skb_any(skb);
    
#line 1428 
    goto tx_netdev_return;
  }
  else ;
  
#line 1430 
  xgbe_prep_vlan(skb,packet);
  
#line 1432 
  tmp_0 = (*(desc_if->map_tx_skb))(channel,skb);
  
#line 1432 
  if (tmp_0 == 0) {
    
#line 1433 
    dev_kfree_skb_any(skb);
    
#line 1434 
    goto tx_netdev_return;
  }
  else ;
  
#line 1437 
  xgbe_prep_tx_tstamp(pdata,skb,packet);
  
#line 1440 
  netdev_tx_sent_queue(txq,packet->tx_bytes);
  
#line 1443 
  (*(hw_if->dev_xmit))(channel);
  
#line 1445 
  if ((pdata->msg_enable & 4096U) != 0U) 
#line 1446 
                                         xgbe_print_pkt(netdev,skb,(_Bool)1); else ;
  
#line 1449 
  xgbe_maybe_stop_tx_queue(channel,ring,24U);
  
#line 1451 
  ret = 0;
  tx_netdev_return: 
#line 1453 
  ;
  
#line 1454 
  return ret;
}


#line 1457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_set_rx_mode(struct net_device *netdev)
{
  
#line 1459 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1460 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 1464 
  (*(hw_if->config_rx_mode))(pdata);
  
#line 1465 
  return;
}


#line 1469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_set_mac_address(struct net_device *netdev, void *addr)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 1471 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1472 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 1473 
  struct sockaddr *saddr = (struct sockaddr *)addr;
  
#line 1477 
  tmp_0 = is_valid_ether_addr((u8 const *)(& saddr->sa_data));
  
#line 1477 
  if (tmp_0) 
#line 1477 
             tmp_1 = 0; else 
#line 1477 
                             tmp_1 = 1;
  
#line 1477 
  if (tmp_1) {
    
#line 1478 
    __retres = -99;
    
#line 1478 
    goto return_label;
  }
  else ;
  
#line 1480 
  memcpy((void *)netdev->dev_addr,(void const *)(& saddr->sa_data),(unsigned long)netdev->addr_len);
  
#line 1482 
  (*(hw_if->set_mac_address))(pdata,netdev->dev_addr);
  
#line 1486 
  __retres = 0;
  return_label: 
#line 1486 
                return __retres;
}


#line 1489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_ioctl(struct net_device *netdev, struct ifreq *ifreq, int cmd)
{
  int ret;
  
#line 1491 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1494 
  switch (cmd) {
    case 35249: 
#line 1495 
    ;
    
#line 1496 
    ret = xgbe_get_hwtstamp_settings(pdata,ifreq);
    
#line 1497 
    goto ldv_52293;
    case 35248: 
#line 1499 
    ;
    
#line 1500 
    ret = xgbe_set_hwtstamp_settings(pdata,ifreq);
    
#line 1501 
    goto ldv_52293;
    default: 
#line 1503 
    ;
    
#line 1504 
    ret = -95;
  }
  ldv_52293: 
#line 1507 
  ;
  
#line 1507 
  return ret;
}


#line 1510  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_change_mtu(struct net_device *netdev, int mtu)
{
  int __retres;
  int ret;
  
#line 1512 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1517 
  ret = xgbe_calc_rx_buf_size(netdev,(unsigned int)mtu);
  
#line 1518 
  if (ret < 0) {
    
#line 1519 
    __retres = ret;
    
#line 1519 
    goto return_label;
  }
  else ;
  
#line 1521 
  pdata->rx_buf_size = (unsigned int)ret;
  
#line 1522 
  netdev->mtu = (unsigned int)mtu;
  
#line 1524 
  xgbe_restart_dev(pdata);
  
#line 1528 
  __retres = 0;
  return_label: 
#line 1528 
                return __retres;
}


#line 1531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_tx_timeout(struct net_device *netdev)
{
  
#line 1533 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1535 
  netdev_warn((struct net_device const *)netdev,"tx timeout, device restarting\n");
  
#line 1536 
  ldv_schedule_work_94(& pdata->restart_work);
  
#line 1537 
  return;
}


#line 1539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static struct rtnl_link_stats64 *xgbe_get_stats64(struct net_device *netdev, struct rtnl_link_stats64 *s)
{
  
#line 1542 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1543 
  struct xgbe_mmc_stats *pstats = & pdata->mmc_stats;
  
#line 1547 
  (*(pdata->hw_if.read_mmc_stats))(pdata);
  
#line 1549 
  s->rx_packets = pstats->rxframecount_gb;
  
#line 1550 
  s->rx_bytes = pstats->rxoctetcount_gb;
  
#line 1551 
  s->rx_errors = ((pstats->rxframecount_gb - pstats->rxbroadcastframes_g) - pstats->rxmulticastframes_g) - pstats->rxunicastframes_g;
  
#line 1555 
  s->multicast = pstats->rxmulticastframes_g;
  
#line 1556 
  s->rx_length_errors = pstats->rxlengtherror;
  
#line 1557 
  s->rx_crc_errors = pstats->rxcrcerror;
  
#line 1558 
  s->rx_fifo_errors = pstats->rxfifooverflow;
  
#line 1560 
  s->tx_packets = pstats->txframecount_gb;
  
#line 1561 
  s->tx_bytes = pstats->txoctetcount_gb;
  
#line 1562 
  s->tx_errors = pstats->txframecount_gb - pstats->txframecount_g;
  
#line 1563 
  s->tx_dropped = (unsigned long long)netdev->stats.tx_dropped;
  
#line 1567 
  return s;
}


#line 1570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  
#line 1573 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1574 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 1578 
  set_bit((long)vid,(unsigned long volatile *)(& pdata->active_vlans));
  
#line 1579 
  (*(hw_if->update_vlan_hash_table))(pdata);
  
#line 1583 
  __retres = 0;
  
#line 1583 
  return __retres;
}


#line 1586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  
#line 1589 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1590 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 1594 
  set_bit((long)vid,(unsigned long volatile *)(& pdata->active_vlans));
  
#line 1595 
  (*(hw_if->update_vlan_hash_table))(pdata);
  
#line 1599 
  __retres = 0;
  
#line 1599 
  return __retres;
}


#line 1603  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_poll_controller(struct net_device *netdev)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 1605 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1611 
  if (pdata->per_channel_irq != 0U) {
    
#line 1612 
    channel = pdata->channel;
    
#line 1613 
    i = 0U;
    
#line 1613 
    goto ldv_52333;
    ldv_52332: 
#line 1614 
    ;
    
#line 1614 
    xgbe_dma_isr(channel->dma_irq,(void *)channel);
    
#line 1613 
    i += 1U;
    
#line 1613 
    channel += 1;
    ldv_52333: 
#line 1614 
    ;
    
#line 1613 
    if (pdata->channel_count > i) 
#line 1615 
                                  goto ldv_52332; else 
#line 1618 
                                                       goto ldv_52334;
    ldv_52334: 
#line 1619 
    ;
  }
  else {
    
#line 1616 
    disable_irq((unsigned int)pdata->dev_irq);
    
#line 1617 
    xgbe_isr(pdata->dev_irq,(void *)pdata);
    
#line 1618 
    enable_irq((unsigned int)pdata->dev_irq);
  }
  
#line 1620 
  return;
}


#line 1625  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_setup_tc(struct net_device *netdev, u8 tc)
{
  int __retres;
  unsigned int offset;
  unsigned int queue;
  u8 i;
  
#line 1627 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1631 
  if ((unsigned int)tc != 0U && (unsigned int)tc != pdata->hw_feat.tc_cnt) {
    
#line 1632 
    __retres = -22;
    
#line 1632 
    goto return_label;
  }
  else ;
  
#line 1634 
  if ((unsigned int)tc != 0U) {
    
#line 1635 
    netdev_set_num_tc(netdev,(unsigned char)((int)tc));
    
#line 1636 
    i = (unsigned char)0U;
    
#line 1636 
    queue = 0U;
    
#line 1636 
    offset = 0U;
    
#line 1636 
    goto ldv_52349;
    ldv_52348: 
#line 1637 
    ;
    
#line 1637 
    goto ldv_52344;
    ldv_52343: 
#line 1638 
    ;
    
#line 1639 
    queue += 1U;
    ldv_52344: 
#line 1640 
    ;
    
#line 1637 
    if (pdata->tx_q_count > queue && pdata->q2tc_map[queue] == (unsigned int)i) 
      
#line 1640 
      goto ldv_52343; else 
#line 1643 
                           goto ldv_52345;
    ldv_52345: 
#line 1644 
    ;
    
#line 1641 
    if ((pdata->msg_enable & 1U) != 0U) {
      
#line 1641 
      struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_setup_tc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "TC%u using TXq%u-%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1642U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1641 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1641 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)netdev,"TC%u using TXq%u-%u\n",(int)i,offset,queue + 4294967295U); else ;
    }
    else ;
    
#line 1643 
    netdev_set_tc_queue(netdev,(unsigned char)((int)i),(unsigned short)((int)((unsigned short)queue) - (int)((unsigned short)offset)),(unsigned short)((int)((unsigned short)offset)));
    
#line 1644 
    offset = queue;
    
#line 1636 
    i = (u8)((int)i + 1);
    ldv_52349: 
#line 1637 
    ;
    
#line 1636 
    if ((int)i < (int)tc) 
#line 1638 
                          goto ldv_52348; else 
#line 1641 
                                               goto ldv_52350;
    ldv_52350: 
#line 1642 
    ;
  }
  else 
#line 1647 
       netdev_reset_tc(netdev);
  
#line 1650 
  __retres = 0;
  return_label: 
#line 1650 
                return __retres;
}


#line 1653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_set_features(struct net_device *netdev, netdev_features_t features)
{
  int __retres;
  netdev_features_t rxhash;
  netdev_features_t rxcsum;
  netdev_features_t rxvlan;
  netdev_features_t rxvlan_filter;
  
#line 1656 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 1657 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 1659 
  int ret = 0;
  
#line 1661 
  rxhash = pdata->netdev_features & 8589934592ULL;
  
#line 1662 
  rxcsum = pdata->netdev_features & 17179869184ULL;
  
#line 1663 
  rxvlan = pdata->netdev_features & 256ULL;
  
#line 1664 
  rxvlan_filter = pdata->netdev_features & 512ULL;
  
#line 1666 
  if ((features & 8589934592ULL) != 0ULL && rxhash == 0ULL) 
#line 1667 
                                                            ret = (*(hw_if->enable_rss))(pdata);
  else 
    
#line 1668 
    if ((features & 8589934592ULL) == 0ULL && rxhash != 0ULL) 
#line 1669 
                                                              ret = (*(hw_if->disable_rss))(pdata); else ;
  
#line 1670 
  if (ret != 0) {
    
#line 1671 
    __retres = ret;
    
#line 1671 
    goto return_label;
  }
  else ;
  
#line 1673 
  if ((features & 17179869184ULL) != 0ULL && rxcsum == 0ULL) 
#line 1674 
                                                             (*(hw_if->enable_rx_csum))(pdata);
  else 
    
#line 1675 
    if ((features & 17179869184ULL) == 0ULL && rxcsum != 0ULL) 
#line 1676 
                                                               (*(hw_if->disable_rx_csum))(pdata); else ;
  
#line 1678 
  if ((features & 256ULL) != 0ULL && rxvlan == 0ULL) 
#line 1679 
                                                     (*(hw_if->enable_rx_vlan_stripping))(pdata);
  else 
    
#line 1680 
    if ((features & 256ULL) == 0ULL && rxvlan != 0ULL) 
#line 1681 
                                                       (*(hw_if->disable_rx_vlan_stripping))(pdata); else ;
  
#line 1683 
  if ((features & 512ULL) != 0ULL && rxvlan_filter == 0ULL) 
#line 1684 
                                                            (*(hw_if->enable_rx_vlan_filtering))(pdata);
  else 
    
#line 1685 
    if ((features & 512ULL) == 0ULL && rxvlan_filter != 0ULL) 
#line 1686 
                                                              (*(hw_if->disable_rx_vlan_filtering))(pdata); else ;
  
#line 1688 
  pdata->netdev_features = features;
  
#line 1692 
  __retres = 0;
  return_label: 
#line 1692 
                return __retres;
}


#line 1695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static struct net_device_ops const xgbe_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & xgbe_open, .ndo_stop = & xgbe_close, .ndo_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *))(& xgbe_xmit), .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & xgbe_set_rx_mode, .ndo_set_mac_address = & xgbe_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & xgbe_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & xgbe_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & xgbe_tx_timeout, .ndo_get_stats64 = & xgbe_get_stats64, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = & xgbe_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & xgbe_vlan_rx_kill_vid, .ndo_poll_controller = & xgbe_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = & xgbe_setup_tc, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & xgbe_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 1715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
struct net_device_ops *xgbe_get_netdev_ops(void)
{
  struct net_device_ops *__retres;
  
#line 1717 
  __retres = (struct net_device_ops *)(& xgbe_netdev_ops);
  
#line 1717 
  return __retres;
}


#line 1720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static void xgbe_rx_refresh(struct xgbe_channel *channel)
{
  struct xgbe_ring_data *rdata;
  int tmp;
  
#line 1722 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 1723 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 1724 
  struct xgbe_desc_if *desc_if = & pdata->desc_if;
  
#line 1725 
  struct xgbe_ring *ring = channel->rx_ring;
  
#line 1728 
  goto ldv_52376;
  ldv_52375: 
#line 1729 
  ;
  
#line 1729 
  rdata = ring->rdata + (ring->dirty & (ring->rdesc_count + 4294967295U));
  
#line 1732 
  (*(desc_if->unmap_rdata))(pdata,rdata);
  
#line 1734 
  tmp = (*(desc_if->map_rx_buffer))(pdata,ring,rdata);
  
#line 1734 
  if (tmp != 0) 
#line 1735 
                goto ldv_52374; else ;
  
#line 1737 
  (*(hw_if->rx_desc_reset))(pdata,rdata,ring->dirty);
  
#line 1739 
  ring->dirty += 1U;
  ldv_52376: 
#line 1740 
  ;
  
#line 1728 
  if (ring->dirty != ring->cur) 
#line 1730 
                                goto ldv_52375; else 
#line 1733 
                                                     goto ldv_52374;
  ldv_52374: 
#line 1734 
  ;
  
#line 1735 
  ldv_inline_asm();
  
#line 1747 
  rdata = ring->rdata + ((ring->dirty + 4294967295U) & (ring->rdesc_count + 4294967295U));
  
#line 1748 
  iowrite32((unsigned int)rdata->rdesc_dma,channel->dma_regs + 44U);
  
#line 1749 
  return;
}


#line 1752  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static struct sk_buff *xgbe_create_skb(struct xgbe_prv_data *pdata, struct napi_struct *napi, struct xgbe_ring_data *rdata, unsigned int len)
{
  struct sk_buff *__retres;
  struct sk_buff *skb;
  u8 *packet;
  unsigned int copy_len;
  void *tmp;
  unsigned int tmp_1;
  
#line 1761 
  skb = napi_alloc_skb(napi,rdata->rx.hdr.dma_len);
  
#line 1762 
  if (skb == (struct sk_buff *)0) {
    
#line 1763 
    __retres = (struct sk_buff *)0;
    
#line 1763 
    goto return_label;
  }
  else ;
  
#line 1768 
  dma_sync_single_range_for_cpu(pdata->dev,rdata->rx.hdr.dma_base,rdata->rx.hdr.dma_off,(unsigned long)rdata->rx.hdr.dma_len,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 1772 
  tmp = lowmem_page_address((struct page const *)rdata->rx.hdr.pa.pages);
  
#line 1772 
  packet = (u8 *)(tmp + rdata->rx.hdr.pa.pages_offset);
  
#line 1774 
  if ((unsigned int)rdata->rx.hdr_len != 0U) 
#line 1774 
                                             copy_len = (unsigned int)rdata->rx.hdr_len; else 
                                                                    
#line 1774 
                                                                    copy_len = len;
  {
    unsigned int tmp_0;
    
#line 1775 
    unsigned int _min1 = rdata->rx.hdr.dma_len;
    
#line 1775 
    unsigned int _min2 = copy_len;
    
#line 1775 
    if (_min1 < _min2) 
#line 1775 
                       tmp_0 = _min1; else 
#line 1775 
                                           tmp_0 = _min2;
    
#line 1775 
    tmp_1 = tmp_0;
  }
  
#line 1775 
  copy_len = tmp_1;
  
#line 1776 
  skb_copy_to_linear_data(skb,(void const *)packet,copy_len);
  
#line 1777 
  skb_put(skb,copy_len);
  
#line 1779 
  len -= copy_len;
  
#line 1780 
  if (len != 0U) {
    unsigned char *tmp_2;
    
#line 1782 
    dma_sync_single_range_for_cpu(pdata->dev,rdata->rx.buf.dma_base,rdata->rx.buf.dma_off,(unsigned long)rdata->rx.buf.dma_len,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 1788 
    ;
    
#line 1788 
    ;
    
#line 1788 
    ;
    
#line 1788 
    ;
    
#line 1788 
    tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1788 
    ;
    
#line 1788 
    skb_add_rx_frag(skb,(int)((struct skb_shared_info *)tmp_2)->nr_frags,rdata->rx.buf.pa.pages,(int)rdata->rx.buf.pa.pages_offset,(int)len,rdata->rx.buf.dma_len);
    
#line 1792 
    rdata->rx.buf.pa.pages = (struct page *)0;
  }
  else ;
  
#line 1795 
  __retres = skb;
  return_label: 
#line 1795 
                return __retres;
}


#line 1798  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_tx_poll(struct xgbe_channel *channel)
{
  int __retres;
  struct xgbe_ring_data *rdata;
  struct xgbe_ring_desc *rdesc;
  struct netdev_queue *txq;
  int tmp;
  int tmp_0;
  
#line 1800 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 1801 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 1802 
  struct xgbe_desc_if *desc_if = & pdata->desc_if;
  
#line 1803 
  struct xgbe_ring *ring = channel->tx_ring;
  
#line 1806 
  struct net_device *netdev = pdata->netdev;
  
#line 1808 
  int processed = 0;
  
#line 1809 
  unsigned int tx_packets = 0U;
  
#line 1809 
  unsigned int tx_bytes = 0U;
  
#line 1814 
  if (ring == (struct xgbe_ring *)0) {
    
#line 1815 
    __retres = 0;
    
#line 1815 
    goto return_label;
  }
  else ;
  
#line 1817 
  txq = netdev_get_tx_queue((struct net_device const *)netdev,channel->queue_index);
  
#line 1819 
  goto ldv_52405;
  ldv_52404: 
#line 1820 
  ;
  
#line 1821 
  rdata = ring->rdata + (ring->dirty & (ring->rdesc_count + 4294967295U));
  
#line 1822 
  rdesc = rdata->rdesc;
  
#line 1824 
  tmp = (*(hw_if->tx_complete))(rdesc);
  
#line 1824 
  if (tmp == 0) 
#line 1825 
                goto ldv_52403; else ;
  
#line 1826 
  ldv_inline_asm();
  
#line 1831 
  if ((pdata->msg_enable & 1024U) != 0U) 
#line 1832 
                                         xgbe_dump_tx_desc(pdata,ring,ring->dirty,1U,0U); else ;
  
#line 1834 
  tmp_0 = (*(hw_if->is_last_desc))(rdesc);
  
#line 1834 
  if (tmp_0 != 0) {
    
#line 1835 
    tx_packets = rdata->tx.packets + tx_packets;
    
#line 1836 
    tx_bytes = rdata->tx.bytes + tx_bytes;
  }
  else ;
  
#line 1840 
  (*(desc_if->unmap_rdata))(pdata,rdata);
  
#line 1841 
  (*(hw_if->tx_desc_reset))(rdata);
  
#line 1843 
  processed += 1;
  
#line 1844 
  ring->dirty += 1U;
  ldv_52405: 
#line 1845 
  ;
  
#line 1819 
  if (processed <= 255 && ring->dirty != ring->cur) 
#line 1822 
                                                    goto ldv_52404; else 
                                                                    
#line 1825 
                                                                    goto ldv_52403;
  ldv_52403: 
#line 1826 
  ;
  
#line 1847 
  if (processed == 0) {
    
#line 1848 
    __retres = 0;
    
#line 1848 
    goto return_label;
  }
  else ;
  
#line 1850 
  netdev_tx_completed_queue(txq,tx_packets,tx_bytes);
  
#line 1852 
  if (ring->__anonCompField_xgbe_ring_96.tx.queue_stopped == 1U) {
    unsigned int tmp_1;
    
#line 1852 
    tmp_1 = xgbe_tx_avail_desc(ring);
    
#line 1852 
    if (tmp_1 > 64U) {
      
#line 1854 
      ring->__anonCompField_xgbe_ring_96.tx.queue_stopped = 0U;
      
#line 1855 
      netif_tx_wake_queue(txq);
    }
    else ;
  }
  else ;
  
#line 1860 
  __retres = processed;
  return_label: 
#line 1860 
                return __retres;
}


#line 1863  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_rx_poll(struct xgbe_channel *channel, int budget)
{
  int __retres;
  struct xgbe_ring_data *rdata;
  struct xgbe_packet_data *packet;
  struct napi_struct *napi;
  struct sk_buff *skb;
  struct skb_shared_hwtstamps *hwtstamps;
  unsigned int incomplete;
  unsigned int error;
  unsigned int context_next;
  unsigned int context;
  unsigned int len;
  unsigned int rdesc_len;
  unsigned int max_len;
  unsigned int tmp;
  int tmp_0;
  
#line 1865 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 1866 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 1867 
  struct xgbe_ring *ring = channel->rx_ring;
  
#line 1870 
  struct net_device *netdev = pdata->netdev;
  
#line 1876 
  unsigned int received = 0U;
  
#line 1877 
  int packet_count = 0;
  
#line 1882 
  if (ring == (struct xgbe_ring *)0) {
    
#line 1883 
    __retres = 0;
    
#line 1883 
    goto return_label;
  }
  else ;
  
#line 1885 
  incomplete = 0U;
  
#line 1886 
  context_next = 0U;
  
#line 1888 
  if (pdata->per_channel_irq != 0U) 
#line 1888 
                                    napi = & channel->napi; else 
#line 1888 
                                                                 napi = & pdata->napi;
  
#line 1890 
  rdata = ring->rdata + (ring->cur & (ring->rdesc_count + 4294967295U));
  
#line 1891 
  packet = & ring->packet_data;
  
#line 1892 
  goto ldv_52433;
  ldv_52432: 
#line 1893 
  ;
  
#line 1896 
  if (received == 0U && rdata->state_saved != 0U) {
    
#line 1897 
    skb = rdata->state.skb;
    
#line 1898 
    error = rdata->state.error;
    
#line 1899 
    len = rdata->state.len;
  }
  else {
    
#line 1901 
    memset((void *)packet,0,64UL);
    
#line 1902 
    skb = (struct sk_buff *)0;
    
#line 1903 
    error = 0U;
    
#line 1904 
    len = 0U;
  }
  read_again: 
#line 1907 
  ;
  
#line 1908 
  rdata = ring->rdata + (ring->cur & (ring->rdesc_count + 4294967295U));
  
#line 1910 
  tmp = xgbe_rx_dirty_desc(ring);
  
#line 1910 
  if (tmp > 64U) 
#line 1911 
                 xgbe_rx_refresh(channel); else ;
  
#line 1913 
  tmp_0 = (*(hw_if->dev_read))(channel);
  
#line 1913 
  if (tmp_0 != 0) 
#line 1914 
                  goto ldv_52429; else ;
  
#line 1916 
  received += 1U;
  
#line 1917 
  ring->cur += 1U;
  
#line 1919 
  incomplete = (packet->attributes >> 2) & 1U;
  
#line 1922 
  context_next = (packet->attributes >> 3) & 1U;
  
#line 1925 
  context = (packet->attributes >> 4) & 1U;
  
#line 1930 
  if ((incomplete != 0U || context_next != 0U) && error != 0U) 
#line 1931 
                                                               goto read_again; else ;
  
#line 1933 
  if (error != 0U || packet->errors != 0U) {
    
#line 1934 
    if (packet->errors != 0U) {
      
#line 1935 
      if ((pdata->msg_enable & 64U) != 0U) 
#line 1935 
                                           netdev_err((struct net_device const *)netdev,"error in received packet\n"); else ;
    }
    else ;
    
#line 1937 
    consume_skb(skb);
    
#line 1938 
    goto next_packet;
  }
  else ;
  
#line 1941 
  if (context == 0U) {
    
#line 1943 
    rdesc_len = (unsigned int)rdata->rx.len - len;
    
#line 1944 
    len += rdesc_len;
    
#line 1946 
    if (rdesc_len != 0U && skb == (struct sk_buff *)0) {
      
#line 1947 
      skb = xgbe_create_skb(pdata,napi,rdata,rdesc_len);
      
#line 1949 
      if (skb == (struct sk_buff *)0) 
#line 1950 
                                      error = 1U; else ;
    }
    else 
      
#line 1951 
      if (rdesc_len != 0U) {
        unsigned char *tmp_1;
        
#line 1952 
        dma_sync_single_range_for_cpu(pdata->dev,rdata->rx.buf.dma_base,rdata->rx.buf.dma_off,(unsigned long)rdata->rx.buf.dma_len,(enum dma_data_direction)DMA_FROM_DEVICE);
        
#line 1958 
        ;
        
#line 1958 
        ;
        
#line 1958 
        ;
        
#line 1958 
        ;
        
#line 1958 
        tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
        
#line 1958 
        ;
        
#line 1958 
        skb_add_rx_frag(skb,(int)((struct skb_shared_info *)tmp_1)->nr_frags,rdata->rx.buf.pa.pages,(int)rdata->rx.buf.pa.pages_offset,(int)rdesc_len,rdata->rx.buf.dma_len);
        
#line 1963 
        rdata->rx.buf.pa.pages = (struct page *)0;
      }
      else ;
  }
  else ;
  
#line 1967 
  if (incomplete != 0U || context_next != 0U) 
#line 1968 
                                              goto read_again; else ;
  
#line 1970 
  if (skb == (struct sk_buff *)0) 
#line 1971 
                                  goto next_packet; else ;
  
#line 1974 
  max_len = netdev->mtu + 14U;
  
#line 1975 
  if ((netdev->features & 256ULL) == 0ULL && (unsigned int)skb->protocol == 129U) 
    
#line 1977 
    max_len += 4U; else ;
  
#line 1979 
  if (skb->len > max_len) {
    
#line 1980 
    if ((pdata->msg_enable & 64U) != 0U) 
#line 1980 
                                         netdev_err((struct net_device const *)netdev,"packet length exceeds configured MTU\n"); else ;
    
#line 1982 
    consume_skb(skb);
    
#line 1983 
    goto next_packet;
  }
  else ;
  
#line 1986 
  if ((pdata->msg_enable & 4096U) != 0U) 
#line 1987 
                                         xgbe_print_pkt(netdev,skb,(_Bool)0); else ;
  
#line 1989 
  skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 1990 
  if ((packet->attributes & 1U) != 0U) 
#line 1992 
                                       skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else ;
  
#line 1994 
  if ((packet->attributes & 2U) != 0U) 
#line 1996 
                                       __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)packet->vlan_ctag)); else ;
  
#line 1999 
  if ((packet->attributes & 32U) != 0U) {
    u64 nsec;
    
#line 2003 
    nsec = timecounter_cyc2time(& pdata->tstamp_tc,packet->rx_tstamp);
    
#line 2005 
    hwtstamps = skb_hwtstamps(skb);
    
#line 2006 
    hwtstamps->hwtstamp = ns_to_ktime(nsec);
  }
  else ;
  
#line 2009 
  if ((packet->attributes & 64U) != 0U) 
#line 2011 
                                        skb_set_hash(skb,packet->rss_hash,packet->rss_hash_type); else ;
  
#line 2014 
  skb->dev = netdev;
  
#line 2015 
  skb->protocol = eth_type_trans(skb,netdev);
  
#line 2016 
  skb_record_rx_queue(skb,(unsigned short)((int)((unsigned short)channel->queue_index)));
  
#line 2017 
  skb_mark_napi_id(skb,napi);
  
#line 2019 
  napi_gro_receive(napi,skb);
  next_packet: 
#line 2021 
  ;
  
#line 2022 
  packet_count += 1;
  ldv_52433: 
#line 2023 
  ;
  
#line 1892 
  if (packet_count < budget) 
#line 1894 
                             goto ldv_52432; else 
#line 1897 
                                                  goto ldv_52429;
  ldv_52429: 
#line 1898 
  ;
  
#line 2026 
  if (received != 0U && (incomplete != 0U || context_next != 0U)) {
    
#line 2027 
    rdata = ring->rdata + (ring->cur & (ring->rdesc_count + 4294967295U));
    
#line 2028 
    rdata->state_saved = 1U;
    
#line 2029 
    rdata->state.skb = skb;
    
#line 2030 
    rdata->state.len = len;
    
#line 2031 
    rdata->state.error = error;
  }
  else ;
  
#line 2036 
  __retres = packet_count;
  return_label: 
#line 2036 
                return __retres;
}


#line 2039  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_one_poll(struct napi_struct *napi, int budget)
{
  struct xgbe_channel *tmp;
  {
    
#line 2041 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 2041 
    tmp = (struct xgbe_channel *)__mptr + 18446744073709551520U;
  }
  
#line 2041 
  struct xgbe_channel *channel = tmp;
  
#line 2043 
  int processed = 0;
  
#line 2048 
  xgbe_tx_poll(channel);
  
#line 2051 
  processed = xgbe_rx_poll(channel,budget);
  
#line 2054 
  if (processed < budget) {
    
#line 2056 
    napi_complete(napi);
    
#line 2059 
    enable_irq((unsigned int)channel->dma_irq);
  }
  else ;
  
#line 2064 
  return processed;
}


#line 2067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
static int xgbe_all_poll(struct napi_struct *napi, int budget)
{
  struct xgbe_prv_data *tmp;
  struct xgbe_channel *channel;
  int ring_budget;
  int processed;
  int last_processed;
  unsigned int i;
  int tmp_0;
  {
    
#line 2069 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 2069 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709549072U;
  }
  
#line 2069 
  struct xgbe_prv_data *pdata = tmp;
  
#line 2078 
  processed = 0;
  
#line 2079 
  ring_budget = (int)((unsigned int)budget / pdata->rx_ring_count);
  ldv_52457: 
#line 2080 
  ;
  
#line 2081 
  last_processed = processed;
  
#line 2083 
  channel = pdata->channel;
  
#line 2084 
  i = 0U;
  
#line 2084 
  goto ldv_52455;
  ldv_52454: 
#line 2085 
  ;
  
#line 2086 
  xgbe_tx_poll(channel);
  
#line 2089 
  if (budget - processed < ring_budget) 
#line 2090 
                                        ring_budget = budget - processed; else ;
  
#line 2091 
  tmp_0 = xgbe_rx_poll(channel,ring_budget);
  
#line 2091 
  processed = tmp_0 + processed;
  
#line 2084 
  i += 1U;
  
#line 2084 
  channel += 1;
  ldv_52455: 
#line 2085 
  ;
  
#line 2084 
  if (pdata->channel_count > i) 
#line 2086 
                                goto ldv_52454; else 
#line 2089 
                                                     goto ldv_52456;
  ldv_52456: 
#line 2090 
  ;
  
#line 2093 
  if (processed < budget && processed != last_processed) 
#line 2095 
                                                         goto ldv_52457; else 
                                                                    
#line 2098 
                                                                    goto ldv_52458;
  ldv_52458: 
#line 2099 
  ;
  
#line 2096 
  if (processed < budget) {
    
#line 2098 
    napi_complete(napi);
    
#line 2101 
    xgbe_enable_rx_tx_ints(pdata);
  }
  else ;
  
#line 2106 
  return processed;
}


#line 2109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
void xgbe_dump_tx_desc(struct xgbe_prv_data *pdata, struct xgbe_ring *ring, unsigned int idx, unsigned int count, unsigned int flag)
{
  struct xgbe_ring_data *rdata;
  struct xgbe_ring_desc *rdesc;
  unsigned int tmp_0;
  
#line 2115 
  goto ldv_52471;
  ldv_52470: 
#line 2116 
  ;
  
#line 2116 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & idx);
  
#line 2117 
  rdesc = rdata->rdesc;
  {
    
#line 2118 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_dump_tx_desc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "TX_NORMAL_DESC[%d %s] = %08x:%08x:%08x:%08x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2124U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2118 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) {
      char *tmp;
      
#line 2118 
      ;
      
#line 2118 
      ;
      
#line 2118 
      ;
      
#line 2118 
      ;
      
#line 2118 
      if (flag == 1U) 
#line 2118 
                      tmp = (char *)"QUEUED FOR TX"; else 
#line 2118 
                                                          tmp = (char *)"TX BY DEVICE";
      
#line 2118 
      ;
      
#line 2118 
      ;
      
#line 2118 
      __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"TX_NORMAL_DESC[%d %s] = %08x:%08x:%08x:%08x\n",idx,tmp,rdesc->desc0,rdesc->desc1,rdesc->desc2,rdesc->desc3);
    }
    else ;
  }
  
#line 2125 
  idx += 1U;
  ldv_52471: 
#line 2126 
  ;
  
#line 2115 
  tmp_0 = count;
  
#line 2115 
  count -= 1U;
  
#line 2115 
  ;
  
#line 2115 
  if (tmp_0 != 0U) 
#line 2117 
                   goto ldv_52470; else 
#line 2120 
                                        goto ldv_52472;
  ldv_52472: 
#line 2121 
  ;
  
#line 2122 
  return;
}


#line 2129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
void xgbe_dump_rx_desc(struct xgbe_prv_data *pdata, struct xgbe_ring *ring, unsigned int idx)
{
  struct xgbe_ring_data *rdata;
  struct xgbe_ring_desc *rdesc;
  
#line 2135 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & idx);
  
#line 2136 
  rdesc = rdata->rdesc;
  {
    
#line 2137 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_dump_rx_desc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "RX_NORMAL_DESC[%d RX BY DEVICE] = %08x:%08x:%08x:%08x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2140U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2137 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2137 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"RX_NORMAL_DESC[%d RX BY DEVICE] = %08x:%08x:%08x:%08x\n",idx,rdesc->desc0,rdesc->desc1,rdesc->desc2,rdesc->desc3); else ;
  }
  
#line 2139 
  return;
}


#line 2143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c"
void xgbe_print_pkt(struct net_device *netdev, struct sk_buff *skb, bool tx_rx)
{
  unsigned char buffer[128U];
  unsigned int i;
  unsigned int j;
  int tmp_3;
  unsigned int tmp_2;
  
#line 2145 
  struct ethhdr *eth = (struct ethhdr *)skb->data;
  
#line 2146 
  unsigned char *buf = skb->data;
  {
    
#line 2150 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "\n************** SKB dump ****************\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2150U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2150 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2150 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)netdev,"\n************** SKB dump ****************\n"); else ;
  }
  {
    
#line 2152 
    struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "%s packet of %d bytes\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2153U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2152 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) {
      char *tmp;
      
#line 2152 
      ;
      
#line 2152 
      if ((int)tx_rx != 0) 
#line 2152 
                           tmp = (char *)"TX"; else 
#line 2152 
                                                    tmp = (char *)"RX";
      
#line 2152 
      ;
      
#line 2152 
      __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)netdev,"%s packet of %d bytes\n",tmp,skb->len);
    }
    else ;
  }
  {
    
#line 2155 
    struct _ddebug descriptor_1 = {.modname = "amd_xgbe", .function = "xgbe_print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "Dst MAC addr: %pM\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2155U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2155 
    if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 2155 
                                                          __dynamic_netdev_dbg(& descriptor_1,(struct net_device const *)netdev,"Dst MAC addr: %pM\n",(unsigned char *)(& eth->h_dest)); else ;
  }
  {
    
#line 2156 
    struct _ddebug descriptor_2 = {.modname = "amd_xgbe", .function = "xgbe_print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "Src MAC addr: %pM\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2156U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2156 
    if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 2156 
                                                          __dynamic_netdev_dbg(& descriptor_2,(struct net_device const *)netdev,"Src MAC addr: %pM\n",(unsigned char *)(& eth->h_source)); else ;
  }
  {
    
#line 2157 
    struct _ddebug descriptor_3 = {.modname = "amd_xgbe", .function = "xgbe_print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "Protocol: %#06hx\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2157U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2157 
    if ((long)(((int)descriptor_3.flags & 1) != 0) != 0L) {
      int tmp_1;
      
#line 2157 
      if (0 != 0) 
#line 2157 
                  tmp_1 = (int)((unsigned short)(((int)eth->h_proto << 8) | ((int)eth->h_proto >> 8)));
      else {
        __u16 tmp_0;
        
#line 2157 
        tmp_0 = __fswab16((unsigned short)((int)eth->h_proto));
        
#line 2157 
        tmp_1 = (int)tmp_0;
      }
      
#line 2157 
      ;
      
#line 2157 
      __dynamic_netdev_dbg(& descriptor_3,(struct net_device const *)netdev,"Protocol: %#06hx\n",tmp_1);
    }
    else ;
  }
  
#line 2159 
  i = 0U;
  
#line 2159 
  j = 0U;
  
#line 2159 
  goto ldv_52500;
  ldv_52499: 
#line 2160 
  ;
  
#line 2161 
  tmp_2 = i;
  
#line 2161 
  i += 1U;
  
#line 2160 
  ;
  
#line 2160 
  tmp_3 = snprintf((char *)(& buffer) + j,128UL - (unsigned long)j,"%02hhx",(int)*(buf + tmp_2));
  
#line 2161 
  j = (unsigned int)tmp_3 + j;
  
#line 2163 
  if ((i & 31U) == 0U) {
    {
      
#line 2164 
      struct _ddebug descriptor_4 = {.modname = "amd_xgbe", .function = "xgbe_print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "  %#06x: %s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2164U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 2164 
      if ((long)(((int)descriptor_4.flags & 1) != 0) != 0L) 
#line 2164 
                                                            __dynamic_netdev_dbg(& descriptor_4,(struct net_device const *)netdev,"  %#06x: %s\n",i + 4294967264U,(unsigned char *)(& buffer)); else ;
    }
    
#line 2165 
    j = 0U;
  }
  else 
    
#line 2166 
    if ((i & 15U) == 0U) {
      unsigned int tmp_4;
      unsigned int tmp_5;
      
#line 2167 
      tmp_4 = j;
      
#line 2167 
      j += 1U;
      
#line 2167 
      buffer[tmp_4] = (unsigned char)32U;
      
#line 2168 
      tmp_5 = j;
      
#line 2168 
      j += 1U;
      
#line 2168 
      buffer[tmp_5] = (unsigned char)32U;
    }
    else 
      
#line 2169 
      if ((i & 3U) == 0U) {
        unsigned int tmp_6;
        
#line 2170 
        tmp_6 = j;
        
#line 2170 
        j += 1U;
        
#line 2170 
        buffer[tmp_6] = (unsigned char)32U;
      }
      else ;
  ldv_52500: 
#line 2171 
  ;
  
#line 2159 
  if (skb->len > i) 
#line 2161 
                    goto ldv_52499; else 
#line 2164 
                                         goto ldv_52501;
  ldv_52501: 
#line 2165 
  ;
  
#line 2173 
  if ((i & 31U) != 0U) {
    
#line 2174 
    struct _ddebug descriptor_5 = {.modname = "amd_xgbe", .function = "xgbe_print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "  %#06x: %s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2174U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2174 
    if ((long)(((int)descriptor_5.flags & 1) != 0) != 0L) 
#line 2174 
                                                          __dynamic_netdev_dbg(& descriptor_5,(struct net_device const *)netdev,"  %#06x: %s\n",i & 4294967264U,(unsigned char *)(& buffer)); else ;
  }
  else ;
  {
    
#line 2176 
    struct _ddebug descriptor_6 = {.modname = "amd_xgbe", .function = "xgbe_print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-drv.c", .format = "\n************** SKB dump ****************\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2176U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2176 
    if ((long)(((int)descriptor_6.flags & 1) != 0) != 0L) 
#line 2176 
                                                          __dynamic_netdev_dbg(& descriptor_6,(struct net_device const *)netdev,"\n************** SKB dump ****************\n"); else ;
  }
  
#line 2178 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int (*ldv_emg_alias_eth_validate_addr_8)(struct net_device *) = & eth_validate_addr;

#line 59 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 60 
void ldv_emg_devm_free_irq(struct device *arg0, unsigned int arg1, void *arg2);


#line 69 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 70 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
void ldv_emg_wrapper_xgbe_set_rx_mode_28(struct net_device *arg0)
{
  
#line 75 
  xgbe_set_rx_mode(arg0);
  
#line 76 
  return;
}


#line 79  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_setup_tc_2(struct net_device *arg0, unsigned char arg1)
{
  int tmp;
  
#line 80 
  tmp = xgbe_setup_tc(arg0,(unsigned char)((int)arg1));
  
#line 80 
  return tmp;
}


#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_vlan_rx_kill_vid_29(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 85 
  tmp = xgbe_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 85 
  return tmp;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 90 
  tmp = xgbe_close(arg0);
  
#line 90 
  return tmp;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_set_mac_address_17(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 95 
  tmp = xgbe_set_mac_address(arg0,arg1);
  
#line 95 
  return tmp;
}


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_ioctl_21(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 100 
  tmp = xgbe_ioctl(arg0,arg1,arg2);
  
#line 100 
  return tmp;
}


#line 104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_xmit_16(struct sk_buff *arg0, struct net_device *arg1)
{
  int tmp;
  
#line 105 
  tmp = xgbe_xmit(arg0,arg1);
  
#line 105 
  return tmp;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_change_mtu_10(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 110 
  tmp = xgbe_change_mtu(arg0,arg1);
  
#line 110 
  return tmp;
}


#line 114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_set_features_12(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 115 
  tmp = xgbe_set_features(arg0,arg1);
  
#line 115 
  return tmp;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
struct rtnl_link_stats64 *ldv_emg_wrapper_xgbe_get_stats64_7(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  struct rtnl_link_stats64 *tmp;
  
#line 120 
  tmp = xgbe_get_stats64(arg0,arg1);
  
#line 120 
  return tmp;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
void ldv_emg_wrapper_xgbe_tx_timeout_22(struct net_device *arg0)
{
  
#line 125 
  xgbe_tx_timeout(arg0);
  
#line 126 
  return;
}


#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 130 
  tmp = xgbe_open(arg0);
  
#line 130 
  return tmp;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
void ldv_emg_wrapper_xgbe_poll_controller_30(struct net_device *arg0)
{
  
#line 135 
  xgbe_poll_controller(arg0);
  
#line 136 
  return;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
int ldv_emg_wrapper_xgbe_vlan_rx_add_vid_20(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 140 
  tmp = xgbe_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 140 
  return tmp;
}


#line 198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void atomic_inc_0(atomic_t *v)
{
  
#line 201 
  ldv_atomic_inc(v);
  
#line 202 
  return;
}


#line 570  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 573 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 573 
  return tmp;
}


#line 833  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static bool ldv_schedule_work_74(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 837 
  tmp = ldv_emg_schedule_work(work);
  
#line 837 
  __retres = tmp != 0;
  
#line 837 
  return __retres;
}


#line 841  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static bool ldv_schedule_work_75(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 845 
  tmp = ldv_emg_schedule_work(work);
  
#line 845 
  __retres = tmp != 0;
  
#line 845 
  return __retres;
}


#line 849  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static bool ldv_schedule_work_76(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 853 
  tmp = ldv_emg_schedule_work(work);
  
#line 853 
  __retres = tmp != 0;
  
#line 853 
  return __retres;
}


#line 857  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static int ldv_mod_timer_77(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 861 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 861 
  return tmp;
}


#line 865  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static int ldv_mod_timer_78(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 869 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 869 
  return tmp;
}


#line 873  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static int ldv_del_timer_sync_79(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 877 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 877 
  return tmp;
}


#line 881  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static int ldv_del_timer_sync_80(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 885 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 885 
  return tmp;
}


#line 889  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv_devm_free_irq_81(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3)
{
  
#line 893 
  ldv_emg_devm_free_irq(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 894 
  return;
}


#line 897  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv_devm_free_irq_82(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3)
{
  
#line 901 
  ldv_emg_devm_free_irq(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 902 
  return;
}


#line 905  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv_devm_free_irq_83(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3)
{
  
#line 909 
  ldv_emg_devm_free_irq(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 910 
  return;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv_devm_free_irq_84(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3)
{
  
#line 917 
  ldv_emg_devm_free_irq(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 918 
  return;
}


#line 921  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1)
{
  
#line 925 
  ldv_spin_model_lock((char *)"lock_of_xgbe_prv_data");
  
#line 927 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 928 
  return;
}


#line 931  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags)
{
  
#line 935 
  ldv_spin_model_unlock((char *)"lock_of_xgbe_prv_data");
  
#line 937 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 938 
  return;
}


#line 941  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv___ldv_spin_lock_87(spinlock_t *ldv_func_arg1)
{
  
#line 945 
  ldv_spin_model_lock((char *)"lock_of_xgbe_prv_data");
  
#line 947 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 948 
  return;
}


#line 951  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv_spin_unlock_irqrestore_88(spinlock_t *lock, unsigned long flags)
{
  
#line 955 
  ldv_spin_model_unlock((char *)"lock_of_xgbe_prv_data");
  
#line 957 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 958 
  return;
}


#line 961  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static bool ldv_schedule_work_89(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 965 
  tmp = ldv_emg_schedule_work(work);
  
#line 965 
  __retres = tmp != 0;
  
#line 965 
  return __retres;
}


#line 969  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1)
{
  
#line 973 
  ldv_spin_model_lock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 975 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 976 
  return;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags)
{
  
#line 983 
  ldv_spin_model_unlock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 985 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 986 
  return;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv___ldv_spin_lock_92(spinlock_t *ldv_func_arg1)
{
  
#line 993 
  ldv_spin_model_lock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 995 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 996 
  return;
}


#line 999  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static void ldv_spin_unlock_irqrestore_93(spinlock_t *lock, unsigned long flags)
{
  
#line 1003 
  ldv_spin_model_unlock((char *)"tstamp_lock_of_xgbe_prv_data");
  
#line 1005 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-drv.c.aux"
static bool ldv_schedule_work_94(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1013 
  tmp = ldv_emg_schedule_work(work);
  
#line 1013 
  __retres = tmp != 0;
  
#line 1013 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
int ptp_clock_index(struct ptp_clock *);


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static struct xgbe_stats const xgbe_gstring_stats[38U] = {{.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2824}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2832}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2904}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2920}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2912}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2960}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'t', (char)'s', (char)'o', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3152}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2856}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2864}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2872}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2880}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2888}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2896}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2928}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2952}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2976}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2968}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3096}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 2992}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3000}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3136}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3048}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3056}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3064}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3072}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3080}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3088}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3032}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3040}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3008}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'_', (char)'s', (char)'m', (char)'a', (char)'l', (char)'l', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3016}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'_', (char)'g', (char)'i', (char)'a', (char)'n', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3024}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3104}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'u', (char)'t', (char)'_', (char)'o', (char)'f', (char)'_', (char)'r', (char)'a', (char)'n', (char)'g', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3112}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3128}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'w', (char)'a', (char)'t', (char)'c', (char)'h', (char)'d', (char)'o', (char)'g', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3144}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3120}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'s', (char)'p', (char)'l', (char)'i', (char)'t', (char)'_', (char)'h', (char)'e', (char)'a', (char)'d', (char)'e', (char)'r', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .stat_size = 8, .stat_offset = 3160}};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static void xgbe_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  int i;
  
#line 192 
  switch (stringset) {
    case (u32)1: 
#line 193 
    ;
    
#line 194 
    i = 0;
    
#line 194 
    goto ldv_44939;
    ldv_44938: 
#line 195 
    ;
    
#line 195 
    memcpy((void *)data,(void const *)(& xgbe_gstring_stats[i].stat_string),32UL);
    
#line 197 
    data += 32U;
    
#line 194 
    i += 1;
    ldv_44939: 
#line 195 
    ;
    
#line 194 
    if ((unsigned int)i <= 37U) 
#line 196 
                                goto ldv_44938; else 
#line 199 
                                                     goto ldv_44940;
    ldv_44940: 
#line 200 
    ;
    
#line 199 
    goto ldv_44941;
  }
  ldv_44941: 
#line 202 
  ;
  
#line 203 
  return;
}


#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static void xgbe_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *data)
{
  u8 *stat;
  int i;
  u64 *tmp_0;
  
#line 208 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 214 
  (*(pdata->hw_if.read_mmc_stats))(pdata);
  
#line 215 
  i = 0;
  
#line 215 
  goto ldv_44954;
  ldv_44953: 
#line 216 
  ;
  
#line 216 
  stat = (u8 *)pdata + xgbe_gstring_stats[i].stat_offset;
  
#line 217 
  tmp_0 = data;
  
#line 217 
  data += 1;
  
#line 217 
  *tmp_0 = *((u64 *)stat);
  
#line 215 
  i += 1;
  ldv_44954: 
#line 216 
  ;
  
#line 215 
  if ((unsigned int)i <= 37U) 
#line 217 
                              goto ldv_44953; else 
#line 220 
                                                   goto ldv_44955;
  ldv_44955: 
#line 221 
  ;
  
#line 222 
  return;
}


#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_get_sset_count(struct net_device *netdev, int stringset)
{
  int ret;
  
#line 229 
  switch (stringset) {
    case 1: 
#line 230 
    ;
    
#line 231 
    ret = 38;
    
#line 232 
    goto ldv_44965;
    default: 
#line 234 
    ;
    
#line 235 
    ret = -95;
  }
  ldv_44965: 
#line 238 
  ;
  
#line 240 
  return ret;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static void xgbe_get_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause)
{
  
#line 246 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 250 
  pause->autoneg = (unsigned int)pdata->phy.pause_autoneg;
  
#line 251 
  pause->tx_pause = (unsigned int)pdata->phy.tx_pause;
  
#line 252 
  pause->rx_pause = (unsigned int)pdata->phy.rx_pause;
  
#line 253 
  return;
}


#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_set_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause)
{
  int __retres;
  bool tmp_0;
  
#line 260 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 261 
  int ret = 0;
  
#line 268 
  if (pause->autoneg != 0U && pdata->phy.autoneg != 1) {
    
#line 269 
    __retres = -22;
    
#line 269 
    goto return_label;
  }
  else ;
  
#line 271 
  pdata->phy.pause_autoneg = (int)pause->autoneg;
  
#line 272 
  pdata->phy.tx_pause = (int)pause->tx_pause;
  
#line 273 
  pdata->phy.rx_pause = (int)pause->rx_pause;
  
#line 275 
  pdata->phy.advertising &= 4294959103U;
  
#line 276 
  pdata->phy.advertising &= 4294950911U;
  
#line 278 
  if (pause->rx_pause != 0U) {
    
#line 279 
    pdata->phy.advertising |= 8192U;
    
#line 280 
    pdata->phy.advertising |= 16384U;
  }
  else ;
  
#line 283 
  if (pause->tx_pause != 0U) 
#line 284 
                             pdata->phy.advertising ^= 16384U; else ;
  
#line 286 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 286 
  if ((int)tmp_0 != 0) 
#line 287 
                       ret = (*(pdata->phy_if.phy_config_aneg))(pdata); else ;
  
#line 291 
  __retres = ret;
  return_label: 
#line 291 
                return __retres;
}


#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
{
  int __retres;
  
#line 297 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 301 
  cmd->phy_address = (unsigned char)pdata->phy.address;
  
#line 303 
  cmd->supported = pdata->phy.supported;
  
#line 304 
  cmd->advertising = pdata->phy.advertising;
  
#line 305 
  cmd->lp_advertising = pdata->phy.lp_advertising;
  
#line 307 
  cmd->autoneg = (unsigned char)pdata->phy.autoneg;
  
#line 308 
  ethtool_cmd_speed_set(cmd,(unsigned int)pdata->phy.speed);
  
#line 309 
  cmd->duplex = (unsigned char)pdata->phy.duplex;
  
#line 311 
  cmd->port = (unsigned char)239U;
  
#line 312 
  cmd->transceiver = (unsigned char)0U;
  
#line 316 
  __retres = 0;
  
#line 316 
  return __retres;
}


#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_set_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
{
  int __retres;
  u32 speed;
  int ret;
  bool tmp_0;
  
#line 322 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 328 
  speed = ethtool_cmd_speed((struct ethtool_cmd const *)cmd);
  
#line 330 
  if ((int)cmd->phy_address != pdata->phy.address) {
    
#line 331 
    __retres = -22;
    
#line 331 
    goto return_label;
  }
  else ;
  
#line 333 
  if ((unsigned int)cmd->autoneg > 1U) {
    
#line 335 
    __retres = -22;
    
#line 335 
    goto return_label;
  }
  else ;
  
#line 337 
  if ((unsigned int)cmd->autoneg == 0U) {
    
#line 338 
    switch (speed) {
      case (u32)10000: 
#line 339 
      ;
      case (u32)2500: 
#line 340 
      ;
      case (u32)1000: 
#line 341 
      ;
      
#line 342 
      goto ldv_44993;
      default: 
#line 343 
      ;
      
#line 344 
      __retres = -22;
      
#line 344 
      goto return_label;
    }
    ldv_44993: 
#line 347 
    ;
    
#line 347 
    if ((unsigned int)cmd->duplex != 1U) {
      
#line 348 
      __retres = -22;
      
#line 348 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 351 
  cmd->advertising &= pdata->phy.supported;
  
#line 352 
  if ((unsigned int)cmd->autoneg == 1U && cmd->advertising == 0U) {
    
#line 353 
    __retres = -22;
    
#line 353 
    goto return_label;
  }
  else ;
  
#line 355 
  ret = 0;
  
#line 356 
  pdata->phy.autoneg = (int)cmd->autoneg;
  
#line 357 
  pdata->phy.speed = (int)speed;
  
#line 358 
  pdata->phy.duplex = (int)cmd->duplex;
  
#line 359 
  pdata->phy.advertising = cmd->advertising;
  
#line 361 
  if ((unsigned int)cmd->autoneg == 1U) 
#line 362 
                                        pdata->phy.advertising |= 64U; else 
                                                                    
#line 364 
                                                                    pdata->phy.advertising &= 4294967231U;
  
#line 366 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 366 
  if ((int)tmp_0 != 0) 
#line 367 
                       ret = (*(pdata->phy_if.phy_config_aneg))(pdata); else ;
  
#line 371 
  __retres = ret;
  return_label: 
#line 371 
                return __retres;
}


#line 374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static void xgbe_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *drvinfo)
{
  char const *tmp_0;
  
#line 377 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 378 
  struct xgbe_hw_features *hw_feat = & pdata->hw_feat;
  
#line 380 
  strlcpy((char *)(& drvinfo->driver),"amd-xgbe",32UL);
  
#line 381 
  strlcpy((char *)(& drvinfo->version),"1.0.2",32UL);
  
#line 382 
  tmp_0 = dev_name((struct device const *)pdata->dev);
  
#line 382 
  ;
  
#line 382 
  strlcpy((char *)(& drvinfo->bus_info),tmp_0,32UL);
  
#line 384 
  snprintf((char *)(& drvinfo->fw_version),32UL,"%d.%d.%d",(hw_feat->version >> 16) & 255U,(hw_feat->version >> 8) & 255U,hw_feat->version & 255U);
  
#line 388 
  drvinfo->n_stats = 38U;
  
#line 389 
  return;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec)
{
  int __retres;
  
#line 394 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 398 
  memset((void *)ec,0,92UL);
  
#line 400 
  ec->rx_coalesce_usecs = pdata->rx_usecs;
  
#line 401 
  ec->rx_max_coalesced_frames = pdata->rx_frames;
  
#line 403 
  ec->tx_max_coalesced_frames = pdata->tx_frames;
  
#line 407 
  __retres = 0;
  
#line 407 
  return __retres;
}


#line 410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec)
{
  int __retres;
  unsigned int rx_frames;
  unsigned int rx_riwt;
  unsigned int rx_usecs;
  unsigned int tx_frames;
  
#line 413 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 414 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 421 
  if ((((((((((((((((((ec->rx_coalesce_usecs_irq != 0U || ec->rx_max_coalesced_frames_irq != 0U) || ec->tx_coalesce_usecs != 0U) || ec->tx_coalesce_usecs_irq != 0U) || ec->tx_max_coalesced_frames_irq != 0U) || ec->stats_block_coalesce_usecs != 0U) || ec->use_adaptive_rx_coalesce != 0U) || ec->use_adaptive_tx_coalesce != 0U) || ec->pkt_rate_low != 0U) || ec->rx_coalesce_usecs_low != 0U) || ec->rx_max_coalesced_frames_low != 0U) || ec->tx_coalesce_usecs_low != 0U) || ec->tx_max_coalesced_frames_low != 0U) || ec->pkt_rate_high != 0U) || ec->rx_coalesce_usecs_high != 0U) || ec->rx_max_coalesced_frames_high != 0U) || ec->tx_coalesce_usecs_high != 0U) || ec->tx_max_coalesced_frames_high != 0U) || ec->rate_sample_interval != 0U) {
    
#line 440 
    __retres = -95;
    
#line 440 
    goto return_label;
  }
  else ;
  
#line 442 
  rx_riwt = (*(hw_if->usec_to_riwt))(pdata,ec->rx_coalesce_usecs);
  
#line 443 
  rx_usecs = ec->rx_coalesce_usecs;
  
#line 444 
  rx_frames = ec->rx_max_coalesced_frames;
  
#line 447 
  if (rx_usecs != 0U && rx_riwt == 0U) 
#line 448 
                                       rx_riwt = 1U; else ;
  
#line 451 
  if (rx_riwt > 255U) {
    unsigned int tmp_0;
    
#line 452 
    tmp_0 = (*(hw_if->riwt_to_usec))(pdata,255U);
    
#line 452 
    ;
    
#line 452 
    netdev_alert((struct net_device const *)netdev,"rx-usec is limited to %d usecs\n",tmp_0);
    
#line 454 
    __retres = -22;
    
#line 454 
    goto return_label;
  }
  else ;
  
#line 456 
  if (pdata->rx_desc_count < rx_frames) {
    
#line 457 
    netdev_alert((struct net_device const *)netdev,"rx-frames is limited to %d frames\n",pdata->rx_desc_count);
    
#line 459 
    __retres = -22;
    
#line 459 
    goto return_label;
  }
  else ;
  
#line 462 
  tx_frames = ec->tx_max_coalesced_frames;
  
#line 465 
  if (pdata->tx_desc_count < tx_frames) {
    
#line 466 
    netdev_alert((struct net_device const *)netdev,"tx-frames is limited to %d frames\n",pdata->tx_desc_count);
    
#line 468 
    __retres = -22;
    
#line 468 
    goto return_label;
  }
  else ;
  
#line 471 
  pdata->rx_riwt = rx_riwt;
  
#line 472 
  pdata->rx_usecs = rx_usecs;
  
#line 473 
  pdata->rx_frames = rx_frames;
  
#line 474 
  (*(hw_if->config_rx_coalesce))(pdata);
  
#line 476 
  pdata->tx_frames = tx_frames;
  
#line 477 
  (*(hw_if->config_tx_coalesce))(pdata);
  
#line 481 
  __retres = 0;
  return_label: 
#line 481 
                return __retres;
}


#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_get_rxnfc(struct net_device *netdev, struct ethtool_rxnfc *rxnfc, u32 *rule_locs)
{
  int __retres;
  
#line 487 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 489 
  switch (rxnfc->cmd) {
    case (__u32)45: 
#line 490 
    ;
    
#line 491 
    rxnfc->data = (unsigned long long)pdata->rx_ring_count;
    
#line 492 
    goto ldv_45026;
    default: 
#line 493 
    ;
    
#line 494 
    __retres = -95;
    
#line 494 
    goto return_label;
  }
  ldv_45026: 
#line 497 
  ;
  
#line 497 
  __retres = 0;
  return_label: 
#line 497 
                return __retres;
}


#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static u32 xgbe_get_rxfh_key_size(struct net_device *netdev)
{
  u32 __retres;
  
#line 502 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 504 
  __retres = 40U;
  
#line 504 
  return __retres;
}


#line 507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static u32 xgbe_get_rxfh_indir_size(struct net_device *netdev)
{
  u32 __retres;
  
#line 509 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 511 
  __retres = 256U;
  
#line 511 
  return __retres;
}


#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_get_rxfh(struct net_device *netdev, u32 *indir, u8 *key, u8 *hfunc)
{
  int __retres;
  unsigned int i;
  
#line 517 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 520 
  if (indir != (u32 *)0U) {
    
#line 521 
    i = 0U;
    
#line 521 
    goto ldv_45051;
    ldv_45050: 
#line 522 
    ;
    
#line 522 
    *(indir + i) = pdata->rss_table[i] & 15U;
    
#line 521 
    i += 1U;
    ldv_45051: 
#line 522 
    ;
    
#line 521 
    if (i <= 255U) 
#line 523 
                   goto ldv_45050; else 
#line 526 
                                        goto ldv_45052;
    ldv_45052: 
#line 527 
    ;
  }
  else ;
  
#line 526 
  if (key != (u8 *)0U) 
#line 527 
                       memcpy((void *)key,(void const *)(& pdata->rss_key),40UL); else ;
  
#line 529 
  if (hfunc != (u8 *)0U) 
#line 530 
                         *hfunc = (unsigned char)1U; else ;
  
#line 532 
  __retres = 0;
  
#line 532 
  return __retres;
}


#line 535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_set_rxfh(struct net_device *netdev, u32 const *indir, u8 const *key, u8 const hfunc)
{
  int __retres;
  unsigned int ret;
  
#line 538 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 539 
  struct xgbe_hw_if *hw_if = & pdata->hw_if;
  
#line 542 
  if ((unsigned int)hfunc > 1U) {
    
#line 543 
    __retres = -95;
    
#line 543 
    goto return_label;
  }
  else ;
  
#line 545 
  if (indir != (u32 const *)0U) {
    int tmp_0;
    
#line 546 
    tmp_0 = (*(hw_if->set_rss_lookup_table))(pdata,indir);
    
#line 546 
    ret = (unsigned int)tmp_0;
    
#line 547 
    if (ret != 0U) {
      
#line 548 
      __retres = (int)ret;
      
#line 548 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 551 
  if (key != (u8 const *)0U) {
    int tmp_1;
    
#line 552 
    tmp_1 = (*(hw_if->set_rss_hash_key))(pdata,key);
    
#line 552 
    ret = (unsigned int)tmp_1;
    
#line 553 
    if (ret != 0U) {
      
#line 554 
      __retres = (int)ret;
      
#line 554 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 557 
  __retres = 0;
  return_label: 
#line 557 
                return __retres;
}


#line 560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static int xgbe_get_ts_info(struct net_device *netdev, struct ethtool_ts_info *ts_info)
{
  int __retres;
  
#line 563 
  struct xgbe_prv_data *pdata = netdev_priv((struct net_device const *)netdev);
  
#line 565 
  ts_info->so_timestamping = 95U;
  
#line 572 
  if (pdata->ptp_clock != (struct ptp_clock *)0) 
#line 573 
                                                 ts_info->phc_index = ptp_clock_index(pdata->ptp_clock); else 
                                                                    
#line 575 
                                                                    ts_info->phc_index = -1;
  
#line 577 
  ts_info->tx_types = 3U;
  
#line 578 
  ts_info->rx_filters = 29179U;
  
#line 590 
  __retres = 0;
  
#line 590 
  return __retres;
}


#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
static struct ethtool_ops const xgbe_ethtool_ops = {.get_settings = & xgbe_get_settings, .set_settings = & xgbe_set_settings, .get_drvinfo = & xgbe_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & xgbe_get_coalesce, .set_coalesce = & xgbe_set_coalesce, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = & xgbe_get_pauseparam, .set_pauseparam = & xgbe_set_pauseparam, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & xgbe_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & xgbe_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & xgbe_get_sset_count, .get_rxnfc = & xgbe_get_rxnfc, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = & xgbe_get_rxfh_key_size, .get_rxfh_indir_size = & xgbe_get_rxfh_indir_size, .get_rxfh = & xgbe_get_rxfh, .set_rxfh = & xgbe_set_rxfh, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = & xgbe_get_ts_info, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c"
struct ethtool_ops *xgbe_get_ethtool_ops(void)
{
  struct ethtool_ops *__retres;
  
#line 615 
  __retres = (struct ethtool_ops *)(& xgbe_ethtool_ops);
  
#line 615 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_11)(struct net_device *) = & ethtool_op_get_link;

#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_get_rxfh_26(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char *arg3)
{
  int tmp;
  
#line 73 
  tmp = xgbe_get_rxfh(arg0,arg1,arg2,arg3);
  
#line 73 
  return tmp;
}


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_get_sset_count_19(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 78 
  tmp = xgbe_get_sset_count(arg0,arg1);
  
#line 78 
  return tmp;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
void ldv_emg_wrapper_xgbe_get_drvinfo_13(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 83 
  xgbe_get_drvinfo(arg0,arg1);
  
#line 84 
  return;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 88 
  tmp = xgbe_set_settings(arg0,arg1);
  
#line 88 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_get_rxnfc_23(struct net_device *arg0, struct ethtool_rxnfc *arg1, unsigned int *arg2)
{
  int tmp;
  
#line 93 
  tmp = xgbe_get_rxnfc(arg0,arg1,arg2);
  
#line 93 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
unsigned int ldv_emg_wrapper_xgbe_get_rxfh_indir_size_5(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 98 
  tmp = xgbe_get_rxfh_indir_size(arg0);
  
#line 98 
  return tmp;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
void ldv_emg_wrapper_xgbe_get_pauseparam_3(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 103 
  xgbe_get_pauseparam(arg0,arg1);
  
#line 104 
  return;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
unsigned int ldv_emg_wrapper_xgbe_get_rxfh_key_size_15(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 108 
  tmp = xgbe_get_rxfh_key_size(arg0);
  
#line 108 
  return tmp;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_get_settings_18(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 113 
  tmp = xgbe_get_settings(arg0,arg1);
  
#line 113 
  return tmp;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_set_rxfh_14(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char arg3)
{
  int tmp;
  
#line 118 
  tmp = xgbe_set_rxfh(arg0,(u32 const *)arg1,(u8 const *)arg2,(unsigned char)((int)arg3));
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
void ldv_emg_wrapper_xgbe_get_ethtool_stats_9(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 123 
  xgbe_get_ethtool_stats(arg0,arg1,arg2);
  
#line 124 
  return;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_set_pauseparam_31(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 128 
  tmp = xgbe_set_pauseparam(arg0,arg1);
  
#line 128 
  return tmp;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_get_coalesce_25(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 133 
  tmp = xgbe_get_coalesce(arg0,arg1);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_set_coalesce_27(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 138 
  tmp = xgbe_set_coalesce(arg0,arg1);
  
#line 138 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
void ldv_emg_wrapper_xgbe_get_strings_6(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 143 
  xgbe_get_strings(arg0,arg1,arg2);
  
#line 144 
  return;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-ethtool.c.aux"
int ldv_emg_wrapper_xgbe_get_ts_info_24(struct net_device *arg0, struct ethtool_ts_info *arg1)
{
  int tmp;
  
#line 148 
  tmp = xgbe_get_ts_info(arg0,arg1);
  
#line 148 
  return tmp;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_next_bit(unsigned long const *, unsigned long, unsigned long);


#line 42 
unsigned long find_first_bit(unsigned long const *, unsigned long);


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static int get_bitmask_order(unsigned int count)
{
  int order;
  
#line 64 
  order = fls((int)count);
  
#line 65 
  return order;
}


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-dev.c.aux"
static void ldv_mutex_lock_73(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_75(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_77(struct mutex *ldv_func_arg1);


#line 51 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 53 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
unsigned int jiffies_to_usecs(unsigned long const);


#line 365 
unsigned long __usecs_to_jiffies(unsigned int const);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 369 
  __retres = (unsigned long)(((long)u + 3999L) / 4000L);
  
#line 369 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 410 
  if (0 != 0) {
    unsigned int tmp;
    unsigned long tmp_0;
    
#line 411 
    tmp = jiffies_to_usecs(4611686018427387902UL);
    
#line 411 
    ;
    
#line 411 
    if (tmp < u) {
      
#line 412 
      __retres = 4611686018427387902UL;
      
#line 412 
      goto return_label;
    }
    else ;
    
#line 413 
    tmp_0 = _usecs_to_jiffies(u);
    
#line 413 
    __retres = tmp_0;
    
#line 413 
    goto return_label;
  }
  else {
    unsigned long tmp_1;
    
#line 415 
    tmp_1 = __usecs_to_jiffies(u);
    
#line 415 
    __retres = tmp_1;
    
#line 415 
    goto return_label;
  }
  return_label: 
#line 410 
                return __retres;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_74(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1);


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
static int ldv_mod_timer_79(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
extern u8 const byte_rev_table[256U];


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u8 __bitrev8(u8 byte)
{
  u8 __retres;
  
#line 17 
  __retres = byte_rev_table[(int)byte];
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u16 __bitrev16(u16 x)
{
  u16 __retres;
  u8 tmp;
  u8 tmp_0;
  
#line 22 
  tmp = __bitrev8((unsigned char)((int)((unsigned char)x)));
  
#line 22 
  tmp_0 = __bitrev8((unsigned char)((int)((unsigned char)((int)x >> 8))));
  
#line 22 
  __retres = (unsigned short)(((int)tmp << 8) | (int)tmp_0);
  
#line 22 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u32 __bitrev32(u32 x)
{
  u32 __retres;
  u16 tmp;
  u16 tmp_0;
  
#line 27 
  tmp = __bitrev16((unsigned short)((int)((unsigned short)x)));
  
#line 27 
  tmp_0 = __bitrev16((unsigned short)((int)((unsigned short)(x >> 16))));
  
#line 27 
  __retres = (unsigned int)(((int)tmp << 16) | (int)tmp_0);
  
#line 27 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void usleep_range(unsigned long, unsigned long);


#line 2600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_xmit_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  
#line 2602 
  __retres = (_Bool)((dev_queue->state & 3UL) != 0UL);
  
#line 2602 
  return __retres;
}


#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static unsigned int xgbe_usec_to_riwt(struct xgbe_prv_data *pdata, unsigned int usec)
{
  unsigned long rate;
  unsigned int ret;
  
#line 134 
  rate = pdata->sysclk_rate;
  
#line 142 
  ret = (unsigned int)(((unsigned long)usec * (rate / 1000000UL)) / 256UL);
  
#line 146 
  return ret;
}


#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static unsigned int xgbe_riwt_to_usec(struct xgbe_prv_data *pdata, unsigned int riwt)
{
  unsigned long rate;
  unsigned int ret;
  
#line 157 
  rate = pdata->sysclk_rate;
  
#line 165 
  ret = (unsigned int)((unsigned long)(riwt * 256U) / (rate / 1000000UL));
  
#line 169 
  return ret;
}


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_pblx8(struct xgbe_prv_data *pdata)
{
  int __retres;
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 177 
  channel = pdata->channel;
  
#line 178 
  i = 0U;
  
#line 178 
  goto ldv_45166;
  ldv_45165: 
#line 179 
  ;
  {
    
#line 179 
    u32 reg_val = ioread32(channel->dma_regs);
    
#line 179 
    reg_val &= 4294901759U;
    
#line 179 
    reg_val = ((pdata->pblx8 << 16) & 65536U) | reg_val;
    
#line 179 
    iowrite32(reg_val,channel->dma_regs);
  }
  
#line 178 
  i += 1U;
  
#line 178 
  channel += 1;
  ldv_45166: 
#line 179 
  ;
  
#line 178 
  if (pdata->channel_count > i) 
#line 180 
                                goto ldv_45165; else 
#line 183 
                                                     goto ldv_45167;
  ldv_45167: 
#line 184 
  ;
  
#line 182 
  __retres = 0;
  
#line 182 
  return __retres;
}


#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_get_tx_pbl_val(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int tmp;
  
#line 187 
  tmp = ioread32((pdata->channel)->dma_regs + 4U);
  
#line 187 
  __retres = (int)(tmp >> 16) & 63;
  
#line 187 
  return __retres;
}


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_tx_pbl_val(struct xgbe_prv_data *pdata)
{
  int __retres;
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 195 
  channel = pdata->channel;
  
#line 196 
  i = 0U;
  
#line 196 
  goto ldv_45179;
  ldv_45178: 
#line 197 
  ;
  
#line 197 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 198 
                                                 goto ldv_45176; else ;
  {
    
#line 200 
    u32 reg_val = ioread32(channel->dma_regs + 4U);
    
#line 200 
    reg_val &= 4290838527U;
    
#line 200 
    reg_val = ((pdata->tx_pbl << 16) & 4128768U) | reg_val;
    
#line 200 
    iowrite32(reg_val,channel->dma_regs + 4U);
  }
  
#line 196 
  i += 1U;
  
#line 196 
  channel += 1;
  ldv_45179: 
#line 197 
  ;
  
#line 196 
  if (pdata->channel_count > i) 
#line 198 
                                goto ldv_45178; else 
#line 201 
                                                     goto ldv_45176;
  ldv_45176: 
#line 202 
  ;
  
#line 204 
  __retres = 0;
  
#line 204 
  return __retres;
}


#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_get_rx_pbl_val(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int tmp;
  
#line 209 
  tmp = ioread32((pdata->channel)->dma_regs + 8U);
  
#line 209 
  __retres = (int)(tmp >> 16) & 63;
  
#line 209 
  return __retres;
}


#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_rx_pbl_val(struct xgbe_prv_data *pdata)
{
  int __retres;
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 217 
  channel = pdata->channel;
  
#line 218 
  i = 0U;
  
#line 218 
  goto ldv_45191;
  ldv_45190: 
#line 219 
  ;
  
#line 219 
  if (channel->rx_ring == (struct xgbe_ring *)0) 
#line 220 
                                                 goto ldv_45188; else ;
  {
    
#line 222 
    u32 reg_val = ioread32(channel->dma_regs + 8U);
    
#line 222 
    reg_val &= 4290838527U;
    
#line 222 
    reg_val = ((pdata->rx_pbl << 16) & 4128768U) | reg_val;
    
#line 222 
    iowrite32(reg_val,channel->dma_regs + 8U);
  }
  
#line 218 
  i += 1U;
  
#line 218 
  channel += 1;
  ldv_45191: 
#line 219 
  ;
  
#line 218 
  if (pdata->channel_count > i) 
#line 220 
                                goto ldv_45190; else 
#line 223 
                                                     goto ldv_45188;
  ldv_45188: 
#line 224 
  ;
  
#line 226 
  __retres = 0;
  
#line 226 
  return __retres;
}


#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_osp_mode(struct xgbe_prv_data *pdata)
{
  int __retres;
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 234 
  channel = pdata->channel;
  
#line 235 
  i = 0U;
  
#line 235 
  goto ldv_45200;
  ldv_45199: 
#line 236 
  ;
  
#line 236 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 237 
                                                 goto ldv_45197; else ;
  {
    
#line 239 
    u32 reg_val = ioread32(channel->dma_regs + 4U);
    
#line 239 
    reg_val &= 4294967279U;
    
#line 239 
    reg_val = ((pdata->tx_osp_mode << 4) & 16U) | reg_val;
    
#line 239 
    iowrite32(reg_val,channel->dma_regs + 4U);
  }
  
#line 235 
  i += 1U;
  
#line 235 
  channel += 1;
  ldv_45200: 
#line 236 
  ;
  
#line 235 
  if (pdata->channel_count > i) 
#line 237 
                                goto ldv_45199; else 
#line 240 
                                                     goto ldv_45197;
  ldv_45197: 
#line 241 
  ;
  
#line 243 
  __retres = 0;
  
#line 243 
  return __retres;
}


#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_rsf_mode(struct xgbe_prv_data *pdata, unsigned int val)
{
  int __retres;
  unsigned int i;
  
#line 250 
  i = 0U;
  
#line 250 
  goto ldv_45208;
  ldv_45207: 
#line 251 
  ;
  {
    
#line 251 
    u32 reg_val = ioread32(pdata->xgmac_regs + (i * 128U + 4416U));
    
#line 251 
    reg_val &= 4294967263U;
    
#line 251 
    reg_val = ((val << 5) & 32U) | reg_val;
    
#line 251 
    iowrite32(reg_val,pdata->xgmac_regs + (i * 128U + 4416U));
  }
  
#line 250 
  i += 1U;
  ldv_45208: 
#line 251 
  ;
  
#line 250 
  if (pdata->rx_q_count > i) 
#line 252 
                             goto ldv_45207; else 
#line 255 
                                                  goto ldv_45209;
  ldv_45209: 
#line 256 
  ;
  
#line 253 
  __retres = 0;
  
#line 253 
  return __retres;
}


#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_tsf_mode(struct xgbe_prv_data *pdata, unsigned int val)
{
  int __retres;
  unsigned int i;
  
#line 260 
  i = 0U;
  
#line 260 
  goto ldv_45217;
  ldv_45216: 
#line 261 
  ;
  {
    
#line 261 
    u32 reg_val = ioread32(pdata->xgmac_regs + (i * 128U + 4352U));
    
#line 261 
    reg_val &= 4294967293U;
    
#line 261 
    reg_val = ((val << 1) & 2U) | reg_val;
    
#line 261 
    iowrite32(reg_val,pdata->xgmac_regs + (i * 128U + 4352U));
  }
  
#line 260 
  i += 1U;
  ldv_45217: 
#line 261 
  ;
  
#line 260 
  if (pdata->tx_q_count > i) 
#line 262 
                             goto ldv_45216; else 
#line 265 
                                                  goto ldv_45218;
  ldv_45218: 
#line 266 
  ;
  
#line 263 
  __retres = 0;
  
#line 263 
  return __retres;
}


#line 266  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_rx_threshold(struct xgbe_prv_data *pdata, unsigned int val)
{
  int __retres;
  unsigned int i;
  
#line 271 
  i = 0U;
  
#line 271 
  goto ldv_45226;
  ldv_45225: 
#line 272 
  ;
  {
    
#line 272 
    u32 reg_val = ioread32(pdata->xgmac_regs + (i * 128U + 4416U));
    
#line 272 
    reg_val &= 4294967292U;
    
#line 272 
    reg_val = (val & 3U) | reg_val;
    
#line 272 
    iowrite32(reg_val,pdata->xgmac_regs + (i * 128U + 4416U));
  }
  
#line 271 
  i += 1U;
  ldv_45226: 
#line 272 
  ;
  
#line 271 
  if (pdata->rx_q_count > i) 
#line 273 
                             goto ldv_45225; else 
#line 276 
                                                  goto ldv_45227;
  ldv_45227: 
#line 277 
  ;
  
#line 274 
  __retres = 0;
  
#line 274 
  return __retres;
}


#line 277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_tx_threshold(struct xgbe_prv_data *pdata, unsigned int val)
{
  int __retres;
  unsigned int i;
  
#line 282 
  i = 0U;
  
#line 282 
  goto ldv_45235;
  ldv_45234: 
#line 283 
  ;
  {
    
#line 283 
    u32 reg_val = ioread32(pdata->xgmac_regs + (i * 128U + 4352U));
    
#line 283 
    reg_val &= 4294967183U;
    
#line 283 
    reg_val = ((val << 4) & 112U) | reg_val;
    
#line 283 
    iowrite32(reg_val,pdata->xgmac_regs + (i * 128U + 4352U));
  }
  
#line 282 
  i += 1U;
  ldv_45235: 
#line 283 
  ;
  
#line 282 
  if (pdata->tx_q_count > i) 
#line 284 
                             goto ldv_45234; else 
#line 287 
                                                  goto ldv_45236;
  ldv_45236: 
#line 288 
  ;
  
#line 285 
  __retres = 0;
  
#line 285 
  return __retres;
}


#line 288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_rx_coalesce(struct xgbe_prv_data *pdata)
{
  int __retres;
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 293 
  channel = pdata->channel;
  
#line 294 
  i = 0U;
  
#line 294 
  goto ldv_45245;
  ldv_45244: 
#line 295 
  ;
  
#line 295 
  if (channel->rx_ring == (struct xgbe_ring *)0) 
#line 296 
                                                 goto ldv_45242; else ;
  {
    
#line 298 
    u32 reg_val = ioread32(channel->dma_regs + 60U);
    
#line 298 
    reg_val &= 4294967040U;
    
#line 298 
    reg_val = (pdata->rx_riwt & 255U) | reg_val;
    
#line 298 
    iowrite32(reg_val,channel->dma_regs + 60U);
  }
  
#line 294 
  i += 1U;
  
#line 294 
  channel += 1;
  ldv_45245: 
#line 295 
  ;
  
#line 294 
  if (pdata->channel_count > i) 
#line 296 
                                goto ldv_45244; else 
#line 299 
                                                     goto ldv_45242;
  ldv_45242: 
#line 300 
  ;
  
#line 302 
  __retres = 0;
  
#line 302 
  return __retres;
}


#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_tx_coalesce(struct xgbe_prv_data *pdata)
{
  int __retres;
  
#line 307 
  __retres = 0;
  
#line 307 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_rx_buffer_size(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 315 
  channel = pdata->channel;
  
#line 316 
  i = 0U;
  
#line 316 
  goto ldv_45257;
  ldv_45256: 
#line 317 
  ;
  
#line 317 
  if (channel->rx_ring == (struct xgbe_ring *)0) 
#line 318 
                                                 goto ldv_45254; else ;
  {
    
#line 320 
    u32 reg_val = ioread32(channel->dma_regs + 8U);
    
#line 320 
    reg_val &= 4294934529U;
    
#line 320 
    reg_val = ((pdata->rx_buf_size << 1) & 32766U) | reg_val;
    
#line 320 
    iowrite32(reg_val,channel->dma_regs + 8U);
  }
  
#line 316 
  i += 1U;
  
#line 316 
  channel += 1;
  ldv_45257: 
#line 317 
  ;
  
#line 316 
  if (pdata->channel_count > i) 
#line 318 
                                goto ldv_45256; else 
#line 321 
                                                     goto ldv_45254;
  ldv_45254: 
#line 322 
  ;
  
#line 323 
  return;
}


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_tso_mode(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 330 
  channel = pdata->channel;
  
#line 331 
  i = 0U;
  
#line 331 
  goto ldv_45266;
  ldv_45265: 
#line 332 
  ;
  
#line 332 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 333 
                                                 goto ldv_45263; else ;
  {
    
#line 335 
    u32 reg_val = ioread32(channel->dma_regs + 4U);
    
#line 335 
    reg_val &= 4294963199U;
    
#line 335 
    reg_val |= 4096U;
    
#line 335 
    iowrite32(reg_val,channel->dma_regs + 4U);
  }
  
#line 331 
  i += 1U;
  
#line 331 
  channel += 1;
  ldv_45266: 
#line 332 
  ;
  
#line 331 
  if (pdata->channel_count > i) 
#line 333 
                                goto ldv_45265; else 
#line 336 
                                                     goto ldv_45263;
  ldv_45263: 
#line 337 
  ;
  
#line 338 
  return;
}


#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_sph_mode(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 344 
  channel = pdata->channel;
  
#line 345 
  i = 0U;
  
#line 345 
  goto ldv_45275;
  ldv_45274: 
#line 346 
  ;
  
#line 346 
  if (channel->rx_ring == (struct xgbe_ring *)0) 
#line 347 
                                                 goto ldv_45272; else ;
  {
    
#line 349 
    u32 reg_val = ioread32(channel->dma_regs);
    
#line 349 
    reg_val &= 4278190079U;
    
#line 349 
    reg_val |= 16777216U;
    
#line 349 
    iowrite32(reg_val,channel->dma_regs);
  }
  
#line 345 
  i += 1U;
  
#line 345 
  channel += 1;
  ldv_45275: 
#line 346 
  ;
  
#line 345 
  if (pdata->channel_count > i) 
#line 347 
                                goto ldv_45274; else 
#line 350 
                                                     goto ldv_45272;
  ldv_45272: 
#line 351 
  ;
  {
    
#line 352 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 4U);
    
#line 352 
    reg_val_0 &= 4294938623U;
    
#line 352 
    reg_val_0 |= 8192U;
    
#line 352 
    iowrite32(reg_val_0,pdata->xgmac_regs + 4U);
  }
  
#line 354 
  return;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_write_rss_reg(struct xgbe_prv_data *pdata, unsigned int type, unsigned int index, unsigned int val)
{
  unsigned int wait;
  unsigned int tmp;
  unsigned int tmp_4;
  unsigned int tmp_5;
  
#line 359 
  int ret = 0;
  
#line 361 
  ldv_mutex_lock_73(& pdata->rss_mutex);
  
#line 363 
  tmp = ioread32(pdata->xgmac_regs + 3208U);
  
#line 363 
  if ((tmp & 1U) != 0U) {
    
#line 364 
    ret = -16;
    
#line 365 
    goto unlock;
  }
  else ;
  
#line 368 
  iowrite32(val,pdata->xgmac_regs + 3212U);
  {
    
#line 370 
    u32 reg_val = ioread32(pdata->xgmac_regs + 3208U);
    
#line 370 
    reg_val &= 4294902015U;
    
#line 370 
    reg_val = ((index << 8) & 65535U) | reg_val;
    
#line 370 
    iowrite32(reg_val,pdata->xgmac_regs + 3208U);
  }
  {
    
#line 371 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 3208U);
    
#line 371 
    reg_val_0 &= 4294967291U;
    
#line 371 
    reg_val_0 = ((type << 2) & 4U) | reg_val_0;
    
#line 371 
    iowrite32(reg_val_0,pdata->xgmac_regs + 3208U);
  }
  {
    
#line 372 
    u32 reg_val_1 = ioread32(pdata->xgmac_regs + 3208U);
    
#line 372 
    reg_val_1 &= 4294967293U;
    
#line 372 
    reg_val_1 = reg_val_1;
    
#line 372 
    iowrite32(reg_val_1,pdata->xgmac_regs + 3208U);
  }
  {
    
#line 373 
    u32 reg_val_2 = ioread32(pdata->xgmac_regs + 3208U);
    
#line 373 
    reg_val_2 &= 4294967294U;
    
#line 373 
    reg_val_2 |= 1U;
    
#line 373 
    iowrite32(reg_val_2,pdata->xgmac_regs + 3208U);
  }
  
#line 375 
  wait = 1000U;
  
#line 376 
  goto ldv_45291;
  ldv_45290: 
#line 377 
  ;
  
#line 377 
  tmp_4 = ioread32(pdata->xgmac_regs + 3208U);
  
#line 377 
  if ((tmp_4 & 1U) == 0U) 
#line 378 
                          goto unlock; else ;
  
#line 380 
  usleep_range(1000UL,1500UL);
  ldv_45291: 
#line 381 
  ;
  
#line 376 
  tmp_5 = wait;
  
#line 376 
  wait -= 1U;
  
#line 376 
  ;
  
#line 376 
  if (tmp_5 != 0U) 
#line 378 
                   goto ldv_45290; else 
#line 381 
                                        goto ldv_45292;
  ldv_45292: 
#line 382 
  ;
  
#line 383 
  ret = -16;
  unlock: 
#line 385 
  ;
  
#line 386 
  ldv_mutex_unlock_74(& pdata->rss_mutex);
  
#line 388 
  return ret;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_write_rss_hash_key(struct xgbe_prv_data *pdata)
{
  int __retres;
  int ret;
  unsigned int *tmp;
  unsigned int tmp_0;
  
#line 393 
  unsigned int key_regs = 10U;
  
#line 394 
  unsigned int *key = (unsigned int *)(& pdata->rss_key);
  
#line 397 
  goto ldv_45300;
  ldv_45299: 
#line 398 
  ;
  
#line 399 
  tmp = key;
  
#line 399 
  key += 1;
  
#line 398 
  ;
  
#line 398 
  ;
  
#line 398 
  ;
  
#line 398 
  ret = xgbe_write_rss_reg(pdata,1U,key_regs,*tmp);
  
#line 400 
  if (ret != 0) {
    
#line 401 
    __retres = ret;
    
#line 401 
    goto return_label;
  }
  else ;
  ldv_45300: 
#line 402 
  ;
  
#line 397 
  tmp_0 = key_regs;
  
#line 397 
  key_regs -= 1U;
  
#line 397 
  ;
  
#line 397 
  if (tmp_0 != 0U) 
#line 399 
                   goto ldv_45299; else 
#line 402 
                                        goto ldv_45301;
  ldv_45301: 
#line 403 
  ;
  
#line 404 
  __retres = 0;
  return_label: 
#line 404 
                return __retres;
}


#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_write_rss_lookup_table(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int i;
  int ret;
  
#line 412 
  i = 0U;
  
#line 412 
  goto ldv_45311;
  ldv_45310: 
#line 413 
  ;
  
#line 413 
  ret = xgbe_write_rss_reg(pdata,0U,i,pdata->rss_table[i]);
  
#line 416 
  if (ret != 0) {
    
#line 417 
    __retres = ret;
    
#line 417 
    goto return_label;
  }
  else ;
  
#line 412 
  i += 1U;
  ldv_45311: 
#line 413 
  ;
  
#line 412 
  if (i <= 255U) 
#line 414 
                 goto ldv_45310; else 
#line 417 
                                      goto ldv_45312;
  ldv_45312: 
#line 418 
  ;
  
#line 420 
  __retres = 0;
  return_label: 
#line 420 
                return __retres;
}


#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_set_rss_hash_key(struct xgbe_prv_data *pdata, u8 const *key)
{
  int tmp;
  
#line 425 
  memcpy((void *)(& pdata->rss_key),(void const *)key,40UL);
  
#line 427 
  tmp = xgbe_write_rss_hash_key(pdata);
  
#line 427 
  return tmp;
}


#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_set_rss_lookup_table(struct xgbe_prv_data *pdata, u32 const *table)
{
  unsigned int i;
  int tmp;
  
#line 435 
  i = 0U;
  
#line 435 
  goto ldv_45326;
  ldv_45325: 
#line 436 
  ;
  
#line 436 
  pdata->rss_table[i] &= 4294967280U;
  
#line 436 
  pdata->rss_table[i] |= *(table + i) & 15U;
  
#line 435 
  i += 1U;
  ldv_45326: 
#line 436 
  ;
  
#line 435 
  if (i <= 255U) 
#line 437 
                 goto ldv_45325; else 
#line 440 
                                      goto ldv_45327;
  ldv_45327: 
#line 441 
  ;
  
#line 438 
  tmp = xgbe_write_rss_lookup_table(pdata);
  
#line 438 
  return tmp;
}


#line 441  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_enable_rss(struct xgbe_prv_data *pdata)
{
  int __retres;
  int ret;
  
#line 445 
  if (pdata->hw_feat.rss == 0U) {
    
#line 446 
    __retres = -95;
    
#line 446 
    goto return_label;
  }
  else ;
  
#line 449 
  ret = xgbe_write_rss_hash_key(pdata);
  
#line 450 
  if (ret != 0) {
    
#line 451 
    __retres = ret;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 454 
  ret = xgbe_write_rss_lookup_table(pdata);
  
#line 455 
  if (ret != 0) {
    
#line 456 
    __retres = ret;
    
#line 456 
    goto return_label;
  }
  else ;
  
#line 459 
  iowrite32(pdata->rss_options,pdata->xgmac_regs + 3200U);
  {
    
#line 462 
    u32 reg_val = ioread32(pdata->xgmac_regs + 3200U);
    
#line 462 
    reg_val &= 4294967294U;
    
#line 462 
    reg_val |= 1U;
    
#line 462 
    iowrite32(reg_val,pdata->xgmac_regs + 3200U);
  }
  
#line 464 
  __retres = 0;
  return_label: 
#line 464 
                return __retres;
}


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_disable_rss(struct xgbe_prv_data *pdata)
{
  int __retres;
  
#line 469 
  if (pdata->hw_feat.rss == 0U) {
    
#line 470 
    __retres = -95;
    
#line 470 
    goto return_label;
  }
  else ;
  {
    
#line 472 
    u32 reg_val = ioread32(pdata->xgmac_regs + 3200U);
    
#line 472 
    reg_val &= 4294967294U;
    
#line 472 
    reg_val = reg_val;
    
#line 472 
    iowrite32(reg_val,pdata->xgmac_regs + 3200U);
  }
  
#line 474 
  __retres = 0;
  return_label: 
#line 474 
                return __retres;
}


#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_rss(struct xgbe_prv_data *pdata)
{
  int ret;
  
#line 481 
  if (pdata->hw_feat.rss == 0U) 
#line 482 
                                goto return_label; else ;
  
#line 484 
  if (((pdata->netdev)->features & 8589934592ULL) != 0ULL) 
#line 485 
                                                           ret = xgbe_enable_rss(pdata); else 
                                                                    
#line 487 
                                                                    ret = xgbe_disable_rss(pdata);
  
#line 489 
  if (ret != 0) 
#line 490 
                netdev_err((struct net_device const *)pdata->netdev,"error configuring RSS, RSS disabled\n"); else ;
  return_label: 
#line 492 
                return;
}


#line 494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_disable_tx_flow_control(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int max_q_count;
  unsigned int q_count;
  unsigned int reg;
  unsigned int reg_val;
  unsigned int i;
  unsigned int tmp_1;
  
#line 501 
  i = 0U;
  
#line 501 
  goto ldv_45351;
  ldv_45350: 
#line 502 
  ;
  {
    
#line 502 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + (i * 128U + 4416U));
    
#line 502 
    reg_val_0 &= 4294967167U;
    
#line 502 
    reg_val_0 = reg_val_0;
    
#line 502 
    iowrite32(reg_val_0,pdata->xgmac_regs + (i * 128U + 4416U));
  }
  
#line 501 
  i += 1U;
  ldv_45351: 
#line 502 
  ;
  
#line 501 
  if (pdata->rx_q_count > i) 
#line 503 
                             goto ldv_45350; else 
#line 506 
                                                  goto ldv_45352;
  ldv_45352: 
#line 507 
  ;
  
#line 505 
  max_q_count = 8U;
  {
    unsigned int tmp_0;
    
#line 506 
    unsigned int __min1 = pdata->tx_q_count;
    
#line 506 
    unsigned int __min2 = max_q_count;
    
#line 506 
    if (__min1 < __min2) 
#line 506 
                         tmp_0 = __min1; else 
#line 506 
                                              tmp_0 = __min2;
    
#line 506 
    tmp_1 = tmp_0;
  }
  
#line 506 
  q_count = tmp_1;
  
#line 507 
  reg = 112U;
  
#line 508 
  i = 0U;
  
#line 508 
  goto ldv_45357;
  ldv_45356: 
#line 509 
  ;
  
#line 509 
  reg_val = ioread32(pdata->xgmac_regs + reg);
  
#line 510 
  reg_val &= 4294967293U;
  
#line 510 
  reg_val = reg_val;
  
#line 511 
  iowrite32(reg_val,pdata->xgmac_regs + reg);
  
#line 513 
  reg += 4U;
  
#line 508 
  i += 1U;
  ldv_45357: 
#line 509 
  ;
  
#line 508 
  if (i < q_count) 
#line 510 
                   goto ldv_45356; else 
#line 513 
                                        goto ldv_45358;
  ldv_45358: 
#line 514 
  ;
  
#line 516 
  __retres = 0;
  
#line 516 
  return __retres;
}


#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_enable_tx_flow_control(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int max_q_count;
  unsigned int q_count;
  unsigned int reg;
  unsigned int reg_val;
  unsigned int i;
  unsigned int tmp_1;
  
#line 526 
  i = 0U;
  
#line 526 
  goto ldv_45369;
  ldv_45368: 
#line 527 
  ;
  {
    
#line 527 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + (i * 128U + 4416U));
    
#line 527 
    reg_val_0 &= 4294967167U;
    
#line 527 
    reg_val_0 |= 128U;
    
#line 527 
    iowrite32(reg_val_0,pdata->xgmac_regs + (i * 128U + 4416U));
  }
  
#line 526 
  i += 1U;
  ldv_45369: 
#line 527 
  ;
  
#line 526 
  if (pdata->rx_q_count > i) 
#line 528 
                             goto ldv_45368; else 
#line 531 
                                                  goto ldv_45370;
  ldv_45370: 
#line 532 
  ;
  
#line 530 
  max_q_count = 8U;
  {
    unsigned int tmp_0;
    
#line 531 
    unsigned int __min1 = pdata->tx_q_count;
    
#line 531 
    unsigned int __min2 = max_q_count;
    
#line 531 
    if (__min1 < __min2) 
#line 531 
                         tmp_0 = __min1; else 
#line 531 
                                              tmp_0 = __min2;
    
#line 531 
    tmp_1 = tmp_0;
  }
  
#line 531 
  q_count = tmp_1;
  
#line 532 
  reg = 112U;
  
#line 533 
  i = 0U;
  
#line 533 
  goto ldv_45375;
  ldv_45374: 
#line 534 
  ;
  
#line 534 
  reg_val = ioread32(pdata->xgmac_regs + reg);
  
#line 537 
  reg_val &= 4294967293U;
  
#line 537 
  reg_val |= 2U;
  
#line 539 
  reg_val &= 65535U;
  
#line 539 
  reg_val |= 4294901760U;
  
#line 541 
  iowrite32(reg_val,pdata->xgmac_regs + reg);
  
#line 543 
  reg += 4U;
  
#line 533 
  i += 1U;
  ldv_45375: 
#line 534 
  ;
  
#line 533 
  if (i < q_count) 
#line 535 
                   goto ldv_45374; else 
#line 538 
                                        goto ldv_45376;
  ldv_45376: 
#line 539 
  ;
  
#line 546 
  __retres = 0;
  
#line 546 
  return __retres;
}


#line 549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_disable_rx_flow_control(struct xgbe_prv_data *pdata)
{
  int __retres;
  {
    
#line 551 
    u32 reg_val = ioread32(pdata->xgmac_regs + 144U);
    
#line 551 
    reg_val &= 4294967294U;
    
#line 551 
    reg_val = reg_val;
    
#line 551 
    iowrite32(reg_val,pdata->xgmac_regs + 144U);
  }
  
#line 553 
  __retres = 0;
  
#line 553 
  return __retres;
}


#line 556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_enable_rx_flow_control(struct xgbe_prv_data *pdata)
{
  int __retres;
  {
    
#line 558 
    u32 reg_val = ioread32(pdata->xgmac_regs + 144U);
    
#line 558 
    reg_val &= 4294967294U;
    
#line 558 
    reg_val |= 1U;
    
#line 558 
    iowrite32(reg_val,pdata->xgmac_regs + 144U);
  }
  
#line 560 
  __retres = 0;
  
#line 560 
  return __retres;
}


#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_tx_flow_control(struct xgbe_prv_data *pdata)
{
  int __retres;
  
#line 565 
  struct ieee_pfc *pfc = pdata->pfc;
  
#line 567 
  if (pdata->tx_pause != 0U || (pfc != (struct ieee_pfc *)0 && (unsigned int)pfc->pfc_en != 0U)) 
    
#line 568 
    xgbe_enable_tx_flow_control(pdata); else 
#line 570 
                                             xgbe_disable_tx_flow_control(pdata);
  
#line 572 
  __retres = 0;
  
#line 572 
  return __retres;
}


#line 575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_rx_flow_control(struct xgbe_prv_data *pdata)
{
  int __retres;
  
#line 577 
  struct ieee_pfc *pfc = pdata->pfc;
  
#line 579 
  if (pdata->rx_pause != 0U || (pfc != (struct ieee_pfc *)0 && (unsigned int)pfc->pfc_en != 0U)) 
    
#line 580 
    xgbe_enable_rx_flow_control(pdata); else 
#line 582 
                                             xgbe_disable_rx_flow_control(pdata);
  
#line 584 
  __retres = 0;
  
#line 584 
  return __retres;
}


#line 587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_flow_control(struct xgbe_prv_data *pdata)
{
  
#line 589 
  struct ieee_pfc *pfc = pdata->pfc;
  
#line 591 
  xgbe_config_tx_flow_control(pdata);
  
#line 592 
  xgbe_config_rx_flow_control(pdata);
  {
    
#line 594 
    u32 reg_val = ioread32(pdata->xgmac_regs + 144U);
    
#line 594 
    reg_val &= 4294967039U;
    
#line 594 
    reg_val = ((unsigned int)(((pfc != (struct ieee_pfc *)0 && (unsigned int)pfc->pfc_en != 0U) != 0) << 8) & 256U) | reg_val;
    
#line 594 
    iowrite32(reg_val,pdata->xgmac_regs + 144U);
  }
  
#line 596 
  return;
}


#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_enable_dma_interrupts(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int dma_ch_isr;
  unsigned int dma_ch_ier;
  unsigned int i;
  
#line 604 
  channel = pdata->channel;
  
#line 605 
  i = 0U;
  
#line 605 
  goto ldv_45406;
  ldv_45405: 
#line 606 
  ;
  
#line 607 
  dma_ch_isr = ioread32(channel->dma_regs + 96U);
  
#line 608 
  iowrite32(dma_ch_isr,channel->dma_regs + 96U);
  
#line 611 
  dma_ch_ier = 0U;
  
#line 618 
  dma_ch_ier &= 4294901759U;
  
#line 618 
  dma_ch_ier |= 65536U;
  
#line 619 
  dma_ch_ier &= 4294934527U;
  
#line 619 
  dma_ch_ier |= 32768U;
  
#line 620 
  dma_ch_ier &= 4294963199U;
  
#line 620 
  dma_ch_ier |= 4096U;
  
#line 622 
  if (channel->tx_ring != (struct xgbe_ring *)0) {
    
#line 627 
    if (pdata->per_channel_irq == 0U) {
      
#line 628 
      dma_ch_ier &= 4294967294U;
      
#line 628 
      dma_ch_ier |= 1U;
    }
    else ;
  }
  else ;
  
#line 630 
  if (channel->rx_ring != (struct xgbe_ring *)0) {
    
#line 636 
    dma_ch_ier &= 4294967167U;
    
#line 636 
    dma_ch_ier |= 128U;
    
#line 637 
    if (pdata->per_channel_irq == 0U) {
      
#line 638 
      dma_ch_ier &= 4294967231U;
      
#line 638 
      dma_ch_ier |= 64U;
    }
    else ;
  }
  else ;
  
#line 641 
  iowrite32(dma_ch_ier,channel->dma_regs + 56U);
  
#line 605 
  i += 1U;
  
#line 605 
  channel += 1;
  ldv_45406: 
#line 606 
  ;
  
#line 605 
  if (pdata->channel_count > i) 
#line 607 
                                goto ldv_45405; else 
#line 610 
                                                     goto ldv_45407;
  ldv_45407: 
#line 611 
  ;
  
#line 612 
  return;
}


#line 645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_enable_mtl_interrupts(struct xgbe_prv_data *pdata)
{
  unsigned int mtl_q_isr;
  unsigned int q_count;
  unsigned int i;
  unsigned int tmp_0;
  {
    unsigned int tmp;
    
#line 650 
    unsigned int _max1 = pdata->hw_feat.tx_q_cnt;
    
#line 650 
    unsigned int _max2 = pdata->hw_feat.rx_q_cnt;
    
#line 650 
    if (_max1 > _max2) 
#line 650 
                       tmp = _max1; else 
#line 650 
                                         tmp = _max2;
    
#line 650 
    tmp_0 = tmp;
  }
  
#line 650 
  q_count = tmp_0;
  
#line 651 
  i = 0U;
  
#line 651 
  goto ldv_45418;
  ldv_45417: 
#line 652 
  ;
  
#line 653 
  mtl_q_isr = ioread32(pdata->xgmac_regs + (i * 128U + 4468U));
  
#line 654 
  iowrite32(mtl_q_isr,pdata->xgmac_regs + (i * 128U + 4468U));
  
#line 657 
  iowrite32(0U,pdata->xgmac_regs + (i * 128U + 4464U));
  
#line 651 
  i += 1U;
  ldv_45418: 
#line 652 
  ;
  
#line 651 
  if (i < q_count) 
#line 653 
                   goto ldv_45417; else 
#line 656 
                                        goto ldv_45419;
  ldv_45419: 
#line 657 
  ;
  
#line 658 
  return;
}


#line 661  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_enable_mac_interrupts(struct xgbe_prv_data *pdata)
{
  
#line 663 
  unsigned int mac_ier = 0U;
  
#line 666 
  mac_ier &= 4294963199U;
  
#line 666 
  mac_ier |= 4096U;
  
#line 668 
  iowrite32(mac_ier,pdata->xgmac_regs + 180U);
  {
    
#line 671 
    u32 reg_val = ioread32(pdata->xgmac_regs + 2060U);
    
#line 671 
    reg_val &= 4286578688U;
    
#line 671 
    reg_val |= 8388607U;
    
#line 671 
    iowrite32(reg_val,pdata->xgmac_regs + 2060U);
  }
  {
    
#line 672 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 2064U);
    
#line 672 
    reg_val_0 &= 4294705152U;
    
#line 672 
    reg_val_0 |= 262143U;
    
#line 672 
    iowrite32(reg_val_0,pdata->xgmac_regs + 2064U);
  }
  
#line 674 
  return;
}


#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_set_gmii_speed(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int tmp;
  
#line 677 
  tmp = ioread32(pdata->xgmac_regs);
  
#line 677 
  if (((tmp >> 29) & 3U) == 3U) {
    
#line 678 
    __retres = 0;
    
#line 678 
    goto return_label;
  }
  else ;
  {
    
#line 680 
    u32 reg_val = ioread32(pdata->xgmac_regs);
    
#line 680 
    reg_val &= 2684354559U;
    
#line 680 
    reg_val |= 1610612736U;
    
#line 680 
    iowrite32(reg_val,pdata->xgmac_regs);
  }
  
#line 682 
  __retres = 0;
  return_label: 
#line 682 
                return __retres;
}


#line 685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_set_gmii_2500_speed(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int tmp;
  
#line 687 
  tmp = ioread32(pdata->xgmac_regs);
  
#line 687 
  if (((tmp >> 29) & 3U) == 2U) {
    
#line 688 
    __retres = 0;
    
#line 688 
    goto return_label;
  }
  else ;
  {
    
#line 690 
    u32 reg_val = ioread32(pdata->xgmac_regs);
    
#line 690 
    reg_val &= 2684354559U;
    
#line 690 
    reg_val |= 1073741824U;
    
#line 690 
    iowrite32(reg_val,pdata->xgmac_regs);
  }
  
#line 692 
  __retres = 0;
  return_label: 
#line 692 
                return __retres;
}


#line 695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_set_xgmii_speed(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int tmp;
  
#line 697 
  tmp = ioread32(pdata->xgmac_regs);
  
#line 697 
  if (((tmp >> 29) & 3U) == 0U) {
    
#line 698 
    __retres = 0;
    
#line 698 
    goto return_label;
  }
  else ;
  {
    
#line 700 
    u32 reg_val = ioread32(pdata->xgmac_regs);
    
#line 700 
    reg_val &= 2684354559U;
    
#line 700 
    reg_val = reg_val;
    
#line 700 
    iowrite32(reg_val,pdata->xgmac_regs);
  }
  
#line 702 
  __retres = 0;
  return_label: 
#line 702 
                return __retres;
}


#line 705  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_set_promiscuous_mode(struct xgbe_prv_data *pdata, unsigned int enable)
{
  int __retres;
  unsigned int tmp;
  
#line 708 
  unsigned int val = (unsigned int)(enable != 0U);
  
#line 710 
  tmp = ioread32(pdata->xgmac_regs + 8U);
  
#line 710 
  ;
  
#line 710 
  if ((tmp & 1U) == val) {
    
#line 711 
    __retres = 0;
    
#line 711 
    goto return_label;
  }
  else ;
  
#line 713 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 713 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_set_promiscuous_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "%s promiscuous mode\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))714U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 713 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) {
      char *tmp_0;
      
#line 713 
      if (enable != 0U) 
#line 713 
                        tmp_0 = (char *)"entering"; else 
#line 713 
                                                         tmp_0 = (char *)"leaving";
      
#line 713 
      ;
      
#line 713 
      __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"%s promiscuous mode\n",tmp_0);
    }
    else ;
  }
  else ;
  {
    
#line 715 
    u32 reg_val = ioread32(pdata->xgmac_regs + 8U);
    
#line 715 
    reg_val &= 4294967294U;
    
#line 715 
    reg_val = (val & 1U) | reg_val;
    
#line 715 
    iowrite32(reg_val,pdata->xgmac_regs + 8U);
  }
  
#line 717 
  __retres = 0;
  return_label: 
#line 717 
                return __retres;
}


#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_set_all_multicast_mode(struct xgbe_prv_data *pdata, unsigned int enable)
{
  int __retres;
  unsigned int tmp;
  
#line 723 
  unsigned int val = (unsigned int)(enable != 0U);
  
#line 725 
  tmp = ioread32(pdata->xgmac_regs + 8U);
  
#line 725 
  ;
  
#line 725 
  if (((tmp >> 4) & 1U) == val) {
    
#line 726 
    __retres = 0;
    
#line 726 
    goto return_label;
  }
  else ;
  
#line 728 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 728 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_set_all_multicast_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "%s allmulti mode\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))729U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 728 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) {
      char *tmp_0;
      
#line 728 
      if (enable != 0U) 
#line 728 
                        tmp_0 = (char *)"entering"; else 
#line 728 
                                                         tmp_0 = (char *)"leaving";
      
#line 728 
      ;
      
#line 728 
      __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"%s allmulti mode\n",tmp_0);
    }
    else ;
  }
  else ;
  {
    
#line 730 
    u32 reg_val = ioread32(pdata->xgmac_regs + 8U);
    
#line 730 
    reg_val &= 4294967279U;
    
#line 730 
    reg_val = ((val << 4) & 16U) | reg_val;
    
#line 730 
    iowrite32(reg_val,pdata->xgmac_regs + 8U);
  }
  
#line 732 
  __retres = 0;
  return_label: 
#line 732 
                return __retres;
}


#line 735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_set_mac_reg(struct xgbe_prv_data *pdata, struct netdev_hw_addr *ha, unsigned int *mac_reg)
{
  unsigned int mac_addr_hi;
  unsigned int mac_addr_lo;
  u8 *mac_addr;
  
#line 741 
  mac_addr_lo = 0U;
  
#line 742 
  mac_addr_hi = 0U;
  
#line 744 
  if (ha != (struct netdev_hw_addr *)0) {
    
#line 745 
    mac_addr = (u8 *)(& mac_addr_lo);
    
#line 746 
    *mac_addr = ha->addr[0];
    
#line 747 
    *(mac_addr + 1U) = ha->addr[1];
    
#line 748 
    *(mac_addr + 2U) = ha->addr[2];
    
#line 749 
    *(mac_addr + 3U) = ha->addr[3];
    
#line 750 
    mac_addr = (u8 *)(& mac_addr_hi);
    
#line 751 
    *mac_addr = ha->addr[4];
    
#line 752 
    *(mac_addr + 1U) = ha->addr[5];
    
#line 754 
    if ((pdata->msg_enable & 1U) != 0U) {
      
#line 754 
      struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_set_mac_reg", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "adding mac address %pM at %#x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))756U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 754 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 754 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"adding mac address %pM at %#x\n",(unsigned char *)(& ha->addr),*mac_reg); else ;
    }
    else ;
    
#line 758 
    mac_addr_hi &= 2147483647U;
    
#line 758 
    mac_addr_hi |= 2147483648U;
  }
  else ;
  
#line 761 
  iowrite32(mac_addr_hi,pdata->xgmac_regs + *mac_reg);
  
#line 762 
  *mac_reg += 4U;
  
#line 763 
  iowrite32(mac_addr_lo,pdata->xgmac_regs + *mac_reg);
  
#line 764 
  *mac_reg += 4U;
  
#line 765 
  return;
}


#line 767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_set_mac_addn_addrs(struct xgbe_prv_data *pdata)
{
  struct netdev_hw_addr *ha;
  unsigned int mac_reg;
  unsigned int addn_macs;
  unsigned int tmp_3;
  
#line 769 
  struct net_device *netdev = pdata->netdev;
  
#line 774 
  mac_reg = 776U;
  
#line 775 
  addn_macs = pdata->hw_feat.addn_mac;
  
#line 777 
  if ((unsigned int)netdev->uc.count > addn_macs) 
#line 778 
                                                  xgbe_set_promiscuous_mode(pdata,1U);
  else {
    struct netdev_hw_addr *tmp;
    struct netdev_hw_addr *tmp_0;
    {
      
#line 780 
      struct list_head const *__mptr = (struct list_head const *)netdev->uc.list.next;
      
#line 780 
      tmp = (struct netdev_hw_addr *)__mptr;
    }
    
#line 780 
    ha = tmp;
    
#line 780 
    goto ldv_45476;
    ldv_45475: 
#line 781 
    ;
    
#line 781 
    xgbe_set_mac_reg(pdata,ha,& mac_reg);
    
#line 782 
    addn_macs -= 1U;
    {
      
#line 780 
      struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
      
#line 780 
      tmp_0 = (struct netdev_hw_addr *)__mptr_0;
    }
    
#line 780 
    ha = tmp_0;
    ldv_45476: 
#line 782 
    ;
    
#line 780 
    if (& ha->list != & netdev->uc.list) 
#line 782 
                                         goto ldv_45475; else 
#line 785 
                                                              goto ldv_45477;
    ldv_45477: 
#line 786 
    ;
    
#line 785 
    if ((unsigned int)netdev->mc.count > addn_macs) 
#line 786 
                                                    xgbe_set_all_multicast_mode(pdata,1U);
    else {
      struct netdev_hw_addr *tmp_1;
      struct netdev_hw_addr *tmp_2;
      {
        
#line 788 
        struct list_head const *__mptr_1 = (struct list_head const *)netdev->mc.list.next;
        
#line 788 
        tmp_1 = (struct netdev_hw_addr *)__mptr_1;
      }
      
#line 788 
      ha = tmp_1;
      
#line 788 
      goto ldv_45483;
      ldv_45482: 
#line 789 
      ;
      
#line 789 
      xgbe_set_mac_reg(pdata,ha,& mac_reg);
      
#line 790 
      addn_macs -= 1U;
      {
        
#line 788 
        struct list_head const *__mptr_2 = (struct list_head const *)ha->list.next;
        
#line 788 
        tmp_2 = (struct netdev_hw_addr *)__mptr_2;
      }
      
#line 788 
      ha = tmp_2;
      ldv_45483: 
#line 790 
      ;
      
#line 788 
      if (& ha->list != & netdev->mc.list) 
#line 790 
                                           goto ldv_45482; else 
#line 793 
                                                                goto ldv_45484;
      ldv_45484: 
#line 794 
      ;
    }
  }
  
#line 796 
  goto ldv_45486;
  ldv_45485: 
#line 797 
  ;
  
#line 797 
  xgbe_set_mac_reg(pdata,(struct netdev_hw_addr *)0,& mac_reg);
  ldv_45486: 
#line 798 
  ;
  
#line 796 
  tmp_3 = addn_macs;
  
#line 796 
  addn_macs -= 1U;
  
#line 796 
  ;
  
#line 796 
  if (tmp_3 != 0U) 
#line 798 
                   goto ldv_45485; else 
#line 801 
                                        goto ldv_45487;
  ldv_45487: 
#line 802 
  ;
  
#line 803 
  return;
}


#line 800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_set_mac_hash_table(struct xgbe_prv_data *pdata)
{
  struct netdev_hw_addr *ha;
  unsigned int hash_reg;
  unsigned int hash_table_shift;
  unsigned int hash_table_count;
  u32 hash_table[8U];
  u32 crc;
  unsigned int i;
  struct netdev_hw_addr *tmp;
  u32 tmp_4;
  struct netdev_hw_addr *tmp_5;
  struct netdev_hw_addr *tmp_6;
  u32 tmp_11;
  struct netdev_hw_addr *tmp_12;
  
#line 802 
  struct net_device *netdev = pdata->netdev;
  
#line 810 
  hash_table_shift = 26U - (pdata->hw_feat.hash_table_size >> 7);
  
#line 811 
  hash_table_count = pdata->hw_feat.hash_table_size / 32U;
  
#line 812 
  memset((void *)(& hash_table),0,32UL);
  {
    
#line 815 
    struct list_head const *__mptr = (struct list_head const *)netdev->uc.list.next;
    
#line 815 
    tmp = (struct netdev_hw_addr *)__mptr;
  }
  
#line 815 
  ha = tmp;
  
#line 815 
  goto ldv_45508;
  ldv_45507: 
#line 816 
  ;
  {
    u32 tmp_0;
    u32 tmp_3;
    
#line 816 
    tmp_0 = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
    
#line 816 
    u32 __x = ~ tmp_0;
    
#line 816 
    if (0 != 0) {
      u32 tmp_1;
      {
        
#line 816 
        u32 __x_0 = __x_0;
        
#line 816 
        __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
        
#line 816 
        __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
        
#line 816 
        __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
        
#line 816 
        __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
        
#line 816 
        __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
        
#line 816 
        tmp_1 = __x_0;
      }
      
#line 816 
      tmp_3 = tmp_1;
    }
    else 
#line 816 
         tmp_3 = __bitrev32(__x);
    
#line 816 
    tmp_4 = tmp_3;
  }
  
#line 816 
  crc = tmp_4;
  
#line 817 
  crc >>= hash_table_shift;
  
#line 818 
  hash_table[crc >> 5] |= (unsigned int)(1 << (crc & 31U));
  {
    
#line 815 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 815 
    tmp_5 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 815 
  ha = tmp_5;
  ldv_45508: 
#line 817 
  ;
  
#line 815 
  if (& ha->list != & netdev->uc.list) 
#line 817 
                                       goto ldv_45507; else 
#line 820 
                                                            goto ldv_45509;
  ldv_45509: 
#line 821 
  ;
  {
    
#line 821 
    struct list_head const *__mptr_1 = (struct list_head const *)netdev->mc.list.next;
    
#line 821 
    tmp_6 = (struct netdev_hw_addr *)__mptr_1;
  }
  
#line 821 
  ha = tmp_6;
  
#line 821 
  goto ldv_45519;
  ldv_45518: 
#line 822 
  ;
  {
    u32 tmp_7;
    u32 tmp_10;
    
#line 822 
    tmp_7 = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
    
#line 822 
    u32 __x_1 = ~ tmp_7;
    
#line 822 
    if (0 != 0) {
      u32 tmp_8;
      {
        
#line 822 
        u32 __x_2 = __x_2;
        
#line 822 
        __x_2 = (__x_2 << 16) | (__x_2 >> ((unsigned long)8 * sizeof(__x_2) - (unsigned long)16));
        
#line 822 
        __x_2 = ((__x_2 >> 8) & 16711935U) | ((__x_2 << 8) & 4278255360U);
        
#line 822 
        __x_2 = ((__x_2 >> 4) & 252645135U) | ((__x_2 << 4) & 4042322160U);
        
#line 822 
        __x_2 = ((__x_2 >> 2) & 858993459U) | ((__x_2 << 2) & 3435973836U);
        
#line 822 
        __x_2 = ((__x_2 >> 1) & 1431655765U) | ((__x_2 << 1) & 2863311530U);
        
#line 822 
        tmp_8 = __x_2;
      }
      
#line 822 
      tmp_10 = tmp_8;
    }
    else 
#line 822 
         tmp_10 = __bitrev32(__x_1);
    
#line 822 
    tmp_11 = tmp_10;
  }
  
#line 822 
  crc = tmp_11;
  
#line 823 
  crc >>= hash_table_shift;
  
#line 824 
  hash_table[crc >> 5] |= (unsigned int)(1 << (crc & 31U));
  {
    
#line 821 
    struct list_head const *__mptr_2 = (struct list_head const *)ha->list.next;
    
#line 821 
    tmp_12 = (struct netdev_hw_addr *)__mptr_2;
  }
  
#line 821 
  ha = tmp_12;
  ldv_45519: 
#line 823 
  ;
  
#line 821 
  if (& ha->list != & netdev->mc.list) 
#line 823 
                                       goto ldv_45518; else 
#line 826 
                                                            goto ldv_45520;
  ldv_45520: 
#line 827 
  ;
  
#line 828 
  hash_reg = 16U;
  
#line 829 
  i = 0U;
  
#line 829 
  goto ldv_45522;
  ldv_45521: 
#line 830 
  ;
  
#line 830 
  iowrite32(hash_table[i],pdata->xgmac_regs + hash_reg);
  
#line 831 
  hash_reg += 4U;
  
#line 829 
  i += 1U;
  ldv_45522: 
#line 830 
  ;
  
#line 829 
  if (i < hash_table_count) 
#line 831 
                            goto ldv_45521; else 
#line 834 
                                                 goto ldv_45523;
  ldv_45523: 
#line 835 
  ;
  
#line 836 
  return;
}


#line 835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_add_mac_addresses(struct xgbe_prv_data *pdata)
{
  int __retres;
  
#line 837 
  if (pdata->hw_feat.hash_table_size != 0U) 
#line 838 
                                            xgbe_set_mac_hash_table(pdata); else 
                                                                    
#line 840 
                                                                    xgbe_set_mac_addn_addrs(pdata);
  
#line 842 
  __retres = 0;
  
#line 842 
  return __retres;
}


#line 845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_set_mac_address_0(struct xgbe_prv_data *pdata, u8 *addr)
{
  int __retres;
  unsigned int mac_addr_hi;
  unsigned int mac_addr_lo;
  
#line 849 
  mac_addr_hi = (unsigned int)(((int)*(addr + 5U) << 8) | (int)*(addr + 4U));
  
#line 850 
  mac_addr_lo = (unsigned int)(((((int)*(addr + 3U) << 24) | ((int)*(addr + 2U) << 16)) | ((int)*(addr + 1U) << 8)) | (int)*addr);
  
#line 853 
  iowrite32(mac_addr_hi,pdata->xgmac_regs + 768U);
  
#line 854 
  iowrite32(mac_addr_lo,pdata->xgmac_regs + 772U);
  
#line 856 
  __retres = 0;
  
#line 856 
  return __retres;
}


#line 859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_rx_mode(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int pr_mode;
  unsigned int am_mode;
  
#line 861 
  struct net_device *netdev = pdata->netdev;
  
#line 864 
  pr_mode = (unsigned int)((netdev->flags & 256U) != 0U);
  
#line 865 
  am_mode = (unsigned int)((netdev->flags & 512U) != 0U);
  
#line 867 
  xgbe_set_promiscuous_mode(pdata,pr_mode);
  
#line 868 
  xgbe_set_all_multicast_mode(pdata,am_mode);
  
#line 870 
  xgbe_add_mac_addresses(pdata);
  
#line 872 
  __retres = 0;
  
#line 872 
  return __retres;
}


#line 875  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_read_mmd_regs(struct xgbe_prv_data *pdata, int prtad, int mmd_reg)
{
  unsigned int mmd_address;
  int mmd_data;
  unsigned int tmp;
  
#line 881 
  if ((mmd_reg & 1073741824) != 0) 
#line 882 
                                   mmd_address = (unsigned int)mmd_reg & 3221225471U; else 
                                                                    
#line 884 
                                                                    mmd_address = (unsigned int)((pdata->mdio_mmd << 16) | (mmd_reg & 65535));
  
#line 895 
  ldv_mutex_lock_75(& pdata->xpcs_mutex);
  
#line 896 
  iowrite32(mmd_address >> 8,pdata->xpcs_regs + 1020U);
  
#line 897 
  tmp = ioread32(pdata->xpcs_regs + ((mmd_address << 2) & 1020U));
  
#line 897 
  mmd_data = (int)tmp;
  
#line 898 
  ldv_mutex_unlock_76(& pdata->xpcs_mutex);
  
#line 900 
  return mmd_data;
}


#line 903  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_write_mmd_regs(struct xgbe_prv_data *pdata, int prtad, int mmd_reg, int mmd_data)
{
  unsigned int mmd_address;
  
#line 908 
  if ((mmd_reg & 1073741824) != 0) 
#line 909 
                                   mmd_address = (unsigned int)mmd_reg & 3221225471U; else 
                                                                    
#line 911 
                                                                    mmd_address = (unsigned int)((pdata->mdio_mmd << 16) | (mmd_reg & 65535));
  
#line 922 
  ldv_mutex_lock_77(& pdata->xpcs_mutex);
  
#line 923 
  iowrite32(mmd_address >> 8,pdata->xpcs_regs + 1020U);
  
#line 924 
  iowrite32((unsigned int)mmd_data,pdata->xpcs_regs + ((mmd_address << 2) & 1020U));
  
#line 925 
  ldv_mutex_unlock_78(& pdata->xpcs_mutex);
  
#line 926 
  return;
}


#line 928  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_tx_complete(struct xgbe_ring_desc *rdesc)
{
  int __retres;
  
#line 930 
  __retres = rdesc->desc3 >= (__le32)0;
  
#line 930 
  return __retres;
}


#line 933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_disable_rx_csum(struct xgbe_prv_data *pdata)
{
  int __retres;
  {
    
#line 935 
    u32 reg_val = ioread32(pdata->xgmac_regs + 4U);
    
#line 935 
    reg_val &= 4294966783U;
    
#line 935 
    reg_val = reg_val;
    
#line 935 
    iowrite32(reg_val,pdata->xgmac_regs + 4U);
  }
  
#line 937 
  __retres = 0;
  
#line 937 
  return __retres;
}


#line 940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_enable_rx_csum(struct xgbe_prv_data *pdata)
{
  int __retres;
  {
    
#line 942 
    u32 reg_val = ioread32(pdata->xgmac_regs + 4U);
    
#line 942 
    reg_val &= 4294966783U;
    
#line 942 
    reg_val |= 512U;
    
#line 942 
    iowrite32(reg_val,pdata->xgmac_regs + 4U);
  }
  
#line 944 
  __retres = 0;
  
#line 944 
  return __retres;
}


#line 947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_enable_rx_vlan_stripping(struct xgbe_prv_data *pdata)
{
  int __retres;
  {
    
#line 950 
    u32 reg_val = ioread32(pdata->xgmac_regs + 80U);
    
#line 950 
    reg_val &= 4278190079U;
    
#line 950 
    reg_val |= 16777216U;
    
#line 950 
    iowrite32(reg_val,pdata->xgmac_regs + 80U);
  }
  {
    
#line 953 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 80U);
    
#line 953 
    reg_val_0 &= 4293918719U;
    
#line 953 
    reg_val_0 |= 1048576U;
    
#line 953 
    iowrite32(reg_val_0,pdata->xgmac_regs + 80U);
  }
  {
    
#line 956 
    u32 reg_val_1 = ioread32(pdata->xgmac_regs + 80U);
    
#line 956 
    reg_val_1 &= 4294443007U;
    
#line 956 
    reg_val_1 = reg_val_1;
    
#line 956 
    iowrite32(reg_val_1,pdata->xgmac_regs + 80U);
  }
  {
    
#line 959 
    u32 reg_val_2 = ioread32(pdata->xgmac_regs + 80U);
    
#line 959 
    reg_val_2 &= 4294705151U;
    
#line 959 
    reg_val_2 = reg_val_2;
    
#line 959 
    iowrite32(reg_val_2,pdata->xgmac_regs + 80U);
  }
  {
    
#line 962 
    u32 reg_val_3 = ioread32(pdata->xgmac_regs + 80U);
    
#line 962 
    reg_val_3 &= 4288675839U;
    
#line 962 
    reg_val_3 |= 6291456U;
    
#line 962 
    iowrite32(reg_val_3,pdata->xgmac_regs + 80U);
  }
  
#line 964 
  __retres = 0;
  
#line 964 
  return __retres;
}


#line 967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_disable_rx_vlan_stripping(struct xgbe_prv_data *pdata)
{
  int __retres;
  {
    
#line 969 
    u32 reg_val = ioread32(pdata->xgmac_regs + 80U);
    
#line 969 
    reg_val &= 4288675839U;
    
#line 969 
    reg_val = reg_val;
    
#line 969 
    iowrite32(reg_val,pdata->xgmac_regs + 80U);
  }
  
#line 971 
  __retres = 0;
  
#line 971 
  return __retres;
}


#line 974  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_enable_rx_vlan_filtering(struct xgbe_prv_data *pdata)
{
  int __retres;
  {
    
#line 977 
    u32 reg_val = ioread32(pdata->xgmac_regs + 8U);
    
#line 977 
    reg_val &= 4294901759U;
    
#line 977 
    reg_val |= 65536U;
    
#line 977 
    iowrite32(reg_val,pdata->xgmac_regs + 8U);
  }
  {
    
#line 980 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 80U);
    
#line 980 
    reg_val_0 &= 4261412863U;
    
#line 980 
    reg_val_0 |= 33554432U;
    
#line 980 
    iowrite32(reg_val_0,pdata->xgmac_regs + 80U);
  }
  {
    
#line 983 
    u32 reg_val_1 = ioread32(pdata->xgmac_regs + 80U);
    
#line 983 
    reg_val_1 &= 4294836223U;
    
#line 983 
    reg_val_1 = reg_val_1;
    
#line 983 
    iowrite32(reg_val_1,pdata->xgmac_regs + 80U);
  }
  {
    
#line 986 
    u32 reg_val_2 = ioread32(pdata->xgmac_regs + 80U);
    
#line 986 
    reg_val_2 &= 4294901759U;
    
#line 986 
    reg_val_2 |= 65536U;
    
#line 986 
    iowrite32(reg_val_2,pdata->xgmac_regs + 80U);
  }
  {
    
#line 994 
    u32 reg_val_3 = ioread32(pdata->xgmac_regs + 80U);
    
#line 994 
    reg_val_3 &= 4294901760U;
    
#line 994 
    reg_val_3 |= 1U;
    
#line 994 
    iowrite32(reg_val_3,pdata->xgmac_regs + 80U);
  }
  
#line 996 
  __retres = 0;
  
#line 996 
  return __retres;
}


#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_disable_rx_vlan_filtering(struct xgbe_prv_data *pdata)
{
  int __retres;
  {
    
#line 1002 
    u32 reg_val = ioread32(pdata->xgmac_regs + 8U);
    
#line 1002 
    reg_val &= 4294901759U;
    
#line 1002 
    reg_val = reg_val;
    
#line 1002 
    iowrite32(reg_val,pdata->xgmac_regs + 8U);
  }
  
#line 1004 
  __retres = 0;
  
#line 1004 
  return __retres;
}


#line 1010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static u32 xgbe_vid_crc32_le(__le16 vid_le)
{
  int i;
  int bits;
  
#line 1012 
  u32 poly = 3988292384U;
  
#line 1013 
  u32 crc = 4294967295U;
  
#line 1014 
  u32 temp = 0U;
  
#line 1015 
  unsigned char *data = (unsigned char *)(& vid_le);
  
#line 1016 
  unsigned char data_byte = (unsigned char)0U;
  
#line 1019 
  bits = get_bitmask_order(4095U);
  
#line 1020 
  i = 0;
  
#line 1020 
  goto ldv_45599;
  ldv_45598: 
#line 1021 
  ;
  
#line 1021 
  if (((unsigned int)i & 7U) == 0U) 
#line 1022 
                                    data_byte = *(data + i / 8); else ;
  
#line 1024 
  temp = ((crc & 1U) ^ (unsigned int)data_byte) & 1U;
  
#line 1025 
  crc >>= 1;
  
#line 1026 
  data_byte = (unsigned char)((int)data_byte >> 1);
  
#line 1028 
  if (temp != 0U) 
#line 1029 
                  crc ^= poly; else ;
  
#line 1020 
  i += 1;
  ldv_45599: 
#line 1021 
  ;
  
#line 1020 
  if (i < bits) 
#line 1022 
                goto ldv_45598; else 
#line 1025 
                                     goto ldv_45600;
  ldv_45600: 
#line 1026 
  ;
  
#line 1032 
  return crc;
}


#line 1035  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_update_vlan_hash_table(struct xgbe_prv_data *pdata)
{
  int __retres;
  u32 crc;
  u16 vid;
  __le16 vid_le;
  unsigned long tmp;
  u32 tmp_4;
  unsigned long tmp_5;
  
#line 1040 
  u16 vlan_hash_table = (unsigned short)0U;
  
#line 1043 
  tmp = find_first_bit((unsigned long const *)(& pdata->active_vlans),4096UL);
  
#line 1043 
  vid = (unsigned short)tmp;
  
#line 1043 
  goto ldv_45613;
  ldv_45612: 
#line 1044 
  ;
  
#line 1045 
  vid_le = vid;
  {
    u32 tmp_0;
    u32 tmp_3;
    
#line 1046 
    tmp_0 = xgbe_vid_crc32_le((unsigned short)((int)vid_le));
    
#line 1046 
    u32 __x = ~ tmp_0;
    
#line 1046 
    if (0 != 0) {
      u32 tmp_1;
      {
        
#line 1046 
        u32 __x_0 = __x_0;
        
#line 1046 
        __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
        
#line 1046 
        __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
        
#line 1046 
        __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
        
#line 1046 
        __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
        
#line 1046 
        __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
        
#line 1046 
        tmp_1 = __x_0;
      }
      
#line 1046 
      tmp_3 = tmp_1;
    }
    else 
#line 1046 
         tmp_3 = __bitrev32(__x);
    
#line 1046 
    tmp_4 = tmp_3;
  }
  
#line 1046 
  crc = tmp_4 >> 28;
  
#line 1048 
  vlan_hash_table = (unsigned short)((1 << crc) | (int)vlan_hash_table);
  
#line 1043 
  tmp_5 = find_next_bit((unsigned long const *)(& pdata->active_vlans),4096UL,(unsigned long)((int)vid + 1));
  
#line 1043 
  vid = (unsigned short)tmp_5;
  ldv_45613: 
#line 1044 
  ;
  
#line 1043 
  if ((unsigned int)vid <= 4095U) 
#line 1045 
                                  goto ldv_45612; else 
#line 1048 
                                                       goto ldv_45614;
  ldv_45614: 
#line 1049 
  ;
  {
    
#line 1052 
    u32 reg_val = ioread32(pdata->xgmac_regs + 88U);
    
#line 1052 
    reg_val &= 4294901760U;
    
#line 1052 
    reg_val = (unsigned int)vlan_hash_table | reg_val;
    
#line 1052 
    iowrite32(reg_val,pdata->xgmac_regs + 88U);
  }
  
#line 1054 
  __retres = 0;
  
#line 1054 
  return __retres;
}


#line 1057  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_tx_desc_reset(struct xgbe_ring_data *rdata)
{
  
#line 1059 
  struct xgbe_ring_desc *rdesc = rdata->rdesc;
  
#line 1067 
  rdesc->desc0 = 0U;
  
#line 1068 
  rdesc->desc1 = 0U;
  
#line 1069 
  rdesc->desc2 = 0U;
  
#line 1070 
  rdesc->desc3 = 0U;
  
#line 1071 
  ldv_inline_asm();
  
#line 1072 
  return;
}


#line 1076  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_tx_desc_init(struct xgbe_channel *channel)
{
  struct xgbe_ring_data *rdata;
  int i;
  
#line 1078 
  struct xgbe_ring *ring = channel->tx_ring;
  
#line 1081 
  int start_index = (int)ring->cur;
  
#line 1086 
  i = 0;
  
#line 1086 
  goto ldv_45628;
  ldv_45627: 
#line 1087 
  ;
  
#line 1087 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & (unsigned int)i);
  
#line 1090 
  xgbe_tx_desc_reset(rdata);
  
#line 1086 
  i += 1;
  ldv_45628: 
#line 1087 
  ;
  
#line 1086 
  if (ring->rdesc_count > (unsigned int)i) 
#line 1088 
                                           goto ldv_45627; else 
#line 1091 
                                                                goto ldv_45629;
  ldv_45629: 
#line 1092 
  ;
  
#line 1094 
  iowrite32(ring->rdesc_count + 4294967295U,channel->dma_regs + 48U);
  
#line 1097 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & (unsigned int)start_index);
  
#line 1098 
  iowrite32((unsigned int)(rdata->rdesc_dma >> 32),channel->dma_regs + 16U);
  
#line 1100 
  iowrite32((unsigned int)rdata->rdesc_dma,channel->dma_regs + 20U);
  
#line 1101 
  return;
}


#line 1106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_rx_desc_reset(struct xgbe_prv_data *pdata, struct xgbe_ring_data *rdata, unsigned int index)
{
  unsigned int inte;
  dma_addr_t hdr_dma;
  dma_addr_t buf_dma;
  
#line 1109 
  struct xgbe_ring_desc *rdesc = rdata->rdesc;
  
#line 1110 
  unsigned int rx_usecs = pdata->rx_usecs;
  
#line 1111 
  unsigned int rx_frames = pdata->rx_frames;
  
#line 1115 
  if (rx_usecs == 0U && rx_frames == 0U) 
#line 1117 
                                         inte = 1U;
  else 
    
#line 1120 
    if (rx_frames != 0U && (index + 1U) % rx_frames == 0U) 
#line 1121 
                                                           inte = 1U; else 
                                                                    
#line 1123 
                                                                    inte = 0U;
  
#line 1133 
  hdr_dma = rdata->rx.hdr.dma_base + (unsigned long long)rdata->rx.hdr.dma_off;
  
#line 1134 
  buf_dma = rdata->rx.buf.dma_base + (unsigned long long)rdata->rx.buf.dma_off;
  
#line 1135 
  rdesc->desc0 = (unsigned int)hdr_dma;
  
#line 1136 
  rdesc->desc1 = (unsigned int)(hdr_dma >> 32);
  
#line 1137 
  rdesc->desc2 = (unsigned int)buf_dma;
  
#line 1138 
  rdesc->desc3 = (unsigned int)(buf_dma >> 32);
  
#line 1140 
  rdesc->desc3 &= 3221225471U;
  
#line 1140 
  rdesc->desc3 |= (inte << 30) & 1073741824U;
  
#line 1141 
  ldv_inline_asm();
  
#line 1148 
  rdesc->desc3 &= 2147483647U;
  
#line 1148 
  rdesc->desc3 |= 2147483648U;
  
#line 1149 
  ldv_inline_asm();
  
#line 1150 
  return;
}


#line 1154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_rx_desc_init(struct xgbe_channel *channel)
{
  struct xgbe_ring_data *rdata;
  unsigned int i;
  
#line 1156 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 1157 
  struct xgbe_ring *ring = channel->rx_ring;
  
#line 1159 
  unsigned int start_index = ring->cur;
  
#line 1165 
  i = 0U;
  
#line 1165 
  goto ldv_45650;
  ldv_45649: 
#line 1166 
  ;
  
#line 1166 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & i);
  
#line 1169 
  xgbe_rx_desc_reset(pdata,rdata,i);
  
#line 1165 
  i += 1U;
  ldv_45650: 
#line 1166 
  ;
  
#line 1165 
  if (ring->rdesc_count > i) 
#line 1167 
                             goto ldv_45649; else 
#line 1170 
                                                  goto ldv_45651;
  ldv_45651: 
#line 1171 
  ;
  
#line 1173 
  iowrite32(ring->rdesc_count + 4294967295U,channel->dma_regs + 52U);
  
#line 1176 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & start_index);
  
#line 1177 
  iowrite32((unsigned int)(rdata->rdesc_dma >> 32),channel->dma_regs + 24U);
  
#line 1179 
  iowrite32((unsigned int)rdata->rdesc_dma,channel->dma_regs + 28U);
  
#line 1183 
  rdata = ring->rdata + (((ring->rdesc_count + start_index) + 4294967295U) & (ring->rdesc_count + 4294967295U));
  
#line 1184 
  iowrite32((unsigned int)rdata->rdesc_dma,channel->dma_regs + 44U);
  
#line 1185 
  return;
}


#line 1190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_update_tstamp_addend(struct xgbe_prv_data *pdata, unsigned int addend)
{
  unsigned int tmp_0;
  
#line 1194 
  iowrite32(addend,pdata->xgmac_regs + 3352U);
  {
    
#line 1195 
    u32 reg_val = ioread32(pdata->xgmac_regs + 3328U);
    
#line 1195 
    reg_val &= 4294967263U;
    
#line 1195 
    reg_val |= 32U;
    
#line 1195 
    iowrite32(reg_val,pdata->xgmac_regs + 3328U);
  }
  
#line 1198 
  goto ldv_45658;
  ldv_45657: 
#line 1199 
  ;
  
#line 1199 
  __const_udelay(21475UL);
  ldv_45658: 
#line 1201 
  ;
  
#line 1198 
  tmp_0 = ioread32(pdata->xgmac_regs + 3328U);
  
#line 1198 
  if ((tmp_0 & 32U) != 0U) 
#line 1200 
                           goto ldv_45657; else 
#line 1203 
                                                goto ldv_45659;
  ldv_45659: 
#line 1204 
  ;
  
#line 1205 
  return;
}


#line 1202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_set_tstamp_time(struct xgbe_prv_data *pdata, unsigned int sec, unsigned int nsec)
{
  unsigned int tmp_0;
  
#line 1206 
  iowrite32(sec,pdata->xgmac_regs + 3344U);
  
#line 1207 
  iowrite32(nsec,pdata->xgmac_regs + 3348U);
  {
    
#line 1208 
    u32 reg_val = ioread32(pdata->xgmac_regs + 3328U);
    
#line 1208 
    reg_val &= 4294967291U;
    
#line 1208 
    reg_val |= 4U;
    
#line 1208 
    iowrite32(reg_val,pdata->xgmac_regs + 3328U);
  }
  
#line 1211 
  goto ldv_45667;
  ldv_45666: 
#line 1212 
  ;
  
#line 1212 
  __const_udelay(21475UL);
  ldv_45667: 
#line 1214 
  ;
  
#line 1211 
  tmp_0 = ioread32(pdata->xgmac_regs + 3328U);
  
#line 1211 
  if ((tmp_0 & 4U) != 0U) 
#line 1213 
                          goto ldv_45666; else 
#line 1216 
                                               goto ldv_45668;
  ldv_45668: 
#line 1217 
  ;
  
#line 1218 
  return;
}


#line 1215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static u64 xgbe_get_tstamp_time(struct xgbe_prv_data *pdata)
{
  u64 nsec;
  unsigned int tmp;
  unsigned int tmp_0;
  
#line 1219 
  tmp = ioread32(pdata->xgmac_regs + 3336U);
  
#line 1219 
  nsec = (unsigned long long)tmp;
  
#line 1220 
  nsec *= 1000000000ULL;
  
#line 1221 
  tmp_0 = ioread32(pdata->xgmac_regs + 3340U);
  
#line 1221 
  nsec = (unsigned long long)tmp_0 + nsec;
  
#line 1223 
  return nsec;
}


#line 1226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static u64 xgbe_get_tx_tstamp(struct xgbe_prv_data *pdata)
{
  u64 __retres;
  unsigned int tx_snr;
  u64 nsec;
  unsigned int tmp;
  
#line 1231 
  tx_snr = ioread32(pdata->xgmac_regs + 3376U);
  
#line 1232 
  if (tx_snr < (unsigned int)0) {
    
#line 1233 
    __retres = 0ULL;
    
#line 1233 
    goto return_label;
  }
  else ;
  
#line 1235 
  tmp = ioread32(pdata->xgmac_regs + 3380U);
  
#line 1235 
  nsec = (unsigned long long)tmp;
  
#line 1236 
  nsec *= 1000000000ULL;
  
#line 1237 
  nsec = (unsigned long long)tx_snr + nsec;
  
#line 1239 
  __retres = nsec;
  return_label: 
#line 1239 
                return __retres;
}


#line 1242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_get_rx_tstamp(struct xgbe_packet_data *packet, struct xgbe_ring_desc *rdesc)
{
  u64 nsec;
  
#line 1247 
  if ((rdesc->desc3 & 16U) != 0U && (rdesc->desc3 & 64U) == 0U) {
    
#line 1249 
    nsec = (unsigned long long)rdesc->desc1;
    
#line 1250 
    nsec <<= 32;
    
#line 1251 
    nsec = (unsigned long long)rdesc->desc0 | nsec;
    
#line 1252 
    if (nsec != 18446744073709551615ULL) {
      
#line 1253 
      packet->rx_tstamp = nsec;
      
#line 1254 
      packet->attributes &= 4294967263U;
      
#line 1254 
      packet->attributes |= 32U;
    }
    else ;
  }
  else ;
  
#line 1257 
  return;
}


#line 1260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_config_tstamp(struct xgbe_prv_data *pdata, unsigned int mac_tscr)
{
  int __retres;
  ktime_t tmp_1;
  
#line 1264 
  mac_tscr &= 4294966783U;
  
#line 1264 
  mac_tscr |= 512U;
  
#line 1267 
  mac_tscr &= 4294967293U;
  
#line 1267 
  mac_tscr |= 2U;
  
#line 1270 
  mac_tscr &= 4278190079U;
  
#line 1270 
  mac_tscr |= 16777216U;
  
#line 1272 
  iowrite32(mac_tscr,pdata->xgmac_regs + 3328U);
  
#line 1275 
  if ((mac_tscr & 1U) == 0U) {
    
#line 1276 
    __retres = 0;
    
#line 1276 
    goto return_label;
  }
  else ;
  {
    
#line 1279 
    u32 reg_val = ioread32(pdata->xgmac_regs + 3332U);
    
#line 1279 
    reg_val &= 4278255615U;
    
#line 1279 
    reg_val |= 1310720U;
    
#line 1279 
    iowrite32(reg_val,pdata->xgmac_regs + 3332U);
  }
  {
    
#line 1280 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 3332U);
    
#line 1280 
    reg_val_0 &= 4294902015U;
    
#line 1280 
    reg_val_0 = reg_val_0;
    
#line 1280 
    iowrite32(reg_val_0,pdata->xgmac_regs + 3332U);
  }
  
#line 1281 
  xgbe_update_tstamp_addend(pdata,pdata->tstamp_addend);
  
#line 1282 
  xgbe_set_tstamp_time(pdata,0U,0U);
  
#line 1286 
  tmp_1 = ktime_get_real();
  
#line 1285 
  ;
  
#line 1285 
  ;
  
#line 1285 
  timecounter_init(& pdata->tstamp_tc,(struct cyclecounter const *)(& pdata->tstamp_cc),(unsigned long long)tmp_1.tv64);
  
#line 1288 
  __retres = 0;
  return_label: 
#line 1288 
                return __retres;
}


#line 1291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_dcb_tc(struct xgbe_prv_data *pdata)
{
  unsigned int total_weight;
  unsigned int min_weight;
  unsigned int weight;
  unsigned int i;
  
#line 1293 
  struct ieee_ets *ets = pdata->ets;
  
#line 1297 
  if (ets == (struct ieee_ets *)0) 
#line 1298 
                                   goto return_label; else ;
  {
    
#line 1303 
    u32 reg_val = ioread32(pdata->xgmac_regs + 4096U);
    
#line 1303 
    reg_val &= 4294967199U;
    
#line 1303 
    reg_val |= 64U;
    
#line 1303 
    iowrite32(reg_val,pdata->xgmac_regs + 4096U);
  }
  
#line 1306 
  total_weight = (pdata->netdev)->mtu * pdata->hw_feat.tc_cnt;
  
#line 1307 
  min_weight = total_weight / 100U;
  
#line 1308 
  if (min_weight == 0U) 
#line 1309 
                        min_weight = 1U; else ;
  
#line 1311 
  i = 0U;
  
#line 1311 
  goto ldv_45717;
  ldv_45716: 
#line 1312 
  ;
  
#line 1312 
  switch ((int)ets->tc_tsa[i]) {
    unsigned int tmp_4;
    case 0: 
#line 1313 
    ;
    
#line 1314 
    if ((pdata->msg_enable & 1U) != 0U) {
      
#line 1314 
      struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_config_dcb_tc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "TC%u using SP\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1315U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1314 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1314 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"TC%u using SP\n",i); else ;
    }
    else ;
    {
      
#line 1316 
      u32 reg_val_0 = ioread32(pdata->xgmac_regs + (i * 128U + 4368U));
      
#line 1316 
      reg_val_0 &= 4294967292U;
      
#line 1316 
      reg_val_0 = reg_val_0;
      
#line 1316 
      iowrite32(reg_val_0,pdata->xgmac_regs + (i * 128U + 4368U));
    }
    
#line 1318 
    goto ldv_45702;
    case 2: 
#line 1319 
    ;
    
#line 1320 
    weight = ((unsigned int)ets->tc_tx_bw[i] * total_weight) / 100U;
    {
      unsigned int tmp_2;
      unsigned int tmp_3;
      {
        unsigned int tmp_1;
        
#line 1321 
        unsigned int _max1 = weight;
        
#line 1321 
        unsigned int _max2 = min_weight;
        
#line 1321 
        if (_max1 > _max2) 
#line 1321 
                           tmp_1 = _max1; else 
#line 1321 
                                               tmp_1 = _max2;
        
#line 1321 
        tmp_2 = tmp_1;
      }
      
#line 1321 
      unsigned int _min1 = tmp_2;
      
#line 1321 
      unsigned int _min2 = total_weight;
      
#line 1321 
      if (_min1 < _min2) 
#line 1321 
                         tmp_3 = _min1; else 
#line 1321 
                                             tmp_3 = _min2;
      
#line 1321 
      tmp_4 = tmp_3;
    }
    
#line 1321 
    weight = tmp_4;
    
#line 1323 
    if ((pdata->msg_enable & 1U) != 0U) {
      
#line 1323 
      struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_config_dcb_tc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "TC%u using DWRR (weight %u)\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1324U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1323 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1323 
                                                            __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)pdata->netdev,"TC%u using DWRR (weight %u)\n",i,weight); else ;
    }
    else ;
    {
      
#line 1325 
      u32 reg_val_1 = ioread32(pdata->xgmac_regs + (i * 128U + 4368U));
      
#line 1325 
      reg_val_1 &= 4294967292U;
      
#line 1325 
      reg_val_1 |= 2U;
      
#line 1325 
      iowrite32(reg_val_1,pdata->xgmac_regs + (i * 128U + 4368U));
    }
    {
      
#line 1327 
      u32 reg_val_2 = ioread32(pdata->xgmac_regs + (i * 128U + 4376U));
      
#line 1327 
      reg_val_2 &= 4292870144U;
      
#line 1327 
      reg_val_2 = (weight & 2097151U) | reg_val_2;
      
#line 1327 
      iowrite32(reg_val_2,pdata->xgmac_regs + (i * 128U + 4376U));
    }
    
#line 1329 
    goto ldv_45702;
  }
  ldv_45702: 
#line 1331 
  ;
  
#line 1311 
  i += 1U;
  ldv_45717: 
#line 1312 
  ;
  
#line 1311 
  if (pdata->hw_feat.tc_cnt > i) 
#line 1313 
                                 goto ldv_45716; else 
#line 1316 
                                                      goto ldv_45718;
  ldv_45718: 
#line 1317 
  ;
  return_label: 
#line 1318 
                return;
}


#line 1334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_dcb_pfc(struct xgbe_prv_data *pdata)
{
  unsigned int mask;
  unsigned int reg;
  unsigned int reg_val;
  unsigned int tc;
  unsigned int prio;
  
#line 1336 
  struct ieee_pfc *pfc = pdata->pfc;
  
#line 1337 
  struct ieee_ets *ets = pdata->ets;
  
#line 1341 
  if (pfc == (struct ieee_pfc *)0 || ets == (struct ieee_ets *)0) 
#line 1342 
                                                                  goto return_label; else ;
  
#line 1344 
  tc = 0U;
  
#line 1344 
  goto ldv_45735;
  ldv_45734: 
#line 1345 
  ;
  
#line 1345 
  mask = 0U;
  
#line 1346 
  prio = 0U;
  
#line 1346 
  goto ldv_45730;
  ldv_45729: 
#line 1347 
  ;
  
#line 1347 
  if ((((int)pfc->pfc_en >> prio) & 1) != 0 && (unsigned int)ets->prio_tc[prio] == tc) 
    
#line 1349 
    mask = (unsigned int)(1 << prio) | mask; else ;
  
#line 1346 
  prio += 1U;
  ldv_45730: 
#line 1347 
  ;
  
#line 1346 
  if (prio <= 7U) 
#line 1348 
                  goto ldv_45729; else 
#line 1351 
                                       goto ldv_45731;
  ldv_45731: 
#line 1352 
  ;
  
#line 1351 
  mask &= 255U;
  
#line 1353 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 1353 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_config_dcb_pfc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "TC%u PFC mask=%#x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1354U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1353 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1353 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"TC%u PFC mask=%#x\n",tc,mask); else ;
  }
  else ;
  
#line 1355 
  reg = (tc & 4294967292U) + 4160U;
  
#line 1356 
  reg_val = ioread32(pdata->xgmac_regs + reg);
  
#line 1358 
  reg_val = (unsigned int)(~ (255 << ((tc << 3) & 24U))) & reg_val;
  
#line 1359 
  reg_val = (mask << ((tc << 3) & 24U)) | reg_val;
  
#line 1361 
  iowrite32(reg_val,pdata->xgmac_regs + reg);
  
#line 1344 
  tc += 1U;
  ldv_45735: 
#line 1345 
  ;
  
#line 1344 
  if (pdata->hw_feat.tc_cnt > tc) 
#line 1346 
                                  goto ldv_45734; else 
#line 1349 
                                                       goto ldv_45736;
  ldv_45736: 
#line 1350 
  ;
  
#line 1364 
  xgbe_config_flow_control(pdata);
  return_label: 
#line 1365 
                return;
}


#line 1367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_tx_start_xmit(struct xgbe_channel *channel, struct xgbe_ring *ring)
{
  struct xgbe_ring_data *rdata;
  
#line 1370 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 1372 
  ldv_inline_asm();
  
#line 1378 
  rdata = ring->rdata + (ring->cur & (ring->rdesc_count + 4294967295U));
  
#line 1379 
  iowrite32((unsigned int)rdata->rdesc_dma,channel->dma_regs + 36U);
  
#line 1383 
  if (pdata->tx_usecs != 0U && channel->tx_timer_active == 0U) {
    unsigned long tmp;
    
#line 1384 
    channel->tx_timer_active = 1U;
    
#line 1385 
    tmp = usecs_to_jiffies(pdata->tx_usecs);
    
#line 1385 
    ;
    
#line 1385 
    ;
    
#line 1385 
    ldv_mod_timer_79(& channel->tx_timer,tmp + jiffies);
  }
  else ;
  
#line 1389 
  ring->__anonCompField_xgbe_ring_96.tx.xmit_more = 0U;
  
#line 1390 
  return;
}


#line 1392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_dev_xmit(struct xgbe_channel *channel)
{
  struct xgbe_ring_data *rdata;
  struct xgbe_ring_desc *rdesc;
  unsigned int csum;
  unsigned int tso;
  unsigned int vlan;
  unsigned int tso_context;
  unsigned int vlan_context;
  unsigned int tx_set_ic;
  int i;
  
#line 1394 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 1395 
  struct xgbe_ring *ring = channel->tx_ring;
  
#line 1398 
  struct xgbe_packet_data *packet = & ring->packet_data;
  
#line 1402 
  int start_index = (int)ring->cur;
  
#line 1403 
  int cur_index = (int)ring->cur;
  
#line 1408 
  csum = packet->attributes & 1U;
  
#line 1410 
  tso = (packet->attributes >> 1) & 1U;
  
#line 1412 
  vlan = (packet->attributes >> 2) & 1U;
  
#line 1415 
  if (tso != 0U && (int)packet->mss != (int)ring->__anonCompField_xgbe_ring_96.tx.cur_mss) 
    
#line 1416 
    tso_context = 1U; else 
#line 1418 
                           tso_context = 0U;
  
#line 1420 
  if (vlan != 0U && (int)packet->vlan_ctag != (int)ring->__anonCompField_xgbe_ring_96.tx.cur_vlan_ctag) 
    
#line 1421 
    vlan_context = 1U; else 
#line 1423 
                            vlan_context = 0U;
  
#line 1435 
  ring->coalesce_count += packet->tx_packets;
  
#line 1436 
  if (pdata->tx_frames == 0U) 
#line 1437 
                              tx_set_ic = 0U;
  else 
    
#line 1438 
    if (packet->tx_packets > pdata->tx_frames) 
#line 1439 
                                               tx_set_ic = 1U;
    else 
      
#line 1440 
      if (ring->coalesce_count % pdata->tx_frames < packet->tx_packets) 
        
#line 1442 
        tx_set_ic = 1U; else 
#line 1444 
                             tx_set_ic = 0U;
  
#line 1446 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & (unsigned int)cur_index);
  
#line 1447 
  rdesc = rdata->rdesc;
  
#line 1450 
  if (tso_context != 0U || vlan_context != 0U) {
    
#line 1451 
    if (tso_context != 0U) {
      
#line 1452 
      if ((pdata->msg_enable & 256U) != 0U) {
        
#line 1452 
        struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_dev_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "TSO context descriptor, mss=%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1454U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 1452 
        if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1452 
                                                            __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"TSO context descriptor, mss=%u\n",(int)packet->mss); else ;
      }
      else ;
      
#line 1457 
      rdesc->desc2 &= 4294934528U;
      
#line 1457 
      rdesc->desc2 |= (unsigned int)packet->mss & 32767U;
      
#line 1461 
      rdesc->desc3 &= 3221225471U;
      
#line 1461 
      rdesc->desc3 |= 1073741824U;
      
#line 1465 
      rdesc->desc3 &= 4227858431U;
      
#line 1465 
      rdesc->desc3 |= 67108864U;
      
#line 1468 
      ring->__anonCompField_xgbe_ring_96.tx.cur_mss = packet->mss;
    }
    else ;
    
#line 1471 
    if (vlan_context != 0U) {
      
#line 1472 
      if ((pdata->msg_enable & 256U) != 0U) {
        
#line 1472 
        struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_dev_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "VLAN context descriptor, ctag=%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1474U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 1472 
        if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1472 
                                                              __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)pdata->netdev,"VLAN context descriptor, ctag=%u\n",(int)packet->vlan_ctag); else ;
      }
      else ;
      
#line 1477 
      rdesc->desc3 &= 3221225471U;
      
#line 1477 
      rdesc->desc3 |= 1073741824U;
      
#line 1481 
      rdesc->desc3 &= 4294901760U;
      
#line 1481 
      rdesc->desc3 |= (unsigned int)packet->vlan_ctag;
      
#line 1485 
      rdesc->desc3 &= 4294901759U;
      
#line 1485 
      rdesc->desc3 |= 65536U;
      
#line 1488 
      ring->__anonCompField_xgbe_ring_96.tx.cur_vlan_ctag = packet->vlan_ctag;
    }
    else ;
    
#line 1491 
    cur_index += 1;
    
#line 1492 
    rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & (unsigned int)cur_index);
    
#line 1493 
    rdesc = rdata->rdesc;
  }
  else ;
  
#line 1497 
  rdesc->desc0 = (unsigned int)rdata->skb_dma;
  
#line 1498 
  rdesc->desc1 = (unsigned int)(rdata->skb_dma >> 32);
  
#line 1501 
  rdesc->desc2 &= 4294950912U;
  
#line 1501 
  rdesc->desc2 |= rdata->skb_dma_len & 16383U;
  
#line 1505 
  if (vlan != 0U) {
    
#line 1506 
    rdesc->desc2 &= 4294918143U;
    
#line 1506 
    rdesc->desc2 |= 32768U;
  }
  else ;
  
#line 1510 
  if ((packet->attributes & 8U) != 0U) {
    
#line 1511 
    rdesc->desc2 &= 3221225471U;
    
#line 1511 
    rdesc->desc2 |= 1073741824U;
  }
  else ;
  
#line 1514 
  rdesc->desc3 &= 3758096383U;
  
#line 1514 
  rdesc->desc3 |= 536870912U;
  
#line 1517 
  rdesc->desc3 &= 3221225471U;
  
#line 1517 
  rdesc->desc3 = rdesc->desc3;
  
#line 1520 
  if (cur_index != start_index) {
    
#line 1521 
    rdesc->desc3 &= 2147483647U;
    
#line 1521 
    rdesc->desc3 |= 2147483648U;
  }
  else ;
  
#line 1523 
  if (tso != 0U) {
    
#line 1525 
    rdesc->desc3 &= 4294705151U;
    
#line 1525 
    rdesc->desc3 |= 262144U;
    
#line 1526 
    rdesc->desc3 &= 4294705152U;
    
#line 1526 
    rdesc->desc3 |= packet->tcp_payload_len & 262143U;
    
#line 1528 
    rdesc->desc3 &= 4287102975U;
    
#line 1528 
    rdesc->desc3 |= (packet->tcp_header_len / 4U << 19) & 7864320U;
    
#line 1531 
    pdata->ext_stats.tx_tso_packets += 1ULL;
  }
  else {
    
#line 1534 
    rdesc->desc3 &= 4093640703U;
    
#line 1534 
    rdesc->desc3 = rdesc->desc3;
    
#line 1537 
    if (csum != 0U) {
      
#line 1538 
      rdesc->desc3 &= 4294770687U;
      
#line 1538 
      rdesc->desc3 |= 196608U;
    }
    else ;
    
#line 1542 
    rdesc->desc3 &= 4294934528U;
    
#line 1542 
    rdesc->desc3 |= packet->length & 32767U;
  }
  
#line 1546 
  i = (cur_index - start_index) + 1;
  
#line 1546 
  goto ldv_45764;
  ldv_45763: 
#line 1547 
  ;
  
#line 1547 
  cur_index += 1;
  
#line 1548 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & (unsigned int)cur_index);
  
#line 1549 
  rdesc = rdata->rdesc;
  
#line 1552 
  rdesc->desc0 = (unsigned int)rdata->skb_dma;
  
#line 1553 
  rdesc->desc1 = (unsigned int)(rdata->skb_dma >> 32);
  
#line 1556 
  rdesc->desc2 &= 4294950912U;
  
#line 1556 
  rdesc->desc2 |= rdata->skb_dma_len & 16383U;
  
#line 1560 
  rdesc->desc3 &= 2147483647U;
  
#line 1560 
  rdesc->desc3 |= 2147483648U;
  
#line 1563 
  rdesc->desc3 &= 3221225471U;
  
#line 1563 
  rdesc->desc3 = rdesc->desc3;
  
#line 1566 
  if (csum != 0U) {
    
#line 1567 
    rdesc->desc3 &= 4294770687U;
    
#line 1567 
    rdesc->desc3 |= 196608U;
  }
  else ;
  
#line 1546 
  i += 1;
  ldv_45764: 
#line 1547 
  ;
  
#line 1546 
  if (packet->rdesc_count > (unsigned int)i) 
#line 1548 
                                             goto ldv_45763; else 
#line 1551 
                                                                  goto ldv_45765;
  ldv_45765: 
#line 1552 
  ;
  
#line 1572 
  rdesc->desc3 &= 4026531839U;
  
#line 1572 
  rdesc->desc3 |= 268435456U;
  
#line 1575 
  if (tx_set_ic != 0U) {
    
#line 1576 
    rdesc->desc2 &= 2147483647U;
    
#line 1576 
    rdesc->desc2 |= 2147483648U;
  }
  else ;
  
#line 1579 
  rdata->tx.packets = packet->tx_packets;
  
#line 1580 
  rdata->tx.bytes = packet->tx_bytes;
  
#line 1581 
  ldv_inline_asm();
  
#line 1589 
  rdata = ring->rdata + ((ring->rdesc_count + 4294967295U) & (unsigned int)start_index);
  
#line 1590 
  rdesc = rdata->rdesc;
  
#line 1591 
  rdesc->desc3 &= 2147483647U;
  
#line 1591 
  rdesc->desc3 |= 2147483648U;
  
#line 1593 
  if ((pdata->msg_enable & 256U) != 0U) 
#line 1594 
                                        xgbe_dump_tx_desc(pdata,ring,(unsigned int)start_index,packet->rdesc_count,1U); else ;
  
#line 1596 
  ldv_inline_asm();
  
#line 1600 
  ring->cur = (unsigned int)(cur_index + 1);
  
#line 1601 
  if ((unsigned int)*((unsigned char *)packet->skb + 142UL) == 0U) 
#line 1601 
                                                                   goto _LOR;
  else {
    bool tmp_0;
    struct netdev_queue *tmp;
    
#line 1602 
    tmp = netdev_get_tx_queue((struct net_device const *)pdata->netdev,channel->queue_index);
    
#line 1601 
    tmp_0 = netif_xmit_stopped((struct netdev_queue const *)tmp);
    
#line 1601 
    if ((int)tmp_0 != 0) _LOR: 
#line 1604 
                               xgbe_tx_start_xmit(channel,ring); else 
                                                                   
#line 1606 
                                                                   ring->__anonCompField_xgbe_ring_96.tx.xmit_more = 1U;
  }
  
#line 1607 
  return;
}


#line 1615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_dev_read(struct xgbe_channel *channel)
{
  int __retres;
  struct xgbe_ring_data *rdata;
  struct xgbe_ring_desc *rdesc;
  unsigned int err;
  unsigned int etlt;
  unsigned int l34t;
  
#line 1617 
  struct xgbe_prv_data *pdata = channel->pdata;
  
#line 1618 
  struct xgbe_ring *ring = channel->rx_ring;
  
#line 1621 
  struct xgbe_packet_data *packet = & ring->packet_data;
  
#line 1622 
  struct net_device *netdev = pdata->netdev;
  
#line 1627 
  rdata = ring->rdata + (ring->cur & (ring->rdesc_count + 4294967295U));
  
#line 1628 
  rdesc = rdata->rdesc;
  
#line 1631 
  if (rdesc->desc3 < (__le32)0) {
    
#line 1632 
    __retres = 1;
    
#line 1632 
    goto return_label;
  }
  else ;
  
#line 1633 
  ldv_inline_asm();
  
#line 1637 
  if ((pdata->msg_enable & 2048U) != 0U) 
#line 1638 
                                         xgbe_dump_rx_desc(pdata,ring,ring->cur); else ;
  
#line 1640 
  if ((rdesc->desc3 & 1073741824U) != 0U) {
    
#line 1642 
    xgbe_get_rx_tstamp(packet,rdesc);
    
#line 1644 
    packet->attributes &= 4294967279U;
    
#line 1644 
    packet->attributes |= 16U;
    
#line 1646 
    packet->attributes &= 4294967287U;
    
#line 1646 
    packet->attributes = packet->attributes;
    
#line 1648 
    __retres = 0;
    
#line 1648 
    goto return_label;
  }
  else ;
  
#line 1652 
  packet->attributes &= 4294967279U;
  
#line 1652 
  packet->attributes = packet->attributes;
  
#line 1655 
  if ((rdesc->desc3 & 134217728U) != 0U) {
    
#line 1656 
    packet->attributes &= 4294967287U;
    
#line 1656 
    packet->attributes |= 8U;
  }
  else ;
  
#line 1660 
  if ((rdesc->desc3 & 536870912U) != 0U) {
    
#line 1661 
    rdata->rx.hdr_len = (unsigned short)((unsigned int)((unsigned short)rdesc->desc2) & 1023U);
    
#line 1663 
    if ((unsigned int)rdata->rx.hdr_len != 0U) 
#line 1664 
                                               pdata->ext_stats.rx_split_header_packets += 1ULL; else ;
  }
  else ;
  
#line 1668 
  if ((rdesc->desc3 & 67108864U) != 0U) {
    
#line 1669 
    packet->attributes &= 4294967231U;
    
#line 1669 
    packet->attributes |= 64U;
    
#line 1672 
    packet->rss_hash = rdesc->desc1;
    
#line 1674 
    l34t = (rdesc->desc3 >> 20) & 15U;
    
#line 1675 
    switch (l34t) {
      case (unsigned int)1: 
#line 1676 
      ;
      case (unsigned int)2: 
#line 1677 
      ;
      case (unsigned int)9: 
#line 1678 
      ;
      case (unsigned int)10: 
#line 1679 
      ;
      
#line 1680 
      packet->rss_hash_type = PKT_HASH_TYPE_L4;
      
#line 1681 
      goto ldv_45782;
      default: 
#line 1682 
      ;
      
#line 1683 
      packet->rss_hash_type = PKT_HASH_TYPE_L3;
    }
    ldv_45782: 
#line 1685 
    ;
  }
  else ;
  
#line 1688 
  rdata->rx.len = (unsigned short)((unsigned int)((unsigned short)rdesc->desc3) & 16383U);
  
#line 1690 
  if ((rdesc->desc3 & 268435456U) == 0U) {
    
#line 1692 
    packet->attributes &= 4294967291U;
    
#line 1692 
    packet->attributes |= 4U;
    
#line 1694 
    __retres = 0;
    
#line 1694 
    goto return_label;
  }
  else ;
  
#line 1698 
  packet->attributes &= 4294967291U;
  
#line 1698 
  packet->attributes = packet->attributes;
  
#line 1702 
  if ((netdev->features & 17179869184ULL) != 0ULL) {
    
#line 1703 
    packet->attributes &= 4294967294U;
    
#line 1703 
    packet->attributes |= 1U;
  }
  else ;
  
#line 1707 
  err = (rdesc->desc3 >> 15) & 1U;
  
#line 1708 
  etlt = (rdesc->desc3 >> 16) & 15U;
  
#line 1709 
  if ((pdata->msg_enable & 2048U) != 0U) {
    
#line 1709 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_dev_read", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "err=%u, etlt=%#x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1709U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1709 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1709 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)netdev,"err=%u, etlt=%#x\n",err,etlt); else ;
  }
  else ;
  
#line 1711 
  if (err == 0U || etlt == 0U) {
    
#line 1713 
    if (etlt == 9U && (netdev->features & 256ULL) != 0ULL) {
      
#line 1715 
      packet->attributes &= 4294967293U;
      
#line 1715 
      packet->attributes |= 2U;
      
#line 1717 
      packet->vlan_ctag = (unsigned short)rdesc->desc0;
      
#line 1720 
      if ((pdata->msg_enable & 2048U) != 0U) {
        
#line 1720 
        struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_dev_read", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "vlan-ctag=%#06x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1721U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 1720 
        if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1720 
                                                              __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)netdev,"vlan-ctag=%#06x\n",(int)packet->vlan_ctag); else ;
      }
      else ;
    }
    else ;
  }
  else 
    
#line 1724 
    if (etlt + 4294967291U <= 1U) {
      
#line 1725 
      packet->attributes &= 4294967294U;
      
#line 1725 
      packet->attributes = packet->attributes;
    }
    else {
      
#line 1728 
      packet->errors &= 4294967287U;
      
#line 1728 
      packet->errors |= 8U;
    }
  
#line 1735 
  __retres = 0;
  return_label: 
#line 1735 
                return __retres;
}


#line 1738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_is_context_desc(struct xgbe_ring_desc *rdesc)
{
  int __retres;
  
#line 1741 
  __retres = (int)(rdesc->desc3 >> 30) & 1;
  
#line 1741 
  return __retres;
}


#line 1744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_is_last_desc(struct xgbe_ring_desc *rdesc)
{
  int __retres;
  
#line 1747 
  __retres = (int)(rdesc->desc3 >> 28) & 1;
  
#line 1747 
  return __retres;
}


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_enable_int(struct xgbe_channel *channel, enum xgbe_int int_id)
{
  int __retres;
  unsigned int dma_ch_ier;
  
#line 1755 
  dma_ch_ier = ioread32(channel->dma_regs + 56U);
  
#line 1757 
  switch ((unsigned int)int_id) {
    case (unsigned int)0: 
#line 1758 
    ;
    
#line 1759 
    dma_ch_ier &= 4294967294U;
    
#line 1759 
    dma_ch_ier |= 1U;
    
#line 1760 
    goto ldv_45799;
    case (unsigned int)1: 
#line 1761 
    ;
    
#line 1762 
    dma_ch_ier &= 4294967293U;
    
#line 1762 
    dma_ch_ier |= 2U;
    
#line 1763 
    goto ldv_45799;
    case (unsigned int)2: 
#line 1764 
    ;
    
#line 1765 
    dma_ch_ier &= 4294967291U;
    
#line 1765 
    dma_ch_ier |= 4U;
    
#line 1766 
    goto ldv_45799;
    case (unsigned int)3: 
#line 1767 
    ;
    
#line 1768 
    dma_ch_ier &= 4294967231U;
    
#line 1768 
    dma_ch_ier |= 64U;
    
#line 1769 
    goto ldv_45799;
    case (unsigned int)4: 
#line 1770 
    ;
    
#line 1771 
    dma_ch_ier &= 4294967167U;
    
#line 1771 
    dma_ch_ier |= 128U;
    
#line 1772 
    goto ldv_45799;
    case (unsigned int)5: 
#line 1773 
    ;
    
#line 1774 
    dma_ch_ier &= 4294967039U;
    
#line 1774 
    dma_ch_ier |= 256U;
    
#line 1775 
    goto ldv_45799;
    case (unsigned int)6: 
#line 1776 
    ;
    
#line 1777 
    dma_ch_ier &= 4294967294U;
    
#line 1777 
    dma_ch_ier |= 1U;
    
#line 1778 
    dma_ch_ier &= 4294967231U;
    
#line 1778 
    dma_ch_ier |= 64U;
    
#line 1779 
    goto ldv_45799;
    case (unsigned int)7: 
#line 1780 
    ;
    
#line 1781 
    dma_ch_ier &= 4294963199U;
    
#line 1781 
    dma_ch_ier |= 4096U;
    
#line 1782 
    goto ldv_45799;
    case (unsigned int)8: 
#line 1783 
    ;
    
#line 1784 
    dma_ch_ier = channel->saved_ier | dma_ch_ier;
    
#line 1785 
    goto ldv_45799;
    default: 
#line 1786 
    ;
    
#line 1787 
    __retres = -1;
    
#line 1787 
    goto return_label;
  }
  ldv_45799: 
#line 1790 
  ;
  
#line 1790 
  iowrite32(dma_ch_ier,channel->dma_regs + 56U);
  
#line 1792 
  __retres = 0;
  return_label: 
#line 1792 
                return __retres;
}


#line 1795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_disable_int(struct xgbe_channel *channel, enum xgbe_int int_id)
{
  int __retres;
  unsigned int dma_ch_ier;
  
#line 1800 
  dma_ch_ier = ioread32(channel->dma_regs + 56U);
  
#line 1802 
  switch ((unsigned int)int_id) {
    case (unsigned int)0: 
#line 1803 
    ;
    
#line 1804 
    dma_ch_ier &= 4294967294U;
    
#line 1804 
    dma_ch_ier = dma_ch_ier;
    
#line 1805 
    goto ldv_45815;
    case (unsigned int)1: 
#line 1806 
    ;
    
#line 1807 
    dma_ch_ier &= 4294967293U;
    
#line 1807 
    dma_ch_ier = dma_ch_ier;
    
#line 1808 
    goto ldv_45815;
    case (unsigned int)2: 
#line 1809 
    ;
    
#line 1810 
    dma_ch_ier &= 4294967291U;
    
#line 1810 
    dma_ch_ier = dma_ch_ier;
    
#line 1811 
    goto ldv_45815;
    case (unsigned int)3: 
#line 1812 
    ;
    
#line 1813 
    dma_ch_ier &= 4294967231U;
    
#line 1813 
    dma_ch_ier = dma_ch_ier;
    
#line 1814 
    goto ldv_45815;
    case (unsigned int)4: 
#line 1815 
    ;
    
#line 1816 
    dma_ch_ier &= 4294967167U;
    
#line 1816 
    dma_ch_ier = dma_ch_ier;
    
#line 1817 
    goto ldv_45815;
    case (unsigned int)5: 
#line 1818 
    ;
    
#line 1819 
    dma_ch_ier &= 4294967039U;
    
#line 1819 
    dma_ch_ier = dma_ch_ier;
    
#line 1820 
    goto ldv_45815;
    case (unsigned int)6: 
#line 1821 
    ;
    
#line 1822 
    dma_ch_ier &= 4294967294U;
    
#line 1822 
    dma_ch_ier = dma_ch_ier;
    
#line 1823 
    dma_ch_ier &= 4294967231U;
    
#line 1823 
    dma_ch_ier = dma_ch_ier;
    
#line 1824 
    goto ldv_45815;
    case (unsigned int)7: 
#line 1825 
    ;
    
#line 1826 
    dma_ch_ier &= 4294963199U;
    
#line 1826 
    dma_ch_ier = dma_ch_ier;
    
#line 1827 
    goto ldv_45815;
    case (unsigned int)8: 
#line 1828 
    ;
    
#line 1829 
    channel->saved_ier = dma_ch_ier & 12743U;
    
#line 1830 
    dma_ch_ier &= 4294954552U;
    
#line 1831 
    goto ldv_45815;
    default: 
#line 1832 
    ;
    
#line 1833 
    __retres = -1;
    
#line 1833 
    goto return_label;
  }
  ldv_45815: 
#line 1836 
  ;
  
#line 1836 
  iowrite32(dma_ch_ier,channel->dma_regs + 56U);
  
#line 1838 
  __retres = 0;
  return_label: 
#line 1838 
                return __retres;
}


#line 1841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_exit(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int tmp_0;
  
#line 1843 
  unsigned int count = 2000U;
  {
    
#line 1848 
    u32 reg_val = ioread32(pdata->xgmac_regs + 12288U);
    
#line 1848 
    reg_val &= 4294967294U;
    
#line 1848 
    reg_val |= 1U;
    
#line 1848 
    iowrite32(reg_val,pdata->xgmac_regs + 12288U);
  }
  
#line 1849 
  usleep_range(10UL,15UL);
  
#line 1852 
  goto ldv_45831;
  ldv_45830: 
#line 1853 
  ;
  
#line 1853 
  usleep_range(500UL,600UL);
  ldv_45831: 
#line 1854 
  ;
  
#line 1852 
  tmp_0 = count;
  
#line 1852 
  count -= 1U;
  
#line 1852 
  ;
  
#line 1852 
  if (tmp_0 != 0U) {
    unsigned int tmp_1;
    
#line 1852 
    tmp_1 = ioread32(pdata->xgmac_regs + 12288U);
    
#line 1852 
    if ((tmp_1 & 1U) != 0U) 
#line 1854 
                            goto ldv_45830; else 
#line 1857 
                                                 goto ldv_45832;
  }
  else 
#line 1857 
       goto ldv_45832;
  ldv_45832: 
#line 1858 
  ;
  
#line 1855 
  if (count == 0U) {
    
#line 1856 
    __retres = -16;
    
#line 1856 
    goto return_label;
  }
  else ;
  
#line 1860 
  __retres = 0;
  return_label: 
#line 1860 
                return __retres;
}


#line 1863  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_flush_tx_queues(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int i;
  unsigned int count;
  unsigned int tmp_0;
  
#line 1867 
  if ((pdata->hw_feat.version & 255U) <= 32U) {
    
#line 1868 
    __retres = 0;
    
#line 1868 
    goto return_label;
  }
  else ;
  
#line 1870 
  i = 0U;
  
#line 1870 
  goto ldv_45840;
  ldv_45839: 
#line 1871 
  ;
  {
    
#line 1871 
    u32 reg_val = ioread32(pdata->xgmac_regs + (i * 128U + 4352U));
    
#line 1871 
    reg_val &= 4294967294U;
    
#line 1871 
    reg_val |= 1U;
    
#line 1871 
    iowrite32(reg_val,pdata->xgmac_regs + (i * 128U + 4352U));
  }
  
#line 1870 
  i += 1U;
  ldv_45840: 
#line 1871 
  ;
  
#line 1870 
  if (pdata->tx_q_count > i) 
#line 1872 
                             goto ldv_45839; else 
#line 1875 
                                                  goto ldv_45841;
  ldv_45841: 
#line 1876 
  ;
  
#line 1874 
  i = 0U;
  
#line 1874 
  goto ldv_45846;
  ldv_45845: 
#line 1875 
  ;
  
#line 1875 
  count = 2000U;
  
#line 1876 
  goto ldv_45843;
  ldv_45842: 
#line 1877 
  ;
  
#line 1878 
  usleep_range(500UL,600UL);
  ldv_45843: 
#line 1879 
  ;
  
#line 1876 
  tmp_0 = count;
  
#line 1876 
  count -= 1U;
  
#line 1876 
  ;
  
#line 1876 
  if (tmp_0 != 0U) {
    unsigned int tmp_1;
    
#line 1876 
    tmp_1 = ioread32(pdata->xgmac_regs + (i * 128U + 4352U));
    
#line 1876 
    if ((tmp_1 & 1U) != 0U) 
#line 1878 
                            goto ldv_45842; else 
#line 1881 
                                                 goto ldv_45844;
  }
  else 
#line 1881 
       goto ldv_45844;
  ldv_45844: 
#line 1882 
  ;
  
#line 1880 
  if (count == 0U) {
    
#line 1881 
    __retres = -16;
    
#line 1881 
    goto return_label;
  }
  else ;
  
#line 1874 
  i += 1U;
  ldv_45846: 
#line 1875 
  ;
  
#line 1874 
  if (pdata->tx_q_count > i) 
#line 1876 
                             goto ldv_45845; else 
#line 1879 
                                                  goto ldv_45847;
  ldv_45847: 
#line 1880 
  ;
  
#line 1884 
  __retres = 0;
  return_label: 
#line 1884 
                return __retres;
}


#line 1887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_dma_bus(struct xgbe_prv_data *pdata)
{
  {
    
#line 1890 
    u32 reg_val = ioread32(pdata->xgmac_regs + 12292U);
    
#line 1890 
    reg_val &= 4294965247U;
    
#line 1890 
    reg_val |= 2048U;
    
#line 1890 
    iowrite32(reg_val,pdata->xgmac_regs + 12292U);
  }
  {
    
#line 1893 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 12292U);
    
#line 1893 
    reg_val_0 &= 4294967294U;
    
#line 1893 
    reg_val_0 |= 1U;
    
#line 1893 
    iowrite32(reg_val_0,pdata->xgmac_regs + 12292U);
  }
  {
    
#line 1894 
    u32 reg_val_1 = ioread32(pdata->xgmac_regs + 12292U);
    
#line 1894 
    reg_val_1 &= 4294967167U;
    
#line 1894 
    reg_val_1 |= 128U;
    
#line 1894 
    iowrite32(reg_val_1,pdata->xgmac_regs + 12292U);
  }
  
#line 1896 
  return;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_dma_cache(struct xgbe_prv_data *pdata)
{
  unsigned int arcache;
  unsigned int awcache;
  
#line 1901 
  arcache = 0U;
  
#line 1902 
  arcache &= 4294967280U;
  
#line 1902 
  arcache = (pdata->arcache & 15U) | arcache;
  
#line 1903 
  arcache &= 4294967247U;
  
#line 1903 
  arcache = ((pdata->axdomain << 4) & 48U) | arcache;
  
#line 1904 
  arcache &= 4294963455U;
  
#line 1904 
  arcache = ((pdata->arcache << 8) & 3840U) | arcache;
  
#line 1905 
  arcache &= 4294955007U;
  
#line 1905 
  arcache = ((pdata->axdomain << 12) & 12288U) | arcache;
  
#line 1906 
  arcache &= 4293984255U;
  
#line 1906 
  arcache = ((pdata->arcache << 16) & 983040U) | arcache;
  
#line 1907 
  arcache &= 4291821567U;
  
#line 1907 
  arcache = ((pdata->axdomain << 20) & 3145728U) | arcache;
  
#line 1908 
  iowrite32(arcache,pdata->xgmac_regs + 12304U);
  
#line 1910 
  awcache = 0U;
  
#line 1911 
  awcache &= 4294967280U;
  
#line 1911 
  awcache = (pdata->awcache & 15U) | awcache;
  
#line 1912 
  awcache &= 4294967247U;
  
#line 1912 
  awcache = ((pdata->axdomain << 4) & 48U) | awcache;
  
#line 1913 
  awcache &= 4294963455U;
  
#line 1913 
  awcache = ((pdata->awcache << 8) & 3840U) | awcache;
  
#line 1914 
  awcache &= 4294955007U;
  
#line 1914 
  awcache = ((pdata->axdomain << 12) & 12288U) | awcache;
  
#line 1915 
  awcache &= 4293984255U;
  
#line 1915 
  awcache = ((pdata->awcache << 16) & 983040U) | awcache;
  
#line 1916 
  awcache &= 4291821567U;
  
#line 1916 
  awcache = ((pdata->axdomain << 20) & 3145728U) | awcache;
  
#line 1917 
  awcache &= 4043309055U;
  
#line 1917 
  awcache = ((pdata->awcache << 24) & 251658240U) | awcache;
  
#line 1918 
  awcache &= 3489660927U;
  
#line 1918 
  awcache = ((pdata->axdomain << 28) & 805306368U) | awcache;
  
#line 1919 
  iowrite32(awcache,pdata->xgmac_regs + 12312U);
  
#line 1920 
  return;
}


#line 1922  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_mtl_mode(struct xgbe_prv_data *pdata)
{
  unsigned int i;
  {
    
#line 1927 
    u32 reg_val = ioread32(pdata->xgmac_regs + 4096U);
    
#line 1927 
    reg_val &= 4294967199U;
    
#line 1927 
    reg_val = reg_val;
    
#line 1927 
    iowrite32(reg_val,pdata->xgmac_regs + 4096U);
  }
  
#line 1930 
  i = 0U;
  
#line 1930 
  goto ldv_45867;
  ldv_45866: 
#line 1931 
  ;
  {
    
#line 1931 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + (i * 128U + 4368U));
    
#line 1931 
    reg_val_0 &= 4294967292U;
    
#line 1931 
    reg_val_0 |= 2U;
    
#line 1931 
    iowrite32(reg_val_0,pdata->xgmac_regs + (i * 128U + 4368U));
  }
  {
    
#line 1933 
    u32 reg_val_1 = ioread32(pdata->xgmac_regs + (i * 128U + 4376U));
    
#line 1933 
    reg_val_1 &= 4292870144U;
    
#line 1933 
    reg_val_1 |= 1U;
    
#line 1933 
    iowrite32(reg_val_1,pdata->xgmac_regs + (i * 128U + 4376U));
  }
  
#line 1930 
  i += 1U;
  ldv_45867: 
#line 1931 
  ;
  
#line 1930 
  if (pdata->hw_feat.tc_cnt > i) 
#line 1932 
                                 goto ldv_45866; else 
#line 1935 
                                                      goto ldv_45868;
  ldv_45868: 
#line 1936 
  ;
  {
    
#line 1937 
    u32 reg_val_2 = ioread32(pdata->xgmac_regs + 4096U);
    
#line 1937 
    reg_val_2 &= 4294967291U;
    
#line 1937 
    reg_val_2 = reg_val_2;
    
#line 1937 
    iowrite32(reg_val_2,pdata->xgmac_regs + 4096U);
  }
  
#line 1939 
  return;
}


#line 1940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static unsigned int xgbe_calculate_per_queue_fifo(unsigned int fifo_size, unsigned int queue_count)
{
  unsigned int __retres;
  unsigned int tmp_0;
  
#line 1943 
  unsigned int q_fifo_size = 0U;
  
#line 1944 
  enum xgbe_mtl_fifo_size p_fifo = XGMAC_MTL_FIFO_SIZE_256;
  
#line 1947 
  switch (fifo_size) {
    case (unsigned int)0: 
#line 1948 
    ;
    
#line 1949 
    q_fifo_size = 128U;
    
#line 1950 
    goto ldv_45877;
    case (unsigned int)1: 
#line 1951 
    ;
    
#line 1952 
    q_fifo_size = 256U;
    
#line 1953 
    goto ldv_45877;
    case (unsigned int)2: 
#line 1954 
    ;
    
#line 1955 
    q_fifo_size = 512U;
    
#line 1956 
    goto ldv_45877;
    case (unsigned int)3: 
#line 1957 
    ;
    
#line 1958 
    q_fifo_size = 1024U;
    
#line 1959 
    goto ldv_45877;
    case (unsigned int)4: 
#line 1960 
    ;
    
#line 1961 
    q_fifo_size = 2048U;
    
#line 1962 
    goto ldv_45877;
    case (unsigned int)5: 
#line 1963 
    ;
    
#line 1964 
    q_fifo_size = 4096U;
    
#line 1965 
    goto ldv_45877;
    case (unsigned int)6: 
#line 1966 
    ;
    
#line 1967 
    q_fifo_size = 8192U;
    
#line 1968 
    goto ldv_45877;
    case (unsigned int)7: 
#line 1969 
    ;
    
#line 1970 
    q_fifo_size = 16384U;
    
#line 1971 
    goto ldv_45877;
    case (unsigned int)8: 
#line 1972 
    ;
    
#line 1973 
    q_fifo_size = 32768U;
    
#line 1974 
    goto ldv_45877;
    case (unsigned int)9: 
#line 1975 
    ;
    
#line 1976 
    q_fifo_size = 65536U;
    
#line 1977 
    goto ldv_45877;
    case (unsigned int)10: 
#line 1978 
    ;
    
#line 1979 
    q_fifo_size = 131072U;
    
#line 1980 
    goto ldv_45877;
    case (unsigned int)11: 
#line 1981 
    ;
    
#line 1982 
    q_fifo_size = 262144U;
    
#line 1983 
    goto ldv_45877;
  }
  ldv_45877: 
#line 1987 
  ;
  {
    unsigned int tmp;
    
#line 1987 
    unsigned int __min1 = 81920U;
    
#line 1987 
    unsigned int __min2 = q_fifo_size;
    
#line 1987 
    if (__min1 < __min2) 
#line 1987 
                         tmp = __min1; else 
#line 1987 
                                            tmp = __min2;
    
#line 1987 
    tmp_0 = tmp;
  }
  
#line 1987 
  q_fifo_size = tmp_0;
  
#line 1989 
  q_fifo_size /= queue_count;
  
#line 1992 
  if (q_fifo_size > 262143U) 
#line 1993 
                             p_fifo = XGMAC_MTL_FIFO_SIZE_256K;
  else 
    
#line 1994 
    if (q_fifo_size > 131071U) 
#line 1995 
                               p_fifo = XGMAC_MTL_FIFO_SIZE_128K;
    else 
      
#line 1996 
      if (q_fifo_size > 65535U) 
#line 1997 
                                p_fifo = XGMAC_MTL_FIFO_SIZE_64K;
      else 
        
#line 1998 
        if (q_fifo_size > 32767U) 
#line 1999 
                                  p_fifo = XGMAC_MTL_FIFO_SIZE_32K;
        else 
          
#line 2000 
          if (q_fifo_size > 16383U) 
#line 2001 
                                    p_fifo = XGMAC_MTL_FIFO_SIZE_16K;
          else 
            
#line 2002 
            if (q_fifo_size > 8191U) 
#line 2003 
                                     p_fifo = XGMAC_MTL_FIFO_SIZE_8K;
            else 
              
#line 2004 
              if (q_fifo_size > 4095U) 
#line 2005 
                                       p_fifo = XGMAC_MTL_FIFO_SIZE_4K;
              else 
                
#line 2006 
                if (q_fifo_size > 2047U) 
#line 2007 
                                         p_fifo = XGMAC_MTL_FIFO_SIZE_2K;
                else 
                  
#line 2008 
                  if (q_fifo_size > 1023U) 
#line 2009 
                                           p_fifo = XGMAC_MTL_FIFO_SIZE_1K;
                  else 
                    
#line 2010 
                    if (q_fifo_size > 511U) 
#line 2011 
                                            p_fifo = XGMAC_MTL_FIFO_SIZE_512;
                    else 
                      
#line 2012 
                      if (q_fifo_size > 255U) 
#line 2013 
                                              p_fifo = XGMAC_MTL_FIFO_SIZE_256; else ;
  
#line 2015 
  __retres = (unsigned int)p_fifo;
  
#line 2015 
  return __retres;
}


#line 2018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_tx_fifo_size(struct xgbe_prv_data *pdata)
{
  enum xgbe_mtl_fifo_size fifo_size;
  unsigned int i;
  unsigned int tmp;
  
#line 2023 
  tmp = xgbe_calculate_per_queue_fifo(pdata->hw_feat.tx_fifo_size,pdata->tx_q_count);
  
#line 2023 
  fifo_size = (enum xgbe_mtl_fifo_size)tmp;
  
#line 2026 
  i = 0U;
  
#line 2026 
  goto ldv_45899;
  ldv_45898: 
#line 2027 
  ;
  {
    
#line 2027 
    u32 reg_val = ioread32(pdata->xgmac_regs + (i * 128U + 4352U));
    
#line 2027 
    reg_val &= 4227923967U;
    
#line 2027 
    reg_val = (((unsigned int)fifo_size << 16) & 67043328U) | reg_val;
    
#line 2027 
    iowrite32(reg_val,pdata->xgmac_regs + (i * 128U + 4352U));
  }
  
#line 2026 
  i += 1U;
  ldv_45899: 
#line 2027 
  ;
  
#line 2026 
  if (pdata->tx_q_count > i) 
#line 2028 
                             goto ldv_45898; else 
#line 2031 
                                                  goto ldv_45900;
  ldv_45900: 
#line 2032 
  ;
  
#line 2029 
  if ((pdata->msg_enable & 1U) != 0U) 
#line 2029 
                                      netdev_info((struct net_device const *)pdata->netdev,"%d Tx hardware queues, %d byte fifo per queue\n",pdata->tx_q_count,((unsigned int)fifo_size + 1U) * 256U); else ;
  
#line 2030 
  return;
}


#line 2034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_rx_fifo_size(struct xgbe_prv_data *pdata)
{
  enum xgbe_mtl_fifo_size fifo_size;
  unsigned int i;
  unsigned int tmp;
  
#line 2039 
  tmp = xgbe_calculate_per_queue_fifo(pdata->hw_feat.rx_fifo_size,pdata->rx_q_count);
  
#line 2039 
  fifo_size = (enum xgbe_mtl_fifo_size)tmp;
  
#line 2042 
  i = 0U;
  
#line 2042 
  goto ldv_45908;
  ldv_45907: 
#line 2043 
  ;
  {
    
#line 2043 
    u32 reg_val = ioread32(pdata->xgmac_regs + (i * 128U + 4416U));
    
#line 2043 
    reg_val &= 4261478399U;
    
#line 2043 
    reg_val = (((unsigned int)fifo_size << 16) & 33488896U) | reg_val;
    
#line 2043 
    iowrite32(reg_val,pdata->xgmac_regs + (i * 128U + 4416U));
  }
  
#line 2042 
  i += 1U;
  ldv_45908: 
#line 2043 
  ;
  
#line 2042 
  if (pdata->rx_q_count > i) 
#line 2044 
                             goto ldv_45907; else 
#line 2047 
                                                  goto ldv_45909;
  ldv_45909: 
#line 2048 
  ;
  
#line 2045 
  if ((pdata->msg_enable & 1U) != 0U) 
#line 2045 
                                      netdev_info((struct net_device const *)pdata->netdev,"%d Rx hardware queues, %d byte fifo per queue\n",pdata->rx_q_count,((unsigned int)fifo_size + 1U) * 256U); else ;
  
#line 2046 
  return;
}


#line 2050  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_queue_mapping(struct xgbe_prv_data *pdata)
{
  unsigned int qptc;
  unsigned int qptc_extra;
  unsigned int queue;
  unsigned int prio_queues;
  unsigned int ppq;
  unsigned int ppq_extra;
  unsigned int prio;
  unsigned int mask;
  unsigned int i;
  unsigned int j;
  unsigned int reg;
  unsigned int reg_val;
  unsigned int tmp_0;
  unsigned int tmp_4;
  unsigned int tmp_5;
  unsigned int tmp_7;
  unsigned int tmp_8;
  
#line 2061 
  qptc = pdata->tx_q_count / pdata->hw_feat.tc_cnt;
  
#line 2062 
  qptc_extra = pdata->tx_q_count % pdata->hw_feat.tc_cnt;
  
#line 2064 
  i = 0U;
  
#line 2064 
  queue = 0U;
  
#line 2064 
  goto ldv_45934;
  ldv_45933: 
#line 2065 
  ;
  
#line 2065 
  j = 0U;
  
#line 2065 
  goto ldv_45929;
  ldv_45928: 
#line 2066 
  ;
  
#line 2066 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 2066 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_config_queue_mapping", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "TXq%u mapped to TC%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2067U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2066 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2066 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"TXq%u mapped to TC%u\n",queue,i); else ;
  }
  else ;
  {
    
#line 2068 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + (queue * 128U + 4352U));
    
#line 2068 
    reg_val_0 &= 4294965503U;
    
#line 2068 
    reg_val_0 = ((i << 8) & 1792U) | reg_val_0;
    
#line 2068 
    iowrite32(reg_val_0,pdata->xgmac_regs + (queue * 128U + 4352U));
  }
  
#line 2070 
  tmp_0 = queue;
  
#line 2070 
  queue += 1U;
  
#line 2070 
  pdata->q2tc_map[tmp_0] = i;
  
#line 2065 
  j += 1U;
  ldv_45929: 
#line 2066 
  ;
  
#line 2065 
  if (j < qptc) 
#line 2067 
                goto ldv_45928; else 
#line 2070 
                                     goto ldv_45930;
  ldv_45930: 
#line 2071 
  ;
  
#line 2073 
  if (i < qptc_extra) {
    unsigned int tmp_2;
    
#line 2074 
    if ((pdata->msg_enable & 1U) != 0U) {
      
#line 2074 
      struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_config_queue_mapping", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "TXq%u mapped to TC%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2075U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 2074 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 2074 
                                                            __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)pdata->netdev,"TXq%u mapped to TC%u\n",queue,i); else ;
    }
    else ;
    {
      
#line 2076 
      u32 reg_val_1 = ioread32(pdata->xgmac_regs + (queue * 128U + 4352U));
      
#line 2076 
      reg_val_1 &= 4294965503U;
      
#line 2076 
      reg_val_1 = ((i << 8) & 1792U) | reg_val_1;
      
#line 2076 
      iowrite32(reg_val_1,pdata->xgmac_regs + (queue * 128U + 4352U));
    }
    
#line 2078 
    tmp_2 = queue;
    
#line 2078 
    queue += 1U;
    
#line 2078 
    pdata->q2tc_map[tmp_2] = i;
  }
  else ;
  
#line 2064 
  i += 1U;
  ldv_45934: 
#line 2065 
  ;
  
#line 2064 
  if (pdata->hw_feat.tc_cnt > i) 
#line 2066 
                                 goto ldv_45933; else 
#line 2069 
                                                      goto ldv_45935;
  ldv_45935: 
#line 2070 
  ;
  {
    unsigned int tmp_3;
    
#line 2083 
    unsigned int __min1 = 8U;
    
#line 2083 
    unsigned int __min2 = pdata->rx_q_count;
    
#line 2083 
    if (__min1 < __min2) 
#line 2083 
                         tmp_3 = __min1; else 
#line 2083 
                                              tmp_3 = __min2;
    
#line 2083 
    tmp_4 = tmp_3;
  }
  
#line 2083 
  prio_queues = tmp_4;
  
#line 2085 
  ppq = 8U / prio_queues;
  
#line 2086 
  ppq_extra = 8U % prio_queues;
  
#line 2088 
  reg = 168U;
  
#line 2089 
  reg_val = 0U;
  
#line 2090 
  i = 0U;
  
#line 2090 
  prio = 0U;
  
#line 2090 
  goto ldv_45944;
  ldv_45945: 
#line 2091 
  ;
  
#line 2091 
  mask = 0U;
  
#line 2092 
  j = 0U;
  
#line 2092 
  goto ldv_45941;
  ldv_45940: 
#line 2093 
  ;
  
#line 2093 
  if ((pdata->msg_enable & 1U) != 0U) {
    
#line 2093 
    struct _ddebug descriptor_1 = {.modname = "amd_xgbe", .function = "xgbe_config_queue_mapping", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "PRIO%u mapped to RXq%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2094U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2093 
    if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 2093 
                                                          __dynamic_netdev_dbg(& descriptor_1,(struct net_device const *)pdata->netdev,"PRIO%u mapped to RXq%u\n",prio,i); else ;
  }
  else ;
  
#line 2095 
  mask = (unsigned int)(1 << prio) | mask;
  
#line 2096 
  tmp_5 = prio;
  
#line 2096 
  prio += 1U;
  
#line 2096 
  pdata->prio2q_map[tmp_5] = i;
  
#line 2092 
  j += 1U;
  ldv_45941: 
#line 2093 
  ;
  
#line 2092 
  if (j < ppq) 
#line 2094 
               goto ldv_45940; else 
#line 2097 
                                    goto ldv_45942;
  ldv_45942: 
#line 2098 
  ;
  
#line 2099 
  if (i < ppq_extra) {
    unsigned int tmp_6;
    
#line 2100 
    if ((pdata->msg_enable & 1U) != 0U) {
      
#line 2100 
      struct _ddebug descriptor_2 = {.modname = "amd_xgbe", .function = "xgbe_config_queue_mapping", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c", .format = "PRIO%u mapped to RXq%u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2101U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 2100 
      if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 2100 
                                                            __dynamic_netdev_dbg(& descriptor_2,(struct net_device const *)pdata->netdev,"PRIO%u mapped to RXq%u\n",prio,i); else ;
    }
    else ;
    
#line 2102 
    mask = (unsigned int)(1 << prio) | mask;
    
#line 2103 
    tmp_6 = prio;
    
#line 2103 
    prio += 1U;
    
#line 2103 
    pdata->prio2q_map[tmp_6] = i;
  }
  else ;
  
#line 2106 
  tmp_7 = i;
  
#line 2106 
  i += 1U;
  
#line 2106 
  reg_val = (mask << ((tmp_7 << 3) & 24U)) | reg_val;
  
#line 2108 
  if ((i & 3U) != 0U && i != prio_queues) 
#line 2109 
                                          goto ldv_45944; else ;
  
#line 2111 
  iowrite32(reg_val,pdata->xgmac_regs + reg);
  
#line 2112 
  reg += 4U;
  
#line 2113 
  reg_val = 0U;
  ldv_45944: 
#line 2114 
  ;
  
#line 2090 
  if (i < prio_queues) 
#line 2092 
                       goto ldv_45945; else 
#line 2095 
                                            goto ldv_45946;
  ldv_45946: 
#line 2096 
  ;
  
#line 2117 
  reg = 4144U;
  
#line 2118 
  reg_val = 0U;
  
#line 2119 
  i = 0U;
  
#line 2119 
  goto ldv_45947;
  ldv_45948: 
#line 2120 
  ;
  
#line 2120 
  tmp_8 = i;
  
#line 2120 
  i += 1U;
  
#line 2120 
  reg_val = (unsigned int)(128 << ((tmp_8 << 3) & 24U)) | reg_val;
  
#line 2122 
  if ((i & 3U) != 0U && pdata->rx_q_count != i) 
#line 2123 
                                                goto ldv_45947; else ;
  
#line 2125 
  iowrite32(reg_val,pdata->xgmac_regs + reg);
  
#line 2127 
  reg += 4U;
  
#line 2128 
  reg_val = 0U;
  ldv_45947: 
#line 2129 
  ;
  
#line 2119 
  if (pdata->rx_q_count > i) 
#line 2121 
                             goto ldv_45948; else 
#line 2124 
                                                  goto ldv_45949;
  ldv_45949: 
#line 2125 
  ;
  
#line 2126 
  return;
}


#line 2132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_flow_control_threshold(struct xgbe_prv_data *pdata)
{
  unsigned int i;
  
#line 2136 
  i = 0U;
  
#line 2136 
  goto ldv_45957;
  ldv_45956: 
#line 2137 
  ;
  {
    
#line 2138 
    u32 reg_val = ioread32(pdata->xgmac_regs + (i * 128U + 4432U));
    
#line 2138 
    reg_val &= 4294967169U;
    
#line 2138 
    reg_val |= 4U;
    
#line 2138 
    iowrite32(reg_val,pdata->xgmac_regs + (i * 128U + 4432U));
  }
  {
    
#line 2141 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + (i * 128U + 4432U));
    
#line 2141 
    reg_val_0 &= 4286709759U;
    
#line 2141 
    reg_val_0 |= 524288U;
    
#line 2141 
    iowrite32(reg_val_0,pdata->xgmac_regs + (i * 128U + 4432U));
  }
  
#line 2136 
  i += 1U;
  ldv_45957: 
#line 2137 
  ;
  
#line 2136 
  if (pdata->rx_q_count > i) 
#line 2138 
                             goto ldv_45956; else 
#line 2141 
                                                  goto ldv_45958;
  ldv_45958: 
#line 2142 
  ;
  
#line 2143 
  return;
}


#line 2145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_mac_address(struct xgbe_prv_data *pdata)
{
  
#line 2147 
  xgbe_set_mac_address_0(pdata,(pdata->netdev)->dev_addr);
  
#line 2150 
  if (pdata->hw_feat.hash_table_size != 0U) {
    {
      
#line 2151 
      u32 reg_val = ioread32(pdata->xgmac_regs + 8U);
      
#line 2151 
      reg_val &= 4294966271U;
      
#line 2151 
      reg_val |= 1024U;
      
#line 2151 
      iowrite32(reg_val,pdata->xgmac_regs + 8U);
    }
    {
      
#line 2152 
      u32 reg_val_0 = ioread32(pdata->xgmac_regs + 8U);
      
#line 2152 
      reg_val_0 &= 4294967293U;
      
#line 2152 
      reg_val_0 |= 2U;
      
#line 2152 
      iowrite32(reg_val_0,pdata->xgmac_regs + 8U);
    }
    {
      
#line 2153 
      u32 reg_val_1 = ioread32(pdata->xgmac_regs + 8U);
      
#line 2153 
      reg_val_1 &= 4294967291U;
      
#line 2153 
      reg_val_1 |= 4U;
      
#line 2153 
      iowrite32(reg_val_1,pdata->xgmac_regs + 8U);
    }
  }
  else ;
  
#line 2156 
  return;
}


#line 2157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_jumbo_enable(struct xgbe_prv_data *pdata)
{
  unsigned int val;
  
#line 2161 
  val = (unsigned int)((pdata->netdev)->mtu > 1500U);
  {
    
#line 2163 
    u32 reg_val = ioread32(pdata->xgmac_regs + 4U);
    
#line 2163 
    reg_val &= 4294967039U;
    
#line 2163 
    reg_val = ((val << 8) & 256U) | reg_val;
    
#line 2163 
    iowrite32(reg_val,pdata->xgmac_regs + 4U);
  }
  
#line 2165 
  return;
}


#line 2166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_mac_speed(struct xgbe_prv_data *pdata)
{
  
#line 2168 
  switch (pdata->phy_speed) {
    case 10000: 
#line 2169 
    ;
    
#line 2170 
    xgbe_set_xgmii_speed(pdata);
    
#line 2171 
    goto ldv_45974;
    case 2500: 
#line 2173 
    ;
    
#line 2174 
    xgbe_set_gmii_2500_speed(pdata);
    
#line 2175 
    goto ldv_45974;
    case 1000: 
#line 2177 
    ;
    
#line 2178 
    xgbe_set_gmii_speed(pdata);
    
#line 2179 
    goto ldv_45974;
  }
  ldv_45974: 
#line 2181 
  ;
  
#line 2182 
  return;
}


#line 2183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_checksum_offload(struct xgbe_prv_data *pdata)
{
  
#line 2185 
  if (((pdata->netdev)->features & 17179869184ULL) != 0ULL) 
#line 2186 
                                                            xgbe_enable_rx_csum(pdata); else 
                                                                    
#line 2188 
                                                                    xgbe_disable_rx_csum(pdata);
  
#line 2189 
  return;
}


#line 2191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_vlan_support(struct xgbe_prv_data *pdata)
{
  {
    
#line 2194 
    u32 reg_val = ioread32(pdata->xgmac_regs + 96U);
    
#line 2194 
    reg_val &= 4294443007U;
    
#line 2194 
    reg_val = reg_val;
    
#line 2194 
    iowrite32(reg_val,pdata->xgmac_regs + 96U);
  }
  {
    
#line 2195 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 96U);
    
#line 2195 
    reg_val_0 &= 4293918719U;
    
#line 2195 
    reg_val_0 |= 1048576U;
    
#line 2195 
    iowrite32(reg_val_0,pdata->xgmac_regs + 96U);
  }
  
#line 2198 
  xgbe_update_vlan_hash_table(pdata);
  
#line 2200 
  if (((pdata->netdev)->features & 512ULL) != 0ULL) 
#line 2201 
                                                    xgbe_enable_rx_vlan_filtering(pdata); else 
                                                                    
#line 2203 
                                                                    xgbe_disable_rx_vlan_filtering(pdata);
  
#line 2205 
  if (((pdata->netdev)->features & 256ULL) != 0ULL) 
#line 2206 
                                                    xgbe_enable_rx_vlan_stripping(pdata); else 
                                                                    
#line 2208 
                                                                    xgbe_disable_rx_vlan_stripping(pdata);
  
#line 2209 
  return;
}


#line 2211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static u64 xgbe_mmc_read(struct xgbe_prv_data *pdata, unsigned int reg_lo)
{
  bool read_hi;
  u64 val;
  unsigned int tmp;
  
#line 2216 
  switch (reg_lo) {
    case (unsigned int)2068: 
#line 2218 
    ;
    case (unsigned int)2180: 
#line 2219 
    ;
    case (unsigned int)2312: 
#line 2220 
    ;
    case (unsigned int)2320: 
#line 2221 
    ;
    
#line 2222 
    read_hi = (_Bool)1;
    
#line 2223 
    goto ldv_45995;
    default: 
#line 2225 
    ;
    
#line 2226 
    read_hi = (_Bool)0;
  }
  ldv_45995: 
#line 2227 
  ;
  
#line 2229 
  tmp = ioread32(pdata->xgmac_regs + reg_lo);
  
#line 2229 
  val = (unsigned long long)tmp;
  
#line 2231 
  if ((int)read_hi != 0) {
    unsigned int tmp_0;
    
#line 2232 
    tmp_0 = ioread32(pdata->xgmac_regs + (reg_lo + 4U));
    
#line 2232 
    val = ((unsigned long long)tmp_0 << 32) | val;
  }
  else ;
  
#line 2234 
  return val;
}


#line 2237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_tx_mmc_int(struct xgbe_prv_data *pdata)
{
  
#line 2239 
  struct xgbe_mmc_stats *stats = & pdata->mmc_stats;
  
#line 2240 
  unsigned int mmc_isr = ioread32(pdata->xgmac_regs + 2056U);
  
#line 2242 
  if ((mmc_isr & 1U) != 0U) {
    u64 tmp_0;
    
#line 2243 
    tmp_0 = xgbe_mmc_read(pdata,2068U);
    
#line 2244 
    stats->txoctetcount_gb += tmp_0;
  }
  else ;
  
#line 2246 
  if ((mmc_isr & 2U) != 0U) {
    u64 tmp_1;
    
#line 2247 
    tmp_1 = xgbe_mmc_read(pdata,2076U);
    
#line 2248 
    stats->txframecount_gb += tmp_1;
  }
  else ;
  
#line 2250 
  if ((mmc_isr & 4U) != 0U) {
    u64 tmp_2;
    
#line 2251 
    tmp_2 = xgbe_mmc_read(pdata,2084U);
    
#line 2252 
    stats->txbroadcastframes_g += tmp_2;
  }
  else ;
  
#line 2254 
  if ((mmc_isr & 8U) != 0U) {
    u64 tmp_3;
    
#line 2255 
    tmp_3 = xgbe_mmc_read(pdata,2092U);
    
#line 2256 
    stats->txmulticastframes_g += tmp_3;
  }
  else ;
  
#line 2258 
  if ((mmc_isr & 16U) != 0U) {
    u64 tmp_4;
    
#line 2259 
    tmp_4 = xgbe_mmc_read(pdata,2100U);
    
#line 2260 
    stats->tx64octets_gb += tmp_4;
  }
  else ;
  
#line 2262 
  if ((mmc_isr & 32U) != 0U) {
    u64 tmp_5;
    
#line 2263 
    tmp_5 = xgbe_mmc_read(pdata,2108U);
    
#line 2264 
    stats->tx65to127octets_gb += tmp_5;
  }
  else ;
  
#line 2266 
  if ((mmc_isr & 64U) != 0U) {
    u64 tmp_6;
    
#line 2267 
    tmp_6 = xgbe_mmc_read(pdata,2116U);
    
#line 2268 
    stats->tx128to255octets_gb += tmp_6;
  }
  else ;
  
#line 2270 
  if ((mmc_isr & 128U) != 0U) {
    u64 tmp_7;
    
#line 2271 
    tmp_7 = xgbe_mmc_read(pdata,2124U);
    
#line 2272 
    stats->tx256to511octets_gb += tmp_7;
  }
  else ;
  
#line 2274 
  if ((mmc_isr & 256U) != 0U) {
    u64 tmp_8;
    
#line 2275 
    tmp_8 = xgbe_mmc_read(pdata,2132U);
    
#line 2276 
    stats->tx512to1023octets_gb += tmp_8;
  }
  else ;
  
#line 2278 
  if ((mmc_isr & 512U) != 0U) {
    u64 tmp_9;
    
#line 2279 
    tmp_9 = xgbe_mmc_read(pdata,2140U);
    
#line 2280 
    stats->tx1024tomaxoctets_gb += tmp_9;
  }
  else ;
  
#line 2282 
  if ((mmc_isr & 1024U) != 0U) {
    u64 tmp_10;
    
#line 2283 
    tmp_10 = xgbe_mmc_read(pdata,2148U);
    
#line 2284 
    stats->txunicastframes_gb += tmp_10;
  }
  else ;
  
#line 2286 
  if ((mmc_isr & 2048U) != 0U) {
    u64 tmp_11;
    
#line 2287 
    tmp_11 = xgbe_mmc_read(pdata,2156U);
    
#line 2288 
    stats->txmulticastframes_gb += tmp_11;
  }
  else ;
  
#line 2290 
  if ((mmc_isr & 4096U) != 0U) {
    u64 tmp_12;
    
#line 2291 
    tmp_12 = xgbe_mmc_read(pdata,2164U);
    
#line 2292 
    stats->txbroadcastframes_g += tmp_12;
  }
  else ;
  
#line 2294 
  if ((mmc_isr & 8192U) != 0U) {
    u64 tmp_13;
    
#line 2295 
    tmp_13 = xgbe_mmc_read(pdata,2172U);
    
#line 2296 
    stats->txunderflowerror += tmp_13;
  }
  else ;
  
#line 2298 
  if ((mmc_isr & 16384U) != 0U) {
    u64 tmp_14;
    
#line 2299 
    tmp_14 = xgbe_mmc_read(pdata,2180U);
    
#line 2300 
    stats->txoctetcount_g += tmp_14;
  }
  else ;
  
#line 2302 
  if ((mmc_isr & 32768U) != 0U) {
    u64 tmp_15;
    
#line 2303 
    tmp_15 = xgbe_mmc_read(pdata,2188U);
    
#line 2304 
    stats->txframecount_g += tmp_15;
  }
  else ;
  
#line 2306 
  if ((mmc_isr & 65536U) != 0U) {
    u64 tmp_16;
    
#line 2307 
    tmp_16 = xgbe_mmc_read(pdata,2196U);
    
#line 2308 
    stats->txpauseframes += tmp_16;
  }
  else ;
  
#line 2310 
  if ((mmc_isr & 131072U) != 0U) {
    u64 tmp_17;
    
#line 2311 
    tmp_17 = xgbe_mmc_read(pdata,2204U);
    
#line 2312 
    stats->txvlanframes_g += tmp_17;
  }
  else ;
  
#line 2313 
  return;
}


#line 2315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_rx_mmc_int(struct xgbe_prv_data *pdata)
{
  
#line 2317 
  struct xgbe_mmc_stats *stats = & pdata->mmc_stats;
  
#line 2318 
  unsigned int mmc_isr = ioread32(pdata->xgmac_regs + 2052U);
  
#line 2320 
  if ((mmc_isr & 1U) != 0U) {
    u64 tmp_0;
    
#line 2321 
    tmp_0 = xgbe_mmc_read(pdata,2304U);
    
#line 2322 
    stats->rxframecount_gb += tmp_0;
  }
  else ;
  
#line 2324 
  if ((mmc_isr & 2U) != 0U) {
    u64 tmp_1;
    
#line 2325 
    tmp_1 = xgbe_mmc_read(pdata,2312U);
    
#line 2326 
    stats->rxoctetcount_gb += tmp_1;
  }
  else ;
  
#line 2328 
  if ((mmc_isr & 4U) != 0U) {
    u64 tmp_2;
    
#line 2329 
    tmp_2 = xgbe_mmc_read(pdata,2320U);
    
#line 2330 
    stats->rxoctetcount_g += tmp_2;
  }
  else ;
  
#line 2332 
  if ((mmc_isr & 8U) != 0U) {
    u64 tmp_3;
    
#line 2333 
    tmp_3 = xgbe_mmc_read(pdata,2328U);
    
#line 2334 
    stats->rxbroadcastframes_g += tmp_3;
  }
  else ;
  
#line 2336 
  if ((mmc_isr & 16U) != 0U) {
    u64 tmp_4;
    
#line 2337 
    tmp_4 = xgbe_mmc_read(pdata,2336U);
    
#line 2338 
    stats->rxmulticastframes_g += tmp_4;
  }
  else ;
  
#line 2340 
  if ((mmc_isr & 32U) != 0U) {
    u64 tmp_5;
    
#line 2341 
    tmp_5 = xgbe_mmc_read(pdata,2344U);
    
#line 2342 
    stats->rxcrcerror += tmp_5;
  }
  else ;
  
#line 2344 
  if ((mmc_isr & 64U) != 0U) {
    u64 tmp_6;
    
#line 2345 
    tmp_6 = xgbe_mmc_read(pdata,2352U);
    
#line 2346 
    stats->rxrunterror += tmp_6;
  }
  else ;
  
#line 2348 
  if ((mmc_isr & 128U) != 0U) {
    u64 tmp_7;
    
#line 2349 
    tmp_7 = xgbe_mmc_read(pdata,2356U);
    
#line 2350 
    stats->rxjabbererror += tmp_7;
  }
  else ;
  
#line 2352 
  if ((mmc_isr & 256U) != 0U) {
    u64 tmp_8;
    
#line 2353 
    tmp_8 = xgbe_mmc_read(pdata,2360U);
    
#line 2354 
    stats->rxundersize_g += tmp_8;
  }
  else ;
  
#line 2356 
  if ((mmc_isr & 512U) != 0U) {
    u64 tmp_9;
    
#line 2357 
    tmp_9 = xgbe_mmc_read(pdata,2364U);
    
#line 2358 
    stats->rxoversize_g += tmp_9;
  }
  else ;
  
#line 2360 
  if ((mmc_isr & 1024U) != 0U) {
    u64 tmp_10;
    
#line 2361 
    tmp_10 = xgbe_mmc_read(pdata,2368U);
    
#line 2362 
    stats->rx64octets_gb += tmp_10;
  }
  else ;
  
#line 2364 
  if ((mmc_isr & 2048U) != 0U) {
    u64 tmp_11;
    
#line 2365 
    tmp_11 = xgbe_mmc_read(pdata,2376U);
    
#line 2366 
    stats->rx65to127octets_gb += tmp_11;
  }
  else ;
  
#line 2368 
  if ((mmc_isr & 4096U) != 0U) {
    u64 tmp_12;
    
#line 2369 
    tmp_12 = xgbe_mmc_read(pdata,2384U);
    
#line 2370 
    stats->rx128to255octets_gb += tmp_12;
  }
  else ;
  
#line 2372 
  if ((mmc_isr & 8192U) != 0U) {
    u64 tmp_13;
    
#line 2373 
    tmp_13 = xgbe_mmc_read(pdata,2392U);
    
#line 2374 
    stats->rx256to511octets_gb += tmp_13;
  }
  else ;
  
#line 2376 
  if ((mmc_isr & 16384U) != 0U) {
    u64 tmp_14;
    
#line 2377 
    tmp_14 = xgbe_mmc_read(pdata,2400U);
    
#line 2378 
    stats->rx512to1023octets_gb += tmp_14;
  }
  else ;
  
#line 2380 
  if ((mmc_isr & 32768U) != 0U) {
    u64 tmp_15;
    
#line 2381 
    tmp_15 = xgbe_mmc_read(pdata,2408U);
    
#line 2382 
    stats->rx1024tomaxoctets_gb += tmp_15;
  }
  else ;
  
#line 2384 
  if ((mmc_isr & 65536U) != 0U) {
    u64 tmp_16;
    
#line 2385 
    tmp_16 = xgbe_mmc_read(pdata,2416U);
    
#line 2386 
    stats->rxunicastframes_g += tmp_16;
  }
  else ;
  
#line 2388 
  if ((mmc_isr & 131072U) != 0U) {
    u64 tmp_17;
    
#line 2389 
    tmp_17 = xgbe_mmc_read(pdata,2424U);
    
#line 2390 
    stats->rxlengtherror += tmp_17;
  }
  else ;
  
#line 2392 
  if ((mmc_isr & 262144U) != 0U) {
    u64 tmp_18;
    
#line 2393 
    tmp_18 = xgbe_mmc_read(pdata,2432U);
    
#line 2394 
    stats->rxoutofrangetype += tmp_18;
  }
  else ;
  
#line 2396 
  if ((mmc_isr & 524288U) != 0U) {
    u64 tmp_19;
    
#line 2397 
    tmp_19 = xgbe_mmc_read(pdata,2440U);
    
#line 2398 
    stats->rxpauseframes += tmp_19;
  }
  else ;
  
#line 2400 
  if ((mmc_isr & 1048576U) != 0U) {
    u64 tmp_20;
    
#line 2401 
    tmp_20 = xgbe_mmc_read(pdata,2448U);
    
#line 2402 
    stats->rxfifooverflow += tmp_20;
  }
  else ;
  
#line 2404 
  if ((mmc_isr & 2097152U) != 0U) {
    u64 tmp_21;
    
#line 2405 
    tmp_21 = xgbe_mmc_read(pdata,2456U);
    
#line 2406 
    stats->rxvlanframes_gb += tmp_21;
  }
  else ;
  
#line 2408 
  if ((mmc_isr & 4194304U) != 0U) {
    u64 tmp_22;
    
#line 2409 
    tmp_22 = xgbe_mmc_read(pdata,2464U);
    
#line 2410 
    stats->rxwatchdogerror += tmp_22;
  }
  else ;
  
#line 2411 
  return;
}


#line 2413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_read_mmc_stats(struct xgbe_prv_data *pdata)
{
  u64 tmp_0;
  u64 tmp_1;
  u64 tmp_2;
  u64 tmp_3;
  u64 tmp_4;
  u64 tmp_5;
  u64 tmp_6;
  u64 tmp_7;
  u64 tmp_8;
  u64 tmp_9;
  u64 tmp_10;
  u64 tmp_11;
  u64 tmp_12;
  u64 tmp_13;
  u64 tmp_14;
  u64 tmp_15;
  u64 tmp_16;
  u64 tmp_17;
  u64 tmp_18;
  u64 tmp_19;
  u64 tmp_20;
  u64 tmp_21;
  u64 tmp_22;
  u64 tmp_23;
  u64 tmp_24;
  u64 tmp_25;
  u64 tmp_26;
  u64 tmp_27;
  u64 tmp_28;
  u64 tmp_29;
  u64 tmp_30;
  u64 tmp_31;
  u64 tmp_32;
  u64 tmp_33;
  u64 tmp_34;
  u64 tmp_35;
  u64 tmp_36;
  u64 tmp_37;
  u64 tmp_38;
  u64 tmp_39;
  u64 tmp_40;
  
#line 2415 
  struct xgbe_mmc_stats *stats = & pdata->mmc_stats;
  {
    
#line 2418 
    u32 reg_val = ioread32(pdata->xgmac_regs + 2048U);
    
#line 2418 
    reg_val &= 4294967287U;
    
#line 2418 
    reg_val |= 8U;
    
#line 2418 
    iowrite32(reg_val,pdata->xgmac_regs + 2048U);
  }
  
#line 2420 
  tmp_0 = xgbe_mmc_read(pdata,2068U);
  
#line 2421 
  stats->txoctetcount_gb += tmp_0;
  
#line 2423 
  tmp_1 = xgbe_mmc_read(pdata,2076U);
  
#line 2424 
  stats->txframecount_gb += tmp_1;
  
#line 2426 
  tmp_2 = xgbe_mmc_read(pdata,2084U);
  
#line 2427 
  stats->txbroadcastframes_g += tmp_2;
  
#line 2429 
  tmp_3 = xgbe_mmc_read(pdata,2092U);
  
#line 2430 
  stats->txmulticastframes_g += tmp_3;
  
#line 2432 
  tmp_4 = xgbe_mmc_read(pdata,2100U);
  
#line 2433 
  stats->tx64octets_gb += tmp_4;
  
#line 2435 
  tmp_5 = xgbe_mmc_read(pdata,2108U);
  
#line 2436 
  stats->tx65to127octets_gb += tmp_5;
  
#line 2438 
  tmp_6 = xgbe_mmc_read(pdata,2116U);
  
#line 2439 
  stats->tx128to255octets_gb += tmp_6;
  
#line 2441 
  tmp_7 = xgbe_mmc_read(pdata,2124U);
  
#line 2442 
  stats->tx256to511octets_gb += tmp_7;
  
#line 2444 
  tmp_8 = xgbe_mmc_read(pdata,2132U);
  
#line 2445 
  stats->tx512to1023octets_gb += tmp_8;
  
#line 2447 
  tmp_9 = xgbe_mmc_read(pdata,2140U);
  
#line 2448 
  stats->tx1024tomaxoctets_gb += tmp_9;
  
#line 2450 
  tmp_10 = xgbe_mmc_read(pdata,2148U);
  
#line 2451 
  stats->txunicastframes_gb += tmp_10;
  
#line 2453 
  tmp_11 = xgbe_mmc_read(pdata,2156U);
  
#line 2454 
  stats->txmulticastframes_gb += tmp_11;
  
#line 2456 
  tmp_12 = xgbe_mmc_read(pdata,2164U);
  
#line 2457 
  stats->txbroadcastframes_g += tmp_12;
  
#line 2459 
  tmp_13 = xgbe_mmc_read(pdata,2172U);
  
#line 2460 
  stats->txunderflowerror += tmp_13;
  
#line 2462 
  tmp_14 = xgbe_mmc_read(pdata,2180U);
  
#line 2463 
  stats->txoctetcount_g += tmp_14;
  
#line 2465 
  tmp_15 = xgbe_mmc_read(pdata,2188U);
  
#line 2466 
  stats->txframecount_g += tmp_15;
  
#line 2468 
  tmp_16 = xgbe_mmc_read(pdata,2196U);
  
#line 2469 
  stats->txpauseframes += tmp_16;
  
#line 2471 
  tmp_17 = xgbe_mmc_read(pdata,2204U);
  
#line 2472 
  stats->txvlanframes_g += tmp_17;
  
#line 2474 
  tmp_18 = xgbe_mmc_read(pdata,2304U);
  
#line 2475 
  stats->rxframecount_gb += tmp_18;
  
#line 2477 
  tmp_19 = xgbe_mmc_read(pdata,2312U);
  
#line 2478 
  stats->rxoctetcount_gb += tmp_19;
  
#line 2480 
  tmp_20 = xgbe_mmc_read(pdata,2320U);
  
#line 2481 
  stats->rxoctetcount_g += tmp_20;
  
#line 2483 
  tmp_21 = xgbe_mmc_read(pdata,2328U);
  
#line 2484 
  stats->rxbroadcastframes_g += tmp_21;
  
#line 2486 
  tmp_22 = xgbe_mmc_read(pdata,2336U);
  
#line 2487 
  stats->rxmulticastframes_g += tmp_22;
  
#line 2489 
  tmp_23 = xgbe_mmc_read(pdata,2344U);
  
#line 2490 
  stats->rxcrcerror += tmp_23;
  
#line 2492 
  tmp_24 = xgbe_mmc_read(pdata,2352U);
  
#line 2493 
  stats->rxrunterror += tmp_24;
  
#line 2495 
  tmp_25 = xgbe_mmc_read(pdata,2356U);
  
#line 2496 
  stats->rxjabbererror += tmp_25;
  
#line 2498 
  tmp_26 = xgbe_mmc_read(pdata,2360U);
  
#line 2499 
  stats->rxundersize_g += tmp_26;
  
#line 2501 
  tmp_27 = xgbe_mmc_read(pdata,2364U);
  
#line 2502 
  stats->rxoversize_g += tmp_27;
  
#line 2504 
  tmp_28 = xgbe_mmc_read(pdata,2368U);
  
#line 2505 
  stats->rx64octets_gb += tmp_28;
  
#line 2507 
  tmp_29 = xgbe_mmc_read(pdata,2376U);
  
#line 2508 
  stats->rx65to127octets_gb += tmp_29;
  
#line 2510 
  tmp_30 = xgbe_mmc_read(pdata,2384U);
  
#line 2511 
  stats->rx128to255octets_gb += tmp_30;
  
#line 2513 
  tmp_31 = xgbe_mmc_read(pdata,2392U);
  
#line 2514 
  stats->rx256to511octets_gb += tmp_31;
  
#line 2516 
  tmp_32 = xgbe_mmc_read(pdata,2400U);
  
#line 2517 
  stats->rx512to1023octets_gb += tmp_32;
  
#line 2519 
  tmp_33 = xgbe_mmc_read(pdata,2408U);
  
#line 2520 
  stats->rx1024tomaxoctets_gb += tmp_33;
  
#line 2522 
  tmp_34 = xgbe_mmc_read(pdata,2416U);
  
#line 2523 
  stats->rxunicastframes_g += tmp_34;
  
#line 2525 
  tmp_35 = xgbe_mmc_read(pdata,2424U);
  
#line 2526 
  stats->rxlengtherror += tmp_35;
  
#line 2528 
  tmp_36 = xgbe_mmc_read(pdata,2432U);
  
#line 2529 
  stats->rxoutofrangetype += tmp_36;
  
#line 2531 
  tmp_37 = xgbe_mmc_read(pdata,2440U);
  
#line 2532 
  stats->rxpauseframes += tmp_37;
  
#line 2534 
  tmp_38 = xgbe_mmc_read(pdata,2448U);
  
#line 2535 
  stats->rxfifooverflow += tmp_38;
  
#line 2537 
  tmp_39 = xgbe_mmc_read(pdata,2456U);
  
#line 2538 
  stats->rxvlanframes_gb += tmp_39;
  
#line 2540 
  tmp_40 = xgbe_mmc_read(pdata,2464U);
  
#line 2541 
  stats->rxwatchdogerror += tmp_40;
  {
    
#line 2544 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 2048U);
    
#line 2544 
    reg_val_0 &= 4294967287U;
    
#line 2544 
    reg_val_0 = reg_val_0;
    
#line 2544 
    iowrite32(reg_val_0,pdata->xgmac_regs + 2048U);
  }
  
#line 2546 
  return;
}


#line 2547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_config_mmc(struct xgbe_prv_data *pdata)
{
  {
    
#line 2550 
    u32 reg_val = ioread32(pdata->xgmac_regs + 2048U);
    
#line 2550 
    reg_val &= 4294967291U;
    
#line 2550 
    reg_val |= 4U;
    
#line 2550 
    iowrite32(reg_val,pdata->xgmac_regs + 2048U);
  }
  {
    
#line 2553 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 2048U);
    
#line 2553 
    reg_val_0 &= 4294967294U;
    
#line 2553 
    reg_val_0 |= 1U;
    
#line 2553 
    iowrite32(reg_val_0,pdata->xgmac_regs + 2048U);
  }
  
#line 2555 
  return;
}


#line 2556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_prepare_tx_stop(struct xgbe_prv_data *pdata, struct xgbe_channel *channel)
{
  unsigned int tx_dsr;
  unsigned int tx_pos;
  unsigned int tx_qidx;
  unsigned int tx_status;
  unsigned long tx_timeout;
  int tmp;
  int tmp_1;
  
#line 2564 
  if (channel->queue_index <= 2U) {
    
#line 2565 
    tx_dsr = 12320U;
    
#line 2566 
    tx_pos = channel->queue_index * 8U + 12U;
  }
  else {
    
#line 2569 
    tx_qidx = channel->queue_index + 4294967293U;
    
#line 2571 
    tx_dsr = (tx_qidx & 4294967292U) + 12324U;
    
#line 2572 
    tx_pos = (tx_qidx & 3U) * 8U + 4U;
  }
  
#line 2580 
  tx_timeout = jiffies + 1250UL;
  
#line 2581 
  goto ldv_46035;
  ldv_46034: 
#line 2582 
  ;
  
#line 2582 
  tx_status = ioread32(pdata->xgmac_regs + tx_dsr);
  
#line 2583 
  tx_status = (tx_status >> tx_pos) & 15U;
  
#line 2584 
  if (tx_status == 0U || tx_status == 6U) 
#line 2586 
                                          goto ldv_46033; else ;
  
#line 2588 
  usleep_range(500UL,1000UL);
  ldv_46035: 
#line 2589 
  ;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
#line 2581 
    tmp = 1;
  }
  
#line 2581 
  if (tmp != 0) {
    int tmp_0;
    {
      unsigned long __dummy_0;
      unsigned long volatile __dummy2_0;
      
#line 2581 
      tmp_0 = 1;
    }
    
#line 2581 
    if (tmp_0 != 0) {
      
#line 2581 
      if ((long)(jiffies - tx_timeout) < 0L) 
#line 2583 
                                             goto ldv_46034; else 
#line 2586 
                                                                  goto ldv_46033;
    }
    else 
#line 2586 
         goto ldv_46033;
  }
  else 
#line 2586 
       goto ldv_46033;
  ldv_46033: 
#line 2587 
  ;
  {
    unsigned long __dummy_1;
    unsigned long __dummy2_1;
    
#line 2591 
    tmp_1 = 1;
  }
  
#line 2591 
  if (tmp_1 == 0) 
#line 2592 
                  netdev_info((struct net_device const *)pdata->netdev,"timed out waiting for Tx DMA channel %u to stop\n",channel->queue_index);
  else {
    int tmp_2;
    {
      unsigned long __dummy_2;
      unsigned long volatile __dummy2_2;
      
#line 2591 
      tmp_2 = 1;
    }
    
#line 2591 
    if (tmp_2 == 0) 
#line 2592 
                    netdev_info((struct net_device const *)pdata->netdev,"timed out waiting for Tx DMA channel %u to stop\n",channel->queue_index);
    else 
      
#line 2591 
      if ((long)(jiffies - tx_timeout) >= 0L) 
#line 2592 
                                              netdev_info((struct net_device const *)pdata->netdev,"timed out waiting for Tx DMA channel %u to stop\n",channel->queue_index); else ;
  }
  
#line 2595 
  return;
}


#line 2597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_enable_tx(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 2603 
  channel = pdata->channel;
  
#line 2604 
  i = 0U;
  
#line 2604 
  goto ldv_46050;
  ldv_46049: 
#line 2605 
  ;
  
#line 2605 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 2606 
                                                 goto ldv_46047; else ;
  {
    
#line 2608 
    u32 reg_val = ioread32(channel->dma_regs + 4U);
    
#line 2608 
    reg_val &= 4294967294U;
    
#line 2608 
    reg_val |= 1U;
    
#line 2608 
    iowrite32(reg_val,channel->dma_regs + 4U);
  }
  
#line 2604 
  i += 1U;
  
#line 2604 
  channel += 1;
  ldv_46050: 
#line 2605 
  ;
  
#line 2604 
  if (pdata->channel_count > i) 
#line 2606 
                                goto ldv_46049; else 
#line 2609 
                                                     goto ldv_46047;
  ldv_46047: 
#line 2610 
  ;
  
#line 2612 
  i = 0U;
  
#line 2612 
  goto ldv_46053;
  ldv_46052: 
#line 2613 
  ;
  {
    
#line 2613 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + (i * 128U + 4352U));
    
#line 2613 
    reg_val_0 &= 4294967283U;
    
#line 2613 
    reg_val_0 |= 8U;
    
#line 2613 
    iowrite32(reg_val_0,pdata->xgmac_regs + (i * 128U + 4352U));
  }
  
#line 2612 
  i += 1U;
  ldv_46053: 
#line 2613 
  ;
  
#line 2612 
  if (pdata->tx_q_count > i) 
#line 2614 
                             goto ldv_46052; else 
#line 2617 
                                                  goto ldv_46054;
  ldv_46054: 
#line 2618 
  ;
  {
    
#line 2617 
    u32 reg_val_1 = ioread32(pdata->xgmac_regs);
    
#line 2617 
    reg_val_1 &= 4294967294U;
    
#line 2617 
    reg_val_1 |= 1U;
    
#line 2617 
    iowrite32(reg_val_1,pdata->xgmac_regs);
  }
  
#line 2619 
  return;
}


#line 2620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_disable_tx(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 2626 
  channel = pdata->channel;
  
#line 2627 
  i = 0U;
  
#line 2627 
  goto ldv_46063;
  ldv_46062: 
#line 2628 
  ;
  
#line 2628 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 2629 
                                                 goto ldv_46061; else ;
  
#line 2631 
  xgbe_prepare_tx_stop(pdata,channel);
  
#line 2627 
  i += 1U;
  
#line 2627 
  channel += 1;
  ldv_46063: 
#line 2628 
  ;
  
#line 2627 
  if (pdata->channel_count > i) 
#line 2629 
                                goto ldv_46062; else 
#line 2632 
                                                     goto ldv_46061;
  ldv_46061: 
#line 2633 
  ;
  {
    
#line 2635 
    u32 reg_val = ioread32(pdata->xgmac_regs);
    
#line 2635 
    reg_val &= 4294967294U;
    
#line 2635 
    reg_val = reg_val;
    
#line 2635 
    iowrite32(reg_val,pdata->xgmac_regs);
  }
  
#line 2638 
  i = 0U;
  
#line 2638 
  goto ldv_46067;
  ldv_46066: 
#line 2639 
  ;
  {
    
#line 2639 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + (i * 128U + 4352U));
    
#line 2639 
    reg_val_0 &= 4294967283U;
    
#line 2639 
    reg_val_0 = reg_val_0;
    
#line 2639 
    iowrite32(reg_val_0,pdata->xgmac_regs + (i * 128U + 4352U));
  }
  
#line 2638 
  i += 1U;
  ldv_46067: 
#line 2639 
  ;
  
#line 2638 
  if (pdata->tx_q_count > i) 
#line 2640 
                             goto ldv_46066; else 
#line 2643 
                                                  goto ldv_46068;
  ldv_46068: 
#line 2644 
  ;
  
#line 2642 
  channel = pdata->channel;
  
#line 2643 
  i = 0U;
  
#line 2643 
  goto ldv_46072;
  ldv_46071: 
#line 2644 
  ;
  
#line 2644 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 2645 
                                                 goto ldv_46069; else ;
  {
    
#line 2647 
    u32 reg_val_1 = ioread32(channel->dma_regs + 4U);
    
#line 2647 
    reg_val_1 &= 4294967294U;
    
#line 2647 
    reg_val_1 = reg_val_1;
    
#line 2647 
    iowrite32(reg_val_1,channel->dma_regs + 4U);
  }
  
#line 2643 
  i += 1U;
  
#line 2643 
  channel += 1;
  ldv_46072: 
#line 2644 
  ;
  
#line 2643 
  if (pdata->channel_count > i) 
#line 2645 
                                goto ldv_46071; else 
#line 2648 
                                                     goto ldv_46069;
  ldv_46069: 
#line 2649 
  ;
  
#line 2650 
  return;
}


#line 2651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_enable_rx(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int reg_val;
  unsigned int i;
  
#line 2657 
  channel = pdata->channel;
  
#line 2658 
  i = 0U;
  
#line 2658 
  goto ldv_46082;
  ldv_46081: 
#line 2659 
  ;
  
#line 2659 
  if (channel->rx_ring == (struct xgbe_ring *)0) 
#line 2660 
                                                 goto ldv_46079; else ;
  {
    
#line 2662 
    u32 reg_val_0 = ioread32(channel->dma_regs + 8U);
    
#line 2662 
    reg_val_0 &= 4294967294U;
    
#line 2662 
    reg_val_0 |= 1U;
    
#line 2662 
    iowrite32(reg_val_0,channel->dma_regs + 8U);
  }
  
#line 2658 
  i += 1U;
  
#line 2658 
  channel += 1;
  ldv_46082: 
#line 2659 
  ;
  
#line 2658 
  if (pdata->channel_count > i) 
#line 2660 
                                goto ldv_46081; else 
#line 2663 
                                                     goto ldv_46079;
  ldv_46079: 
#line 2664 
  ;
  
#line 2666 
  reg_val = 0U;
  
#line 2667 
  i = 0U;
  
#line 2667 
  goto ldv_46084;
  ldv_46083: 
#line 2668 
  ;
  
#line 2668 
  reg_val = (unsigned int)(2 << (i << 1)) | reg_val;
  
#line 2667 
  i += 1U;
  ldv_46084: 
#line 2668 
  ;
  
#line 2667 
  if (pdata->rx_q_count > i) 
#line 2669 
                             goto ldv_46083; else 
#line 2672 
                                                  goto ldv_46085;
  ldv_46085: 
#line 2673 
  ;
  
#line 2669 
  iowrite32(reg_val,pdata->xgmac_regs + 160U);
  {
    
#line 2672 
    u32 reg_val_1 = ioread32(pdata->xgmac_regs + 4U);
    
#line 2672 
    reg_val_1 &= 4294967287U;
    
#line 2672 
    reg_val_1 |= 8U;
    
#line 2672 
    iowrite32(reg_val_1,pdata->xgmac_regs + 4U);
  }
  {
    
#line 2673 
    u32 reg_val_2 = ioread32(pdata->xgmac_regs + 4U);
    
#line 2673 
    reg_val_2 &= 4294967291U;
    
#line 2673 
    reg_val_2 |= 4U;
    
#line 2673 
    iowrite32(reg_val_2,pdata->xgmac_regs + 4U);
  }
  {
    
#line 2674 
    u32 reg_val_3 = ioread32(pdata->xgmac_regs + 4U);
    
#line 2674 
    reg_val_3 &= 4294967293U;
    
#line 2674 
    reg_val_3 |= 2U;
    
#line 2674 
    iowrite32(reg_val_3,pdata->xgmac_regs + 4U);
  }
  {
    
#line 2675 
    u32 reg_val_4 = ioread32(pdata->xgmac_regs + 4U);
    
#line 2675 
    reg_val_4 &= 4294967294U;
    
#line 2675 
    reg_val_4 |= 1U;
    
#line 2675 
    iowrite32(reg_val_4,pdata->xgmac_regs + 4U);
  }
  
#line 2677 
  return;
}


#line 2678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_disable_rx(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  {
    
#line 2684 
    u32 reg_val = ioread32(pdata->xgmac_regs + 4U);
    
#line 2684 
    reg_val &= 4294967287U;
    
#line 2684 
    reg_val = reg_val;
    
#line 2684 
    iowrite32(reg_val,pdata->xgmac_regs + 4U);
  }
  {
    
#line 2685 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs + 4U);
    
#line 2685 
    reg_val_0 &= 4294967291U;
    
#line 2685 
    reg_val_0 = reg_val_0;
    
#line 2685 
    iowrite32(reg_val_0,pdata->xgmac_regs + 4U);
  }
  {
    
#line 2686 
    u32 reg_val_1 = ioread32(pdata->xgmac_regs + 4U);
    
#line 2686 
    reg_val_1 &= 4294967293U;
    
#line 2686 
    reg_val_1 = reg_val_1;
    
#line 2686 
    iowrite32(reg_val_1,pdata->xgmac_regs + 4U);
  }
  {
    
#line 2687 
    u32 reg_val_2 = ioread32(pdata->xgmac_regs + 4U);
    
#line 2687 
    reg_val_2 &= 4294967294U;
    
#line 2687 
    reg_val_2 = reg_val_2;
    
#line 2687 
    iowrite32(reg_val_2,pdata->xgmac_regs + 4U);
  }
  
#line 2690 
  iowrite32(0U,pdata->xgmac_regs + 160U);
  
#line 2693 
  channel = pdata->channel;
  
#line 2694 
  i = 0U;
  
#line 2694 
  goto ldv_46102;
  ldv_46101: 
#line 2695 
  ;
  
#line 2695 
  if (channel->rx_ring == (struct xgbe_ring *)0) 
#line 2696 
                                                 goto ldv_46099; else ;
  {
    
#line 2698 
    u32 reg_val_3 = ioread32(channel->dma_regs + 8U);
    
#line 2698 
    reg_val_3 &= 4294967294U;
    
#line 2698 
    reg_val_3 = reg_val_3;
    
#line 2698 
    iowrite32(reg_val_3,channel->dma_regs + 8U);
  }
  
#line 2694 
  i += 1U;
  
#line 2694 
  channel += 1;
  ldv_46102: 
#line 2695 
  ;
  
#line 2694 
  if (pdata->channel_count > i) 
#line 2696 
                                goto ldv_46101; else 
#line 2699 
                                                     goto ldv_46099;
  ldv_46099: 
#line 2700 
  ;
  
#line 2701 
  return;
}


#line 2702  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_powerup_tx(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 2708 
  channel = pdata->channel;
  
#line 2709 
  i = 0U;
  
#line 2709 
  goto ldv_46111;
  ldv_46110: 
#line 2710 
  ;
  
#line 2710 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 2711 
                                                 goto ldv_46108; else ;
  {
    
#line 2713 
    u32 reg_val = ioread32(channel->dma_regs + 4U);
    
#line 2713 
    reg_val &= 4294967294U;
    
#line 2713 
    reg_val |= 1U;
    
#line 2713 
    iowrite32(reg_val,channel->dma_regs + 4U);
  }
  
#line 2709 
  i += 1U;
  
#line 2709 
  channel += 1;
  ldv_46111: 
#line 2710 
  ;
  
#line 2709 
  if (pdata->channel_count > i) 
#line 2711 
                                goto ldv_46110; else 
#line 2714 
                                                     goto ldv_46108;
  ldv_46108: 
#line 2715 
  ;
  {
    
#line 2717 
    u32 reg_val_0 = ioread32(pdata->xgmac_regs);
    
#line 2717 
    reg_val_0 &= 4294967294U;
    
#line 2717 
    reg_val_0 |= 1U;
    
#line 2717 
    iowrite32(reg_val_0,pdata->xgmac_regs);
  }
  
#line 2719 
  return;
}


#line 2720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_powerdown_tx(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 2726 
  channel = pdata->channel;
  
#line 2727 
  i = 0U;
  
#line 2727 
  goto ldv_46120;
  ldv_46119: 
#line 2728 
  ;
  
#line 2728 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 2729 
                                                 goto ldv_46118; else ;
  
#line 2731 
  xgbe_prepare_tx_stop(pdata,channel);
  
#line 2727 
  i += 1U;
  
#line 2727 
  channel += 1;
  ldv_46120: 
#line 2728 
  ;
  
#line 2727 
  if (pdata->channel_count > i) 
#line 2729 
                                goto ldv_46119; else 
#line 2732 
                                                     goto ldv_46118;
  ldv_46118: 
#line 2733 
  ;
  {
    
#line 2735 
    u32 reg_val = ioread32(pdata->xgmac_regs);
    
#line 2735 
    reg_val &= 4294967294U;
    
#line 2735 
    reg_val = reg_val;
    
#line 2735 
    iowrite32(reg_val,pdata->xgmac_regs);
  }
  
#line 2738 
  channel = pdata->channel;
  
#line 2739 
  i = 0U;
  
#line 2739 
  goto ldv_46125;
  ldv_46124: 
#line 2740 
  ;
  
#line 2740 
  if (channel->tx_ring == (struct xgbe_ring *)0) 
#line 2741 
                                                 goto ldv_46122; else ;
  {
    
#line 2743 
    u32 reg_val_0 = ioread32(channel->dma_regs + 4U);
    
#line 2743 
    reg_val_0 &= 4294967294U;
    
#line 2743 
    reg_val_0 = reg_val_0;
    
#line 2743 
    iowrite32(reg_val_0,channel->dma_regs + 4U);
  }
  
#line 2739 
  i += 1U;
  
#line 2739 
  channel += 1;
  ldv_46125: 
#line 2740 
  ;
  
#line 2739 
  if (pdata->channel_count > i) 
#line 2741 
                                goto ldv_46124; else 
#line 2744 
                                                     goto ldv_46122;
  ldv_46122: 
#line 2745 
  ;
  
#line 2746 
  return;
}


#line 2747  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_powerup_rx(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 2753 
  channel = pdata->channel;
  
#line 2754 
  i = 0U;
  
#line 2754 
  goto ldv_46134;
  ldv_46133: 
#line 2755 
  ;
  
#line 2755 
  if (channel->rx_ring == (struct xgbe_ring *)0) 
#line 2756 
                                                 goto ldv_46131; else ;
  {
    
#line 2758 
    u32 reg_val = ioread32(channel->dma_regs + 8U);
    
#line 2758 
    reg_val &= 4294967294U;
    
#line 2758 
    reg_val |= 1U;
    
#line 2758 
    iowrite32(reg_val,channel->dma_regs + 8U);
  }
  
#line 2754 
  i += 1U;
  
#line 2754 
  channel += 1;
  ldv_46134: 
#line 2755 
  ;
  
#line 2754 
  if (pdata->channel_count > i) 
#line 2756 
                                goto ldv_46133; else 
#line 2759 
                                                     goto ldv_46131;
  ldv_46131: 
#line 2760 
  ;
  
#line 2761 
  return;
}


#line 2762  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static void xgbe_powerdown_rx(struct xgbe_prv_data *pdata)
{
  struct xgbe_channel *channel;
  unsigned int i;
  
#line 2768 
  channel = pdata->channel;
  
#line 2769 
  i = 0U;
  
#line 2769 
  goto ldv_46143;
  ldv_46142: 
#line 2770 
  ;
  
#line 2770 
  if (channel->rx_ring == (struct xgbe_ring *)0) 
#line 2771 
                                                 goto ldv_46140; else ;
  {
    
#line 2773 
    u32 reg_val = ioread32(channel->dma_regs + 8U);
    
#line 2773 
    reg_val &= 4294967294U;
    
#line 2773 
    reg_val = reg_val;
    
#line 2773 
    iowrite32(reg_val,channel->dma_regs + 8U);
  }
  
#line 2769 
  i += 1U;
  
#line 2769 
  channel += 1;
  ldv_46143: 
#line 2770 
  ;
  
#line 2769 
  if (pdata->channel_count > i) 
#line 2771 
                                goto ldv_46142; else 
#line 2774 
                                                     goto ldv_46140;
  ldv_46140: 
#line 2775 
  ;
  
#line 2776 
  return;
}


#line 2777  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
static int xgbe_init(struct xgbe_prv_data *pdata)
{
  int __retres;
  int ret;
  
#line 2779 
  struct xgbe_desc_if *desc_if = & pdata->desc_if;
  
#line 2785 
  ret = xgbe_flush_tx_queues(pdata);
  
#line 2786 
  if (ret != 0) {
    
#line 2787 
    __retres = ret;
    
#line 2787 
    goto return_label;
  }
  else ;
  
#line 2792 
  xgbe_config_dma_bus(pdata);
  
#line 2793 
  xgbe_config_dma_cache(pdata);
  
#line 2794 
  xgbe_config_osp_mode(pdata);
  
#line 2795 
  xgbe_config_pblx8(pdata);
  
#line 2796 
  xgbe_config_tx_pbl_val(pdata);
  
#line 2797 
  xgbe_config_rx_pbl_val(pdata);
  
#line 2798 
  xgbe_config_rx_coalesce(pdata);
  
#line 2799 
  xgbe_config_tx_coalesce(pdata);
  
#line 2800 
  xgbe_config_rx_buffer_size(pdata);
  
#line 2801 
  xgbe_config_tso_mode(pdata);
  
#line 2802 
  xgbe_config_sph_mode(pdata);
  
#line 2803 
  xgbe_config_rss(pdata);
  
#line 2804 
  (*(desc_if->wrapper_tx_desc_init))(pdata);
  
#line 2805 
  (*(desc_if->wrapper_rx_desc_init))(pdata);
  
#line 2806 
  xgbe_enable_dma_interrupts(pdata);
  
#line 2811 
  xgbe_config_mtl_mode(pdata);
  
#line 2812 
  xgbe_config_queue_mapping(pdata);
  
#line 2813 
  xgbe_config_tsf_mode(pdata,pdata->tx_sf_mode);
  
#line 2814 
  xgbe_config_rsf_mode(pdata,pdata->rx_sf_mode);
  
#line 2815 
  xgbe_config_tx_threshold(pdata,pdata->tx_threshold);
  
#line 2816 
  xgbe_config_rx_threshold(pdata,pdata->rx_threshold);
  
#line 2817 
  xgbe_config_tx_fifo_size(pdata);
  
#line 2818 
  xgbe_config_rx_fifo_size(pdata);
  
#line 2819 
  xgbe_config_flow_control_threshold(pdata);
  
#line 2823 
  xgbe_config_dcb_tc(pdata);
  
#line 2824 
  xgbe_config_dcb_pfc(pdata);
  
#line 2825 
  xgbe_enable_mtl_interrupts(pdata);
  
#line 2830 
  xgbe_config_mac_address(pdata);
  
#line 2831 
  xgbe_config_rx_mode(pdata);
  
#line 2832 
  xgbe_config_jumbo_enable(pdata);
  
#line 2833 
  xgbe_config_flow_control(pdata);
  
#line 2834 
  xgbe_config_mac_speed(pdata);
  
#line 2835 
  xgbe_config_checksum_offload(pdata);
  
#line 2836 
  xgbe_config_vlan_support(pdata);
  
#line 2837 
  xgbe_config_mmc(pdata);
  
#line 2838 
  xgbe_enable_mac_interrupts(pdata);
  
#line 2842 
  __retres = 0;
  return_label: 
#line 2842 
                return __retres;
}


#line 2845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-dev.c"
void xgbe_init_function_ptrs_dev(struct xgbe_hw_if *hw_if)
{
  
#line 2849 
  hw_if->tx_complete = & xgbe_tx_complete;
  
#line 2851 
  hw_if->set_mac_address = & xgbe_set_mac_address_0;
  
#line 2852 
  hw_if->config_rx_mode = & xgbe_config_rx_mode;
  
#line 2854 
  hw_if->enable_rx_csum = & xgbe_enable_rx_csum;
  
#line 2855 
  hw_if->disable_rx_csum = & xgbe_disable_rx_csum;
  
#line 2857 
  hw_if->enable_rx_vlan_stripping = & xgbe_enable_rx_vlan_stripping;
  
#line 2858 
  hw_if->disable_rx_vlan_stripping = & xgbe_disable_rx_vlan_stripping;
  
#line 2859 
  hw_if->enable_rx_vlan_filtering = & xgbe_enable_rx_vlan_filtering;
  
#line 2860 
  hw_if->disable_rx_vlan_filtering = & xgbe_disable_rx_vlan_filtering;
  
#line 2861 
  hw_if->update_vlan_hash_table = & xgbe_update_vlan_hash_table;
  
#line 2863 
  hw_if->read_mmd_regs = & xgbe_read_mmd_regs;
  
#line 2864 
  hw_if->write_mmd_regs = & xgbe_write_mmd_regs;
  
#line 2866 
  hw_if->set_gmii_speed = & xgbe_set_gmii_speed;
  
#line 2867 
  hw_if->set_gmii_2500_speed = & xgbe_set_gmii_2500_speed;
  
#line 2868 
  hw_if->set_xgmii_speed = & xgbe_set_xgmii_speed;
  
#line 2870 
  hw_if->enable_tx = & xgbe_enable_tx;
  
#line 2871 
  hw_if->disable_tx = & xgbe_disable_tx;
  
#line 2872 
  hw_if->enable_rx = & xgbe_enable_rx;
  
#line 2873 
  hw_if->disable_rx = & xgbe_disable_rx;
  
#line 2875 
  hw_if->powerup_tx = & xgbe_powerup_tx;
  
#line 2876 
  hw_if->powerdown_tx = & xgbe_powerdown_tx;
  
#line 2877 
  hw_if->powerup_rx = & xgbe_powerup_rx;
  
#line 2878 
  hw_if->powerdown_rx = & xgbe_powerdown_rx;
  
#line 2880 
  hw_if->dev_xmit = & xgbe_dev_xmit;
  
#line 2881 
  hw_if->dev_read = & xgbe_dev_read;
  
#line 2882 
  hw_if->enable_int = & xgbe_enable_int;
  
#line 2883 
  hw_if->disable_int = & xgbe_disable_int;
  
#line 2884 
  hw_if->init = & xgbe_init;
  
#line 2885 
  hw_if->exit = & xgbe_exit;
  
#line 2888 
  hw_if->tx_desc_init = & xgbe_tx_desc_init;
  
#line 2889 
  hw_if->rx_desc_init = & xgbe_rx_desc_init;
  
#line 2890 
  hw_if->tx_desc_reset = & xgbe_tx_desc_reset;
  
#line 2891 
  hw_if->rx_desc_reset = & xgbe_rx_desc_reset;
  
#line 2892 
  hw_if->is_last_desc = & xgbe_is_last_desc;
  
#line 2893 
  hw_if->is_context_desc = & xgbe_is_context_desc;
  
#line 2894 
  hw_if->tx_start_xmit = & xgbe_tx_start_xmit;
  
#line 2897 
  hw_if->config_tx_flow_control = & xgbe_config_tx_flow_control;
  
#line 2898 
  hw_if->config_rx_flow_control = & xgbe_config_rx_flow_control;
  
#line 2901 
  hw_if->config_rx_coalesce = & xgbe_config_rx_coalesce;
  
#line 2902 
  hw_if->config_tx_coalesce = & xgbe_config_tx_coalesce;
  
#line 2903 
  hw_if->usec_to_riwt = & xgbe_usec_to_riwt;
  
#line 2904 
  hw_if->riwt_to_usec = & xgbe_riwt_to_usec;
  
#line 2907 
  hw_if->config_rx_threshold = & xgbe_config_rx_threshold;
  
#line 2908 
  hw_if->config_tx_threshold = & xgbe_config_tx_threshold;
  
#line 2911 
  hw_if->config_rsf_mode = & xgbe_config_rsf_mode;
  
#line 2912 
  hw_if->config_tsf_mode = & xgbe_config_tsf_mode;
  
#line 2915 
  hw_if->config_osp_mode = & xgbe_config_osp_mode;
  
#line 2918 
  hw_if->config_rx_pbl_val = & xgbe_config_rx_pbl_val;
  
#line 2919 
  hw_if->get_rx_pbl_val = & xgbe_get_rx_pbl_val;
  
#line 2920 
  hw_if->config_tx_pbl_val = & xgbe_config_tx_pbl_val;
  
#line 2921 
  hw_if->get_tx_pbl_val = & xgbe_get_tx_pbl_val;
  
#line 2922 
  hw_if->config_pblx8 = & xgbe_config_pblx8;
  
#line 2925 
  hw_if->tx_mmc_int = & xgbe_tx_mmc_int;
  
#line 2926 
  hw_if->rx_mmc_int = & xgbe_rx_mmc_int;
  
#line 2927 
  hw_if->read_mmc_stats = & xgbe_read_mmc_stats;
  
#line 2930 
  hw_if->config_tstamp = & xgbe_config_tstamp;
  
#line 2931 
  hw_if->update_tstamp_addend = & xgbe_update_tstamp_addend;
  
#line 2932 
  hw_if->set_tstamp_time = & xgbe_set_tstamp_time;
  
#line 2933 
  hw_if->get_tstamp_time = & xgbe_get_tstamp_time;
  
#line 2934 
  hw_if->get_tx_tstamp = & xgbe_get_tx_tstamp;
  
#line 2937 
  hw_if->config_dcb_tc = & xgbe_config_dcb_tc;
  
#line 2938 
  hw_if->config_dcb_pfc = & xgbe_config_dcb_pfc;
  
#line 2941 
  hw_if->enable_rss = & xgbe_enable_rss;
  
#line 2942 
  hw_if->disable_rss = & xgbe_disable_rss;
  
#line 2943 
  hw_if->set_rss_hash_key = & xgbe_set_rss_hash_key;
  
#line 2944 
  hw_if->set_rss_lookup_table = & xgbe_set_rss_lookup_table;
  
#line 2945 
  return;
}


#line 746  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-dev.c.aux"
static void ldv_mutex_lock_73(struct mutex *ldv_func_arg1)
{
  
#line 750 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"rss_mutex_of_xgbe_prv_data");
  
#line 751 
  return;
}


#line 754  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-dev.c.aux"
static void ldv_mutex_unlock_74(struct mutex *ldv_func_arg1)
{
  
#line 758 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"rss_mutex_of_xgbe_prv_data");
  
#line 759 
  return;
}


#line 762  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-dev.c.aux"
static void ldv_mutex_lock_75(struct mutex *ldv_func_arg1)
{
  
#line 766 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"xpcs_mutex_of_xgbe_prv_data");
  
#line 767 
  return;
}


#line 770  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-dev.c.aux"
static void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1)
{
  
#line 774 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"xpcs_mutex_of_xgbe_prv_data");
  
#line 775 
  return;
}


#line 778  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-dev.c.aux"
static void ldv_mutex_lock_77(struct mutex *ldv_func_arg1)
{
  
#line 782 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"xpcs_mutex_of_xgbe_prv_data");
  
#line 783 
  return;
}


#line 786  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-dev.c.aux"
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1)
{
  
#line 790 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"xpcs_mutex_of_xgbe_prv_data");
  
#line 791 
  return;
}


#line 794  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-dev.c.aux"
static int ldv_mod_timer_79(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 798 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 798 
  return tmp;
}


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_79(struct mutex *ldv_func_arg1);


#line 292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
static bool ldv_flush_work_74(struct work_struct *ldv_func_arg1);


#line 490 
static bool ldv_queue_work_73(struct workqueue_struct *wq, struct work_struct *work);


#line 494 
static bool ldv_queue_work_75(struct workqueue_struct *wq, struct work_struct *work);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
unsigned int ioread16(void *);


#line 35 
void iowrite16(u16, void *);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static void ldv_devm_free_irq_80(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3);


#line 177 
static void ldv_devm_free_irq_81_0(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3);


#line 3047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void netif_carrier_on(struct net_device *);


#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_an_enable_kr_training(struct xgbe_prv_data *pdata)
{
  unsigned int reg;
  int tmp;
  
#line 132 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073807510);
  
#line 132 
  reg = (unsigned int)tmp;
  
#line 134 
  reg |= 2U;
  
#line 135 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073807510,(int)reg);
  
#line 136 
  return;
}


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_an_disable_kr_training(struct xgbe_prv_data *pdata)
{
  unsigned int reg;
  int tmp;
  
#line 142 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073807510);
  
#line 142 
  reg = (unsigned int)tmp;
  
#line 144 
  reg &= 4294967293U;
  
#line 145 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073807510,(int)reg);
  
#line 146 
  return;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_pcs_power_cycle(struct xgbe_prv_data *pdata)
{
  unsigned int reg;
  int tmp;
  
#line 152 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938432);
  
#line 152 
  reg = (unsigned int)tmp;
  
#line 154 
  reg |= 2048U;
  
#line 155 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938432,(int)reg);
  
#line 157 
  usleep_range(75UL,100UL);
  
#line 159 
  reg &= 4294965247U;
  
#line 160 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938432,(int)reg);
  
#line 161 
  return;
}


#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_serdes_start_ratechange(struct xgbe_prv_data *pdata)
{
  unsigned int tmp;
  
#line 166 
  tmp = ioread16(pdata->sir1_regs);
  
#line 166 
  u16 reg_val = (unsigned short)tmp;
  
#line 166 
  reg_val = (unsigned short)((unsigned int)reg_val & 65471U);
  
#line 166 
  reg_val = (unsigned short)((unsigned int)reg_val | 64U);
  
#line 166 
  iowrite16((unsigned short)((int)reg_val),pdata->sir1_regs);
  
#line 168 
  return;
}


#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_serdes_complete_ratechange(struct xgbe_prv_data *pdata)
{
  unsigned int wait;
  u16 status;
  unsigned int tmp_0;
  unsigned int tmp_1;
  {
    unsigned int tmp;
    
#line 175 
    tmp = ioread16(pdata->sir1_regs);
    
#line 175 
    u16 reg_val = (unsigned short)tmp;
    
#line 175 
    reg_val = (unsigned short)((unsigned int)reg_val & 65471U);
    
#line 175 
    reg_val = reg_val;
    
#line 175 
    iowrite16((unsigned short)((int)reg_val),pdata->sir1_regs);
  }
  
#line 178 
  wait = 500U;
  
#line 179 
  goto ldv_45967;
  ldv_45966: 
#line 180 
  ;
  
#line 180 
  usleep_range(50UL,75UL);
  
#line 182 
  tmp_0 = ioread16(pdata->sir0_regs + 64U);
  
#line 182 
  status = (unsigned short)tmp_0;
  
#line 183 
  if (((int)status & 1) != 0 && (((int)status >> 8) & 1) != 0) 
#line 185 
                                                               goto rx_reset; else ;
  ldv_45967: 
#line 186 
  ;
  
#line 179 
  tmp_1 = wait;
  
#line 179 
  wait -= 1U;
  
#line 179 
  ;
  
#line 179 
  if (tmp_1 != 0U) 
#line 181 
                   goto ldv_45966; else 
#line 184 
                                        goto ldv_45968;
  ldv_45968: 
#line 185 
  ;
  
#line 188 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 188 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_serdes_complete_ratechange", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "SerDes rx/tx not ready (%#hx)\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))189U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 188 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 188 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"SerDes rx/tx not ready (%#hx)\n",(int)status); else ;
  }
  else ;
  rx_reset: 
#line 191 
  ;
  {
    unsigned int tmp_2;
    
#line 193 
    tmp_2 = ioread16(pdata->rxtx_regs + 24U);
    
#line 193 
    u16 reg_val_0 = (unsigned short)tmp_2;
    
#line 193 
    reg_val_0 = (unsigned short)((unsigned int)reg_val_0 & 65279U);
    
#line 193 
    reg_val_0 = reg_val_0;
    
#line 193 
    iowrite16((unsigned short)((int)reg_val_0),pdata->rxtx_regs + 24U);
  }
  {
    unsigned int tmp_3;
    
#line 194 
    tmp_3 = ioread16(pdata->rxtx_regs + 24U);
    
#line 194 
    u16 reg_val_1 = (unsigned short)tmp_3;
    
#line 194 
    reg_val_1 = (unsigned short)((unsigned int)reg_val_1 & 65279U);
    
#line 194 
    reg_val_1 = (unsigned short)((unsigned int)reg_val_1 | 256U);
    
#line 194 
    iowrite16((unsigned short)((int)reg_val_1),pdata->rxtx_regs + 24U);
  }
  
#line 196 
  return;
}


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_xgmii_mode(struct xgbe_prv_data *pdata)
{
  unsigned int reg;
  int tmp;
  int tmp_0;
  
#line 202 
  xgbe_an_enable_kr_training(pdata);
  
#line 205 
  (*(pdata->hw_if.set_xgmii_speed))(pdata);
  
#line 208 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938439);
  
#line 208 
  reg = (unsigned int)tmp;
  
#line 209 
  reg &= 4294967292U;
  
#line 210 
  reg = reg;
  
#line 211 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938439,(int)reg);
  
#line 213 
  tmp_0 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938432);
  
#line 213 
  reg = (unsigned int)tmp_0;
  
#line 214 
  reg &= 4294958979U;
  
#line 215 
  reg |= 8256U;
  
#line 216 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938432,(int)reg);
  
#line 218 
  xgbe_pcs_power_cycle(pdata);
  
#line 221 
  xgbe_serdes_start_ratechange(pdata);
  {
    unsigned int tmp_1;
    
#line 223 
    tmp_1 = ioread16(pdata->sir1_regs);
    
#line 223 
    u16 reg_val = (unsigned short)tmp_1;
    
#line 223 
    reg_val = (unsigned short)((unsigned int)reg_val & 65487U);
    
#line 223 
    reg_val = reg_val;
    
#line 223 
    iowrite16((unsigned short)((int)reg_val),pdata->sir1_regs);
  }
  {
    unsigned int tmp_2;
    
#line 224 
    tmp_2 = ioread16(pdata->sir1_regs);
    
#line 224 
    u16 reg_val_0 = (unsigned short)tmp_2;
    
#line 224 
    reg_val_0 = (unsigned short)((unsigned int)reg_val_0 & 65528U);
    
#line 224 
    reg_val_0 = (unsigned short)((unsigned int)reg_val_0 | 7U);
    
#line 224 
    iowrite16((unsigned short)((int)reg_val_0),pdata->sir1_regs);
  }
  {
    unsigned int tmp_3;
    
#line 225 
    tmp_3 = ioread16(pdata->sir1_regs);
    
#line 225 
    u16 reg_val_1 = (unsigned short)tmp_3;
    
#line 225 
    reg_val_1 = (unsigned short)((unsigned int)reg_val_1 & 65527U);
    
#line 225 
    reg_val_1 = (unsigned short)((unsigned int)reg_val_1 | 8U);
    
#line 225 
    iowrite16((unsigned short)((int)reg_val_1),pdata->sir1_regs);
  }
  {
    unsigned int tmp_4;
    
#line 227 
    tmp_4 = ioread16(pdata->sir1_regs);
    
#line 227 
    u16 reg_val_2 = (unsigned short)tmp_4;
    
#line 227 
    reg_val_2 = (unsigned short)((unsigned int)reg_val_2 & 4095U);
    
#line 227 
    reg_val_2 = (unsigned short)(((int)((unsigned short)pdata->serdes_cdr_rate[2]) << 12U) | (int)reg_val_2);
    
#line 227 
    iowrite16((unsigned short)((int)reg_val_2),pdata->sir1_regs);
  }
  {
    unsigned int tmp_5;
    
#line 229 
    tmp_5 = ioread16(pdata->sir1_regs);
    
#line 229 
    u16 reg_val_3 = (unsigned short)tmp_5;
    
#line 229 
    reg_val_3 = (unsigned short)((unsigned int)reg_val_3 & 61695U);
    
#line 229 
    reg_val_3 = (unsigned short)(((unsigned int)((int)((unsigned short)pdata->serdes_tx_amp[2]) << 8U) & 3840U) | (unsigned int)reg_val_3);
    
#line 229 
    iowrite16((unsigned short)((int)reg_val_3),pdata->sir1_regs);
  }
  {
    unsigned int tmp_6;
    
#line 231 
    tmp_6 = ioread16(pdata->rxtx_regs + 80U);
    
#line 231 
    u16 reg_val_4 = (unsigned short)tmp_6;
    
#line 231 
    reg_val_4 = (unsigned short)((unsigned int)reg_val_4 & 65531U);
    
#line 231 
    reg_val_4 = (unsigned short)(((unsigned int)((int)((unsigned short)pdata->serdes_blwc[2]) << 2U) & 4U) | (unsigned int)reg_val_4);
    
#line 231 
    iowrite16((unsigned short)((int)reg_val_4),pdata->rxtx_regs + 80U);
  }
  {
    unsigned int tmp_7;
    
#line 233 
    tmp_7 = ioread16(pdata->rxtx_regs + 456U);
    
#line 233 
    u16 reg_val_5 = (unsigned short)tmp_7;
    
#line 233 
    reg_val_5 = (unsigned short)((unsigned int)reg_val_5 & 511U);
    
#line 233 
    reg_val_5 = (unsigned short)(((int)((unsigned short)pdata->serdes_pq_skew[2]) << 9U) | (int)reg_val_5);
    
#line 233 
    iowrite16((unsigned short)((int)reg_val_5),pdata->rxtx_regs + 456U);
  }
  {
    unsigned int tmp_8;
    
#line 235 
    tmp_8 = ioread16(pdata->rxtx_regs + 516U);
    
#line 235 
    u16 reg_val_6 = (unsigned short)tmp_8;
    
#line 235 
    reg_val_6 = (unsigned short)((unsigned int)reg_val_6 & 16383U);
    
#line 235 
    reg_val_6 = (unsigned short)(((int)((unsigned short)pdata->serdes_dfe_tap_cfg[2]) << 14U) | (int)reg_val_6);
    
#line 235 
    iowrite16((unsigned short)((int)reg_val_6),pdata->rxtx_regs + 516U);
  }
  
#line 237 
  iowrite16((unsigned short)((int)((unsigned short)pdata->serdes_dfe_tap_ena[2])),pdata->rxtx_regs + 88U);
  
#line 240 
  xgbe_serdes_complete_ratechange(pdata);
  
#line 242 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 242 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_xgmii_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "10GbE KR mode set\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))242U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 242 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 242 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"10GbE KR mode set\n"); else ;
  }
  else ;
  
#line 244 
  return;
}


#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_gmii_2500_mode(struct xgbe_prv_data *pdata)
{
  unsigned int reg;
  int tmp;
  int tmp_0;
  
#line 250 
  xgbe_an_disable_kr_training(pdata);
  
#line 253 
  (*(pdata->hw_if.set_gmii_2500_speed))(pdata);
  
#line 256 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938439);
  
#line 256 
  reg = (unsigned int)tmp;
  
#line 257 
  reg &= 4294967292U;
  
#line 258 
  reg |= 1U;
  
#line 259 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938439,(int)reg);
  
#line 261 
  tmp_0 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938432);
  
#line 261 
  reg = (unsigned int)tmp_0;
  
#line 262 
  reg &= 4294958979U;
  
#line 263 
  reg |= 64U;
  
#line 264 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938432,(int)reg);
  
#line 266 
  xgbe_pcs_power_cycle(pdata);
  
#line 269 
  xgbe_serdes_start_ratechange(pdata);
  {
    unsigned int tmp_1;
    
#line 271 
    tmp_1 = ioread16(pdata->sir1_regs);
    
#line 271 
    u16 reg_val = (unsigned short)tmp_1;
    
#line 271 
    reg_val = (unsigned short)((unsigned int)reg_val & 65487U);
    
#line 271 
    reg_val = (unsigned short)((unsigned int)reg_val | 16U);
    
#line 271 
    iowrite16((unsigned short)((int)reg_val),pdata->sir1_regs);
  }
  {
    unsigned int tmp_2;
    
#line 272 
    tmp_2 = ioread16(pdata->sir1_regs);
    
#line 272 
    u16 reg_val_0 = (unsigned short)tmp_2;
    
#line 272 
    reg_val_0 = (unsigned short)((unsigned int)reg_val_0 & 65528U);
    
#line 272 
    reg_val_0 = (unsigned short)((unsigned int)reg_val_0 | 1U);
    
#line 272 
    iowrite16((unsigned short)((int)reg_val_0),pdata->sir1_regs);
  }
  {
    unsigned int tmp_3;
    
#line 273 
    tmp_3 = ioread16(pdata->sir1_regs);
    
#line 273 
    u16 reg_val_1 = (unsigned short)tmp_3;
    
#line 273 
    reg_val_1 = (unsigned short)((unsigned int)reg_val_1 & 65527U);
    
#line 273 
    reg_val_1 = reg_val_1;
    
#line 273 
    iowrite16((unsigned short)((int)reg_val_1),pdata->sir1_regs);
  }
  {
    unsigned int tmp_4;
    
#line 275 
    tmp_4 = ioread16(pdata->sir1_regs);
    
#line 275 
    u16 reg_val_2 = (unsigned short)tmp_4;
    
#line 275 
    reg_val_2 = (unsigned short)((unsigned int)reg_val_2 & 4095U);
    
#line 275 
    reg_val_2 = (unsigned short)(((int)((unsigned short)pdata->serdes_cdr_rate[1]) << 12U) | (int)reg_val_2);
    
#line 275 
    iowrite16((unsigned short)((int)reg_val_2),pdata->sir1_regs);
  }
  {
    unsigned int tmp_5;
    
#line 277 
    tmp_5 = ioread16(pdata->sir1_regs);
    
#line 277 
    u16 reg_val_3 = (unsigned short)tmp_5;
    
#line 277 
    reg_val_3 = (unsigned short)((unsigned int)reg_val_3 & 61695U);
    
#line 277 
    reg_val_3 = (unsigned short)(((unsigned int)((int)((unsigned short)pdata->serdes_tx_amp[1]) << 8U) & 3840U) | (unsigned int)reg_val_3);
    
#line 277 
    iowrite16((unsigned short)((int)reg_val_3),pdata->sir1_regs);
  }
  {
    unsigned int tmp_6;
    
#line 279 
    tmp_6 = ioread16(pdata->rxtx_regs + 80U);
    
#line 279 
    u16 reg_val_4 = (unsigned short)tmp_6;
    
#line 279 
    reg_val_4 = (unsigned short)((unsigned int)reg_val_4 & 65531U);
    
#line 279 
    reg_val_4 = (unsigned short)(((unsigned int)((int)((unsigned short)pdata->serdes_blwc[1]) << 2U) & 4U) | (unsigned int)reg_val_4);
    
#line 279 
    iowrite16((unsigned short)((int)reg_val_4),pdata->rxtx_regs + 80U);
  }
  {
    unsigned int tmp_7;
    
#line 281 
    tmp_7 = ioread16(pdata->rxtx_regs + 456U);
    
#line 281 
    u16 reg_val_5 = (unsigned short)tmp_7;
    
#line 281 
    reg_val_5 = (unsigned short)((unsigned int)reg_val_5 & 511U);
    
#line 281 
    reg_val_5 = (unsigned short)(((int)((unsigned short)pdata->serdes_pq_skew[1]) << 9U) | (int)reg_val_5);
    
#line 281 
    iowrite16((unsigned short)((int)reg_val_5),pdata->rxtx_regs + 456U);
  }
  {
    unsigned int tmp_8;
    
#line 283 
    tmp_8 = ioread16(pdata->rxtx_regs + 516U);
    
#line 283 
    u16 reg_val_6 = (unsigned short)tmp_8;
    
#line 283 
    reg_val_6 = (unsigned short)((unsigned int)reg_val_6 & 16383U);
    
#line 283 
    reg_val_6 = (unsigned short)(((int)((unsigned short)pdata->serdes_dfe_tap_cfg[1]) << 14U) | (int)reg_val_6);
    
#line 283 
    iowrite16((unsigned short)((int)reg_val_6),pdata->rxtx_regs + 516U);
  }
  
#line 285 
  iowrite16((unsigned short)((int)((unsigned short)pdata->serdes_dfe_tap_ena[1])),pdata->rxtx_regs + 88U);
  
#line 288 
  xgbe_serdes_complete_ratechange(pdata);
  
#line 290 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 290 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_gmii_2500_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "2.5GbE KX mode set\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))290U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 290 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 290 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"2.5GbE KX mode set\n"); else ;
  }
  else ;
  
#line 292 
  return;
}


#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_gmii_mode(struct xgbe_prv_data *pdata)
{
  unsigned int reg;
  int tmp;
  int tmp_0;
  
#line 298 
  xgbe_an_disable_kr_training(pdata);
  
#line 301 
  (*(pdata->hw_if.set_gmii_speed))(pdata);
  
#line 304 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938439);
  
#line 304 
  reg = (unsigned int)tmp;
  
#line 305 
  reg &= 4294967292U;
  
#line 306 
  reg |= 1U;
  
#line 307 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938439,(int)reg);
  
#line 309 
  tmp_0 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938432);
  
#line 309 
  reg = (unsigned int)tmp_0;
  
#line 310 
  reg &= 4294958979U;
  
#line 311 
  reg |= 64U;
  
#line 312 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938432,(int)reg);
  
#line 314 
  xgbe_pcs_power_cycle(pdata);
  
#line 317 
  xgbe_serdes_start_ratechange(pdata);
  {
    unsigned int tmp_1;
    
#line 319 
    tmp_1 = ioread16(pdata->sir1_regs);
    
#line 319 
    u16 reg_val = (unsigned short)tmp_1;
    
#line 319 
    reg_val = (unsigned short)((unsigned int)reg_val & 65487U);
    
#line 319 
    reg_val = (unsigned short)((unsigned int)reg_val | 48U);
    
#line 319 
    iowrite16((unsigned short)((int)reg_val),pdata->sir1_regs);
  }
  {
    unsigned int tmp_2;
    
#line 320 
    tmp_2 = ioread16(pdata->sir1_regs);
    
#line 320 
    u16 reg_val_0 = (unsigned short)tmp_2;
    
#line 320 
    reg_val_0 = (unsigned short)((unsigned int)reg_val_0 & 65528U);
    
#line 320 
    reg_val_0 = (unsigned short)((unsigned int)reg_val_0 | 1U);
    
#line 320 
    iowrite16((unsigned short)((int)reg_val_0),pdata->sir1_regs);
  }
  {
    unsigned int tmp_3;
    
#line 321 
    tmp_3 = ioread16(pdata->sir1_regs);
    
#line 321 
    u16 reg_val_1 = (unsigned short)tmp_3;
    
#line 321 
    reg_val_1 = (unsigned short)((unsigned int)reg_val_1 & 65527U);
    
#line 321 
    reg_val_1 = reg_val_1;
    
#line 321 
    iowrite16((unsigned short)((int)reg_val_1),pdata->sir1_regs);
  }
  {
    unsigned int tmp_4;
    
#line 323 
    tmp_4 = ioread16(pdata->sir1_regs);
    
#line 323 
    u16 reg_val_2 = (unsigned short)tmp_4;
    
#line 323 
    reg_val_2 = (unsigned short)((unsigned int)reg_val_2 & 4095U);
    
#line 323 
    reg_val_2 = (unsigned short)(((int)((unsigned short)pdata->serdes_cdr_rate[0]) << 12U) | (int)reg_val_2);
    
#line 323 
    iowrite16((unsigned short)((int)reg_val_2),pdata->sir1_regs);
  }
  {
    unsigned int tmp_5;
    
#line 325 
    tmp_5 = ioread16(pdata->sir1_regs);
    
#line 325 
    u16 reg_val_3 = (unsigned short)tmp_5;
    
#line 325 
    reg_val_3 = (unsigned short)((unsigned int)reg_val_3 & 61695U);
    
#line 325 
    reg_val_3 = (unsigned short)(((unsigned int)((int)((unsigned short)pdata->serdes_tx_amp[0]) << 8U) & 3840U) | (unsigned int)reg_val_3);
    
#line 325 
    iowrite16((unsigned short)((int)reg_val_3),pdata->sir1_regs);
  }
  {
    unsigned int tmp_6;
    
#line 327 
    tmp_6 = ioread16(pdata->rxtx_regs + 80U);
    
#line 327 
    u16 reg_val_4 = (unsigned short)tmp_6;
    
#line 327 
    reg_val_4 = (unsigned short)((unsigned int)reg_val_4 & 65531U);
    
#line 327 
    reg_val_4 = (unsigned short)(((unsigned int)((int)((unsigned short)pdata->serdes_blwc[0]) << 2U) & 4U) | (unsigned int)reg_val_4);
    
#line 327 
    iowrite16((unsigned short)((int)reg_val_4),pdata->rxtx_regs + 80U);
  }
  {
    unsigned int tmp_7;
    
#line 329 
    tmp_7 = ioread16(pdata->rxtx_regs + 456U);
    
#line 329 
    u16 reg_val_5 = (unsigned short)tmp_7;
    
#line 329 
    reg_val_5 = (unsigned short)((unsigned int)reg_val_5 & 511U);
    
#line 329 
    reg_val_5 = (unsigned short)(((int)((unsigned short)pdata->serdes_pq_skew[0]) << 9U) | (int)reg_val_5);
    
#line 329 
    iowrite16((unsigned short)((int)reg_val_5),pdata->rxtx_regs + 456U);
  }
  {
    unsigned int tmp_8;
    
#line 331 
    tmp_8 = ioread16(pdata->rxtx_regs + 516U);
    
#line 331 
    u16 reg_val_6 = (unsigned short)tmp_8;
    
#line 331 
    reg_val_6 = (unsigned short)((unsigned int)reg_val_6 & 16383U);
    
#line 331 
    reg_val_6 = (unsigned short)(((int)((unsigned short)pdata->serdes_dfe_tap_cfg[0]) << 14U) | (int)reg_val_6);
    
#line 331 
    iowrite16((unsigned short)((int)reg_val_6),pdata->rxtx_regs + 516U);
  }
  
#line 333 
  iowrite16((unsigned short)((int)((unsigned short)pdata->serdes_dfe_tap_ena[0])),pdata->rxtx_regs + 88U);
  
#line 336 
  xgbe_serdes_complete_ratechange(pdata);
  
#line 338 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 338 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_gmii_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "1GbE KX mode set\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))338U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 338 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 338 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"1GbE KX mode set\n"); else ;
  }
  else ;
  
#line 340 
  return;
}


#line 341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_cur_mode(struct xgbe_prv_data *pdata, enum xgbe_mode *mode)
{
  unsigned int reg;
  int tmp;
  
#line 346 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938439);
  
#line 346 
  reg = (unsigned int)tmp;
  
#line 347 
  if ((reg & 3U) == 0U) 
#line 348 
                        *mode = XGBE_MODE_KR; else 
#line 350 
                                                   *mode = XGBE_MODE_KX;
  
#line 351 
  return;
}


#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static bool xgbe_in_kr_mode(struct xgbe_prv_data *pdata)
{
  bool __retres;
  enum xgbe_mode mode;
  
#line 357 
  xgbe_cur_mode(pdata,& mode);
  
#line 359 
  __retres = (_Bool)(mode == (unsigned int)XGBE_MODE_KR);
  
#line 359 
  return __retres;
}


#line 362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_switch_mode(struct xgbe_prv_data *pdata)
{
  bool tmp;
  
#line 365 
  tmp = xgbe_in_kr_mode(pdata);
  
#line 365 
  if ((int)tmp != 0) 
    
#line 366 
    if (pdata->speed_set == 0U) 
#line 367 
                                xgbe_gmii_mode(pdata); else 
#line 369 
                                                            xgbe_gmii_2500_mode(pdata);
  else 
#line 371 
       xgbe_xgmii_mode(pdata);
  
#line 372 
  return;
}


#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_set_mode(struct xgbe_prv_data *pdata, enum xgbe_mode mode)
{
  enum xgbe_mode cur_mode;
  
#line 380 
  xgbe_cur_mode(pdata,& cur_mode);
  
#line 381 
  if (mode != cur_mode) 
#line 382 
                        xgbe_switch_mode(pdata); else ;
  
#line 383 
  return;
}


#line 385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static bool xgbe_use_xgmii_mode(struct xgbe_prv_data *pdata)
{
  bool __retres;
  
#line 387 
  if (pdata->phy.autoneg == 1) {
    
#line 388 
    if ((pdata->phy.advertising & 524288U) != 0U) {
      
#line 389 
      __retres = (_Bool)1;
      
#line 389 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 391 
    if (pdata->phy.speed == 10000) {
      
#line 392 
      __retres = (_Bool)1;
      
#line 392 
      goto return_label;
    }
    else ;
  
#line 395 
  __retres = (_Bool)0;
  return_label: 
#line 395 
                return __retres;
}


#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static bool xgbe_use_gmii_2500_mode(struct xgbe_prv_data *pdata)
{
  bool __retres;
  
#line 400 
  if (pdata->phy.autoneg == 1) {
    
#line 401 
    if ((pdata->phy.advertising & 32768U) != 0U) {
      
#line 402 
      __retres = (_Bool)1;
      
#line 402 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 404 
    if (pdata->phy.speed == 2500) {
      
#line 405 
      __retres = (_Bool)1;
      
#line 405 
      goto return_label;
    }
    else ;
  
#line 408 
  __retres = (_Bool)0;
  return_label: 
#line 408 
                return __retres;
}


#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static bool xgbe_use_gmii_mode(struct xgbe_prv_data *pdata)
{
  bool __retres;
  
#line 413 
  if (pdata->phy.autoneg == 1) {
    
#line 414 
    if ((pdata->phy.advertising & 131072U) != 0U) {
      
#line 415 
      __retres = (_Bool)1;
      
#line 415 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 417 
    if (pdata->phy.speed == 1000) {
      
#line 418 
      __retres = (_Bool)1;
      
#line 418 
      goto return_label;
    }
    else ;
  
#line 421 
  __retres = (_Bool)0;
  return_label: 
#line 421 
                return __retres;
}


#line 424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_set_an(struct xgbe_prv_data *pdata, bool enable, bool restart)
{
  unsigned int reg;
  int tmp;
  
#line 428 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200576);
  
#line 428 
  reg = (unsigned int)tmp;
  
#line 429 
  reg &= 4294963199U;
  
#line 431 
  if ((int)enable != 0) 
#line 432 
                        reg |= 4096U; else ;
  
#line 434 
  if ((int)restart != 0) 
#line 435 
                         reg |= 512U; else ;
  
#line 437 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074200576,(int)reg);
  
#line 438 
  return;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_restart_an(struct xgbe_prv_data *pdata)
{
  
#line 442 
  xgbe_set_an(pdata,(_Bool)1,(_Bool)1);
  
#line 444 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 444 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_restart_an", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "AN enabled/restarted\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))444U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 444 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 444 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"AN enabled/restarted\n"); else ;
  }
  else ;
  
#line 446 
  return;
}


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_disable_an(struct xgbe_prv_data *pdata)
{
  
#line 449 
  xgbe_set_an(pdata,(_Bool)0,(_Bool)0);
  
#line 451 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 451 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_disable_an", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "AN disabled\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))451U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 451 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 451 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"AN disabled\n"); else ;
  }
  else ;
  
#line 453 
  return;
}


#line 454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static enum xgbe_an xgbe_an_tx_training(struct xgbe_prv_data *pdata, enum xgbe_rx *state)
{
  enum xgbe_an __retres;
  unsigned int ad_reg;
  unsigned int lp_reg;
  unsigned int reg;
  int tmp_0;
  bool tmp;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  
#line 459 
  *state = XGBE_RX_COMPLETE;
  
#line 462 
  tmp = xgbe_in_kr_mode(pdata);
  
#line 462 
  if (tmp) 
#line 462 
           tmp_0 = 0; else 
#line 462 
                           tmp_0 = 1;
  
#line 462 
  if (tmp_0) {
    
#line 463 
    __retres = XGBE_AN_PAGE_RECEIVED;
    
#line 463 
    goto return_label;
  }
  else ;
  
#line 466 
  tmp_1 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200594);
  
#line 466 
  ad_reg = (unsigned int)tmp_1;
  
#line 467 
  tmp_2 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200597);
  
#line 467 
  lp_reg = (unsigned int)tmp_2;
  
#line 469 
  tmp_3 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073807531);
  
#line 469 
  reg = (unsigned int)tmp_3;
  
#line 470 
  reg &= 4294967292U;
  
#line 471 
  if ((ad_reg & 49152U) != 0U && (lp_reg & 49152U) != 0U) 
#line 472 
                                                          reg = pdata->fec_ability | reg; else ;
  
#line 474 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073807531,(int)reg);
  
#line 477 
  tmp_4 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073807510);
  
#line 477 
  reg = (unsigned int)tmp_4;
  
#line 478 
  if (((unsigned long)reg & 2UL) != 0UL) {
    {
      unsigned int tmp_5;
      
#line 479 
      tmp_5 = ioread16(pdata->sir0_regs + 44U);
      
#line 479 
      u16 reg_val = (unsigned short)tmp_5;
      
#line 479 
      reg_val = (unsigned short)((unsigned int)reg_val & 63487U);
      
#line 479 
      reg_val = (unsigned short)((unsigned int)reg_val | 2048U);
      
#line 479 
      iowrite16((unsigned short)((int)reg_val),pdata->sir0_regs + 44U);
    }
    
#line 481 
    reg |= 1U;
    
#line 482 
    (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073807510,(int)reg);
    {
      unsigned int tmp_6;
      
#line 485 
      tmp_6 = ioread16(pdata->sir0_regs + 44U);
      
#line 485 
      u16 reg_val_0 = (unsigned short)tmp_6;
      
#line 485 
      reg_val_0 = (unsigned short)((unsigned int)reg_val_0 & 63487U);
      
#line 485 
      reg_val_0 = reg_val_0;
      
#line 485 
      iowrite16((unsigned short)((int)reg_val_0),pdata->sir0_regs + 44U);
    }
    
#line 487 
    if ((pdata->msg_enable & 4U) != 0U) {
      
#line 487 
      struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_an_tx_training", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "KR training initiated\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))488U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 487 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 487 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"KR training initiated\n"); else ;
    }
    else ;
  }
  else ;
  
#line 491 
  __retres = XGBE_AN_PAGE_RECEIVED;
  return_label: 
#line 491 
                return __retres;
}


#line 494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static enum xgbe_an xgbe_an_tx_xnp(struct xgbe_prv_data *pdata, enum xgbe_rx *state)
{
  enum xgbe_an __retres;
  u16 msg;
  
#line 499 
  *state = XGBE_RX_XNP;
  
#line 501 
  msg = (unsigned short)1U;
  
#line 502 
  msg = (unsigned short)((unsigned int)msg | 8192U);
  
#line 504 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074200600,0);
  
#line 505 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074200599,0);
  
#line 506 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074200598,(int)msg);
  
#line 508 
  __retres = XGBE_AN_PAGE_RECEIVED;
  
#line 508 
  return __retres;
}


#line 511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static enum xgbe_an xgbe_an_rx_bpa(struct xgbe_prv_data *pdata, enum xgbe_rx *state)
{
  enum xgbe_an __retres;
  unsigned int link_support;
  unsigned int reg;
  unsigned int ad_reg;
  unsigned int lp_reg;
  int tmp;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  int tmp_3;
  unsigned int tmp_6;
  
#line 518 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200596);
  
#line 518 
  reg = (unsigned int)tmp;
  
#line 521 
  tmp_0 = xgbe_in_kr_mode(pdata);
  
#line 521 
  if ((int)tmp_0 != 0) 
#line 521 
                       tmp_1 = 128; else 
#line 521 
                                         tmp_1 = 32;
  
#line 521 
  link_support = (unsigned int)tmp_1;
  
#line 522 
  if ((reg & link_support) == 0U) {
    
#line 523 
    __retres = XGBE_AN_INCOMPAT_LINK;
    
#line 523 
    goto return_label;
  }
  else ;
  
#line 526 
  tmp_2 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200592);
  
#line 526 
  ad_reg = (unsigned int)tmp_2;
  
#line 527 
  tmp_3 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200595);
  
#line 527 
  lp_reg = (unsigned int)tmp_3;
  
#line 532 
  if (((unsigned long)ad_reg & 32768UL) != 0UL || ((unsigned long)lp_reg & 32768UL) != 0UL) {
    enum xgbe_an tmp_4;
    
#line 531 
    tmp_4 = xgbe_an_tx_xnp(pdata,state);
    
#line 532 
    tmp_6 = (unsigned int)tmp_4;
  }
  else {
    enum xgbe_an tmp_5;
    
#line 532 
    tmp_5 = xgbe_an_tx_training(pdata,state);
    
#line 532 
    tmp_6 = (unsigned int)tmp_5;
  }
  
#line 532 
  __retres = (enum xgbe_an)tmp_6;
  return_label: 
#line 532 
                return __retres;
}


#line 535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static enum xgbe_an xgbe_an_rx_xnp(struct xgbe_prv_data *pdata, enum xgbe_rx *state)
{
  enum xgbe_an __retres;
  unsigned int ad_reg;
  unsigned int lp_reg;
  int tmp;
  int tmp_0;
  unsigned int tmp_3;
  
#line 541 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200598);
  
#line 541 
  ad_reg = (unsigned int)tmp;
  
#line 542 
  tmp_0 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200601);
  
#line 542 
  lp_reg = (unsigned int)tmp_0;
  
#line 547 
  if (((unsigned long)ad_reg & 32768UL) != 0UL || ((unsigned long)lp_reg & 32768UL) != 0UL) {
    enum xgbe_an tmp_1;
    
#line 546 
    tmp_1 = xgbe_an_tx_xnp(pdata,state);
    
#line 547 
    tmp_3 = (unsigned int)tmp_1;
  }
  else {
    enum xgbe_an tmp_2;
    
#line 547 
    tmp_2 = xgbe_an_tx_training(pdata,state);
    
#line 547 
    tmp_3 = (unsigned int)tmp_2;
  }
  
#line 547 
  __retres = (enum xgbe_an)tmp_3;
  
#line 547 
  return __retres;
}


#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static enum xgbe_an xgbe_an_page_received(struct xgbe_prv_data *pdata)
{
  enum xgbe_rx *state;
  unsigned long an_timeout;
  enum xgbe_an ret;
  bool tmp_2;
  
#line 556 
  if (pdata->an_start == 0UL) 
#line 557 
                              pdata->an_start = jiffies;
  else {
    unsigned long tmp;
    int tmp_0;
    
#line 559 
    tmp = msecs_to_jiffies(500U);
    
#line 559 
    an_timeout = pdata->an_start + tmp;
    {
      unsigned long __dummy;
      unsigned long volatile __dummy2;
      
#line 561 
      tmp_0 = 1;
    }
    
#line 561 
    if (tmp_0 != 0) {
      int tmp_1;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 561 
        tmp_1 = 1;
      }
      
#line 561 
      if (tmp_1 != 0) {
        
#line 561 
        if ((long)(an_timeout - jiffies) < 0L) {
          
#line 563 
          pdata->kr_state = XGBE_RX_BPA;
          
#line 564 
          pdata->kx_state = XGBE_RX_BPA;
          
#line 566 
          pdata->an_start = jiffies;
          
#line 568 
          if ((pdata->msg_enable & 4U) != 0U) {
            
#line 568 
            struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_an_page_received", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "AN timed out, resetting state\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))569U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
            
#line 568 
            if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 568 
                                                                __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"AN timed out, resetting state\n"); else ;
          }
          else ;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 573 
  tmp_2 = xgbe_in_kr_mode(pdata);
  
#line 573 
  if ((int)tmp_2 != 0) 
#line 573 
                       state = & pdata->kr_state; else 
#line 573 
                                                       state = & pdata->kx_state;
  
#line 576 
  switch ((unsigned int)*state) {
    case (unsigned int)0: 
#line 577 
    ;
    
#line 578 
    ret = xgbe_an_rx_bpa(pdata,state);
    
#line 579 
    goto ldv_46102;
    case (unsigned int)1: 
#line 581 
    ;
    
#line 582 
    ret = xgbe_an_rx_xnp(pdata,state);
    
#line 583 
    goto ldv_46102;
    default: 
#line 585 
    ;
    
#line 586 
    ret = XGBE_AN_ERROR;
  }
  ldv_46102: 
#line 589 
  ;
  
#line 589 
  return ret;
}


#line 592  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static enum xgbe_an xgbe_an_incompat_link(struct xgbe_prv_data *pdata)
{
  enum xgbe_an __retres;
  bool tmp;
  
#line 595 
  tmp = xgbe_in_kr_mode(pdata);
  
#line 595 
  if ((int)tmp != 0) {
    
#line 596 
    pdata->kr_state = XGBE_RX_ERROR;
    
#line 598 
    if ((pdata->phy.advertising & 131072U) == 0U && (pdata->phy.advertising & 32768U) == 0U) {
      
#line 600 
      __retres = XGBE_AN_NO_LINK;
      
#line 600 
      goto return_label;
    }
    else ;
    
#line 602 
    if (pdata->kx_state != (unsigned int)XGBE_RX_BPA) {
      
#line 603 
      __retres = XGBE_AN_NO_LINK;
      
#line 603 
      goto return_label;
    }
    else ;
  }
  else {
    
#line 605 
    pdata->kx_state = XGBE_RX_ERROR;
    
#line 607 
    if ((pdata->phy.advertising & 524288U) == 0U) {
      
#line 608 
      __retres = XGBE_AN_NO_LINK;
      
#line 608 
      goto return_label;
    }
    else ;
    
#line 610 
    if (pdata->kr_state != (unsigned int)XGBE_RX_BPA) {
      
#line 611 
      __retres = XGBE_AN_NO_LINK;
      
#line 611 
      goto return_label;
    }
    else ;
  }
  
#line 614 
  xgbe_disable_an(pdata);
  
#line 616 
  xgbe_switch_mode(pdata);
  
#line 618 
  xgbe_restart_an(pdata);
  
#line 620 
  __retres = XGBE_AN_INCOMPAT_LINK;
  return_label: 
#line 620 
                return __retres;
}


#line 623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static irqreturn_t xgbe_an_isr(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 625 
  struct xgbe_prv_data *pdata = (struct xgbe_prv_data *)data;
  
#line 627 
  if ((pdata->msg_enable & 512U) != 0U) {
    
#line 627 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_an_isr", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "AN interrupt received\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))627U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 627 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 627 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"AN interrupt received\n"); else ;
  }
  else ;
  
#line 630 
  disable_irq_nosync((unsigned int)pdata->an_irq);
  
#line 632 
  ldv_queue_work_73(pdata->an_workqueue,& pdata->an_irq_work);
  
#line 634 
  __retres = IRQ_HANDLED;
  
#line 634 
  return __retres;
}


#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_an_irq_work(struct work_struct *work)
{
  struct xgbe_prv_data *tmp;
  {
    
#line 639 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 639 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709547064U;
  }
  
#line 639 
  struct xgbe_prv_data *pdata = tmp;
  
#line 646 
  ldv_flush_work_74(& pdata->an_work);
  
#line 647 
  ldv_queue_work_75(pdata->an_workqueue,& pdata->an_work);
  
#line 648 
  return;
}


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static char const *xgbe_state_as_string(enum xgbe_an state)
{
  char const *__retres;
  
#line 652 
  switch ((unsigned int)state) {
    case (unsigned int)0: 
#line 653 
    ;
    
#line 654 
    __retres = "Ready";
    
#line 654 
    goto return_label;
    case (unsigned int)1: 
#line 655 
    ;
    
#line 656 
    __retres = "Page-Received";
    
#line 656 
    goto return_label;
    case (unsigned int)2: 
#line 657 
    ;
    
#line 658 
    __retres = "Incompatible-Link";
    
#line 658 
    goto return_label;
    case (unsigned int)3: 
#line 659 
    ;
    
#line 660 
    __retres = "Complete";
    
#line 660 
    goto return_label;
    case (unsigned int)4: 
#line 661 
    ;
    
#line 662 
    __retres = "No-Link";
    
#line 662 
    goto return_label;
    case (unsigned int)5: 
#line 663 
    ;
    
#line 664 
    __retres = "Error";
    
#line 664 
    goto return_label;
    default: 
#line 665 
    ;
    
#line 666 
    __retres = "Undefined";
    
#line 666 
    goto return_label;
  }
  return_label: 
#line 652 
                return __retres;
}


#line 670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_an_state_machine(struct work_struct *work)
{
  struct xgbe_prv_data *tmp;
  unsigned int int_reg;
  unsigned int int_mask;
  int tmp_0;
  {
    
#line 672 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 672 
    tmp = (struct xgbe_prv_data *)__mptr + 18446744073709546728U;
  }
  
#line 672 
  struct xgbe_prv_data *pdata = tmp;
  
#line 675 
  enum xgbe_an cur_state = pdata->an_state;
  
#line 678 
  ldv_mutex_lock_76(& pdata->an_mutex);
  
#line 681 
  tmp_0 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074233346);
  
#line 681 
  int_reg = (unsigned int)tmp_0;
  
#line 682 
  if (int_reg == 0U) 
#line 683 
                     goto out; else ;
  next_int: 
#line 685 
  ;
  
#line 686 
  if ((int_reg & 4U) != 0U) {
    
#line 687 
    pdata->an_state = XGBE_AN_PAGE_RECEIVED;
    
#line 688 
    int_mask = 4U;
  }
  else 
    
#line 689 
    if ((int_reg & 2U) != 0U) {
      
#line 690 
      pdata->an_state = XGBE_AN_INCOMPAT_LINK;
      
#line 691 
      int_mask = 2U;
    }
    else 
      
#line 692 
      if ((int_reg & 1U) != 0U) {
        
#line 693 
        pdata->an_state = XGBE_AN_COMPLETE;
        
#line 694 
        int_mask = 1U;
      }
      else {
        
#line 696 
        pdata->an_state = XGBE_AN_ERROR;
        
#line 697 
        int_mask = 0U;
      }
  
#line 701 
  int_reg = ~ int_mask & int_reg;
  
#line 702 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074233346,(int)int_reg);
  
#line 704 
  pdata->an_result = pdata->an_state;
  again: 
#line 706 
  ;
  
#line 707 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 707 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_an_state_machine", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "AN %s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))708U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 707 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) {
      char const *tmp_1;
      
#line 707 
      tmp_1 = xgbe_state_as_string(pdata->an_state);
      
#line 707 
      ;
      
#line 707 
      __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"AN %s\n",tmp_1);
    }
    else ;
  }
  else ;
  
#line 710 
  cur_state = pdata->an_state;
  
#line 712 
  switch ((unsigned int)pdata->an_state) {
    case (unsigned int)0: 
#line 713 
    ;
    
#line 714 
    pdata->an_supported = 0U;
    
#line 715 
    goto ldv_46146;
    case (unsigned int)1: 
#line 717 
    ;
    
#line 718 
    pdata->an_state = xgbe_an_page_received(pdata);
    
#line 719 
    pdata->an_supported += 1U;
    
#line 720 
    goto ldv_46146;
    case (unsigned int)2: 
#line 722 
    ;
    
#line 723 
    pdata->an_supported = 0U;
    
#line 724 
    pdata->parallel_detect = 0U;
    
#line 725 
    pdata->an_state = xgbe_an_incompat_link(pdata);
    
#line 726 
    goto ldv_46146;
    case (unsigned int)3: 
#line 728 
    ;
    
#line 729 
    pdata->parallel_detect = (unsigned int)(pdata->an_supported == 0U);
    
#line 730 
    if ((pdata->msg_enable & 4U) != 0U) {
      
#line 730 
      struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_an_state_machine", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "%s successful\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))732U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 730 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) {
        char *tmp_2;
        
#line 730 
        if (pdata->an_supported != 0U) 
#line 730 
                                       tmp_2 = (char *)"Auto negotiation"; else 
                                                                    
#line 730 
                                                                    tmp_2 = (char *)"Parallel detection";
        
#line 730 
        ;
        
#line 730 
        __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)pdata->netdev,"%s successful\n",tmp_2);
      }
      else ;
    }
    else ;
    
#line 733 
    goto ldv_46146;
    case (unsigned int)4: 
#line 735 
    ;
    
#line 736 
    goto ldv_46146;
    default: 
#line 738 
    ;
    
#line 739 
    pdata->an_state = XGBE_AN_ERROR;
  }
  ldv_46146: 
#line 742 
  ;
  
#line 742 
  if (pdata->an_state == (unsigned int)XGBE_AN_NO_LINK) {
    
#line 743 
    int_reg = 0U;
    
#line 744 
    (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074233346,0);
  }
  else 
    
#line 745 
    if (pdata->an_state == (unsigned int)XGBE_AN_ERROR) {
      
#line 746 
      netdev_err((struct net_device const *)pdata->netdev,"error during auto-negotiation, state=%u\n",(unsigned int)cur_state);
      
#line 750 
      int_reg = 0U;
      
#line 751 
      (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074233346,0);
    }
    else ;
  
#line 754 
  if (pdata->an_state > (unsigned int)XGBE_AN_INCOMPAT_LINK) {
    
#line 755 
    pdata->an_result = pdata->an_state;
    
#line 756 
    pdata->an_state = XGBE_AN_READY;
    
#line 757 
    pdata->kr_state = XGBE_RX_BPA;
    
#line 758 
    pdata->kx_state = XGBE_RX_BPA;
    
#line 759 
    pdata->an_start = 0UL;
    
#line 761 
    if ((pdata->msg_enable & 4U) != 0U) {
      
#line 761 
      struct _ddebug descriptor_1 = {.modname = "amd_xgbe", .function = "xgbe_an_state_machine", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "AN result: %s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))762U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 761 
      if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) {
        char const *tmp_3;
        
#line 761 
        tmp_3 = xgbe_state_as_string(pdata->an_result);
        
#line 761 
        ;
        
#line 761 
        __dynamic_netdev_dbg(& descriptor_1,(struct net_device const *)pdata->netdev,"AN result: %s\n",tmp_3);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 765 
  if (pdata->an_state != cur_state) 
#line 766 
                                    goto again; else ;
  
#line 768 
  if (int_reg != 0U) 
#line 769 
                     goto next_int; else ;
  out: 
#line 771 
  ;
  
#line 772 
  enable_irq((unsigned int)pdata->an_irq);
  
#line 774 
  ldv_mutex_unlock_77(& pdata->an_mutex);
  
#line 775 
  return;
}


#line 777  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_an_init(struct xgbe_prv_data *pdata)
{
  unsigned int reg;
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 782 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200594);
  
#line 782 
  reg = (unsigned int)tmp;
  
#line 783 
  if ((pdata->phy.advertising & 1048576U) != 0U) 
#line 784 
                                                 reg |= 49152U; else 
                                                                  
#line 786 
                                                                  reg &= 4294918143U;
  
#line 788 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074200594,(int)reg);
  
#line 791 
  tmp_0 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200593);
  
#line 791 
  reg = (unsigned int)tmp_0;
  
#line 792 
  if ((pdata->phy.advertising & 524288U) != 0U) 
#line 793 
                                                reg |= 128U; else 
#line 795 
                                                                  reg &= 4294967167U;
  
#line 797 
  if ((pdata->phy.advertising & 131072U) != 0U || (pdata->phy.advertising & 32768U) != 0U) 
    
#line 799 
    reg |= 32U; else 
#line 801 
                     reg &= 4294967263U;
  
#line 803 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074200593,(int)reg);
  
#line 806 
  tmp_1 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200592);
  
#line 806 
  reg = (unsigned int)tmp_1;
  
#line 807 
  if ((pdata->phy.advertising & 8192U) != 0U) 
#line 808 
                                              reg |= 1024U; else 
#line 810 
                                                                 reg &= 4294966271U;
  
#line 812 
  if ((pdata->phy.advertising & 16384U) != 0U) 
#line 813 
                                               reg |= 2048U; else 
#line 815 
                                                                  reg &= 4294965247U;
  
#line 818 
  reg &= 4294934527U;
  
#line 820 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074200592,(int)reg);
  
#line 822 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 822 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_an_init", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "AN initialized\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))822U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 822 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 822 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"AN initialized\n"); else ;
  }
  else ;
  
#line 824 
  return;
}


#line 825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static char const *xgbe_phy_fc_string(struct xgbe_prv_data *pdata)
{
  char const *__retres;
  
#line 827 
  if (pdata->tx_pause != 0U && pdata->rx_pause != 0U) {
    
#line 828 
    __retres = "rx/tx";
    
#line 828 
    goto return_label;
  }
  else 
    
#line 829 
    if (pdata->rx_pause != 0U) {
      
#line 830 
      __retres = "rx";
      
#line 830 
      goto return_label;
    }
    else 
      
#line 831 
      if (pdata->tx_pause != 0U) {
        
#line 832 
        __retres = "tx";
        
#line 832 
        goto return_label;
      }
      else {
        
#line 834 
        __retres = "off";
        
#line 834 
        goto return_label;
      }
  return_label: 
#line 827 
                return __retres;
}


#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static char const *xgbe_phy_speed_string(int speed)
{
  char const *__retres;
  
#line 839 
  switch (speed) {
    case 1000: 
#line 840 
    ;
    
#line 841 
    __retres = "1Gbps";
    
#line 841 
    goto return_label;
    case 2500: 
#line 842 
    ;
    
#line 843 
    __retres = "2.5Gbps";
    
#line 843 
    goto return_label;
    case 10000: 
#line 844 
    ;
    
#line 845 
    __retres = "10Gbps";
    
#line 845 
    goto return_label;
    case -1: 
#line 846 
    ;
    
#line 847 
    __retres = "Unknown";
    
#line 847 
    goto return_label;
    default: 
#line 848 
    ;
    
#line 849 
    __retres = "Unsupported";
    
#line 849 
    goto return_label;
  }
  return_label: 
#line 839 
                return __retres;
}


#line 853  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_phy_print_status(struct xgbe_prv_data *pdata)
{
  
#line 855 
  if (pdata->phy.link != 0) {
    char const *tmp;
    char *tmp_0;
    char const *tmp_1;
    
#line 859 
    tmp = xgbe_phy_fc_string(pdata);
    
#line 858 
    if (pdata->phy.duplex == 1) 
#line 858 
                                tmp_0 = (char *)"Full"; else 
#line 858 
                                                             tmp_0 = (char *)"Half";
    
#line 857 
    tmp_1 = xgbe_phy_speed_string(pdata->phy.speed);
    
#line 856 
    ;
    
#line 856 
    netdev_info((struct net_device const *)pdata->netdev,"Link is Up - %s/%s - flow control %s\n",tmp_1,tmp_0,tmp);
  }
  else 
#line 862 
       netdev_info((struct net_device const *)pdata->netdev,"Link is Down\n");
  
#line 863 
  return;
}


#line 865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_phy_adjust_link(struct xgbe_prv_data *pdata)
{
  
#line 867 
  int new_state = 0;
  
#line 869 
  if (pdata->phy.link != 0) {
    
#line 871 
    pdata->pause_autoneg = (unsigned int)pdata->phy.pause_autoneg;
    
#line 873 
    if (pdata->tx_pause != (unsigned int)pdata->phy.tx_pause) {
      
#line 874 
      new_state = 1;
      
#line 875 
      (*(pdata->hw_if.config_tx_flow_control))(pdata);
      
#line 876 
      pdata->tx_pause = (unsigned int)pdata->phy.tx_pause;
    }
    else ;
    
#line 879 
    if (pdata->rx_pause != (unsigned int)pdata->phy.rx_pause) {
      
#line 880 
      new_state = 1;
      
#line 881 
      (*(pdata->hw_if.config_rx_flow_control))(pdata);
      
#line 882 
      pdata->rx_pause = (unsigned int)pdata->phy.rx_pause;
    }
    else ;
    
#line 886 
    if (pdata->phy_speed != pdata->phy.speed) {
      
#line 887 
      new_state = 1;
      
#line 888 
      pdata->phy_speed = pdata->phy.speed;
    }
    else ;
    
#line 891 
    if (pdata->phy_link != pdata->phy.link) {
      
#line 892 
      new_state = 1;
      
#line 893 
      pdata->phy_link = pdata->phy.link;
    }
    else ;
  }
  else 
    
#line 895 
    if (pdata->phy_link != 0) {
      
#line 896 
      new_state = 1;
      
#line 897 
      pdata->phy_link = 0;
      
#line 898 
      pdata->phy_speed = -1;
    }
    else ;
  
#line 901 
  if (new_state != 0 && (pdata->msg_enable & 4U) != 0U) 
#line 902 
                                                        xgbe_phy_print_status(pdata); else ;
  
#line 903 
  return;
}


#line 905  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static int xgbe_phy_config_fixed(struct xgbe_prv_data *pdata)
{
  int __retres;
  
#line 907 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 907 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_phy_config_fixed", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "fixed PHY configuration\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))907U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 907 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 907 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"fixed PHY configuration\n"); else ;
  }
  else ;
  
#line 910 
  xgbe_disable_an(pdata);
  
#line 913 
  switch (pdata->phy.speed) {
    case 10000: 
#line 914 
    ;
    
#line 915 
    xgbe_set_mode(pdata,(enum xgbe_mode)XGBE_MODE_KR);
    
#line 916 
    goto ldv_46184;
    case 2500: 
#line 918 
    ;
    case 1000: 
#line 919 
    ;
    
#line 920 
    xgbe_set_mode(pdata,(enum xgbe_mode)XGBE_MODE_KX);
    
#line 921 
    goto ldv_46184;
    default: 
#line 923 
    ;
    
#line 924 
    __retres = -22;
    
#line 924 
    goto return_label;
  }
  ldv_46184: 
#line 928 
  ;
  
#line 928 
  if (pdata->phy.duplex != 1) {
    
#line 929 
    __retres = -22;
    
#line 929 
    goto return_label;
  }
  else ;
  
#line 931 
  __retres = 0;
  return_label: 
#line 931 
                return __retres;
}


#line 934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static int __xgbe_phy_config_aneg(struct xgbe_prv_data *pdata)
{
  int __retres;
  
#line 936 
  set_bit(2L,(unsigned long volatile *)(& pdata->dev_state));
  
#line 937 
  pdata->link_check = jiffies;
  
#line 939 
  if (pdata->phy.autoneg != 1) {
    int tmp;
    
#line 940 
    tmp = xgbe_phy_config_fixed(pdata);
    
#line 940 
    __retres = tmp;
    
#line 940 
    goto return_label;
  }
  else ;
  
#line 942 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 942 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "__xgbe_phy_config_aneg", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "AN PHY configuration\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))942U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 942 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 942 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"AN PHY configuration\n"); else ;
  }
  else ;
  
#line 945 
  disable_irq((unsigned int)pdata->an_irq);
  
#line 948 
  if ((pdata->phy.advertising & 524288U) != 0U) 
#line 949 
                                                xgbe_set_mode(pdata,(enum xgbe_mode)XGBE_MODE_KR);
  else 
    
#line 950 
    if ((pdata->phy.advertising & 131072U) != 0U || (pdata->phy.advertising & 32768U) != 0U) 
      
#line 952 
      xgbe_set_mode(pdata,(enum xgbe_mode)XGBE_MODE_KX);
    else {
      
#line 954 
      enable_irq((unsigned int)pdata->an_irq);
      
#line 955 
      __retres = -22;
      
#line 955 
      goto return_label;
    }
  
#line 959 
  xgbe_disable_an(pdata);
  
#line 962 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074233346,0);
  
#line 964 
  pdata->an_result = XGBE_AN_READY;
  
#line 965 
  pdata->an_state = XGBE_AN_READY;
  
#line 966 
  pdata->kr_state = XGBE_RX_BPA;
  
#line 967 
  pdata->kx_state = XGBE_RX_BPA;
  
#line 970 
  enable_irq((unsigned int)pdata->an_irq);
  
#line 973 
  xgbe_an_init(pdata);
  
#line 976 
  xgbe_restart_an(pdata);
  
#line 978 
  __retres = 0;
  return_label: 
#line 978 
                return __retres;
}


#line 981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static int xgbe_phy_config_aneg(struct xgbe_prv_data *pdata)
{
  int ret;
  
#line 985 
  ldv_mutex_lock_78(& pdata->an_mutex);
  
#line 987 
  ret = __xgbe_phy_config_aneg(pdata);
  
#line 988 
  if (ret != 0) 
#line 989 
                set_bit(3L,(unsigned long volatile *)(& pdata->dev_state)); else 
                                                                    
#line 991 
                                                                    set_bit(3L,(unsigned long volatile *)(& pdata->dev_state));
  
#line 993 
  ldv_mutex_unlock_79(& pdata->an_mutex);
  
#line 995 
  return ret;
}


#line 998  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static bool xgbe_phy_aneg_done(struct xgbe_prv_data *pdata)
{
  bool __retres;
  
#line 1000 
  __retres = (_Bool)(pdata->an_result == (unsigned int)XGBE_AN_COMPLETE);
  
#line 1000 
  return __retres;
}


#line 1003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_check_link_timeout(struct xgbe_prv_data *pdata)
{
  unsigned long link_timeout;
  int tmp;
  
#line 1007 
  link_timeout = pdata->link_check + 2500UL;
  {
    unsigned long __dummy;
    unsigned long volatile __dummy2;
    
#line 1008 
    tmp = 1;
  }
  
#line 1008 
  if (tmp != 0) {
    int tmp_0;
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
#line 1008 
      tmp_0 = 1;
    }
    
#line 1008 
    if (tmp_0 != 0) {
      
#line 1008 
      if ((long)(link_timeout - jiffies) < 0L) {
        
#line 1009 
        if ((pdata->msg_enable & 4U) != 0U) {
          
#line 1009 
          struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_check_link_timeout", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "AN link timeout\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1009U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 1009 
          if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1009 
                                                              __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"AN link timeout\n"); else ;
        }
        else ;
        
#line 1010 
        xgbe_phy_config_aneg(pdata);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1012 
  return;
}


#line 1014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_phy_status_force(struct xgbe_prv_data *pdata)
{
  bool tmp;
  
#line 1016 
  tmp = xgbe_in_kr_mode(pdata);
  
#line 1016 
  if ((int)tmp != 0) 
#line 1017 
                     pdata->phy.speed = 10000;
  else {
    
#line 1019 
    switch (pdata->speed_set) {
      case (unsigned int)0: 
#line 1020 
      ;
      
#line 1021 
      pdata->phy.speed = 1000;
      
#line 1022 
      goto ldv_46216;
      case (unsigned int)1: 
#line 1024 
      ;
      
#line 1025 
      pdata->phy.speed = 2500;
      
#line 1026 
      goto ldv_46216;
    }
    ldv_46216: 
#line 1028 
    ;
  }
  
#line 1029 
  pdata->phy.duplex = 1;
  
#line 1030 
  return;
}


#line 1032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_phy_status_aneg(struct xgbe_prv_data *pdata)
{
  unsigned int ad_reg;
  unsigned int lp_reg;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  
#line 1036 
  pdata->phy.lp_advertising = 0U;
  
#line 1038 
  if (pdata->phy.autoneg != 1 || pdata->parallel_detect != 0U) 
#line 1039 
                                                               xgbe_phy_status_force(pdata); else ;
  
#line 1041 
  pdata->phy.lp_advertising |= 64U;
  
#line 1042 
  pdata->phy.lp_advertising |= 65536U;
  
#line 1045 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200592);
  
#line 1045 
  ad_reg = (unsigned int)tmp;
  
#line 1046 
  tmp_0 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200595);
  
#line 1046 
  lp_reg = (unsigned int)tmp_0;
  
#line 1047 
  if ((lp_reg & 1024U) != 0U) 
#line 1048 
                              pdata->phy.lp_advertising |= 8192U; else ;
  
#line 1049 
  if ((lp_reg & 2048U) != 0U) 
#line 1050 
                              pdata->phy.lp_advertising |= 16384U; else ;
  
#line 1052 
  if (pdata->phy.pause_autoneg != 0) {
    
#line 1054 
    pdata->phy.tx_pause = 0;
    
#line 1055 
    pdata->phy.rx_pause = 0;
    
#line 1057 
    if (((ad_reg & lp_reg) & 1024U) != 0U) {
      
#line 1058 
      pdata->phy.tx_pause = 1;
      
#line 1059 
      pdata->phy.rx_pause = 1;
    }
    else 
      
#line 1060 
      if (((ad_reg & lp_reg) & 2048U) != 0U) {
        
#line 1061 
        if ((ad_reg & 1024U) != 0U) 
#line 1062 
                                    pdata->phy.rx_pause = 1;
        else 
          
#line 1063 
          if ((lp_reg & 1024U) != 0U) 
#line 1064 
                                      pdata->phy.tx_pause = 1; else ;
      }
      else ;
  }
  else ;
  
#line 1069 
  tmp_1 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200593);
  
#line 1069 
  ad_reg = (unsigned int)tmp_1;
  
#line 1070 
  tmp_2 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200596);
  
#line 1070 
  lp_reg = (unsigned int)tmp_2;
  
#line 1071 
  if ((lp_reg & 128U) != 0U) 
#line 1072 
                             pdata->phy.lp_advertising |= 524288U; else ;
  
#line 1073 
  if ((lp_reg & 32U) != 0U) {
    
#line 1074 
    switch (pdata->speed_set) {
      case (unsigned int)0: 
#line 1075 
      ;
      
#line 1076 
      pdata->phy.lp_advertising |= 131072U;
      
#line 1077 
      goto ldv_46224;
      case (unsigned int)1: 
#line 1078 
      ;
      
#line 1079 
      pdata->phy.lp_advertising |= 32768U;
      
#line 1080 
      goto ldv_46224;
    }
    ldv_46224: 
#line 1082 
    ;
  }
  else ;
  
#line 1084 
  ad_reg &= lp_reg;
  
#line 1085 
  if ((ad_reg & 128U) != 0U) {
    
#line 1086 
    pdata->phy.speed = 10000;
    
#line 1087 
    xgbe_set_mode(pdata,(enum xgbe_mode)XGBE_MODE_KR);
  }
  else 
    
#line 1088 
    if ((ad_reg & 32U) != 0U) {
      
#line 1089 
      switch (pdata->speed_set) {
        case (unsigned int)0: 
#line 1090 
        ;
        
#line 1091 
        pdata->phy.speed = 1000;
        
#line 1092 
        goto ldv_46227;
        case (unsigned int)1: 
#line 1094 
        ;
        
#line 1095 
        pdata->phy.speed = 2500;
        
#line 1096 
        goto ldv_46227;
      }
      ldv_46227: 
#line 1099 
      ;
      
#line 1099 
      xgbe_set_mode(pdata,(enum xgbe_mode)XGBE_MODE_KX);
    }
    else 
#line 1101 
         pdata->phy.speed = -1;
  
#line 1105 
  tmp_3 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200594);
  
#line 1105 
  ad_reg = (unsigned int)tmp_3;
  
#line 1106 
  tmp_4 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200597);
  
#line 1106 
  lp_reg = (unsigned int)tmp_4;
  
#line 1107 
  if ((lp_reg & 49152U) != 0U) 
#line 1108 
                               pdata->phy.lp_advertising |= 1048576U; else ;
  
#line 1110 
  pdata->phy.duplex = 1;
  
#line 1111 
  return;
}


#line 1113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_phy_status(struct xgbe_prv_data *pdata)
{
  unsigned int reg;
  unsigned int link_aneg;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 1117 
  tmp_0 = constant_test_bit(3L,(unsigned long const volatile *)(& pdata->dev_state));
  
#line 1117 
  if (tmp_0 != 0) {
    int tmp;
    
#line 1118 
    tmp = test_and_set_bit(1L,(unsigned long volatile *)(& pdata->dev_state));
    
#line 1118 
    if (tmp != 0) 
#line 1119 
                  netif_carrier_off(pdata->netdev); else ;
    
#line 1121 
    pdata->phy.link = 0;
    
#line 1122 
    goto adjust_link;
  }
  else ;
  
#line 1125 
  link_aneg = (unsigned int)(pdata->phy.autoneg == 1);
  
#line 1130 
  tmp_1 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938433);
  
#line 1130 
  reg = (unsigned int)tmp_1;
  
#line 1131 
  tmp_2 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938433);
  
#line 1131 
  reg = (unsigned int)tmp_2;
  
#line 1132 
  pdata->phy.link = (int)(reg >> 2) & 1;
  
#line 1134 
  if (pdata->phy.link != 0) {
    int tmp_5;
    int tmp_6;
    
#line 1135 
    if (link_aneg != 0U) {
      int tmp_4;
      bool tmp_3;
      
#line 1135 
      tmp_3 = xgbe_phy_aneg_done(pdata);
      
#line 1135 
      if (tmp_3) 
#line 1135 
                 tmp_4 = 0; else 
#line 1135 
                                 tmp_4 = 1;
      
#line 1135 
      if (tmp_4) {
        
#line 1136 
        xgbe_check_link_timeout(pdata);
        
#line 1137 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 1140 
    xgbe_phy_status_aneg(pdata);
    
#line 1142 
    tmp_5 = constant_test_bit(2L,(unsigned long const volatile *)(& pdata->dev_state));
    
#line 1142 
    if (tmp_5 != 0) 
#line 1143 
                    set_bit(2L,(unsigned long volatile *)(& pdata->dev_state)); else ;
    
#line 1145 
    tmp_6 = constant_test_bit(1L,(unsigned long const volatile *)(& pdata->dev_state));
    
#line 1145 
    if (tmp_6 == 0) {
      
#line 1146 
      set_bit(1L,(unsigned long volatile *)(& pdata->dev_state));
      
#line 1147 
      netif_carrier_on(pdata->netdev);
    }
    else ;
  }
  else {
    int tmp_7;
    int tmp_8;
    
#line 1150 
    tmp_7 = constant_test_bit(2L,(unsigned long const volatile *)(& pdata->dev_state));
    
#line 1150 
    if (tmp_7 != 0) {
      
#line 1151 
      xgbe_check_link_timeout(pdata);
      
#line 1153 
      if (link_aneg != 0U) 
#line 1154 
                           goto return_label; else ;
    }
    else ;
    
#line 1157 
    xgbe_phy_status_aneg(pdata);
    
#line 1159 
    tmp_8 = constant_test_bit(1L,(unsigned long const volatile *)(& pdata->dev_state));
    
#line 1159 
    if (tmp_8 != 0) {
      
#line 1160 
      set_bit(1L,(unsigned long volatile *)(& pdata->dev_state));
      
#line 1161 
      netif_carrier_off(pdata->netdev);
    }
    else ;
  }
  adjust_link: 
#line 1165 
  ;
  
#line 1166 
  xgbe_phy_adjust_link(pdata);
  return_label: 
#line 1167 
                return;
}


#line 1169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_phy_stop(struct xgbe_prv_data *pdata)
{
  int tmp;
  
#line 1171 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 1171 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_phy_stop", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "stopping PHY\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1171U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1171 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1171 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"stopping PHY\n"); else ;
  }
  else ;
  
#line 1174 
  xgbe_disable_an(pdata);
  
#line 1177 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074233345,0);
  
#line 1179 
  ldv_devm_free_irq_80(pdata->dev,(unsigned int)pdata->an_irq,(void *)pdata);
  
#line 1181 
  pdata->phy.link = 0;
  
#line 1182 
  tmp = test_and_set_bit(1L,(unsigned long volatile *)(& pdata->dev_state));
  
#line 1182 
  if (tmp != 0) 
#line 1183 
                netif_carrier_off(pdata->netdev); else ;
  
#line 1185 
  xgbe_phy_adjust_link(pdata);
  
#line 1186 
  return;
}


#line 1188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static int xgbe_phy_start(struct xgbe_prv_data *pdata)
{
  int __retres;
  int ret;
  bool tmp_1;
  int tmp_2;
  
#line 1190 
  struct net_device *netdev = pdata->netdev;
  
#line 1193 
  if ((pdata->msg_enable & 4U) != 0U) {
    
#line 1193 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_phy_start", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "starting PHY\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1193U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1193 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1193 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)pdata->netdev,"starting PHY\n"); else ;
  }
  else ;
  
#line 1195 
  ret = devm_request_irq(pdata->dev,(unsigned int)pdata->an_irq,& xgbe_an_isr,0UL,(char const *)(& pdata->an_name),(void *)pdata);
  
#line 1198 
  if (ret != 0) {
    
#line 1199 
    netdev_err((struct net_device const *)netdev,"phy irq request failed\n");
    
#line 1200 
    __retres = ret;
    
#line 1200 
    goto return_label;
  }
  else ;
  
#line 1206 
  tmp_1 = xgbe_use_xgmii_mode(pdata);
  
#line 1206 
  if ((int)tmp_1 != 0) 
#line 1207 
                       xgbe_xgmii_mode(pdata);
  else {
    bool tmp_0;
    
#line 1208 
    tmp_0 = xgbe_use_gmii_mode(pdata);
    
#line 1208 
    if ((int)tmp_0 != 0) 
#line 1209 
                         xgbe_gmii_mode(pdata);
    else {
      bool tmp;
      
#line 1210 
      tmp = xgbe_use_gmii_2500_mode(pdata);
      
#line 1210 
      if ((int)tmp != 0) 
#line 1211 
                         xgbe_gmii_2500_mode(pdata);
      else {
        
#line 1213 
        ret = -22;
        
#line 1214 
        goto err_irq;
      }
    }
  }
  
#line 1218 
  xgbe_an_init(pdata);
  
#line 1221 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074233345,7);
  
#line 1223 
  tmp_2 = xgbe_phy_config_aneg(pdata);
  
#line 1223 
  __retres = tmp_2;
  
#line 1223 
  goto return_label;
  err_irq: 
#line 1225 
  ;
  
#line 1226 
  ldv_devm_free_irq_81_0(pdata->dev,(unsigned int)pdata->an_irq,(void *)pdata);
  
#line 1228 
  __retres = ret;
  return_label: 
#line 1228 
                return __retres;
}


#line 1231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static int xgbe_phy_reset(struct xgbe_prv_data *pdata)
{
  int __retres;
  unsigned int count;
  unsigned int reg;
  int tmp;
  int tmp_0;
  
#line 1235 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938432);
  
#line 1235 
  reg = (unsigned int)tmp;
  
#line 1236 
  reg |= 32768U;
  
#line 1237 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1073938432,(int)reg);
  
#line 1239 
  count = 50U;
  ldv_46253: 
#line 1240 
  ;
  
#line 1241 
  msleep(20U);
  
#line 1242 
  tmp_0 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938432);
  
#line 1242 
  reg = (unsigned int)tmp_0;
  
#line 1243 
  if ((reg & 32768U) != 0U) {
    
#line 1243 
    count -= 1U;
    
#line 1243 
    if (count != 0U) 
#line 1245 
                     goto ldv_46253; else 
#line 1248 
                                          goto ldv_46254;
  }
  else 
#line 1248 
       goto ldv_46254;
  ldv_46254: 
#line 1249 
  ;
  
#line 1245 
  if ((reg & 32768U) != 0U) {
    
#line 1246 
    __retres = -110;
    
#line 1246 
    goto return_label;
  }
  else ;
  
#line 1249 
  xgbe_disable_an(pdata);
  
#line 1252 
  (*(pdata->hw_if.write_mmd_regs))(pdata,0,1074233346,0);
  
#line 1254 
  __retres = 0;
  return_label: 
#line 1254 
                return __retres;
}


#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_dump_phy_registers(struct xgbe_prv_data *pdata)
{
  
#line 1259 
  struct device *dev = pdata->dev;
  {
    
#line 1261 
    struct _ddebug descriptor = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "\n************* PHY Reg dump **********************\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1261U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1261 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1261 
                                                        __dynamic_dev_dbg(& descriptor,(struct device const *)dev,"\n************* PHY Reg dump **********************\n"); else ;
  }
  {
    
#line 1263 
    struct _ddebug descriptor_0 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "PCS Control Reg (%#04x) = %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1264U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1263 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) {
      int tmp;
      
#line 1263 
      tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938432);
      
#line 1263 
      ;
      
#line 1263 
      __dynamic_dev_dbg(& descriptor_0,(struct device const *)dev,"PCS Control Reg (%#04x) = %#04x\n",0,tmp);
    }
    else ;
  }
  {
    
#line 1265 
    struct _ddebug descriptor_1 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "PCS Status Reg (%#04x) = %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1266U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1265 
    if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) {
      int tmp_0;
      
#line 1265 
      tmp_0 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938433);
      
#line 1265 
      ;
      
#line 1265 
      __dynamic_dev_dbg(& descriptor_1,(struct device const *)dev,"PCS Status Reg (%#04x) = %#04x\n",1,tmp_0);
    }
    else ;
  }
  {
    
#line 1267 
    struct _ddebug descriptor_2 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Phy Id (PHYS ID 1 %#04x)= %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1268U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1267 
    if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) {
      int tmp_1;
      
#line 1267 
      tmp_1 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938434);
      
#line 1267 
      ;
      
#line 1267 
      __dynamic_dev_dbg(& descriptor_2,(struct device const *)dev,"Phy Id (PHYS ID 1 %#04x)= %#04x\n",2,tmp_1);
    }
    else ;
  }
  {
    
#line 1269 
    struct _ddebug descriptor_3 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Phy Id (PHYS ID 2 %#04x)= %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1270U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1269 
    if ((long)(((int)descriptor_3.flags & 1) != 0) != 0L) {
      int tmp_2;
      
#line 1269 
      tmp_2 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938435);
      
#line 1269 
      ;
      
#line 1269 
      __dynamic_dev_dbg(& descriptor_3,(struct device const *)dev,"Phy Id (PHYS ID 2 %#04x)= %#04x\n",3,tmp_2);
    }
    else ;
  }
  {
    
#line 1271 
    struct _ddebug descriptor_4 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Devices in Package (%#04x)= %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1272U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1271 
    if ((long)(((int)descriptor_4.flags & 1) != 0) != 0L) {
      int tmp_3;
      
#line 1271 
      tmp_3 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938437);
      
#line 1271 
      ;
      
#line 1271 
      __dynamic_dev_dbg(& descriptor_4,(struct device const *)dev,"Devices in Package (%#04x)= %#04x\n",5,tmp_3);
    }
    else ;
  }
  {
    
#line 1273 
    struct _ddebug descriptor_5 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Devices in Package (%#04x)= %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1274U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1273 
    if ((long)(((int)descriptor_5.flags & 1) != 0) != 0L) {
      int tmp_4;
      
#line 1273 
      tmp_4 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073938438);
      
#line 1273 
      ;
      
#line 1273 
      __dynamic_dev_dbg(& descriptor_5,(struct device const *)dev,"Devices in Package (%#04x)= %#04x\n",6,tmp_4);
    }
    else ;
  }
  {
    
#line 1276 
    struct _ddebug descriptor_6 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Auto-Neg Control Reg (%#04x) = %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1277U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1276 
    if ((long)(((int)descriptor_6.flags & 1) != 0) != 0L) {
      int tmp_5;
      
#line 1276 
      tmp_5 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200576);
      
#line 1276 
      ;
      
#line 1276 
      __dynamic_dev_dbg(& descriptor_6,(struct device const *)dev,"Auto-Neg Control Reg (%#04x) = %#04x\n",0,tmp_5);
    }
    else ;
  }
  {
    
#line 1278 
    struct _ddebug descriptor_7 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Auto-Neg Status Reg (%#04x) = %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1279U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1278 
    if ((long)(((int)descriptor_7.flags & 1) != 0) != 0L) {
      int tmp_6;
      
#line 1278 
      tmp_6 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200577);
      
#line 1278 
      ;
      
#line 1278 
      __dynamic_dev_dbg(& descriptor_7,(struct device const *)dev,"Auto-Neg Status Reg (%#04x) = %#04x\n",1,tmp_6);
    }
    else ;
  }
  {
    
#line 1280 
    struct _ddebug descriptor_8 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Auto-Neg Ad Reg 1 (%#04x) = %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1282U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1280 
    if ((long)(((int)descriptor_8.flags & 1) != 0) != 0L) {
      int tmp_7;
      
#line 1280 
      tmp_7 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200592);
      
#line 1280 
      ;
      
#line 1280 
      __dynamic_dev_dbg(& descriptor_8,(struct device const *)dev,"Auto-Neg Ad Reg 1 (%#04x) = %#04x\n",16,tmp_7);
    }
    else ;
  }
  {
    
#line 1283 
    struct _ddebug descriptor_9 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Auto-Neg Ad Reg 2 (%#04x) = %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1285U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1283 
    if ((long)(((int)descriptor_9.flags & 1) != 0) != 0L) {
      int tmp_8;
      
#line 1283 
      tmp_8 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200593);
      
#line 1283 
      ;
      
#line 1283 
      __dynamic_dev_dbg(& descriptor_9,(struct device const *)dev,"Auto-Neg Ad Reg 2 (%#04x) = %#04x\n",17,tmp_8);
    }
    else ;
  }
  {
    
#line 1286 
    struct _ddebug descriptor_10 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Auto-Neg Ad Reg 3 (%#04x) = %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1288U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1286 
    if ((long)(((int)descriptor_10.flags & 1) != 0) != 0L) {
      int tmp_9;
      
#line 1286 
      tmp_9 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200594);
      
#line 1286 
      ;
      
#line 1286 
      __dynamic_dev_dbg(& descriptor_10,(struct device const *)dev,"Auto-Neg Ad Reg 3 (%#04x) = %#04x\n",18,tmp_9);
    }
    else ;
  }
  {
    
#line 1289 
    struct _ddebug descriptor_11 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "Auto-Neg Completion Reg (%#04x) = %#04x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1291U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1289 
    if ((long)(((int)descriptor_11.flags & 1) != 0) != 0L) {
      int tmp_10;
      
#line 1289 
      tmp_10 = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1074200624);
      
#line 1289 
      ;
      
#line 1289 
      __dynamic_dev_dbg(& descriptor_11,(struct device const *)dev,"Auto-Neg Completion Reg (%#04x) = %#04x\n",48,tmp_10);
    }
    else ;
  }
  {
    
#line 1293 
    struct _ddebug descriptor_12 = {.modname = "amd_xgbe", .function = "xgbe_dump_phy_registers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c", .format = "\n*************************************************\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1293U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1293 
    if ((long)(((int)descriptor_12.flags & 1) != 0) != 0L) 
#line 1293 
                                                           __dynamic_dev_dbg(& descriptor_12,(struct device const *)dev,"\n*************************************************\n"); else ;
  }
  
#line 1295 
  return;
}


#line 1296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
static void xgbe_phy_init_0(struct xgbe_prv_data *pdata)
{
  int tmp;
  {
    struct lock_class_key __key;
    
#line 1298 
    __mutex_init(& pdata->an_mutex,"&pdata->an_mutex",& __key);
  }
  {
    struct lock_class_key __key_0;
    
#line 1299 
    __init_work(& pdata->an_irq_work,0);
    
#line 1299 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 1299 
    pdata->an_irq_work.data = __constr_expr_37;
    
#line 1299 
    lockdep_init_map(& pdata->an_irq_work.lockdep_map,"(&pdata->an_irq_work)",& __key_0,0);
    
#line 1299 
    INIT_LIST_HEAD(& pdata->an_irq_work.entry);
    
#line 1299 
    pdata->an_irq_work.func = & xgbe_an_irq_work;
  }
  {
    struct lock_class_key __key_1;
    
#line 1300 
    __init_work(& pdata->an_work,0);
    
#line 1300 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 1300 
    pdata->an_work.data = __constr_expr_38;
    
#line 1300 
    lockdep_init_map(& pdata->an_work.lockdep_map,"(&pdata->an_work)",& __key_1,0);
    
#line 1300 
    INIT_LIST_HEAD(& pdata->an_work.entry);
    
#line 1300 
    pdata->an_work.func = & xgbe_an_state_machine;
  }
  
#line 1301 
  pdata->mdio_mmd = 3;
  
#line 1304 
  pdata->phy.supported = 64U;
  
#line 1305 
  pdata->phy.supported |= 24576U;
  
#line 1306 
  pdata->phy.supported |= 65536U;
  
#line 1307 
  pdata->phy.supported |= 524288U;
  
#line 1308 
  switch (pdata->speed_set) {
    case (unsigned int)0: 
#line 1309 
    ;
    
#line 1310 
    pdata->phy.supported |= 131072U;
    
#line 1311 
    goto ldv_46283;
    case (unsigned int)1: 
#line 1312 
    ;
    
#line 1313 
    pdata->phy.supported |= 32768U;
    
#line 1314 
    goto ldv_46283;
  }
  ldv_46283: 
#line 1317 
  ;
  
#line 1317 
  tmp = (*(pdata->hw_if.read_mmd_regs))(pdata,0,1073807530);
  
#line 1317 
  pdata->fec_ability = (unsigned int)tmp;
  
#line 1319 
  pdata->fec_ability &= 3U;
  
#line 1321 
  if ((pdata->fec_ability & 1U) != 0U) 
#line 1322 
                                       pdata->phy.supported |= 1048576U; else ;
  
#line 1324 
  pdata->phy.advertising = pdata->phy.supported;
  
#line 1326 
  pdata->phy.address = 0;
  
#line 1328 
  pdata->phy.autoneg = 1;
  
#line 1329 
  pdata->phy.speed = -1;
  
#line 1330 
  pdata->phy.duplex = 255;
  
#line 1332 
  pdata->phy.link = 0;
  
#line 1334 
  pdata->phy.pause_autoneg = (int)pdata->pause_autoneg;
  
#line 1335 
  pdata->phy.tx_pause = (int)pdata->tx_pause;
  
#line 1336 
  pdata->phy.rx_pause = (int)pdata->rx_pause;
  
#line 1339 
  pdata->phy.advertising &= 4294959103U;
  
#line 1340 
  pdata->phy.advertising &= 4294950911U;
  
#line 1342 
  if (pdata->rx_pause != 0U) {
    
#line 1343 
    pdata->phy.advertising |= 8192U;
    
#line 1344 
    pdata->phy.advertising |= 16384U;
  }
  else ;
  
#line 1347 
  if (pdata->tx_pause != 0U) 
#line 1348 
                             pdata->phy.advertising ^= 16384U; else ;
  
#line 1350 
  if ((pdata->msg_enable & 1U) != 0U) 
#line 1351 
                                      xgbe_dump_phy_registers(pdata); else ;
  
#line 1352 
  return;
}


#line 1354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c"
void xgbe_init_function_ptrs_phy(struct xgbe_phy_if *phy_if)
{
  
#line 1356 
  phy_if->phy_init = & xgbe_phy_init_0;
  
#line 1358 
  phy_if->phy_reset = & xgbe_phy_reset;
  
#line 1359 
  phy_if->phy_start = & xgbe_phy_start;
  
#line 1360 
  phy_if->phy_stop = & xgbe_phy_stop;
  
#line 1362 
  phy_if->phy_status = & xgbe_phy_status;
  
#line 1363 
  phy_if->phy_config_aneg = & xgbe_phy_config_aneg;
  
#line 1364 
  return;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
_Bool ldv_emg_flush_work(struct work_struct *arg0);


#line 64 
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1);


#line 746  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static bool ldv_queue_work_73(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 750 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 750 
  __retres = tmp != 0;
  
#line 750 
  return __retres;
}


#line 754  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static bool ldv_flush_work_74(struct work_struct *ldv_func_arg1)
{
  bool __retres;
  bool tmp;
  
#line 758 
  tmp = ldv_emg_flush_work(ldv_func_arg1);
  
#line 758 
  __retres = tmp != 0;
  
#line 758 
  return __retres;
}


#line 762  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static bool ldv_queue_work_75(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 766 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 766 
  __retres = tmp != 0;
  
#line 766 
  return __retres;
}


#line 770  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1)
{
  
#line 774 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"an_mutex_of_xgbe_prv_data");
  
#line 775 
  return;
}


#line 778  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1)
{
  
#line 782 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"an_mutex_of_xgbe_prv_data");
  
#line 783 
  return;
}


#line 786  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1)
{
  
#line 790 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"an_mutex_of_xgbe_prv_data");
  
#line 791 
  return;
}


#line 794  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static void ldv_mutex_unlock_79(struct mutex *ldv_func_arg1)
{
  
#line 798 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"an_mutex_of_xgbe_prv_data");
  
#line 799 
  return;
}


#line 802  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static void ldv_devm_free_irq_80(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3)
{
  
#line 806 
  ldv_emg_devm_free_irq(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 807 
  return;
}


#line 810  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/weaver/.tmp_xgbe-mdio.c.aux"
static void ldv_devm_free_irq_81_0(struct device *ldv_func_arg1, unsigned int ldv_func_arg2, void *ldv_func_arg3)
{
  
#line 814 
  ldv_emg_devm_free_irq(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 815 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
__inline static void *ERR_PTR(long error)
{
  void *__retres;
  
#line 25 
  __retres = (void *)error;
  
#line 25 
  return __retres;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
int main(void);


#line 99 
void *ldv_character_driver_scenario_15(void *arg0);


#line 100 
void ldv_dispatch_register_9_4(struct net_device *arg0);


#line 101 
void *ldv_character_driver_scenario_21(void *arg0);


#line 104 
void ldv_dispatch_pm_register_19_17(void);


#line 105 
void *ldv_timer_scenario_22(void *arg0);


#line 107 
void ldv_dispatch_register_11_3(struct platform_driver *arg0);


#line 108 
void *ldv_character_driver_scenario_17(void *arg0);


#line 109 
void ldv_dispatch_pm_deregister_19_16(void);


#line 111 
void *ldv_character_driver_scenario_20(void *arg0);


#line 112 
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0);


#line 114 
void *ldv_character_driver_scenario_18(void *arg0);


#line 115 
void *ldv_platform_instance_19(void *arg0);


#line 118 
void ldv_dispatch_register_13_3(struct file_operations *arg0);


#line 119 
void *ldv_pm_ops_scenario_23(void *arg0);


#line 120 
void *ldv_initialization_1(void *arg0);


#line 122 
void ldv_dispatch_instance_deregister_12_1(struct timer_list *arg0);


#line 125 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 127 
void *ldv_random_allocationless_scenario_16(void *arg0);


#line 128 
void ldv_dispatch_deregister_4_1(struct platform_driver *arg0);


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_21;

#line 135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_19;

#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_22;

#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_20;

#line 140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_23;

#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_12_timer_list;
  
#line 150 
  ldv_12_timer_list = arg0;
  
#line 154 
  ldv_dispatch_instance_deregister_12_1(ldv_12_timer_list);
  
#line 155 
  ;
  
#line 155 
  __retres = 0;
  
#line 155 
  return __retres;
}


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 166 
  ldv_initialize();
  
#line 169 
  ldv_initialization_1((void *)0);
  
#line 171 
  __retres = 0;
  
#line 171 
  return __retres;
}


#line 176  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_15(void *arg0)
{
  void *__retres;
  struct file *ldv_15_resource_1;
  char *ldv_15_ldv_param_1_2;
  unsigned long ldv_15_size_cnt;
  char *ldv_15_ldv_param_1_4;
  long long *ldv_15_ldv_param_3_3;
  long long *ldv_15_ldv_param_3_5;
  struct inode *ldv_15_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 184 
  struct file_operations *ldv_15_container = ldv_emg_alias_xpcs_mmd_fops_2;
  
#line 186 
  int ldv_15_ret = ldv_undef_int();
  
#line 189 
  struct ldv_struct_character_driver_scenario_15 *data = (struct ldv_struct_character_driver_scenario_15 *)arg0;
  
#line 193 
  ldv_15_ret = ldv_undef_int();
  
#line 196 
  if (data != (struct ldv_struct_character_driver_scenario_15 *)0) {
    
#line 197 
    ldv_15_container = data->arg0;
    
#line 198 
    ldv_free((void *)data);
  }
  else ;
  
#line 203 
  ldv_15_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 204 
  tmp_1 = ldv_undef_int();
  
#line 204 
  ldv_15_size_cnt = (unsigned long)tmp_1;
  
#line 211 
  goto ldv_main_15;
  
#line 213 
  __retres = (void *)0;
  
#line 213 
  goto return_label;
  ldv_main_15: 
#line 216 
  ;
  
#line 219 
  tmp_3 = ldv_undef_int();
  
#line 219 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 222 
    ldv_15_ret = (*ldv_emg_alias_simple_open_5)(ldv_15_resource_0,ldv_15_resource_1);
    
#line 224 
    ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    
#line 227 
    tmp_2 = ldv_undef_int();
    
#line 227 
    if (tmp_2 != 0) {
      
#line 229 
      __VERIFIER_assume(ldv_15_ret == 0);
      
#line 236 
      goto ldv_call_15;
    }
    else {
      
#line 240 
      __VERIFIER_assume(ldv_15_ret != 0);
      
#line 247 
      goto ldv_main_15;
    }
  }
  else {
    
#line 252 
    ldv_free((void *)ldv_15_resource_0);
    
#line 260 
    __retres = (void *)0;
    
#line 260 
    goto return_label;
  }
  
#line 263 
  __retres = (void *)0;
  
#line 263 
  goto return_label;
  ldv_call_15: 
#line 266 
  ;
  
#line 269 
  tmp_4 = ldv_undef_int();
  
#line 269 
  switch (tmp_4) {
    case 1: 
#line 270 
    ;
    
#line 272 
    ldv_15_ldv_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 273 
    ldv_15_ldv_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 278 
    ldv_emg_wrapper_xpcs_mmd_read_3(ldv_15_resource_1,ldv_15_ldv_param_1_2,ldv_15_size_cnt,ldv_15_ldv_param_3_3);
    
#line 282 
    ldv_free((void *)ldv_15_ldv_param_3_3);
    
#line 283 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 290 
    goto ldv_call_15;
    case 2: 
#line 293 
    ;
    
#line 295 
    ldv_15_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 296 
    ldv_15_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 305 
    __VERIFIER_assume(ldv_15_size_cnt <= 2147479552UL);
    
#line 307 
    ldv_emg_wrapper_xpcs_mmd_write_4(ldv_15_resource_1,ldv_15_ldv_param_1_4,ldv_15_size_cnt,ldv_15_ldv_param_3_5);
    
#line 311 
    ldv_free((void *)ldv_15_ldv_param_1_4);
    
#line 312 
    ldv_free((void *)ldv_15_ldv_param_3_5);
    
#line 319 
    goto ldv_call_15;
    case 3: 
#line 322 
    ;
    
#line 324 
    if (ldv_15_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 326 
      (*(ldv_15_container->release))(ldv_15_resource_0,ldv_15_resource_1); else ;
    
#line 334 
    goto ldv_main_15;
    default: 
#line 337 
    ;
    
#line 337 
    __VERIFIER_assume(0);
  }
  
#line 340 
  __retres = (void *)0;
  return_label: 
#line 340 
                return __retres;
}


#line 345  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_16 *cf_arg_16;
  int tmp;
  
#line 348 
  tmp = ldv_undef_int();
  
#line 348 
  switch (tmp) {
    case 0: 
#line 349 
    ;
    
#line 350 
    cf_arg_16 = (struct ldv_struct_random_allocationless_scenario_16 *)ldv_xmalloc(16UL);
    
#line 351 
    cf_arg_16->arg0 = arg0;
    
#line 352 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_16,(void *)cf_arg_16);
    
#line 353 
    __VERIFIER_assume(ret == 0);
    
#line 354 
    goto ldv_44087;
    default: 
#line 356 
    ;
    
#line 356 
    __VERIFIER_assume(0);
  }
  ldv_44087: 
#line 357 
  ;
  
#line 358 
  return;
}


#line 362  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_21(void *arg0)
{
  void *__retres;
  struct file *ldv_21_resource_1;
  char *ldv_21_ldv_param_1_2;
  unsigned long ldv_21_size_cnt;
  char *ldv_21_ldv_param_1_4;
  long long *ldv_21_ldv_param_3_3;
  long long *ldv_21_ldv_param_3_5;
  struct inode *ldv_21_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 370 
  struct file_operations *ldv_21_container = ldv_emg_alias_xgmac_reg_addr_fops_2;
  
#line 372 
  int ldv_21_ret = ldv_undef_int();
  
#line 375 
  struct ldv_struct_character_driver_scenario_15 *data = (struct ldv_struct_character_driver_scenario_15 *)arg0;
  
#line 379 
  ldv_21_ret = ldv_undef_int();
  
#line 382 
  if (data != (struct ldv_struct_character_driver_scenario_15 *)0) {
    
#line 383 
    ldv_21_container = data->arg0;
    
#line 384 
    ldv_free((void *)data);
  }
  else ;
  
#line 389 
  ldv_21_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 390 
  tmp_1 = ldv_undef_int();
  
#line 390 
  ldv_21_size_cnt = (unsigned long)tmp_1;
  
#line 397 
  goto ldv_main_21;
  
#line 399 
  __retres = (void *)0;
  
#line 399 
  goto return_label;
  ldv_main_21: 
#line 402 
  ;
  
#line 405 
  tmp_3 = ldv_undef_int();
  
#line 405 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 408 
    ldv_21_ret = (*ldv_emg_alias_simple_open_5)(ldv_21_resource_0,ldv_21_resource_1);
    
#line 410 
    ldv_21_ret = ldv_filter_err_code(ldv_21_ret);
    
#line 413 
    tmp_2 = ldv_undef_int();
    
#line 413 
    if (tmp_2 != 0) {
      
#line 415 
      __VERIFIER_assume(ldv_21_ret == 0);
      
#line 422 
      goto ldv_call_21;
    }
    else {
      
#line 426 
      __VERIFIER_assume(ldv_21_ret != 0);
      
#line 433 
      goto ldv_main_21;
    }
  }
  else {
    
#line 438 
    ldv_free((void *)ldv_21_resource_0);
    
#line 446 
    __retres = (void *)0;
    
#line 446 
    goto return_label;
  }
  
#line 449 
  __retres = (void *)0;
  
#line 449 
  goto return_label;
  ldv_call_21: 
#line 452 
  ;
  
#line 455 
  tmp_4 = ldv_undef_int();
  
#line 455 
  switch (tmp_4) {
    case 1: 
#line 456 
    ;
    
#line 458 
    ldv_21_ldv_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 459 
    ldv_21_ldv_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 464 
    ldv_emg_wrapper_xgmac_reg_addr_read_3(ldv_21_resource_1,ldv_21_ldv_param_1_2,ldv_21_size_cnt,ldv_21_ldv_param_3_3);
    
#line 468 
    ldv_free((void *)ldv_21_ldv_param_1_2);
    
#line 469 
    ldv_free((void *)ldv_21_ldv_param_3_3);
    
#line 476 
    goto ldv_call_21;
    case 2: 
#line 479 
    ;
    
#line 481 
    ldv_21_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 482 
    ldv_21_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 491 
    __VERIFIER_assume(ldv_21_size_cnt <= 2147479552UL);
    
#line 493 
    ldv_emg_wrapper_xgmac_reg_addr_write_4(ldv_21_resource_1,ldv_21_ldv_param_1_4,ldv_21_size_cnt,ldv_21_ldv_param_3_5);
    
#line 497 
    ldv_free((void *)ldv_21_ldv_param_1_4);
    
#line 498 
    ldv_free((void *)ldv_21_ldv_param_3_5);
    
#line 505 
    goto ldv_call_21;
    case 3: 
#line 508 
    ;
    
#line 510 
    if (ldv_21_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 512 
      (*(ldv_21_container->release))(ldv_21_resource_0,ldv_21_resource_1); else ;
    
#line 520 
    goto ldv_main_21;
    default: 
#line 523 
    ;
    
#line 523 
    __VERIFIER_assume(0);
  }
  
#line 526 
  __retres = (void *)0;
  return_label: 
#line 526 
                return __retres;
}


#line 531  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0)
{
  
#line 534 
  struct platform_driver *ldv_4_platform_driver = ldv_emg_alias_xgbe_driver_2;
  
#line 537 
  ldv_4_platform_driver = arg0;
  
#line 541 
  ldv_dispatch_deregister_4_1(ldv_4_platform_driver);
  
#line 545 
  goto return_label;
  return_label: 
#line 547 
                return;
}


#line 552  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  struct dentry *__retres;
  struct dentry *ldv_13_dentry;
  struct file_operations *ldv_13_file_operations;
  int tmp_1;
  
#line 560 
  tmp_1 = ldv_undef_int();
  
#line 560 
  if (tmp_1 != 0) {
    
#line 562 
    ldv_13_dentry = (struct dentry *)ldv_xmalloc_unknown_size(0UL);
    
#line 563 
    ldv_13_file_operations = arg4;
    
#line 567 
    ldv_dispatch_register_13_3(ldv_13_file_operations);
    
#line 571 
    __retres = ldv_13_dentry;
    
#line 571 
    goto return_label;
  }
  else {
    struct dentry *tmp_0;
    
#line 578 
    tmp_0 = (struct dentry *)ERR_PTR(-19L);
    
#line 578 
    __retres = tmp_0;
    
#line 578 
    goto return_label;
  }
  return_label: 
#line 560 
                return __retres;
}


#line 588  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_register_19_17(void)
{
  int ret;
  struct ldv_struct_platform_instance_19 *cf_arg_23;
  int tmp;
  
#line 591 
  tmp = ldv_undef_int();
  
#line 591 
  switch (tmp) {
    case 0: 
#line 592 
    ;
    
#line 593 
    cf_arg_23 = (struct ldv_struct_platform_instance_19 *)ldv_xmalloc(16UL);
    
#line 594 
    ret = pthread_create(& ldv_thread_23,(pthread_attr_t const *)0,& ldv_pm_ops_scenario_23,(void *)cf_arg_23);
    
#line 595 
    __VERIFIER_assume(ret == 0);
    
#line 596 
    goto ldv_44127;
    default: 
#line 598 
    ;
    
#line 598 
    __VERIFIER_assume(0);
  }
  ldv_44127: 
#line 599 
  ;
  
#line 600 
  return;
}


#line 604  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_22(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_22_container;
  
#line 609 
  struct ldv_struct_timer_scenario_22 *data = (struct ldv_struct_timer_scenario_22 *)arg0;
  
#line 614 
  if (data != (struct ldv_struct_timer_scenario_22 *)0) {
    
#line 615 
    ldv_22_container = data->arg0;
    
#line 616 
    ldv_free((void *)data);
  }
  else ;
  
#line 621 
  if (ldv_22_container->function != (void (*)(unsigned long ))0) {
    
#line 623 
    ldv_switch_to_interrupt_context();
    
#line 625 
    (*(ldv_22_container->function))(ldv_22_container->data);
    
#line 627 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 636 
  __retres = (void *)0;
  
#line 636 
  goto return_label;
  
#line 638 
  __retres = (void *)0;
  return_label: 
#line 638 
                return __retres;
}


#line 643  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 650 
  tmp_0 = ldv_undef_int();
  
#line 650 
  if (tmp_0 != 0) {
    
#line 652 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 656 
    __retres = ldv_5_netdev;
    
#line 656 
    goto return_label;
  }
  else {
    
#line 663 
    __retres = (struct net_device *)0;
    
#line 663 
    goto return_label;
  }
  return_label: 
#line 650 
                return __retres;
}


#line 673  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_3(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_19 *cf_arg_19;
  int tmp;
  
#line 676 
  tmp = ldv_undef_int();
  
#line 676 
  switch (tmp) {
    case 0: 
#line 677 
    ;
    
#line 678 
    cf_arg_19 = (struct ldv_struct_platform_instance_19 *)ldv_xmalloc(16UL);
    
#line 679 
    cf_arg_19->arg0 = arg0;
    
#line 680 
    ret = pthread_create(& ldv_thread_19,(pthread_attr_t const *)0,& ldv_platform_instance_19,(void *)cf_arg_19);
    
#line 681 
    __VERIFIER_assume(ret == 0);
    
#line 682 
    goto ldv_44146;
    default: 
#line 684 
    ;
    
#line 684 
    __VERIFIER_assume(0);
  }
  ldv_44146: 
#line 685 
  ;
  
#line 686 
  return;
}


#line 690  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_17(void *arg0)
{
  void *__retres;
  struct file *ldv_17_resource_1;
  char *ldv_17_ldv_param_1_2;
  unsigned long ldv_17_size_cnt;
  char *ldv_17_ldv_param_1_4;
  long long *ldv_17_ldv_param_3_3;
  long long *ldv_17_ldv_param_3_5;
  struct inode *ldv_17_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 698 
  struct file_operations *ldv_17_container = ldv_emg_alias_xgmac_reg_value_fops_2;
  
#line 700 
  int ldv_17_ret = ldv_undef_int();
  
#line 703 
  struct ldv_struct_character_driver_scenario_15 *data = (struct ldv_struct_character_driver_scenario_15 *)arg0;
  
#line 707 
  ldv_17_ret = ldv_undef_int();
  
#line 710 
  if (data != (struct ldv_struct_character_driver_scenario_15 *)0) {
    
#line 711 
    ldv_17_container = data->arg0;
    
#line 712 
    ldv_free((void *)data);
  }
  else ;
  
#line 717 
  ldv_17_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 718 
  tmp_1 = ldv_undef_int();
  
#line 718 
  ldv_17_size_cnt = (unsigned long)tmp_1;
  
#line 725 
  goto ldv_main_17;
  
#line 727 
  __retres = (void *)0;
  
#line 727 
  goto return_label;
  ldv_main_17: 
#line 730 
  ;
  
#line 733 
  tmp_3 = ldv_undef_int();
  
#line 733 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 736 
    ldv_17_ret = (*ldv_emg_alias_simple_open_5)(ldv_17_resource_0,ldv_17_resource_1);
    
#line 738 
    ldv_17_ret = ldv_filter_err_code(ldv_17_ret);
    
#line 741 
    tmp_2 = ldv_undef_int();
    
#line 741 
    if (tmp_2 != 0) {
      
#line 743 
      __VERIFIER_assume(ldv_17_ret == 0);
      
#line 750 
      goto ldv_call_17;
    }
    else {
      
#line 754 
      __VERIFIER_assume(ldv_17_ret != 0);
      
#line 761 
      goto ldv_main_17;
    }
  }
  else {
    
#line 766 
    ldv_free((void *)ldv_17_resource_0);
    
#line 774 
    __retres = (void *)0;
    
#line 774 
    goto return_label;
  }
  
#line 777 
  __retres = (void *)0;
  
#line 777 
  goto return_label;
  ldv_call_17: 
#line 780 
  ;
  
#line 783 
  tmp_4 = ldv_undef_int();
  
#line 783 
  switch (tmp_4) {
    case 1: 
#line 784 
    ;
    
#line 786 
    ldv_17_ldv_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 787 
    ldv_17_ldv_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 792 
    ldv_emg_wrapper_xgmac_reg_value_read_3(ldv_17_resource_1,ldv_17_ldv_param_1_2,ldv_17_size_cnt,ldv_17_ldv_param_3_3);
    
#line 796 
    ldv_free((void *)ldv_17_ldv_param_1_2);
    
#line 797 
    ldv_free((void *)ldv_17_ldv_param_3_3);
    
#line 804 
    goto ldv_call_17;
    case 2: 
#line 807 
    ;
    
#line 809 
    ldv_17_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 810 
    ldv_17_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 819 
    __VERIFIER_assume(ldv_17_size_cnt <= 2147479552UL);
    
#line 821 
    ldv_emg_wrapper_xgmac_reg_value_write_4(ldv_17_resource_1,ldv_17_ldv_param_1_4,ldv_17_size_cnt,ldv_17_ldv_param_3_5);
    
#line 825 
    ldv_free((void *)ldv_17_ldv_param_3_5);
    
#line 826 
    ldv_free((void *)ldv_17_ldv_param_1_4);
    
#line 833 
    goto ldv_call_17;
    case 3: 
#line 836 
    ;
    
#line 838 
    if (ldv_17_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 840 
      (*(ldv_17_container->release))(ldv_17_resource_0,ldv_17_resource_1); else ;
    
#line 848 
    goto ldv_main_17;
    default: 
#line 851 
    ;
    
#line 851 
    __VERIFIER_assume(0);
  }
  
#line 854 
  __retres = (void *)0;
  return_label: 
#line 854 
                return __retres;
}


#line 859  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_deregister_19_16(void)
{
  int ret;
  struct ldv_struct_platform_instance_19 *cf_arg_23;
  int tmp;
  
#line 862 
  tmp = ldv_undef_int();
  
#line 862 
  switch (tmp) {
    case 0: 
#line 863 
    ;
    
#line 864 
    ret = pthread_join(ldv_thread_23,(void **)0);
    
#line 865 
    __VERIFIER_assume(ret == 0);
    
#line 866 
    goto ldv_44173;
    default: 
#line 868 
    ;
    
#line 868 
    __VERIFIER_assume(0);
  }
  ldv_44173: 
#line 869 
  ;
  
#line 870 
  return;
}


#line 874  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_devm_free_irq(struct device *arg0, unsigned int arg1, void *arg2)
{
  int ldv_8_line;
  
#line 880 
  ldv_8_line = (int)((long)arg0);
  
#line 888 
  goto return_label;
  return_label: 
#line 890 
                return;
}


#line 895  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_20(void *arg0)
{
  void *__retres;
  struct file *ldv_20_resource_1;
  char *ldv_20_ldv_param_1_2;
  unsigned long ldv_20_size_cnt;
  char *ldv_20_ldv_param_1_4;
  long long *ldv_20_ldv_param_3_3;
  long long *ldv_20_ldv_param_3_5;
  struct inode *ldv_20_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 903 
  struct file_operations *ldv_20_container = ldv_emg_alias_xpcs_reg_value_fops_2;
  
#line 905 
  int ldv_20_ret = ldv_undef_int();
  
#line 908 
  struct ldv_struct_character_driver_scenario_15 *data = (struct ldv_struct_character_driver_scenario_15 *)arg0;
  
#line 912 
  ldv_20_ret = ldv_undef_int();
  
#line 915 
  if (data != (struct ldv_struct_character_driver_scenario_15 *)0) {
    
#line 916 
    ldv_20_container = data->arg0;
    
#line 917 
    ldv_free((void *)data);
  }
  else ;
  
#line 922 
  ldv_20_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 923 
  tmp_1 = ldv_undef_int();
  
#line 923 
  ldv_20_size_cnt = (unsigned long)tmp_1;
  
#line 930 
  goto ldv_main_20;
  
#line 932 
  __retres = (void *)0;
  
#line 932 
  goto return_label;
  ldv_main_20: 
#line 935 
  ;
  
#line 938 
  tmp_3 = ldv_undef_int();
  
#line 938 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 941 
    ldv_20_ret = (*ldv_emg_alias_simple_open_5)(ldv_20_resource_0,ldv_20_resource_1);
    
#line 943 
    ldv_20_ret = ldv_filter_err_code(ldv_20_ret);
    
#line 946 
    tmp_2 = ldv_undef_int();
    
#line 946 
    if (tmp_2 != 0) {
      
#line 948 
      __VERIFIER_assume(ldv_20_ret == 0);
      
#line 955 
      goto ldv_call_20;
    }
    else {
      
#line 959 
      __VERIFIER_assume(ldv_20_ret != 0);
      
#line 966 
      goto ldv_main_20;
    }
  }
  else {
    
#line 971 
    ldv_free((void *)ldv_20_resource_0);
    
#line 979 
    __retres = (void *)0;
    
#line 979 
    goto return_label;
  }
  
#line 982 
  __retres = (void *)0;
  
#line 982 
  goto return_label;
  ldv_call_20: 
#line 985 
  ;
  
#line 988 
  tmp_4 = ldv_undef_int();
  
#line 988 
  switch (tmp_4) {
    case 1: 
#line 989 
    ;
    
#line 991 
    ldv_20_ldv_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 992 
    ldv_20_ldv_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 997 
    ldv_emg_wrapper_xpcs_reg_value_read_3(ldv_20_resource_1,ldv_20_ldv_param_1_2,ldv_20_size_cnt,ldv_20_ldv_param_3_3);
    
#line 1001 
    ldv_free((void *)ldv_20_ldv_param_1_2);
    
#line 1002 
    ldv_free((void *)ldv_20_ldv_param_3_3);
    
#line 1009 
    goto ldv_call_20;
    case 2: 
#line 1012 
    ;
    
#line 1014 
    ldv_20_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1015 
    ldv_20_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1024 
    __VERIFIER_assume(ldv_20_size_cnt <= 2147479552UL);
    
#line 1026 
    ldv_emg_wrapper_xpcs_reg_value_write_4(ldv_20_resource_1,ldv_20_ldv_param_1_4,ldv_20_size_cnt,ldv_20_ldv_param_3_5);
    
#line 1030 
    ldv_free((void *)ldv_20_ldv_param_3_5);
    
#line 1031 
    ldv_free((void *)ldv_20_ldv_param_1_4);
    
#line 1038 
    goto ldv_call_20;
    case 3: 
#line 1041 
    ;
    
#line 1043 
    if (ldv_20_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 1045 
      (*(ldv_20_container->release))(ldv_20_resource_0,ldv_20_resource_1); else ;
    
#line 1053 
    goto ldv_main_20;
    default: 
#line 1056 
    ;
    
#line 1056 
    __VERIFIER_assume(0);
  }
  
#line 1059 
  __retres = (void *)0;
  return_label: 
#line 1059 
                return __retres;
}


#line 1064  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_22 *cf_arg_22;
  int tmp;
  
#line 1067 
  tmp = ldv_undef_int();
  
#line 1067 
  switch (tmp) {
    case 0: 
#line 1068 
    ;
    
#line 1069 
    cf_arg_22 = (struct ldv_struct_timer_scenario_22 *)ldv_xmalloc(16UL);
    
#line 1070 
    cf_arg_22->arg0 = arg0;
    
#line 1071 
    ret = pthread_create(& ldv_thread_22,(pthread_attr_t const *)0,& ldv_timer_scenario_22,(void *)cf_arg_22);
    
#line 1072 
    __VERIFIER_assume(ret == 0);
    
#line 1073 
    goto ldv_44206;
    default: 
#line 1075 
    ;
    
#line 1075 
    __VERIFIER_assume(0);
  }
  ldv_44206: 
#line 1076 
  ;
  
#line 1077 
  return;
}


#line 1081  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_10_work_struct;
  int tmp;
  
#line 1088 
  tmp = ldv_undef_int();
  
#line 1088 
  if (tmp != 0) {
    
#line 1090 
    ldv_10_work_struct = arg0;
    
#line 1094 
    if (ldv_10_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1096 
      (*(ldv_10_work_struct->func))(ldv_10_work_struct); else ;
    
#line 1101 
    __retres = (_Bool)1;
    
#line 1101 
    goto return_label;
  }
  else {
    
#line 1108 
    __retres = (_Bool)0;
    
#line 1108 
    goto return_label;
  }
  return_label: 
#line 1088 
                return __retres;
}


#line 1118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_18(void *arg0)
{
  void *__retres;
  struct file *ldv_18_resource_1;
  char *ldv_18_ldv_param_1_2;
  unsigned long ldv_18_size_cnt;
  char *ldv_18_ldv_param_1_4;
  long long *ldv_18_ldv_param_3_3;
  long long *ldv_18_ldv_param_3_5;
  struct inode *ldv_18_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1126 
  struct file_operations *ldv_18_container = ldv_emg_alias_xpcs_reg_addr_fops_2;
  
#line 1128 
  int ldv_18_ret = ldv_undef_int();
  
#line 1131 
  struct ldv_struct_character_driver_scenario_15 *data = (struct ldv_struct_character_driver_scenario_15 *)arg0;
  
#line 1135 
  ldv_18_ret = ldv_undef_int();
  
#line 1138 
  if (data != (struct ldv_struct_character_driver_scenario_15 *)0) {
    
#line 1139 
    ldv_18_container = data->arg0;
    
#line 1140 
    ldv_free((void *)data);
  }
  else ;
  
#line 1145 
  ldv_18_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1146 
  tmp_1 = ldv_undef_int();
  
#line 1146 
  ldv_18_size_cnt = (unsigned long)tmp_1;
  
#line 1153 
  goto ldv_main_18;
  
#line 1155 
  __retres = (void *)0;
  
#line 1155 
  goto return_label;
  ldv_main_18: 
#line 1158 
  ;
  
#line 1161 
  tmp_3 = ldv_undef_int();
  
#line 1161 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1164 
    ldv_18_ret = (*ldv_emg_alias_simple_open_5)(ldv_18_resource_0,ldv_18_resource_1);
    
#line 1166 
    ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    
#line 1169 
    tmp_2 = ldv_undef_int();
    
#line 1169 
    if (tmp_2 != 0) {
      
#line 1171 
      __VERIFIER_assume(ldv_18_ret == 0);
      
#line 1178 
      goto ldv_call_18;
    }
    else {
      
#line 1182 
      __VERIFIER_assume(ldv_18_ret != 0);
      
#line 1189 
      goto ldv_main_18;
    }
  }
  else {
    
#line 1194 
    ldv_free((void *)ldv_18_resource_0);
    
#line 1202 
    __retres = (void *)0;
    
#line 1202 
    goto return_label;
  }
  
#line 1205 
  __retres = (void *)0;
  
#line 1205 
  goto return_label;
  ldv_call_18: 
#line 1208 
  ;
  
#line 1211 
  tmp_4 = ldv_undef_int();
  
#line 1211 
  switch (tmp_4) {
    case 1: 
#line 1212 
    ;
    
#line 1214 
    ldv_18_ldv_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1215 
    ldv_18_ldv_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1220 
    ldv_emg_wrapper_xpcs_reg_addr_read_3(ldv_18_resource_1,ldv_18_ldv_param_1_2,ldv_18_size_cnt,ldv_18_ldv_param_3_3);
    
#line 1224 
    ldv_free((void *)ldv_18_ldv_param_3_3);
    
#line 1225 
    ldv_free((void *)ldv_18_ldv_param_1_2);
    
#line 1232 
    goto ldv_call_18;
    case 2: 
#line 1235 
    ;
    
#line 1237 
    ldv_18_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1238 
    ldv_18_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1247 
    __VERIFIER_assume(ldv_18_size_cnt <= 2147479552UL);
    
#line 1249 
    ldv_emg_wrapper_xpcs_reg_addr_write_4(ldv_18_resource_1,ldv_18_ldv_param_1_4,ldv_18_size_cnt,ldv_18_ldv_param_3_5);
    
#line 1253 
    ldv_free((void *)ldv_18_ldv_param_1_4);
    
#line 1254 
    ldv_free((void *)ldv_18_ldv_param_3_5);
    
#line 1261 
    goto ldv_call_18;
    case 3: 
#line 1264 
    ;
    
#line 1266 
    if (ldv_18_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 1268 
      (*(ldv_18_container->release))(ldv_18_resource_0,ldv_18_resource_1); else ;
    
#line 1276 
    goto ldv_main_18;
    default: 
#line 1279 
    ;
    
#line 1279 
    __VERIFIER_assume(0);
  }
  
#line 1282 
  __retres = (void *)0;
  return_label: 
#line 1282 
                return __retres;
}


#line 1287  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_platform_instance_19(void *arg0)
{
  void *__retres;
  struct platform_device *ldv_19_ldv_param_0_2;
  struct platform_device *ldv_19_ldv_param_0_3;
  int tmp_1;
  int tmp_2;
  
#line 1291 
  struct platform_driver *ldv_19_container = ldv_emg_alias_xgbe_driver_2;
  
#line 1293 
  int ldv_19_probed = 1;
  
#line 1295 
  struct ldv_struct_platform_instance_19 *data = (struct ldv_struct_platform_instance_19 *)arg0;
  
#line 1299 
  ldv_19_probed = 1;
  
#line 1302 
  if (data != (struct ldv_struct_platform_instance_19 *)0) {
    
#line 1303 
    ldv_19_container = data->arg0;
    
#line 1304 
    ldv_free((void *)data);
  }
  else ;
  
#line 1315 
  goto ldv_main_19;
  
#line 1317 
  __retres = (void *)0;
  
#line 1317 
  goto return_label;
  ldv_main_19: 
#line 1320 
  ;
  
#line 1323 
  tmp_1 = ldv_undef_int();
  
#line 1323 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 1325 
    ldv_19_ldv_param_0_2 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 1330 
    ldv_pre_probe();
    
#line 1332 
    ldv_19_probed = ldv_emg_wrapper_xgbe_probe_2(ldv_19_ldv_param_0_2);
    
#line 1334 
    ldv_19_probed = ldv_post_probe(ldv_19_probed);
    
#line 1338 
    ldv_free((void *)ldv_19_ldv_param_0_2);
    
#line 1341 
    tmp_0 = ldv_undef_int();
    
#line 1341 
    if (tmp_0 != 0) {
      
#line 1343 
      __VERIFIER_assume(ldv_19_probed == 0);
      
#line 1350 
      goto ldv_call_19;
    }
    else {
      
#line 1354 
      __VERIFIER_assume(ldv_19_probed != 0);
      
#line 1361 
      goto ldv_main_19;
    }
  }
  else {
    
#line 1373 
    __retres = (void *)0;
    
#line 1373 
    goto return_label;
  }
  
#line 1376 
  __retres = (void *)0;
  
#line 1376 
  goto return_label;
  ldv_call_19: 
#line 1379 
  ;
  
#line 1382 
  tmp_2 = ldv_undef_int();
  
#line 1382 
  switch (tmp_2) {
    case 1: 
#line 1383 
    ;
    
#line 1392 
    goto ldv_call_19;
    case 2: 
#line 1395 
    ;
    
#line 1397 
    ldv_dispatch_pm_register_19_17();
    
#line 1401 
    ldv_dispatch_pm_deregister_19_16();
    
#line 1408 
    goto ldv_call_19;
    case 3: 
#line 1411 
    ;
    
#line 1413 
    ldv_19_ldv_param_0_3 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 1418 
    ldv_emg_wrapper_xgbe_remove_3(ldv_19_ldv_param_0_3);
    
#line 1422 
    ldv_free((void *)ldv_19_ldv_param_0_3);
    
#line 1426 
    ldv_19_probed = 1;
    
#line 1433 
    goto ldv_main_19;
    default: 
#line 1436 
    ;
    
#line 1436 
    __VERIFIER_assume(0);
  }
  
#line 1439 
  __retres = (void *)0;
  return_label: 
#line 1439 
                return __retres;
}


#line 1444  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1)
{
  _Bool __retres;
  struct work_struct *ldv_14_work_struct;
  int tmp;
  
#line 1451 
  tmp = ldv_undef_int();
  
#line 1451 
  if (tmp != 0) {
    
#line 1453 
    ldv_14_work_struct = arg1;
    
#line 1457 
    if (ldv_14_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1459 
      (*(ldv_14_work_struct->func))(ldv_14_work_struct); else ;
    
#line 1464 
    __retres = (_Bool)1;
    
#line 1464 
    goto return_label;
  }
  else {
    
#line 1471 
    __retres = (_Bool)0;
    
#line 1471 
    goto return_label;
  }
  return_label: 
#line 1451 
                return __retres;
}


#line 1481  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1)
{
  int __retres;
  int tmp_0;
  
#line 1484 
  struct platform_driver *ldv_11_platform_driver = ldv_emg_alias_xgbe_driver_2;
  
#line 1488 
  tmp_0 = ldv_undef_int();
  
#line 1488 
  if (tmp_0 != 0) {
    
#line 1490 
    ldv_11_platform_driver = arg0;
    
#line 1494 
    ldv_dispatch_register_11_3(ldv_11_platform_driver);
    
#line 1498 
    __retres = 0;
    
#line 1498 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1505 
    tmp = ldv_undef_int_negative();
    
#line 1505 
    __retres = tmp;
    
#line 1505 
    goto return_label;
  }
  return_label: 
#line 1488 
                return __retres;
}


#line 1515  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_13_3(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_17;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_18;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_20;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_21;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1522 
  tmp = ldv_undef_int();
  
#line 1522 
  switch (tmp) {
    case 0: 
#line 1523 
    ;
    
#line 1524 
    cf_arg_17 = (struct ldv_struct_character_driver_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1525 
    cf_arg_17->arg0 = arg0;
    
#line 1526 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_character_driver_scenario_17,(void *)cf_arg_17);
    
#line 1527 
    __VERIFIER_assume(ret == 0);
    
#line 1528 
    goto ldv_44265;
    case 1: 
#line 1530 
    ;
    
#line 1531 
    cf_arg_18 = (struct ldv_struct_character_driver_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1532 
    cf_arg_18->arg0 = arg0;
    
#line 1533 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_character_driver_scenario_18,(void *)cf_arg_18);
    
#line 1534 
    __VERIFIER_assume(ret == 0);
    
#line 1535 
    goto ldv_44265;
    case 2: 
#line 1537 
    ;
    
#line 1538 
    cf_arg_20 = (struct ldv_struct_character_driver_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1539 
    cf_arg_20->arg0 = arg0;
    
#line 1540 
    ret = pthread_create(& ldv_thread_20,(pthread_attr_t const *)0,& ldv_character_driver_scenario_20,(void *)cf_arg_20);
    
#line 1541 
    __VERIFIER_assume(ret == 0);
    
#line 1542 
    goto ldv_44265;
    case 3: 
#line 1544 
    ;
    
#line 1545 
    cf_arg_21 = (struct ldv_struct_character_driver_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1546 
    cf_arg_21->arg0 = arg0;
    
#line 1547 
    ret = pthread_create(& ldv_thread_21,(pthread_attr_t const *)0,& ldv_character_driver_scenario_21,(void *)cf_arg_21);
    
#line 1548 
    __VERIFIER_assume(ret == 0);
    
#line 1549 
    goto ldv_44265;
    case 4: 
#line 1551 
    ;
    
#line 1552 
    cf_arg_15 = (struct ldv_struct_character_driver_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1553 
    cf_arg_15->arg0 = arg0;
    
#line 1554 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_character_driver_scenario_15,(void *)cf_arg_15);
    
#line 1555 
    __VERIFIER_assume(ret == 0);
    
#line 1556 
    goto ldv_44265;
    default: 
#line 1558 
    ;
    
#line 1558 
    __VERIFIER_assume(0);
  }
  ldv_44265: 
#line 1559 
  ;
  
#line 1560 
  return;
}


#line 1564  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_23(void *arg0)
{
  void *__retres;
  struct device *ldv_23_device;
  int tmp;
  
#line 1567 
  struct dev_pm_ops *ldv_23_pm_ops = ldv_emg_alias_xgbe_pm_ops_3;
  
#line 1571 
  ldv_free(arg0);
  
#line 1578 
  goto ldv_do_23;
  
#line 1580 
  __retres = (void *)0;
  
#line 1580 
  goto return_label;
  ldv_do_23: 
#line 1583 
  ;
  
#line 1586 
  tmp = ldv_undef_int();
  
#line 1586 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 1587 
    ;
    
#line 1589 
    if (ldv_23_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 1591 
                                                                    (*(ldv_23_pm_ops->runtime_idle))(ldv_23_device); else ;
    
#line 1599 
    goto ldv_do_23;
    case 2: 
#line 1602 
    ;
    
#line 1604 
    if (ldv_23_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 1606 
      (*(ldv_23_pm_ops->runtime_suspend))(ldv_23_device); else ;
    
#line 1611 
    if (ldv_23_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 1613 
      (*(ldv_23_pm_ops->runtime_resume))(ldv_23_device); else ;
    
#line 1621 
    goto ldv_do_23;
    case 3: 
#line 1624 
    ;
    
#line 1626 
    if (ldv_23_pm_ops->prepare != (int (*)(struct device *))0) 
#line 1628 
                                                               (*(ldv_23_pm_ops->prepare))(ldv_23_device); else ;
    
#line 1632 
    tmp_0 = ldv_undef_int();
    
#line 1632 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 1633 
      ;
      
#line 1636 
      ldv_emg_wrapper_xgbe_suspend_2(ldv_23_device);
      
#line 1639 
      tmp_1 = ldv_undef_int();
      
#line 1639 
      if (tmp_1 != 0) {
        
#line 1641 
        if (ldv_23_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 1643 
          (*(ldv_23_pm_ops->suspend_noirq))(ldv_23_device); else ;
        
#line 1648 
        if (ldv_23_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 1650 
          (*(ldv_23_pm_ops->resume_noirq))(ldv_23_device); else ;
      }
      else {
        
#line 1657 
        if (ldv_23_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 1659 
          (*(ldv_23_pm_ops->suspend_late))(ldv_23_device); else ;
        
#line 1664 
        if (ldv_23_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 1666 
          (*(ldv_23_pm_ops->resume_early))(ldv_23_device); else ;
      }
      
#line 1673 
      ldv_emg_wrapper_xgbe_resume_4(ldv_23_device);
      
#line 1676 
      goto ldv_44281;
      case 2: 
#line 1678 
      ;
      
#line 1681 
      ldv_emg_wrapper_xgbe_suspend_2(ldv_23_device);
      
#line 1684 
      tmp_2 = ldv_undef_int();
      
#line 1684 
      if (tmp_2 != 0) {
        
#line 1686 
        if (ldv_23_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 1688 
          (*(ldv_23_pm_ops->freeze_late))(ldv_23_device); else ;
        
#line 1693 
        if (ldv_23_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 1695 
          (*(ldv_23_pm_ops->thaw_early))(ldv_23_device); else ;
      }
      else {
        
#line 1702 
        if (ldv_23_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 1704 
          (*(ldv_23_pm_ops->freeze_noirq))(ldv_23_device); else ;
        
#line 1709 
        if (ldv_23_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 1711 
          (*(ldv_23_pm_ops->thaw_noirq))(ldv_23_device); else ;
      }
      
#line 1718 
      ldv_emg_wrapper_xgbe_resume_4(ldv_23_device);
      
#line 1721 
      goto ldv_44281;
      case 3: 
#line 1723 
      ;
      
#line 1726 
      ldv_emg_wrapper_xgbe_suspend_2(ldv_23_device);
      
#line 1729 
      tmp_3 = ldv_undef_int();
      
#line 1729 
      if (tmp_3 != 0) {
        
#line 1731 
        if (ldv_23_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 1733 
          (*(ldv_23_pm_ops->poweroff_late))(ldv_23_device); else ;
        
#line 1738 
        if (ldv_23_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 1740 
          (*(ldv_23_pm_ops->restore_early))(ldv_23_device); else ;
      }
      else {
        
#line 1747 
        if (ldv_23_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 1749 
          (*(ldv_23_pm_ops->poweroff_noirq))(ldv_23_device); else ;
        
#line 1754 
        if (ldv_23_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 1756 
          (*(ldv_23_pm_ops->restore_noirq))(ldv_23_device); else ;
      }
      
#line 1763 
      ldv_emg_wrapper_xgbe_resume_4(ldv_23_device);
      
#line 1766 
      goto ldv_44281;
      default: 
#line 1768 
      ;
      
#line 1768 
      __VERIFIER_assume(0);
    }
    ldv_44281: 
#line 1771 
    ;
    
#line 1771 
    if (ldv_23_pm_ops->complete != (void (*)(struct device *))0) 
#line 1773 
                                                                 (*(ldv_23_pm_ops->complete))(ldv_23_device); else ;
    
#line 1781 
    goto ldv_do_23;
    case 4: 
#line 1784 
    ;
    
#line 1790 
    __retres = (void *)0;
    
#line 1790 
    goto return_label;
    default: 
#line 1793 
    ;
    
#line 1793 
    __VERIFIER_assume(0);
  }
  
#line 1796 
  __retres = (void *)0;
  return_label: 
#line 1796 
                return __retres;
}


#line 1801  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1808 
  ldv_1_ret = ldv_emg_xgbe_driver_init();
  
#line 1809 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1812 
  tmp = ldv_undef_int();
  
#line 1812 
  if (tmp != 0) {
    
#line 1814 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1818 
    __retres = (void *)0;
    
#line 1818 
    goto return_label;
  }
  else {
    
#line 1822 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1827 
    ldv_emg_xgbe_driver_exit();
    
#line 1831 
    __retres = (void *)0;
    
#line 1831 
    goto return_label;
  }
  
#line 1834 
  __retres = (void *)0;
  return_label: 
#line 1834 
                return __retres;
}


#line 1839  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 1845 
  ldv_6_netdev = arg0;
  
#line 1850 
  ldv_emg_wrapper_xgbe_close_2(ldv_6_netdev);
  
#line 1854 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 1858 
  goto return_label;
  return_label: 
#line 1860 
                return;
}


#line 1865  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_12_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_22 *cf_arg_22;
  int tmp;
  
#line 1868 
  tmp = ldv_undef_int();
  
#line 1868 
  switch (tmp) {
    case 0: 
#line 1869 
    ;
    
#line 1870 
    ret = pthread_join(ldv_thread_22,(void **)0);
    
#line 1871 
    __VERIFIER_assume(ret == 0);
    
#line 1872 
    goto ldv_44301;
    default: 
#line 1874 
    ;
    
#line 1874 
    __VERIFIER_assume(0);
  }
  ldv_44301: 
#line 1875 
  ;
  
#line 1876 
  return;
}


#line 1880  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_9_netdev;
  int tmp_3;
  
#line 1884 
  int ldv_9_ret = ldv_undef_int();
  
#line 1887 
  ldv_9_ret = ldv_undef_int();
  
#line 1890 
  tmp_3 = ldv_undef_int();
  
#line 1890 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1892 
    ldv_9_netdev = arg0;
    
#line 1897 
    ldv_9_ret = ldv_emg_wrapper_xgbe_open_2(ldv_9_netdev);
    
#line 1900 
    tmp_1 = ldv_undef_int();
    
#line 1900 
    if (tmp_1 != 0) {
      
#line 1902 
      __VERIFIER_assume(ldv_9_ret == 0);
      
#line 1906 
      ldv_dispatch_register_9_4(ldv_9_netdev);
      
#line 1910 
      __retres = 0;
      
#line 1910 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1917 
      __VERIFIER_assume(ldv_9_ret != 0);
      
#line 1918 
      ldv_failed_register_netdev();
      
#line 1919 
      tmp_0 = ldv_undef_int_negative();
      
#line 1919 
      __retres = tmp_0;
      
#line 1919 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1927 
    ldv_failed_register_netdev();
    
#line 1928 
    tmp_2 = ldv_undef_int_negative();
    
#line 1928 
    __retres = tmp_2;
    
#line 1928 
    goto return_label;
  }
  return_label: 
#line 1890 
                return __retres;
}


#line 1938  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_flush_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_7_work_struct;
  int tmp;
  
#line 1945 
  tmp = ldv_undef_int();
  
#line 1945 
  if (tmp != 0) {
    
#line 1947 
    ldv_7_work_struct = arg0;
    
#line 1951 
    if (ldv_7_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1953 
      (*(ldv_7_work_struct->func))(ldv_7_work_struct); else ;
    
#line 1958 
    __retres = (_Bool)1;
    
#line 1958 
    goto return_label;
  }
  else {
    
#line 1965 
    __retres = (_Bool)0;
    
#line 1965 
    goto return_label;
  }
  return_label: 
#line 1945 
                return __retres;
}


#line 1975  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_16 *cf_arg_16;
  int tmp;
  
#line 1978 
  tmp = ldv_undef_int();
  
#line 1978 
  switch (tmp) {
    case 0: 
#line 1979 
    ;
    
#line 1980 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 1981 
    __VERIFIER_assume(ret == 0);
    
#line 1982 
    goto ldv_44318;
    default: 
#line 1984 
    ;
    
#line 1984 
    __VERIFIER_assume(0);
  }
  ldv_44318: 
#line 1985 
  ;
  
#line 1986 
  return;
}


#line 1990  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1996 
  ldv_2_netdev = arg0;
  
#line 1997 
  ldv_free((void *)ldv_2_netdev);
  
#line 2001 
  goto return_label;
  return_label: 
#line 2003 
                return;
}


#line 2008  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_16(void *arg0)
{
  void *__retres;
  unsigned int *ldv_16_ldv_param_1_28;
  struct ethtool_pauseparam *ldv_16_ldv_param_1_3;
  unsigned long long ldv_16_ldv_param_1_10;
  struct ethtool_rxnfc *ldv_16_ldv_param_1_23;
  unsigned char *ldv_16_ldv_param_2_26;
  unsigned int ldv_16_ldv_param_1_25;
  unsigned char *ldv_16_ldv_param_3_30;
  unsigned int *ldv_16_ldv_param_2_24;
  struct ethtool_stats *ldv_16_ldv_param_1_8;
  unsigned char ldv_16_ldv_param_1_2;
  struct ethtool_cmd *ldv_16_ldv_param_1_4;
  struct sk_buff *ldv_16_ldv_param_0_15;
  struct ethtool_drvinfo *ldv_16_ldv_param_1_11;
  unsigned char ldv_16_ldv_param_3_14;
  unsigned short ldv_16_ldv_param_2_20;
  struct ethtool_coalesce *ldv_16_ldv_param_1_27;
  unsigned char *ldv_16_ldv_param_2_29;
  void *ldv_16_ldv_param_1_16;
  int ldv_16_ldv_param_1_18;
  int ldv_16_ldv_param_2_22;
  unsigned int *ldv_16_ldv_param_1_12;
  unsigned short ldv_16_ldv_param_1_33;
  struct ifreq *ldv_16_ldv_param_1_21;
  struct rtnl_link_stats64 *ldv_16_ldv_param_1_6;
  struct ethtool_coalesce *ldv_16_ldv_param_1_31;
  unsigned short ldv_16_ldv_param_2_34;
  struct ethtool_cmd *ldv_16_ldv_param_1_17;
  unsigned short ldv_16_ldv_param_1_19;
  struct ethtool_pauseparam *ldv_16_ldv_param_1_32;
  unsigned char *ldv_16_ldv_param_2_13;
  struct ethtool_ts_info *ldv_16_ldv_param_1_5;
  struct net_device *ldv_16_container;
  unsigned long long *ldv_16_ldv_param_2_9;
  int ldv_16_ldv_param_1_7;
  int tmp_21;
  
#line 2046 
  struct ldv_struct_random_allocationless_scenario_16 *data = (struct ldv_struct_random_allocationless_scenario_16 *)arg0;
  
#line 2051 
  if (data != (struct ldv_struct_random_allocationless_scenario_16 *)0) {
    
#line 2052 
    ldv_16_container = data->arg0;
    
#line 2053 
    ldv_free((void *)data);
  }
  else ;
  
#line 2061 
  goto ldv_call_16;
  
#line 2063 
  __retres = (void *)0;
  
#line 2063 
  goto return_label;
  ldv_call_16: 
#line 2066 
  ;
  
#line 2069 
  tmp_21 = ldv_undef_int();
  
#line 2069 
  if (tmp_21 != 0) {
    int tmp;
    
#line 2073 
    tmp = ldv_undef_int();
    
#line 2073 
    switch (tmp) {
      case 1: 
#line 2074 
      ;
      
#line 2077 
      ldv_emg_wrapper_xgbe_setup_tc_2(ldv_16_container,(unsigned char)((int)ldv_16_ldv_param_1_2));
      
#line 2080 
      goto ldv_44364;
      case 2: 
#line 2082 
      ;
      
#line 2085 
      ldv_emg_wrapper_xgbe_set_rx_mode_28(ldv_16_container);
      
#line 2088 
      goto ldv_44364;
      case 3: 
#line 2090 
      ;
      
#line 2093 
      ldv_emg_wrapper_xgbe_poll_controller_30(ldv_16_container);
      
#line 2096 
      goto ldv_44364;
      case 4: 
#line 2098 
      ;
      
#line 2104 
      ldv_emg_wrapper_xgbe_vlan_rx_kill_vid_29(ldv_16_container,(unsigned short)((int)ldv_16_ldv_param_1_33),(unsigned short)((int)ldv_16_ldv_param_2_34));
      
#line 2110 
      goto ldv_44364;
      case 5: 
#line 2112 
      ;
      
#line 2114 
      ldv_16_ldv_param_1_32 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 2119 
      ldv_emg_wrapper_xgbe_set_pauseparam_31(ldv_16_container,ldv_16_ldv_param_1_32);
      
#line 2123 
      ldv_free((void *)ldv_16_ldv_param_1_32);
      
#line 2126 
      goto ldv_44364;
      case 6: 
#line 2128 
      ;
      
#line 2130 
      ldv_16_ldv_param_1_31 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 2135 
      ldv_emg_wrapper_xgbe_set_coalesce_27(ldv_16_container,ldv_16_ldv_param_1_31);
      
#line 2139 
      ldv_free((void *)ldv_16_ldv_param_1_31);
      
#line 2142 
      goto ldv_44364;
      case 7: 
#line 2144 
      ;
      
#line 2146 
      ldv_16_ldv_param_3_30 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2147 
      ldv_16_ldv_param_1_28 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 2148 
      ldv_16_ldv_param_2_29 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2153 
      ldv_emg_wrapper_xgbe_get_rxfh_26(ldv_16_container,ldv_16_ldv_param_1_28,ldv_16_ldv_param_2_29,ldv_16_ldv_param_3_30);
      
#line 2157 
      ldv_free((void *)ldv_16_ldv_param_3_30);
      
#line 2158 
      ldv_free((void *)ldv_16_ldv_param_1_28);
      
#line 2159 
      ldv_free((void *)ldv_16_ldv_param_2_29);
      
#line 2162 
      goto ldv_44364;
      case 8: 
#line 2164 
      ;
      
#line 2166 
      ldv_16_ldv_param_1_27 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 2171 
      ldv_emg_wrapper_xgbe_get_coalesce_25(ldv_16_container,ldv_16_ldv_param_1_27);
      
#line 2175 
      ldv_free((void *)ldv_16_ldv_param_1_27);
      
#line 2178 
      goto ldv_44364;
      case 9: 
#line 2180 
      ;
      
#line 2182 
      ldv_16_ldv_param_2_26 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2187 
      ldv_emg_wrapper_xgbe_get_strings_6(ldv_16_container,ldv_16_ldv_param_1_25,ldv_16_ldv_param_2_26);
      
#line 2191 
      ldv_free((void *)ldv_16_ldv_param_2_26);
      
#line 2194 
      goto ldv_44364;
      case 10: 
#line 2196 
      ;
      
#line 2198 
      ldv_16_ldv_param_2_24 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 2199 
      ldv_16_ldv_param_1_23 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
      
#line 2204 
      ldv_emg_wrapper_xgbe_get_rxnfc_23(ldv_16_container,ldv_16_ldv_param_1_23,ldv_16_ldv_param_2_24);
      
#line 2208 
      ldv_free((void *)ldv_16_ldv_param_2_24);
      
#line 2209 
      ldv_free((void *)ldv_16_ldv_param_1_23);
      
#line 2212 
      goto ldv_44364;
      case 11: 
#line 2214 
      ;
      
#line 2217 
      ldv_emg_wrapper_xgbe_tx_timeout_22(ldv_16_container);
      
#line 2220 
      goto ldv_44364;
      case 12: 
#line 2222 
      ;
      
#line 2224 
      ldv_16_ldv_param_1_21 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 2229 
      ldv_emg_wrapper_xgbe_ioctl_21(ldv_16_container,ldv_16_ldv_param_1_21,ldv_16_ldv_param_2_22);
      
#line 2233 
      ldv_free((void *)ldv_16_ldv_param_1_21);
      
#line 2236 
      goto ldv_44364;
      case 13: 
#line 2238 
      ;
      
#line 2244 
      ldv_emg_wrapper_xgbe_vlan_rx_add_vid_20(ldv_16_container,(unsigned short)((int)ldv_16_ldv_param_1_19),(unsigned short)((int)ldv_16_ldv_param_2_20));
      
#line 2250 
      goto ldv_44364;
      case 14: 
#line 2252 
      ;
      
#line 2258 
      ldv_emg_wrapper_xgbe_get_sset_count_19(ldv_16_container,ldv_16_ldv_param_1_18);
      
#line 2264 
      goto ldv_44364;
      case 15: 
#line 2266 
      ;
      
#line 2268 
      ldv_16_ldv_param_1_17 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 2273 
      ldv_emg_wrapper_xgbe_get_settings_18(ldv_16_container,ldv_16_ldv_param_1_17);
      
#line 2277 
      ldv_free((void *)ldv_16_ldv_param_1_17);
      
#line 2280 
      goto ldv_44364;
      case 16: 
#line 2282 
      ;
      
#line 2284 
      ldv_16_ldv_param_1_16 = ldv_xmalloc_unknown_size(0UL);
      
#line 2289 
      ldv_emg_wrapper_xgbe_set_mac_address_17(ldv_16_container,ldv_16_ldv_param_1_16);
      
#line 2293 
      ldv_free(ldv_16_ldv_param_1_16);
      
#line 2296 
      goto ldv_44364;
      case 17: 
#line 2298 
      ;
      
#line 2300 
      ldv_16_ldv_param_0_15 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 2305 
      ldv_emg_wrapper_xgbe_xmit_16(ldv_16_ldv_param_0_15,ldv_16_container);
      
#line 2309 
      ldv_free((void *)ldv_16_ldv_param_0_15);
      
#line 2312 
      goto ldv_44364;
      case 18: 
#line 2314 
      ;
      
#line 2317 
      ldv_emg_wrapper_xgbe_get_rxfh_key_size_15(ldv_16_container);
      
#line 2320 
      goto ldv_44364;
      case 19: 
#line 2322 
      ;
      
#line 2324 
      ldv_16_ldv_param_1_12 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 2325 
      ldv_16_ldv_param_2_13 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2330 
      ldv_emg_wrapper_xgbe_set_rxfh_14(ldv_16_container,ldv_16_ldv_param_1_12,ldv_16_ldv_param_2_13,(unsigned char)((int)ldv_16_ldv_param_3_14));
      
#line 2334 
      ldv_free((void *)ldv_16_ldv_param_1_12);
      
#line 2335 
      ldv_free((void *)ldv_16_ldv_param_2_13);
      
#line 2338 
      goto ldv_44364;
      case 20: 
#line 2340 
      ;
      
#line 2342 
      ldv_16_ldv_param_1_11 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 2347 
      ldv_emg_wrapper_xgbe_get_drvinfo_13(ldv_16_container,ldv_16_ldv_param_1_11);
      
#line 2351 
      ldv_free((void *)ldv_16_ldv_param_1_11);
      
#line 2354 
      goto ldv_44364;
      case 21: 
#line 2356 
      ;
      
#line 2362 
      ldv_emg_wrapper_xgbe_set_features_12(ldv_16_container,ldv_16_ldv_param_1_10);
      
#line 2368 
      goto ldv_44364;
      case 22: 
#line 2370 
      ;
      
#line 2373 
      (*ldv_emg_alias_ethtool_op_get_link_11)(ldv_16_container);
      
#line 2376 
      goto ldv_44364;
      case 23: 
#line 2378 
      ;
      
#line 2381 
      (*ldv_emg_alias_eth_validate_addr_8)(ldv_16_container);
      
#line 2384 
      goto ldv_44364;
      case 24: 
#line 2386 
      ;
      
#line 2388 
      ldv_16_ldv_param_1_8 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 2389 
      ldv_16_ldv_param_2_9 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2394 
      ldv_emg_wrapper_xgbe_get_ethtool_stats_9(ldv_16_container,ldv_16_ldv_param_1_8,ldv_16_ldv_param_2_9);
      
#line 2398 
      ldv_free((void *)ldv_16_ldv_param_1_8);
      
#line 2399 
      ldv_free((void *)ldv_16_ldv_param_2_9);
      
#line 2402 
      goto ldv_44364;
      case 25: 
#line 2404 
      ;
      
#line 2410 
      ldv_emg_wrapper_xgbe_change_mtu_10(ldv_16_container,ldv_16_ldv_param_1_7);
      
#line 2416 
      goto ldv_44364;
      case 26: 
#line 2418 
      ;
      
#line 2420 
      ldv_16_ldv_param_1_6 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
      
#line 2425 
      ldv_emg_wrapper_xgbe_get_stats64_7(ldv_16_container,ldv_16_ldv_param_1_6);
      
#line 2429 
      ldv_free((void *)ldv_16_ldv_param_1_6);
      
#line 2432 
      goto ldv_44364;
      case 27: 
#line 2434 
      ;
      
#line 2436 
      ldv_16_ldv_param_1_5 = (struct ethtool_ts_info *)ldv_xmalloc_unknown_size(0UL);
      
#line 2441 
      ldv_emg_wrapper_xgbe_get_ts_info_24(ldv_16_container,ldv_16_ldv_param_1_5);
      
#line 2445 
      ldv_free((void *)ldv_16_ldv_param_1_5);
      
#line 2448 
      goto ldv_44364;
      case 28: 
#line 2450 
      ;
      
#line 2453 
      ldv_emg_wrapper_xgbe_get_rxfh_indir_size_5(ldv_16_container);
      
#line 2456 
      goto ldv_44364;
      case 29: 
#line 2458 
      ;
      
#line 2460 
      ldv_16_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 2465 
      ldv_emg_wrapper_xgbe_set_settings_4(ldv_16_container,ldv_16_ldv_param_1_4);
      
#line 2469 
      ldv_free((void *)ldv_16_ldv_param_1_4);
      
#line 2472 
      goto ldv_44364;
      case 30: 
#line 2474 
      ;
      
#line 2476 
      ldv_16_ldv_param_1_3 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 2481 
      ldv_emg_wrapper_xgbe_get_pauseparam_3(ldv_16_container,ldv_16_ldv_param_1_3);
      
#line 2485 
      ldv_free((void *)ldv_16_ldv_param_1_3);
      
#line 2488 
      goto ldv_44364;
      default: 
#line 2490 
      ;
      
#line 2490 
      __VERIFIER_assume(0);
    }
    ldv_44364: 
#line 2499 
    ;
    
#line 2499 
    goto ldv_call_16;
  }
  else {
    
#line 2507 
    __retres = (void *)0;
    
#line 2507 
    goto return_label;
  }
  
#line 2510 
  __retres = (void *)0;
  return_label: 
#line 2510 
                return __retres;
}


#line 2515  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_4_1(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_19 *cf_arg_19;
  int tmp;
  
#line 2518 
  tmp = ldv_undef_int();
  
#line 2518 
  switch (tmp) {
    case 0: 
#line 2519 
    ;
    
#line 2520 
    ret = pthread_join(ldv_thread_19,(void **)0);
    
#line 2521 
    __VERIFIER_assume(ret == 0);
    
#line 2522 
    goto ldv_44401;
    default: 
#line 2524 
    ;
    
#line 2524 
    __VERIFIER_assume(0);
  }
  ldv_44401: 
#line 2525 
  ;
  
#line 2526 
  return;
}


#line 2530  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/xgbe/amd-xgbe.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_3_timer_list;
  int tmp_0;
  
#line 2537 
  tmp_0 = ldv_undef_int();
  
#line 2537 
  if (tmp_0 != 0) {
    
#line 2539 
    ldv_3_timer_list = arg0;
    
#line 2543 
    ldv_dispatch_instance_register_3_3(ldv_3_timer_list);
    
#line 2547 
    __retres = 0;
    
#line 2547 
    goto return_label;
  }
  else {
    int tmp;
    
#line 2554 
    tmp = ldv_undef_int_negative();
    
#line 2554 
    __retres = tmp;
    
#line 2554 
    goto return_label;
  }
  return_label: 
#line 2537 
                return __retres;
}


