/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __be64;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 cycle_t;

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_resources.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_46 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_46 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_48 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_47 {
   struct __anonstruct_48 __anonCompField___anonunion_47_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_47 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_113 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_113 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemleak.h"
struct kmem_cache;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 33 
struct inode;

#line 34 
struct dentry;

#line 35 
struct user_namespace;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_146 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_147 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_145 {
   struct __anonstruct_146 __anonCompField___anonunion_145_33 ;
   struct __anonstruct_147 __anonCompField___anonunion_145_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_145 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_148 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   atomic_t _mapcount ;
   struct __anonstruct_154 __anonCompField___anonunion_153_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_152 {
   union __anonunion_153 __anonCompField___anonstruct_152_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_151 {
   unsigned long counters ;
   struct __anonstruct_152 __anonCompField___anonunion_151_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_149 {
   union __anonunion_150 __anonCompField___anonstruct_149_37 ;
   union __anonunion_151 __anonCompField___anonstruct_149_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_157 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   struct list_head lru ;
   struct __anonstruct_156 __anonCompField___anonunion_155_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_157 __anonCompField___anonunion_155_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_158 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_148 __anonCompField_page_36 ;
   struct __anonstruct_149 __anonCompField_page_42 ;
   union __anonunion_155 __anonCompField_page_45 ;
   union __anonunion_158 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_159 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_159 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_161 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_161 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_162 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_162 kgid_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_163 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_163 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_165 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_166 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_167 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_170 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_169 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_170 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_171 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_172 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_164 {
   int _pad[28U] ;
   struct __anonstruct__kill_165 _kill ;
   struct __anonstruct__timer_166 _timer ;
   struct __anonstruct__rt_167 _rt ;
   struct __anonstruct__sigchld_168 _sigchld ;
   struct __anonstruct__sigfault_169 _sigfault ;
   struct __anonstruct__sigpoll_171 _sigpoll ;
   struct __anonstruct__sigsys_172 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_164 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct cred;

#line 38 
struct key_type;

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_179 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_180 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_182 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_181 {
   struct keyring_index_key index_key ;
   struct __anonstruct_182 __anonCompField___anonunion_181_49 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_183 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_185 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_184 {
   union __anonunion_payload_185 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_179 __anonCompField_key_47 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_180 __anonCompField_key_48 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_181 __anonCompField_key_50 ;
   union __anonunion_type_data_183 type_data ;
   union __anonunion_184 __anonCompField_key_51 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_186 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_186 __anonCompField_idr_layer_52 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 31 
struct kernfs_node;

#line 32 
struct kernfs_ops;

#line 33 
struct kernfs_open_file;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_205 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_205 __anonCompField_iov_iter_56 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 8  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqnr.h"
struct irq_desc;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct net;

#line 72 
struct fasync_struct;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct iattr;

#line 177 
struct super_block;

#line 178 
struct file_system_type;

#line 179 
struct kernfs_open_node;

#line 180 
struct kernfs_iattrs;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_206 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_206 __anonCompField_kernfs_node_57 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct kobject;

#line 478 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_207 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_207 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_22465 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_212 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_213 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_22465 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_212 __anonCompField_nf_bridge_info_61 ;
   union __anonunion_213 __anonCompField_nf_bridge_info_62 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_216 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_215 {
   u64 v64 ;
   struct __anonstruct_216 __anonCompField___anonunion_215_63 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_215 __anonCompField_skb_mstamp_64 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_219 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_218 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_219 __anonCompField___anonstruct_218_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_217 {
   struct __anonstruct_218 __anonCompField___anonunion_217_66 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_221 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_220 {
   __wsum csum ;
   struct __anonstruct_221 __anonCompField___anonunion_220_68 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_222 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_217 __anonCompField_sk_buff_67 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_220 __anonCompField_sk_buff_69 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_222 __anonCompField_sk_buff_70 ;
   __u32 secmark ;
   union __anonunion_223 __anonCompField_sk_buff_71 ;
   union __anonunion_224 __anonCompField_sk_buff_72 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_228 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_228 __anonCompField_pci_dev_73 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci.h"
struct msi_desc;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_230 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_229 {
   struct __anonstruct_230 __anonCompField___anonunion_229_74 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_229 __anonCompField_radix_tree_node_75 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_near_233 {
   u16 index ;
   u16 dist ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct cpu_rmap {
   struct kref refcount ;
   u16 size ;
   u16 used ;
   void **obj ;
   struct __anonstruct_near_233 near[0U] ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_234 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_234 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_235 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_235 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_236 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_236 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_237 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_237 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_238 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_238 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_239 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_239 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_240 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_240 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_241 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_241 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_242 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_243 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_242 ifr_ifrn ;
   union __anonunion_ifr_ifru_243 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_248 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_247 {
   struct __anonstruct_248 __anonCompField___anonunion_247_76 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_247 __anonCompField_lockref_77 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_250 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_249 {
   struct __anonstruct_250 __anonCompField___anonunion_249_78 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_249 __anonCompField_qstr_79 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_251 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_251 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_255 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_255 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_256 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_256 __anonCompField_kqid_81 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_259 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_260 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_261 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_259 __anonCompField_inode_82 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_260 __anonCompField_inode_83 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_261 __anonCompField_inode_84 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_262 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_262 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_264 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_263 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_264 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_263 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct mnt_namespace;

#line 372 
struct ipc_namespace;

#line 373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nsproxy.h"
struct proc_ns_operations;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nsproxy.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct pidmap {
   atomic_t nr_free ;
   void *page ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct fs_pin;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct pid_namespace {
   struct kref kref ;
   struct pidmap pidmap[128U] ;
   struct callback_head rcu ;
   int last_pid ;
   unsigned int nr_hashed ;
   struct task_struct *child_reaper ;
   struct kmem_cache *pid_cachep ;
   unsigned int level ;
   struct pid_namespace *parent ;
   struct vfsmount *proc_mnt ;
   struct dentry *proc_self ;
   struct dentry *proc_thread_self ;
   struct fs_pin *bacct ;
   struct user_namespace *user_ns ;
   struct work_struct proc_work ;
   kgid_t pid_gid ;
   int hide_pid ;
   int reboot ;
   struct ns_common ns ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct kernel_param;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_287 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_287 __anonCompField_kernel_param_85 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crash_dump.h"
struct cyclecounter {
   cycle_t (*read)(struct cyclecounter const *) ;
   cycle_t mask ;
   u32 mult ;
   u32 shift ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timecounter.h"
struct timecounter {
   struct cyclecounter const *cc ;
   cycle_t cycle_last ;
   u64 nsec ;
   u64 mask ;
   u64 frac ;
};

#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
enum mlx4_event {
    MLX4_EVENT_TYPE_COMP = 0,
    MLX4_EVENT_TYPE_PATH_MIG = 1,
    MLX4_EVENT_TYPE_COMM_EST = 2,
    MLX4_EVENT_TYPE_SQ_DRAINED = 3,
    MLX4_EVENT_TYPE_SRQ_QP_LAST_WQE = 19,
    MLX4_EVENT_TYPE_SRQ_LIMIT = 20,
    MLX4_EVENT_TYPE_CQ_ERROR = 4,
    MLX4_EVENT_TYPE_WQ_CATAS_ERROR = 5,
    MLX4_EVENT_TYPE_EEC_CATAS_ERROR = 6,
    MLX4_EVENT_TYPE_PATH_MIG_FAILED = 7,
    MLX4_EVENT_TYPE_WQ_INVAL_REQ_ERROR = 16,
    MLX4_EVENT_TYPE_WQ_ACCESS_ERROR = 17,
    MLX4_EVENT_TYPE_SRQ_CATAS_ERROR = 18,
    MLX4_EVENT_TYPE_LOCAL_CATAS_ERROR = 8,
    MLX4_EVENT_TYPE_PORT_CHANGE = 9,
    MLX4_EVENT_TYPE_EQ_OVERFLOW = 15,
    MLX4_EVENT_TYPE_ECC_DETECT = 14,
    MLX4_EVENT_TYPE_CMD = 10,
    MLX4_EVENT_TYPE_VEP_UPDATE = 25,
    MLX4_EVENT_TYPE_COMM_CHANNEL = 24,
    MLX4_EVENT_TYPE_OP_REQUIRED = 26,
    MLX4_EVENT_TYPE_FATAL_WARNING = 27,
    MLX4_EVENT_TYPE_FLR_EVENT = 28,
    MLX4_EVENT_TYPE_PORT_MNG_CHG_EVENT = 29,
    MLX4_EVENT_TYPE_RECOVERABLE_ERROR_EVENT = 62,
    MLX4_EVENT_TYPE_NONE = 255
};

#line 383 
enum mlx4_port_type {
    MLX4_PORT_TYPE_NONE = 0,
    MLX4_PORT_TYPE_IB = 1,
    MLX4_PORT_TYPE_ETH = 2,
    MLX4_PORT_TYPE_AUTO = 3
};

#line 448  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_rate_limit_caps {
   u16 num_rates ;
   u8 min_unit ;
   u16 min_val ;
   u8 max_unit ;
   u16 max_val ;
};

#line 478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_phys_caps {
   u32 gid_phys_table_len[3U] ;
   u32 pkey_phys_table_len[3U] ;
   u32 num_phys_eqs ;
   u32 base_sqpn ;
   u32 base_proxy_sqpn ;
   u32 base_tunnel_sqpn ;
};

#line 487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_caps {
   u64 fw_ver ;
   u32 function ;
   int num_ports ;
   int vl_cap[3U] ;
   int ib_mtu_cap[3U] ;
   __be32 ib_port_def_cap[3U] ;
   u64 def_mac[3U] ;
   int eth_mtu_cap[3U] ;
   int gid_table_len[3U] ;
   int pkey_table_len[3U] ;
   int trans_type[3U] ;
   int vendor_oui[3U] ;
   int wavelength[3U] ;
   u64 trans_code[3U] ;
   int local_ca_ack_delay ;
   int num_uars ;
   u32 uar_page_size ;
   int bf_reg_size ;
   int bf_regs_per_page ;
   int max_sq_sg ;
   int max_rq_sg ;
   int num_qps ;
   int max_wqes ;
   int max_sq_desc_sz ;
   int max_rq_desc_sz ;
   int max_qp_init_rdma ;
   int max_qp_dest_rdma ;
   u32 *qp0_qkey ;
   u32 *qp0_proxy ;
   u32 *qp1_proxy ;
   u32 *qp0_tunnel ;
   u32 *qp1_tunnel ;
   int num_srqs ;
   int max_srq_wqes ;
   int max_srq_sge ;
   int reserved_srqs ;
   int num_cqs ;
   int max_cqes ;
   int reserved_cqs ;
   int num_sys_eqs ;
   int num_eqs ;
   int reserved_eqs ;
   int num_comp_vectors ;
   int num_mpts ;
   int max_fmr_maps ;
   int num_mtts ;
   int fmr_reserved_mtts ;
   int reserved_mtts ;
   int reserved_mrws ;
   int reserved_uars ;
   int num_mgms ;
   int num_amgms ;
   int reserved_mcgs ;
   int num_qp_per_mgm ;
   int steering_mode ;
   int dmfs_high_steer_mode ;
   int fs_log_max_ucast_qp_range_size ;
   int num_pds ;
   int reserved_pds ;
   int max_xrcds ;
   int reserved_xrcds ;
   int mtt_entry_sz ;
   u32 max_msg_sz ;
   u32 page_size_cap ;
   u64 flags ;
   u64 flags2 ;
   u32 bmme_flags ;
   u32 reserved_lkey ;
   u16 stat_rate_support ;
   u8 port_width_cap[3U] ;
   int max_gso_sz ;
   int max_rss_tbl_sz ;
   int reserved_qps_cnt[5U] ;
   int reserved_qps ;
   int reserved_qps_base[5U] ;
   int log_num_macs ;
   int log_num_vlans ;
   enum mlx4_port_type port_type[3U] ;
   u8 supported_type[3U] ;
   u8 suggested_type[3U] ;
   u8 default_sense[3U] ;
   u32 port_mask[3U] ;
   enum mlx4_port_type possible_type[3U] ;
   u32 max_counters ;
   u8 port_ib_mtu[3U] ;
   u16 sqp_demux ;
   u32 eqe_size ;
   u32 cqe_size ;
   u8 eqe_factor ;
   u32 userspace_caps ;
   u32 function_caps ;
   u16 hca_core_clock ;
   u64 phys_port_id[3U] ;
   int tunnel_offload_mode ;
   u8 rx_checksum_flags_port[3U] ;
   u8 alloc_res_qp_mask ;
   u32 dmfs_high_rate_qpn_base ;
   u32 dmfs_high_rate_qpn_range ;
   u32 vf_caps ;
   struct mlx4_rate_limit_caps rl_caps ;
};

#line 590  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_buf_list {
   void *buf ;
   dma_addr_t map ;
};

#line 595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_buf {
   struct mlx4_buf_list direct ;
   struct mlx4_buf_list *page_list ;
   int nbufs ;
   int npages ;
   int page_shift ;
};

#line 603  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_mtt {
   u32 offset ;
   int order ;
   int page_shift ;
};

#line 613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_db_pgdir {
   struct list_head list ;
   unsigned long order0[16U] ;
   unsigned long order1[8U] ;
   unsigned long *bits[2U] ;
   __be32 *db_page ;
   dma_addr_t db_dma ;
};

#line 622 
struct mlx4_ib_user_db_page;

#line 623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
union __anonunion_u_295 {
   struct mlx4_db_pgdir *pgdir ;
   struct mlx4_ib_user_db_page *user_page ;
};

#line 623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_db {
   __be32 *db ;
   union __anonunion_u_295 u ;
   dma_addr_t dma ;
   int index ;
   int order ;
};

#line 635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_hwq_resources {
   struct mlx4_db db ;
   struct mlx4_mtt mtt ;
   struct mlx4_buf buf ;
};

#line 641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_mr {
   struct mlx4_mtt mtt ;
   u64 iova ;
   u64 size ;
   u32 key ;
   u32 pd ;
   u32 access ;
   int enabled ;
};

#line 674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_uar {
   unsigned long pfn ;
   int index ;
   struct list_head bf_list ;
   unsigned int free_bf_bmap ;
   void *map ;
   void *bf_map ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_bf {
   unsigned int offset ;
   int buf_size ;
   struct mlx4_uar *uar ;
   void *reg ;
};

#line 690  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct __anonstruct_tasklet_ctx_296 {
   struct list_head list ;
   void (*comp)(struct mlx4_cq *) ;
   void *priv ;
};

#line 690  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_cq {
   void (*comp)(struct mlx4_cq *) ;
   void (*event)(struct mlx4_cq *, enum mlx4_event ) ;
   struct mlx4_uar *uar ;
   u32 cons_index ;
   u16 irq ;
   __be32 *set_ci_db ;
   __be32 *arm_db ;
   int arm_sn ;
   int cqn ;
   unsigned int vector ;
   atomic_t refcount ;
   struct completion free ;
   struct __anonstruct_tasklet_ctx_296 tasklet_ctx ;
   int reset_notify_added ;
   struct list_head reset_notify ;
};

#line 717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_qp {
   void (*event)(struct mlx4_qp *, enum mlx4_event ) ;
   int qpn ;
   atomic_t refcount ;
   struct completion free ;
};

#line 792  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_quotas {
   int qp ;
   int cq ;
   int srq ;
   int mpt ;
   int mtt ;
   int counter ;
   int xrcd ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_vf_dev {
   u8 min_port ;
   u8 n_ports ;
};

#line 807 
struct mlx4_dev;

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_dev_persistent {
   struct pci_dev *pdev ;
   struct mlx4_dev *dev ;
   int nvfs[3U] ;
   int num_vfs ;
   enum mlx4_port_type curr_port_type[3U] ;
   enum mlx4_port_type curr_port_poss_type[3U] ;
   struct work_struct catas_work ;
   struct workqueue_struct *catas_wq ;
   struct mutex device_state_mutex ;
   u8 state ;
   struct mutex interface_state_mutex ;
   u8 interface_state ;
};

#line 822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_dev {
   struct mlx4_dev_persistent *persist ;
   unsigned long flags ;
   unsigned long num_slaves ;
   struct mlx4_caps caps ;
   struct mlx4_phys_caps phys_caps ;
   struct mlx4_quotas quotas ;
   struct radix_tree_root qp_table_tree ;
   u8 rev_id ;
   char board_id[64U] ;
   int numa_node ;
   int oper_log_mgm_entry_size ;
   u64 regid_promisc_array[3U] ;
   u64 regid_allmulti_array[3U] ;
   struct mlx4_vf_dev *dev_vfs ;
};

#line 1528 
enum mlx4_qp_state {
    MLX4_QP_STATE_RST = 0,
    MLX4_QP_STATE_INIT = 1,
    MLX4_QP_STATE_RTR = 2,
    MLX4_QP_STATE_RTS = 3,
    MLX4_QP_STATE_SQER = 4,
    MLX4_QP_STATE_SQD = 5,
    MLX4_QP_STATE_ERR = 6,
    MLX4_QP_STATE_SQ_DRAINING = 7,
    MLX4_QP_NUM_STATE = 8
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
struct mlx4_qp_path {
   u8 fl ;
   u8 vlan_control ;
   u8 disable_pkey_check ;
   u8 pkey_index ;
   u8 counter_index ;
   u8 grh_mylmc ;
   __be16 rlid ;
   u8 ackto ;
   u8 mgid_index ;
   u8 static_rate ;
   u8 hop_limit ;
   __be32 tclass_flowlabel ;
   u8 rgid[16U] ;
   u8 sched_queue ;
   u8 vlan_index ;
   u8 feup ;
   u8 fvl_rx ;
   u8 reserved4[2U] ;
   u8 dmac[6U] ;
};

#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
struct mlx4_qp_context {
   __be32 flags ;
   __be32 pd ;
   u8 mtu_msgmax ;
   u8 rq_size_stride ;
   u8 sq_size_stride ;
   u8 rlkey ;
   __be32 usr_page ;
   __be32 local_qpn ;
   __be32 remote_qpn ;
   struct mlx4_qp_path pri_path ;
   struct mlx4_qp_path alt_path ;
   __be32 params1 ;
   u32 reserved1 ;
   __be32 next_send_psn ;
   __be32 cqn_send ;
   u32 reserved2[2U] ;
   __be32 last_acked_psn ;
   __be32 ssn ;
   __be32 params2 ;
   __be32 rnr_nextrecvpsn ;
   __be32 xrcd ;
   __be32 cqn_recv ;
   __be64 db_rec_addr ;
   __be32 qkey ;
   __be32 srqn ;
   __be32 msn ;
   __be16 rq_wqe_counter ;
   __be16 sq_wqe_counter ;
   u32 reserved3 ;
   __be16 rate_limit_params ;
   u8 reserved4 ;
   u8 qos_vport ;
   __be32 param3 ;
   __be32 nummmcpeers_basemkey ;
   u8 log_page_size ;
   u8 reserved5[2U] ;
   u8 mtt_base_addr_h ;
   __be32 mtt_base_addr_l ;
   u32 reserved6[10U] ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vtime.h"
struct irq_data;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/irq_regs.h"
struct msi_msg;

#line 31 
enum irqchip_irq_state;

#line 31 
enum irqchip_irq_state;

#line 62 
struct irq_domain;

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/irq_regs.h"
struct irq_common_data {
   unsigned int state_use_accessors ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct irq_chip;

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct irq_data {
   u32 mask ;
   unsigned int irq ;
   unsigned long hwirq ;
   unsigned int node ;
   struct irq_common_data *common ;
   struct irq_chip *chip ;
   struct irq_domain *domain ;
   struct irq_data *parent_data ;
   void *handler_data ;
   void *chip_data ;
   struct msi_desc *msi_desc ;
   cpumask_var_t affinity ;
};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct irq_chip {
   char const *name ;
   unsigned int (*irq_startup)(struct irq_data *) ;
   void (*irq_shutdown)(struct irq_data *) ;
   void (*irq_enable)(struct irq_data *) ;
   void (*irq_disable)(struct irq_data *) ;
   void (*irq_ack)(struct irq_data *) ;
   void (*irq_mask)(struct irq_data *) ;
   void (*irq_mask_ack)(struct irq_data *) ;
   void (*irq_unmask)(struct irq_data *) ;
   void (*irq_eoi)(struct irq_data *) ;
   int (*irq_set_affinity)(struct irq_data *, struct cpumask const *, bool ) ;
   int (*irq_retrigger)(struct irq_data *) ;
   int (*irq_set_type)(struct irq_data *, unsigned int ) ;
   int (*irq_set_wake)(struct irq_data *, unsigned int ) ;
   void (*irq_bus_lock)(struct irq_data *) ;
   void (*irq_bus_sync_unlock)(struct irq_data *) ;
   void (*irq_cpu_online)(struct irq_data *) ;
   void (*irq_cpu_offline)(struct irq_data *) ;
   void (*irq_suspend)(struct irq_data *) ;
   void (*irq_resume)(struct irq_data *) ;
   void (*irq_pm_shutdown)(struct irq_data *) ;
   void (*irq_calc_mask)(struct irq_data *) ;
   void (*irq_print_chip)(struct irq_data *, struct seq_file *) ;
   int (*irq_request_resources)(struct irq_data *) ;
   void (*irq_release_resources)(struct irq_data *) ;
   void (*irq_compose_msi_msg)(struct irq_data *, struct msi_msg *) ;
   void (*irq_write_msi_msg)(struct irq_data *, struct msi_msg *) ;
   int (*irq_get_irqchip_state)(struct irq_data *, enum irqchip_irq_state , bool *) ;
   int (*irq_set_irqchip_state)(struct irq_data *, enum irqchip_irq_state , bool ) ;
   int (*irq_set_vcpu_affinity)(struct irq_data *, void *) ;
   unsigned long flags ;
};

#line 397 
struct irq_affinity_notify;

#line 398 
struct irqaction;

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct irq_desc {
   struct irq_common_data irq_common_data ;
   struct irq_data irq_data ;
   unsigned int *kstat_irqs ;
   void (*handle_irq)(unsigned int , struct irq_desc *) ;
   struct irqaction *action ;
   unsigned int status_use_accessors ;
   unsigned int core_internal_state__do_not_mess_with_it ;
   unsigned int depth ;
   unsigned int wake_depth ;
   unsigned int irq_count ;
   unsigned long last_unhandled ;
   unsigned int irqs_unhandled ;
   atomic_t threads_handled ;
   int threads_handled_last ;
   raw_spinlock_t lock ;
   struct cpumask *percpu_enabled ;
   struct cpumask const *affinity_hint ;
   struct irq_affinity_notify *affinity_notify ;
   cpumask_var_t pending_mask ;
   unsigned long threads_oneshot ;
   atomic_t threads_active ;
   wait_queue_head_t wait_for_threads ;
   unsigned int nr_actions ;
   unsigned int no_suspend_depth ;
   unsigned int cond_suspend_depth ;
   unsigned int force_resume_depth ;
   struct proc_dir_entry *dir ;
   int parent_irq ;
   struct module *owner ;
   char const *name ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct irqaction {
   irqreturn_t (*handler)(int , void *) ;
   void *dev_id ;
   void *percpu_dev_id ;
   struct irqaction *next ;
   irqreturn_t (*thread_fn)(int , void *) ;
   struct task_struct *thread ;
   unsigned int irq ;
   unsigned int flags ;
   unsigned long thread_flags ;
   unsigned long thread_mask ;
   char const *name ;
   struct proc_dir_entry *dir ;
};

#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct irq_affinity_notify {
   unsigned int irq ;
   struct kref kref ;
   struct work_struct work ;
   void (*notify)(struct irq_affinity_notify *, cpumask_t const *) ;
   void (*release)(struct kref *) ;
};

#line 363 
enum irqchip_irq_state {
    IRQCHIP_STATE_PENDING = 0,
    IRQCHIP_STATE_ACTIVE = 1,
    IRQCHIP_STATE_MASKED = 2,
    IRQCHIP_STATE_LINE_LEVEL = 3
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct net_generic;

#line 17 
struct netns_ipvs;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_336 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_336 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_30224 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_30224 phy_interface_t;

#line 126 
enum ldv_30277 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_30277 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 80 
enum dcbnl_cndd_states {
    DCB_CNDD_RESET = 0,
    DCB_CNDD_EDGE = 1,
    DCB_CNDD_INTERIOR = 2,
    DCB_CNDD_INTERIOR_READY = 3
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_31968 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_31969 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_346 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_347 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_348 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_346 adj_list ;
   struct __anonstruct_all_adj_list_347 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_31968 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_31969 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_348 __anonCompField_net_device_102 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct hwtstamp_config {
   int flags ;
   int tx_type ;
   int rx_filter ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/pps.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations const *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pps_kernel.h"
struct ptp_clock_time {
   __s64 sec ;
   __u32 nsec ;
   __u32 reserved ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_extts_request {
   unsigned int index ;
   unsigned int flags ;
   unsigned int rsv[2U] ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_perout_request {
   struct ptp_clock_time start ;
   struct ptp_clock_time period ;
   unsigned int index ;
   unsigned int flags ;
   unsigned int rsv[4U] ;
};

#line 83 
enum ptp_pin_function {
    PTP_PF_NONE = 0,
    PTP_PF_EXTTS = 1,
    PTP_PF_PEROUT = 2,
    PTP_PF_PHYSYNC = 3
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_pin_desc {
   char name[64U] ;
   unsigned int index ;
   unsigned int func ;
   unsigned int chan ;
   unsigned int rsv[5U] ;
};

#line 134 
enum ldv_33993 {
    PTP_CLK_REQ_EXTTS = 0,
    PTP_CLK_REQ_PEROUT = 1,
    PTP_CLK_REQ_PPS = 2
};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
union __anonunion_361 {
   struct ptp_extts_request extts ;
   struct ptp_perout_request perout ;
};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_clock_request {
   enum ldv_33993 type ;
   union __anonunion_361 __anonCompField_ptp_clock_request_103 ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
struct ptp_clock_info {
   struct module *owner ;
   char name[16U] ;
   s32 max_adj ;
   int n_alarm ;
   int n_ext_ts ;
   int n_per_out ;
   int n_pins ;
   int pps ;
   struct ptp_pin_desc *pin_config ;
   int (*adjfreq)(struct ptp_clock_info *, s32 ) ;
   int (*adjtime)(struct ptp_clock_info *, s64 ) ;
   int (*gettime64)(struct ptp_clock_info *, struct timespec *) ;
   int (*settime64)(struct ptp_clock_info *, struct timespec const *) ;
   int (*enable)(struct ptp_clock_info *, struct ptp_clock_request *, int ) ;
   int (*verify)(struct ptp_clock_info *, unsigned int , enum ptp_pin_function , unsigned int ) ;
};

#line 113 
struct ptp_clock;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/doorbell.h"
struct __anonstruct_364 {
   __be16 rlid ;
   __be16 status ;
   u8 ipv6_ext_mask ;
   u8 badfcs_enc ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/doorbell.h"
union __anonunion_363 {
   struct __anonstruct_364 __anonCompField___anonunion_363_105 ;
   u8 smac[6U] ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/doorbell.h"
struct mlx4_cqe {
   __be32 vlan_my_qpn ;
   __be32 immed_rss_invalid ;
   __be32 g_mlpath_rqpn ;
   __be16 sl_vid ;
   union __anonunion_363 __anonCompField_mlx4_cqe_106 ;
   __be32 byte_cnt ;
   __be16 wqe_index ;
   __be16 checksum ;
   u8 reserved[3U] ;
   u8 owner_sr_opcode ;
};

#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_port.h"
struct mlx4_en_stat_out_mbox {
   __be64 R64_prio_0 ;
   __be64 R64_prio_1 ;
   __be64 R64_prio_2 ;
   __be64 R64_prio_3 ;
   __be64 R64_prio_4 ;
   __be64 R64_prio_5 ;
   __be64 R64_prio_6 ;
   __be64 R64_prio_7 ;
   __be64 R64_novlan ;
   __be64 R127_prio_0 ;
   __be64 R127_prio_1 ;
   __be64 R127_prio_2 ;
   __be64 R127_prio_3 ;
   __be64 R127_prio_4 ;
   __be64 R127_prio_5 ;
   __be64 R127_prio_6 ;
   __be64 R127_prio_7 ;
   __be64 R127_novlan ;
   __be64 R255_prio_0 ;
   __be64 R255_prio_1 ;
   __be64 R255_prio_2 ;
   __be64 R255_prio_3 ;
   __be64 R255_prio_4 ;
   __be64 R255_prio_5 ;
   __be64 R255_prio_6 ;
   __be64 R255_prio_7 ;
   __be64 R255_novlan ;
   __be64 R511_prio_0 ;
   __be64 R511_prio_1 ;
   __be64 R511_prio_2 ;
   __be64 R511_prio_3 ;
   __be64 R511_prio_4 ;
   __be64 R511_prio_5 ;
   __be64 R511_prio_6 ;
   __be64 R511_prio_7 ;
   __be64 R511_novlan ;
   __be64 R1023_prio_0 ;
   __be64 R1023_prio_1 ;
   __be64 R1023_prio_2 ;
   __be64 R1023_prio_3 ;
   __be64 R1023_prio_4 ;
   __be64 R1023_prio_5 ;
   __be64 R1023_prio_6 ;
   __be64 R1023_prio_7 ;
   __be64 R1023_novlan ;
   __be64 R1518_prio_0 ;
   __be64 R1518_prio_1 ;
   __be64 R1518_prio_2 ;
   __be64 R1518_prio_3 ;
   __be64 R1518_prio_4 ;
   __be64 R1518_prio_5 ;
   __be64 R1518_prio_6 ;
   __be64 R1518_prio_7 ;
   __be64 R1518_novlan ;
   __be64 R1522_prio_0 ;
   __be64 R1522_prio_1 ;
   __be64 R1522_prio_2 ;
   __be64 R1522_prio_3 ;
   __be64 R1522_prio_4 ;
   __be64 R1522_prio_5 ;
   __be64 R1522_prio_6 ;
   __be64 R1522_prio_7 ;
   __be64 R1522_novlan ;
   __be64 R1548_prio_0 ;
   __be64 R1548_prio_1 ;
   __be64 R1548_prio_2 ;
   __be64 R1548_prio_3 ;
   __be64 R1548_prio_4 ;
   __be64 R1548_prio_5 ;
   __be64 R1548_prio_6 ;
   __be64 R1548_prio_7 ;
   __be64 R1548_novlan ;
   __be64 R2MTU_prio_0 ;
   __be64 R2MTU_prio_1 ;
   __be64 R2MTU_prio_2 ;
   __be64 R2MTU_prio_3 ;
   __be64 R2MTU_prio_4 ;
   __be64 R2MTU_prio_5 ;
   __be64 R2MTU_prio_6 ;
   __be64 R2MTU_prio_7 ;
   __be64 R2MTU_novlan ;
   __be64 RGIANT_prio_0 ;
   __be64 RGIANT_prio_1 ;
   __be64 RGIANT_prio_2 ;
   __be64 RGIANT_prio_3 ;
   __be64 RGIANT_prio_4 ;
   __be64 RGIANT_prio_5 ;
   __be64 RGIANT_prio_6 ;
   __be64 RGIANT_prio_7 ;
   __be64 RGIANT_novlan ;
   __be64 RBCAST_prio_0 ;
   __be64 RBCAST_prio_1 ;
   __be64 RBCAST_prio_2 ;
   __be64 RBCAST_prio_3 ;
   __be64 RBCAST_prio_4 ;
   __be64 RBCAST_prio_5 ;
   __be64 RBCAST_prio_6 ;
   __be64 RBCAST_prio_7 ;
   __be64 RBCAST_novlan ;
   __be64 MCAST_prio_0 ;
   __be64 MCAST_prio_1 ;
   __be64 MCAST_prio_2 ;
   __be64 MCAST_prio_3 ;
   __be64 MCAST_prio_4 ;
   __be64 MCAST_prio_5 ;
   __be64 MCAST_prio_6 ;
   __be64 MCAST_prio_7 ;
   __be64 MCAST_novlan ;
   __be64 RTOTG_prio_0 ;
   __be64 RTOTG_prio_1 ;
   __be64 RTOTG_prio_2 ;
   __be64 RTOTG_prio_3 ;
   __be64 RTOTG_prio_4 ;
   __be64 RTOTG_prio_5 ;
   __be64 RTOTG_prio_6 ;
   __be64 RTOTG_prio_7 ;
   __be64 RTOTG_novlan ;
   __be64 RTTLOCT_prio_0 ;
   __be64 RTTLOCT_NOFRM_prio_0 ;
   __be64 ROCT_prio_0 ;
   __be64 RTTLOCT_prio_1 ;
   __be64 RTTLOCT_NOFRM_prio_1 ;
   __be64 ROCT_prio_1 ;
   __be64 RTTLOCT_prio_2 ;
   __be64 RTTLOCT_NOFRM_prio_2 ;
   __be64 ROCT_prio_2 ;
   __be64 RTTLOCT_prio_3 ;
   __be64 RTTLOCT_NOFRM_prio_3 ;
   __be64 ROCT_prio_3 ;
   __be64 RTTLOCT_prio_4 ;
   __be64 RTTLOCT_NOFRM_prio_4 ;
   __be64 ROCT_prio_4 ;
   __be64 RTTLOCT_prio_5 ;
   __be64 RTTLOCT_NOFRM_prio_5 ;
   __be64 ROCT_prio_5 ;
   __be64 RTTLOCT_prio_6 ;
   __be64 RTTLOCT_NOFRM_prio_6 ;
   __be64 ROCT_prio_6 ;
   __be64 RTTLOCT_prio_7 ;
   __be64 RTTLOCT_NOFRM_prio_7 ;
   __be64 ROCT_prio_7 ;
   __be64 RTTLOCT_novlan ;
   __be64 RTTLOCT_NOFRM_novlan ;
   __be64 ROCT_novlan ;
   __be64 RTOT_prio_0 ;
   __be64 R1Q_prio_0 ;
   __be64 reserved1 ;
   __be64 RTOT_prio_1 ;
   __be64 R1Q_prio_1 ;
   __be64 reserved2 ;
   __be64 RTOT_prio_2 ;
   __be64 R1Q_prio_2 ;
   __be64 reserved3 ;
   __be64 RTOT_prio_3 ;
   __be64 R1Q_prio_3 ;
   __be64 reserved4 ;
   __be64 RTOT_prio_4 ;
   __be64 R1Q_prio_4 ;
   __be64 reserved5 ;
   __be64 RTOT_prio_5 ;
   __be64 R1Q_prio_5 ;
   __be64 reserved6 ;
   __be64 RTOT_prio_6 ;
   __be64 R1Q_prio_6 ;
   __be64 reserved7 ;
   __be64 RTOT_prio_7 ;
   __be64 R1Q_prio_7 ;
   __be64 reserved8 ;
   __be64 RTOT_novlan ;
   __be64 R1Q_novlan ;
   __be64 reserved9 ;
   __be64 RCNTL ;
   __be64 reserved10 ;
   __be64 reserved11 ;
   __be64 reserved12 ;
   __be64 RInRangeLengthErr ;
   __be64 ROutRangeLengthErr ;
   __be64 RFrmTooLong ;
   __be64 PCS ;
   __be64 T64_prio_0 ;
   __be64 T64_prio_1 ;
   __be64 T64_prio_2 ;
   __be64 T64_prio_3 ;
   __be64 T64_prio_4 ;
   __be64 T64_prio_5 ;
   __be64 T64_prio_6 ;
   __be64 T64_prio_7 ;
   __be64 T64_novlan ;
   __be64 T64_loopbk ;
   __be64 T127_prio_0 ;
   __be64 T127_prio_1 ;
   __be64 T127_prio_2 ;
   __be64 T127_prio_3 ;
   __be64 T127_prio_4 ;
   __be64 T127_prio_5 ;
   __be64 T127_prio_6 ;
   __be64 T127_prio_7 ;
   __be64 T127_novlan ;
   __be64 T127_loopbk ;
   __be64 T255_prio_0 ;
   __be64 T255_prio_1 ;
   __be64 T255_prio_2 ;
   __be64 T255_prio_3 ;
   __be64 T255_prio_4 ;
   __be64 T255_prio_5 ;
   __be64 T255_prio_6 ;
   __be64 T255_prio_7 ;
   __be64 T255_novlan ;
   __be64 T255_loopbk ;
   __be64 T511_prio_0 ;
   __be64 T511_prio_1 ;
   __be64 T511_prio_2 ;
   __be64 T511_prio_3 ;
   __be64 T511_prio_4 ;
   __be64 T511_prio_5 ;
   __be64 T511_prio_6 ;
   __be64 T511_prio_7 ;
   __be64 T511_novlan ;
   __be64 T511_loopbk ;
   __be64 T1023_prio_0 ;
   __be64 T1023_prio_1 ;
   __be64 T1023_prio_2 ;
   __be64 T1023_prio_3 ;
   __be64 T1023_prio_4 ;
   __be64 T1023_prio_5 ;
   __be64 T1023_prio_6 ;
   __be64 T1023_prio_7 ;
   __be64 T1023_novlan ;
   __be64 T1023_loopbk ;
   __be64 T1518_prio_0 ;
   __be64 T1518_prio_1 ;
   __be64 T1518_prio_2 ;
   __be64 T1518_prio_3 ;
   __be64 T1518_prio_4 ;
   __be64 T1518_prio_5 ;
   __be64 T1518_prio_6 ;
   __be64 T1518_prio_7 ;
   __be64 T1518_novlan ;
   __be64 T1518_loopbk ;
   __be64 T1522_prio_0 ;
   __be64 T1522_prio_1 ;
   __be64 T1522_prio_2 ;
   __be64 T1522_prio_3 ;
   __be64 T1522_prio_4 ;
   __be64 T1522_prio_5 ;
   __be64 T1522_prio_6 ;
   __be64 T1522_prio_7 ;
   __be64 T1522_novlan ;
   __be64 T1522_loopbk ;
   __be64 T1548_prio_0 ;
   __be64 T1548_prio_1 ;
   __be64 T1548_prio_2 ;
   __be64 T1548_prio_3 ;
   __be64 T1548_prio_4 ;
   __be64 T1548_prio_5 ;
   __be64 T1548_prio_6 ;
   __be64 T1548_prio_7 ;
   __be64 T1548_novlan ;
   __be64 T1548_loopbk ;
   __be64 T2MTU_prio_0 ;
   __be64 T2MTU_prio_1 ;
   __be64 T2MTU_prio_2 ;
   __be64 T2MTU_prio_3 ;
   __be64 T2MTU_prio_4 ;
   __be64 T2MTU_prio_5 ;
   __be64 T2MTU_prio_6 ;
   __be64 T2MTU_prio_7 ;
   __be64 T2MTU_novlan ;
   __be64 T2MTU_loopbk ;
   __be64 TGIANT_prio_0 ;
   __be64 TGIANT_prio_1 ;
   __be64 TGIANT_prio_2 ;
   __be64 TGIANT_prio_3 ;
   __be64 TGIANT_prio_4 ;
   __be64 TGIANT_prio_5 ;
   __be64 TGIANT_prio_6 ;
   __be64 TGIANT_prio_7 ;
   __be64 TGIANT_novlan ;
   __be64 TGIANT_loopbk ;
   __be64 TBCAST_prio_0 ;
   __be64 TBCAST_prio_1 ;
   __be64 TBCAST_prio_2 ;
   __be64 TBCAST_prio_3 ;
   __be64 TBCAST_prio_4 ;
   __be64 TBCAST_prio_5 ;
   __be64 TBCAST_prio_6 ;
   __be64 TBCAST_prio_7 ;
   __be64 TBCAST_novlan ;
   __be64 TBCAST_loopbk ;
   __be64 TMCAST_prio_0 ;
   __be64 TMCAST_prio_1 ;
   __be64 TMCAST_prio_2 ;
   __be64 TMCAST_prio_3 ;
   __be64 TMCAST_prio_4 ;
   __be64 TMCAST_prio_5 ;
   __be64 TMCAST_prio_6 ;
   __be64 TMCAST_prio_7 ;
   __be64 TMCAST_novlan ;
   __be64 TMCAST_loopbk ;
   __be64 TTOTG_prio_0 ;
   __be64 TTOTG_prio_1 ;
   __be64 TTOTG_prio_2 ;
   __be64 TTOTG_prio_3 ;
   __be64 TTOTG_prio_4 ;
   __be64 TTOTG_prio_5 ;
   __be64 TTOTG_prio_6 ;
   __be64 TTOTG_prio_7 ;
   __be64 TTOTG_novlan ;
   __be64 TTOTG_loopbk ;
   __be64 TTTLOCT_prio_0 ;
   __be64 TTTLOCT_NOFRM_prio_0 ;
   __be64 TOCT_prio_0 ;
   __be64 TTTLOCT_prio_1 ;
   __be64 TTTLOCT_NOFRM_prio_1 ;
   __be64 TOCT_prio_1 ;
   __be64 TTTLOCT_prio_2 ;
   __be64 TTTLOCT_NOFRM_prio_2 ;
   __be64 TOCT_prio_2 ;
   __be64 TTTLOCT_prio_3 ;
   __be64 TTTLOCT_NOFRM_prio_3 ;
   __be64 TOCT_prio_3 ;
   __be64 TTTLOCT_prio_4 ;
   __be64 TTTLOCT_NOFRM_prio_4 ;
   __be64 TOCT_prio_4 ;
   __be64 TTTLOCT_prio_5 ;
   __be64 TTTLOCT_NOFRM_prio_5 ;
   __be64 TOCT_prio_5 ;
   __be64 TTTLOCT_prio_6 ;
   __be64 TTTLOCT_NOFRM_prio_6 ;
   __be64 TOCT_prio_6 ;
   __be64 TTTLOCT_prio_7 ;
   __be64 TTTLOCT_NOFRM_prio_7 ;
   __be64 TOCT_prio_7 ;
   __be64 TTTLOCT_novlan ;
   __be64 TTTLOCT_NOFRM_novlan ;
   __be64 TOCT_novlan ;
   __be64 TTTLOCT_loopbk ;
   __be64 TTTLOCT_NOFRM_loopbk ;
   __be64 TOCT_loopbk ;
   __be64 TTOT_prio_0 ;
   __be64 T1Q_prio_0 ;
   __be64 reserved13 ;
   __be64 TTOT_prio_1 ;
   __be64 T1Q_prio_1 ;
   __be64 reserved14 ;
   __be64 TTOT_prio_2 ;
   __be64 T1Q_prio_2 ;
   __be64 reserved15 ;
   __be64 TTOT_prio_3 ;
   __be64 T1Q_prio_3 ;
   __be64 reserved16 ;
   __be64 TTOT_prio_4 ;
   __be64 T1Q_prio_4 ;
   __be64 reserved17 ;
   __be64 TTOT_prio_5 ;
   __be64 T1Q_prio_5 ;
   __be64 reserved18 ;
   __be64 TTOT_prio_6 ;
   __be64 T1Q_prio_6 ;
   __be64 reserved19 ;
   __be64 TTOT_prio_7 ;
   __be64 T1Q_prio_7 ;
   __be64 reserved20 ;
   __be64 TTOT_novlan ;
   __be64 T1Q_novlan ;
   __be64 reserved21 ;
   __be64 TTOT_loopbk ;
   __be64 T1Q_loopbk ;
   __be64 reserved22 ;
   __be32 RJBBR ;
   __be32 RCRC ;
   __be32 RRUNT ;
   __be32 RSHORT ;
   __be32 RDROP ;
   __be32 RdropOvflw ;
   __be32 RdropLength ;
   __be32 RTOTFRMS ;
   __be32 TDROP ;
};

#line 585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_port.h"
struct mlx4_en_pkt_stats {
   unsigned long rx_multicast_packets ;
   unsigned long rx_broadcast_packets ;
   unsigned long rx_jabbers ;
   unsigned long rx_in_range_length_error ;
   unsigned long rx_out_range_length_error ;
   unsigned long tx_multicast_packets ;
   unsigned long tx_broadcast_packets ;
   unsigned long rx_prio[9U][2U] ;
   unsigned long tx_prio[9U][2U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_stats.h"
struct mlx4_en_counter_stats {
   unsigned long rx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_packets ;
   unsigned long tx_bytes ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_stats.h"
struct mlx4_en_port_stats {
   unsigned long tso_packets ;
   unsigned long xmit_more ;
   unsigned long queue_stopped ;
   unsigned long wake_queue ;
   unsigned long tx_timeout ;
   unsigned long rx_alloc_failed ;
   unsigned long rx_chksum_good ;
   unsigned long rx_chksum_none ;
   unsigned long rx_chksum_complete ;
   unsigned long tx_chksum_offload ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_stats.h"
struct mlx4_en_perf_stats {
   u32 tx_poll ;
   u64 tx_pktsz_avg ;
   u32 inflight_avg ;
   u16 tx_coal_avg ;
   u16 rx_coal_avg ;
   u32 napi_quota ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_stats.h"
struct mlx4_en_flow_stats_rx {
   u64 rx_pause ;
   u64 rx_pause_duration ;
   u64 rx_pause_transition ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_stats.h"
struct mlx4_en_flow_stats_tx {
   u64 tx_pause ;
   u64 tx_pause_duration ;
   u64 tx_pause_transition ;
};

#line 121 
enum cq_type {
    RX = 0,
    TX = 1
};

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_stats.h"
struct mlx4_en_tx_info {
   struct sk_buff *skb ;
   dma_addr_t map0_dma ;
   u32 map0_byte_count ;
   u32 nr_txbb ;
   u32 nr_bytes ;
   u8 linear ;
   u8 data_offset ;
   u8 inl ;
   u8 ts_requested ;
   u8 nr_maps ;
};

#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_rx_alloc {
   struct page *page ;
   dma_addr_t dma ;
   u32 page_offset ;
   u32 page_size ;
};

#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_tx_ring {
   u32 last_nr_txbb ;
   u32 cons ;
   unsigned long wake_queue ;
   u32 prod ;
   unsigned long bytes ;
   unsigned long packets ;
   unsigned long tx_csum ;
   unsigned long tso_packets ;
   unsigned long xmit_more ;
   struct mlx4_bf bf ;
   unsigned long queue_stopped ;
   cpumask_t affinity_mask ;
   struct mlx4_qp qp ;
   struct mlx4_hwq_resources wqres ;
   u32 size ;
   u32 size_mask ;
   u16 stride ;
   u32 full_size ;
   u16 cqn ;
   u32 buf_size ;
   __be32 doorbell_qpn ;
   __be32 mr_key ;
   void *buf ;
   struct mlx4_en_tx_info *tx_info ;
   u8 *bounce_buf ;
   struct mlx4_qp_context context ;
   int qpn ;
   enum mlx4_qp_state qp_state ;
   u8 queue_index ;
   bool bf_enabled ;
   bool bf_alloced ;
   struct netdev_queue *tx_queue ;
   int hwtstamp_tx_type ;
};

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_rx_ring {
   struct mlx4_hwq_resources wqres ;
   struct mlx4_en_rx_alloc page_alloc[4U] ;
   u32 size ;
   u32 actual_size ;
   u32 size_mask ;
   u16 stride ;
   u16 log_stride ;
   u16 cqn ;
   u32 prod ;
   u32 cons ;
   u32 buf_size ;
   u8 fcs_del ;
   void *buf ;
   void *rx_info ;
   unsigned long bytes ;
   unsigned long packets ;
   unsigned long yields ;
   unsigned long misses ;
   unsigned long cleaned ;
   unsigned long csum_ok ;
   unsigned long csum_none ;
   unsigned long csum_complete ;
   int hwtstamp_rx_filter ;
   cpumask_var_t affinity_mask ;
};

#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_cq {
   struct mlx4_cq mcq ;
   struct mlx4_hwq_resources wqres ;
   int ring ;
   struct net_device *dev ;
   struct napi_struct napi ;
   int size ;
   int buf_size ;
   int vector ;
   enum cq_type is_tx ;
   u16 moder_time ;
   u16 moder_cnt ;
   struct mlx4_cqe *buf ;
   unsigned int state ;
   spinlock_t poll_lock ;
   struct irq_desc *irq_desc ;
};

#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_port_profile {
   u32 flags ;
   u32 tx_ring_num ;
   u32 rx_ring_num ;
   u32 tx_ring_size ;
   u32 rx_ring_size ;
   u8 rx_pause ;
   u8 rx_ppp ;
   u8 tx_pause ;
   u8 tx_ppp ;
   int rss_rings ;
   int inline_thold ;
};

#line 377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_profile {
   int udp_rss ;
   u8 rss_mask ;
   u32 active_ports ;
   u32 small_pkt_int ;
   u8 no_reset ;
   u8 num_tx_rings_p_up ;
   struct mlx4_en_port_profile prof[3U] ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_dev {
   struct mlx4_dev *dev ;
   struct pci_dev *pdev ;
   struct mutex state_lock ;
   struct net_device *pndev[3U] ;
   struct net_device *upper[3U] ;
   u32 port_cnt ;
   bool device_up ;
   struct mlx4_en_profile profile ;
   u32 LSO_support ;
   struct workqueue_struct *workqueue ;
   struct device *dma_device ;
   void *uar_map ;
   struct mlx4_uar priv_uar ;
   struct mlx4_mr mr ;
   u32 priv_pdn ;
   spinlock_t uar_lock ;
   u8 mac_removed[3U] ;
   rwlock_t clock_lock ;
   u32 nominal_c_mult ;
   struct cyclecounter cycles ;
   struct timecounter clock ;
   unsigned long last_overflow_check ;
   unsigned long overflow_period ;
   struct ptp_clock *ptp_clock ;
   struct ptp_clock_info ptp_clock_info ;
   struct notifier_block nb ;
};

#line 416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_rss_map {
   int base_qpn ;
   struct mlx4_qp qps[128U] ;
   enum mlx4_qp_state state[128U] ;
   struct mlx4_qp indir_qp ;
   enum mlx4_qp_state indir_state ;
};

#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_port_state {
   int link_state ;
   int link_speed ;
   int transceiver ;
   u32 flags ;
};

#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_frag_info {
   u16 frag_size ;
   u16 frag_prefix_size ;
   u16 frag_stride ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct ethtool_flow_id {
   struct list_head list ;
   struct ethtool_rx_flow_spec flow_spec ;
   u64 id ;
};

#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_stats_bitmap {
   unsigned long bitmap[3U] ;
   struct mutex mutex ;
};

#line 494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_priv {
   struct mlx4_en_dev *mdev ;
   struct mlx4_en_port_profile *prof ;
   struct net_device *dev ;
   unsigned long active_vlans[64U] ;
   struct net_device_stats stats ;
   struct net_device_stats ret_stats ;
   struct mlx4_en_port_state port_state ;
   spinlock_t stats_lock ;
   struct ethtool_flow_id ethtool_rules[256U] ;
   struct list_head ethtool_list ;
   unsigned long last_moder_packets[128U] ;
   unsigned long last_moder_tx_packets ;
   unsigned long last_moder_bytes[128U] ;
   unsigned long last_moder_jiffies ;
   int last_moder_time[128U] ;
   u16 rx_usecs ;
   u16 rx_frames ;
   u16 tx_usecs ;
   u16 tx_frames ;
   u32 pkt_rate_low ;
   u16 rx_usecs_low ;
   u32 pkt_rate_high ;
   u16 rx_usecs_high ;
   u16 sample_interval ;
   u16 adaptive_rx_coal ;
   u32 msg_enable ;
   u32 loopback_ok ;
   u32 validate_loopback ;
   struct mlx4_hwq_resources res ;
   int link_state ;
   int last_link_state ;
   bool port_up ;
   int port ;
   int registered ;
   int allocated ;
   int stride ;
   unsigned char current_mac[8U] ;
   int mac_index ;
   unsigned int max_mtu ;
   int base_qpn ;
   int cqe_factor ;
   int cqe_size ;
   struct mlx4_en_rss_map rss_map ;
   __be32 ctrl_flags ;
   u32 flags ;
   u8 num_tx_rings_p_up ;
   u32 tx_work_limit ;
   u32 tx_ring_num ;
   u32 rx_ring_num ;
   u32 rx_skb_size ;
   struct mlx4_en_frag_info frag_info[4U] ;
   u16 num_frags ;
   u16 log_rx_info ;
   struct mlx4_en_tx_ring **tx_ring ;
   struct mlx4_en_rx_ring *rx_ring[128U] ;
   struct mlx4_en_cq **tx_cq ;
   struct mlx4_en_cq *rx_cq[128U] ;
   struct mlx4_qp drop_qp ;
   struct work_struct rx_mode_task ;
   struct work_struct watchdog_task ;
   struct work_struct linkstate_task ;
   struct delayed_work stats_task ;
   struct delayed_work service_task ;
   struct work_struct vxlan_add_task ;
   struct work_struct vxlan_del_task ;
   struct mlx4_en_perf_stats pstats ;
   struct mlx4_en_pkt_stats pkstats ;
   struct mlx4_en_counter_stats pf_stats ;
   struct mlx4_en_flow_stats_rx rx_priority_flowstats[8U] ;
   struct mlx4_en_flow_stats_tx tx_priority_flowstats[8U] ;
   struct mlx4_en_flow_stats_rx rx_flowstats ;
   struct mlx4_en_flow_stats_tx tx_flowstats ;
   struct mlx4_en_port_stats port_stats ;
   struct mlx4_en_stats_bitmap stats_bitmap ;
   struct list_head mc_list ;
   struct list_head curr_list ;
   u64 broadcast_id ;
   struct mlx4_en_stat_out_mbox hw_stats ;
   int vids[128U] ;
   bool wol ;
   struct device *ddev ;
   struct hlist_head mac_hash[256U] ;
   struct hwtstamp_config hwtstamp_config ;
   u32 counter_index ;
   struct ieee_ets ets ;
   u16 maxrate[8U] ;
   enum dcbnl_cndd_states cndd_state[8U] ;
   spinlock_t filters_lock ;
   int last_filter_id ;
   struct list_head filters ;
   struct hlist_head filter_hash[16U] ;
   u64 tunnel_reg_id ;
   __be16 vxlan_port ;
   u32 pflags ;
   u8 rss_key[40U] ;
   u8 rss_hash_fn ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_19716 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_19716 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct rtable;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
enum mlx4_net_trans_rule_id {
    MLX4_NET_TRANS_RULE_ID_ETH = 0,
    MLX4_NET_TRANS_RULE_ID_IB = 1,
    MLX4_NET_TRANS_RULE_ID_IPV6 = 2,
    MLX4_NET_TRANS_RULE_ID_IPV4 = 3,
    MLX4_NET_TRANS_RULE_ID_TCP = 4,
    MLX4_NET_TRANS_RULE_ID_UDP = 5,
    MLX4_NET_TRANS_RULE_ID_VXLAN = 6,
    MLX4_NET_TRANS_RULE_NUM = 7
};

#line 1137 
enum mlx4_net_trans_promisc_mode {
    MLX4_FS_REGULAR = 1,
    MLX4_FS_ALL_DEFAULT = 2,
    MLX4_FS_MC_DEFAULT = 3,
    MLX4_FS_UC_SNIFFER = 4,
    MLX4_FS_MC_SNIFFER = 5,
    MLX4_FS_MODE_NUM = 6
};

#line 1146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_spec_eth {
   u8 dst_mac[6U] ;
   u8 dst_mac_msk[6U] ;
   u8 src_mac[6U] ;
   u8 src_mac_msk[6U] ;
   u8 ether_type_enable ;
   __be16 ether_type ;
   __be16 vlan_id_msk ;
   __be16 vlan_id ;
};

#line 1157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_spec_tcp_udp {
   __be16 dst_port ;
   __be16 dst_port_msk ;
   __be16 src_port ;
   __be16 src_port_msk ;
};

#line 1164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_spec_ipv4 {
   __be32 dst_ip ;
   __be32 dst_ip_msk ;
   __be32 src_ip ;
   __be32 src_ip_msk ;
};

#line 1171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_spec_ib {
   __be32 l3_qpn ;
   __be32 qpn_msk ;
   u8 dst_gid[16U] ;
   u8 dst_gid_msk[16U] ;
};

#line 1178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_spec_vxlan {
   __be32 vni ;
   __be32 vni_mask ;
};

#line 1183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
union __anonunion_712 {
   struct mlx4_spec_eth eth ;
   struct mlx4_spec_ib ib ;
   struct mlx4_spec_ipv4 ipv4 ;
   struct mlx4_spec_tcp_udp tcp_udp ;
   struct mlx4_spec_vxlan vxlan ;
};

#line 1183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_spec_list {
   struct list_head list ;
   enum mlx4_net_trans_rule_id id ;
   union __anonunion_712 __anonCompField_mlx4_spec_list_97 ;
};

#line 1196 
enum mlx4_net_trans_hw_rule_queue {
    MLX4_NET_TRANS_Q_FIFO = 0,
    MLX4_NET_TRANS_Q_LIFO = 1
};

#line 1201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_net_trans_rule {
   struct list_head list ;
   enum mlx4_net_trans_hw_rule_queue queue_mode ;
   bool exclusive ;
   bool allow_loopback ;
   enum mlx4_net_trans_promisc_mode promisc_mode ;
   u8 port ;
   u16 priority ;
   u32 qpn ;
};

#line 1469 
enum mlx4_access_reg_method {
    MLX4_ACCESS_REG_QUERY = 1,
    MLX4_ACCESS_REG_WRITE = 2
};

#line 1479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_ptys_reg {
   u8 resrvd1 ;
   u8 local_port ;
   u8 resrvd2 ;
   u8 proto_mask ;
   __be32 resrvd3[2U] ;
   __be32 eth_proto_cap ;
   __be16 ib_width_cap ;
   __be16 ib_speed_cap ;
   __be32 resrvd4 ;
   __be32 eth_proto_admin ;
   __be16 ib_width_admin ;
   __be16 ib_speed_admin ;
   __be32 resrvd5 ;
   __be32 eth_proto_oper ;
   __be16 ib_width_oper ;
   __be16 ib_speed_oper ;
   __be32 resrvd6 ;
   __be32 eth_proto_lp_adv ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_721 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_721 __anonCompField_bpf_prog_104 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_732 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_732 __anonCompField_dst_entry_105 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_733 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_733 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_735 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_734 {
   __addrpair skc_addrpair ;
   struct __anonstruct_735 __anonCompField___anonunion_734_106 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_736 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_738 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_737 {
   __portpair skc_portpair ;
   struct __anonstruct_738 __anonCompField___anonunion_737_109 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_739 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_740 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_734 __anonCompField_sock_common_107 ;
   union __anonunion_736 __anonCompField_sock_common_108 ;
   union __anonunion_737 __anonCompField_sock_common_110 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_739 __anonCompField_sock_common_111 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_740 __anonCompField_sock_common_112 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_741 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_741 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_744 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_744 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 2242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_764 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_764 __anonCompField_inetpeer_addr_base_114 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_765 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_767 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_766 {
   struct __anonstruct_767 __anonCompField___anonunion_766_116 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_765 __anonCompField_inet_peer_115 ;
   union __anonunion_766 __anonCompField_inet_peer_117 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
struct bitmap_iterator {
   unsigned long *stats_bitmap ;
   unsigned int count ;
   unsigned int iterator ;
   bool advance_array ;
};

#line 589 
enum ethtool_report {
    SUPPORTED = 0,
    ADVERTISED = 1,
    SPEED = 2
};

#line 773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_counter {
   u8 reserved1[3U] ;
   u8 counter_mode ;
   __be32 num_ifc ;
   u32 reserved2[2U] ;
   __be64 rx_frames ;
   __be64 rx_bytes ;
   __be64 tx_frames ;
   __be64 tx_bytes ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cmd.h"
struct mlx4_cmd_mailbox {
   void *buf ;
   dma_addr_t dma ;
};

#line 327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cmd.h"
struct mlx4_set_vlan_fltr_mbox {
   __be32 entry[128U] ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_port.h"
struct mlx4_en_query_port_context {
   u8 link_up ;
   u8 autoneg ;
   __be16 mtu ;
   u8 reserved2 ;
   u8 link_speed ;
   u16 reserved3[5U] ;
   __be64 mac ;
   u8 transceiver ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_stats.h"
struct mlx4_en_stat_out_flow_control_mbox {
   __be64 rx_pause ;
   __be64 rx_pause_duration ;
   __be64 rx_pause_transition ;
   __be64 tx_pause ;
   __be64 tx_pause_duration ;
   __be64 tx_pause_transition ;
   __be64 reserved[2U] ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef signed char __s8;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11594 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifbond {
   __s32 bond_mode ;
   __s32 num_slaves ;
   __s32 miimon ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
typedef struct ifbond ifbond;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct ifslave {
   __s32 slave_id ;
   char slave_name[16U] ;
   __s8 link ;
   __s8 state ;
   __u32 link_failure_count ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
typedef struct ifslave ifslave;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_notifier_info {
   struct net_device *dev ;
};

#line 3557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_bonding_info {
   ifslave slave ;
   ifbond master ;
};

#line 3563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_notifier_bonding_info {
   struct netdev_notifier_info info ;
   struct netdev_bonding_info bonding_info ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_vlan.h"
struct vlan_hdr {
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct vlan_ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_vlan_proto ;
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hash.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) priority : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};

#line 362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
enum mlx4_protocol {
    MLX4_PROT_IB_IPV6 = 0,
    MLX4_PROT_ETH = 1,
    MLX4_PROT_IB_IPV4 = 2,
    MLX4_PROT_FCOE = 3
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/driver.h"
struct mlx4_port_map {
   u8 port1 ;
   u8 port2 ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
enum mlx4_update_qp_attr {
    MLX4_UPDATE_QP_SMAC = 1,
    MLX4_UPDATE_QP_VSD = 2,
    MLX4_UPDATE_QP_RATE_LIMIT = 4,
    MLX4_UPDATE_QP_QOS_VPORT = 8,
    MLX4_UPDATE_QP_SUPPORTED_ATTRS = 15
};

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
struct mlx4_update_qp_params {
   u8 smac_index ;
   u8 qos_vport ;
   u32 flags ;
   u16 rate_unit ;
   u16 rate_val ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
enum mlx4_en_mclist_act {
    MCLIST_NONE = 0,
    MCLIST_REM = 1,
    MCLIST_ADD = 2
};

#line 443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_mc_list {
   struct list_head list ;
   enum mlx4_en_mclist_act action ;
   u8 addr[6U] ;
   u64 reg_id ;
   u64 tunnel_reg_id ;
};

#line 611  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_mac_entry {
   struct hlist_node hlist ;
   unsigned char mac[8U] ;
   u64 reg_id ;
   struct callback_head rcu ;
};

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
struct mlx4_en_filter {
   struct list_head next ;
   struct work_struct work ;
   u8 ip_proto ;
   __be32 src_ip ;
   __be32 dst_ip ;
   __be16 src_port ;
   __be16 dst_port ;
   int rxq_index ;
   struct mlx4_en_priv *priv ;
   u32 flow_id ;
   int id ;
   u64 reg_id ;
   u8 activated ;
   struct hlist_node filter_chain ;
};

#line 2514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
struct mlx4_en_bond {
   struct work_struct work ;
   struct mlx4_en_priv *priv ;
   int is_bonded ;
   struct mlx4_port_map port_map ;
};

#line 6  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/fvtp/.tmp_en_main.c"
struct __va_list_tag;

#line 6  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/fvtp/.tmp_en_main.c"
typedef struct __va_list_tag __va_list_tag;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h"
typedef __builtin_va_list __gnuc_va_list[1U];

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h"
typedef __gnuc_va_list va_list[1U];

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct va_format {
   char const *fmt ;
   va_list *va ;
};

#line 1508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
enum mlx4_dev_event {
    MLX4_DEV_EVENT_CATASTROPHIC_ERROR = 0,
    MLX4_DEV_EVENT_PORT_UP = 1,
    MLX4_DEV_EVENT_PORT_DOWN = 2,
    MLX4_DEV_EVENT_PORT_REINIT = 3,
    MLX4_DEV_EVENT_PORT_MGMT_CHANGE = 4,
    MLX4_DEV_EVENT_SLAVE_INIT = 5,
    MLX4_DEV_EVENT_SLAVE_SHUTDOWN = 6
};

#line 1522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
struct mlx4_interface {
   void *(*add)(struct mlx4_dev *) ;
   void (*remove)(struct mlx4_dev *, void *) ;
   void (*event)(struct mlx4_dev *, void *, enum mlx4_dev_event , unsigned long ) ;
   void *(*get_dev)(struct mlx4_dev *, void *, u8 ) ;
   struct list_head list ;
   enum mlx4_protocol protocol ;
   int flags ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/fw_qos.h"
struct mlx4_congestion_control_mb_prio_802_1_qau_params {
   __be32 modify_enable_high ;
   __be32 modify_enable_low ;
   __be32 reserved1 ;
   __be32 extended_enable ;
   __be32 rppp_max_rps ;
   __be32 rpg_time_reset ;
   __be32 rpg_byte_reset ;
   __be32 rpg_threshold ;
   __be32 rpg_max_rate ;
   __be32 rpg_ai_rate ;
   __be32 rpg_hai_rate ;
   __be32 rpg_gd ;
   __be32 rpg_min_dec_fac ;
   __be32 rpg_min_rate ;
   __be32 max_time_rise ;
   __be32 max_byte_rise ;
   __be32 max_qdelta ;
   __be32 min_qoffset ;
   __be32 gd_coefficient ;
   __be32 reserved2[5U] ;
   __be32 cp_sample_base ;
   __be32 reserved3[39U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
struct mlx4_congestion_control_mb_prio_802_1_qau_statistics {
   __be64 rppp_rp_centiseconds ;
   __be32 reserved1 ;
   __be32 ignored_cnm ;
   __be32 rppp_created_rps ;
   __be32 estimated_total_rate ;
   __be32 max_active_rate_limiter_index ;
   __be32 dropped_cnms_busy_fw ;
   __be32 reserved2 ;
   __be32 cnms_handled_successfully ;
   __be32 min_total_limiters_rate ;
   __be32 max_total_limiters_rate ;
   __be32 reserved3[4U] ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_2508 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_2508 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cq.h"
struct mlx4_err_cqe {
   __be32 my_qpn ;
   u32 reserved1[5U] ;
   __be16 wqe_index ;
   u8 vendor_err_syndrome ;
   u8 syndrome ;
   u8 reserved2[3U] ;
   u8 owner_sr_opcode ;
};

#line 176 
enum mlx4_qp_optpar {
    MLX4_QP_OPTPAR_ALT_ADDR_PATH = 1,
    MLX4_QP_OPTPAR_RRE = 2,
    MLX4_QP_OPTPAR_RAE = 4,
    MLX4_QP_OPTPAR_RWE = 8,
    MLX4_QP_OPTPAR_PKEY_INDEX = 16,
    MLX4_QP_OPTPAR_Q_KEY = 32,
    MLX4_QP_OPTPAR_RNR_TIMEOUT = 64,
    MLX4_QP_OPTPAR_PRIMARY_ADDR_PATH = 128,
    MLX4_QP_OPTPAR_SRA_MAX = 256,
    MLX4_QP_OPTPAR_RRA_MAX = 512,
    MLX4_QP_OPTPAR_PM_STATE = 1024,
    MLX4_QP_OPTPAR_RETRY_COUNT = 4096,
    MLX4_QP_OPTPAR_RNR_RETRY = 8192,
    MLX4_QP_OPTPAR_ACK_TIMEOUT = 16384,
    MLX4_QP_OPTPAR_SCHED_QUEUE = 65536,
    MLX4_QP_OPTPAR_COUNTER_INDEX = 1048576,
    MLX4_QP_OPTPAR_VLAN_STRIPPING = 2097152
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
struct __anonstruct_2613 {
   __be16 vlan_tag ;
   u8 ins_vlan ;
   u8 fence_size ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
union __anonunion_2612 {
   struct __anonstruct_2613 __anonCompField___anonunion_2612_92 ;
   __be32 bf_qpn ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
union __anonunion_2614 {
   __be32 srcrb_flags ;
   __be16 srcrb_flags16[2U] ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
struct mlx4_wqe_ctrl_seg {
   __be32 owner_opcode ;
   union __anonunion_2612 __anonCompField_mlx4_wqe_ctrl_seg_93 ;
   union __anonunion_2614 __anonCompField_mlx4_wqe_ctrl_seg_94 ;
   __be32 imm ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
struct mlx4_wqe_lso_seg {
   __be32 mss_hdr_size ;
   __be32 header[0U] ;
};

#line 417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
struct mlx4_wqe_data_seg {
   __be32 byte_count ;
   __be32 lkey ;
   __be64 addr ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
struct mlx4_wqe_inline_seg {
   __be32 byte_count ;
};

#line 2893  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
union __anonunion_2701 {
   struct mlx4_wqe_data_seg data ;
   struct mlx4_wqe_lso_seg lso ;
   struct mlx4_wqe_inline_seg inl ;
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_tx_desc {
   struct mlx4_wqe_ctrl_seg ctrl ;
   union __anonunion_2701 __anonCompField_mlx4_en_tx_desc_121 ;
};

#line 890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum pkt_hash_types {
    PKT_HASH_TYPE_NONE = 0,
    PKT_HASH_TYPE_L2 = 1,
    PKT_HASH_TYPE_L3 = 2,
    PKT_HASH_TYPE_L4 = 3
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cq.h"
struct mlx4_rss_context {
   __be32 base_qpn ;
   __be32 default_qpn ;
   u16 reserved ;
   u8 hash_fn ;
   u8 flags ;
   __be32 rss_key[10U] ;
   __be32 base_qpn_udp ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
struct mlx4_en_rx_desc {
   struct mlx4_wqe_data_seg data[0U] ;
};

#line 823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
union __anonunion___u_3119 {
   struct hlist_node *__val ;
   char __c[1U] ;
};

#line 823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
union __anonunion___u_3121 {
   struct hlist_node *__val ;
   char __c[1U] ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
enum tk_offsets {
    TK_OFFS_REAL = 0,
    TK_OFFS_BOOT = 1,
    TK_OFFS_TAI = 2,
    TK_OFFS_MAX = 3
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cq.h"
struct mlx4_ts_cqe {
   __be32 vlan_my_qpn ;
   __be32 immed_rss_invalid ;
   __be32 g_mlpath_rqpn ;
   __be32 timestamp_hi ;
   __be16 status ;
   u8 ipv6_ext_mask ;
   u8 badfcs_enc ;
   __be32 byte_cnt ;
   __be16 wqe_index ;
   __be16 checksum ;
   u8 reserved ;
   __be16 timestamp_lo ;
   u8 owner_sr_opcode ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_random_allocationless_scenario_8 {
   struct net_device *arg0 ;
   int signal_pending ;
};
unsigned int __builtin_bswap32(unsigned int);

unsigned long __builtin_bswap64(unsigned long);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/fvtp/.tmp_en_resources.c"
void ldv_inline_asm(void);


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u64 __fswab64(__u64 val)
{
  __u64 tmp;
  
#line 71 
  tmp = (__u64)__builtin_bswap64((unsigned long)val);
  
#line 71 
  return tmp;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = fls((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memset(void *, int, size_t);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vmap(struct page **, unsigned int, unsigned long, pgprot_t);


#line 87 
void vunmap(void const *);


#line 794  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
void mlx4_en_fill_qp_context(struct mlx4_en_priv *priv, int size, int stride, int is_tx, int rss, int qpn, int cqn, int user_prio, struct mlx4_qp_context *context);


#line 797 
void mlx4_en_sqp_event(struct mlx4_qp *qp, enum mlx4_event event);


#line 798 
int mlx4_en_map_buffer(struct mlx4_buf *buf);


#line 799 
void mlx4_en_unmap_buffer(struct mlx4_buf *buf);


#line 864 
void en_print(char const *level, struct mlx4_en_priv const *priv, char const *format , ...);


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_resources.c"
void mlx4_en_fill_qp_context(struct mlx4_en_priv *priv, int size, int stride, int is_tx, int rss, int qpn, int cqn, int user_prio, struct mlx4_qp_context *context)
{
  
#line 44 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 45 
  struct net_device *dev = priv->dev;
  
#line 47 
  memset((void *)context,0,248UL);
  
#line 48 
  if (0 != 0) 
#line 48 
              context->flags = (((((unsigned int)(rss << 13) << 24) | (((unsigned int)(rss << 13) << 8) & 16711680U)) | (((unsigned int)(rss << 13) >> 8) & 63488U)) | ((unsigned int)(rss << 13) >> 24)) | 1792U; else 
                                                                    
#line 48 
                                                                    context->flags = __fswab32((unsigned int)((rss << 13) | 458752));
  
#line 49 
  if (0 != 0) 
#line 49 
              context->pd = (((mdev->priv_pdn << 24) | ((mdev->priv_pdn << 8) & 16711680U)) | ((mdev->priv_pdn >> 8) & 65280U)) | (mdev->priv_pdn >> 24); else 
                                                                    
#line 49 
                                                                    context->pd = __fswab32(mdev->priv_pdn);
  
#line 50 
  context->mtu_msgmax = (unsigned char)255U;
  
#line 51 
  if (is_tx == 0 && rss == 0) {
    int tmp_69;
    unsigned int tmp_138;
    
#line 52 
    if (0 != 0) {
      int tmp_67;
      
#line 52 
      if (size <= 0) {
        int tmp_1;
        
#line 52 
        tmp_1 = ____ilog2_NaN();
        
#line 52 
        tmp_67 = tmp_1 << 3;
      }
      else {
        int tmp_66;
        
#line 52 
        if (size >= 0) {
          int tmp_65;
          
#line 52 
          if (((unsigned long long)size & 4611686018427387904ULL) == 0ULL) {
            int tmp_64;
            
#line 52 
            if (((unsigned long long)size & 2305843009213693952ULL) == 0ULL) {
              int tmp_63;
              
#line 52 
              if (((unsigned long long)size & 1152921504606846976ULL) == 0ULL) {
                int tmp_62;
                
#line 52 
                if (((unsigned long long)size & 576460752303423488ULL) == 0ULL) {
                  int tmp_61;
                  
#line 52 
                  if (((unsigned long long)size & 288230376151711744ULL) == 0ULL) {
                    int tmp_60;
                    
#line 52 
                    if (((unsigned long long)size & 144115188075855872ULL) == 0ULL) {
                      int tmp_59;
                      
#line 52 
                      if (((unsigned long long)size & 72057594037927936ULL) == 0ULL) {
                        int tmp_58;
                        
#line 52 
                        if (((unsigned long long)size & 36028797018963968ULL) == 0ULL) {
                          int tmp_57;
                          
#line 52 
                          if (((unsigned long long)size & 18014398509481984ULL) == 0ULL) {
                            int tmp_56;
                            
#line 52 
                            if (((unsigned long long)size & 9007199254740992ULL) == 0ULL) {
                              int tmp_55;
                              
#line 52 
                              if (((unsigned long long)size & 4503599627370496ULL) == 0ULL) {
                                int tmp_54;
                                
#line 52 
                                if (((unsigned long long)size & 2251799813685248ULL) == 0ULL) {
                                  int tmp_53;
                                  
#line 52 
                                  if (((unsigned long long)size & 1125899906842624ULL) == 0ULL) {
                                    int tmp_52;
                                    
#line 52 
                                    if (((unsigned long long)size & 562949953421312ULL) == 0ULL) {
                                      int tmp_51;
                                      
#line 52 
                                      if (((unsigned long long)size & 281474976710656ULL) == 0ULL) {
                                        int tmp_50;
                                        
#line 52 
                                        if (((unsigned long long)size & 140737488355328ULL) == 0ULL) {
                                          int tmp_49;
                                          
#line 52 
                                          if (((unsigned long long)size & 70368744177664ULL) == 0ULL) {
                                            int tmp_48;
                                            
#line 52 
                                            if (((unsigned long long)size & 35184372088832ULL) == 0ULL) {
                                              int tmp_47;
                                              
#line 52 
                                              if (((unsigned long long)size & 17592186044416ULL) == 0ULL) {
                                                int tmp_46;
                                                
#line 52 
                                                if (((unsigned long long)size & 8796093022208ULL) == 0ULL) {
                                                  int tmp_45;
                                                  
#line 52 
                                                  if (((unsigned long long)size & 4398046511104ULL) == 0ULL) {
                                                    int tmp_44;
                                                    
#line 52 
                                                    if (((unsigned long long)size & 2199023255552ULL) == 0ULL) {
                                                      int tmp_43;
                                                      
#line 52 
                                                      if (((unsigned long long)size & 1099511627776ULL) == 0ULL) {
                                                        int tmp_42;
                                                        
#line 52 
                                                        if (((unsigned long long)size & 549755813888ULL) == 0ULL) {
                                                          int tmp_41;
                                                          
#line 52 
                                                          if (((unsigned long long)size & 274877906944ULL) == 0ULL) {
                                                            int tmp_40;
                                                            
#line 52 
                                                            if (((unsigned long long)size & 137438953472ULL) == 0ULL) {
                                                              int tmp_39;
                                                              
#line 52 
                                                              if (((unsigned long long)size & 68719476736ULL) == 0ULL) {
                                                                int tmp_38;
                                                                
#line 52 
                                                                if (((unsigned long long)size & 34359738368ULL) == 0ULL) {
                                                                  int tmp_37;
                                                                  
#line 52 
                                                                  if (
                                                                    ((unsigned long long)size & 17179869184ULL) == 0ULL) {
                                                                    int tmp_36;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 8589934592ULL) == 0ULL) {
                                                                    int tmp_35;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 4294967296ULL) == 0ULL) {
                                                                    int tmp_34;
                                                                    
#line 52 
                                                                    if (
                                                                    size >= 0) {
                                                                    int tmp_33;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 1073741824ULL) == 0ULL) {
                                                                    int tmp_32;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 536870912ULL) == 0ULL) {
                                                                    int tmp_31;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 268435456ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 134217728ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 67108864ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 33554432ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 16777216ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 8388608ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 4194304ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 2097152ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 1048576ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 524288ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 262144ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 131072ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 65536ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 32768ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 16384ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 8192ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 4096ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 2048ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 1024ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 512ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 256ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 128ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 64ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 32ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 16ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 8ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 4ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 2ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)size & 1ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 52 
                                                                    tmp_2 = ____ilog2_NaN();
                                                                    
#line 52 
                                                                    tmp_3 = tmp_2 << 3;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_3 = 0;
                                                                    
#line 52 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_4 = 8;
                                                                    
#line 52 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_5 = 16;
                                                                    
#line 52 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_6 = 24;
                                                                    
#line 52 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_7 = 32;
                                                                    
#line 52 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_8 = 40;
                                                                    
#line 52 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_9 = 48;
                                                                    
#line 52 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_10 = 56;
                                                                    
#line 52 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_11 = 64;
                                                                    
#line 52 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_12 = 72;
                                                                    
#line 52 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_13 = 80;
                                                                    
#line 52 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_14 = 88;
                                                                    
#line 52 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_15 = 96;
                                                                    
#line 52 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_16 = 104;
                                                                    
#line 52 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_17 = 112;
                                                                    
#line 52 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_18 = 120;
                                                                    
#line 52 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_19 = -128;
                                                                    
#line 52 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_20 = -120;
                                                                    
#line 52 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_21 = -112;
                                                                    
#line 52 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_22 = -104;
                                                                    
#line 52 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_23 = -96;
                                                                    
#line 52 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_24 = -88;
                                                                    
#line 52 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_25 = -80;
                                                                    
#line 52 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_26 = -72;
                                                                    
#line 52 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_27 = -64;
                                                                    
#line 52 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_28 = -56;
                                                                    
#line 52 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_29 = -48;
                                                                    
#line 52 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_30 = -40;
                                                                    
#line 52 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_31 = -32;
                                                                    
#line 52 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_32 = -24;
                                                                    
#line 52 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_33 = -16;
                                                                    
#line 52 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_34 = -8;
                                                                    
#line 52 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_35 = 0;
                                                                    
#line 52 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_36 = 8;
                                                                    
#line 52 
                                                                    tmp_37 = tmp_36;
                                                                  }
                                                                  else 
                                                                    
#line 52 
                                                                    tmp_37 = 16;
                                                                  
#line 52 
                                                                  tmp_38 = tmp_37;
                                                                }
                                                                else 
                                                                  
#line 52 
                                                                  tmp_38 = 24;
                                                                
#line 52 
                                                                tmp_39 = tmp_38;
                                                              }
                                                              else 
#line 52 
                                                                   tmp_39 = 32;
                                                              
#line 52 
                                                              tmp_40 = tmp_39;
                                                            }
                                                            else 
#line 52 
                                                                 tmp_40 = 40;
                                                            
#line 52 
                                                            tmp_41 = tmp_40;
                                                          }
                                                          else 
#line 52 
                                                               tmp_41 = 48;
                                                          
#line 52 
                                                          tmp_42 = tmp_41;
                                                        }
                                                        else 
#line 52 
                                                             tmp_42 = 56;
                                                        
#line 52 
                                                        tmp_43 = tmp_42;
                                                      }
                                                      else 
#line 52 
                                                           tmp_43 = 64;
                                                      
#line 52 
                                                      tmp_44 = tmp_43;
                                                    }
                                                    else 
#line 52 
                                                         tmp_44 = 72;
                                                    
#line 52 
                                                    tmp_45 = tmp_44;
                                                  }
                                                  else 
#line 52 
                                                       tmp_45 = 80;
                                                  
#line 52 
                                                  tmp_46 = tmp_45;
                                                }
                                                else 
#line 52 
                                                     tmp_46 = 88;
                                                
#line 52 
                                                tmp_47 = tmp_46;
                                              }
                                              else 
#line 52 
                                                   tmp_47 = 96;
                                              
#line 52 
                                              tmp_48 = tmp_47;
                                            }
                                            else 
#line 52 
                                                 tmp_48 = 104;
                                            
#line 52 
                                            tmp_49 = tmp_48;
                                          }
                                          else 
#line 52 
                                               tmp_49 = 112;
                                          
#line 52 
                                          tmp_50 = tmp_49;
                                        }
                                        else 
#line 52 
                                             tmp_50 = 120;
                                        
#line 52 
                                        tmp_51 = tmp_50;
                                      }
                                      else 
#line 52 
                                           tmp_51 = -128;
                                      
#line 52 
                                      tmp_52 = tmp_51;
                                    }
                                    else 
#line 52 
                                         tmp_52 = -120;
                                    
#line 52 
                                    tmp_53 = tmp_52;
                                  }
                                  else 
#line 52 
                                       tmp_53 = -112;
                                  
#line 52 
                                  tmp_54 = tmp_53;
                                }
                                else 
#line 52 
                                     tmp_54 = -104;
                                
#line 52 
                                tmp_55 = tmp_54;
                              }
                              else 
#line 52 
                                   tmp_55 = -96;
                              
#line 52 
                              tmp_56 = tmp_55;
                            }
                            else 
#line 52 
                                 tmp_56 = -88;
                            
#line 52 
                            tmp_57 = tmp_56;
                          }
                          else 
#line 52 
                               tmp_57 = -80;
                          
#line 52 
                          tmp_58 = tmp_57;
                        }
                        else 
#line 52 
                             tmp_58 = -72;
                        
#line 52 
                        tmp_59 = tmp_58;
                      }
                      else 
#line 52 
                           tmp_59 = -64;
                      
#line 52 
                      tmp_60 = tmp_59;
                    }
                    else 
#line 52 
                         tmp_60 = -56;
                    
#line 52 
                    tmp_61 = tmp_60;
                  }
                  else 
#line 52 
                       tmp_61 = -48;
                  
#line 52 
                  tmp_62 = tmp_61;
                }
                else 
#line 52 
                     tmp_62 = -40;
                
#line 52 
                tmp_63 = tmp_62;
              }
              else 
#line 52 
                   tmp_63 = -32;
              
#line 52 
              tmp_64 = tmp_63;
            }
            else 
#line 52 
                 tmp_64 = -24;
            
#line 52 
            tmp_65 = tmp_64;
          }
          else 
#line 52 
               tmp_65 = -16;
          
#line 52 
          tmp_66 = tmp_65;
        }
        else 
#line 52 
             tmp_66 = -8;
        
#line 52 
        tmp_67 = tmp_66;
      }
      
#line 52 
      tmp_69 = tmp_67;
    }
    else {
      int tmp_68;
      
#line 52 
      tmp_68 = __ilog2_u32((unsigned int)size);
      
#line 52 
      tmp_69 = tmp_68 << 3;
    }
    
#line 52 
    if (0 != 0) {
      unsigned int tmp_136;
      
#line 52 
      if (stride <= 0) {
        int tmp_70;
        
#line 52 
        tmp_70 = ____ilog2_NaN();
        
#line 52 
        tmp_136 = (unsigned int)tmp_70 + 252U;
      }
      else {
        unsigned int tmp_135;
        
#line 52 
        if (stride >= 0) {
          unsigned int tmp_134;
          
#line 52 
          if (((unsigned long long)stride & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_133;
            
#line 52 
            if (((unsigned long long)stride & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_132;
              
#line 52 
              if (((unsigned long long)stride & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_131;
                
#line 52 
                if (((unsigned long long)stride & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_130;
                  
#line 52 
                  if (((unsigned long long)stride & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_129;
                    
#line 52 
                    if (((unsigned long long)stride & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_128;
                      
#line 52 
                      if (((unsigned long long)stride & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_127;
                        
#line 52 
                        if (((unsigned long long)stride & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_126;
                          
#line 52 
                          if (((unsigned long long)stride & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_125;
                            
#line 52 
                            if (((unsigned long long)stride & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_124;
                              
#line 52 
                              if (((unsigned long long)stride & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_123;
                                
#line 52 
                                if (((unsigned long long)stride & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_122;
                                  
#line 52 
                                  if (((unsigned long long)stride & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_121;
                                    
#line 52 
                                    if (((unsigned long long)stride & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_120;
                                      
#line 52 
                                      if (((unsigned long long)stride & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_119;
                                        
#line 52 
                                        if (((unsigned long long)stride & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_118;
                                          
#line 52 
                                          if (((unsigned long long)stride & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_117;
                                            
#line 52 
                                            if (((unsigned long long)stride & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_116;
                                              
#line 52 
                                              if (((unsigned long long)stride & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_115;
                                                
#line 52 
                                                if (((unsigned long long)stride & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_114;
                                                  
#line 52 
                                                  if (((unsigned long long)stride & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_113;
                                                    
#line 52 
                                                    if (((unsigned long long)stride & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_112;
                                                      
#line 52 
                                                      if (((unsigned long long)stride & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_111;
                                                        
#line 52 
                                                        if (((unsigned long long)stride & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_110;
                                                          
#line 52 
                                                          if (((unsigned long long)stride & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_109;
                                                            
#line 52 
                                                            if (((unsigned long long)stride & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_108;
                                                              
#line 52 
                                                              if (((unsigned long long)stride & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_107;
                                                                
#line 52 
                                                                if (((unsigned long long)stride & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_106;
                                                                  
#line 52 
                                                                  if (
                                                                    ((unsigned long long)stride & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_105;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_104;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_103;
                                                                    
#line 52 
                                                                    if (
                                                                    stride >= 0) {
                                                                    unsigned int tmp_102;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_101;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_100;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_99;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_98;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_97;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_96;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_95;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_94;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_93;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_92;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_91;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_90;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_89;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_88;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_87;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_86;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_85;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_84;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_83;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_82;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_81;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_80;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_79;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_78;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_77;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_76;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_75;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_74;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_73;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_72;
                                                                    
#line 52 
                                                                    if (
                                                                    ((unsigned long long)stride & 1ULL) == 0ULL) {
                                                                    int tmp_71;
                                                                    
#line 52 
                                                                    tmp_71 = ____ilog2_NaN();
                                                                    
#line 52 
                                                                    tmp_72 = (unsigned int)tmp_71 + 252U;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_72 = (unsigned int)(-4);
                                                                    
#line 52 
                                                                    tmp_73 = tmp_72;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_73 = (unsigned int)(-3);
                                                                    
#line 52 
                                                                    tmp_74 = tmp_73;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_74 = (unsigned int)(-2);
                                                                    
#line 52 
                                                                    tmp_75 = tmp_74;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_75 = (unsigned int)(-1);
                                                                    
#line 52 
                                                                    tmp_76 = tmp_75;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_76 = (unsigned int)0;
                                                                    
#line 52 
                                                                    tmp_77 = tmp_76;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_77 = (unsigned int)1;
                                                                    
#line 52 
                                                                    tmp_78 = tmp_77;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_78 = (unsigned int)2;
                                                                    
#line 52 
                                                                    tmp_79 = tmp_78;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_79 = (unsigned int)3;
                                                                    
#line 52 
                                                                    tmp_80 = tmp_79;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_80 = (unsigned int)4;
                                                                    
#line 52 
                                                                    tmp_81 = tmp_80;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_81 = (unsigned int)5;
                                                                    
#line 52 
                                                                    tmp_82 = tmp_81;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_82 = (unsigned int)6;
                                                                    
#line 52 
                                                                    tmp_83 = tmp_82;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_83 = (unsigned int)7;
                                                                    
#line 52 
                                                                    tmp_84 = tmp_83;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_84 = (unsigned int)8;
                                                                    
#line 52 
                                                                    tmp_85 = tmp_84;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_85 = (unsigned int)9;
                                                                    
#line 52 
                                                                    tmp_86 = tmp_85;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_86 = (unsigned int)10;
                                                                    
#line 52 
                                                                    tmp_87 = tmp_86;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_87 = (unsigned int)11;
                                                                    
#line 52 
                                                                    tmp_88 = tmp_87;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_88 = (unsigned int)12;
                                                                    
#line 52 
                                                                    tmp_89 = tmp_88;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_89 = (unsigned int)13;
                                                                    
#line 52 
                                                                    tmp_90 = tmp_89;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_90 = (unsigned int)14;
                                                                    
#line 52 
                                                                    tmp_91 = tmp_90;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_91 = (unsigned int)15;
                                                                    
#line 52 
                                                                    tmp_92 = tmp_91;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_92 = (unsigned int)16;
                                                                    
#line 52 
                                                                    tmp_93 = tmp_92;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_93 = (unsigned int)17;
                                                                    
#line 52 
                                                                    tmp_94 = tmp_93;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_94 = (unsigned int)18;
                                                                    
#line 52 
                                                                    tmp_95 = tmp_94;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_95 = (unsigned int)19;
                                                                    
#line 52 
                                                                    tmp_96 = tmp_95;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_96 = (unsigned int)20;
                                                                    
#line 52 
                                                                    tmp_97 = tmp_96;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_97 = (unsigned int)21;
                                                                    
#line 52 
                                                                    tmp_98 = tmp_97;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_98 = (unsigned int)22;
                                                                    
#line 52 
                                                                    tmp_99 = tmp_98;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_99 = (unsigned int)23;
                                                                    
#line 52 
                                                                    tmp_100 = tmp_99;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_100 = (unsigned int)24;
                                                                    
#line 52 
                                                                    tmp_101 = tmp_100;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_101 = (unsigned int)25;
                                                                    
#line 52 
                                                                    tmp_102 = tmp_101;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_102 = (unsigned int)26;
                                                                    
#line 52 
                                                                    tmp_103 = tmp_102;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_103 = (unsigned int)27;
                                                                    
#line 52 
                                                                    tmp_104 = tmp_103;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_104 = (unsigned int)28;
                                                                    
#line 52 
                                                                    tmp_105 = tmp_104;
                                                                    }
                                                                    else 
                                                                    
#line 52 
                                                                    tmp_105 = (unsigned int)29;
                                                                    
#line 52 
                                                                    tmp_106 = tmp_105;
                                                                  }
                                                                  else 
                                                                    
#line 52 
                                                                    tmp_106 = (unsigned int)30;
                                                                  
#line 52 
                                                                  tmp_107 = tmp_106;
                                                                }
                                                                else 
                                                                  
#line 52 
                                                                  tmp_107 = (unsigned int)31;
                                                                
#line 52 
                                                                tmp_108 = tmp_107;
                                                              }
                                                              else 
#line 52 
                                                                   tmp_108 = (unsigned int)32;
                                                              
#line 52 
                                                              tmp_109 = tmp_108;
                                                            }
                                                            else 
#line 52 
                                                                 tmp_109 = (unsigned int)33;
                                                            
#line 52 
                                                            tmp_110 = tmp_109;
                                                          }
                                                          else 
#line 52 
                                                               tmp_110 = (unsigned int)34;
                                                          
#line 52 
                                                          tmp_111 = tmp_110;
                                                        }
                                                        else 
#line 52 
                                                             tmp_111 = (unsigned int)35;
                                                        
#line 52 
                                                        tmp_112 = tmp_111;
                                                      }
                                                      else 
#line 52 
                                                           tmp_112 = (unsigned int)36;
                                                      
#line 52 
                                                      tmp_113 = tmp_112;
                                                    }
                                                    else 
#line 52 
                                                         tmp_113 = (unsigned int)37;
                                                    
#line 52 
                                                    tmp_114 = tmp_113;
                                                  }
                                                  else 
#line 52 
                                                       tmp_114 = (unsigned int)38;
                                                  
#line 52 
                                                  tmp_115 = tmp_114;
                                                }
                                                else 
#line 52 
                                                     tmp_115 = (unsigned int)39;
                                                
#line 52 
                                                tmp_116 = tmp_115;
                                              }
                                              else 
#line 52 
                                                   tmp_116 = (unsigned int)40;
                                              
#line 52 
                                              tmp_117 = tmp_116;
                                            }
                                            else 
#line 52 
                                                 tmp_117 = (unsigned int)41;
                                            
#line 52 
                                            tmp_118 = tmp_117;
                                          }
                                          else 
#line 52 
                                               tmp_118 = (unsigned int)42;
                                          
#line 52 
                                          tmp_119 = tmp_118;
                                        }
                                        else 
#line 52 
                                             tmp_119 = (unsigned int)43;
                                        
#line 52 
                                        tmp_120 = tmp_119;
                                      }
                                      else 
#line 52 
                                           tmp_120 = (unsigned int)44;
                                      
#line 52 
                                      tmp_121 = tmp_120;
                                    }
                                    else 
#line 52 
                                         tmp_121 = (unsigned int)45;
                                    
#line 52 
                                    tmp_122 = tmp_121;
                                  }
                                  else 
#line 52 
                                       tmp_122 = (unsigned int)46;
                                  
#line 52 
                                  tmp_123 = tmp_122;
                                }
                                else 
#line 52 
                                     tmp_123 = (unsigned int)47;
                                
#line 52 
                                tmp_124 = tmp_123;
                              }
                              else 
#line 52 
                                   tmp_124 = (unsigned int)48;
                              
#line 52 
                              tmp_125 = tmp_124;
                            }
                            else 
#line 52 
                                 tmp_125 = (unsigned int)49;
                            
#line 52 
                            tmp_126 = tmp_125;
                          }
                          else 
#line 52 
                               tmp_126 = (unsigned int)50;
                          
#line 52 
                          tmp_127 = tmp_126;
                        }
                        else 
#line 52 
                             tmp_127 = (unsigned int)51;
                        
#line 52 
                        tmp_128 = tmp_127;
                      }
                      else 
#line 52 
                           tmp_128 = (unsigned int)52;
                      
#line 52 
                      tmp_129 = tmp_128;
                    }
                    else 
#line 52 
                         tmp_129 = (unsigned int)53;
                    
#line 52 
                    tmp_130 = tmp_129;
                  }
                  else 
#line 52 
                       tmp_130 = (unsigned int)54;
                  
#line 52 
                  tmp_131 = tmp_130;
                }
                else 
#line 52 
                     tmp_131 = (unsigned int)55;
                
#line 52 
                tmp_132 = tmp_131;
              }
              else 
#line 52 
                   tmp_132 = (unsigned int)56;
              
#line 52 
              tmp_133 = tmp_132;
            }
            else 
#line 52 
                 tmp_133 = (unsigned int)57;
            
#line 52 
            tmp_134 = tmp_133;
          }
          else 
#line 52 
               tmp_134 = (unsigned int)58;
          
#line 52 
          tmp_135 = tmp_134;
        }
        else 
#line 52 
             tmp_135 = (unsigned int)59;
        
#line 52 
        tmp_136 = tmp_135;
      }
      
#line 52 
      tmp_138 = tmp_136;
    }
    else {
      int tmp_137;
      
#line 52 
      tmp_137 = __ilog2_u32((unsigned int)stride);
      
#line 52 
      tmp_138 = (unsigned int)tmp_137 + 252U;
    }
    
#line 52 
    context->rq_size_stride = (unsigned char)((unsigned int)tmp_69 | tmp_138);
  }
  else ;
  
#line 53 
  if (is_tx != 0) {
    int tmp_207;
    unsigned int tmp_276;
    
#line 54 
    if (0 != 0) {
      int tmp_205;
      
#line 54 
      if (size <= 0) {
        int tmp_139;
        
#line 54 
        tmp_139 = ____ilog2_NaN();
        
#line 54 
        tmp_205 = tmp_139 << 3;
      }
      else {
        int tmp_204;
        
#line 54 
        if (size >= 0) {
          int tmp_203;
          
#line 54 
          if (((unsigned long long)size & 4611686018427387904ULL) == 0ULL) {
            int tmp_202;
            
#line 54 
            if (((unsigned long long)size & 2305843009213693952ULL) == 0ULL) {
              int tmp_201;
              
#line 54 
              if (((unsigned long long)size & 1152921504606846976ULL) == 0ULL) {
                int tmp_200;
                
#line 54 
                if (((unsigned long long)size & 576460752303423488ULL) == 0ULL) {
                  int tmp_199;
                  
#line 54 
                  if (((unsigned long long)size & 288230376151711744ULL) == 0ULL) {
                    int tmp_198;
                    
#line 54 
                    if (((unsigned long long)size & 144115188075855872ULL) == 0ULL) {
                      int tmp_197;
                      
#line 54 
                      if (((unsigned long long)size & 72057594037927936ULL) == 0ULL) {
                        int tmp_196;
                        
#line 54 
                        if (((unsigned long long)size & 36028797018963968ULL) == 0ULL) {
                          int tmp_195;
                          
#line 54 
                          if (((unsigned long long)size & 18014398509481984ULL) == 0ULL) {
                            int tmp_194;
                            
#line 54 
                            if (((unsigned long long)size & 9007199254740992ULL) == 0ULL) {
                              int tmp_193;
                              
#line 54 
                              if (((unsigned long long)size & 4503599627370496ULL) == 0ULL) {
                                int tmp_192;
                                
#line 54 
                                if (((unsigned long long)size & 2251799813685248ULL) == 0ULL) {
                                  int tmp_191;
                                  
#line 54 
                                  if (((unsigned long long)size & 1125899906842624ULL) == 0ULL) {
                                    int tmp_190;
                                    
#line 54 
                                    if (((unsigned long long)size & 562949953421312ULL) == 0ULL) {
                                      int tmp_189;
                                      
#line 54 
                                      if (((unsigned long long)size & 281474976710656ULL) == 0ULL) {
                                        int tmp_188;
                                        
#line 54 
                                        if (((unsigned long long)size & 140737488355328ULL) == 0ULL) {
                                          int tmp_187;
                                          
#line 54 
                                          if (((unsigned long long)size & 70368744177664ULL) == 0ULL) {
                                            int tmp_186;
                                            
#line 54 
                                            if (((unsigned long long)size & 35184372088832ULL) == 0ULL) {
                                              int tmp_185;
                                              
#line 54 
                                              if (((unsigned long long)size & 17592186044416ULL) == 0ULL) {
                                                int tmp_184;
                                                
#line 54 
                                                if (((unsigned long long)size & 8796093022208ULL) == 0ULL) {
                                                  int tmp_183;
                                                  
#line 54 
                                                  if (((unsigned long long)size & 4398046511104ULL) == 0ULL) {
                                                    int tmp_182;
                                                    
#line 54 
                                                    if (((unsigned long long)size & 2199023255552ULL) == 0ULL) {
                                                      int tmp_181;
                                                      
#line 54 
                                                      if (((unsigned long long)size & 1099511627776ULL) == 0ULL) {
                                                        int tmp_180;
                                                        
#line 54 
                                                        if (((unsigned long long)size & 549755813888ULL) == 0ULL) {
                                                          int tmp_179;
                                                          
#line 54 
                                                          if (((unsigned long long)size & 274877906944ULL) == 0ULL) {
                                                            int tmp_178;
                                                            
#line 54 
                                                            if (((unsigned long long)size & 137438953472ULL) == 0ULL) {
                                                              int tmp_177;
                                                              
#line 54 
                                                              if (((unsigned long long)size & 68719476736ULL) == 0ULL) {
                                                                int tmp_176;
                                                                
#line 54 
                                                                if (((unsigned long long)size & 34359738368ULL) == 0ULL) {
                                                                  int tmp_175;
                                                                  
#line 54 
                                                                  if (
                                                                    ((unsigned long long)size & 17179869184ULL) == 0ULL) {
                                                                    int tmp_174;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 8589934592ULL) == 0ULL) {
                                                                    int tmp_173;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 4294967296ULL) == 0ULL) {
                                                                    int tmp_172;
                                                                    
#line 54 
                                                                    if (
                                                                    size >= 0) {
                                                                    int tmp_171;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 1073741824ULL) == 0ULL) {
                                                                    int tmp_170;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 536870912ULL) == 0ULL) {
                                                                    int tmp_169;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 268435456ULL) == 0ULL) {
                                                                    int tmp_168;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 134217728ULL) == 0ULL) {
                                                                    int tmp_167;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 67108864ULL) == 0ULL) {
                                                                    int tmp_166;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 33554432ULL) == 0ULL) {
                                                                    int tmp_165;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 16777216ULL) == 0ULL) {
                                                                    int tmp_164;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 8388608ULL) == 0ULL) {
                                                                    int tmp_163;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 4194304ULL) == 0ULL) {
                                                                    int tmp_162;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 2097152ULL) == 0ULL) {
                                                                    int tmp_161;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 1048576ULL) == 0ULL) {
                                                                    int tmp_160;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 524288ULL) == 0ULL) {
                                                                    int tmp_159;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 262144ULL) == 0ULL) {
                                                                    int tmp_158;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 131072ULL) == 0ULL) {
                                                                    int tmp_157;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 65536ULL) == 0ULL) {
                                                                    int tmp_156;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 32768ULL) == 0ULL) {
                                                                    int tmp_155;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 16384ULL) == 0ULL) {
                                                                    int tmp_154;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 8192ULL) == 0ULL) {
                                                                    int tmp_153;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 4096ULL) == 0ULL) {
                                                                    int tmp_152;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 2048ULL) == 0ULL) {
                                                                    int tmp_151;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 1024ULL) == 0ULL) {
                                                                    int tmp_150;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 512ULL) == 0ULL) {
                                                                    int tmp_149;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 256ULL) == 0ULL) {
                                                                    int tmp_148;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 128ULL) == 0ULL) {
                                                                    int tmp_147;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 64ULL) == 0ULL) {
                                                                    int tmp_146;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 32ULL) == 0ULL) {
                                                                    int tmp_145;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 16ULL) == 0ULL) {
                                                                    int tmp_144;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 8ULL) == 0ULL) {
                                                                    int tmp_143;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 4ULL) == 0ULL) {
                                                                    int tmp_142;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 2ULL) == 0ULL) {
                                                                    int tmp_141;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)size & 1ULL) == 0ULL) {
                                                                    int tmp_140;
                                                                    
#line 54 
                                                                    tmp_140 = ____ilog2_NaN();
                                                                    
#line 54 
                                                                    tmp_141 = tmp_140 << 3;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_141 = 0;
                                                                    
#line 54 
                                                                    tmp_142 = tmp_141;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_142 = 8;
                                                                    
#line 54 
                                                                    tmp_143 = tmp_142;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_143 = 16;
                                                                    
#line 54 
                                                                    tmp_144 = tmp_143;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_144 = 24;
                                                                    
#line 54 
                                                                    tmp_145 = tmp_144;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_145 = 32;
                                                                    
#line 54 
                                                                    tmp_146 = tmp_145;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_146 = 40;
                                                                    
#line 54 
                                                                    tmp_147 = tmp_146;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_147 = 48;
                                                                    
#line 54 
                                                                    tmp_148 = tmp_147;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_148 = 56;
                                                                    
#line 54 
                                                                    tmp_149 = tmp_148;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_149 = 64;
                                                                    
#line 54 
                                                                    tmp_150 = tmp_149;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_150 = 72;
                                                                    
#line 54 
                                                                    tmp_151 = tmp_150;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_151 = 80;
                                                                    
#line 54 
                                                                    tmp_152 = tmp_151;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_152 = 88;
                                                                    
#line 54 
                                                                    tmp_153 = tmp_152;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_153 = 96;
                                                                    
#line 54 
                                                                    tmp_154 = tmp_153;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_154 = 104;
                                                                    
#line 54 
                                                                    tmp_155 = tmp_154;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_155 = 112;
                                                                    
#line 54 
                                                                    tmp_156 = tmp_155;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_156 = 120;
                                                                    
#line 54 
                                                                    tmp_157 = tmp_156;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_157 = -128;
                                                                    
#line 54 
                                                                    tmp_158 = tmp_157;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_158 = -120;
                                                                    
#line 54 
                                                                    tmp_159 = tmp_158;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_159 = -112;
                                                                    
#line 54 
                                                                    tmp_160 = tmp_159;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_160 = -104;
                                                                    
#line 54 
                                                                    tmp_161 = tmp_160;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_161 = -96;
                                                                    
#line 54 
                                                                    tmp_162 = tmp_161;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_162 = -88;
                                                                    
#line 54 
                                                                    tmp_163 = tmp_162;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_163 = -80;
                                                                    
#line 54 
                                                                    tmp_164 = tmp_163;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_164 = -72;
                                                                    
#line 54 
                                                                    tmp_165 = tmp_164;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_165 = -64;
                                                                    
#line 54 
                                                                    tmp_166 = tmp_165;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_166 = -56;
                                                                    
#line 54 
                                                                    tmp_167 = tmp_166;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_167 = -48;
                                                                    
#line 54 
                                                                    tmp_168 = tmp_167;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_168 = -40;
                                                                    
#line 54 
                                                                    tmp_169 = tmp_168;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_169 = -32;
                                                                    
#line 54 
                                                                    tmp_170 = tmp_169;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_170 = -24;
                                                                    
#line 54 
                                                                    tmp_171 = tmp_170;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_171 = -16;
                                                                    
#line 54 
                                                                    tmp_172 = tmp_171;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_172 = -8;
                                                                    
#line 54 
                                                                    tmp_173 = tmp_172;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_173 = 0;
                                                                    
#line 54 
                                                                    tmp_174 = tmp_173;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_174 = 8;
                                                                    
#line 54 
                                                                    tmp_175 = tmp_174;
                                                                  }
                                                                  else 
                                                                    
#line 54 
                                                                    tmp_175 = 16;
                                                                  
#line 54 
                                                                  tmp_176 = tmp_175;
                                                                }
                                                                else 
                                                                  
#line 54 
                                                                  tmp_176 = 24;
                                                                
#line 54 
                                                                tmp_177 = tmp_176;
                                                              }
                                                              else 
#line 54 
                                                                   tmp_177 = 32;
                                                              
#line 54 
                                                              tmp_178 = tmp_177;
                                                            }
                                                            else 
#line 54 
                                                                 tmp_178 = 40;
                                                            
#line 54 
                                                            tmp_179 = tmp_178;
                                                          }
                                                          else 
#line 54 
                                                               tmp_179 = 48;
                                                          
#line 54 
                                                          tmp_180 = tmp_179;
                                                        }
                                                        else 
#line 54 
                                                             tmp_180 = 56;
                                                        
#line 54 
                                                        tmp_181 = tmp_180;
                                                      }
                                                      else 
#line 54 
                                                           tmp_181 = 64;
                                                      
#line 54 
                                                      tmp_182 = tmp_181;
                                                    }
                                                    else 
#line 54 
                                                         tmp_182 = 72;
                                                    
#line 54 
                                                    tmp_183 = tmp_182;
                                                  }
                                                  else 
#line 54 
                                                       tmp_183 = 80;
                                                  
#line 54 
                                                  tmp_184 = tmp_183;
                                                }
                                                else 
#line 54 
                                                     tmp_184 = 88;
                                                
#line 54 
                                                tmp_185 = tmp_184;
                                              }
                                              else 
#line 54 
                                                   tmp_185 = 96;
                                              
#line 54 
                                              tmp_186 = tmp_185;
                                            }
                                            else 
#line 54 
                                                 tmp_186 = 104;
                                            
#line 54 
                                            tmp_187 = tmp_186;
                                          }
                                          else 
#line 54 
                                               tmp_187 = 112;
                                          
#line 54 
                                          tmp_188 = tmp_187;
                                        }
                                        else 
#line 54 
                                             tmp_188 = 120;
                                        
#line 54 
                                        tmp_189 = tmp_188;
                                      }
                                      else 
#line 54 
                                           tmp_189 = -128;
                                      
#line 54 
                                      tmp_190 = tmp_189;
                                    }
                                    else 
#line 54 
                                         tmp_190 = -120;
                                    
#line 54 
                                    tmp_191 = tmp_190;
                                  }
                                  else 
#line 54 
                                       tmp_191 = -112;
                                  
#line 54 
                                  tmp_192 = tmp_191;
                                }
                                else 
#line 54 
                                     tmp_192 = -104;
                                
#line 54 
                                tmp_193 = tmp_192;
                              }
                              else 
#line 54 
                                   tmp_193 = -96;
                              
#line 54 
                              tmp_194 = tmp_193;
                            }
                            else 
#line 54 
                                 tmp_194 = -88;
                            
#line 54 
                            tmp_195 = tmp_194;
                          }
                          else 
#line 54 
                               tmp_195 = -80;
                          
#line 54 
                          tmp_196 = tmp_195;
                        }
                        else 
#line 54 
                             tmp_196 = -72;
                        
#line 54 
                        tmp_197 = tmp_196;
                      }
                      else 
#line 54 
                           tmp_197 = -64;
                      
#line 54 
                      tmp_198 = tmp_197;
                    }
                    else 
#line 54 
                         tmp_198 = -56;
                    
#line 54 
                    tmp_199 = tmp_198;
                  }
                  else 
#line 54 
                       tmp_199 = -48;
                  
#line 54 
                  tmp_200 = tmp_199;
                }
                else 
#line 54 
                     tmp_200 = -40;
                
#line 54 
                tmp_201 = tmp_200;
              }
              else 
#line 54 
                   tmp_201 = -32;
              
#line 54 
              tmp_202 = tmp_201;
            }
            else 
#line 54 
                 tmp_202 = -24;
            
#line 54 
            tmp_203 = tmp_202;
          }
          else 
#line 54 
               tmp_203 = -16;
          
#line 54 
          tmp_204 = tmp_203;
        }
        else 
#line 54 
             tmp_204 = -8;
        
#line 54 
        tmp_205 = tmp_204;
      }
      
#line 54 
      tmp_207 = tmp_205;
    }
    else {
      int tmp_206;
      
#line 54 
      tmp_206 = __ilog2_u32((unsigned int)size);
      
#line 54 
      tmp_207 = tmp_206 << 3;
    }
    
#line 54 
    if (0 != 0) {
      unsigned int tmp_274;
      
#line 54 
      if (stride <= 0) {
        int tmp_208;
        
#line 54 
        tmp_208 = ____ilog2_NaN();
        
#line 54 
        tmp_274 = (unsigned int)tmp_208 + 252U;
      }
      else {
        unsigned int tmp_273;
        
#line 54 
        if (stride >= 0) {
          unsigned int tmp_272;
          
#line 54 
          if (((unsigned long long)stride & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_271;
            
#line 54 
            if (((unsigned long long)stride & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_270;
              
#line 54 
              if (((unsigned long long)stride & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_269;
                
#line 54 
                if (((unsigned long long)stride & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_268;
                  
#line 54 
                  if (((unsigned long long)stride & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_267;
                    
#line 54 
                    if (((unsigned long long)stride & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_266;
                      
#line 54 
                      if (((unsigned long long)stride & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_265;
                        
#line 54 
                        if (((unsigned long long)stride & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_264;
                          
#line 54 
                          if (((unsigned long long)stride & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_263;
                            
#line 54 
                            if (((unsigned long long)stride & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_262;
                              
#line 54 
                              if (((unsigned long long)stride & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_261;
                                
#line 54 
                                if (((unsigned long long)stride & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_260;
                                  
#line 54 
                                  if (((unsigned long long)stride & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_259;
                                    
#line 54 
                                    if (((unsigned long long)stride & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_258;
                                      
#line 54 
                                      if (((unsigned long long)stride & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_257;
                                        
#line 54 
                                        if (((unsigned long long)stride & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_256;
                                          
#line 54 
                                          if (((unsigned long long)stride & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_255;
                                            
#line 54 
                                            if (((unsigned long long)stride & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_254;
                                              
#line 54 
                                              if (((unsigned long long)stride & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_253;
                                                
#line 54 
                                                if (((unsigned long long)stride & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_252;
                                                  
#line 54 
                                                  if (((unsigned long long)stride & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_251;
                                                    
#line 54 
                                                    if (((unsigned long long)stride & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_250;
                                                      
#line 54 
                                                      if (((unsigned long long)stride & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_249;
                                                        
#line 54 
                                                        if (((unsigned long long)stride & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_248;
                                                          
#line 54 
                                                          if (((unsigned long long)stride & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_247;
                                                            
#line 54 
                                                            if (((unsigned long long)stride & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_246;
                                                              
#line 54 
                                                              if (((unsigned long long)stride & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_245;
                                                                
#line 54 
                                                                if (((unsigned long long)stride & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_244;
                                                                  
#line 54 
                                                                  if (
                                                                    ((unsigned long long)stride & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_243;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_242;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_241;
                                                                    
#line 54 
                                                                    if (
                                                                    stride >= 0) {
                                                                    unsigned int tmp_240;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_239;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_238;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_237;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_236;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_235;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_234;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_233;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_232;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_231;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_230;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_229;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_228;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_227;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_226;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_225;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_224;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_223;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_222;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_221;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_220;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_219;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_218;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_217;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_216;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_215;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_214;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_213;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_212;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_211;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_210;
                                                                    
#line 54 
                                                                    if (
                                                                    ((unsigned long long)stride & 1ULL) == 0ULL) {
                                                                    int tmp_209;
                                                                    
#line 54 
                                                                    tmp_209 = ____ilog2_NaN();
                                                                    
#line 54 
                                                                    tmp_210 = (unsigned int)tmp_209 + 252U;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_210 = (unsigned int)(-4);
                                                                    
#line 54 
                                                                    tmp_211 = tmp_210;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_211 = (unsigned int)(-3);
                                                                    
#line 54 
                                                                    tmp_212 = tmp_211;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_212 = (unsigned int)(-2);
                                                                    
#line 54 
                                                                    tmp_213 = tmp_212;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_213 = (unsigned int)(-1);
                                                                    
#line 54 
                                                                    tmp_214 = tmp_213;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_214 = (unsigned int)0;
                                                                    
#line 54 
                                                                    tmp_215 = tmp_214;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_215 = (unsigned int)1;
                                                                    
#line 54 
                                                                    tmp_216 = tmp_215;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_216 = (unsigned int)2;
                                                                    
#line 54 
                                                                    tmp_217 = tmp_216;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_217 = (unsigned int)3;
                                                                    
#line 54 
                                                                    tmp_218 = tmp_217;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_218 = (unsigned int)4;
                                                                    
#line 54 
                                                                    tmp_219 = tmp_218;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_219 = (unsigned int)5;
                                                                    
#line 54 
                                                                    tmp_220 = tmp_219;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_220 = (unsigned int)6;
                                                                    
#line 54 
                                                                    tmp_221 = tmp_220;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_221 = (unsigned int)7;
                                                                    
#line 54 
                                                                    tmp_222 = tmp_221;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_222 = (unsigned int)8;
                                                                    
#line 54 
                                                                    tmp_223 = tmp_222;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_223 = (unsigned int)9;
                                                                    
#line 54 
                                                                    tmp_224 = tmp_223;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_224 = (unsigned int)10;
                                                                    
#line 54 
                                                                    tmp_225 = tmp_224;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_225 = (unsigned int)11;
                                                                    
#line 54 
                                                                    tmp_226 = tmp_225;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_226 = (unsigned int)12;
                                                                    
#line 54 
                                                                    tmp_227 = tmp_226;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_227 = (unsigned int)13;
                                                                    
#line 54 
                                                                    tmp_228 = tmp_227;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_228 = (unsigned int)14;
                                                                    
#line 54 
                                                                    tmp_229 = tmp_228;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_229 = (unsigned int)15;
                                                                    
#line 54 
                                                                    tmp_230 = tmp_229;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_230 = (unsigned int)16;
                                                                    
#line 54 
                                                                    tmp_231 = tmp_230;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_231 = (unsigned int)17;
                                                                    
#line 54 
                                                                    tmp_232 = tmp_231;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_232 = (unsigned int)18;
                                                                    
#line 54 
                                                                    tmp_233 = tmp_232;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_233 = (unsigned int)19;
                                                                    
#line 54 
                                                                    tmp_234 = tmp_233;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_234 = (unsigned int)20;
                                                                    
#line 54 
                                                                    tmp_235 = tmp_234;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_235 = (unsigned int)21;
                                                                    
#line 54 
                                                                    tmp_236 = tmp_235;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_236 = (unsigned int)22;
                                                                    
#line 54 
                                                                    tmp_237 = tmp_236;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_237 = (unsigned int)23;
                                                                    
#line 54 
                                                                    tmp_238 = tmp_237;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_238 = (unsigned int)24;
                                                                    
#line 54 
                                                                    tmp_239 = tmp_238;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_239 = (unsigned int)25;
                                                                    
#line 54 
                                                                    tmp_240 = tmp_239;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_240 = (unsigned int)26;
                                                                    
#line 54 
                                                                    tmp_241 = tmp_240;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_241 = (unsigned int)27;
                                                                    
#line 54 
                                                                    tmp_242 = tmp_241;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_242 = (unsigned int)28;
                                                                    
#line 54 
                                                                    tmp_243 = tmp_242;
                                                                    }
                                                                    else 
                                                                    
#line 54 
                                                                    tmp_243 = (unsigned int)29;
                                                                    
#line 54 
                                                                    tmp_244 = tmp_243;
                                                                  }
                                                                  else 
                                                                    
#line 54 
                                                                    tmp_244 = (unsigned int)30;
                                                                  
#line 54 
                                                                  tmp_245 = tmp_244;
                                                                }
                                                                else 
                                                                  
#line 54 
                                                                  tmp_245 = (unsigned int)31;
                                                                
#line 54 
                                                                tmp_246 = tmp_245;
                                                              }
                                                              else 
#line 54 
                                                                   tmp_246 = (unsigned int)32;
                                                              
#line 54 
                                                              tmp_247 = tmp_246;
                                                            }
                                                            else 
#line 54 
                                                                 tmp_247 = (unsigned int)33;
                                                            
#line 54 
                                                            tmp_248 = tmp_247;
                                                          }
                                                          else 
#line 54 
                                                               tmp_248 = (unsigned int)34;
                                                          
#line 54 
                                                          tmp_249 = tmp_248;
                                                        }
                                                        else 
#line 54 
                                                             tmp_249 = (unsigned int)35;
                                                        
#line 54 
                                                        tmp_250 = tmp_249;
                                                      }
                                                      else 
#line 54 
                                                           tmp_250 = (unsigned int)36;
                                                      
#line 54 
                                                      tmp_251 = tmp_250;
                                                    }
                                                    else 
#line 54 
                                                         tmp_251 = (unsigned int)37;
                                                    
#line 54 
                                                    tmp_252 = tmp_251;
                                                  }
                                                  else 
#line 54 
                                                       tmp_252 = (unsigned int)38;
                                                  
#line 54 
                                                  tmp_253 = tmp_252;
                                                }
                                                else 
#line 54 
                                                     tmp_253 = (unsigned int)39;
                                                
#line 54 
                                                tmp_254 = tmp_253;
                                              }
                                              else 
#line 54 
                                                   tmp_254 = (unsigned int)40;
                                              
#line 54 
                                              tmp_255 = tmp_254;
                                            }
                                            else 
#line 54 
                                                 tmp_255 = (unsigned int)41;
                                            
#line 54 
                                            tmp_256 = tmp_255;
                                          }
                                          else 
#line 54 
                                               tmp_256 = (unsigned int)42;
                                          
#line 54 
                                          tmp_257 = tmp_256;
                                        }
                                        else 
#line 54 
                                             tmp_257 = (unsigned int)43;
                                        
#line 54 
                                        tmp_258 = tmp_257;
                                      }
                                      else 
#line 54 
                                           tmp_258 = (unsigned int)44;
                                      
#line 54 
                                      tmp_259 = tmp_258;
                                    }
                                    else 
#line 54 
                                         tmp_259 = (unsigned int)45;
                                    
#line 54 
                                    tmp_260 = tmp_259;
                                  }
                                  else 
#line 54 
                                       tmp_260 = (unsigned int)46;
                                  
#line 54 
                                  tmp_261 = tmp_260;
                                }
                                else 
#line 54 
                                     tmp_261 = (unsigned int)47;
                                
#line 54 
                                tmp_262 = tmp_261;
                              }
                              else 
#line 54 
                                   tmp_262 = (unsigned int)48;
                              
#line 54 
                              tmp_263 = tmp_262;
                            }
                            else 
#line 54 
                                 tmp_263 = (unsigned int)49;
                            
#line 54 
                            tmp_264 = tmp_263;
                          }
                          else 
#line 54 
                               tmp_264 = (unsigned int)50;
                          
#line 54 
                          tmp_265 = tmp_264;
                        }
                        else 
#line 54 
                             tmp_265 = (unsigned int)51;
                        
#line 54 
                        tmp_266 = tmp_265;
                      }
                      else 
#line 54 
                           tmp_266 = (unsigned int)52;
                      
#line 54 
                      tmp_267 = tmp_266;
                    }
                    else 
#line 54 
                         tmp_267 = (unsigned int)53;
                    
#line 54 
                    tmp_268 = tmp_267;
                  }
                  else 
#line 54 
                       tmp_268 = (unsigned int)54;
                  
#line 54 
                  tmp_269 = tmp_268;
                }
                else 
#line 54 
                     tmp_269 = (unsigned int)55;
                
#line 54 
                tmp_270 = tmp_269;
              }
              else 
#line 54 
                   tmp_270 = (unsigned int)56;
              
#line 54 
              tmp_271 = tmp_270;
            }
            else 
#line 54 
                 tmp_271 = (unsigned int)57;
            
#line 54 
            tmp_272 = tmp_271;
          }
          else 
#line 54 
               tmp_272 = (unsigned int)58;
          
#line 54 
          tmp_273 = tmp_272;
        }
        else 
#line 54 
             tmp_273 = (unsigned int)59;
        
#line 54 
        tmp_274 = tmp_273;
      }
      
#line 54 
      tmp_276 = tmp_274;
    }
    else {
      int tmp_275;
      
#line 54 
      tmp_275 = __ilog2_u32((unsigned int)stride);
      
#line 54 
      tmp_276 = (unsigned int)tmp_275 + 252U;
    }
    
#line 54 
    context->sq_size_stride = (unsigned char)((unsigned int)tmp_207 | tmp_276);
    
#line 55 
    if (((mdev->dev)->caps.flags2 & 2097152ULL) != 0ULL) 
#line 56 
                                                         context->params2 |= 8U; else ;
  }
  else 
#line 59 
       context->sq_size_stride = (unsigned char)2U;
  
#line 61 
  if (0 != 0) 
#line 61 
              context->usr_page = ((((unsigned int)mdev->priv_uar.index << 24) | (((unsigned int)mdev->priv_uar.index << 8) & 16711680U)) | (((unsigned int)mdev->priv_uar.index >> 8) & 65280U)) | ((unsigned int)mdev->priv_uar.index >> 24); else 
                                                                    
#line 61 
                                                                    context->usr_page = __fswab32((unsigned int)mdev->priv_uar.index);
  
#line 62 
  if (0 != 0) 
#line 62 
              context->local_qpn = ((((unsigned int)qpn << 24) | (((unsigned int)qpn << 8) & 16711680U)) | (((unsigned int)qpn >> 8) & 65280U)) | ((unsigned int)qpn >> 24); else 
                                                                    
#line 62 
                                                                    context->local_qpn = __fswab32((unsigned int)qpn);
  
#line 63 
  context->pri_path.ackto = (unsigned char)1U;
  
#line 64 
  context->pri_path.sched_queue = (unsigned char)(((priv->port + -1) << 6) | -125);
  
#line 65 
  if (user_prio >= 0) {
    
#line 66 
    context->pri_path.sched_queue = (unsigned char)((int)context->pri_path.sched_queue | (user_prio << 3));
    
#line 67 
    context->pri_path.feup = (unsigned char)64U;
  }
  else ;
  
#line 69 
  context->pri_path.counter_index = (unsigned char)priv->counter_index;
  
#line 70 
  if (0 != 0) 
#line 70 
              context->cqn_send = ((((unsigned int)cqn << 24) | (((unsigned int)cqn << 8) & 16711680U)) | (((unsigned int)cqn >> 8) & 65280U)) | ((unsigned int)cqn >> 24); else 
                                                                    
#line 70 
                                                                    context->cqn_send = __fswab32((unsigned int)cqn);
  
#line 71 
  if (0 != 0) 
#line 71 
              context->cqn_recv = ((((unsigned int)cqn << 24) | (((unsigned int)cqn << 8) & 16711680U)) | (((unsigned int)cqn >> 8) & 65280U)) | ((unsigned int)cqn >> 24); else 
                                                                    
#line 71 
                                                                    context->cqn_recv = __fswab32((unsigned int)cqn);
  
#line 72 
  if (0 != 0) 
#line 72 
              context->db_rec_addr = ((((((((priv->res.db.dma << 2) << 56) | (((priv->res.db.dma << 2) << 40) & 71776119061217280ULL)) | (((priv->res.db.dma << 2) << 24) & 280375465082880ULL)) | (((priv->res.db.dma << 2) << 8) & 1095216660480ULL)) | (((priv->res.db.dma << 2) >> 8) & 4278190080ULL)) | (((priv->res.db.dma << 2) >> 24) & 16711680ULL)) | (((priv->res.db.dma << 2) >> 40) & 65280ULL)) | ((priv->res.db.dma << 2) >> 56); else 
                                                                    
#line 72 
                                                                    context->db_rec_addr = __fswab64(priv->res.db.dma << 2);
  
#line 73 
  if ((dev->features & 256ULL) == 0ULL) 
#line 74 
                                        context->param3 |= 64U; else ;
  
#line 76 
  if ((is_tx == 0 && rss == 0) && (mdev->dev)->caps.tunnel_offload_mode == 1) {
    
#line 78 
    if ((priv->msg_enable & 8192U) != 0U) 
#line 78 
                                          en_print("\001",(struct mlx4_en_priv const *)priv,"Setting RX qp %x tunnel mode to RX tunneled & non-tunneled\n",qpn); else ;
    
#line 79 
    context->srqn = 112U;
  }
  else ;
  
#line 81 
  return;
}


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_resources.c"
int mlx4_en_map_buffer(struct mlx4_buf *buf)
{
  int __retres;
  struct page **pages;
  int i;
  unsigned long tmp_0;
  
#line 90 
  __retres = 0;
  
#line 90 
  goto return_label;
  
#line 92 
  pages = (struct page **)kmalloc((unsigned long)buf->nbufs * 8UL,208U);
  
#line 93 
  if (pages == (struct page **)0) {
    
#line 94 
    __retres = -12;
    
#line 94 
    goto return_label;
  }
  else ;
  
#line 96 
  i = 0;
  
#line 96 
  goto ldv_50827;
  ldv_50826: 
#line 97 
  ;
  
#line 97 
  tmp_0 = __phys_addr((unsigned long)(buf->page_list + i)->buf);
  
#line 97 
  *(pages + i) = (struct page *)(-24189255811072) + (tmp_0 >> 12);
  
#line 96 
  i += 1;
  ldv_50827: 
#line 97 
  ;
  
#line 96 
  if (buf->nbufs > i) 
#line 98 
                      goto ldv_50826; else 
#line 101 
                                           goto ldv_50828;
  ldv_50828: 
#line 102 
  ;
  
#line 99 
  pgprot_t __constr_expr_37 = {.pgprot = 9223372036854776163UL};
  
#line 99 
  ;
  
#line 99 
  ;
  
#line 99 
  buf->direct.buf = vmap(pages,(unsigned int)buf->nbufs,4UL,__constr_expr_37);
  
#line 100 
  kfree((void const *)pages);
  
#line 101 
  if (buf->direct.buf == (void *)0) {
    
#line 102 
    __retres = -12;
    
#line 102 
    goto return_label;
  }
  else ;
  
#line 104 
  __retres = 0;
  return_label: 
#line 104 
                return __retres;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_resources.c"
void mlx4_en_unmap_buffer(struct mlx4_buf *buf)
{
  
#line 110 
  goto return_label;
  
#line 112 
  vunmap((void const *)buf->direct.buf);
  return_label: 
#line 112 
                return;
}


#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_resources.c"
void mlx4_en_sqp_event(struct mlx4_qp *qp, enum mlx4_event event)
{
  
#line 117 
  return;
}


#line 412  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_resources.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 415 
  tmp = ldv_kmalloc(size,flags);
  
#line 415 
  return tmp;
}

unsigned short __builtin_bswap16(unsigned short);


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  int __retres;
  
#line 481 
  int bitpos = -1;
  
#line 482 
  ldv_inline_asm();
  
#line 490 
  __retres = bitpos + 1;
  
#line 490 
  return __retres;
}


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_first_bit(unsigned long const *, unsigned long);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  
#line 47 
  unsigned long res = 0UL;
  
#line 48 
  ldv_inline_asm();
  
#line 58 
  return res;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  unsigned long tmp_0;
  
#line 80 
  if (0 != 0) 
#line 80 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 8) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 8) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 16) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 16) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 24) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 24) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 128ULL) != 0ULL)))) + (((unsigned int)((((((((((unsigned long long)(w >> 32) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 32) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 40) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 40) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 48) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 48) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 56) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 56) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 128ULL) != 0ULL))))); else 
                                                                    
#line 80 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  
#line 80 
  return tmp_0;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  unsigned int __retres;
  int tmp_0;
  
#line 178 
  tmp_0 = fls64((unsigned long long)l);
  
#line 178 
  __retres = (unsigned int)tmp_0;
  
#line 178 
  return __retres;
}


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static bool is_power_of_2(unsigned long n)
{
  bool __retres;
  
#line 54 
  __retres = (_Bool)((n != 0UL && ((n + 18446744073709551615UL) & n) == 0UL) != 0);
  
#line 54 
  return __retres;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __roundup_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 63 
  tmp = fls_long(n + 18446744073709551615UL);
  
#line 63 
  __retres = 1UL << tmp;
  
#line 63 
  return __retres;
}


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int sprintf(char *, char const * , ...);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 113 
void list_del(struct list_head *);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 65 
char *strcpy(char *, char const *);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
int __bitmap_weight(unsigned long const *, unsigned int);


#line 282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static int bitmap_empty(unsigned long const *src, unsigned int nbits)
{
  int __retres;
  unsigned long tmp;
  
#line 284 
  if (0 != 0 && nbits <= 64U) {
    
#line 285 
    __retres = (*src & (18446744073709551615UL >> (- nbits & 63U))) == 0UL;
    
#line 285 
    goto return_label;
  }
  else ;
  
#line 287 
  tmp = find_first_bit(src,(unsigned long)nbits);
  
#line 287 
  ;
  
#line 287 
  __retres = tmp == (unsigned long)nbits;
  return_label: 
#line 287 
                return __retres;
}


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long const *src, unsigned int nbits)
{
  int __retres;
  int tmp_0;
  
#line 300 
  if (0 != 0 && nbits <= 64U) {
    unsigned long tmp;
    
#line 301 
    tmp = hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
    
#line 301 
    __retres = (int)tmp;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 302 
  tmp_0 = __bitmap_weight(src,nbits);
  
#line 302 
  __retres = tmp_0;
  return_label: 
#line 302 
                return __retres;
}


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 399 
static void ldv_spin_lock_bh_83(spinlock_t *lock);


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 414 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 415 
  return;
}


#line 452 
static void ldv_spin_unlock_bh_84(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_mutex_lock_85(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_87(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_89(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_91(struct mutex *ldv_func_arg1);


#line 55 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 57 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 90 
void ldv_spin_model_lock(char *);


#line 91 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_86(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_88(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_90(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_92(struct mutex *ldv_func_arg1);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc(size_t size, gfp_t flags);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 86 
int ethtool_op_get_ts_info(struct net_device *, struct ethtool_ts_info *);


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in.h"
__inline static bool ipv4_is_multicast(__be32 addr)
{
  bool __retres;
  
#line 49 
  __retres = (_Bool)((addr & 240U) == 224U);
  
#line 49 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2867 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);


#line 2870 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 1327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
int mlx4_SET_PORT_general(struct mlx4_dev *, u8, int, u8, u8, u8, u8);


#line 1331 
int mlx4_SET_PORT_BEACON(struct mlx4_dev *, u8, u16);


#line 1360 
int mlx4_wol_read(struct mlx4_dev *, u64 *, int);


#line 1361 
int mlx4_wol_write(struct mlx4_dev *, u64, int);


#line 1371 
int mlx4_flow_attach(struct mlx4_dev *, struct mlx4_net_trans_rule *, u64 *);


#line 1373 
int mlx4_flow_detach(struct mlx4_dev *, u64);


#line 1461 
int mlx4_get_module_info(struct mlx4_dev *, u8, u16, u16, u8 *);


#line 1503 
int mlx4_ACCESS_PTYS_REG(struct mlx4_dev *, enum mlx4_access_reg_method, struct mlx4_ptys_reg *);


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip.h"
__inline static void ip_eth_mc_map(__be32 naddr, char *buf)
{
  unsigned int tmp_0;
  
#line 403 
  if (0 != 0) 
#line 403 
              tmp_0 = (((naddr << 24) | ((naddr << 8) & 16711680U)) | ((naddr >> 8) & 65280U)) | (naddr >> 24); else 
                                                                    
#line 403 
                                                                    tmp_0 = __fswab32(naddr);
  
#line 403 
  __u32 addr = tmp_0;
  
#line 404 
  *buf = (char)1;
  
#line 405 
  *(buf + 1U) = (char)0;
  
#line 406 
  *(buf + 2U) = (char)94;
  
#line 407 
  *(buf + 5U) = (char)addr;
  
#line 408 
  addr >>= 8;
  
#line 409 
  *(buf + 4U) = (char)addr;
  
#line 410 
  addr >>= 8;
  
#line 411 
  *(buf + 3U) = (char)((int)((char)addr) & 127);
  
#line 412 
  return;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 161 
  __retres = (_Bool)((unsigned int)(((int)*((u16 const *)addr) & (int)*((u16 const *)(addr + 2U))) & (int)*((u16 const *)(addr + 4U))) == 65535U);
  
#line 161 
  return __retres;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
int ptp_clock_index(struct ptp_clock *);


#line 742  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
int mlx4_en_start_port(struct net_device *dev);


#line 743 
void mlx4_en_stop_port(struct net_device *dev, int detach);


#line 750 
void mlx4_en_free_resources(struct mlx4_en_priv *priv);


#line 751 
int mlx4_en_alloc_resources(struct mlx4_en_priv *priv);


#line 759 
int mlx4_en_set_cq_moder(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq);


#line 813 
int mlx4_en_QUERY_PORT(struct mlx4_en_dev *mdev, u8 port);


#line 820 
int mlx4_en_setup_tc(struct net_device *dev, u8 up_0);


#line 827 
void mlx4_en_ex_selftest(struct net_device *dev, u32 *flags, u64 *buf);


#line 836 
void mlx4_en_update_pfc_stats_bitmap(struct mlx4_dev *dev, struct mlx4_en_stats_bitmap *stats_bitmap, u8 rx_ppp, u8 rx_pause, u8 tx_ppp, u8 tx_pause);


#line 855 
struct ethtool_ops const mlx4_en_ethtool_ops;


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_moderation_update(struct mlx4_en_priv *priv)
{
  int __retres;
  int i;
  
#line 53 
  int err = 0;
  
#line 55 
  i = 0;
  
#line 55 
  goto ldv_57241;
  ldv_57240: 
#line 56 
  ;
  
#line 56 
  (*(priv->tx_cq + i))->moder_cnt = priv->tx_frames;
  
#line 57 
  (*(priv->tx_cq + i))->moder_time = priv->tx_usecs;
  
#line 58 
  if ((int)priv->port_up != 0) {
    
#line 59 
    err = mlx4_en_set_cq_moder(priv,*(priv->tx_cq + i));
    
#line 60 
    if (err != 0) {
      
#line 61 
      __retres = err;
      
#line 61 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 55 
  i += 1;
  ldv_57241: 
#line 56 
  ;
  
#line 55 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 57 
                                           goto ldv_57240; else 
#line 60 
                                                                goto ldv_57242;
  ldv_57242: 
#line 61 
  ;
  
#line 65 
  if ((unsigned int)priv->adaptive_rx_coal != 0U) {
    
#line 66 
    __retres = 0;
    
#line 66 
    goto return_label;
  }
  else ;
  
#line 68 
  i = 0;
  
#line 68 
  goto ldv_57244;
  ldv_57243: 
#line 69 
  ;
  
#line 69 
  (priv->rx_cq[i])->moder_cnt = priv->rx_frames;
  
#line 70 
  (priv->rx_cq[i])->moder_time = priv->rx_usecs;
  
#line 71 
  priv->last_moder_time[i] = 65535;
  
#line 72 
  if ((int)priv->port_up != 0) {
    
#line 73 
    err = mlx4_en_set_cq_moder(priv,priv->rx_cq[i]);
    
#line 74 
    if (err != 0) {
      
#line 75 
      __retres = err;
      
#line 75 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 68 
  i += 1;
  ldv_57244: 
#line 69 
  ;
  
#line 68 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 70 
                                           goto ldv_57243; else 
#line 73 
                                                                goto ldv_57245;
  ldv_57245: 
#line 74 
  ;
  
#line 79 
  __retres = err;
  return_label: 
#line 79 
                return __retres;
}


#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void mlx4_en_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
{
  char const *tmp_0;
  
#line 85 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 86 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 88 
  strlcpy((char *)(& drvinfo->driver),"mlx4_en",32UL);
  
#line 89 
  strlcpy((char *)(& drvinfo->version),"2.2-1",32UL);
  
#line 91 
  snprintf((char *)(& drvinfo->fw_version),32UL,"%d.%d.%d",(int)((unsigned short)((mdev->dev)->caps.fw_ver >> 32)),(int)((unsigned short)((mdev->dev)->caps.fw_ver >> 16)),(int)((unsigned short)(mdev->dev)->caps.fw_ver));
  
#line 96 
  tmp_0 = pci_name((struct pci_dev const *)((mdev->dev)->persist)->pdev);
  
#line 96 
  ;
  
#line 96 
  strlcpy((char *)(& drvinfo->bus_info),tmp_0,32UL);
  
#line 98 
  drvinfo->n_stats = 0U;
  
#line 99 
  drvinfo->regdump_len = 0U;
  
#line 100 
  drvinfo->eedump_len = 0U;
  
#line 101 
  return;
}


#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static char const mlx4_en_priv_flags[1U][32U] = {{(char)'b', (char)'l', (char)'u', (char)'e', (char)'f', (char)'l', (char)'a', (char)'m', (char)'e', (char)'\000'}};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static char const main_strings[132U][32U] = {{(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, {(char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, {(char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'m', (char)'i', (char)'s', (char)'s', (char)'e', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'e', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'c', (char)'a', (char)'r', (char)'r', (char)'i', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'h', (char)'e', (char)'a', (char)'r', (char)'t', (char)'b', (char)'e', (char)'a', (char)'t', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'w', (char)'i', (char)'n', (char)'d', (char)'o', (char)'w', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'s', (char)'o', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'x', (char)'m', (char)'i', (char)'t', (char)'_', (char)'m', (char)'o', (char)'r', (char)'e', (char)'\000'}, {(char)'q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, {(char)'w', (char)'a', (char)'k', (char)'e', (char)'_', (char)'q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'t', (char)'i', (char)'m', (char)'e', (char)'o', (char)'u', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'a', (char)'l', (char)'l', (char)'o', (char)'c', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'e', (char)'d', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'g', (char)'o', (char)'o', (char)'d', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'n', (char)'o', (char)'n', (char)'e', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'c', (char)'o', (char)'m', (char)'p', (char)'l', (char)'e', (char)'t', (char)'e', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'c', (char)'h', (char)'k', (char)'s', (char)'u', (char)'m', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'\000'}, {(char)'p', (char)'f', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'p', (char)'f', (char)'_', (char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'p', (char)'f', (char)'_', (char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'p', (char)'f', (char)'_', (char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'d', (char)'u', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'i', (char)'t', (char)'i', (char)'o', (char)'n', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'i', (char)'n', (char)'_', (char)'r', (char)'a', (char)'n', (char)'g', (char)'e', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'o', (char)'u', (char)'t', (char)'_', (char)'r', (char)'a', (char)'n', (char)'g', (char)'e', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'n', (char)'o', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'n', (char)'o', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'0', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'2', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'6', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'_', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'n', (char)'o', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'n', (char)'o', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}};

#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static char const mlx4_en_test_names[5U][32U] = {{(char)'I', (char)'n', (char)'t', (char)'e', (char)'r', (char)'r', (char)'u', (char)'p', (char)'t', (char)' ', (char)'T', (char)'e', (char)'s', (char)'t', (char)'\000'}, {(char)'L', (char)'i', (char)'n', (char)'k', (char)' ', (char)'T', (char)'e', (char)'s', (char)'t', (char)'\000'}, {(char)'S', (char)'p', (char)'e', (char)'e', (char)'d', (char)' ', (char)'T', (char)'e', (char)'s', (char)'t', (char)'\000'}, {(char)'R', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)' ', (char)'T', (char)'e', (char)'s', (char)'t', (char)'\000'}, {(char)'L', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k', (char)' ', (char)'T', (char)'e', (char)'s', (char)'t', (char)'\000'}};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 mlx4_en_get_msglevel(struct net_device *dev)
{
  u32 __retres;
  void *tmp;
  
#line 209 
  tmp = netdev_priv((struct net_device const *)dev);
  
#line 209 
  __retres = ((struct mlx4_en_priv *)tmp)->msg_enable;
  
#line 209 
  return __retres;
}


#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void mlx4_en_set_msglevel(struct net_device *dev, u32 val)
{
  void *tmp;
  
#line 214 
  tmp = netdev_priv((struct net_device const *)dev);
  
#line 214 
  ((struct mlx4_en_priv *)tmp)->msg_enable = val;
  
#line 215 
  return;
}


#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void mlx4_en_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  u64 mask;
  unsigned long tmp_0;
  
#line 220 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)netdev);
  
#line 221 
  int err = 0;
  
#line 222 
  u64 config = 0ULL;
  
#line 225 
  if ((unsigned int)priv->port + 4294967295U > 1U) {
    
#line 226 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to get WoL information\n");
    
#line 227 
    goto return_label;
  }
  else ;
  
#line 230 
  if (priv->port == 1) 
#line 230 
                       tmp_0 = 137438953472UL; else 
#line 230 
                                                    tmp_0 = 274877906944UL;
  
#line 230 
  mask = (unsigned long long)tmp_0;
  
#line 233 
  if ((((priv->mdev)->dev)->caps.flags & mask) == 0ULL) {
    
#line 234 
    wol->supported = 0U;
    
#line 235 
    wol->wolopts = 0U;
    
#line 236 
    goto return_label;
  }
  else ;
  
#line 239 
  err = mlx4_wol_read((priv->mdev)->dev,& config,priv->port);
  
#line 240 
  if (err != 0) {
    
#line 241 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to get WoL information\n");
    
#line 242 
    goto return_label;
  }
  else ;
  
#line 245 
  if ((config & 2305843009213693952ULL) != 0ULL) 
#line 246 
                                                 wol->supported = 32U; else 
                                                                    
#line 248 
                                                                    wol->supported = 0U;
  
#line 250 
  if ((config & 4611686018427387904ULL) != 0ULL) 
#line 251 
                                                 wol->wolopts = 32U; else 
                                                                    
#line 253 
                                                                    wol->wolopts = 0U;
  return_label: 
#line 254 
                return;
}


#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  int __retres;
  u64 mask;
  unsigned long tmp_0;
  
#line 259 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)netdev);
  
#line 260 
  u64 config = 0ULL;
  
#line 261 
  int err = 0;
  
#line 264 
  if ((unsigned int)priv->port + 4294967295U > 1U) {
    
#line 265 
    __retres = -95;
    
#line 265 
    goto return_label;
  }
  else ;
  
#line 267 
  if (priv->port == 1) 
#line 267 
                       tmp_0 = 137438953472UL; else 
#line 267 
                                                    tmp_0 = 274877906944UL;
  
#line 267 
  mask = (unsigned long long)tmp_0;
  
#line 270 
  if ((((priv->mdev)->dev)->caps.flags & mask) == 0ULL) {
    
#line 271 
    __retres = -95;
    
#line 271 
    goto return_label;
  }
  else ;
  
#line 273 
  if ((wol->supported & 4294967263U) != 0U) {
    
#line 274 
    __retres = -22;
    
#line 274 
    goto return_label;
  }
  else ;
  
#line 276 
  err = mlx4_wol_read((priv->mdev)->dev,& config,priv->port);
  
#line 277 
  if (err != 0) {
    
#line 278 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to get WoL info, unable to modify\n");
    
#line 279 
    __retres = err;
    
#line 279 
    goto return_label;
  }
  else ;
  
#line 282 
  if ((wol->wolopts & 32U) != 0U) 
#line 283 
                                  config |= 16140901064495857664ULL;
  else {
    
#line 286 
    config &= 11529215046068469759ULL;
    
#line 287 
    config |= 9223372036854775808ULL;
  }
  
#line 290 
  err = mlx4_wol_write((priv->mdev)->dev,config,priv->port);
  
#line 291 
  if (err != 0) 
#line 292 
                en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to set WoL information\n"); else ;
  
#line 294 
  __retres = err;
  return_label: 
#line 294 
                return __retres;
}


#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
__inline static void bitmap_iterator_init(struct bitmap_iterator *h, unsigned long *stats_bitmap, int count)
{
  int tmp;
  int tmp_1;
  
#line 308 
  h->iterator = 0U;
  
#line 309 
  tmp = bitmap_empty((unsigned long const *)stats_bitmap,(unsigned int)count);
  
#line 309 
  h->advance_array = (_Bool)(tmp == 0);
  
#line 311 
  if ((int)h->advance_array != 0) 
#line 310 
                                  tmp_1 = bitmap_weight((unsigned long const *)stats_bitmap,(unsigned int)count); else 
                                                                    
#line 311 
                                                                    tmp_1 = count;
  
#line 310 
  h->count = (unsigned int)tmp_1;
  
#line 312 
  h->stats_bitmap = stats_bitmap;
  
#line 313 
  return;
}


#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
__inline static int bitmap_iterator_test(struct bitmap_iterator *h)
{
  int tmp_2;
  
#line 317 
  if (! h->advance_array) 
#line 317 
                          tmp_2 = 1;
  else {
    int tmp_1;
    
#line 317 
    if (0 != 0) 
#line 317 
                tmp_1 = constant_test_bit((long)h->iterator,(unsigned long const volatile *)h->stats_bitmap); else 
                                                                    
#line 317 
                                                                    tmp_1 = variable_test_bit((long)h->iterator,(unsigned long const volatile *)h->stats_bitmap);
    
#line 317 
    tmp_2 = tmp_1;
  }
  
#line 317 
  return tmp_2;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
__inline static int bitmap_iterator_inc(struct bitmap_iterator *h)
{
  int __retres;
  unsigned int tmp;
  
#line 322 
  tmp = h->iterator;
  
#line 322 
  h->iterator += 1U;
  
#line 322 
  ;
  
#line 322 
  __retres = (int)tmp;
  
#line 322 
  return __retres;
}


#line 326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
__inline static unsigned int bitmap_iterator_count(struct bitmap_iterator *h)
{
  unsigned int __retres;
  
#line 328 
  __retres = h->count;
  
#line 328 
  return __retres;
}


#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  struct bitmap_iterator it;
  
#line 333 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 336 
  bitmap_iterator_init(& it,(unsigned long *)(& priv->stats_bitmap.bitmap),132);
  
#line 338 
  switch (sset) {
    unsigned int tmp_0;
    int tmp_1;
    case 1: 
#line 339 
    ;
    
#line 341 
    tmp_0 = bitmap_iterator_count(& it);
    
#line 341 
    ;
    
#line 341 
    __retres = (int)(tmp_0 + (priv->rx_ring_num * 5U + priv->tx_ring_num * 2U));
    
#line 341 
    goto return_label;
    case 0: 
#line 347 
    ;
    
#line 348 
    if ((((priv->mdev)->dev)->caps.flags & 4294967296ULL) == 0ULL) 
#line 348 
                                                                   tmp_1 = 3; else 
                                                                    
#line 348 
                                                                    tmp_1 = 5;
    
#line 348 
    __retres = tmp_1;
    
#line 348 
    goto return_label;
    case 2: 
#line 350 
    ;
    
#line 351 
    __retres = 1;
    
#line 351 
    goto return_label;
    default: 
#line 352 
    ;
    
#line 353 
    __retres = -95;
    
#line 353 
    goto return_label;
  }
  return_label: 
#line 338 
                return __retres;
}


#line 357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void mlx4_en_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, uint64_t *data)
{
  int i;
  struct bitmap_iterator it;
  int tmp_1;
  int tmp_3;
  int tmp_5;
  int tmp_7;
  int tmp_9;
  int tmp_11;
  int tmp_13;
  int tmp_15;
  int tmp_16;
  int tmp_17;
  int tmp_18;
  int tmp_19;
  int tmp_20;
  int tmp_21;
  int tmp_22;
  
#line 360 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 361 
  int index = 0;
  
#line 365 
  bitmap_iterator_init(& it,(unsigned long *)(& priv->stats_bitmap.bitmap),132);
  
#line 367 
  ldv_spin_lock_bh_83(& priv->stats_lock);
  
#line 369 
  i = 0;
  
#line 369 
  goto ldv_57320;
  ldv_57319: 
#line 370 
  ;
  
#line 370 
  tmp_1 = bitmap_iterator_test(& it);
  
#line 370 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 371 
    tmp_0 = index;
    
#line 371 
    index += 1;
    
#line 371 
    *(data + tmp_0) = (unsigned long long)*((unsigned long *)(& priv->stats) + i);
  }
  else ;
  
#line 369 
  i += 1;
  
#line 369 
  bitmap_iterator_inc(& it);
  ldv_57320: 
#line 370 
  ;
  
#line 369 
  if (i <= 20) 
#line 371 
               goto ldv_57319; else 
#line 374 
                                    goto ldv_57321;
  ldv_57321: 
#line 375 
  ;
  
#line 373 
  i = 0;
  
#line 373 
  goto ldv_57323;
  ldv_57322: 
#line 374 
  ;
  
#line 374 
  tmp_3 = bitmap_iterator_test(& it);
  
#line 374 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 375 
    tmp_2 = index;
    
#line 375 
    index += 1;
    
#line 375 
    *(data + tmp_2) = (unsigned long long)*((unsigned long *)(& priv->port_stats) + i);
  }
  else ;
  
#line 373 
  i += 1;
  
#line 373 
  bitmap_iterator_inc(& it);
  ldv_57323: 
#line 374 
  ;
  
#line 373 
  if (i <= 9) 
#line 375 
              goto ldv_57322; else 
#line 378 
                                   goto ldv_57324;
  ldv_57324: 
#line 379 
  ;
  
#line 377 
  i = 0;
  
#line 377 
  goto ldv_57326;
  ldv_57325: 
#line 378 
  ;
  
#line 378 
  tmp_5 = bitmap_iterator_test(& it);
  
#line 378 
  if (tmp_5 != 0) {
    int tmp_4;
    
#line 379 
    tmp_4 = index;
    
#line 379 
    index += 1;
    
#line 379 
    *(data + tmp_4) = (unsigned long long)*((unsigned long *)(& priv->pf_stats) + i);
  }
  else ;
  
#line 377 
  i += 1;
  
#line 377 
  bitmap_iterator_inc(& it);
  ldv_57326: 
#line 378 
  ;
  
#line 377 
  if (i <= 3) 
#line 379 
              goto ldv_57325; else 
#line 382 
                                   goto ldv_57327;
  ldv_57327: 
#line 383 
  ;
  
#line 382 
  i = 0;
  
#line 382 
  goto ldv_57329;
  ldv_57328: 
#line 383 
  ;
  
#line 384 
  tmp_7 = bitmap_iterator_test(& it);
  
#line 384 
  if (tmp_7 != 0) {
    int tmp_6;
    
#line 385 
    tmp_6 = index;
    
#line 385 
    index += 1;
    
#line 385 
    *(data + tmp_6) = *((u64 *)(& priv->rx_priority_flowstats) + i);
  }
  else ;
  
#line 383 
  i += 1;
  
#line 383 
  bitmap_iterator_inc(& it);
  ldv_57329: 
#line 384 
  ;
  
#line 382 
  if (i <= 23) 
#line 384 
               goto ldv_57328; else 
#line 387 
                                    goto ldv_57330;
  ldv_57330: 
#line 388 
  ;
  
#line 388 
  i = 0;
  
#line 388 
  goto ldv_57332;
  ldv_57331: 
#line 389 
  ;
  
#line 389 
  tmp_9 = bitmap_iterator_test(& it);
  
#line 389 
  if (tmp_9 != 0) {
    int tmp_8;
    
#line 390 
    tmp_8 = index;
    
#line 390 
    index += 1;
    
#line 390 
    *(data + tmp_8) = *((u64 *)(& priv->rx_flowstats) + i);
  }
  else ;
  
#line 388 
  i += 1;
  
#line 388 
  bitmap_iterator_inc(& it);
  ldv_57332: 
#line 389 
  ;
  
#line 388 
  if (i <= 2) 
#line 390 
              goto ldv_57331; else 
#line 393 
                                   goto ldv_57333;
  ldv_57333: 
#line 394 
  ;
  
#line 392 
  i = 0;
  
#line 392 
  goto ldv_57335;
  ldv_57334: 
#line 393 
  ;
  
#line 394 
  tmp_11 = bitmap_iterator_test(& it);
  
#line 394 
  if (tmp_11 != 0) {
    int tmp_10;
    
#line 395 
    tmp_10 = index;
    
#line 395 
    index += 1;
    
#line 395 
    *(data + tmp_10) = *((u64 *)(& priv->tx_priority_flowstats) + i);
  }
  else ;
  
#line 393 
  i += 1;
  
#line 393 
  bitmap_iterator_inc(& it);
  ldv_57335: 
#line 394 
  ;
  
#line 392 
  if (i <= 23) 
#line 394 
               goto ldv_57334; else 
#line 397 
                                    goto ldv_57336;
  ldv_57336: 
#line 398 
  ;
  
#line 398 
  i = 0;
  
#line 398 
  goto ldv_57338;
  ldv_57337: 
#line 399 
  ;
  
#line 399 
  tmp_13 = bitmap_iterator_test(& it);
  
#line 399 
  if (tmp_13 != 0) {
    int tmp_12;
    
#line 400 
    tmp_12 = index;
    
#line 400 
    index += 1;
    
#line 400 
    *(data + tmp_12) = *((u64 *)(& priv->tx_flowstats) + i);
  }
  else ;
  
#line 398 
  i += 1;
  
#line 398 
  bitmap_iterator_inc(& it);
  ldv_57338: 
#line 399 
  ;
  
#line 398 
  if (i <= 2) 
#line 400 
              goto ldv_57337; else 
#line 403 
                                   goto ldv_57339;
  ldv_57339: 
#line 404 
  ;
  
#line 402 
  i = 0;
  
#line 402 
  goto ldv_57341;
  ldv_57340: 
#line 403 
  ;
  
#line 403 
  tmp_15 = bitmap_iterator_test(& it);
  
#line 403 
  if (tmp_15 != 0) {
    int tmp_14;
    
#line 404 
    tmp_14 = index;
    
#line 404 
    index += 1;
    
#line 404 
    *(data + tmp_14) = (unsigned long long)*((unsigned long *)(& priv->pkstats) + i);
  }
  else ;
  
#line 402 
  i += 1;
  
#line 402 
  bitmap_iterator_inc(& it);
  ldv_57341: 
#line 403 
  ;
  
#line 402 
  if (i <= 42) 
#line 404 
               goto ldv_57340; else 
#line 407 
                                    goto ldv_57342;
  ldv_57342: 
#line 408 
  ;
  
#line 406 
  i = 0;
  
#line 406 
  goto ldv_57344;
  ldv_57343: 
#line 407 
  ;
  
#line 407 
  tmp_16 = index;
  
#line 407 
  index += 1;
  
#line 407 
  *(data + tmp_16) = (unsigned long long)(*(priv->tx_ring + i))->packets;
  
#line 408 
  tmp_17 = index;
  
#line 408 
  index += 1;
  
#line 408 
  *(data + tmp_17) = (unsigned long long)(*(priv->tx_ring + i))->bytes;
  
#line 406 
  i += 1;
  ldv_57344: 
#line 407 
  ;
  
#line 406 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 408 
                                           goto ldv_57343; else 
#line 411 
                                                                goto ldv_57345;
  ldv_57345: 
#line 412 
  ;
  
#line 410 
  i = 0;
  
#line 410 
  goto ldv_57347;
  ldv_57346: 
#line 411 
  ;
  
#line 411 
  tmp_18 = index;
  
#line 411 
  index += 1;
  
#line 411 
  *(data + tmp_18) = (unsigned long long)(priv->rx_ring[i])->packets;
  
#line 412 
  tmp_19 = index;
  
#line 412 
  index += 1;
  
#line 412 
  *(data + tmp_19) = (unsigned long long)(priv->rx_ring[i])->bytes;
  
#line 414 
  tmp_20 = index;
  
#line 414 
  index += 1;
  
#line 414 
  *(data + tmp_20) = (unsigned long long)(priv->rx_ring[i])->yields;
  
#line 415 
  tmp_21 = index;
  
#line 415 
  index += 1;
  
#line 415 
  *(data + tmp_21) = (unsigned long long)(priv->rx_ring[i])->misses;
  
#line 416 
  tmp_22 = index;
  
#line 416 
  index += 1;
  
#line 416 
  *(data + tmp_22) = (unsigned long long)(priv->rx_ring[i])->cleaned;
  
#line 410 
  i += 1;
  ldv_57347: 
#line 411 
  ;
  
#line 410 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 412 
                                           goto ldv_57346; else 
#line 415 
                                                                goto ldv_57348;
  ldv_57348: 
#line 416 
  ;
  
#line 419 
  ldv_spin_unlock_bh_84(& priv->stats_lock);
  
#line 420 
  return;
}


#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void mlx4_en_self_test(struct net_device *dev, struct ethtool_test *etest, u64 *buf)
{
  
#line 426 
  mlx4_en_ex_selftest(dev,& etest->flags,buf);
  
#line 427 
  return;
}


#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void mlx4_en_get_strings(struct net_device *dev, uint32_t stringset, uint8_t *data)
{
  int i;
  struct bitmap_iterator it;
  
#line 432 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 433 
  int index = 0;
  
#line 434 
  int strings = 0;
  
#line 437 
  bitmap_iterator_init(& it,(unsigned long *)(& priv->stats_bitmap.bitmap),132);
  
#line 439 
  switch (stringset) {
    int tmp_1;
    int tmp_3;
    int tmp_5;
    int tmp_7;
    int tmp_9;
    int tmp_10;
    int tmp_11;
    int tmp_12;
    int tmp_13;
    int tmp_14;
    int tmp_15;
    int tmp_16;
    case (uint32_t)0: 
#line 440 
    ;
    
#line 441 
    i = 0;
    
#line 441 
    goto ldv_57366;
    ldv_57365: 
#line 442 
    ;
    
#line 442 
    strcpy((char *)(data + i * 32),(char const *)(& mlx4_en_test_names[i]));
    
#line 441 
    i += 1;
    ldv_57366: 
#line 442 
    ;
    
#line 441 
    if (i <= 2) 
#line 443 
                goto ldv_57365; else 
#line 446 
                                     goto ldv_57367;
    ldv_57367: 
#line 447 
    ;
    
#line 443 
    if ((((priv->mdev)->dev)->caps.flags & 4294967296ULL) != 0ULL) {
      
#line 444 
      goto ldv_57369;
      ldv_57368: 
#line 445 
      ;
      
#line 445 
      strcpy((char *)(data + i * 32),(char const *)(& mlx4_en_test_names[i]));
      
#line 444 
      i += 1;
      ldv_57369: 
#line 445 
      ;
      
#line 444 
      if (i <= 4) 
#line 446 
                  goto ldv_57368; else 
#line 449 
                                       goto ldv_57370;
      ldv_57370: 
#line 450 
      ;
    }
    else ;
    
#line 446 
    goto ldv_57371;
    case (uint32_t)1: 
#line 448 
    ;
    
#line 450 
    i = 0;
    
#line 450 
    goto ldv_57374;
    ldv_57373: 
#line 451 
    ;
    
#line 452 
    tmp_1 = bitmap_iterator_test(& it);
    
#line 452 
    if (tmp_1 != 0) {
      int tmp_0;
      
#line 453 
      ;
      
#line 453 
      tmp_0 = index;
      
#line 453 
      index += 1;
      
#line 453 
      ;
      
#line 453 
      strcpy((char *)(data + tmp_0 * 32),(char const *)(& main_strings[strings]));
    }
    else ;
    
#line 450 
    i += 1;
    
#line 450 
    strings += 1;
    
#line 450 
    bitmap_iterator_inc(& it);
    ldv_57374: 
#line 452 
    ;
    
#line 450 
    if (i <= 20) 
#line 452 
                 goto ldv_57373; else 
#line 455 
                                      goto ldv_57375;
    ldv_57375: 
#line 456 
    ;
    
#line 456 
    i = 0;
    
#line 456 
    goto ldv_57377;
    ldv_57376: 
#line 457 
    ;
    
#line 458 
    tmp_3 = bitmap_iterator_test(& it);
    
#line 458 
    if (tmp_3 != 0) {
      int tmp_2;
      
#line 459 
      ;
      
#line 459 
      tmp_2 = index;
      
#line 459 
      index += 1;
      
#line 459 
      ;
      
#line 459 
      strcpy((char *)(data + tmp_2 * 32),(char const *)(& main_strings[strings]));
    }
    else ;
    
#line 456 
    i += 1;
    
#line 456 
    strings += 1;
    
#line 456 
    bitmap_iterator_inc(& it);
    ldv_57377: 
#line 458 
    ;
    
#line 456 
    if (i <= 9) 
#line 458 
                goto ldv_57376; else 
#line 461 
                                     goto ldv_57378;
    ldv_57378: 
#line 462 
    ;
    
#line 462 
    i = 0;
    
#line 462 
    goto ldv_57380;
    ldv_57379: 
#line 463 
    ;
    
#line 464 
    tmp_5 = bitmap_iterator_test(& it);
    
#line 464 
    if (tmp_5 != 0) {
      int tmp_4;
      
#line 465 
      ;
      
#line 465 
      tmp_4 = index;
      
#line 465 
      index += 1;
      
#line 465 
      ;
      
#line 465 
      strcpy((char *)(data + tmp_4 * 32),(char const *)(& main_strings[strings]));
    }
    else ;
    
#line 462 
    i += 1;
    
#line 462 
    strings += 1;
    
#line 462 
    bitmap_iterator_inc(& it);
    ldv_57380: 
#line 464 
    ;
    
#line 462 
    if (i <= 3) 
#line 464 
                goto ldv_57379; else 
#line 467 
                                     goto ldv_57381;
    ldv_57381: 
#line 468 
    ;
    
#line 468 
    i = 0;
    
#line 468 
    goto ldv_57383;
    ldv_57382: 
#line 469 
    ;
    
#line 470 
    tmp_7 = bitmap_iterator_test(& it);
    
#line 470 
    if (tmp_7 != 0) {
      int tmp_6;
      
#line 471 
      ;
      
#line 471 
      tmp_6 = index;
      
#line 471 
      index += 1;
      
#line 471 
      ;
      
#line 471 
      strcpy((char *)(data + tmp_6 * 32),(char const *)(& main_strings[strings]));
    }
    else ;
    
#line 468 
    i += 1;
    
#line 468 
    strings += 1;
    
#line 468 
    bitmap_iterator_inc(& it);
    ldv_57383: 
#line 470 
    ;
    
#line 468 
    if (i <= 53) 
#line 470 
                 goto ldv_57382; else 
#line 473 
                                      goto ldv_57384;
    ldv_57384: 
#line 474 
    ;
    
#line 474 
    i = 0;
    
#line 474 
    goto ldv_57386;
    ldv_57385: 
#line 475 
    ;
    
#line 476 
    tmp_9 = bitmap_iterator_test(& it);
    
#line 476 
    if (tmp_9 != 0) {
      int tmp_8;
      
#line 477 
      ;
      
#line 477 
      tmp_8 = index;
      
#line 477 
      index += 1;
      
#line 477 
      ;
      
#line 477 
      strcpy((char *)(data + tmp_8 * 32),(char const *)(& main_strings[strings]));
    }
    else ;
    
#line 474 
    i += 1;
    
#line 474 
    strings += 1;
    
#line 474 
    bitmap_iterator_inc(& it);
    ldv_57386: 
#line 476 
    ;
    
#line 474 
    if (i <= 42) 
#line 476 
                 goto ldv_57385; else 
#line 479 
                                      goto ldv_57387;
    ldv_57387: 
#line 480 
    ;
    
#line 480 
    i = 0;
    
#line 480 
    goto ldv_57389;
    ldv_57388: 
#line 481 
    ;
    
#line 481 
    ;
    
#line 481 
    tmp_10 = index;
    
#line 481 
    index += 1;
    
#line 481 
    ;
    
#line 481 
    sprintf((char *)(data + tmp_10 * 32),"tx%d_packets",i);
    
#line 483 
    ;
    
#line 483 
    tmp_11 = index;
    
#line 483 
    index += 1;
    
#line 483 
    ;
    
#line 483 
    sprintf((char *)(data + tmp_11 * 32),"tx%d_bytes",i);
    
#line 480 
    i += 1;
    ldv_57389: 
#line 481 
    ;
    
#line 480 
    if (priv->tx_ring_num > (unsigned int)i) 
#line 482 
                                             goto ldv_57388; else 
#line 485 
                                                                  goto ldv_57390;
    ldv_57390: 
#line 486 
    ;
    
#line 486 
    i = 0;
    
#line 486 
    goto ldv_57392;
    ldv_57391: 
#line 487 
    ;
    
#line 487 
    ;
    
#line 487 
    tmp_12 = index;
    
#line 487 
    index += 1;
    
#line 487 
    ;
    
#line 487 
    sprintf((char *)(data + tmp_12 * 32),"rx%d_packets",i);
    
#line 489 
    ;
    
#line 489 
    tmp_13 = index;
    
#line 489 
    index += 1;
    
#line 489 
    ;
    
#line 489 
    sprintf((char *)(data + tmp_13 * 32),"rx%d_bytes",i);
    
#line 492 
    ;
    
#line 492 
    tmp_14 = index;
    
#line 492 
    index += 1;
    
#line 492 
    ;
    
#line 492 
    sprintf((char *)(data + tmp_14 * 32),"rx%d_napi_yield",i);
    
#line 494 
    ;
    
#line 494 
    tmp_15 = index;
    
#line 494 
    index += 1;
    
#line 494 
    ;
    
#line 494 
    sprintf((char *)(data + tmp_15 * 32),"rx%d_misses",i);
    
#line 496 
    ;
    
#line 496 
    tmp_16 = index;
    
#line 496 
    index += 1;
    
#line 496 
    ;
    
#line 496 
    sprintf((char *)(data + tmp_16 * 32),"rx%d_cleaned",i);
    
#line 486 
    i += 1;
    ldv_57392: 
#line 487 
    ;
    
#line 486 
    if (priv->rx_ring_num > (unsigned int)i) 
#line 488 
                                             goto ldv_57391; else 
#line 491 
                                                                  goto ldv_57393;
    ldv_57393: 
#line 492 
    ;
    
#line 500 
    goto ldv_57371;
    case (uint32_t)2: 
#line 501 
    ;
    
#line 502 
    i = 0;
    
#line 502 
    goto ldv_57399;
    ldv_57398: 
#line 503 
    ;
    
#line 503 
    strcpy((char *)(data + i * 32),(char const *)(& mlx4_en_priv_flags[i]));
    
#line 502 
    i += 1;
    ldv_57399: 
#line 503 
    ;
    
#line 502 
    if (i == 0) 
#line 504 
                goto ldv_57398; else 
#line 507 
                                     goto ldv_57400;
    ldv_57400: 
#line 508 
    ;
    
#line 505 
    goto ldv_57371;
  }
  ldv_57371: 
#line 508 
  ;
  
#line 509 
  return;
}


#line 510  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 mlx4_en_autoneg_get(struct net_device *dev)
{
  
#line 512 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 513 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 514 
  u32 autoneg = 0U;
  
#line 516 
  if (((mdev->dev)->caps.flags2 & 32768ULL) != 0ULL && (priv->port_state.flags & 2U) != 0U) 
    
#line 518 
    autoneg = 1U; else ;
  
#line 520 
  return autoneg;
}


#line 523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 ptys_get_supported_port(struct mlx4_ptys_reg *ptys_reg)
{
  u32 __retres;
  unsigned int tmp_0;
  
#line 525 
  if (0 != 0) 
#line 525 
              tmp_0 = (((ptys_reg->eth_proto_cap << 24) | ((ptys_reg->eth_proto_cap << 8) & 16711680U)) | ((ptys_reg->eth_proto_cap >> 8) & 65280U)) | (ptys_reg->eth_proto_cap >> 24); else 
                                                                    
#line 525 
                                                                    tmp_0 = __fswab32(ptys_reg->eth_proto_cap);
  
#line 525 
  u32 eth_proto = tmp_0;
  
#line 527 
  if ((eth_proto & 117440512U) != 0U) {
    
#line 530 
    __retres = 128U;
    
#line 530 
    goto return_label;
  }
  else ;
  
#line 533 
  if ((eth_proto & 307265U) != 0U) {
    
#line 539 
    __retres = 1024U;
    
#line 539 
    goto return_label;
  }
  else ;
  
#line 542 
  if ((eth_proto & 442U) != 0U) {
    
#line 548 
    __retres = 65536U;
    
#line 548 
    goto return_label;
  }
  else ;
  
#line 550 
  __retres = 0U;
  return_label: 
#line 550 
                return __retres;
}


#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 ptys_get_active_port(struct mlx4_ptys_reg *ptys_reg)
{
  u32 __retres;
  unsigned int tmp_0;
  
#line 555 
  if (0 != 0) 
#line 555 
              tmp_0 = (((ptys_reg->eth_proto_oper << 24) | ((ptys_reg->eth_proto_oper << 8) & 16711680U)) | ((ptys_reg->eth_proto_oper >> 8) & 65280U)) | (ptys_reg->eth_proto_oper >> 24); else 
                                                                    
#line 555 
                                                                    tmp_0 = __fswab32(ptys_reg->eth_proto_oper);
  
#line 555 
  u32 eth_proto = tmp_0;
  
#line 557 
  if (eth_proto == 0U) 
    
#line 558 
    if (0 != 0) 
#line 558 
                eth_proto = (((ptys_reg->eth_proto_cap << 24) | ((ptys_reg->eth_proto_cap << 8) & 16711680U)) | ((ptys_reg->eth_proto_cap >> 8) & 65280U)) | (ptys_reg->eth_proto_cap >> 24); else 
                                                                    
#line 558 
                                                                    eth_proto = __fswab32(ptys_reg->eth_proto_cap);
  else ;
  
#line 560 
  if ((eth_proto & 117440512U) != 0U) {
    
#line 563 
    __retres = 0U;
    
#line 563 
    goto return_label;
  }
  else ;
  
#line 566 
  if ((eth_proto & 303105U) != 0U) {
    
#line 570 
    __retres = 3U;
    
#line 570 
    goto return_label;
  }
  else ;
  
#line 573 
  if ((eth_proto & 135232U) != 0U) {
    
#line 576 
    __retres = 5U;
    
#line 576 
    goto return_label;
  }
  else ;
  
#line 579 
  if ((eth_proto & 442U) != 0U) {
    
#line 585 
    __retres = 239U;
    
#line 585 
    goto return_label;
  }
  else ;
  
#line 587 
  __retres = 255U;
  return_label: 
#line 587 
                return __retres;
}


#line 600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 ptys2ethtool_map[32U][3U] = {{131072U, 131072U, 1000U}, {131072U, 131072U, 1000U}, {262144U, 262144U, 10000U}, {262144U, 262144U, 10000U}, {524288U, 524288U, 10000U}, {6291456U, 6291456U, 20000U}, {16777216U, 16777216U, 40000U}, {8388608U, 8388608U, 40000U}, {134217728U, 134217728U, 56000U}, [12] = {524288U, 524288U, 10000U}, {524288U, 524288U, 10000U}, [15] = {33554432U, 33554432U, 40000U}, [17] = {268435456U, 268435456U, 56000U}, {536870912U, 536870912U, 56000U}, [24] = {8U, 8U, 100U}, {32U, 32U, 1000U}, {4096U, 4096U, 10000U}};

#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 ptys2ethtool_link_modes(u32 eth_proto, enum ethtool_report report)
{
  int i;
  
#line 696 
  u32 link_modes = 0U;
  
#line 698 
  i = 0;
  
#line 698 
  goto ldv_57427;
  ldv_57426: 
#line 699 
  ;
  
#line 699 
  if (((unsigned int)(1 << i) & eth_proto) != 0U) 
#line 700 
                                                  link_modes = ptys2ethtool_map[i][(unsigned int)report] | link_modes; else ;
  
#line 698 
  i += 1;
  ldv_57427: 
#line 699 
  ;
  
#line 698 
  if ((unsigned int)i <= 31U) 
#line 700 
                              goto ldv_57426; else 
#line 703 
                                                   goto ldv_57428;
  ldv_57428: 
#line 704 
  ;
  
#line 702 
  return link_modes;
}


#line 705  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 ethtool2ptys_link_modes(u32 link_modes, enum ethtool_report report)
{
  int i;
  
#line 708 
  u32 ptys_modes = 0U;
  
#line 710 
  i = 0;
  
#line 710 
  goto ldv_57436;
  ldv_57435: 
#line 711 
  ;
  
#line 711 
  if ((ptys2ethtool_map[i][(unsigned int)report] & link_modes) != 0U) 
    
#line 712 
    ptys_modes = (unsigned int)(1 << i) | ptys_modes; else ;
  
#line 710 
  i += 1;
  ldv_57436: 
#line 711 
  ;
  
#line 710 
  if ((unsigned int)i <= 31U) 
#line 712 
                              goto ldv_57435; else 
#line 715 
                                                   goto ldv_57437;
  ldv_57437: 
#line 716 
  ;
  
#line 714 
  return ptys_modes;
}


#line 718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 speed2ptys_link_modes(u32 speed)
{
  int i;
  
#line 721 
  u32 ptys_modes = 0U;
  
#line 723 
  i = 0;
  
#line 723 
  goto ldv_57444;
  ldv_57443: 
#line 724 
  ;
  
#line 724 
  if (ptys2ethtool_map[i][2] == speed) 
#line 725 
                                       ptys_modes = (unsigned int)(1 << i) | ptys_modes; else ;
  
#line 723 
  i += 1;
  ldv_57444: 
#line 724 
  ;
  
#line 723 
  if ((unsigned int)i <= 31U) 
#line 725 
                              goto ldv_57443; else 
#line 728 
                                                   goto ldv_57445;
  ldv_57445: 
#line 729 
  ;
  
#line 727 
  return ptys_modes;
}


#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int ethtool_get_ptys_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  struct mlx4_ptys_reg ptys_reg;
  u32 eth_proto;
  int ret;
  u32 tmp_8;
  u32 tmp_10;
  u32 tmp_12;
  int tmp_13;
  int tmp_14;
  u32 tmp_15;
  u32 tmp_16;
  
#line 733 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 738 
  memset((void *)(& ptys_reg),0,52UL);
  
#line 739 
  ptys_reg.local_port = (unsigned char)priv->port;
  
#line 740 
  ptys_reg.proto_mask = (unsigned char)4U;
  
#line 741 
  ret = mlx4_ACCESS_PTYS_REG((priv->mdev)->dev,(enum mlx4_access_reg_method)MLX4_ACCESS_REG_QUERY,& ptys_reg);
  
#line 743 
  if (ret != 0) {
    
#line 744 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to run mlx4_ACCESS_PTYS_REG status(%x)",ret);
    
#line 746 
    __retres = ret;
    
#line 746 
    goto return_label;
  }
  else ;
  
#line 748 
  if ((priv->msg_enable & 1U) != 0U) 
#line 748 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"ptys_reg.proto_mask       %x\n",(int)ptys_reg.proto_mask); else ;
  
#line 750 
  if ((priv->msg_enable & 1U) != 0U) {
    unsigned int tmp_1;
    
#line 750 
    if (0 != 0) 
#line 750 
                tmp_1 = (((ptys_reg.eth_proto_cap << 24) | ((ptys_reg.eth_proto_cap << 8) & 16711680U)) | ((ptys_reg.eth_proto_cap >> 8) & 65280U)) | (ptys_reg.eth_proto_cap >> 24); else 
                                                                    
#line 750 
                                                                    tmp_1 = __fswab32(ptys_reg.eth_proto_cap);
    
#line 750 
    ;
    
#line 750 
    en_print("\001",(struct mlx4_en_priv const *)priv,"ptys_reg.eth_proto_cap    %x\n",tmp_1);
  }
  else ;
  
#line 752 
  if ((priv->msg_enable & 1U) != 0U) {
    unsigned int tmp_3;
    
#line 752 
    if (0 != 0) 
#line 752 
                tmp_3 = (((ptys_reg.eth_proto_admin << 24) | ((ptys_reg.eth_proto_admin << 8) & 16711680U)) | ((ptys_reg.eth_proto_admin >> 8) & 65280U)) | (ptys_reg.eth_proto_admin >> 24); else 
                                                                    
#line 752 
                                                                    tmp_3 = __fswab32(ptys_reg.eth_proto_admin);
    
#line 752 
    ;
    
#line 752 
    en_print("\001",(struct mlx4_en_priv const *)priv,"ptys_reg.eth_proto_admin  %x\n",tmp_3);
  }
  else ;
  
#line 754 
  if ((priv->msg_enable & 1U) != 0U) {
    unsigned int tmp_5;
    
#line 754 
    if (0 != 0) 
#line 754 
                tmp_5 = (((ptys_reg.eth_proto_oper << 24) | ((ptys_reg.eth_proto_oper << 8) & 16711680U)) | ((ptys_reg.eth_proto_oper >> 8) & 65280U)) | (ptys_reg.eth_proto_oper >> 24); else 
                                                                    
#line 754 
                                                                    tmp_5 = __fswab32(ptys_reg.eth_proto_oper);
    
#line 754 
    ;
    
#line 754 
    en_print("\001",(struct mlx4_en_priv const *)priv,"ptys_reg.eth_proto_oper   %x\n",tmp_5);
  }
  else ;
  
#line 756 
  if ((priv->msg_enable & 1U) != 0U) {
    unsigned int tmp_7;
    
#line 756 
    if (0 != 0) 
#line 756 
                tmp_7 = (((ptys_reg.eth_proto_lp_adv << 24) | ((ptys_reg.eth_proto_lp_adv << 8) & 16711680U)) | ((ptys_reg.eth_proto_lp_adv >> 8) & 65280U)) | (ptys_reg.eth_proto_lp_adv >> 24); else 
                                                                    
#line 756 
                                                                    tmp_7 = __fswab32(ptys_reg.eth_proto_lp_adv);
    
#line 756 
    ;
    
#line 756 
    en_print("\001",(struct mlx4_en_priv const *)priv,"ptys_reg.eth_proto_lp_adv %x\n",tmp_7);
  }
  else ;
  
#line 759 
  cmd->supported = 0U;
  
#line 760 
  cmd->advertising = 0U;
  
#line 762 
  tmp_8 = ptys_get_supported_port(& ptys_reg);
  
#line 762 
  cmd->supported |= tmp_8;
  
#line 764 
  if (0 != 0) 
#line 764 
              eth_proto = (((ptys_reg.eth_proto_cap << 24) | ((ptys_reg.eth_proto_cap << 8) & 16711680U)) | ((ptys_reg.eth_proto_cap >> 8) & 65280U)) | (ptys_reg.eth_proto_cap >> 24); else 
                                                                    
#line 764 
                                                                    eth_proto = __fswab32(ptys_reg.eth_proto_cap);
  
#line 765 
  tmp_10 = ptys2ethtool_link_modes(eth_proto,(enum ethtool_report)SUPPORTED);
  
#line 765 
  cmd->supported |= tmp_10;
  
#line 767 
  if (0 != 0) 
#line 767 
              eth_proto = (((ptys_reg.eth_proto_admin << 24) | ((ptys_reg.eth_proto_admin << 8) & 16711680U)) | ((ptys_reg.eth_proto_admin >> 8) & 65280U)) | (ptys_reg.eth_proto_admin >> 24); else 
                                                                    
#line 767 
                                                                    eth_proto = __fswab32(ptys_reg.eth_proto_admin);
  
#line 768 
  tmp_12 = ptys2ethtool_link_modes(eth_proto,(enum ethtool_report)ADVERTISED);
  
#line 768 
  cmd->advertising |= tmp_12;
  
#line 770 
  cmd->supported |= 24576U;
  
#line 771 
  if ((unsigned int)(priv->prof)->tx_pause != 0U) 
#line 771 
                                                  tmp_13 = 8192; else 
                                                                   
#line 771 
                                                                   tmp_13 = 0;
  
#line 771 
  cmd->advertising |= (unsigned int)tmp_13;
  
#line 774 
  if ((int)(priv->prof)->tx_pause != (int)(priv->prof)->rx_pause) 
#line 774 
                                                                  tmp_14 = 16384; else 
                                                                    
#line 774 
                                                                    tmp_14 = 0;
  
#line 773 
  cmd->advertising |= (unsigned int)tmp_14;
  
#line 776 
  tmp_15 = ptys_get_active_port(& ptys_reg);
  
#line 776 
  cmd->port = (unsigned char)tmp_15;
  
#line 777 
  cmd->transceiver = (unsigned char)((unsigned int)((unsigned char)(cmd->supported >> 7)) & 1U);
  
#line 780 
  tmp_16 = mlx4_en_autoneg_get(dev);
  
#line 780 
  if (tmp_16 != 0U) {
    
#line 781 
    cmd->supported |= 64U;
    
#line 782 
    cmd->advertising |= 64U;
  }
  else ;
  
#line 785 
  cmd->autoneg = (unsigned char)((unsigned int)((unsigned char)priv->port_state.flags) & 1U);
  
#line 788 
  if (0 != 0) 
#line 788 
              eth_proto = (((ptys_reg.eth_proto_lp_adv << 24) | ((ptys_reg.eth_proto_lp_adv << 8) & 16711680U)) | ((ptys_reg.eth_proto_lp_adv >> 8) & 65280U)) | (ptys_reg.eth_proto_lp_adv >> 24); else 
                                                                    
#line 788 
                                                                    eth_proto = __fswab32(ptys_reg.eth_proto_lp_adv);
  
#line 789 
  cmd->lp_advertising = ptys2ethtool_link_modes(eth_proto,(enum ethtool_report)ADVERTISED);
  
#line 791 
  cmd->lp_advertising |= (unsigned int)((int)priv->port_state.flags << 6) & 64U;
  
#line 794 
  cmd->phy_address = (unsigned char)0U;
  
#line 795 
  cmd->mdio_support = (unsigned char)0U;
  
#line 796 
  cmd->maxtxpkt = 0U;
  
#line 797 
  cmd->maxrxpkt = 0U;
  
#line 798 
  cmd->eth_tp_mdix = (unsigned char)0U;
  
#line 799 
  cmd->eth_tp_mdix_ctrl = (unsigned char)3U;
  
#line 801 
  __retres = ret;
  return_label: 
#line 801 
                return __retres;
}


#line 804  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void ethtool_get_default_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int trans_type;
  
#line 807 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 810 
  cmd->autoneg = (unsigned char)0U;
  
#line 811 
  cmd->supported = 4096U;
  
#line 812 
  cmd->advertising = 4096U;
  
#line 813 
  trans_type = priv->port_state.transceiver;
  
#line 815 
  if ((unsigned int)trans_type + 4294967295U <= 11U) {
    
#line 816 
    cmd->port = (unsigned char)3U;
    
#line 817 
    cmd->transceiver = (unsigned char)1U;
    
#line 818 
    cmd->supported |= 1024U;
    
#line 819 
    cmd->advertising |= 1024U;
  }
  else 
    
#line 820 
    if (trans_type == 128 || trans_type == 0) {
      
#line 821 
      cmd->port = (unsigned char)0U;
      
#line 822 
      cmd->transceiver = (unsigned char)0U;
      
#line 823 
      cmd->supported |= 128U;
      
#line 824 
      cmd->advertising |= 128U;
    }
    else {
      
#line 826 
      cmd->port = (unsigned char)255U;
      
#line 827 
      cmd->transceiver = (unsigned char)255U;
    }
  
#line 829 
  return;
}


#line 831  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  int tmp_0;
  bool tmp_1;
  
#line 833 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 834 
  int ret = -22;
  
#line 836 
  tmp_0 = mlx4_en_QUERY_PORT(priv->mdev,(unsigned char)((int)((unsigned char)priv->port)));
  
#line 836 
  if (tmp_0 != 0) {
    
#line 837 
    __retres = -12;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  if ((priv->msg_enable & 1U) != 0U) 
#line 839 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"query port state.flags ANC(%x) ANE(%x)\n",priv->port_state.flags & 1U,priv->port_state.flags & 2U); else ;
  
#line 843 
  if ((((priv->mdev)->dev)->caps.flags2 & 16384ULL) != 0ULL) 
#line 844 
                                                             ret = ethtool_get_ptys_settings(dev,cmd); else ;
  
#line 845 
  if (ret != 0) 
#line 846 
                ethtool_get_default_settings(dev,cmd); else ;
  
#line 848 
  tmp_1 = netif_carrier_ok((struct net_device const *)dev);
  
#line 848 
  if ((int)tmp_1 != 0) {
    
#line 849 
    ethtool_cmd_speed_set(cmd,(unsigned int)priv->port_state.link_speed);
    
#line 850 
    cmd->duplex = (unsigned char)1U;
  }
  else {
    
#line 852 
    ethtool_cmd_speed_set(cmd,4294967295U);
    
#line 853 
    cmd->duplex = (unsigned char)255U;
  }
  
#line 855 
  __retres = 0;
  return_label: 
#line 855 
                return __retres;
}


#line 859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static __be32 speed_set_ptys_admin(struct mlx4_en_priv *priv, u32 speed, __be32 proto_cap)
{
  
#line 862 
  __be32 proto_admin = 0U;
  
#line 864 
  if (speed == 0U) {
    unsigned int tmp_0;
    
#line 865 
    proto_admin = proto_cap;
    
#line 866 
    if (0 != 0) 
#line 866 
                tmp_0 = (((proto_cap << 24) | ((proto_cap << 8) & 16711680U)) | ((proto_cap >> 8) & 65280U)) | (proto_cap >> 24); else 
                                                                    
#line 866 
                                                                    tmp_0 = __fswab32(proto_cap);
    
#line 866 
    ;
    
#line 866 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Speed was set to 0, Reset advertised Link Modes to default (%x)\n",tmp_0);
  }
  else {
    unsigned int tmp_3;
    
#line 869 
    u32 ptys_link_modes = speed2ptys_link_modes(speed);
    
#line 871 
    if (0 != 0) 
#line 871 
                tmp_3 = (((ptys_link_modes << 24) | ((ptys_link_modes << 8) & 16711680U)) | ((ptys_link_modes >> 8) & 65280U)) | (ptys_link_modes >> 24); else 
                                                                    
#line 871 
                                                                    tmp_3 = __fswab32(ptys_link_modes);
    
#line 871 
    proto_admin = tmp_3 & proto_cap;
    
#line 872 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Setting Speed to %d\n",speed);
  }
  
#line 874 
  return proto_admin;
}


#line 877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  struct mlx4_ptys_reg ptys_reg;
  __be32 proto_admin;
  int ret;
  __u32 tmp_1;
  
#line 879 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 884 
  u32 ptys_adv = ethtool2ptys_link_modes(cmd->advertising,(enum ethtool_report)ADVERTISED);
  
#line 885 
  tmp_1 = ethtool_cmd_speed((struct ethtool_cmd const *)cmd);
  
#line 885 
  int speed = (int)tmp_1;
  
#line 887 
  if ((priv->msg_enable & 1U) != 0U) 
#line 887 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Set Speed=%d adv=0x%x autoneg=%d duplex=%d\n",speed,cmd->advertising,(int)cmd->autoneg,(int)cmd->duplex); else ;
  
#line 890 
  if ((((priv->mdev)->dev)->caps.flags2 & 16384ULL) == 0ULL || (unsigned int)cmd->duplex == 0U) {
    
#line 892 
    __retres = -22;
    
#line 892 
    goto return_label;
  }
  else ;
  
#line 894 
  memset((void *)(& ptys_reg),0,52UL);
  
#line 895 
  ptys_reg.local_port = (unsigned char)priv->port;
  
#line 896 
  ptys_reg.proto_mask = (unsigned char)4U;
  
#line 897 
  ret = mlx4_ACCESS_PTYS_REG((priv->mdev)->dev,(enum mlx4_access_reg_method)MLX4_ACCESS_REG_QUERY,& ptys_reg);
  
#line 899 
  if (ret != 0) {
    
#line 900 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to QUERY mlx4_ACCESS_PTYS_REG status(%x)\n",ret);
    
#line 902 
    __retres = 0;
    
#line 902 
    goto return_label;
  }
  else ;
  
#line 905 
  if ((unsigned int)cmd->autoneg == 1U) {
    unsigned int tmp_3;
    
#line 905 
    if (0 != 0) 
#line 905 
                tmp_3 = (((ptys_adv << 24) | ((ptys_adv << 8) & 16711680U)) | ((ptys_adv >> 8) & 65280U)) | (ptys_adv >> 24); else 
                                                                    
#line 906 
                                                                    tmp_3 = __fswab32(ptys_adv);
    
#line 905 
    proto_admin = tmp_3;
  }
  else 
#line 907 
       proto_admin = speed_set_ptys_admin(priv,(unsigned int)speed,ptys_reg.eth_proto_cap);
  
#line 910 
  proto_admin = ptys_reg.eth_proto_cap & proto_admin;
  
#line 911 
  if (proto_admin == 0U) {
    
#line 912 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Not supported link mode(s) requested, check supported link modes.\n");
    
#line 913 
    __retres = -22;
    
#line 913 
    goto return_label;
  }
  else ;
  
#line 916 
  if (ptys_reg.eth_proto_admin == proto_admin) {
    
#line 917 
    __retres = 0;
    
#line 917 
    goto return_label;
  }
  else ;
  
#line 919 
  if ((priv->msg_enable & 1U) != 0U) {
    unsigned int tmp_6;
    
#line 919 
    if (0 != 0) 
#line 919 
                tmp_6 = (((proto_admin << 24) | ((proto_admin << 8) & 16711680U)) | ((proto_admin >> 8) & 65280U)) | (proto_admin >> 24); else 
                                                                    
#line 919 
                                                                    tmp_6 = __fswab32(proto_admin);
    
#line 919 
    ;
    
#line 919 
    en_print("\001",(struct mlx4_en_priv const *)priv,"mlx4_ACCESS_PTYS_REG SET: ptys_reg.eth_proto_admin = 0x%x\n",tmp_6);
  }
  else ;
  
#line 922 
  ptys_reg.eth_proto_admin = proto_admin;
  
#line 923 
  ret = mlx4_ACCESS_PTYS_REG((priv->mdev)->dev,(enum mlx4_access_reg_method)MLX4_ACCESS_REG_WRITE,& ptys_reg);
  
#line 925 
  if (ret != 0) {
    unsigned int tmp_8;
    
#line 926 
    ;
    
#line 926 
    if (0 != 0) 
#line 926 
                tmp_8 = (((ptys_reg.eth_proto_admin << 24) | ((ptys_reg.eth_proto_admin << 8) & 16711680U)) | ((ptys_reg.eth_proto_admin >> 8) & 65280U)) | (ptys_reg.eth_proto_admin >> 24); else 
                                                                    
#line 926 
                                                                    tmp_8 = __fswab32(ptys_reg.eth_proto_admin);
    
#line 926 
    ;
    
#line 926 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to write mlx4_ACCESS_PTYS_REG eth_proto_admin(0x%x) status(0x%x)",tmp_8,ret);
    
#line 928 
    __retres = ret;
    
#line 928 
    goto return_label;
  }
  else ;
  
#line 931 
  ldv_mutex_lock_85(& (priv->mdev)->state_lock);
  
#line 932 
  if ((int)priv->port_up != 0) {
    int tmp_9;
    
#line 933 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Port link mode changed, restarting port...\n");
    
#line 934 
    mlx4_en_stop_port(dev,1);
    
#line 935 
    tmp_9 = mlx4_en_start_port(dev);
    
#line 935 
    if (tmp_9 != 0) 
#line 936 
                    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed restarting port %d\n",priv->port); else ;
  }
  else ;
  
#line 938 
  ldv_mutex_unlock_86(& (priv->mdev)->state_lock);
  
#line 939 
  __retres = 0;
  return_label: 
#line 939 
                return __retres;
}


#line 942  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_coalesce(struct net_device *dev, struct ethtool_coalesce *coal)
{
  int __retres;
  
#line 945 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 947 
  coal->tx_coalesce_usecs = (unsigned int)priv->tx_usecs;
  
#line 948 
  coal->tx_max_coalesced_frames = (unsigned int)priv->tx_frames;
  
#line 949 
  coal->tx_max_coalesced_frames_irq = priv->tx_work_limit;
  
#line 951 
  coal->rx_coalesce_usecs = (unsigned int)priv->rx_usecs;
  
#line 952 
  coal->rx_max_coalesced_frames = (unsigned int)priv->rx_frames;
  
#line 954 
  coal->pkt_rate_low = priv->pkt_rate_low;
  
#line 955 
  coal->rx_coalesce_usecs_low = (unsigned int)priv->rx_usecs_low;
  
#line 956 
  coal->pkt_rate_high = priv->pkt_rate_high;
  
#line 957 
  coal->rx_coalesce_usecs_high = (unsigned int)priv->rx_usecs_high;
  
#line 958 
  coal->rate_sample_interval = (unsigned int)priv->sample_interval;
  
#line 959 
  coal->use_adaptive_rx_coalesce = (unsigned int)priv->adaptive_rx_coal;
  
#line 961 
  __retres = 0;
  
#line 961 
  return __retres;
}


#line 964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_coalesce(struct net_device *dev, struct ethtool_coalesce *coal)
{
  int __retres;
  int tmp_0;
  
#line 967 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 969 
  if (coal->tx_max_coalesced_frames_irq == 0U) {
    
#line 970 
    __retres = -22;
    
#line 970 
    goto return_label;
  }
  else ;
  
#line 972 
  if (coal->rx_max_coalesced_frames != 65535U) 
#line 972 
                                               priv->rx_frames = (unsigned short)coal->rx_max_coalesced_frames; else 
                                                                    
#line 972 
                                                                    priv->rx_frames = (unsigned short)44U;
  
#line 976 
  if (coal->rx_coalesce_usecs != 65535U) 
#line 976 
                                         priv->rx_usecs = (unsigned short)coal->rx_coalesce_usecs; else 
                                                                    
#line 976 
                                                                    priv->rx_usecs = (unsigned short)16U;
  
#line 982 
  if (coal->tx_coalesce_usecs != (unsigned int)priv->tx_usecs || coal->tx_max_coalesced_frames != (unsigned int)priv->tx_frames) {
    
#line 984 
    priv->tx_usecs = (unsigned short)coal->tx_coalesce_usecs;
    
#line 985 
    priv->tx_frames = (unsigned short)coal->tx_max_coalesced_frames;
  }
  else ;
  
#line 989 
  priv->pkt_rate_low = coal->pkt_rate_low;
  
#line 990 
  priv->rx_usecs_low = (unsigned short)coal->rx_coalesce_usecs_low;
  
#line 991 
  priv->pkt_rate_high = coal->pkt_rate_high;
  
#line 992 
  priv->rx_usecs_high = (unsigned short)coal->rx_coalesce_usecs_high;
  
#line 993 
  priv->sample_interval = (unsigned short)coal->rate_sample_interval;
  
#line 994 
  priv->adaptive_rx_coal = (unsigned short)coal->use_adaptive_rx_coalesce;
  
#line 995 
  priv->tx_work_limit = coal->tx_max_coalesced_frames_irq;
  
#line 997 
  tmp_0 = mlx4_en_moderation_update(priv);
  
#line 997 
  __retres = tmp_0;
  return_label: 
#line 997 
                return __retres;
}


#line 1000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_pauseparam(struct net_device *dev, struct ethtool_pauseparam *pause)
{
  int __retres;
  int err;
  
#line 1003 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1004 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1007 
  if (pause->autoneg != 0U) {
    
#line 1008 
    __retres = -22;
    
#line 1008 
    goto return_label;
  }
  else ;
  
#line 1010 
  (priv->prof)->tx_pause = (unsigned char)(pause->tx_pause != 0U);
  
#line 1011 
  (priv->prof)->rx_pause = (unsigned char)(pause->rx_pause != 0U);
  
#line 1012 
  err = mlx4_SET_PORT_general(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(int)(priv->rx_skb_size + 4U),(unsigned char)((int)(priv->prof)->tx_pause),(unsigned char)((int)(priv->prof)->tx_ppp),(unsigned char)((int)(priv->prof)->rx_pause),(unsigned char)((int)(priv->prof)->rx_ppp));
  
#line 1018 
  if (err != 0) 
#line 1019 
                en_print("\001",(struct mlx4_en_priv const *)priv,"Failed setting pause params\n"); else 
                                                                    
#line 1021 
                                                                    mlx4_en_update_pfc_stats_bitmap(mdev->dev,& priv->stats_bitmap,(unsigned char)((int)(priv->prof)->rx_ppp),(unsigned char)((int)(priv->prof)->rx_pause),(unsigned char)((int)(priv->prof)->tx_ppp),(unsigned char)((int)(priv->prof)->tx_pause));
  
#line 1027 
  __retres = err;
  return_label: 
#line 1027 
                return __retres;
}


#line 1030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void mlx4_en_get_pauseparam(struct net_device *dev, struct ethtool_pauseparam *pause)
{
  
#line 1033 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1035 
  pause->tx_pause = (unsigned int)(priv->prof)->tx_pause;
  
#line 1036 
  pause->rx_pause = (unsigned int)(priv->prof)->rx_pause;
  
#line 1037 
  return;
}


#line 1039  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_ringparam(struct net_device *dev, struct ethtool_ringparam *param)
{
  int __retres;
  u32 rx_size;
  u32 tx_size;
  u32 tmp_71;
  u32 tmp_73;
  u32 tmp_145;
  u32 tmp_147;
  u32 tmp_148;
  
#line 1042 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1043 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1045 
  int port_up = 0;
  
#line 1046 
  int err = 0;
  
#line 1048 
  if (param->rx_jumbo_pending != 0U || param->rx_mini_pending != 0U) {
    
#line 1049 
    __retres = -22;
    
#line 1049 
    goto return_label;
  }
  else ;
  
#line 1051 
  if (0 != 0) {
    unsigned int tmp_68;
    
#line 1051 
    if (param->rx_pending != 1U) {
      unsigned int tmp_67;
      
#line 1051 
      if (0 != 0) {
        unsigned int tmp_65;
        
#line 1051 
        if (param->rx_pending == 1U) {
          int tmp_0;
          
#line 1051 
          tmp_0 = ____ilog2_NaN();
          
#line 1051 
          tmp_65 = (unsigned int)(1UL << (tmp_0 + 1));
        }
        else {
          unsigned int tmp_64;
          
#line 1051 
          if (((unsigned long long)(param->rx_pending + 4294967295U) & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_63;
            
#line 1051 
            if (((unsigned long long)(param->rx_pending + 4294967295U) & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_62;
              
#line 1051 
              if (((unsigned long long)(param->rx_pending + 4294967295U) & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_61;
                
#line 1051 
                if (((unsigned long long)(param->rx_pending + 4294967295U) & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_60;
                  
#line 1051 
                  if (((unsigned long long)(param->rx_pending + 4294967295U) & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_59;
                    
#line 1051 
                    if (((unsigned long long)(param->rx_pending + 4294967295U) & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_58;
                      
#line 1051 
                      if (((unsigned long long)(param->rx_pending + 4294967295U) & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_57;
                        
#line 1051 
                        if (((unsigned long long)(param->rx_pending + 4294967295U) & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_56;
                          
#line 1051 
                          if (((unsigned long long)(param->rx_pending + 4294967295U) & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_55;
                            
#line 1051 
                            if (((unsigned long long)(param->rx_pending + 4294967295U) & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_54;
                              
#line 1051 
                              if (((unsigned long long)(param->rx_pending + 4294967295U) & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_53;
                                
#line 1051 
                                if (((unsigned long long)(param->rx_pending + 4294967295U) & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_52;
                                  
#line 1051 
                                  if (((unsigned long long)(param->rx_pending + 4294967295U) & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_51;
                                    
#line 1051 
                                    if (((unsigned long long)(param->rx_pending + 4294967295U) & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_50;
                                      
#line 1051 
                                      if (((unsigned long long)(param->rx_pending + 4294967295U) & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_49;
                                        
#line 1051 
                                        if (((unsigned long long)(param->rx_pending + 4294967295U) & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_48;
                                          
#line 1051 
                                          if (((unsigned long long)(param->rx_pending + 4294967295U) & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_47;
                                            
#line 1051 
                                            if (((unsigned long long)(param->rx_pending + 4294967295U) & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_46;
                                              
#line 1051 
                                              if (((unsigned long long)(param->rx_pending + 4294967295U) & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_45;
                                                
#line 1051 
                                                if (((unsigned long long)(param->rx_pending + 4294967295U) & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_44;
                                                  
#line 1051 
                                                  if (((unsigned long long)(param->rx_pending + 4294967295U) & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_43;
                                                    
#line 1051 
                                                    if (((unsigned long long)(param->rx_pending + 4294967295U) & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_42;
                                                      
#line 1051 
                                                      if (((unsigned long long)(param->rx_pending + 4294967295U) & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_41;
                                                        
#line 1051 
                                                        if (((unsigned long long)(param->rx_pending + 4294967295U) & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_40;
                                                          
#line 1051 
                                                          if (((unsigned long long)(param->rx_pending + 4294967295U) & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_39;
                                                            
#line 1051 
                                                            if (((unsigned long long)(param->rx_pending + 4294967295U) & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_38;
                                                              
#line 1051 
                                                              if (((unsigned long long)(param->rx_pending + 4294967295U) & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_37;
                                                                
#line 1051 
                                                                if (((unsigned long long)(param->rx_pending + 4294967295U) & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_36;
                                                                  
#line 1051 
                                                                  if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_35;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 1051 
                                                                    if (
                                                                    param->rx_pending + 4294967295U >= (__u32)0) {
                                                                    unsigned int tmp_32;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_31;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_30;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_29;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_28;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_27;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_26;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_25;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_24;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_23;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_22;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_21;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_20;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_19;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_18;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_17;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_16;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_15;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_14;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_13;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_12;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_11;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_10;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_9;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_8;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_7;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_6;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_5;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_4;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_3;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_2;
                                                                    
#line 1051 
                                                                    if (
                                                                    ((unsigned long long)(param->rx_pending + 4294967295U) & 1ULL) == 0ULL) {
                                                                    int tmp_1;
                                                                    
#line 1051 
                                                                    tmp_1 = ____ilog2_NaN();
                                                                    
#line 1051 
                                                                    tmp_2 = (unsigned int)(1UL << (tmp_1 + 1));
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_2 = 2U;
                                                                    
#line 1051 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_3 = 4U;
                                                                    
#line 1051 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_4 = 8U;
                                                                    
#line 1051 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_5 = 16U;
                                                                    
#line 1051 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_6 = 32U;
                                                                    
#line 1051 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_7 = 64U;
                                                                    
#line 1051 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_8 = 128U;
                                                                    
#line 1051 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_9 = 256U;
                                                                    
#line 1051 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_10 = 512U;
                                                                    
#line 1051 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_11 = 1024U;
                                                                    
#line 1051 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_12 = 2048U;
                                                                    
#line 1051 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_13 = 4096U;
                                                                    
#line 1051 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_14 = 8192U;
                                                                    
#line 1051 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_15 = 16384U;
                                                                    
#line 1051 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_16 = 32768U;
                                                                    
#line 1051 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_17 = 65536U;
                                                                    
#line 1051 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_18 = 131072U;
                                                                    
#line 1051 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_19 = 262144U;
                                                                    
#line 1051 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_20 = 524288U;
                                                                    
#line 1051 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_21 = 1048576U;
                                                                    
#line 1051 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_22 = 2097152U;
                                                                    
#line 1051 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_23 = 4194304U;
                                                                    
#line 1051 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_24 = 8388608U;
                                                                    
#line 1051 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_25 = 16777216U;
                                                                    
#line 1051 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_26 = 33554432U;
                                                                    
#line 1051 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_27 = 67108864U;
                                                                    
#line 1051 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_28 = 134217728U;
                                                                    
#line 1051 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_29 = 268435456U;
                                                                    
#line 1051 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_30 = 536870912U;
                                                                    
#line 1051 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_31 = 1073741824U;
                                                                    
#line 1051 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_32 = 2147483648U;
                                                                    
#line 1051 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_33 = 0U;
                                                                    
#line 1051 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_34 = 0U;
                                                                    
#line 1051 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 1051 
                                                                    tmp_35 = 0U;
                                                                    
#line 1051 
                                                                    tmp_36 = tmp_35;
                                                                  }
                                                                  else 
                                                                    
#line 1051 
                                                                    tmp_36 = 0U;
                                                                  
#line 1051 
                                                                  tmp_37 = tmp_36;
                                                                }
                                                                else 
                                                                  
#line 1051 
                                                                  tmp_37 = 0U;
                                                                
#line 1051 
                                                                tmp_38 = tmp_37;
                                                              }
                                                              else 
#line 1051 
                                                                   tmp_38 = 0U;
                                                              
#line 1051 
                                                              tmp_39 = tmp_38;
                                                            }
                                                            else 
#line 1051 
                                                                 tmp_39 = 0U;
                                                            
#line 1051 
                                                            tmp_40 = tmp_39;
                                                          }
                                                          else 
#line 1051 
                                                               tmp_40 = 0U;
                                                          
#line 1051 
                                                          tmp_41 = tmp_40;
                                                        }
                                                        else 
#line 1051 
                                                             tmp_41 = 0U;
                                                        
#line 1051 
                                                        tmp_42 = tmp_41;
                                                      }
                                                      else 
#line 1051 
                                                           tmp_42 = 0U;
                                                      
#line 1051 
                                                      tmp_43 = tmp_42;
                                                    }
                                                    else 
#line 1051 
                                                         tmp_43 = 0U;
                                                    
#line 1051 
                                                    tmp_44 = tmp_43;
                                                  }
                                                  else 
#line 1051 
                                                       tmp_44 = 0U;
                                                  
#line 1051 
                                                  tmp_45 = tmp_44;
                                                }
                                                else 
#line 1051 
                                                     tmp_45 = 0U;
                                                
#line 1051 
                                                tmp_46 = tmp_45;
                                              }
                                              else 
#line 1051 
                                                   tmp_46 = 0U;
                                              
#line 1051 
                                              tmp_47 = tmp_46;
                                            }
                                            else 
#line 1051 
                                                 tmp_47 = 0U;
                                            
#line 1051 
                                            tmp_48 = tmp_47;
                                          }
                                          else 
#line 1051 
                                               tmp_48 = 0U;
                                          
#line 1051 
                                          tmp_49 = tmp_48;
                                        }
                                        else 
#line 1051 
                                             tmp_49 = 0U;
                                        
#line 1051 
                                        tmp_50 = tmp_49;
                                      }
                                      else 
#line 1051 
                                           tmp_50 = 0U;
                                      
#line 1051 
                                      tmp_51 = tmp_50;
                                    }
                                    else 
#line 1051 
                                         tmp_51 = 0U;
                                    
#line 1051 
                                    tmp_52 = tmp_51;
                                  }
                                  else 
#line 1051 
                                       tmp_52 = 0U;
                                  
#line 1051 
                                  tmp_53 = tmp_52;
                                }
                                else 
#line 1051 
                                     tmp_53 = 0U;
                                
#line 1051 
                                tmp_54 = tmp_53;
                              }
                              else 
#line 1051 
                                   tmp_54 = 0U;
                              
#line 1051 
                              tmp_55 = tmp_54;
                            }
                            else 
#line 1051 
                                 tmp_55 = 0U;
                            
#line 1051 
                            tmp_56 = tmp_55;
                          }
                          else 
#line 1051 
                               tmp_56 = 0U;
                          
#line 1051 
                          tmp_57 = tmp_56;
                        }
                        else 
#line 1051 
                             tmp_57 = 0U;
                        
#line 1051 
                        tmp_58 = tmp_57;
                      }
                      else 
#line 1051 
                           tmp_58 = 0U;
                      
#line 1051 
                      tmp_59 = tmp_58;
                    }
                    else 
#line 1051 
                         tmp_59 = 0U;
                    
#line 1051 
                    tmp_60 = tmp_59;
                  }
                  else 
#line 1051 
                       tmp_60 = 0U;
                  
#line 1051 
                  tmp_61 = tmp_60;
                }
                else 
#line 1051 
                     tmp_61 = 0U;
                
#line 1051 
                tmp_62 = tmp_61;
              }
              else 
#line 1051 
                   tmp_62 = 0U;
              
#line 1051 
              tmp_63 = tmp_62;
            }
            else 
#line 1051 
                 tmp_63 = 0U;
            
#line 1051 
            tmp_64 = tmp_63;
          }
          else 
#line 1051 
               tmp_64 = 0U;
          
#line 1051 
          tmp_65 = tmp_64;
        }
        
#line 1051 
        tmp_67 = tmp_65;
      }
      else {
        int tmp_66;
        
#line 1051 
        tmp_66 = __ilog2_u32(param->rx_pending + 4294967295U);
        
#line 1051 
        tmp_67 = (unsigned int)(1UL << (tmp_66 + 1));
      }
      
#line 1051 
      tmp_68 = tmp_67;
    }
    else 
#line 1051 
         tmp_68 = 1U;
    
#line 1051 
    rx_size = tmp_68;
  }
  else {
    unsigned long tmp_69;
    
#line 1051 
    tmp_69 = __roundup_pow_of_two((unsigned long)param->rx_pending);
    
#line 1051 
    rx_size = (unsigned int)tmp_69;
  }
  {
    u32 tmp_70;
    
#line 1052 
    u32 __max1 = rx_size;
    
#line 1052 
    u32 __max2 = 256U;
    
#line 1052 
    if (__max1 > __max2) 
#line 1052 
                         tmp_70 = __max1; else 
#line 1052 
                                               tmp_70 = __max2;
    
#line 1052 
    tmp_71 = tmp_70;
  }
  
#line 1052 
  rx_size = tmp_71;
  {
    u32 tmp_72;
    
#line 1053 
    u32 __min1 = rx_size;
    
#line 1053 
    u32 __min2 = 8192U;
    
#line 1053 
    if (__min1 < __min2) 
#line 1053 
                         tmp_72 = __min1; else 
#line 1053 
                                               tmp_72 = __min2;
    
#line 1053 
    tmp_73 = tmp_72;
  }
  
#line 1053 
  rx_size = tmp_73;
  
#line 1054 
  if (0 != 0) {
    unsigned int tmp_142;
    
#line 1054 
    if (param->tx_pending != 1U) {
      unsigned int tmp_141;
      
#line 1054 
      if (0 != 0) {
        unsigned int tmp_139;
        
#line 1054 
        if (param->tx_pending == 1U) {
          int tmp_74;
          
#line 1054 
          tmp_74 = ____ilog2_NaN();
          
#line 1054 
          tmp_139 = (unsigned int)(1UL << (tmp_74 + 1));
        }
        else {
          unsigned int tmp_138;
          
#line 1054 
          if (((unsigned long long)(param->tx_pending + 4294967295U) & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_137;
            
#line 1054 
            if (((unsigned long long)(param->tx_pending + 4294967295U) & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_136;
              
#line 1054 
              if (((unsigned long long)(param->tx_pending + 4294967295U) & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_135;
                
#line 1054 
                if (((unsigned long long)(param->tx_pending + 4294967295U) & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_134;
                  
#line 1054 
                  if (((unsigned long long)(param->tx_pending + 4294967295U) & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_133;
                    
#line 1054 
                    if (((unsigned long long)(param->tx_pending + 4294967295U) & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_132;
                      
#line 1054 
                      if (((unsigned long long)(param->tx_pending + 4294967295U) & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_131;
                        
#line 1054 
                        if (((unsigned long long)(param->tx_pending + 4294967295U) & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_130;
                          
#line 1054 
                          if (((unsigned long long)(param->tx_pending + 4294967295U) & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_129;
                            
#line 1054 
                            if (((unsigned long long)(param->tx_pending + 4294967295U) & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_128;
                              
#line 1054 
                              if (((unsigned long long)(param->tx_pending + 4294967295U) & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_127;
                                
#line 1054 
                                if (((unsigned long long)(param->tx_pending + 4294967295U) & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_126;
                                  
#line 1054 
                                  if (((unsigned long long)(param->tx_pending + 4294967295U) & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_125;
                                    
#line 1054 
                                    if (((unsigned long long)(param->tx_pending + 4294967295U) & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_124;
                                      
#line 1054 
                                      if (((unsigned long long)(param->tx_pending + 4294967295U) & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_123;
                                        
#line 1054 
                                        if (((unsigned long long)(param->tx_pending + 4294967295U) & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_122;
                                          
#line 1054 
                                          if (((unsigned long long)(param->tx_pending + 4294967295U) & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_121;
                                            
#line 1054 
                                            if (((unsigned long long)(param->tx_pending + 4294967295U) & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_120;
                                              
#line 1054 
                                              if (((unsigned long long)(param->tx_pending + 4294967295U) & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_119;
                                                
#line 1054 
                                                if (((unsigned long long)(param->tx_pending + 4294967295U) & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_118;
                                                  
#line 1054 
                                                  if (((unsigned long long)(param->tx_pending + 4294967295U) & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_117;
                                                    
#line 1054 
                                                    if (((unsigned long long)(param->tx_pending + 4294967295U) & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_116;
                                                      
#line 1054 
                                                      if (((unsigned long long)(param->tx_pending + 4294967295U) & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_115;
                                                        
#line 1054 
                                                        if (((unsigned long long)(param->tx_pending + 4294967295U) & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_114;
                                                          
#line 1054 
                                                          if (((unsigned long long)(param->tx_pending + 4294967295U) & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_113;
                                                            
#line 1054 
                                                            if (((unsigned long long)(param->tx_pending + 4294967295U) & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_112;
                                                              
#line 1054 
                                                              if (((unsigned long long)(param->tx_pending + 4294967295U) & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_111;
                                                                
#line 1054 
                                                                if (((unsigned long long)(param->tx_pending + 4294967295U) & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_110;
                                                                  
#line 1054 
                                                                  if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_109;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_108;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_107;
                                                                    
#line 1054 
                                                                    if (
                                                                    param->tx_pending + 4294967295U >= (__u32)0) {
                                                                    unsigned int tmp_106;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_105;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_104;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_103;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_102;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_101;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_100;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_99;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_98;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_97;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_96;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_95;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_94;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_93;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_92;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_91;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_90;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_89;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_88;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_87;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_86;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_85;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_84;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_83;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_82;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_81;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_80;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_79;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_78;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_77;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_76;
                                                                    
#line 1054 
                                                                    if (
                                                                    ((unsigned long long)(param->tx_pending + 4294967295U) & 1ULL) == 0ULL) {
                                                                    int tmp_75;
                                                                    
#line 1054 
                                                                    tmp_75 = ____ilog2_NaN();
                                                                    
#line 1054 
                                                                    tmp_76 = (unsigned int)(1UL << (tmp_75 + 1));
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_76 = 2U;
                                                                    
#line 1054 
                                                                    tmp_77 = tmp_76;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_77 = 4U;
                                                                    
#line 1054 
                                                                    tmp_78 = tmp_77;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_78 = 8U;
                                                                    
#line 1054 
                                                                    tmp_79 = tmp_78;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_79 = 16U;
                                                                    
#line 1054 
                                                                    tmp_80 = tmp_79;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_80 = 32U;
                                                                    
#line 1054 
                                                                    tmp_81 = tmp_80;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_81 = 64U;
                                                                    
#line 1054 
                                                                    tmp_82 = tmp_81;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_82 = 128U;
                                                                    
#line 1054 
                                                                    tmp_83 = tmp_82;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_83 = 256U;
                                                                    
#line 1054 
                                                                    tmp_84 = tmp_83;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_84 = 512U;
                                                                    
#line 1054 
                                                                    tmp_85 = tmp_84;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_85 = 1024U;
                                                                    
#line 1054 
                                                                    tmp_86 = tmp_85;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_86 = 2048U;
                                                                    
#line 1054 
                                                                    tmp_87 = tmp_86;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_87 = 4096U;
                                                                    
#line 1054 
                                                                    tmp_88 = tmp_87;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_88 = 8192U;
                                                                    
#line 1054 
                                                                    tmp_89 = tmp_88;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_89 = 16384U;
                                                                    
#line 1054 
                                                                    tmp_90 = tmp_89;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_90 = 32768U;
                                                                    
#line 1054 
                                                                    tmp_91 = tmp_90;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_91 = 65536U;
                                                                    
#line 1054 
                                                                    tmp_92 = tmp_91;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_92 = 131072U;
                                                                    
#line 1054 
                                                                    tmp_93 = tmp_92;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_93 = 262144U;
                                                                    
#line 1054 
                                                                    tmp_94 = tmp_93;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_94 = 524288U;
                                                                    
#line 1054 
                                                                    tmp_95 = tmp_94;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_95 = 1048576U;
                                                                    
#line 1054 
                                                                    tmp_96 = tmp_95;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_96 = 2097152U;
                                                                    
#line 1054 
                                                                    tmp_97 = tmp_96;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_97 = 4194304U;
                                                                    
#line 1054 
                                                                    tmp_98 = tmp_97;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_98 = 8388608U;
                                                                    
#line 1054 
                                                                    tmp_99 = tmp_98;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_99 = 16777216U;
                                                                    
#line 1054 
                                                                    tmp_100 = tmp_99;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_100 = 33554432U;
                                                                    
#line 1054 
                                                                    tmp_101 = tmp_100;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_101 = 67108864U;
                                                                    
#line 1054 
                                                                    tmp_102 = tmp_101;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_102 = 134217728U;
                                                                    
#line 1054 
                                                                    tmp_103 = tmp_102;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_103 = 268435456U;
                                                                    
#line 1054 
                                                                    tmp_104 = tmp_103;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_104 = 536870912U;
                                                                    
#line 1054 
                                                                    tmp_105 = tmp_104;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_105 = 1073741824U;
                                                                    
#line 1054 
                                                                    tmp_106 = tmp_105;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_106 = 2147483648U;
                                                                    
#line 1054 
                                                                    tmp_107 = tmp_106;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_107 = 0U;
                                                                    
#line 1054 
                                                                    tmp_108 = tmp_107;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_108 = 0U;
                                                                    
#line 1054 
                                                                    tmp_109 = tmp_108;
                                                                    }
                                                                    else 
                                                                    
#line 1054 
                                                                    tmp_109 = 0U;
                                                                    
#line 1054 
                                                                    tmp_110 = tmp_109;
                                                                  }
                                                                  else 
                                                                    
#line 1054 
                                                                    tmp_110 = 0U;
                                                                  
#line 1054 
                                                                  tmp_111 = tmp_110;
                                                                }
                                                                else 
                                                                  
#line 1054 
                                                                  tmp_111 = 0U;
                                                                
#line 1054 
                                                                tmp_112 = tmp_111;
                                                              }
                                                              else 
#line 1054 
                                                                   tmp_112 = 0U;
                                                              
#line 1054 
                                                              tmp_113 = tmp_112;
                                                            }
                                                            else 
#line 1054 
                                                                 tmp_113 = 0U;
                                                            
#line 1054 
                                                            tmp_114 = tmp_113;
                                                          }
                                                          else 
#line 1054 
                                                               tmp_114 = 0U;
                                                          
#line 1054 
                                                          tmp_115 = tmp_114;
                                                        }
                                                        else 
#line 1054 
                                                             tmp_115 = 0U;
                                                        
#line 1054 
                                                        tmp_116 = tmp_115;
                                                      }
                                                      else 
#line 1054 
                                                           tmp_116 = 0U;
                                                      
#line 1054 
                                                      tmp_117 = tmp_116;
                                                    }
                                                    else 
#line 1054 
                                                         tmp_117 = 0U;
                                                    
#line 1054 
                                                    tmp_118 = tmp_117;
                                                  }
                                                  else 
#line 1054 
                                                       tmp_118 = 0U;
                                                  
#line 1054 
                                                  tmp_119 = tmp_118;
                                                }
                                                else 
#line 1054 
                                                     tmp_119 = 0U;
                                                
#line 1054 
                                                tmp_120 = tmp_119;
                                              }
                                              else 
#line 1054 
                                                   tmp_120 = 0U;
                                              
#line 1054 
                                              tmp_121 = tmp_120;
                                            }
                                            else 
#line 1054 
                                                 tmp_121 = 0U;
                                            
#line 1054 
                                            tmp_122 = tmp_121;
                                          }
                                          else 
#line 1054 
                                               tmp_122 = 0U;
                                          
#line 1054 
                                          tmp_123 = tmp_122;
                                        }
                                        else 
#line 1054 
                                             tmp_123 = 0U;
                                        
#line 1054 
                                        tmp_124 = tmp_123;
                                      }
                                      else 
#line 1054 
                                           tmp_124 = 0U;
                                      
#line 1054 
                                      tmp_125 = tmp_124;
                                    }
                                    else 
#line 1054 
                                         tmp_125 = 0U;
                                    
#line 1054 
                                    tmp_126 = tmp_125;
                                  }
                                  else 
#line 1054 
                                       tmp_126 = 0U;
                                  
#line 1054 
                                  tmp_127 = tmp_126;
                                }
                                else 
#line 1054 
                                     tmp_127 = 0U;
                                
#line 1054 
                                tmp_128 = tmp_127;
                              }
                              else 
#line 1054 
                                   tmp_128 = 0U;
                              
#line 1054 
                              tmp_129 = tmp_128;
                            }
                            else 
#line 1054 
                                 tmp_129 = 0U;
                            
#line 1054 
                            tmp_130 = tmp_129;
                          }
                          else 
#line 1054 
                               tmp_130 = 0U;
                          
#line 1054 
                          tmp_131 = tmp_130;
                        }
                        else 
#line 1054 
                             tmp_131 = 0U;
                        
#line 1054 
                        tmp_132 = tmp_131;
                      }
                      else 
#line 1054 
                           tmp_132 = 0U;
                      
#line 1054 
                      tmp_133 = tmp_132;
                    }
                    else 
#line 1054 
                         tmp_133 = 0U;
                    
#line 1054 
                    tmp_134 = tmp_133;
                  }
                  else 
#line 1054 
                       tmp_134 = 0U;
                  
#line 1054 
                  tmp_135 = tmp_134;
                }
                else 
#line 1054 
                     tmp_135 = 0U;
                
#line 1054 
                tmp_136 = tmp_135;
              }
              else 
#line 1054 
                   tmp_136 = 0U;
              
#line 1054 
              tmp_137 = tmp_136;
            }
            else 
#line 1054 
                 tmp_137 = 0U;
            
#line 1054 
            tmp_138 = tmp_137;
          }
          else 
#line 1054 
               tmp_138 = 0U;
          
#line 1054 
          tmp_139 = tmp_138;
        }
        
#line 1054 
        tmp_141 = tmp_139;
      }
      else {
        int tmp_140;
        
#line 1054 
        tmp_140 = __ilog2_u32(param->tx_pending + 4294967295U);
        
#line 1054 
        tmp_141 = (unsigned int)(1UL << (tmp_140 + 1));
      }
      
#line 1054 
      tmp_142 = tmp_141;
    }
    else 
#line 1054 
         tmp_142 = 1U;
    
#line 1054 
    tx_size = tmp_142;
  }
  else {
    unsigned long tmp_143;
    
#line 1054 
    tmp_143 = __roundup_pow_of_two((unsigned long)param->tx_pending);
    
#line 1054 
    tx_size = (unsigned int)tmp_143;
  }
  {
    u32 tmp_144;
    
#line 1055 
    u32 __max1_0 = tx_size;
    
#line 1055 
    u32 __max2_0 = 64U;
    
#line 1055 
    if (__max1_0 > __max2_0) 
#line 1055 
                             tmp_144 = __max1_0; else 
#line 1055 
                                                      tmp_144 = __max2_0;
    
#line 1055 
    tmp_145 = tmp_144;
  }
  
#line 1055 
  tx_size = tmp_145;
  {
    u32 tmp_146;
    
#line 1056 
    u32 __min1_0 = tx_size;
    
#line 1056 
    u32 __min2_0 = 8192U;
    
#line 1056 
    if (__min1_0 < __min2_0) 
#line 1056 
                             tmp_146 = __min1_0; else 
#line 1056 
                                                      tmp_146 = __min2_0;
    
#line 1056 
    tmp_147 = tmp_146;
  }
  
#line 1056 
  tx_size = tmp_147;
  
#line 1058 
  if ((int)priv->port_up != 0) 
#line 1058 
                               tmp_148 = (priv->rx_ring[0])->actual_size; else 
                                                                    
#line 1058 
                                                                    tmp_148 = (priv->rx_ring[0])->size;
  
#line 1058 
  ;
  
#line 1058 
  if (tmp_148 == rx_size) {
    
#line 1059 
    if ((*(priv->tx_ring))->size == tx_size) {
      
#line 1061 
      __retres = 0;
      
#line 1061 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1063 
  ldv_mutex_lock_87(& mdev->state_lock);
  
#line 1064 
  if ((int)priv->port_up != 0) {
    
#line 1065 
    port_up = 1;
    
#line 1066 
    mlx4_en_stop_port(dev,1);
  }
  else ;
  
#line 1069 
  mlx4_en_free_resources(priv);
  
#line 1071 
  (priv->prof)->tx_ring_size = tx_size;
  
#line 1072 
  (priv->prof)->rx_ring_size = rx_size;
  
#line 1074 
  err = mlx4_en_alloc_resources(priv);
  
#line 1075 
  if (err != 0) {
    
#line 1076 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed reallocating port resources\n");
    
#line 1077 
    goto out;
  }
  else ;
  
#line 1079 
  if (port_up != 0) {
    
#line 1080 
    err = mlx4_en_start_port(dev);
    
#line 1081 
    if (err != 0) 
#line 1082 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed starting port\n"); else ;
  }
  else ;
  
#line 1085 
  err = mlx4_en_moderation_update(priv);
  out: 
#line 1087 
  ;
  
#line 1088 
  ldv_mutex_unlock_88(& mdev->state_lock);
  
#line 1089 
  __retres = err;
  return_label: 
#line 1089 
                return __retres;
}


#line 1092  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void mlx4_en_get_ringparam(struct net_device *dev, struct ethtool_ringparam *param)
{
  
#line 1095 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1097 
  memset((void *)param,0,36UL);
  
#line 1098 
  param->rx_max_pending = 8192U;
  
#line 1099 
  param->tx_max_pending = 8192U;
  
#line 1100 
  if ((int)priv->port_up != 0) 
#line 1100 
                               param->rx_pending = (priv->rx_ring[0])->actual_size; else 
                                                                    
#line 1100 
                                                                    param->rx_pending = (priv->rx_ring[0])->size;
  
#line 1102 
  param->tx_pending = (*(priv->tx_ring))->size;
  
#line 1103 
  return;
}


#line 1105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 mlx4_en_get_rxfh_indir_size(struct net_device *dev)
{
  u32 __retres;
  
#line 1107 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1109 
  __retres = priv->rx_ring_num;
  
#line 1109 
  return __retres;
}


#line 1112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 mlx4_en_get_rxfh_key_size(struct net_device *netdev)
{
  u32 __retres;
  
#line 1114 
  __retres = 40U;
  
#line 1114 
  return __retres;
}


#line 1117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_check_rxfh_func(struct net_device *dev, u8 hfunc)
{
  int __retres;
  
#line 1119 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1122 
  if ((unsigned int)hfunc == 1U) {
    
#line 1123 
    if ((((priv->mdev)->dev)->caps.flags2 & 2ULL) == 0ULL) {
      
#line 1124 
      __retres = -22;
      
#line 1124 
      goto return_label;
    }
    else ;
    
#line 1125 
    if ((dev->features & 8589934592ULL) == 0ULL) 
#line 1126 
                                                 en_print("\001",(struct mlx4_en_priv const *)priv,"Toeplitz hash function should be used in conjunction with RX hashing for optimal performance\n"); else ;
    
#line 1127 
    __retres = 0;
    
#line 1127 
    goto return_label;
  }
  else 
    
#line 1128 
    if ((unsigned int)hfunc == 2U) {
      
#line 1129 
      if ((((priv->mdev)->dev)->caps.flags2 & 4ULL) == 0ULL) {
        
#line 1130 
        __retres = -22;
        
#line 1130 
        goto return_label;
      }
      else ;
      
#line 1131 
      if ((dev->features & 8589934592ULL) != 0ULL) 
#line 1132 
                                                   en_print("\001",(struct mlx4_en_priv const *)priv,"Enabling both XOR Hash function and RX Hashing can limit RPS functionality\n"); else ;
      
#line 1133 
      __retres = 0;
      
#line 1133 
      goto return_label;
    }
    else ;
  
#line 1136 
  __retres = -22;
  return_label: 
#line 1136 
                return __retres;
}


#line 1139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_rxfh(struct net_device *dev, u32 *ring_index, u8 *key, u8 *hfunc)
{
  int rss_rings;
  unsigned int tmp_0;
  size_t tmp_69;
  
#line 1142 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1143 
  struct mlx4_en_rss_map *rss_map = & priv->rss_map;
  
#line 1145 
  size_t n = (unsigned long)priv->rx_ring_num;
  
#line 1146 
  int err = 0;
  
#line 1148 
  if ((priv->prof)->rss_rings != 0) 
#line 1148 
                                    tmp_0 = (unsigned int)(priv->prof)->rss_rings; else 
                                                                    
#line 1148 
                                                                    tmp_0 = priv->rx_ring_num;
  
#line 1148 
  rss_rings = (int)tmp_0;
  
#line 1149 
  if (0 != 0) {
    unsigned int tmp_67;
    
#line 1149 
    if (rss_rings <= 0) {
      int tmp_1;
      
#line 1149 
      tmp_1 = ____ilog2_NaN();
      
#line 1149 
      tmp_67 = (unsigned int)(1 << tmp_1);
    }
    else {
      unsigned int tmp_66;
      
#line 1149 
      if (rss_rings >= 0) {
        unsigned int tmp_65;
        
#line 1149 
        if (((unsigned long long)rss_rings & 4611686018427387904ULL) == 0ULL) {
          unsigned int tmp_64;
          
#line 1149 
          if (((unsigned long long)rss_rings & 2305843009213693952ULL) == 0ULL) {
            unsigned int tmp_63;
            
#line 1149 
            if (((unsigned long long)rss_rings & 1152921504606846976ULL) == 0ULL) {
              unsigned int tmp_62;
              
#line 1149 
              if (((unsigned long long)rss_rings & 576460752303423488ULL) == 0ULL) {
                unsigned int tmp_61;
                
#line 1149 
                if (((unsigned long long)rss_rings & 288230376151711744ULL) == 0ULL) {
                  unsigned int tmp_60;
                  
#line 1149 
                  if (((unsigned long long)rss_rings & 144115188075855872ULL) == 0ULL) {
                    unsigned int tmp_59;
                    
#line 1149 
                    if (((unsigned long long)rss_rings & 72057594037927936ULL) == 0ULL) {
                      unsigned int tmp_58;
                      
#line 1149 
                      if (((unsigned long long)rss_rings & 36028797018963968ULL) == 0ULL) {
                        unsigned int tmp_57;
                        
#line 1149 
                        if (((unsigned long long)rss_rings & 18014398509481984ULL) == 0ULL) {
                          unsigned int tmp_56;
                          
#line 1149 
                          if (((unsigned long long)rss_rings & 9007199254740992ULL) == 0ULL) {
                            unsigned int tmp_55;
                            
#line 1149 
                            if (((unsigned long long)rss_rings & 4503599627370496ULL) == 0ULL) {
                              unsigned int tmp_54;
                              
#line 1149 
                              if (((unsigned long long)rss_rings & 2251799813685248ULL) == 0ULL) {
                                unsigned int tmp_53;
                                
#line 1149 
                                if (((unsigned long long)rss_rings & 1125899906842624ULL) == 0ULL) {
                                  unsigned int tmp_52;
                                  
#line 1149 
                                  if (((unsigned long long)rss_rings & 562949953421312ULL) == 0ULL) {
                                    unsigned int tmp_51;
                                    
#line 1149 
                                    if (((unsigned long long)rss_rings & 281474976710656ULL) == 0ULL) {
                                      unsigned int tmp_50;
                                      
#line 1149 
                                      if (((unsigned long long)rss_rings & 140737488355328ULL) == 0ULL) {
                                        unsigned int tmp_49;
                                        
#line 1149 
                                        if (((unsigned long long)rss_rings & 70368744177664ULL) == 0ULL) {
                                          unsigned int tmp_48;
                                          
#line 1149 
                                          if (((unsigned long long)rss_rings & 35184372088832ULL) == 0ULL) {
                                            unsigned int tmp_47;
                                            
#line 1149 
                                            if (((unsigned long long)rss_rings & 17592186044416ULL) == 0ULL) {
                                              unsigned int tmp_46;
                                              
#line 1149 
                                              if (((unsigned long long)rss_rings & 8796093022208ULL) == 0ULL) {
                                                unsigned int tmp_45;
                                                
#line 1149 
                                                if (((unsigned long long)rss_rings & 4398046511104ULL) == 0ULL) {
                                                  unsigned int tmp_44;
                                                  
#line 1149 
                                                  if (((unsigned long long)rss_rings & 2199023255552ULL) == 0ULL) {
                                                    unsigned int tmp_43;
                                                    
#line 1149 
                                                    if (((unsigned long long)rss_rings & 1099511627776ULL) == 0ULL) {
                                                      unsigned int tmp_42;
                                                      
#line 1149 
                                                      if (((unsigned long long)rss_rings & 549755813888ULL) == 0ULL) {
                                                        unsigned int tmp_41;
                                                        
#line 1149 
                                                        if (((unsigned long long)rss_rings & 274877906944ULL) == 0ULL) {
                                                          unsigned int tmp_40;
                                                          
#line 1149 
                                                          if (((unsigned long long)rss_rings & 137438953472ULL) == 0ULL) {
                                                            unsigned int tmp_39;
                                                            
#line 1149 
                                                            if (((unsigned long long)rss_rings & 68719476736ULL) == 0ULL) {
                                                              unsigned int tmp_38;
                                                              
#line 1149 
                                                              if (((unsigned long long)rss_rings & 34359738368ULL) == 0ULL) {
                                                                unsigned int tmp_37;
                                                                
#line 1149 
                                                                if (((unsigned long long)rss_rings & 17179869184ULL) == 0ULL) {
                                                                  unsigned int tmp_36;
                                                                  
#line 1149 
                                                                  if (
                                                                    ((unsigned long long)rss_rings & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_35;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 1149 
                                                                    if (
                                                                    rss_rings >= 0) {
                                                                    int tmp_33;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 1073741824ULL) == 0ULL) {
                                                                    int tmp_32;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 536870912ULL) == 0ULL) {
                                                                    int tmp_31;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 268435456ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 134217728ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 67108864ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 33554432ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 16777216ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 8388608ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 4194304ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 2097152ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 1048576ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 524288ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 262144ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 131072ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 65536ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 32768ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 16384ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 8192ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 4096ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 2048ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 1024ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 512ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 256ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 128ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 64ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 32ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 16ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 8ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 4ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 2ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 1149 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 1ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 1149 
                                                                    tmp_2 = ____ilog2_NaN();
                                                                    
#line 1149 
                                                                    tmp_3 = 1 << tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_3 = 1;
                                                                    
#line 1149 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_4 = 2;
                                                                    
#line 1149 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_5 = 4;
                                                                    
#line 1149 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_6 = 8;
                                                                    
#line 1149 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_7 = 16;
                                                                    
#line 1149 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_8 = 32;
                                                                    
#line 1149 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_9 = 64;
                                                                    
#line 1149 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_10 = 128;
                                                                    
#line 1149 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_11 = 256;
                                                                    
#line 1149 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_12 = 512;
                                                                    
#line 1149 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_13 = 1024;
                                                                    
#line 1149 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_14 = 2048;
                                                                    
#line 1149 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_15 = 4096;
                                                                    
#line 1149 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_16 = 8192;
                                                                    
#line 1149 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_17 = 16384;
                                                                    
#line 1149 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_18 = 32768;
                                                                    
#line 1149 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_19 = 65536;
                                                                    
#line 1149 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_20 = 131072;
                                                                    
#line 1149 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_21 = 262144;
                                                                    
#line 1149 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_22 = 524288;
                                                                    
#line 1149 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_23 = 1048576;
                                                                    
#line 1149 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_24 = 2097152;
                                                                    
#line 1149 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_25 = 4194304;
                                                                    
#line 1149 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_26 = 8388608;
                                                                    
#line 1149 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_27 = 16777216;
                                                                    
#line 1149 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_28 = 33554432;
                                                                    
#line 1149 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_29 = 67108864;
                                                                    
#line 1149 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_30 = 134217728;
                                                                    
#line 1149 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_31 = 268435456;
                                                                    
#line 1149 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_32 = 536870912;
                                                                    
#line 1149 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_33 = 1073741824;
                                                                    
#line 1149 
                                                                    tmp_34 = (unsigned int)tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_34 = -2147483648;
                                                                    
#line 1149 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 1149 
                                                                    tmp_35 = (unsigned int)0;
                                                                    
#line 1149 
                                                                    tmp_36 = tmp_35;
                                                                  }
                                                                  else 
                                                                    
#line 1149 
                                                                    tmp_36 = (unsigned int)0;
                                                                  
#line 1149 
                                                                  tmp_37 = tmp_36;
                                                                }
                                                                else 
                                                                  
#line 1149 
                                                                  tmp_37 = (unsigned int)0;
                                                                
#line 1149 
                                                                tmp_38 = tmp_37;
                                                              }
                                                              else 
#line 1149 
                                                                   tmp_38 = (unsigned int)0;
                                                              
#line 1149 
                                                              tmp_39 = tmp_38;
                                                            }
                                                            else 
#line 1149 
                                                                 tmp_39 = (unsigned int)0;
                                                            
#line 1149 
                                                            tmp_40 = tmp_39;
                                                          }
                                                          else 
#line 1149 
                                                               tmp_40 = (unsigned int)0;
                                                          
#line 1149 
                                                          tmp_41 = tmp_40;
                                                        }
                                                        else 
#line 1149 
                                                             tmp_41 = (unsigned int)0;
                                                        
#line 1149 
                                                        tmp_42 = tmp_41;
                                                      }
                                                      else 
#line 1149 
                                                           tmp_42 = (unsigned int)0;
                                                      
#line 1149 
                                                      tmp_43 = tmp_42;
                                                    }
                                                    else 
#line 1149 
                                                         tmp_43 = (unsigned int)0;
                                                    
#line 1149 
                                                    tmp_44 = tmp_43;
                                                  }
                                                  else 
#line 1149 
                                                       tmp_44 = (unsigned int)0;
                                                  
#line 1149 
                                                  tmp_45 = tmp_44;
                                                }
                                                else 
#line 1149 
                                                     tmp_45 = (unsigned int)0;
                                                
#line 1149 
                                                tmp_46 = tmp_45;
                                              }
                                              else 
#line 1149 
                                                   tmp_46 = (unsigned int)0;
                                              
#line 1149 
                                              tmp_47 = tmp_46;
                                            }
                                            else 
#line 1149 
                                                 tmp_47 = (unsigned int)0;
                                            
#line 1149 
                                            tmp_48 = tmp_47;
                                          }
                                          else 
#line 1149 
                                               tmp_48 = (unsigned int)0;
                                          
#line 1149 
                                          tmp_49 = tmp_48;
                                        }
                                        else 
#line 1149 
                                             tmp_49 = (unsigned int)0;
                                        
#line 1149 
                                        tmp_50 = tmp_49;
                                      }
                                      else 
#line 1149 
                                           tmp_50 = (unsigned int)0;
                                      
#line 1149 
                                      tmp_51 = tmp_50;
                                    }
                                    else 
#line 1149 
                                         tmp_51 = (unsigned int)0;
                                    
#line 1149 
                                    tmp_52 = tmp_51;
                                  }
                                  else 
#line 1149 
                                       tmp_52 = (unsigned int)0;
                                  
#line 1149 
                                  tmp_53 = tmp_52;
                                }
                                else 
#line 1149 
                                     tmp_53 = (unsigned int)0;
                                
#line 1149 
                                tmp_54 = tmp_53;
                              }
                              else 
#line 1149 
                                   tmp_54 = (unsigned int)0;
                              
#line 1149 
                              tmp_55 = tmp_54;
                            }
                            else 
#line 1149 
                                 tmp_55 = (unsigned int)0;
                            
#line 1149 
                            tmp_56 = tmp_55;
                          }
                          else 
#line 1149 
                               tmp_56 = (unsigned int)0;
                          
#line 1149 
                          tmp_57 = tmp_56;
                        }
                        else 
#line 1149 
                             tmp_57 = (unsigned int)0;
                        
#line 1149 
                        tmp_58 = tmp_57;
                      }
                      else 
#line 1149 
                           tmp_58 = (unsigned int)0;
                      
#line 1149 
                      tmp_59 = tmp_58;
                    }
                    else 
#line 1149 
                         tmp_59 = (unsigned int)0;
                    
#line 1149 
                    tmp_60 = tmp_59;
                  }
                  else 
#line 1149 
                       tmp_60 = (unsigned int)0;
                  
#line 1149 
                  tmp_61 = tmp_60;
                }
                else 
#line 1149 
                     tmp_61 = (unsigned int)0;
                
#line 1149 
                tmp_62 = tmp_61;
              }
              else 
#line 1149 
                   tmp_62 = (unsigned int)0;
              
#line 1149 
              tmp_63 = tmp_62;
            }
            else 
#line 1149 
                 tmp_63 = (unsigned int)0;
            
#line 1149 
            tmp_64 = tmp_63;
          }
          else 
#line 1149 
               tmp_64 = (unsigned int)0;
          
#line 1149 
          tmp_65 = tmp_64;
        }
        else 
#line 1149 
             tmp_65 = (unsigned int)0;
        
#line 1149 
        tmp_66 = tmp_65;
      }
      else 
#line 1149 
           tmp_66 = (unsigned int)0;
      
#line 1149 
      tmp_67 = tmp_66;
    }
    
#line 1149 
    rss_rings = (int)tmp_67;
  }
  else {
    int tmp_68;
    
#line 1149 
    tmp_68 = __ilog2_u32((unsigned int)rss_rings);
    
#line 1149 
    rss_rings = 1 << tmp_68;
  }
  
#line 1151 
  goto ldv_57558;
  ldv_57557: 
#line 1152 
  ;
  
#line 1152 
  if (ring_index == (u32 *)0U) 
#line 1153 
                               goto ldv_57556; else ;
  
#line 1154 
  *(ring_index + n) = (unsigned int)(rss_map->qps[n % (unsigned long)rss_rings].qpn - rss_map->base_qpn);
  ldv_57558: 
#line 1156 
  ;
  
#line 1151 
  tmp_69 = n;
  
#line 1151 
  n -= 1UL;
  
#line 1151 
  ;
  
#line 1151 
  if (tmp_69 != 0UL) 
#line 1153 
                     goto ldv_57557; else 
#line 1156 
                                          goto ldv_57556;
  ldv_57556: 
#line 1157 
  ;
  
#line 1157 
  if (key != (u8 *)0U) 
#line 1158 
                       memcpy((void *)key,(void const *)(& priv->rss_key),40UL); else ;
  
#line 1159 
  if (hfunc != (u8 *)0U) 
#line 1160 
                         *hfunc = priv->rss_hash_fn; else ;
  
#line 1161 
  return err;
}


#line 1164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_rxfh(struct net_device *dev, u32 const *ring_index, u8 const *key, u8 const hfunc)
{
  int __retres;
  int i;
  unsigned int tmp_0;
  int tmp_2;
  bool tmp_1;
  
#line 1167 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1168 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1169 
  int port_up = 0;
  
#line 1170 
  int err = 0;
  
#line 1172 
  int rss_rings = 0;
  
#line 1177 
  i = 0;
  
#line 1177 
  goto ldv_57573;
  ldv_57572: 
#line 1178 
  ;
  
#line 1178 
  if (ring_index == (u32 const *)0U) 
#line 1179 
                                     goto ldv_57571; else ;
  
#line 1180 
  if ((i > 0 && *(ring_index + i) == 0U) && rss_rings == 0) 
#line 1181 
                                                            rss_rings = i; else ;
  
#line 1183 
  if (rss_rings != 0) 
#line 1183 
                      tmp_0 = (unsigned int)rss_rings; else 
#line 1183 
                                                            tmp_0 = priv->rx_ring_num;
  
#line 1183 
  ;
  
#line 1183 
  if (*(ring_index + i) != (unsigned int)i % tmp_0) {
    
#line 1184 
    __retres = -22;
    
#line 1184 
    goto return_label;
  }
  else ;
  ldv_57571: 
#line 1185 
  ;
  
#line 1177 
  i += 1;
  ldv_57573: 
#line 1178 
  ;
  
#line 1177 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1179 
                                           goto ldv_57572; else 
#line 1182 
                                                                goto ldv_57574;
  ldv_57574: 
#line 1183 
  ;
  
#line 1187 
  if (rss_rings == 0) 
#line 1188 
                      rss_rings = (int)priv->rx_ring_num; else ;
  
#line 1191 
  tmp_1 = is_power_of_2((unsigned long)rss_rings);
  
#line 1191 
  if (tmp_1) 
#line 1191 
             tmp_2 = 0; else 
#line 1191 
                             tmp_2 = 1;
  
#line 1191 
  if (tmp_2) {
    
#line 1192 
    __retres = -22;
    
#line 1192 
    goto return_label;
  }
  else ;
  
#line 1194 
  if ((unsigned int)hfunc != 0U) {
    
#line 1195 
    err = mlx4_en_check_rxfh_func(dev,(unsigned char)((int)hfunc));
    
#line 1196 
    if (err != 0) {
      
#line 1197 
      __retres = err;
      
#line 1197 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1200 
  ldv_mutex_lock_89(& mdev->state_lock);
  
#line 1201 
  if ((int)priv->port_up != 0) {
    
#line 1202 
    port_up = 1;
    
#line 1203 
    mlx4_en_stop_port(dev,1);
  }
  else ;
  
#line 1206 
  if (ring_index != (u32 const *)0U) 
#line 1207 
                                     (priv->prof)->rss_rings = rss_rings; else ;
  
#line 1208 
  if (key != (u8 const *)0U) 
#line 1209 
                             memcpy((void *)(& priv->rss_key),(void const *)key,40UL); else ;
  
#line 1210 
  if ((unsigned int)hfunc != 0U) 
#line 1211 
                                 priv->rss_hash_fn = hfunc; else ;
  
#line 1213 
  if (port_up != 0) {
    
#line 1214 
    err = mlx4_en_start_port(dev);
    
#line 1215 
    if (err != 0) 
#line 1216 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed starting port\n"); else ;
  }
  else ;
  
#line 1219 
  ldv_mutex_unlock_90(& mdev->state_lock);
  
#line 1220 
  __retres = err;
  return_label: 
#line 1220 
                return __retres;
}


#line 1226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_validate_flow(struct net_device *dev, struct ethtool_rxnfc *cmd)
{
  int __retres;
  struct ethtool_usrip4_spec *l3_mask;
  struct ethtool_tcpip4_spec *l4_mask;
  struct ethhdr *eth_mask;
  
#line 1233 
  if (cmd->fs.location > 255U) {
    
#line 1234 
    __retres = -22;
    
#line 1234 
    goto return_label;
  }
  else ;
  
#line 1236 
  if ((cmd->fs.flow_type & 1073741824U) != 0U) {
    int tmp_0;
    bool tmp;
    
#line 1238 
    tmp = is_broadcast_ether_addr((u8 const *)(& cmd->fs.m_ext.h_dest));
    
#line 1238 
    if (tmp) 
#line 1238 
             tmp_0 = 0; else 
#line 1238 
                             tmp_0 = 1;
    
#line 1238 
    if (tmp_0) {
      
#line 1239 
      __retres = -22;
      
#line 1239 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1242 
  switch (cmd->fs.flow_type & 1073741823U) {
    int tmp_2;
    bool tmp_1;
    int tmp_4;
    bool tmp_3;
    case (unsigned int)1: 
#line 1243 
    ;
    case (unsigned int)2: 
#line 1244 
    ;
    
#line 1245 
    if ((unsigned int)cmd->fs.m_u.tcp_ip4_spec.tos != 0U) {
      
#line 1246 
      __retres = -22;
      
#line 1246 
      goto return_label;
    }
    else ;
    
#line 1247 
    l4_mask = & cmd->fs.m_u.tcp_ip4_spec;
    
#line 1249 
    if (((l4_mask->ip4src + 4294967295U <= 4294967293U || l4_mask->ip4dst + 4294967295U <= 4294967293U) || (unsigned int)l4_mask->psrc + 65535U <= 65533U) || (unsigned int)l4_mask->pdst + 65535U <= 65533U) {
      
#line 1253 
      __retres = -22;
      
#line 1253 
      goto return_label;
    }
    else ;
    
#line 1254 
    goto ldv_57584;
    case (unsigned int)13: 
#line 1255 
    ;
    
#line 1256 
    l3_mask = & cmd->fs.m_u.usr_ip4_spec;
    
#line 1257 
    if ((((((l3_mask->l4_4_bytes != 0U || (unsigned int)l3_mask->tos != 0U) || (unsigned int)l3_mask->proto != 0U) || (unsigned int)cmd->fs.h_u.usr_ip4_spec.ip_ver != 1U) || (l3_mask->ip4src == 0U && l3_mask->ip4dst == 0U)) || l3_mask->ip4src + 4294967295U <= 4294967293U) || l3_mask->ip4dst + 4294967295U <= 4294967293U) {
      
#line 1262 
      __retres = -22;
      
#line 1262 
      goto return_label;
    }
    else ;
    
#line 1263 
    goto ldv_57584;
    case (unsigned int)18: 
#line 1264 
    ;
    
#line 1265 
    eth_mask = & cmd->fs.m_u.ether_spec;
    
#line 1267 
    tmp_1 = is_zero_ether_addr((u8 const *)(& eth_mask->h_source));
    
#line 1267 
    if (tmp_1) 
#line 1267 
               tmp_2 = 0; else 
#line 1267 
                               tmp_2 = 1;
    
#line 1267 
    if (tmp_2) {
      
#line 1268 
      __retres = -22;
      
#line 1268 
      goto return_label;
    }
    else ;
    
#line 1271 
    tmp_3 = is_broadcast_ether_addr((u8 const *)(& eth_mask->h_dest));
    
#line 1271 
    if (tmp_3) 
#line 1271 
               tmp_4 = 0; else 
#line 1271 
                               tmp_4 = 1;
    
#line 1271 
    if (tmp_4) {
      
#line 1272 
      __retres = -22;
      
#line 1272 
      goto return_label;
    }
    else ;
    
#line 1274 
    if ((unsigned int)eth_mask->h_proto + 65535U <= 65533U) {
      
#line 1275 
      __retres = -22;
      
#line 1275 
      goto return_label;
    }
    else ;
    
#line 1276 
    goto ldv_57584;
    default: 
#line 1277 
    ;
    
#line 1278 
    __retres = -22;
    
#line 1278 
    goto return_label;
  }
  ldv_57584: 
#line 1281 
  ;
  
#line 1281 
  if (cmd->fs.flow_type < (__u32)0) {
    
#line 1282 
    if ((unsigned int)cmd->fs.m_ext.vlan_etype != 0U || (((int)cmd->fs.m_ext.vlan_tci & 65295) != 0 && ((int)cmd->fs.m_ext.vlan_tci & 65295) != 65295)) {
      
#line 1287 
      __retres = -22;
      
#line 1287 
      goto return_label;
    }
    else ;
    
#line 1289 
    if ((unsigned int)cmd->fs.m_ext.vlan_tci != 0U) {
      int tmp_6;
      
#line 1290 
      if (0 != 0) 
#line 1290 
                  tmp_6 = (unsigned int)((unsigned short)(((int)cmd->fs.h_ext.vlan_tci << 8) | ((int)cmd->fs.h_ext.vlan_tci >> 8))) > 4095U;
      else {
        __u16 tmp_5;
        
#line 1290 
        tmp_5 = __fswab16((unsigned short)((int)cmd->fs.h_ext.vlan_tci));
        
#line 1290 
        tmp_6 = (unsigned int)tmp_5 > 4095U;
      }
      
#line 1290 
      if (tmp_6) {
        
#line 1291 
        __retres = -22;
        
#line 1291 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1296 
  __retres = 0;
  return_label: 
#line 1296 
                return __retres;
}


#line 1299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_ethtool_add_mac_rule(struct ethtool_rxnfc *cmd, struct list_head *rule_list_h, struct mlx4_spec_list *spec_l2, unsigned char *mac)
{
  
#line 1304 
  int err = 0;
  
#line 1305 
  __be64 mac_msk = 281474976710655ULL;
  
#line 1307 
  spec_l2->id = MLX4_NET_TRANS_RULE_ID_ETH;
  
#line 1308 
  memcpy((void *)(& spec_l2->__anonCompField_mlx4_spec_list_97.eth.dst_mac_msk),(void const *)(& mac_msk),6UL);
  
#line 1309 
  memcpy((void *)(& spec_l2->__anonCompField_mlx4_spec_list_97.eth.dst_mac),(void const *)mac,6UL);
  
#line 1311 
  if (cmd->fs.flow_type < (__u32)0 && ((int)cmd->fs.m_ext.vlan_tci & 65295) != 0) {
    
#line 1313 
    spec_l2->__anonCompField_mlx4_spec_list_97.eth.vlan_id = cmd->fs.h_ext.vlan_tci;
    
#line 1314 
    spec_l2->__anonCompField_mlx4_spec_list_97.eth.vlan_id_msk = (unsigned short)65295U;
  }
  else ;
  
#line 1317 
  list_add_tail(& spec_l2->list,rule_list_h);
  
#line 1319 
  return err;
}


#line 1322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_ethtool_add_mac_rule_by_ipv4(struct mlx4_en_priv *priv, struct ethtool_rxnfc *cmd, struct list_head *rule_list_h, struct mlx4_spec_list *spec_l2, __be32 ipv4_dst)
{
  unsigned char mac[6U];
  int tmp_0;
  bool tmp;
  int tmp_1;
  
#line 1331 
  tmp = ipv4_is_multicast(ipv4_dst);
  
#line 1331 
  if (tmp) 
#line 1331 
           tmp_0 = 0; else 
#line 1331 
                           tmp_0 = 1;
  
#line 1331 
  if (tmp_0) 
    
#line 1332 
    if ((cmd->fs.flow_type & 1073741824U) != 0U) 
#line 1333 
                                                 memcpy((void *)(& mac),(void const *)(& cmd->fs.h_ext.h_dest),6UL); else 
                                                                    
#line 1335 
                                                                    memcpy((void *)(& mac),(void const *)(priv->dev)->dev_addr,6UL);
  else 
#line 1337 
       ip_eth_mc_map(ipv4_dst,(char *)(& mac));
  
#line 1340 
  tmp_1 = mlx4_en_ethtool_add_mac_rule(cmd,rule_list_h,spec_l2,&(mac[0]));
  
#line 1340 
  return tmp_1;
}


#line 1346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int add_ip_rule(struct mlx4_en_priv *priv, struct ethtool_rxnfc *cmd, struct list_head *list_h)
{
  int __retres;
  int err;
  
#line 1351 
  struct mlx4_spec_list *spec_l2 = (struct mlx4_spec_list *)0;
  
#line 1352 
  struct mlx4_spec_list *spec_l3 = (struct mlx4_spec_list *)0;
  
#line 1353 
  struct ethtool_usrip4_spec *l3_mask = & cmd->fs.m_u.usr_ip4_spec;
  
#line 1355 
  spec_l3 = (struct mlx4_spec_list *)kzalloc(64UL,208U);
  
#line 1356 
  spec_l2 = (struct mlx4_spec_list *)kzalloc(64UL,208U);
  
#line 1357 
  if (spec_l2 == (struct mlx4_spec_list *)0 || spec_l3 == (struct mlx4_spec_list *)0) {
    
#line 1358 
    err = -12;
    
#line 1359 
    goto free_spec;
  }
  else ;
  
#line 1362 
  err = mlx4_en_ethtool_add_mac_rule_by_ipv4(priv,cmd,list_h,spec_l2,cmd->fs.h_u.usr_ip4_spec.ip4dst);
  
#line 1365 
  if (err != 0) 
#line 1366 
                goto free_spec; else ;
  
#line 1367 
  spec_l3->id = MLX4_NET_TRANS_RULE_ID_IPV4;
  
#line 1368 
  spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.src_ip = cmd->fs.h_u.usr_ip4_spec.ip4src;
  
#line 1369 
  if (l3_mask->ip4src != 0U) 
#line 1370 
                             spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.src_ip_msk = 4294967295U; else ;
  
#line 1371 
  spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.dst_ip = cmd->fs.h_u.usr_ip4_spec.ip4dst;
  
#line 1372 
  if (l3_mask->ip4dst != 0U) 
#line 1373 
                             spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.dst_ip_msk = 4294967295U; else ;
  
#line 1374 
  list_add_tail(& spec_l3->list,list_h);
  
#line 1376 
  __retres = 0;
  
#line 1376 
  goto return_label;
  free_spec: 
#line 1378 
  ;
  
#line 1379 
  kfree((void const *)spec_l2);
  
#line 1380 
  kfree((void const *)spec_l3);
  
#line 1381 
  __retres = err;
  return_label: 
#line 1381 
                return __retres;
}


#line 1384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int add_tcp_udp_rule(struct mlx4_en_priv *priv, struct ethtool_rxnfc *cmd, struct list_head *list_h, int proto)
{
  int __retres;
  int err;
  
#line 1389 
  struct mlx4_spec_list *spec_l2 = (struct mlx4_spec_list *)0;
  
#line 1390 
  struct mlx4_spec_list *spec_l3 = (struct mlx4_spec_list *)0;
  
#line 1391 
  struct mlx4_spec_list *spec_l4 = (struct mlx4_spec_list *)0;
  
#line 1392 
  struct ethtool_tcpip4_spec *l4_mask = & cmd->fs.m_u.tcp_ip4_spec;
  
#line 1394 
  spec_l2 = (struct mlx4_spec_list *)kzalloc(64UL,208U);
  
#line 1395 
  spec_l3 = (struct mlx4_spec_list *)kzalloc(64UL,208U);
  
#line 1396 
  spec_l4 = (struct mlx4_spec_list *)kzalloc(64UL,208U);
  
#line 1397 
  if ((spec_l2 == (struct mlx4_spec_list *)0 || spec_l3 == (struct mlx4_spec_list *)0) || spec_l4 == (struct mlx4_spec_list *)0) {
    
#line 1398 
    err = -12;
    
#line 1399 
    goto free_spec;
  }
  else ;
  
#line 1402 
  spec_l3->id = MLX4_NET_TRANS_RULE_ID_IPV4;
  
#line 1404 
  if (proto == 1) {
    
#line 1405 
    err = mlx4_en_ethtool_add_mac_rule_by_ipv4(priv,cmd,list_h,spec_l2,cmd->fs.h_u.tcp_ip4_spec.ip4dst);
    
#line 1409 
    if (err != 0) 
#line 1410 
                  goto free_spec; else ;
    
#line 1411 
    spec_l4->id = MLX4_NET_TRANS_RULE_ID_TCP;
    
#line 1412 
    spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.src_ip = cmd->fs.h_u.tcp_ip4_spec.ip4src;
    
#line 1413 
    spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.dst_ip = cmd->fs.h_u.tcp_ip4_spec.ip4dst;
    
#line 1414 
    spec_l4->__anonCompField_mlx4_spec_list_97.tcp_udp.src_port = cmd->fs.h_u.tcp_ip4_spec.psrc;
    
#line 1415 
    spec_l4->__anonCompField_mlx4_spec_list_97.tcp_udp.dst_port = cmd->fs.h_u.tcp_ip4_spec.pdst;
  }
  else {
    
#line 1417 
    err = mlx4_en_ethtool_add_mac_rule_by_ipv4(priv,cmd,list_h,spec_l2,cmd->fs.h_u.udp_ip4_spec.ip4dst);
    
#line 1421 
    if (err != 0) 
#line 1422 
                  goto free_spec; else ;
    
#line 1423 
    spec_l4->id = MLX4_NET_TRANS_RULE_ID_UDP;
    
#line 1424 
    spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.src_ip = cmd->fs.h_u.udp_ip4_spec.ip4src;
    
#line 1425 
    spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.dst_ip = cmd->fs.h_u.udp_ip4_spec.ip4dst;
    
#line 1426 
    spec_l4->__anonCompField_mlx4_spec_list_97.tcp_udp.src_port = cmd->fs.h_u.udp_ip4_spec.psrc;
    
#line 1427 
    spec_l4->__anonCompField_mlx4_spec_list_97.tcp_udp.dst_port = cmd->fs.h_u.udp_ip4_spec.pdst;
  }
  
#line 1430 
  if (l4_mask->ip4src != 0U) 
#line 1431 
                             spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.src_ip_msk = 4294967295U; else ;
  
#line 1432 
  if (l4_mask->ip4dst != 0U) 
#line 1433 
                             spec_l3->__anonCompField_mlx4_spec_list_97.ipv4.dst_ip_msk = 4294967295U; else ;
  
#line 1435 
  if ((unsigned int)l4_mask->psrc != 0U) 
#line 1436 
                                         spec_l4->__anonCompField_mlx4_spec_list_97.tcp_udp.src_port_msk = (unsigned short)65535U; else ;
  
#line 1437 
  if ((unsigned int)l4_mask->pdst != 0U) 
#line 1438 
                                         spec_l4->__anonCompField_mlx4_spec_list_97.tcp_udp.dst_port_msk = (unsigned short)65535U; else ;
  
#line 1440 
  list_add_tail(& spec_l3->list,list_h);
  
#line 1441 
  list_add_tail(& spec_l4->list,list_h);
  
#line 1443 
  __retres = 0;
  
#line 1443 
  goto return_label;
  free_spec: 
#line 1445 
  ;
  
#line 1446 
  kfree((void const *)spec_l2);
  
#line 1447 
  kfree((void const *)spec_l3);
  
#line 1448 
  kfree((void const *)spec_l4);
  
#line 1449 
  __retres = err;
  return_label: 
#line 1449 
                return __retres;
}


#line 1452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_ethtool_to_net_trans_rule(struct net_device *dev, struct ethtool_rxnfc *cmd, struct list_head *rule_list_h)
{
  int __retres;
  int err;
  struct ethhdr *eth_spec;
  struct mlx4_spec_list *spec_l2;
  
#line 1459 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1461 
  err = mlx4_en_validate_flow(dev,cmd);
  
#line 1462 
  if (err != 0) {
    
#line 1463 
    __retres = err;
    
#line 1463 
    goto return_label;
  }
  else ;
  
#line 1465 
  switch (cmd->fs.flow_type & 1073741823U) {
    case (unsigned int)18: 
#line 1466 
    ;
    
#line 1467 
    spec_l2 = (struct mlx4_spec_list *)kzalloc(64UL,208U);
    
#line 1468 
    if (spec_l2 == (struct mlx4_spec_list *)0) {
      
#line 1469 
      __retres = -12;
      
#line 1469 
      goto return_label;
    }
    else ;
    
#line 1471 
    eth_spec = & cmd->fs.h_u.ether_spec;
    
#line 1472 
    mlx4_en_ethtool_add_mac_rule(cmd,rule_list_h,spec_l2,& eth_spec->h_dest[0]);
    
#line 1474 
    spec_l2->__anonCompField_mlx4_spec_list_97.eth.ether_type = eth_spec->h_proto;
    
#line 1475 
    if ((unsigned int)eth_spec->h_proto != 0U) 
#line 1476 
                                               spec_l2->__anonCompField_mlx4_spec_list_97.eth.ether_type_enable = (unsigned char)1U; else ;
    
#line 1477 
    goto ldv_57636;
    case (unsigned int)13: 
#line 1478 
    ;
    
#line 1479 
    err = add_ip_rule(priv,cmd,rule_list_h);
    
#line 1480 
    goto ldv_57636;
    case (unsigned int)1: 
#line 1481 
    ;
    
#line 1482 
    err = add_tcp_udp_rule(priv,cmd,rule_list_h,1);
    
#line 1483 
    goto ldv_57636;
    case (unsigned int)2: 
#line 1484 
    ;
    
#line 1485 
    err = add_tcp_udp_rule(priv,cmd,rule_list_h,2);
    
#line 1486 
    goto ldv_57636;
  }
  ldv_57636: 
#line 1489 
  ;
  
#line 1489 
  __retres = err;
  return_label: 
#line 1489 
                return __retres;
}


#line 1492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_flow_replace(struct net_device *dev, struct ethtool_rxnfc *cmd)
{
  int __retres;
  int err;
  struct ethtool_flow_id *loc_rule;
  struct mlx4_spec_list *spec;
  struct mlx4_spec_list *tmp_spec;
  u32 qpn;
  u64 reg_id;
  struct mlx4_spec_list *tmp_0;
  struct mlx4_spec_list *tmp_1;
  struct mlx4_spec_list *tmp_2;
  
#line 1496 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1502 
  struct mlx4_net_trans_rule rule = {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .queue_mode = MLX4_NET_TRANS_Q_FIFO, .exclusive = (_Bool)0, .allow_loopback = (_Bool)1, .promisc_mode = MLX4_FS_REGULAR, .port = (unsigned char)0, .priority = (unsigned short)0, .qpn = 0U};
  
#line 1509 
  rule.port = (unsigned char)priv->port;
  
#line 1510 
  rule.priority = (unsigned short)((unsigned int)((unsigned short)cmd->fs.location) | 8192U);
  
#line 1511 
  INIT_LIST_HEAD(& rule.list);
  
#line 1514 
  if (cmd->fs.ring_cookie == 18446744073709551615ULL) 
#line 1515 
                                                      qpn = (unsigned int)priv->drop_qp.qpn;
  else 
    
#line 1516 
    if (cmd->fs.ring_cookie < (__u64)0) 
#line 1517 
                                        qpn = (unsigned int)cmd->fs.ring_cookie;
    else {
      
#line 1519 
      if (cmd->fs.ring_cookie >= (unsigned long long)priv->rx_ring_num) {
        
#line 1520 
        en_print("\001",(struct mlx4_en_priv const *)priv,"rxnfc: RX ring (%llu) doesn\'t exist\n",cmd->fs.ring_cookie);
        
#line 1522 
        __retres = -22;
        
#line 1522 
        goto return_label;
      }
      else ;
      
#line 1524 
      qpn = (unsigned int)priv->rss_map.qps[cmd->fs.ring_cookie].qpn;
      
#line 1525 
      if (qpn == 0U) {
        
#line 1526 
        en_print("\001",(struct mlx4_en_priv const *)priv,"rxnfc: RX ring (%llu) is inactive\n",cmd->fs.ring_cookie);
        
#line 1528 
        __retres = -22;
        
#line 1528 
        goto return_label;
      }
      else ;
    }
  
#line 1531 
  rule.qpn = qpn;
  
#line 1532 
  err = mlx4_en_ethtool_to_net_trans_rule(dev,cmd,& rule.list);
  
#line 1533 
  if (err != 0) 
#line 1534 
                goto out_free_list; else ;
  
#line 1536 
  loc_rule = & priv->ethtool_rules[cmd->fs.location];
  
#line 1537 
  if (loc_rule->id != 0ULL) {
    
#line 1538 
    err = mlx4_flow_detach((priv->mdev)->dev,loc_rule->id);
    
#line 1539 
    if (err != 0) {
      
#line 1540 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Fail to detach network rule at location %d. registration id = %llx\n",cmd->fs.location,loc_rule->id);
      
#line 1542 
      goto out_free_list;
    }
    else ;
    
#line 1544 
    loc_rule->id = 0ULL;
    
#line 1545 
    memset((void *)(& loc_rule->flow_spec),0,168UL);
    
#line 1547 
    list_del(& loc_rule->list);
  }
  else ;
  
#line 1549 
  err = mlx4_flow_attach((priv->mdev)->dev,& rule,& reg_id);
  
#line 1550 
  if (err != 0) {
    
#line 1551 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Fail to attach network rule at location %d\n",cmd->fs.location);
    
#line 1553 
    goto out_free_list;
  }
  else ;
  
#line 1555 
  loc_rule->id = reg_id;
  
#line 1556 
  memcpy((void *)(& loc_rule->flow_spec),(void const *)(& cmd->fs),168UL);
  
#line 1558 
  list_add_tail(& loc_rule->list,& priv->ethtool_list);
  out_free_list: 
#line 1560 
  ;
  {
    
#line 1561 
    struct list_head const *__mptr = (struct list_head const *)rule.list.next;
    
#line 1561 
    tmp_0 = (struct mlx4_spec_list *)__mptr;
  }
  
#line 1561 
  spec = tmp_0;
  {
    
#line 1561 
    struct list_head const *__mptr_0 = (struct list_head const *)spec->list.next;
    
#line 1561 
    tmp_1 = (struct mlx4_spec_list *)__mptr_0;
  }
  
#line 1562 
  tmp_spec = tmp_1;
  
#line 1561 
  goto ldv_57660;
  ldv_57659: 
#line 1562 
  ;
  
#line 1562 
  list_del(& spec->list);
  
#line 1563 
  kfree((void const *)spec);
  
#line 1561 
  spec = tmp_spec;
  {
    
#line 1561 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp_spec->list.next;
    
#line 1561 
    tmp_2 = (struct mlx4_spec_list *)__mptr_1;
  }
  
#line 1561 
  tmp_spec = tmp_2;
  ldv_57660: 
#line 1563 
  ;
  
#line 1561 
  if ((void *)(& rule) != (void *)spec) 
#line 1563 
                                        goto ldv_57659; else 
#line 1566 
                                                             goto ldv_57661;
  ldv_57661: 
#line 1567 
  ;
  
#line 1565 
  __retres = err;
  return_label: 
#line 1565 
                return __retres;
}


#line 1568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_flow_detach(struct net_device *dev, struct ethtool_rxnfc *cmd)
{
  int __retres;
  struct ethtool_flow_id *rule;
  
#line 1571 
  int err = 0;
  
#line 1573 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1575 
  if (cmd->fs.location > 255U) {
    
#line 1576 
    __retres = -22;
    
#line 1576 
    goto return_label;
  }
  else ;
  
#line 1578 
  rule = & priv->ethtool_rules[cmd->fs.location];
  
#line 1579 
  if (rule->id == 0ULL) {
    
#line 1580 
    err = -2;
    
#line 1581 
    goto out;
  }
  else ;
  
#line 1584 
  err = mlx4_flow_detach((priv->mdev)->dev,rule->id);
  
#line 1585 
  if (err != 0) {
    
#line 1586 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Fail to detach network rule at location %d. registration id = 0x%llx\n",cmd->fs.location,rule->id);
    
#line 1588 
    goto out;
  }
  else ;
  
#line 1590 
  rule->id = 0ULL;
  
#line 1591 
  memset((void *)(& rule->flow_spec),0,168UL);
  
#line 1592 
  list_del(& rule->list);
  out: 
#line 1593 
  ;
  
#line 1594 
  __retres = err;
  return_label: 
#line 1594 
                return __retres;
}


#line 1598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_flow(struct net_device *dev, struct ethtool_rxnfc *cmd, int loc)
{
  int __retres;
  struct ethtool_flow_id *rule;
  
#line 1601 
  int err = 0;
  
#line 1603 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1605 
  if ((unsigned int)loc > 255U) {
    
#line 1606 
    __retres = -22;
    
#line 1606 
    goto return_label;
  }
  else ;
  
#line 1608 
  rule = & priv->ethtool_rules[loc];
  
#line 1609 
  if (rule->id != 0ULL) 
#line 1610 
                        memcpy((void *)(& cmd->fs),(void const *)(& rule->flow_spec),168UL); else 
                                                                    
#line 1613 
                                                                    err = -2;
  
#line 1615 
  __retres = err;
  return_label: 
#line 1615 
                return __retres;
}


#line 1618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_num_flows(struct mlx4_en_priv *priv)
{
  int i;
  
#line 1621 
  int res = 0;
  
#line 1622 
  i = 0;
  
#line 1622 
  goto ldv_57684;
  ldv_57683: 
#line 1623 
  ;
  
#line 1623 
  if (priv->ethtool_rules[i].id != 0ULL) 
#line 1624 
                                         res += 1; else ;
  
#line 1622 
  i += 1;
  ldv_57684: 
#line 1623 
  ;
  
#line 1622 
  if (i <= 255) 
#line 1624 
                goto ldv_57683; else 
#line 1627 
                                     goto ldv_57685;
  ldv_57685: 
#line 1628 
  ;
  
#line 1626 
  return res;
}


#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd, u32 *rule_locs)
{
  int __retres;
  
#line 1633 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1634 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1635 
  int err = 0;
  
#line 1636 
  int i = 0;
  
#line 1636 
  int priority = 0;
  
#line 1638 
  if (cmd->cmd + 4294967250U <= 2U && ((mdev->dev)->caps.steering_mode != 2 || ! priv->port_up)) {
    
#line 1643 
    __retres = -22;
    
#line 1643 
    goto return_label;
  }
  else ;
  
#line 1645 
  switch (cmd->cmd) {
    int tmp_0;
    case (__u32)45: 
#line 1646 
    ;
    
#line 1647 
    cmd->data = (unsigned long long)priv->rx_ring_num;
    
#line 1648 
    goto ldv_57697;
    case (__u32)46: 
#line 1649 
    ;
    
#line 1650 
    tmp_0 = mlx4_en_get_num_flows(priv);
    
#line 1650 
    cmd->rule_cnt = (unsigned int)tmp_0;
    
#line 1651 
    goto ldv_57697;
    case (__u32)47: 
#line 1652 
    ;
    
#line 1653 
    err = mlx4_en_get_flow(dev,cmd,(int)cmd->fs.location);
    
#line 1654 
    goto ldv_57697;
    case (__u32)48: 
#line 1655 
    ;
    
#line 1656 
    goto ldv_57702;
    ldv_57701: 
#line 1657 
    ;
    
#line 1657 
    err = mlx4_en_get_flow(dev,cmd,i);
    
#line 1658 
    if (err == 0) {
      int tmp_1;
      
#line 1659 
      tmp_1 = priority;
      
#line 1659 
      priority += 1;
      
#line 1659 
      *(rule_locs + tmp_1) = (unsigned int)i;
    }
    else ;
    
#line 1660 
    i += 1;
    ldv_57702: 
#line 1661 
    ;
    
#line 1656 
    if ((err == 0 || err == -2) && cmd->rule_cnt > (unsigned int)priority) 
      
#line 1658 
      goto ldv_57701; else 
#line 1661 
                           goto ldv_57703;
    ldv_57703: 
#line 1662 
    ;
    
#line 1662 
    err = 0;
    
#line 1663 
    goto ldv_57697;
    default: 
#line 1664 
    ;
    
#line 1665 
    err = -95;
    
#line 1666 
    goto ldv_57697;
  }
  ldv_57697: 
#line 1669 
  ;
  
#line 1669 
  __retres = err;
  return_label: 
#line 1669 
                return __retres;
}


#line 1672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd)
{
  int __retres;
  
#line 1674 
  int err = 0;
  
#line 1675 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1676 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1678 
  if ((mdev->dev)->caps.steering_mode != 2 || ! priv->port_up) {
    
#line 1680 
    __retres = -22;
    
#line 1680 
    goto return_label;
  }
  else ;
  
#line 1682 
  switch (cmd->cmd) {
    case (__u32)50: 
#line 1683 
    ;
    
#line 1684 
    err = mlx4_en_flow_replace(dev,cmd);
    
#line 1685 
    goto ldv_57713;
    case (__u32)49: 
#line 1686 
    ;
    
#line 1687 
    err = mlx4_en_flow_detach(dev,cmd);
    
#line 1688 
    goto ldv_57713;
    default: 
#line 1689 
    ;
    
#line 1690 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Unsupported ethtool command. (%d)\n",cmd->cmd);
    
#line 1691 
    __retres = -22;
    
#line 1691 
    goto return_label;
  }
  ldv_57713: 
#line 1694 
  ;
  
#line 1694 
  __retres = err;
  return_label: 
#line 1694 
                return __retres;
}


#line 1697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static void mlx4_en_get_channels(struct net_device *dev, struct ethtool_channels *channel)
{
  
#line 1700 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1702 
  memset((void *)channel,0,36UL);
  
#line 1704 
  channel->max_rx = 128U;
  
#line 1705 
  channel->max_tx = 32U;
  
#line 1707 
  channel->rx_count = priv->rx_ring_num;
  
#line 1708 
  channel->tx_count = priv->tx_ring_num / 8U;
  
#line 1709 
  return;
}


#line 1711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_channels(struct net_device *dev, struct ethtool_channels *channel)
{
  int __retres;
  
#line 1714 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1715 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1716 
  int port_up = 0;
  
#line 1717 
  int err = 0;
  
#line 1719 
  if (((((channel->other_count != 0U || channel->combined_count != 0U) || channel->tx_count > 32U) || channel->rx_count > 128U) || channel->tx_count == 0U) || channel->rx_count == 0U) {
    
#line 1723 
    __retres = -22;
    
#line 1723 
    goto return_label;
  }
  else ;
  
#line 1725 
  ldv_mutex_lock_91(& mdev->state_lock);
  
#line 1726 
  if ((int)priv->port_up != 0) {
    
#line 1727 
    port_up = 1;
    
#line 1728 
    mlx4_en_stop_port(dev,1);
  }
  else ;
  
#line 1731 
  mlx4_en_free_resources(priv);
  
#line 1733 
  priv->num_tx_rings_p_up = (unsigned char)channel->tx_count;
  
#line 1734 
  priv->tx_ring_num = channel->tx_count * 8U;
  
#line 1735 
  priv->rx_ring_num = channel->rx_count;
  
#line 1737 
  err = mlx4_en_alloc_resources(priv);
  
#line 1738 
  if (err != 0) {
    
#line 1739 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed reallocating port resources\n");
    
#line 1740 
    goto out;
  }
  else ;
  
#line 1743 
  netif_set_real_num_tx_queues(dev,priv->tx_ring_num);
  
#line 1744 
  netif_set_real_num_rx_queues(dev,priv->rx_ring_num);
  
#line 1746 
  if ((unsigned int)dev->num_tc != 0U) 
#line 1747 
                                       mlx4_en_setup_tc(dev,(unsigned char)8); else ;
  
#line 1749 
  en_print("\001",(struct mlx4_en_priv const *)priv,"Using %d TX rings\n",priv->tx_ring_num);
  
#line 1750 
  en_print("\001",(struct mlx4_en_priv const *)priv,"Using %d RX rings\n",priv->rx_ring_num);
  
#line 1752 
  if (port_up != 0) {
    
#line 1753 
    err = mlx4_en_start_port(dev);
    
#line 1754 
    if (err != 0) 
#line 1755 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed starting port\n"); else ;
  }
  else ;
  
#line 1758 
  err = mlx4_en_moderation_update(priv);
  out: 
#line 1760 
  ;
  
#line 1761 
  ldv_mutex_unlock_92(& mdev->state_lock);
  
#line 1762 
  __retres = err;
  return_label: 
#line 1762 
                return __retres;
}


#line 1765  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_ts_info(struct net_device *dev, struct ethtool_ts_info *info)
{
  int __retres;
  int ret;
  
#line 1768 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1769 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1772 
  ret = ethtool_op_get_ts_info(dev,info);
  
#line 1773 
  if (ret != 0) {
    
#line 1774 
    __retres = ret;
    
#line 1774 
    goto return_label;
  }
  else ;
  
#line 1776 
  if (((mdev->dev)->caps.flags2 & 32ULL) != 0ULL) {
    
#line 1777 
    info->so_timestamping |= 69U;
    
#line 1782 
    info->tx_types = 3U;
    
#line 1786 
    info->rx_filters = 3U;
    
#line 1790 
    if (mdev->ptp_clock != (struct ptp_clock *)0) 
#line 1791 
                                                  info->phc_index = ptp_clock_index(mdev->ptp_clock); else ;
  }
  else ;
  
#line 1794 
  __retres = ret;
  return_label: 
#line 1794 
                return __retres;
}


#line 1797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_priv_flags(struct net_device *dev, u32 flags)
{
  int __retres;
  int i;
  char *tmp_0;
  
#line 1799 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1800 
  bool bf_enabled_new = (_Bool)((flags & 1U) != 0U);
  
#line 1801 
  bool bf_enabled_old = (_Bool)((priv->pflags & 1U) != 0U);
  
#line 1804 
  if ((int)bf_enabled_new == (int)bf_enabled_old) {
    
#line 1805 
    __retres = 0;
    
#line 1805 
    goto return_label;
  }
  else ;
  
#line 1807 
  if ((int)bf_enabled_new != 0) {
    
#line 1808 
    bool bf_supported = (_Bool)1;
    
#line 1810 
    i = 0;
    
#line 1810 
    goto ldv_57747;
    ldv_57746: 
#line 1811 
    ;
    
#line 1811 
    bf_supported = (_Bool)(((int)bf_supported & (int)(*(priv->tx_ring + i))->bf_alloced) != 0);
    
#line 1810 
    i += 1;
    ldv_57747: 
#line 1811 
    ;
    
#line 1810 
    if (priv->tx_ring_num > (unsigned int)i) 
#line 1812 
                                             goto ldv_57746; else 
#line 1815 
                                                                  goto ldv_57748;
    ldv_57748: 
#line 1816 
    ;
    
#line 1813 
    if (! bf_supported) {
      
#line 1814 
      en_print("\001",(struct mlx4_en_priv const *)priv,"BlueFlame is not supported\n");
      
#line 1815 
      __retres = -22;
      
#line 1815 
      goto return_label;
    }
    else ;
    
#line 1818 
    priv->pflags |= 1U;
  }
  else 
#line 1820 
       priv->pflags &= 4294967294U;
  
#line 1823 
  i = 0;
  
#line 1823 
  goto ldv_57750;
  ldv_57749: 
#line 1824 
  ;
  
#line 1824 
  (*(priv->tx_ring + i))->bf_enabled = bf_enabled_new;
  
#line 1823 
  i += 1;
  ldv_57750: 
#line 1824 
  ;
  
#line 1823 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 1825 
                                           goto ldv_57749; else 
#line 1828 
                                                                goto ldv_57751;
  ldv_57751: 
#line 1829 
  ;
  
#line 1826 
  if ((int)bf_enabled_new != 0) 
#line 1826 
                                tmp_0 = (char *)"Enabled"; else 
#line 1826 
                                                                tmp_0 = (char *)"Disabled";
  
#line 1826 
  ;
  
#line 1826 
  en_print("\001",(struct mlx4_en_priv const *)priv,"BlueFlame %s\n",tmp_0);
  
#line 1829 
  __retres = 0;
  return_label: 
#line 1829 
                return __retres;
}


#line 1832  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static u32 mlx4_en_get_priv_flags(struct net_device *dev)
{
  u32 __retres;
  
#line 1834 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1836 
  __retres = priv->pflags;
  
#line 1836 
  return __retres;
}


#line 1839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_tunable(struct net_device *dev, struct ethtool_tunable const *tuna, void *data)
{
  
#line 1843 
  struct mlx4_en_priv const *priv = netdev_priv((struct net_device const *)dev);
  
#line 1844 
  int ret = 0;
  
#line 1846 
  switch (tuna->id) {
    case (__u32)2: 
#line 1847 
    ;
    
#line 1848 
    *((u32 *)data) = (unsigned int)(priv->prof)->inline_thold;
    
#line 1849 
    goto ldv_57764;
    default: 
#line 1850 
    ;
    
#line 1851 
    ret = -22;
    
#line 1852 
    goto ldv_57764;
  }
  ldv_57764: 
#line 1855 
  ;
  
#line 1855 
  return ret;
}


#line 1858  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_tunable(struct net_device *dev, struct ethtool_tunable const *tuna, void const *data)
{
  int val;
  
#line 1862 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1863 
  int ret = 0;
  
#line 1865 
  switch (tuna->id) {
    case (__u32)2: 
#line 1866 
    ;
    
#line 1867 
    val = (int)*((u32 *)data);
    
#line 1868 
    if ((unsigned int)val + 4294967279U > 87U) 
#line 1869 
                                               ret = -22; else 
#line 1871 
                                                               (priv->prof)->inline_thold = val;
    
#line 1872 
    goto ldv_57775;
    default: 
#line 1873 
    ;
    
#line 1874 
    ret = -22;
    
#line 1875 
    goto ldv_57775;
  }
  ldv_57775: 
#line 1878 
  ;
  
#line 1878 
  return ret;
}


#line 1881  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_module_info(struct net_device *dev, struct ethtool_modinfo *modinfo)
{
  int __retres;
  int ret;
  u8 data[4U];
  
#line 1884 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1885 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1890 
  ret = mlx4_get_module_info(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned short)0,(unsigned short)2,(u8 *)(& data));
  
#line 1892 
  if (ret <= 1) {
    
#line 1893 
    __retres = -5;
    
#line 1893 
    goto return_label;
  }
  else ;
  
#line 1895 
  switch ((int)data[0]) {
    case 12: 
#line 1896 
    ;
    
#line 1897 
    modinfo->type = 4U;
    
#line 1898 
    modinfo->eeprom_len = 256U;
    
#line 1899 
    goto ldv_57786;
    case 13: 
#line 1900 
    ;
    
#line 1901 
    if ((unsigned int)data[1] > 2U) {
      
#line 1902 
      modinfo->type = 3U;
      
#line 1903 
      modinfo->eeprom_len = 256U;
    }
    else {
      
#line 1905 
      modinfo->type = 4U;
      
#line 1906 
      modinfo->eeprom_len = 256U;
    }
    
#line 1908 
    goto ldv_57786;
    case 17: 
#line 1909 
    ;
    
#line 1910 
    modinfo->type = 3U;
    
#line 1911 
    modinfo->eeprom_len = 256U;
    
#line 1912 
    goto ldv_57786;
    case 3: 
#line 1913 
    ;
    
#line 1914 
    modinfo->type = 2U;
    
#line 1915 
    modinfo->eeprom_len = 512U;
    
#line 1916 
    goto ldv_57786;
    default: 
#line 1917 
    ;
    
#line 1918 
    __retres = -38;
    
#line 1918 
    goto return_label;
  }
  ldv_57786: 
#line 1921 
  ;
  
#line 1921 
  __retres = 0;
  return_label: 
#line 1921 
                return __retres;
}


#line 1924  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_get_module_eeprom(struct net_device *dev, struct ethtool_eeprom *ee, u8 *data)
{
  int __retres;
  int ret;
  
#line 1928 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1929 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1930 
  int offset = (int)ee->offset;
  
#line 1931 
  int i = 0;
  
#line 1933 
  if (ee->len == 0U) {
    
#line 1934 
    __retres = -22;
    
#line 1934 
    goto return_label;
  }
  else ;
  
#line 1936 
  memset((void *)data,0,(unsigned long)ee->len);
  
#line 1938 
  goto ldv_57802;
  ldv_57801: 
#line 1939 
  ;
  
#line 1939 
  if ((priv->msg_enable & 1U) != 0U) 
#line 1939 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"mlx4_get_module_info i(%d) offset(%d) len(%d)\n",i,offset,ee->len - (unsigned int)i); else ;
  
#line 1943 
  ret = mlx4_get_module_info(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned short)((int)((unsigned short)offset)),(unsigned short)((int)((unsigned short)ee->len) - (int)((unsigned short)i)),data + i);
  
#line 1946 
  if (ret == 0) {
    
#line 1947 
    __retres = 0;
    
#line 1947 
    goto return_label;
  }
  else ;
  
#line 1949 
  if (ret < 0) {
    
#line 1950 
    en_print("\001",(struct mlx4_en_priv const *)priv,"mlx4_get_module_info i(%d) offset(%d) bytes_to_read(%d) - FAILED (0x%x)\n",i,offset,ee->len - (unsigned int)i,ret);
    
#line 1953 
    __retres = 0;
    
#line 1953 
    goto return_label;
  }
  else ;
  
#line 1956 
  i += ret;
  
#line 1957 
  offset += ret;
  ldv_57802: 
#line 1958 
  ;
  
#line 1938 
  if (ee->len > (unsigned int)i) 
#line 1940 
                                 goto ldv_57801; else 
#line 1943 
                                                      goto ldv_57803;
  ldv_57803: 
#line 1944 
  ;
  
#line 1959 
  __retres = 0;
  return_label: 
#line 1959 
                return __retres;
}


#line 1962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
static int mlx4_en_set_phys_id(struct net_device *dev, enum ethtool_phys_id_state state)
{
  int __retres;
  int err;
  u16 beacon_duration;
  
#line 1967 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1968 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1970 
  if (((mdev->dev)->caps.flags2 & 134217728ULL) == 0ULL) {
    
#line 1971 
    __retres = -95;
    
#line 1971 
    goto return_label;
  }
  else ;
  
#line 1973 
  switch ((unsigned int)state) {
    case (unsigned int)1: 
#line 1974 
    ;
    
#line 1975 
    beacon_duration = (unsigned short)65535U;
    
#line 1976 
    goto ldv_57813;
    case (unsigned int)0: 
#line 1977 
    ;
    
#line 1978 
    beacon_duration = (unsigned short)0U;
    
#line 1979 
    goto ldv_57813;
    default: 
#line 1980 
    ;
    
#line 1981 
    __retres = -95;
    
#line 1981 
    goto return_label;
  }
  ldv_57813: 
#line 1984 
  ;
  
#line 1984 
  err = mlx4_SET_PORT_BEACON(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned short)((int)beacon_duration));
  
#line 1985 
  __retres = err;
  return_label: 
#line 1985 
                return __retres;
}


#line 1988  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c"
struct ethtool_ops const mlx4_en_ethtool_ops = {.get_settings = & mlx4_en_get_settings, .set_settings = & mlx4_en_set_settings, .get_drvinfo = & mlx4_en_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = & mlx4_en_get_wol, .set_wol = & mlx4_en_set_wol, .get_msglevel = & mlx4_en_get_msglevel, .set_msglevel = & mlx4_en_set_msglevel, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & mlx4_en_get_coalesce, .set_coalesce = & mlx4_en_set_coalesce, .get_ringparam = & mlx4_en_get_ringparam, .set_ringparam = & mlx4_en_set_ringparam, .get_pauseparam = & mlx4_en_get_pauseparam, .set_pauseparam = & mlx4_en_set_pauseparam, .self_test = & mlx4_en_self_test, .get_strings = & mlx4_en_get_strings, .set_phys_id = & mlx4_en_set_phys_id, .get_ethtool_stats = & mlx4_en_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = & mlx4_en_get_priv_flags, .set_priv_flags = & mlx4_en_set_priv_flags, .get_sset_count = & mlx4_en_get_sset_count, .get_rxnfc = & mlx4_en_get_rxnfc, .set_rxnfc = & mlx4_en_set_rxnfc, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = & mlx4_en_get_rxfh_key_size, .get_rxfh_indir_size = & mlx4_en_get_rxfh_indir_size, .get_rxfh = & mlx4_en_get_rxfh, .set_rxfh = & mlx4_en_set_rxfh, .get_channels = & mlx4_en_get_channels, .set_channels = & mlx4_en_set_channels, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = & mlx4_en_get_ts_info, .get_module_info = & mlx4_en_get_module_info, .get_module_eeprom = & mlx4_en_get_module_eeprom, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = & mlx4_en_get_tunable, .set_tunable = & mlx4_en_set_tunable};

#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_29)(struct net_device *) = & ethtool_op_get_link;

#line 68  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_get_rxnfc_21(struct net_device *arg0, struct ethtool_rxnfc *arg1, unsigned int *arg2)
{
  int tmp;
  
#line 69 
  tmp = mlx4_en_get_rxnfc(arg0,arg1,arg2);
  
#line 69 
  return tmp;
}


#line 73  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_get_module_info_42(struct net_device *arg0, struct ethtool_modinfo *arg1)
{
  int tmp;
  
#line 74 
  tmp = mlx4_en_get_module_info(arg0,arg1);
  
#line 74 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
unsigned int ldv_emg_wrapper_mlx4_en_get_priv_flags_22(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 79 
  tmp = mlx4_en_get_priv_flags(arg0);
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
void ldv_emg_wrapper_mlx4_en_get_channels_35(struct net_device *arg0, struct ethtool_channels *arg1)
{
  
#line 84 
  mlx4_en_get_channels(arg0,arg1);
  
#line 85 
  return;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
unsigned int ldv_emg_wrapper_mlx4_en_get_rxfh_key_size_55(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 89 
  tmp = mlx4_en_get_rxfh_key_size(arg0);
  
#line 89 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_rxfh_38(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char arg3)
{
  int tmp;
  
#line 94 
  tmp = mlx4_en_set_rxfh(arg0,(u32 const *)arg1,(u8 const *)arg2,(unsigned char)((int)arg3));
  
#line 94 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_priv_flags_8(struct net_device *arg0, unsigned int arg1)
{
  int tmp;
  
#line 99 
  tmp = mlx4_en_set_priv_flags(arg0,arg1);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
void ldv_emg_wrapper_mlx4_en_get_ringparam_32(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 104 
  mlx4_en_get_ringparam(arg0,arg1);
  
#line 105 
  return;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
void ldv_emg_wrapper_mlx4_en_set_msglevel_31(struct net_device *arg0, unsigned int arg1)
{
  
#line 109 
  mlx4_en_set_msglevel(arg0,arg1);
  
#line 110 
  return;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_wol_17(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 114 
  tmp = mlx4_en_set_wol(arg0,arg1);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_coalesce_56(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 119 
  tmp = mlx4_en_set_coalesce(arg0,arg1);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_ringparam_10(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 124 
  tmp = mlx4_en_set_ringparam(arg0,arg1);
  
#line 124 
  return tmp;
}


#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_get_settings_40(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 129 
  tmp = mlx4_en_get_settings(arg0,arg1);
  
#line 129 
  return tmp;
}


#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_get_module_eeprom_47(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 134 
  tmp = mlx4_en_get_module_eeprom(arg0,arg1,arg2);
  
#line 134 
  return tmp;
}


#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
unsigned int ldv_emg_wrapper_mlx4_en_get_rxfh_indir_size_30(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 139 
  tmp = mlx4_en_get_rxfh_indir_size(arg0);
  
#line 139 
  return tmp;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
void ldv_emg_wrapper_mlx4_en_get_pauseparam_27(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 144 
  mlx4_en_get_pauseparam(arg0,arg1);
  
#line 145 
  return;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_get_tunable_51(struct net_device *arg0, struct ethtool_tunable *arg1, void *arg2)
{
  int tmp;
  
#line 149 
  tmp = mlx4_en_get_tunable(arg0,(struct ethtool_tunable const *)arg1,arg2);
  
#line 149 
  return tmp;
}


#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_rxnfc_6(struct net_device *arg0, struct ethtool_rxnfc *arg1)
{
  int tmp;
  
#line 154 
  tmp = mlx4_en_set_rxnfc(arg0,arg1);
  
#line 154 
  return tmp;
}


#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_tunable_19(struct net_device *arg0, struct ethtool_tunable *arg1, void *arg2)
{
  int tmp;
  
#line 159 
  tmp = mlx4_en_set_tunable(arg0,(struct ethtool_tunable const *)arg1,(void const *)arg2);
  
#line 159 
  return tmp;
}


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
void ldv_emg_wrapper_mlx4_en_self_test_14(struct net_device *arg0, struct ethtool_test *arg1, unsigned long long *arg2)
{
  
#line 164 
  mlx4_en_self_test(arg0,arg1,arg2);
  
#line 165 
  return;
}


#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_phys_id_3(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 169 
  tmp = mlx4_en_set_phys_id(arg0,arg1);
  
#line 169 
  return tmp;
}


#line 173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
void ldv_emg_wrapper_mlx4_en_get_ethtool_stats_25(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 174 
  mlx4_en_get_ethtool_stats(arg0,arg1,arg2);
  
#line 175 
  return;
}


#line 178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_settings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 179 
  tmp = mlx4_en_set_settings(arg0,arg1);
  
#line 179 
  return tmp;
}


#line 183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_get_coalesce_46(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 184 
  tmp = mlx4_en_get_coalesce(arg0,arg1);
  
#line 184 
  return tmp;
}


#line 188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_channels_37(struct net_device *arg0, struct ethtool_channels *arg1)
{
  int tmp;
  
#line 189 
  tmp = mlx4_en_set_channels(arg0,arg1);
  
#line 189 
  return tmp;
}


#line 193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
void ldv_emg_wrapper_mlx4_en_get_drvinfo_7(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 194 
  mlx4_en_get_drvinfo(arg0,arg1);
  
#line 195 
  return;
}


#line 198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
unsigned int ldv_emg_wrapper_mlx4_en_get_msglevel_11(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 199 
  tmp = mlx4_en_get_msglevel(arg0);
  
#line 199 
  return tmp;
}


#line 203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_get_rxfh_23(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char *arg3)
{
  int tmp;
  
#line 204 
  tmp = mlx4_en_get_rxfh(arg0,arg1,arg2,arg3);
  
#line 204 
  return tmp;
}


#line 208  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_set_pauseparam_57(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 209 
  tmp = mlx4_en_set_pauseparam(arg0,arg1);
  
#line 209 
  return tmp;
}


#line 213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
void ldv_emg_wrapper_mlx4_en_get_strings_43(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 214 
  mlx4_en_get_strings(arg0,arg1,arg2);
  
#line 215 
  return;
}


#line 218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_get_ts_info_54(struct net_device *arg0, struct ethtool_ts_info *arg1)
{
  int tmp;
  
#line 219 
  tmp = mlx4_en_get_ts_info(arg0,arg1);
  
#line 219 
  return tmp;
}


#line 223  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
int ldv_emg_wrapper_mlx4_en_get_sset_count_50(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 224 
  tmp = mlx4_en_get_sset_count(arg0,arg1);
  
#line 224 
  return tmp;
}


#line 228  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
void ldv_emg_wrapper_mlx4_en_get_wol_44(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 229 
  mlx4_en_get_wol(arg0,arg1);
  
#line 230 
  return;
}


#line 679  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 682 
  tmp = ldv_kzalloc(size,flags);
  
#line 682 
  return tmp;
}


#line 1010  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_spin_lock_bh_83(spinlock_t *lock)
{
  
#line 1014 
  ldv_spin_model_lock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 1016 
  spin_lock_bh(lock);
  
#line 1017 
  return;
}


#line 1020  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_spin_unlock_bh_84(spinlock_t *lock)
{
  
#line 1024 
  ldv_spin_model_unlock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 1026 
  spin_unlock_bh(lock);
  
#line 1027 
  return;
}


#line 1030  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_mutex_lock_85(struct mutex *ldv_func_arg1)
{
  
#line 1034 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1035 
  return;
}


#line 1038  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_mutex_unlock_86(struct mutex *ldv_func_arg1)
{
  
#line 1042 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1043 
  return;
}


#line 1046  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_mutex_lock_87(struct mutex *ldv_func_arg1)
{
  
#line 1050 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1051 
  return;
}


#line 1054  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_mutex_unlock_88(struct mutex *ldv_func_arg1)
{
  
#line 1058 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1059 
  return;
}


#line 1062  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_mutex_lock_89(struct mutex *ldv_func_arg1)
{
  
#line 1066 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1067 
  return;
}


#line 1070  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_mutex_unlock_90(struct mutex *ldv_func_arg1)
{
  
#line 1074 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1075 
  return;
}


#line 1078  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_mutex_lock_91(struct mutex *ldv_func_arg1)
{
  
#line 1082 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1083 
  return;
}


#line 1086  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_ethtool.c.aux"
static void ldv_mutex_unlock_92(struct mutex *ldv_func_arg1)
{
  
#line 1090 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1091 
  return;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 399 
static void ldv_spin_lock_bh_82(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_84(spinlock_t *lock);


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  
#line 414 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 415 
  return;
}


#line 448 
static void ldv_spin_unlock_bh_83(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_85(spinlock_t *lock);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 983  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
__inline static int mlx4_is_master(struct mlx4_dev *dev)
{
  int __retres;
  
#line 985 
  __retres = (int)dev->flags & 4;
  
#line 985 
  return __retres;
}


#line 1365 
int mlx4_get_default_counter_index(struct mlx4_dev *, int);


#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cmd.h"
int __mlx4_cmd(struct mlx4_dev *, u64, u64 *, int, u32, u8, u16, unsigned long, int);


#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cmd.h"
__inline static int mlx4_cmd(struct mlx4_dev *dev, u64 in_param, u32 in_modifier, u8 op_modifier, u16 op, unsigned long timeout, int native)
{
  int tmp;
  
#line 276 
  tmp = __mlx4_cmd(dev,in_param,(u64 *)0ULL,0,in_modifier,(unsigned char)((int)op_modifier),(unsigned short)((int)op),timeout,native);
  
#line 276 
  return tmp;
}


#line 281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cmd.h"
__inline static int mlx4_cmd_box(struct mlx4_dev *dev, u64 in_param, u64 out_param, u32 in_modifier, u8 op_modifier, u16 op, unsigned long timeout, int native)
{
  int tmp;
  
#line 285 
  tmp = __mlx4_cmd(dev,in_param,& out_param,0,in_modifier,(unsigned char)((int)op_modifier),(unsigned short)((int)op),timeout,native);
  
#line 285 
  return tmp;
}


#line 302 
struct mlx4_cmd_mailbox *mlx4_alloc_cmd_mailbox(struct mlx4_dev *);


#line 303 
void mlx4_free_cmd_mailbox(struct mlx4_dev *, struct mlx4_cmd_mailbox *);


#line 305 
int mlx4_get_counter_stats(struct mlx4_dev *, int, struct mlx4_counter *, int);


#line 810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
int mlx4_SET_VLAN_FLTR(struct mlx4_dev *dev, struct mlx4_en_priv *priv);


#line 812 
int mlx4_en_DUMP_ETH_STATS(struct mlx4_en_dev *mdev, u8 port, u8 reset);


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_port.c"
int mlx4_SET_VLAN_FLTR(struct mlx4_dev *dev, struct mlx4_en_priv *priv)
{
  int __retres;
  struct mlx4_cmd_mailbox *mailbox;
  struct mlx4_set_vlan_fltr_mbox *filter;
  int i;
  int j;
  u32 entry;
  bool tmp_0;
  int tmp_2;
  int tmp_1;
  
#line 50 
  int index = 0;
  
#line 52 
  int err = 0;
  
#line 54 
  mailbox = mlx4_alloc_cmd_mailbox(dev);
  
#line 55 
  tmp_0 = IS_ERR((void const *)mailbox);
  
#line 55 
  if ((int)tmp_0 != 0) {
    long tmp;
    
#line 56 
    tmp = PTR_ERR((void const *)mailbox);
    
#line 56 
    __retres = (int)tmp;
    
#line 56 
    goto return_label;
  }
  else ;
  
#line 58 
  filter = (struct mlx4_set_vlan_fltr_mbox *)mailbox->buf;
  
#line 59 
  i = 127;
  
#line 59 
  goto ldv_50690;
  ldv_50689: 
#line 60 
  ;
  
#line 60 
  entry = 0U;
  
#line 61 
  j = 0;
  
#line 61 
  goto ldv_50687;
  ldv_50686: 
#line 62 
  ;
  
#line 62 
  ;
  
#line 62 
  tmp_1 = index;
  
#line 62 
  index += 1;
  
#line 62 
  ;
  
#line 62 
  tmp_2 = variable_test_bit((long)tmp_1,(unsigned long const volatile *)(& priv->active_vlans));
  
#line 62 
  if (tmp_2 != 0) 
#line 63 
                  entry = (unsigned int)(1 << j) | entry; else ;
  
#line 61 
  j += 1;
  ldv_50687: 
#line 62 
  ;
  
#line 61 
  if (j <= 31) 
#line 63 
               goto ldv_50686; else 
#line 66 
                                    goto ldv_50688;
  ldv_50688: 
#line 67 
  ;
  
#line 64 
  if (0 != 0) 
#line 64 
              filter->entry[i] = (((entry << 24) | ((entry << 8) & 16711680U)) | ((entry >> 8) & 65280U)) | (entry >> 24); else 
                                                                    
#line 64 
                                                                    filter->entry[i] = __fswab32(entry);
  
#line 59 
  i -= 1;
  ldv_50690: 
#line 60 
  ;
  
#line 59 
  if (i >= 0) 
#line 61 
              goto ldv_50689; else 
#line 64 
                                   goto ldv_50691;
  ldv_50691: 
#line 65 
  ;
  
#line 66 
  err = mlx4_cmd(dev,mailbox->dma,(unsigned int)priv->port,(unsigned char)0,(unsigned short)71,60000UL,0);
  
#line 68 
  mlx4_free_cmd_mailbox(dev,mailbox);
  
#line 69 
  __retres = err;
  return_label: 
#line 69 
                return __retres;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_port.c"
int mlx4_en_QUERY_PORT(struct mlx4_en_dev *mdev, u8 port)
{
  int __retres;
  struct mlx4_en_query_port_context *qport_context;
  struct mlx4_cmd_mailbox *mailbox;
  int err;
  bool tmp_1;
  
#line 75 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)mdev->pndev[(int)port]);
  
#line 76 
  struct mlx4_en_port_state *state = & priv->port_state;
  
#line 80 
  mailbox = mlx4_alloc_cmd_mailbox(mdev->dev);
  
#line 81 
  tmp_1 = IS_ERR((void const *)mailbox);
  
#line 81 
  if ((int)tmp_1 != 0) {
    long tmp_0;
    
#line 82 
    tmp_0 = PTR_ERR((void const *)mailbox);
    
#line 82 
    __retres = (int)tmp_0;
    
#line 82 
    goto return_label;
  }
  else ;
  
#line 83 
  err = mlx4_cmd_box(mdev->dev,0ULL,mailbox->dma,(unsigned int)port,(unsigned char)0,(unsigned short)67,60000UL,0);
  
#line 86 
  if (err != 0) 
#line 87 
                goto out; else ;
  
#line 88 
  qport_context = (struct mlx4_en_query_port_context *)mailbox->buf;
  
#line 92 
  state->link_state = (int)qport_context->link_up < 0;
  
#line 93 
  switch ((int)qport_context->link_speed & 111) {
    case 4: 
#line 94 
    ;
    
#line 95 
    state->link_speed = 100;
    
#line 96 
    goto ldv_50703;
    case 2: 
#line 97 
    ;
    
#line 98 
    state->link_speed = 1000;
    
#line 99 
    goto ldv_50703;
    case 0: 
#line 100 
    ;
    case 1: 
#line 101 
    ;
    
#line 102 
    state->link_speed = 10000;
    
#line 103 
    goto ldv_50703;
    case 8: 
#line 104 
    ;
    
#line 105 
    state->link_speed = 20000;
    
#line 106 
    goto ldv_50703;
    case 64: 
#line 107 
    ;
    
#line 108 
    state->link_speed = 40000;
    
#line 109 
    goto ldv_50703;
    case 32: 
#line 110 
    ;
    
#line 111 
    state->link_speed = 56000;
    
#line 112 
    goto ldv_50703;
    default: 
#line 113 
    ;
    
#line 114 
    state->link_speed = -1;
    
#line 115 
    goto ldv_50703;
  }
  ldv_50703: 
#line 118 
  ;
  
#line 118 
  state->transceiver = (int)qport_context->transceiver;
  
#line 120 
  state->flags = 0U;
  
#line 121 
  state->flags |= (unsigned int)((int)qport_context->link_up >> 6) & 1U;
  
#line 123 
  state->flags |= (unsigned int)((int)qport_context->autoneg >> 6) & 2U;
  out: 
#line 126 
  ;
  
#line 127 
  mlx4_free_cmd_mailbox(mdev->dev,mailbox);
  
#line 128 
  __retres = err;
  return_label: 
#line 128 
                return __retres;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_port.c"
static unsigned long en_stats_adder(__be64 *start, __be64 *next, int num)
{
  int i;
  unsigned long long tmp_0;
  
#line 137 
  __be64 *curr = start;
  
#line 138 
  unsigned long ret = 0UL;
  
#line 140 
  int offset = (int)(((long)next - (long)start) / 8L);
  
#line 142 
  i = 0;
  
#line 142 
  goto ldv_50721;
  ldv_50720: 
#line 143 
  ;
  
#line 143 
  if (0 != 0) 
#line 143 
              tmp_0 = (((((((*curr << 56) | ((*curr << 40) & 71776119061217280ULL)) | ((*curr << 24) & 280375465082880ULL)) | ((*curr << 8) & 1095216660480ULL)) | ((*curr >> 8) & 4278190080ULL)) | ((*curr >> 24) & 16711680ULL)) | ((*curr >> 40) & 65280ULL)) | (*curr >> 56); else 
                                                                    
#line 143 
                                                                    tmp_0 = __fswab64(*curr);
  
#line 143 
  ret = (unsigned long)(tmp_0 + (unsigned long long)ret);
  
#line 144 
  curr += offset;
  
#line 142 
  i += 1;
  ldv_50721: 
#line 143 
  ;
  
#line 142 
  if (i < num) 
#line 144 
               goto ldv_50720; else 
#line 147 
                                    goto ldv_50722;
  ldv_50722: 
#line 148 
  ;
  
#line 147 
  return ret;
}


#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_port.c"
int mlx4_en_DUMP_ETH_STATS(struct mlx4_en_dev *mdev, u8 port, u8 reset)
{
  int __retres;
  struct mlx4_counter tmp_counter_stats;
  struct mlx4_en_stat_out_mbox *mlx4_en_stats;
  struct mlx4_en_stat_out_flow_control_mbox *flowstats;
  struct mlx4_cmd_mailbox *mailbox;
  int err;
  int i;
  int counter_index;
  bool tmp_1;
  int tmp_2;
  unsigned long long tmp_4;
  unsigned int tmp_6;
  unsigned int tmp_8;
  unsigned int tmp_10;
  unsigned long long tmp_12;
  unsigned long long tmp_14;
  unsigned int tmp_16;
  unsigned long tmp_17;
  unsigned int tmp_19;
  unsigned int tmp_21;
  unsigned int tmp_23;
  unsigned int tmp_25;
  unsigned int tmp_27;
  unsigned int tmp_29;
  unsigned int tmp_31;
  unsigned int tmp_33;
  unsigned long long tmp_35;
  unsigned long long tmp_37;
  unsigned long long tmp_39;
  unsigned long long tmp_41;
  unsigned long long tmp_43;
  unsigned long long tmp_45;
  unsigned long long tmp_47;
  unsigned long long tmp_49;
  unsigned long long tmp_51;
  unsigned long long tmp_53;
  unsigned long long tmp_55;
  unsigned long long tmp_57;
  unsigned long long tmp_59;
  unsigned long long tmp_61;
  unsigned long long tmp_63;
  unsigned long long tmp_65;
  unsigned long long tmp_67;
  unsigned long long tmp_69;
  unsigned long long tmp_71;
  unsigned long long tmp_73;
  unsigned long long tmp_75;
  unsigned long long tmp_77;
  unsigned long long tmp_79;
  unsigned long long tmp_81;
  unsigned long long tmp_83;
  unsigned long long tmp_85;
  unsigned long long tmp_87;
  unsigned long long tmp_89;
  unsigned long long tmp_91;
  unsigned long long tmp_93;
  unsigned long long tmp_95;
  unsigned long long tmp_97;
  unsigned long long tmp_99;
  unsigned long long tmp_101;
  unsigned long long tmp_103;
  unsigned long long tmp_105;
  unsigned long long tmp_107;
  unsigned long long tmp_109;
  
#line 155 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)mdev->pndev[(int)port]);
  
#line 156 
  struct net_device_stats *stats = & priv->stats;
  
#line 158 
  u64 in_mod = (unsigned long long)(((int)reset << 8) | (int)port);
  
#line 162 
  mailbox = mlx4_alloc_cmd_mailbox(mdev->dev);
  
#line 163 
  tmp_1 = IS_ERR((void const *)mailbox);
  
#line 163 
  if ((int)tmp_1 != 0) {
    long tmp_0;
    
#line 164 
    tmp_0 = PTR_ERR((void const *)mailbox);
    
#line 164 
    __retres = (int)tmp_0;
    
#line 164 
    goto return_label;
  }
  else ;
  
#line 165 
  err = mlx4_cmd_box(mdev->dev,0ULL,mailbox->dma,(unsigned int)in_mod,(unsigned char)0,(unsigned short)73,60000UL,0);
  
#line 168 
  if (err != 0) 
#line 169 
                goto out; else ;
  
#line 171 
  mlx4_en_stats = (struct mlx4_en_stat_out_mbox *)mailbox->buf;
  
#line 173 
  ldv_spin_lock_bh_82(& priv->stats_lock);
  
#line 175 
  stats->rx_packets = 0UL;
  
#line 176 
  stats->rx_bytes = 0UL;
  
#line 177 
  priv->port_stats.rx_chksum_good = 0UL;
  
#line 178 
  priv->port_stats.rx_chksum_none = 0UL;
  
#line 179 
  priv->port_stats.rx_chksum_complete = 0UL;
  
#line 180 
  i = 0;
  
#line 180 
  goto ldv_50740;
  ldv_50739: 
#line 181 
  ;
  
#line 181 
  stats->rx_packets += (priv->rx_ring[i])->packets;
  
#line 182 
  stats->rx_bytes += (priv->rx_ring[i])->bytes;
  
#line 183 
  priv->port_stats.rx_chksum_good += (priv->rx_ring[i])->csum_ok;
  
#line 184 
  priv->port_stats.rx_chksum_none += (priv->rx_ring[i])->csum_none;
  
#line 185 
  priv->port_stats.rx_chksum_complete += (priv->rx_ring[i])->csum_complete;
  
#line 180 
  i += 1;
  ldv_50740: 
#line 181 
  ;
  
#line 180 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 182 
                                           goto ldv_50739; else 
#line 185 
                                                                goto ldv_50741;
  ldv_50741: 
#line 186 
  ;
  
#line 187 
  stats->tx_packets = 0UL;
  
#line 188 
  stats->tx_bytes = 0UL;
  
#line 189 
  priv->port_stats.tx_chksum_offload = 0UL;
  
#line 190 
  priv->port_stats.queue_stopped = 0UL;
  
#line 191 
  priv->port_stats.wake_queue = 0UL;
  
#line 192 
  priv->port_stats.tso_packets = 0UL;
  
#line 193 
  priv->port_stats.xmit_more = 0UL;
  
#line 195 
  i = 0;
  
#line 195 
  goto ldv_50744;
  ldv_50743: 
#line 196 
  ;
  {
    
#line 196 
    struct mlx4_en_tx_ring const *ring = (struct mlx4_en_tx_ring const *)*(priv->tx_ring + i);
    
#line 198 
    stats->tx_packets += ring->packets;
    
#line 199 
    stats->tx_bytes += ring->bytes;
    
#line 200 
    priv->port_stats.tx_chksum_offload += ring->tx_csum;
    
#line 201 
    priv->port_stats.queue_stopped += ring->queue_stopped;
    
#line 202 
    priv->port_stats.wake_queue += ring->wake_queue;
    
#line 203 
    priv->port_stats.tso_packets += ring->tso_packets;
    
#line 204 
    priv->port_stats.xmit_more += ring->xmit_more;
  }
  
#line 195 
  i += 1;
  ldv_50744: 
#line 196 
  ;
  
#line 195 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 197 
                                           goto ldv_50743; else 
#line 200 
                                                                goto ldv_50745;
  ldv_50745: 
#line 201 
  ;
  
#line 206 
  tmp_2 = mlx4_is_master(mdev->dev);
  
#line 206 
  if (tmp_2 != 0) {
    
#line 207 
    stats->rx_packets = en_stats_adder(& mlx4_en_stats->RTOT_prio_0,& mlx4_en_stats->RTOT_prio_1,9);
    
#line 210 
    stats->tx_packets = en_stats_adder(& mlx4_en_stats->TTOT_prio_0,& mlx4_en_stats->TTOT_prio_1,9);
    
#line 213 
    stats->rx_bytes = en_stats_adder(& mlx4_en_stats->ROCT_prio_0,& mlx4_en_stats->ROCT_prio_1,9);
    
#line 216 
    stats->tx_bytes = en_stats_adder(& mlx4_en_stats->TOCT_prio_0,& mlx4_en_stats->TOCT_prio_1,9);
  }
  else ;
  
#line 228 
  if (0 != 0) 
#line 228 
              tmp_4 = (((((((mlx4_en_stats->PCS << 56) | ((mlx4_en_stats->PCS << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->PCS << 24) & 280375465082880ULL)) | ((mlx4_en_stats->PCS << 8) & 1095216660480ULL)) | ((mlx4_en_stats->PCS >> 8) & 4278190080ULL)) | ((mlx4_en_stats->PCS >> 24) & 16711680ULL)) | ((mlx4_en_stats->PCS >> 40) & 65280ULL)) | (mlx4_en_stats->PCS >> 56); else 
                                                                    
#line 222 
                                                                    tmp_4 = __fswab64(mlx4_en_stats->PCS);
  
#line 223 
  if (0 != 0) 
#line 223 
              tmp_6 = (((mlx4_en_stats->RJBBR << 24) | ((mlx4_en_stats->RJBBR << 8) & 16711680U)) | ((mlx4_en_stats->RJBBR >> 8) & 65280U)) | (mlx4_en_stats->RJBBR >> 24); else 
                                                                    
#line 223 
                                                                    tmp_6 = __fswab32(mlx4_en_stats->RJBBR);
  
#line 224 
  if (0 != 0) 
#line 224 
              tmp_8 = (((mlx4_en_stats->RCRC << 24) | ((mlx4_en_stats->RCRC << 8) & 16711680U)) | ((mlx4_en_stats->RCRC >> 8) & 65280U)) | (mlx4_en_stats->RCRC >> 24); else 
                                                                    
#line 224 
                                                                    tmp_8 = __fswab32(mlx4_en_stats->RCRC);
  
#line 225 
  if (0 != 0) 
#line 225 
              tmp_10 = (((mlx4_en_stats->RRUNT << 24) | ((mlx4_en_stats->RRUNT << 8) & 16711680U)) | ((mlx4_en_stats->RRUNT >> 8) & 65280U)) | (mlx4_en_stats->RRUNT >> 24); else 
                                                                    
#line 225 
                                                                    tmp_10 = __fswab32(mlx4_en_stats->RRUNT);
  
#line 225 
  if (0 != 0) 
#line 225 
              tmp_12 = (((((((mlx4_en_stats->RInRangeLengthErr << 56) | ((mlx4_en_stats->RInRangeLengthErr << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RInRangeLengthErr << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RInRangeLengthErr << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RInRangeLengthErr >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RInRangeLengthErr >> 24) & 16711680ULL)) | ((mlx4_en_stats->RInRangeLengthErr >> 40) & 65280ULL)) | (mlx4_en_stats->RInRangeLengthErr >> 56); else 
                                                                    
#line 226 
                                                                    tmp_12 = __fswab64(mlx4_en_stats->RInRangeLengthErr);
  
#line 226 
  if (0 != 0) 
#line 226 
              tmp_14 = (((((((mlx4_en_stats->ROutRangeLengthErr << 56) | ((mlx4_en_stats->ROutRangeLengthErr << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROutRangeLengthErr << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROutRangeLengthErr << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROutRangeLengthErr >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROutRangeLengthErr >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROutRangeLengthErr >> 40) & 65280ULL)) | (mlx4_en_stats->ROutRangeLengthErr >> 56); else 
                                                                    
#line 227 
                                                                    tmp_14 = __fswab64(mlx4_en_stats->ROutRangeLengthErr);
  
#line 228 
  if (0 != 0) 
#line 228 
              tmp_16 = (((mlx4_en_stats->RSHORT << 24) | ((mlx4_en_stats->RSHORT << 8) & 16711680U)) | ((mlx4_en_stats->RSHORT >> 8) & 65280U)) | (mlx4_en_stats->RSHORT >> 24); else 
                                                                    
#line 228 
                                                                    tmp_16 = __fswab32(mlx4_en_stats->RSHORT);
  
#line 229 
  tmp_17 = en_stats_adder(& mlx4_en_stats->RGIANT_prio_0,& mlx4_en_stats->RGIANT_prio_1,9);
  
#line 222 
  stats->rx_errors = (unsigned long)(((((((tmp_4 + (unsigned long long)tmp_6) + (unsigned long long)tmp_8) + (unsigned long long)tmp_10) + tmp_12) + tmp_14) + (unsigned long long)tmp_16) + (unsigned long long)tmp_17);
  
#line 232 
  stats->tx_errors = en_stats_adder(& mlx4_en_stats->TGIANT_prio_0,& mlx4_en_stats->TGIANT_prio_1,9);
  
#line 235 
  stats->multicast = en_stats_adder(& mlx4_en_stats->MCAST_prio_0,& mlx4_en_stats->MCAST_prio_1,9);
  
#line 238 
  stats->collisions = 0UL;
  
#line 239 
  if (0 != 0) 
#line 239 
              tmp_19 = (((mlx4_en_stats->RDROP << 24) | ((mlx4_en_stats->RDROP << 8) & 16711680U)) | ((mlx4_en_stats->RDROP >> 8) & 65280U)) | (mlx4_en_stats->RDROP >> 24); else 
                                                                    
#line 239 
                                                                    tmp_19 = __fswab32(mlx4_en_stats->RDROP);
  
#line 239 
  stats->rx_dropped = (unsigned long)tmp_19;
  
#line 240 
  if (0 != 0) 
#line 240 
              tmp_21 = (((mlx4_en_stats->RdropLength << 24) | ((mlx4_en_stats->RdropLength << 8) & 16711680U)) | ((mlx4_en_stats->RdropLength >> 8) & 65280U)) | (mlx4_en_stats->RdropLength >> 24); else 
                                                                    
#line 240 
                                                                    tmp_21 = __fswab32(mlx4_en_stats->RdropLength);
  
#line 240 
  stats->rx_length_errors = (unsigned long)tmp_21;
  
#line 241 
  if (0 != 0) 
#line 241 
              tmp_23 = (((mlx4_en_stats->RdropOvflw << 24) | ((mlx4_en_stats->RdropOvflw << 8) & 16711680U)) | ((mlx4_en_stats->RdropOvflw >> 8) & 65280U)) | (mlx4_en_stats->RdropOvflw >> 24); else 
                                                                    
#line 241 
                                                                    tmp_23 = __fswab32(mlx4_en_stats->RdropOvflw);
  
#line 241 
  stats->rx_over_errors = (unsigned long)tmp_23;
  
#line 242 
  if (0 != 0) 
#line 242 
              tmp_25 = (((mlx4_en_stats->RCRC << 24) | ((mlx4_en_stats->RCRC << 8) & 16711680U)) | ((mlx4_en_stats->RCRC >> 8) & 65280U)) | (mlx4_en_stats->RCRC >> 24); else 
                                                                    
#line 242 
                                                                    tmp_25 = __fswab32(mlx4_en_stats->RCRC);
  
#line 242 
  stats->rx_crc_errors = (unsigned long)tmp_25;
  
#line 243 
  stats->rx_frame_errors = 0UL;
  
#line 244 
  if (0 != 0) 
#line 244 
              tmp_27 = (((mlx4_en_stats->RdropOvflw << 24) | ((mlx4_en_stats->RdropOvflw << 8) & 16711680U)) | ((mlx4_en_stats->RdropOvflw >> 8) & 65280U)) | (mlx4_en_stats->RdropOvflw >> 24); else 
                                                                    
#line 244 
                                                                    tmp_27 = __fswab32(mlx4_en_stats->RdropOvflw);
  
#line 244 
  stats->rx_fifo_errors = (unsigned long)tmp_27;
  
#line 245 
  if (0 != 0) 
#line 245 
              tmp_29 = (((mlx4_en_stats->RdropOvflw << 24) | ((mlx4_en_stats->RdropOvflw << 8) & 16711680U)) | ((mlx4_en_stats->RdropOvflw >> 8) & 65280U)) | (mlx4_en_stats->RdropOvflw >> 24); else 
                                                                    
#line 245 
                                                                    tmp_29 = __fswab32(mlx4_en_stats->RdropOvflw);
  
#line 245 
  stats->rx_missed_errors = (unsigned long)tmp_29;
  
#line 246 
  stats->tx_aborted_errors = 0UL;
  
#line 247 
  stats->tx_carrier_errors = 0UL;
  
#line 248 
  stats->tx_fifo_errors = 0UL;
  
#line 249 
  stats->tx_heartbeat_errors = 0UL;
  
#line 250 
  stats->tx_window_errors = 0UL;
  
#line 251 
  if (0 != 0) 
#line 251 
              tmp_31 = (((mlx4_en_stats->TDROP << 24) | ((mlx4_en_stats->TDROP << 8) & 16711680U)) | ((mlx4_en_stats->TDROP >> 8) & 65280U)) | (mlx4_en_stats->TDROP >> 24); else 
                                                                    
#line 251 
                                                                    tmp_31 = __fswab32(mlx4_en_stats->TDROP);
  
#line 251 
  stats->tx_dropped = (unsigned long)tmp_31;
  
#line 254 
  priv->pkstats.rx_multicast_packets = stats->multicast;
  
#line 255 
  priv->pkstats.rx_broadcast_packets = en_stats_adder(& mlx4_en_stats->RBCAST_prio_0,& mlx4_en_stats->RBCAST_prio_1,9);
  
#line 259 
  if (0 != 0) 
#line 259 
              tmp_33 = (((mlx4_en_stats->RJBBR << 24) | ((mlx4_en_stats->RJBBR << 8) & 16711680U)) | ((mlx4_en_stats->RJBBR >> 8) & 65280U)) | (mlx4_en_stats->RJBBR >> 24); else 
                                                                    
#line 259 
                                                                    tmp_33 = __fswab32(mlx4_en_stats->RJBBR);
  
#line 259 
  priv->pkstats.rx_jabbers = (unsigned long)tmp_33;
  
#line 261 
  if (0 != 0) 
#line 261 
              tmp_35 = (((((((mlx4_en_stats->RInRangeLengthErr << 56) | ((mlx4_en_stats->RInRangeLengthErr << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RInRangeLengthErr << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RInRangeLengthErr << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RInRangeLengthErr >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RInRangeLengthErr >> 24) & 16711680ULL)) | ((mlx4_en_stats->RInRangeLengthErr >> 40) & 65280ULL)) | (mlx4_en_stats->RInRangeLengthErr >> 56); else 
                                                                    
#line 261 
                                                                    tmp_35 = __fswab64(mlx4_en_stats->RInRangeLengthErr);
  
#line 260 
  priv->pkstats.rx_in_range_length_error = (unsigned long)tmp_35;
  
#line 263 
  if (0 != 0) 
#line 263 
              tmp_37 = (((((((mlx4_en_stats->ROutRangeLengthErr << 56) | ((mlx4_en_stats->ROutRangeLengthErr << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROutRangeLengthErr << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROutRangeLengthErr << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROutRangeLengthErr >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROutRangeLengthErr >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROutRangeLengthErr >> 40) & 65280ULL)) | (mlx4_en_stats->ROutRangeLengthErr >> 56); else 
                                                                    
#line 263 
                                                                    tmp_37 = __fswab64(mlx4_en_stats->ROutRangeLengthErr);
  
#line 262 
  priv->pkstats.rx_out_range_length_error = (unsigned long)tmp_37;
  
#line 266 
  priv->pkstats.tx_multicast_packets = en_stats_adder(& mlx4_en_stats->TMCAST_prio_0,& mlx4_en_stats->TMCAST_prio_1,9);
  
#line 270 
  priv->pkstats.tx_broadcast_packets = en_stats_adder(& mlx4_en_stats->TBCAST_prio_0,& mlx4_en_stats->TBCAST_prio_1,9);
  
#line 275 
  if (0 != 0) 
#line 275 
              tmp_39 = (((((((mlx4_en_stats->RTOT_prio_0 << 56) | ((mlx4_en_stats->RTOT_prio_0 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RTOT_prio_0 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RTOT_prio_0 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RTOT_prio_0 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RTOT_prio_0 >> 24) & 16711680ULL)) | ((mlx4_en_stats->RTOT_prio_0 >> 40) & 65280ULL)) | (mlx4_en_stats->RTOT_prio_0 >> 56); else 
                                                                    
#line 275 
                                                                    tmp_39 = __fswab64(mlx4_en_stats->RTOT_prio_0);
  
#line 275 
  priv->pkstats.rx_prio[0][0] = (unsigned long)tmp_39;
  
#line 276 
  if (0 != 0) 
#line 276 
              tmp_41 = (((((((mlx4_en_stats->ROCT_prio_0 << 56) | ((mlx4_en_stats->ROCT_prio_0 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROCT_prio_0 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROCT_prio_0 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROCT_prio_0 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROCT_prio_0 >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROCT_prio_0 >> 40) & 65280ULL)) | (mlx4_en_stats->ROCT_prio_0 >> 56); else 
                                                                    
#line 276 
                                                                    tmp_41 = __fswab64(mlx4_en_stats->ROCT_prio_0);
  
#line 276 
  priv->pkstats.rx_prio[0][1] = (unsigned long)tmp_41;
  
#line 277 
  if (0 != 0) 
#line 277 
              tmp_43 = (((((((mlx4_en_stats->RTOT_prio_1 << 56) | ((mlx4_en_stats->RTOT_prio_1 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RTOT_prio_1 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RTOT_prio_1 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RTOT_prio_1 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RTOT_prio_1 >> 24) & 16711680ULL)) | ((mlx4_en_stats->RTOT_prio_1 >> 40) & 65280ULL)) | (mlx4_en_stats->RTOT_prio_1 >> 56); else 
                                                                    
#line 277 
                                                                    tmp_43 = __fswab64(mlx4_en_stats->RTOT_prio_1);
  
#line 277 
  priv->pkstats.rx_prio[1][0] = (unsigned long)tmp_43;
  
#line 278 
  if (0 != 0) 
#line 278 
              tmp_45 = (((((((mlx4_en_stats->ROCT_prio_1 << 56) | ((mlx4_en_stats->ROCT_prio_1 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROCT_prio_1 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROCT_prio_1 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROCT_prio_1 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROCT_prio_1 >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROCT_prio_1 >> 40) & 65280ULL)) | (mlx4_en_stats->ROCT_prio_1 >> 56); else 
                                                                    
#line 278 
                                                                    tmp_45 = __fswab64(mlx4_en_stats->ROCT_prio_1);
  
#line 278 
  priv->pkstats.rx_prio[1][1] = (unsigned long)tmp_45;
  
#line 279 
  if (0 != 0) 
#line 279 
              tmp_47 = (((((((mlx4_en_stats->RTOT_prio_2 << 56) | ((mlx4_en_stats->RTOT_prio_2 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RTOT_prio_2 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RTOT_prio_2 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RTOT_prio_2 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RTOT_prio_2 >> 24) & 16711680ULL)) | ((mlx4_en_stats->RTOT_prio_2 >> 40) & 65280ULL)) | (mlx4_en_stats->RTOT_prio_2 >> 56); else 
                                                                    
#line 279 
                                                                    tmp_47 = __fswab64(mlx4_en_stats->RTOT_prio_2);
  
#line 279 
  priv->pkstats.rx_prio[2][0] = (unsigned long)tmp_47;
  
#line 280 
  if (0 != 0) 
#line 280 
              tmp_49 = (((((((mlx4_en_stats->ROCT_prio_2 << 56) | ((mlx4_en_stats->ROCT_prio_2 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROCT_prio_2 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROCT_prio_2 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROCT_prio_2 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROCT_prio_2 >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROCT_prio_2 >> 40) & 65280ULL)) | (mlx4_en_stats->ROCT_prio_2 >> 56); else 
                                                                    
#line 280 
                                                                    tmp_49 = __fswab64(mlx4_en_stats->ROCT_prio_2);
  
#line 280 
  priv->pkstats.rx_prio[2][1] = (unsigned long)tmp_49;
  
#line 281 
  if (0 != 0) 
#line 281 
              tmp_51 = (((((((mlx4_en_stats->RTOT_prio_3 << 56) | ((mlx4_en_stats->RTOT_prio_3 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RTOT_prio_3 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RTOT_prio_3 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RTOT_prio_3 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RTOT_prio_3 >> 24) & 16711680ULL)) | ((mlx4_en_stats->RTOT_prio_3 >> 40) & 65280ULL)) | (mlx4_en_stats->RTOT_prio_3 >> 56); else 
                                                                    
#line 281 
                                                                    tmp_51 = __fswab64(mlx4_en_stats->RTOT_prio_3);
  
#line 281 
  priv->pkstats.rx_prio[3][0] = (unsigned long)tmp_51;
  
#line 282 
  if (0 != 0) 
#line 282 
              tmp_53 = (((((((mlx4_en_stats->ROCT_prio_3 << 56) | ((mlx4_en_stats->ROCT_prio_3 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROCT_prio_3 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROCT_prio_3 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROCT_prio_3 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROCT_prio_3 >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROCT_prio_3 >> 40) & 65280ULL)) | (mlx4_en_stats->ROCT_prio_3 >> 56); else 
                                                                    
#line 282 
                                                                    tmp_53 = __fswab64(mlx4_en_stats->ROCT_prio_3);
  
#line 282 
  priv->pkstats.rx_prio[3][1] = (unsigned long)tmp_53;
  
#line 283 
  if (0 != 0) 
#line 283 
              tmp_55 = (((((((mlx4_en_stats->RTOT_prio_4 << 56) | ((mlx4_en_stats->RTOT_prio_4 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RTOT_prio_4 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RTOT_prio_4 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RTOT_prio_4 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RTOT_prio_4 >> 24) & 16711680ULL)) | ((mlx4_en_stats->RTOT_prio_4 >> 40) & 65280ULL)) | (mlx4_en_stats->RTOT_prio_4 >> 56); else 
                                                                    
#line 283 
                                                                    tmp_55 = __fswab64(mlx4_en_stats->RTOT_prio_4);
  
#line 283 
  priv->pkstats.rx_prio[4][0] = (unsigned long)tmp_55;
  
#line 284 
  if (0 != 0) 
#line 284 
              tmp_57 = (((((((mlx4_en_stats->ROCT_prio_4 << 56) | ((mlx4_en_stats->ROCT_prio_4 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROCT_prio_4 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROCT_prio_4 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROCT_prio_4 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROCT_prio_4 >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROCT_prio_4 >> 40) & 65280ULL)) | (mlx4_en_stats->ROCT_prio_4 >> 56); else 
                                                                    
#line 284 
                                                                    tmp_57 = __fswab64(mlx4_en_stats->ROCT_prio_4);
  
#line 284 
  priv->pkstats.rx_prio[4][1] = (unsigned long)tmp_57;
  
#line 285 
  if (0 != 0) 
#line 285 
              tmp_59 = (((((((mlx4_en_stats->RTOT_prio_5 << 56) | ((mlx4_en_stats->RTOT_prio_5 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RTOT_prio_5 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RTOT_prio_5 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RTOT_prio_5 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RTOT_prio_5 >> 24) & 16711680ULL)) | ((mlx4_en_stats->RTOT_prio_5 >> 40) & 65280ULL)) | (mlx4_en_stats->RTOT_prio_5 >> 56); else 
                                                                    
#line 285 
                                                                    tmp_59 = __fswab64(mlx4_en_stats->RTOT_prio_5);
  
#line 285 
  priv->pkstats.rx_prio[5][0] = (unsigned long)tmp_59;
  
#line 286 
  if (0 != 0) 
#line 286 
              tmp_61 = (((((((mlx4_en_stats->ROCT_prio_5 << 56) | ((mlx4_en_stats->ROCT_prio_5 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROCT_prio_5 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROCT_prio_5 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROCT_prio_5 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROCT_prio_5 >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROCT_prio_5 >> 40) & 65280ULL)) | (mlx4_en_stats->ROCT_prio_5 >> 56); else 
                                                                    
#line 286 
                                                                    tmp_61 = __fswab64(mlx4_en_stats->ROCT_prio_5);
  
#line 286 
  priv->pkstats.rx_prio[5][1] = (unsigned long)tmp_61;
  
#line 287 
  if (0 != 0) 
#line 287 
              tmp_63 = (((((((mlx4_en_stats->RTOT_prio_6 << 56) | ((mlx4_en_stats->RTOT_prio_6 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RTOT_prio_6 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RTOT_prio_6 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RTOT_prio_6 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RTOT_prio_6 >> 24) & 16711680ULL)) | ((mlx4_en_stats->RTOT_prio_6 >> 40) & 65280ULL)) | (mlx4_en_stats->RTOT_prio_6 >> 56); else 
                                                                    
#line 287 
                                                                    tmp_63 = __fswab64(mlx4_en_stats->RTOT_prio_6);
  
#line 287 
  priv->pkstats.rx_prio[6][0] = (unsigned long)tmp_63;
  
#line 288 
  if (0 != 0) 
#line 288 
              tmp_65 = (((((((mlx4_en_stats->ROCT_prio_6 << 56) | ((mlx4_en_stats->ROCT_prio_6 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROCT_prio_6 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROCT_prio_6 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROCT_prio_6 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROCT_prio_6 >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROCT_prio_6 >> 40) & 65280ULL)) | (mlx4_en_stats->ROCT_prio_6 >> 56); else 
                                                                    
#line 288 
                                                                    tmp_65 = __fswab64(mlx4_en_stats->ROCT_prio_6);
  
#line 288 
  priv->pkstats.rx_prio[6][1] = (unsigned long)tmp_65;
  
#line 289 
  if (0 != 0) 
#line 289 
              tmp_67 = (((((((mlx4_en_stats->RTOT_prio_7 << 56) | ((mlx4_en_stats->RTOT_prio_7 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RTOT_prio_7 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RTOT_prio_7 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RTOT_prio_7 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RTOT_prio_7 >> 24) & 16711680ULL)) | ((mlx4_en_stats->RTOT_prio_7 >> 40) & 65280ULL)) | (mlx4_en_stats->RTOT_prio_7 >> 56); else 
                                                                    
#line 289 
                                                                    tmp_67 = __fswab64(mlx4_en_stats->RTOT_prio_7);
  
#line 289 
  priv->pkstats.rx_prio[7][0] = (unsigned long)tmp_67;
  
#line 290 
  if (0 != 0) 
#line 290 
              tmp_69 = (((((((mlx4_en_stats->ROCT_prio_7 << 56) | ((mlx4_en_stats->ROCT_prio_7 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROCT_prio_7 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROCT_prio_7 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROCT_prio_7 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROCT_prio_7 >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROCT_prio_7 >> 40) & 65280ULL)) | (mlx4_en_stats->ROCT_prio_7 >> 56); else 
                                                                    
#line 290 
                                                                    tmp_69 = __fswab64(mlx4_en_stats->ROCT_prio_7);
  
#line 290 
  priv->pkstats.rx_prio[7][1] = (unsigned long)tmp_69;
  
#line 291 
  if (0 != 0) 
#line 291 
              tmp_71 = (((((((mlx4_en_stats->RTOT_novlan << 56) | ((mlx4_en_stats->RTOT_novlan << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->RTOT_novlan << 24) & 280375465082880ULL)) | ((mlx4_en_stats->RTOT_novlan << 8) & 1095216660480ULL)) | ((mlx4_en_stats->RTOT_novlan >> 8) & 4278190080ULL)) | ((mlx4_en_stats->RTOT_novlan >> 24) & 16711680ULL)) | ((mlx4_en_stats->RTOT_novlan >> 40) & 65280ULL)) | (mlx4_en_stats->RTOT_novlan >> 56); else 
                                                                    
#line 291 
                                                                    tmp_71 = __fswab64(mlx4_en_stats->RTOT_novlan);
  
#line 291 
  priv->pkstats.rx_prio[8][0] = (unsigned long)tmp_71;
  
#line 292 
  if (0 != 0) 
#line 292 
              tmp_73 = (((((((mlx4_en_stats->ROCT_novlan << 56) | ((mlx4_en_stats->ROCT_novlan << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->ROCT_novlan << 24) & 280375465082880ULL)) | ((mlx4_en_stats->ROCT_novlan << 8) & 1095216660480ULL)) | ((mlx4_en_stats->ROCT_novlan >> 8) & 4278190080ULL)) | ((mlx4_en_stats->ROCT_novlan >> 24) & 16711680ULL)) | ((mlx4_en_stats->ROCT_novlan >> 40) & 65280ULL)) | (mlx4_en_stats->ROCT_novlan >> 56); else 
                                                                    
#line 292 
                                                                    tmp_73 = __fswab64(mlx4_en_stats->ROCT_novlan);
  
#line 292 
  priv->pkstats.rx_prio[8][1] = (unsigned long)tmp_73;
  
#line 293 
  if (0 != 0) 
#line 293 
              tmp_75 = (((((((mlx4_en_stats->TTOT_prio_0 << 56) | ((mlx4_en_stats->TTOT_prio_0 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TTOT_prio_0 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TTOT_prio_0 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TTOT_prio_0 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TTOT_prio_0 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TTOT_prio_0 >> 40) & 65280ULL)) | (mlx4_en_stats->TTOT_prio_0 >> 56); else 
                                                                    
#line 293 
                                                                    tmp_75 = __fswab64(mlx4_en_stats->TTOT_prio_0);
  
#line 293 
  priv->pkstats.tx_prio[0][0] = (unsigned long)tmp_75;
  
#line 294 
  if (0 != 0) 
#line 294 
              tmp_77 = (((((((mlx4_en_stats->TOCT_prio_0 << 56) | ((mlx4_en_stats->TOCT_prio_0 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TOCT_prio_0 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TOCT_prio_0 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TOCT_prio_0 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TOCT_prio_0 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TOCT_prio_0 >> 40) & 65280ULL)) | (mlx4_en_stats->TOCT_prio_0 >> 56); else 
                                                                    
#line 294 
                                                                    tmp_77 = __fswab64(mlx4_en_stats->TOCT_prio_0);
  
#line 294 
  priv->pkstats.tx_prio[0][1] = (unsigned long)tmp_77;
  
#line 295 
  if (0 != 0) 
#line 295 
              tmp_79 = (((((((mlx4_en_stats->TTOT_prio_1 << 56) | ((mlx4_en_stats->TTOT_prio_1 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TTOT_prio_1 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TTOT_prio_1 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TTOT_prio_1 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TTOT_prio_1 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TTOT_prio_1 >> 40) & 65280ULL)) | (mlx4_en_stats->TTOT_prio_1 >> 56); else 
                                                                    
#line 295 
                                                                    tmp_79 = __fswab64(mlx4_en_stats->TTOT_prio_1);
  
#line 295 
  priv->pkstats.tx_prio[1][0] = (unsigned long)tmp_79;
  
#line 296 
  if (0 != 0) 
#line 296 
              tmp_81 = (((((((mlx4_en_stats->TOCT_prio_1 << 56) | ((mlx4_en_stats->TOCT_prio_1 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TOCT_prio_1 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TOCT_prio_1 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TOCT_prio_1 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TOCT_prio_1 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TOCT_prio_1 >> 40) & 65280ULL)) | (mlx4_en_stats->TOCT_prio_1 >> 56); else 
                                                                    
#line 296 
                                                                    tmp_81 = __fswab64(mlx4_en_stats->TOCT_prio_1);
  
#line 296 
  priv->pkstats.tx_prio[1][1] = (unsigned long)tmp_81;
  
#line 297 
  if (0 != 0) 
#line 297 
              tmp_83 = (((((((mlx4_en_stats->TTOT_prio_2 << 56) | ((mlx4_en_stats->TTOT_prio_2 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TTOT_prio_2 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TTOT_prio_2 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TTOT_prio_2 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TTOT_prio_2 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TTOT_prio_2 >> 40) & 65280ULL)) | (mlx4_en_stats->TTOT_prio_2 >> 56); else 
                                                                    
#line 297 
                                                                    tmp_83 = __fswab64(mlx4_en_stats->TTOT_prio_2);
  
#line 297 
  priv->pkstats.tx_prio[2][0] = (unsigned long)tmp_83;
  
#line 298 
  if (0 != 0) 
#line 298 
              tmp_85 = (((((((mlx4_en_stats->TOCT_prio_2 << 56) | ((mlx4_en_stats->TOCT_prio_2 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TOCT_prio_2 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TOCT_prio_2 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TOCT_prio_2 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TOCT_prio_2 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TOCT_prio_2 >> 40) & 65280ULL)) | (mlx4_en_stats->TOCT_prio_2 >> 56); else 
                                                                    
#line 298 
                                                                    tmp_85 = __fswab64(mlx4_en_stats->TOCT_prio_2);
  
#line 298 
  priv->pkstats.tx_prio[2][1] = (unsigned long)tmp_85;
  
#line 299 
  if (0 != 0) 
#line 299 
              tmp_87 = (((((((mlx4_en_stats->TTOT_prio_3 << 56) | ((mlx4_en_stats->TTOT_prio_3 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TTOT_prio_3 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TTOT_prio_3 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TTOT_prio_3 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TTOT_prio_3 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TTOT_prio_3 >> 40) & 65280ULL)) | (mlx4_en_stats->TTOT_prio_3 >> 56); else 
                                                                    
#line 299 
                                                                    tmp_87 = __fswab64(mlx4_en_stats->TTOT_prio_3);
  
#line 299 
  priv->pkstats.tx_prio[3][0] = (unsigned long)tmp_87;
  
#line 300 
  if (0 != 0) 
#line 300 
              tmp_89 = (((((((mlx4_en_stats->TOCT_prio_3 << 56) | ((mlx4_en_stats->TOCT_prio_3 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TOCT_prio_3 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TOCT_prio_3 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TOCT_prio_3 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TOCT_prio_3 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TOCT_prio_3 >> 40) & 65280ULL)) | (mlx4_en_stats->TOCT_prio_3 >> 56); else 
                                                                    
#line 300 
                                                                    tmp_89 = __fswab64(mlx4_en_stats->TOCT_prio_3);
  
#line 300 
  priv->pkstats.tx_prio[3][1] = (unsigned long)tmp_89;
  
#line 301 
  if (0 != 0) 
#line 301 
              tmp_91 = (((((((mlx4_en_stats->TTOT_prio_4 << 56) | ((mlx4_en_stats->TTOT_prio_4 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TTOT_prio_4 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TTOT_prio_4 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TTOT_prio_4 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TTOT_prio_4 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TTOT_prio_4 >> 40) & 65280ULL)) | (mlx4_en_stats->TTOT_prio_4 >> 56); else 
                                                                    
#line 301 
                                                                    tmp_91 = __fswab64(mlx4_en_stats->TTOT_prio_4);
  
#line 301 
  priv->pkstats.tx_prio[4][0] = (unsigned long)tmp_91;
  
#line 302 
  if (0 != 0) 
#line 302 
              tmp_93 = (((((((mlx4_en_stats->TOCT_prio_4 << 56) | ((mlx4_en_stats->TOCT_prio_4 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TOCT_prio_4 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TOCT_prio_4 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TOCT_prio_4 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TOCT_prio_4 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TOCT_prio_4 >> 40) & 65280ULL)) | (mlx4_en_stats->TOCT_prio_4 >> 56); else 
                                                                    
#line 302 
                                                                    tmp_93 = __fswab64(mlx4_en_stats->TOCT_prio_4);
  
#line 302 
  priv->pkstats.tx_prio[4][1] = (unsigned long)tmp_93;
  
#line 303 
  if (0 != 0) 
#line 303 
              tmp_95 = (((((((mlx4_en_stats->TTOT_prio_5 << 56) | ((mlx4_en_stats->TTOT_prio_5 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TTOT_prio_5 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TTOT_prio_5 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TTOT_prio_5 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TTOT_prio_5 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TTOT_prio_5 >> 40) & 65280ULL)) | (mlx4_en_stats->TTOT_prio_5 >> 56); else 
                                                                    
#line 303 
                                                                    tmp_95 = __fswab64(mlx4_en_stats->TTOT_prio_5);
  
#line 303 
  priv->pkstats.tx_prio[5][0] = (unsigned long)tmp_95;
  
#line 304 
  if (0 != 0) 
#line 304 
              tmp_97 = (((((((mlx4_en_stats->TOCT_prio_5 << 56) | ((mlx4_en_stats->TOCT_prio_5 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TOCT_prio_5 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TOCT_prio_5 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TOCT_prio_5 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TOCT_prio_5 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TOCT_prio_5 >> 40) & 65280ULL)) | (mlx4_en_stats->TOCT_prio_5 >> 56); else 
                                                                    
#line 304 
                                                                    tmp_97 = __fswab64(mlx4_en_stats->TOCT_prio_5);
  
#line 304 
  priv->pkstats.tx_prio[5][1] = (unsigned long)tmp_97;
  
#line 305 
  if (0 != 0) 
#line 305 
              tmp_99 = (((((((mlx4_en_stats->TTOT_prio_6 << 56) | ((mlx4_en_stats->TTOT_prio_6 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TTOT_prio_6 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TTOT_prio_6 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TTOT_prio_6 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TTOT_prio_6 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TTOT_prio_6 >> 40) & 65280ULL)) | (mlx4_en_stats->TTOT_prio_6 >> 56); else 
                                                                    
#line 305 
                                                                    tmp_99 = __fswab64(mlx4_en_stats->TTOT_prio_6);
  
#line 305 
  priv->pkstats.tx_prio[6][0] = (unsigned long)tmp_99;
  
#line 306 
  if (0 != 0) 
#line 306 
              tmp_101 = (((((((mlx4_en_stats->TOCT_prio_6 << 56) | ((mlx4_en_stats->TOCT_prio_6 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TOCT_prio_6 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TOCT_prio_6 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TOCT_prio_6 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TOCT_prio_6 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TOCT_prio_6 >> 40) & 65280ULL)) | (mlx4_en_stats->TOCT_prio_6 >> 56); else 
                                                                    
#line 306 
                                                                    tmp_101 = __fswab64(mlx4_en_stats->TOCT_prio_6);
  
#line 306 
  priv->pkstats.tx_prio[6][1] = (unsigned long)tmp_101;
  
#line 307 
  if (0 != 0) 
#line 307 
              tmp_103 = (((((((mlx4_en_stats->TTOT_prio_7 << 56) | ((mlx4_en_stats->TTOT_prio_7 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TTOT_prio_7 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TTOT_prio_7 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TTOT_prio_7 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TTOT_prio_7 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TTOT_prio_7 >> 40) & 65280ULL)) | (mlx4_en_stats->TTOT_prio_7 >> 56); else 
                                                                    
#line 307 
                                                                    tmp_103 = __fswab64(mlx4_en_stats->TTOT_prio_7);
  
#line 307 
  priv->pkstats.tx_prio[7][0] = (unsigned long)tmp_103;
  
#line 308 
  if (0 != 0) 
#line 308 
              tmp_105 = (((((((mlx4_en_stats->TOCT_prio_7 << 56) | ((mlx4_en_stats->TOCT_prio_7 << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TOCT_prio_7 << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TOCT_prio_7 << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TOCT_prio_7 >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TOCT_prio_7 >> 24) & 16711680ULL)) | ((mlx4_en_stats->TOCT_prio_7 >> 40) & 65280ULL)) | (mlx4_en_stats->TOCT_prio_7 >> 56); else 
                                                                    
#line 308 
                                                                    tmp_105 = __fswab64(mlx4_en_stats->TOCT_prio_7);
  
#line 308 
  priv->pkstats.tx_prio[7][1] = (unsigned long)tmp_105;
  
#line 309 
  if (0 != 0) 
#line 309 
              tmp_107 = (((((((mlx4_en_stats->TTOT_novlan << 56) | ((mlx4_en_stats->TTOT_novlan << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TTOT_novlan << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TTOT_novlan << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TTOT_novlan >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TTOT_novlan >> 24) & 16711680ULL)) | ((mlx4_en_stats->TTOT_novlan >> 40) & 65280ULL)) | (mlx4_en_stats->TTOT_novlan >> 56); else 
                                                                    
#line 309 
                                                                    tmp_107 = __fswab64(mlx4_en_stats->TTOT_novlan);
  
#line 309 
  priv->pkstats.tx_prio[8][0] = (unsigned long)tmp_107;
  
#line 310 
  if (0 != 0) 
#line 310 
              tmp_109 = (((((((mlx4_en_stats->TOCT_novlan << 56) | ((mlx4_en_stats->TOCT_novlan << 40) & 71776119061217280ULL)) | ((mlx4_en_stats->TOCT_novlan << 24) & 280375465082880ULL)) | ((mlx4_en_stats->TOCT_novlan << 8) & 1095216660480ULL)) | ((mlx4_en_stats->TOCT_novlan >> 8) & 4278190080ULL)) | ((mlx4_en_stats->TOCT_novlan >> 24) & 16711680ULL)) | ((mlx4_en_stats->TOCT_novlan >> 40) & 65280ULL)) | (mlx4_en_stats->TOCT_novlan >> 56); else 
                                                                    
#line 310 
                                                                    tmp_109 = __fswab64(mlx4_en_stats->TOCT_novlan);
  
#line 310 
  priv->pkstats.tx_prio[8][1] = (unsigned long)tmp_109;
  
#line 312 
  ldv_spin_unlock_bh_83(& priv->stats_lock);
  
#line 314 
  memset((void *)(& tmp_counter_stats),0,48UL);
  
#line 315 
  counter_index = mlx4_get_default_counter_index(mdev->dev,(int)port);
  
#line 316 
  err = mlx4_get_counter_stats(mdev->dev,counter_index,& tmp_counter_stats,(int)reset);
  
#line 320 
  memset(mailbox->buf,255,512UL);
  
#line 322 
  if (((mdev->dev)->caps.flags2 & 16777216ULL) != 0ULL) {
    
#line 323 
    memset(mailbox->buf,0,512UL);
    
#line 325 
    err = mlx4_cmd_box(mdev->dev,0ULL,mailbox->dma,(unsigned int)in_mod | 4096U,(unsigned char)0,(unsigned short)73,60000UL,0);
    
#line 329 
    if (err != 0) 
#line 330 
                  goto out; else ;
  }
  else ;
  
#line 333 
  flowstats = (struct mlx4_en_stat_out_flow_control_mbox *)mailbox->buf;
  
#line 335 
  ldv_spin_lock_bh_84(& priv->stats_lock);
  
#line 337 
  if ((unsigned int)tmp_counter_stats.counter_mode == 0U) {
    unsigned long long tmp_111;
    unsigned long long tmp_113;
    unsigned long long tmp_115;
    unsigned long long tmp_117;
    
#line 338 
    if (0 != 0) 
#line 338 
                tmp_111 = (((((((tmp_counter_stats.rx_bytes << 56) | ((tmp_counter_stats.rx_bytes << 40) & 71776119061217280ULL)) | ((tmp_counter_stats.rx_bytes << 24) & 280375465082880ULL)) | ((tmp_counter_stats.rx_bytes << 8) & 1095216660480ULL)) | ((tmp_counter_stats.rx_bytes >> 8) & 4278190080ULL)) | ((tmp_counter_stats.rx_bytes >> 24) & 16711680ULL)) | ((tmp_counter_stats.rx_bytes >> 40) & 65280ULL)) | (tmp_counter_stats.rx_bytes >> 56); else 
                                                                    
#line 338 
                                                                    tmp_111 = __fswab64(tmp_counter_stats.rx_bytes);
    
#line 338 
    priv->pf_stats.rx_bytes = (unsigned long)tmp_111;
    
#line 339 
    if (0 != 0) 
#line 339 
                tmp_113 = (((((((tmp_counter_stats.tx_bytes << 56) | ((tmp_counter_stats.tx_bytes << 40) & 71776119061217280ULL)) | ((tmp_counter_stats.tx_bytes << 24) & 280375465082880ULL)) | ((tmp_counter_stats.tx_bytes << 8) & 1095216660480ULL)) | ((tmp_counter_stats.tx_bytes >> 8) & 4278190080ULL)) | ((tmp_counter_stats.tx_bytes >> 24) & 16711680ULL)) | ((tmp_counter_stats.tx_bytes >> 40) & 65280ULL)) | (tmp_counter_stats.tx_bytes >> 56); else 
                                                                    
#line 339 
                                                                    tmp_113 = __fswab64(tmp_counter_stats.tx_bytes);
    
#line 339 
    priv->pf_stats.tx_bytes = (unsigned long)tmp_113;
    
#line 340 
    if (0 != 0) 
#line 340 
                tmp_115 = (((((((tmp_counter_stats.rx_frames << 56) | ((tmp_counter_stats.rx_frames << 40) & 71776119061217280ULL)) | ((tmp_counter_stats.rx_frames << 24) & 280375465082880ULL)) | ((tmp_counter_stats.rx_frames << 8) & 1095216660480ULL)) | ((tmp_counter_stats.rx_frames >> 8) & 4278190080ULL)) | ((tmp_counter_stats.rx_frames >> 24) & 16711680ULL)) | ((tmp_counter_stats.rx_frames >> 40) & 65280ULL)) | (tmp_counter_stats.rx_frames >> 56); else 
                                                                    
#line 340 
                                                                    tmp_115 = __fswab64(tmp_counter_stats.rx_frames);
    
#line 340 
    priv->pf_stats.rx_packets = (unsigned long)tmp_115;
    
#line 341 
    if (0 != 0) 
#line 341 
                tmp_117 = (((((((tmp_counter_stats.tx_frames << 56) | ((tmp_counter_stats.tx_frames << 40) & 71776119061217280ULL)) | ((tmp_counter_stats.tx_frames << 24) & 280375465082880ULL)) | ((tmp_counter_stats.tx_frames << 8) & 1095216660480ULL)) | ((tmp_counter_stats.tx_frames >> 8) & 4278190080ULL)) | ((tmp_counter_stats.tx_frames >> 24) & 16711680ULL)) | ((tmp_counter_stats.tx_frames >> 40) & 65280ULL)) | (tmp_counter_stats.tx_frames >> 56); else 
                                                                    
#line 341 
                                                                    tmp_117 = __fswab64(tmp_counter_stats.tx_frames);
    
#line 341 
    priv->pf_stats.tx_packets = (unsigned long)tmp_117;
  }
  else ;
  
#line 344 
  i = 0;
  
#line 344 
  goto ldv_50747;
  ldv_50746: 
#line 345 
  ;
  
#line 345 
  if (0 != 0) 
#line 345 
              priv->rx_priority_flowstats[i].rx_pause = ((((((((flowstats + i)->rx_pause << 56) | (((flowstats + i)->rx_pause << 40) & 71776119061217280ULL)) | (((flowstats + i)->rx_pause << 24) & 280375465082880ULL)) | (((flowstats + i)->rx_pause << 8) & 1095216660480ULL)) | (((flowstats + i)->rx_pause >> 8) & 4278190080ULL)) | (((flowstats + i)->rx_pause >> 24) & 16711680ULL)) | (((flowstats + i)->rx_pause >> 40) & 65280ULL)) | ((flowstats + i)->rx_pause >> 56); else 
                                                                    
#line 346 
                                                                    priv->rx_priority_flowstats[i].rx_pause = __fswab64((flowstats + i)->rx_pause);
  
#line 347 
  if (0 != 0) 
#line 347 
              priv->rx_priority_flowstats[i].rx_pause_duration = ((((((((flowstats + i)->rx_pause_duration << 56) | (((flowstats + i)->rx_pause_duration << 40) & 71776119061217280ULL)) | (((flowstats + i)->rx_pause_duration << 24) & 280375465082880ULL)) | (((flowstats + i)->rx_pause_duration << 8) & 1095216660480ULL)) | (((flowstats + i)->rx_pause_duration >> 8) & 4278190080ULL)) | (((flowstats + i)->rx_pause_duration >> 24) & 16711680ULL)) | (((flowstats + i)->rx_pause_duration >> 40) & 65280ULL)) | ((flowstats + i)->rx_pause_duration >> 56); else 
                                                                    
#line 348 
                                                                    priv->rx_priority_flowstats[i].rx_pause_duration = __fswab64((flowstats + i)->rx_pause_duration);
  
#line 349 
  if (0 != 0) 
#line 349 
              priv->rx_priority_flowstats[i].rx_pause_transition = ((((((((flowstats + i)->rx_pause_transition << 56) | (((flowstats + i)->rx_pause_transition << 40) & 71776119061217280ULL)) | (((flowstats + i)->rx_pause_transition << 24) & 280375465082880ULL)) | (((flowstats + i)->rx_pause_transition << 8) & 1095216660480ULL)) | (((flowstats + i)->rx_pause_transition >> 8) & 4278190080ULL)) | (((flowstats + i)->rx_pause_transition >> 24) & 16711680ULL)) | (((flowstats + i)->rx_pause_transition >> 40) & 65280ULL)) | ((flowstats + i)->rx_pause_transition >> 56); else 
                                                                    
#line 350 
                                                                    priv->rx_priority_flowstats[i].rx_pause_transition = __fswab64((flowstats + i)->rx_pause_transition);
  
#line 351 
  if (0 != 0) 
#line 351 
              priv->tx_priority_flowstats[i].tx_pause = ((((((((flowstats + i)->tx_pause << 56) | (((flowstats + i)->tx_pause << 40) & 71776119061217280ULL)) | (((flowstats + i)->tx_pause << 24) & 280375465082880ULL)) | (((flowstats + i)->tx_pause << 8) & 1095216660480ULL)) | (((flowstats + i)->tx_pause >> 8) & 4278190080ULL)) | (((flowstats + i)->tx_pause >> 24) & 16711680ULL)) | (((flowstats + i)->tx_pause >> 40) & 65280ULL)) | ((flowstats + i)->tx_pause >> 56); else 
                                                                    
#line 352 
                                                                    priv->tx_priority_flowstats[i].tx_pause = __fswab64((flowstats + i)->tx_pause);
  
#line 353 
  if (0 != 0) 
#line 353 
              priv->tx_priority_flowstats[i].tx_pause_duration = ((((((((flowstats + i)->tx_pause_duration << 56) | (((flowstats + i)->tx_pause_duration << 40) & 71776119061217280ULL)) | (((flowstats + i)->tx_pause_duration << 24) & 280375465082880ULL)) | (((flowstats + i)->tx_pause_duration << 8) & 1095216660480ULL)) | (((flowstats + i)->tx_pause_duration >> 8) & 4278190080ULL)) | (((flowstats + i)->tx_pause_duration >> 24) & 16711680ULL)) | (((flowstats + i)->tx_pause_duration >> 40) & 65280ULL)) | ((flowstats + i)->tx_pause_duration >> 56); else 
                                                                    
#line 354 
                                                                    priv->tx_priority_flowstats[i].tx_pause_duration = __fswab64((flowstats + i)->tx_pause_duration);
  
#line 355 
  if (0 != 0) 
#line 355 
              priv->tx_priority_flowstats[i].tx_pause_transition = ((((((((flowstats + i)->tx_pause_transition << 56) | (((flowstats + i)->tx_pause_transition << 40) & 71776119061217280ULL)) | (((flowstats + i)->tx_pause_transition << 24) & 280375465082880ULL)) | (((flowstats + i)->tx_pause_transition << 8) & 1095216660480ULL)) | (((flowstats + i)->tx_pause_transition >> 8) & 4278190080ULL)) | (((flowstats + i)->tx_pause_transition >> 24) & 16711680ULL)) | (((flowstats + i)->tx_pause_transition >> 40) & 65280ULL)) | ((flowstats + i)->tx_pause_transition >> 56); else 
                                                                    
#line 356 
                                                                    priv->tx_priority_flowstats[i].tx_pause_transition = __fswab64((flowstats + i)->tx_pause_transition);
  
#line 344 
  i += 1;
  ldv_50747: 
#line 345 
  ;
  
#line 344 
  if (i <= 7) 
#line 346 
              goto ldv_50746; else 
#line 349 
                                   goto ldv_50748;
  ldv_50748: 
#line 350 
  ;
  
#line 360 
  if (0 != 0) 
#line 360 
              priv->rx_flowstats.rx_pause = (((((((flowstats->rx_pause << 56) | ((flowstats->rx_pause << 40) & 71776119061217280ULL)) | ((flowstats->rx_pause << 24) & 280375465082880ULL)) | ((flowstats->rx_pause << 8) & 1095216660480ULL)) | ((flowstats->rx_pause >> 8) & 4278190080ULL)) | ((flowstats->rx_pause >> 24) & 16711680ULL)) | ((flowstats->rx_pause >> 40) & 65280ULL)) | (flowstats->rx_pause >> 56); else 
                                                                    
#line 361 
                                                                    priv->rx_flowstats.rx_pause = __fswab64(flowstats->rx_pause);
  
#line 362 
  if (0 != 0) 
#line 362 
              priv->rx_flowstats.rx_pause_duration = (((((((flowstats->rx_pause_duration << 56) | ((flowstats->rx_pause_duration << 40) & 71776119061217280ULL)) | ((flowstats->rx_pause_duration << 24) & 280375465082880ULL)) | ((flowstats->rx_pause_duration << 8) & 1095216660480ULL)) | ((flowstats->rx_pause_duration >> 8) & 4278190080ULL)) | ((flowstats->rx_pause_duration >> 24) & 16711680ULL)) | ((flowstats->rx_pause_duration >> 40) & 65280ULL)) | (flowstats->rx_pause_duration >> 56); else 
                                                                    
#line 363 
                                                                    priv->rx_flowstats.rx_pause_duration = __fswab64(flowstats->rx_pause_duration);
  
#line 364 
  if (0 != 0) 
#line 364 
              priv->rx_flowstats.rx_pause_transition = (((((((flowstats->rx_pause_transition << 56) | ((flowstats->rx_pause_transition << 40) & 71776119061217280ULL)) | ((flowstats->rx_pause_transition << 24) & 280375465082880ULL)) | ((flowstats->rx_pause_transition << 8) & 1095216660480ULL)) | ((flowstats->rx_pause_transition >> 8) & 4278190080ULL)) | ((flowstats->rx_pause_transition >> 24) & 16711680ULL)) | ((flowstats->rx_pause_transition >> 40) & 65280ULL)) | (flowstats->rx_pause_transition >> 56); else 
                                                                    
#line 365 
                                                                    priv->rx_flowstats.rx_pause_transition = __fswab64(flowstats->rx_pause_transition);
  
#line 366 
  if (0 != 0) 
#line 366 
              priv->tx_flowstats.tx_pause = (((((((flowstats->tx_pause << 56) | ((flowstats->tx_pause << 40) & 71776119061217280ULL)) | ((flowstats->tx_pause << 24) & 280375465082880ULL)) | ((flowstats->tx_pause << 8) & 1095216660480ULL)) | ((flowstats->tx_pause >> 8) & 4278190080ULL)) | ((flowstats->tx_pause >> 24) & 16711680ULL)) | ((flowstats->tx_pause >> 40) & 65280ULL)) | (flowstats->tx_pause >> 56); else 
                                                                    
#line 367 
                                                                    priv->tx_flowstats.tx_pause = __fswab64(flowstats->tx_pause);
  
#line 368 
  if (0 != 0) 
#line 368 
              priv->tx_flowstats.tx_pause_duration = (((((((flowstats->tx_pause_duration << 56) | ((flowstats->tx_pause_duration << 40) & 71776119061217280ULL)) | ((flowstats->tx_pause_duration << 24) & 280375465082880ULL)) | ((flowstats->tx_pause_duration << 8) & 1095216660480ULL)) | ((flowstats->tx_pause_duration >> 8) & 4278190080ULL)) | ((flowstats->tx_pause_duration >> 24) & 16711680ULL)) | ((flowstats->tx_pause_duration >> 40) & 65280ULL)) | (flowstats->tx_pause_duration >> 56); else 
                                                                    
#line 369 
                                                                    priv->tx_flowstats.tx_pause_duration = __fswab64(flowstats->tx_pause_duration);
  
#line 370 
  if (0 != 0) 
#line 370 
              priv->tx_flowstats.tx_pause_transition = (((((((flowstats->tx_pause_transition << 56) | ((flowstats->tx_pause_transition << 40) & 71776119061217280ULL)) | ((flowstats->tx_pause_transition << 24) & 280375465082880ULL)) | ((flowstats->tx_pause_transition << 8) & 1095216660480ULL)) | ((flowstats->tx_pause_transition >> 8) & 4278190080ULL)) | ((flowstats->tx_pause_transition >> 24) & 16711680ULL)) | ((flowstats->tx_pause_transition >> 40) & 65280ULL)) | (flowstats->tx_pause_transition >> 56); else 
                                                                    
#line 371 
                                                                    priv->tx_flowstats.tx_pause_transition = __fswab64(flowstats->tx_pause_transition);
  
#line 373 
  ldv_spin_unlock_bh_85(& priv->stats_lock);
  out: 
#line 375 
  ;
  
#line 376 
  mlx4_free_cmd_mailbox(mdev->dev,mailbox);
  
#line 377 
  __retres = err;
  return_label: 
#line 377 
                return __retres;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_port.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 74 
  tmp = ldv_ptr_err(ptr);
  
#line 74 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_port.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 82 
  ret = ldv_is_err(ptr);
  
#line 83 
  __retres = (_Bool)(ret != 0L);
  
#line 83 
  return __retres;
}


#line 830  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_port.c.aux"
static void ldv_spin_lock_bh_82(spinlock_t *lock)
{
  
#line 834 
  ldv_spin_model_lock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 836 
  spin_lock_bh_0(lock);
  
#line 837 
  return;
}


#line 840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_port.c.aux"
static void ldv_spin_unlock_bh_83(spinlock_t *lock)
{
  
#line 844 
  ldv_spin_model_unlock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 846 
  spin_unlock_bh_0(lock);
  
#line 847 
  return;
}


#line 850  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_port.c.aux"
static void ldv_spin_lock_bh_84(spinlock_t *lock)
{
  
#line 854 
  ldv_spin_model_lock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 856 
  spin_lock_bh_0(lock);
  
#line 857 
  return;
}


#line 860  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_port.c.aux"
static void ldv_spin_unlock_bh_85(spinlock_t *lock)
{
  
#line 864 
  ldv_spin_model_unlock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 866 
  spin_unlock_bh_0(lock);
  
#line 867 
  return;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 233 
void dump_stack(void);


#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_fault(char const *, int);


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  
#line 63 
  __list_add(new,head,head->next);
  
#line 64 
  return;
}


#line 112 
void __list_del_entry(struct list_head *);


#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_move(struct list_head *list, struct list_head *head)
{
  
#line 156 
  __list_del_entry(list);
  
#line 157 
  list_add(list,head);
  
#line 158 
  return;
}


#line 614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void __hlist_del(struct hlist_node *n)
{
  
#line 616 
  struct hlist_node *next = n->next;
  
#line 617 
  struct hlist_node **pprev = n->pprev;
  
#line 618 
  *pprev = next;
  
#line 619 
  if (next != (struct hlist_node *)0) 
#line 620 
                                      next->pprev = pprev; else ;
  
#line 621 
  return;
}


#line 623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void hlist_del(struct hlist_node *n)
{
  
#line 625 
  __hlist_del(n);
  
#line 626 
  n->next = (struct hlist_node *)(-2401263026317557504);
  
#line 627 
  n->pprev = (struct hlist_node **)(-2401263026316508672);
  
#line 628 
  return;
}


#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void hlist_add_head(struct hlist_node *n, struct hlist_head *h)
{
  
#line 640 
  struct hlist_node *first = h->first;
  
#line 641 
  n->next = first;
  
#line 642 
  if (first != (struct hlist_node *)0) 
#line 643 
                                       first->pprev = & n->next; else ;
  
#line 644 
  h->first = n;
  
#line 645 
  n->pprev = & h->first;
  
#line 646 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
void *kmemdup(void const *, size_t, gfp_t);


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
void bitmap_set(unsigned long *, unsigned int, int);


#line 115 
void bitmap_clear(unsigned long *, unsigned int, int);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static void bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  
#line 183 
  if (0 != 0 && nbits <= 64U) 
#line 184 
                              *dst = 0UL;
  else {
    
#line 186 
    unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
    
#line 187 
    memset((void *)dst,0,(unsigned long)len);
  }
  
#line 189 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
extern int nr_cpu_ids;


#line 89 
extern struct cpumask const * const cpu_online_mask;


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_check(unsigned int cpu)
{
  {
    bool __warned;
    
#line 117 
    int __ret_warn_once = cpu >= (unsigned int)nr_cpu_ids;
    
#line 117 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp;
      {
        
#line 117 
        int __ret_warn_on = ! __warned;
        
#line 117 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 117 
                                              warn_slowpath_null("include/linux/cpumask.h",117); else ;
        
#line 117 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 117 
      if ((long)tmp != 0L) 
#line 117 
                           __warned = (_Bool)1; else ;
    }
    else ;
    
#line 117 
    long tmp_2 = (long)(__ret_warn_once != 0);
  }
  
#line 119 
  return cpu;
}


#line 209 
unsigned int cpumask_local_spread(unsigned int, int);


#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static void cpumask_set_cpu(unsigned int cpu, struct cpumask *dstp)
{
  unsigned int tmp;
  
#line 272 
  ;
  
#line 272 
  tmp = cpumask_check(cpu);
  
#line 272 
  set_bit((long)tmp,(unsigned long volatile *)(& dstp->bits));
  
#line 273 
  return;
}


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_weight(struct cpumask const *srcp)
{
  unsigned int __retres;
  int tmp;
  
#line 476 
  tmp = bitmap_weight((unsigned long const *)(& srcp->bits),(unsigned int)nr_cpu_ids);
  
#line 476 
  __retres = (unsigned int)tmp;
  
#line 476 
  return __retres;
}


#line 659 
bool zalloc_cpumask_var(cpumask_var_t **, gfp_t);


#line 661 
void free_cpumask_var(cpumask_var_t);


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_62(spinlock_t *lock);


#line 350 
static void ldv_spin_lock_67(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_75(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_1(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 387 
static void ldv_spin_lock_bh_71(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_79(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_81(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_83_0(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_86(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_88(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_100(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_102(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_65(spinlock_t *lock);


#line 399 
static void ldv_spin_unlock_68(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_76(spinlock_t *lock);


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_1(spinlock_t *lock)
{
  
#line 414 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 415 
  return;
}


#line 436 
static void ldv_spin_unlock_bh_73(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_80(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_82(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_85_0(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_87(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_89(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_101(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_103(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_94(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_97(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_104(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_107(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_110(struct mutex *ldv_func_arg1);


#line 65 
static void ldv_mutex_lock_113(struct mutex *ldv_func_arg1);


#line 69 
static void ldv_mutex_lock_115(struct mutex *ldv_func_arg1);


#line 73 
static void ldv_mutex_lock_117(struct mutex *ldv_func_arg1);


#line 77 
static void ldv_mutex_lock_120(struct mutex *ldv_func_arg1);


#line 81 
static void ldv_mutex_lock_123(struct mutex *ldv_func_arg1);


#line 85 
static void ldv_mutex_lock_129(struct mutex *ldv_func_arg1);


#line 89 
static void ldv_mutex_lock_135(struct mutex *ldv_func_arg1);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
void synchronize_sched(void);


#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void synchronize_rcu(void)
{
  
#line 280 
  synchronize_sched();
  
#line 281 
  return;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
void kfree_call_rcu(struct callback_head *, void (*)(struct callback_head *));


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_95(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_98(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_106(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1);


#line 225 
static void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1);


#line 229 
static void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1);


#line 233 
static void ldv_mutex_unlock_121(struct mutex *ldv_func_arg1);


#line 237 
static void ldv_mutex_unlock_125(struct mutex *ldv_func_arg1);


#line 241 
static void ldv_mutex_unlock_130(struct mutex *ldv_func_arg1);


#line 245 
static void ldv_mutex_unlock_136(struct mutex *ldv_func_arg1);


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void delayed_work_timer_fn(unsigned long);


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
__inline static struct delayed_work *to_delayed_work(struct work_struct *work)
{
  struct delayed_work *tmp;
  {
    
#line 138 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 138 
    tmp = (struct delayed_work *)__mptr;
  }
  
#line 138 
  return tmp;
}


#line 181 
void __init_work(struct work_struct *, int);


#line 436 
void flush_workqueue(struct workqueue_struct *);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 447 
bool cancel_delayed_work(struct delayed_work *);


#line 490 
static bool ldv_queue_work_84(struct workqueue_struct *wq, struct work_struct *work);


#line 494 
static bool ldv_queue_work_96(struct workqueue_struct *wq, struct work_struct *work);


#line 498 
static bool ldv_queue_work_99(struct workqueue_struct *wq, struct work_struct *work);


#line 502 
static bool ldv_queue_work_112(struct workqueue_struct *wq, struct work_struct *work);


#line 506 
static bool ldv_queue_work_124(struct workqueue_struct *wq, struct work_struct *work);


#line 510 
static bool ldv_queue_work_126(struct workqueue_struct *wq, struct work_struct *work);


#line 514 
static bool ldv_queue_work_127(struct workqueue_struct *wq, struct work_struct *work);


#line 518 
static bool ldv_queue_work_128(struct workqueue_struct *wq, struct work_struct *work);


#line 505 
static bool ldv_queue_delayed_work_105(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);


#line 509 
static bool ldv_queue_delayed_work_108(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);


#line 513 
static bool ldv_queue_delayed_work_132(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);


#line 517 
static bool ldv_queue_delayed_work_133(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
int __cpu_to_node(int);


#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
__inline static void hlist_del_rcu(struct hlist_node *n)
{
  
#line 345 
  __hlist_del(n);
  
#line 346 
  n->pprev = (struct hlist_node **)(-2401263026316508672);
  
#line 347 
  return;
}


#line 402 
void __compiletime_assert_402(void);


#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
__inline static void hlist_add_head_rcu(struct hlist_node *n, struct hlist_head *h)
{
  struct hlist_node * volatile *tmp;
  
#line 398 
  struct hlist_node *first = h->first;
  
#line 400 
  n->next = first;
  
#line 401 
  n->pprev = & h->first;
  {
    
#line 402 
    bool __cond = (_Bool)0;
    
#line 402 
    if ((int)__cond != 0) 
#line 402 
                          __compiletime_assert_402(); else ;
  }
  
#line 404 
  ldv_inline_asm();
  {
    
#line 402 
    struct hlist_node *__var = (struct hlist_node *)0;
    
#line 402 
    tmp = (struct hlist_node * volatile *)(& h->first);
  }
  
#line 402 
  *tmp = n;
  
#line 403 
  if (first != (struct hlist_node *)0) 
#line 404 
                                       first->pprev = & n->next; else ;
  
#line 405 
  return;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_0(size_t size, gfp_t flags);


#line 581 
static void *kzalloc_0(size_t size, gfp_t flags);


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_from_user(void *, void const *, unsigned int);


#line 652 
unsigned long _copy_to_user(void *, void const *, unsigned int);


#line 662 
void copy_from_user_overflow(void);


#line 664 
void copy_to_user_overflow(void);


#line 672 
void __copy_from_user_overflow(void);


#line 677 
void __copy_to_user_overflow(void);


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void const *from, unsigned long n)
{
  
#line 695 
  int sz = -1;
  
#line 697 
  __might_fault("./arch/x86/include/asm/uaccess.h",697);
  
#line 717 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 718 
                                                                    n = _copy_from_user(to,from,(unsigned int)n);
  else 
    
#line 719 
    if (0 != 0) 
#line 720 
                copy_from_user_overflow(); else 
#line 722 
                                                __copy_from_user_overflow();
  
#line 724 
  return n;
}


#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_to_user(void *to, void const *from, unsigned long n)
{
  
#line 730 
  int sz = -1;
  
#line 732 
  __might_fault("./arch/x86/include/asm/uaccess.h",732);
  
#line 735 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 736 
                                                                    n = _copy_to_user(to,from,(unsigned int)n);
  else 
    
#line 737 
    if (0 != 0) 
#line 738 
                copy_to_user_overflow(); else 
#line 740 
                                              __copy_to_user_overflow();
  
#line 742 
  return n;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1719 
unsigned char *__pskb_pull_tail(struct sk_buff *, int);


#line 1735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int pskb_may_pull(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  unsigned int tmp;
  unsigned char *tmp_1;
  unsigned int tmp_0;
  
#line 1737 
  tmp = skb_headlen((struct sk_buff const *)skb);
  
#line 1737 
  ;
  
#line 1737 
  if ((long)(tmp >= len) != 0L) {
    
#line 1738 
    __retres = 1;
    
#line 1738 
    goto return_label;
  }
  else ;
  
#line 1739 
  if ((long)(skb->len < len) != 0L) {
    
#line 1740 
    __retres = 0;
    
#line 1740 
    goto return_label;
  }
  else ;
  
#line 1741 
  tmp_0 = skb_headlen((struct sk_buff const *)skb);
  
#line 1741 
  ;
  
#line 1741 
  ;
  
#line 1741 
  tmp_1 = __pskb_pull_tail(skb,(int)(len - tmp_0));
  
#line 1741 
  __retres = tmp_1 != (unsigned char *)0U;
  return_label: 
#line 1741 
                return __retres;
}


#line 1859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_inner_mac_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1861 
  __retres = skb->head + (int)skb->inner_mac_header;
  
#line 1861 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_network_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1984 
  tmp = skb_network_header(skb);
  
#line 1984 
  ;
  
#line 1984 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1984 
  return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file_net.h"
extern struct net init_net;


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
__inline static int net_eq(struct net const *net1, struct net const *net2)
{
  int __retres;
  
#line 206 
  __retres = net1 == net2;
  
#line 206 
  return __retres;
}


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
__inline static struct net *read_pnet(possible_net_t const *pnet)
{
  struct net *__retres;
  
#line 253 
  __retres = pnet->net;
  
#line 253 
  return __retres;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_synchronize(struct napi_struct const *n)
{
  int tmp;
  
#line 523 
  goto ldv_41441;
  ldv_41440: 
#line 524 
  ;
  
#line 524 
  msleep(1U);
  ldv_41441: 
#line 525 
  ;
  
#line 523 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 523 
  if (tmp != 0) 
#line 525 
                goto ldv_41440; else 
#line 528 
                                     goto ldv_41442;
  ldv_41442: 
#line 529 
  ;
  
#line 530 
  return;
}


#line 682 
bool rps_may_expire_flow(struct net_device *, u16, u32, u16);


#line 1795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netdev_set_tc_queue(struct net_device *dev, u8 tc, u16 count, u16 offset)
{
  int __retres;
  
#line 1797 
  if ((int)dev->num_tc <= (int)tc) {
    
#line 1798 
    __retres = -22;
    
#line 1798 
    goto return_label;
  }
  else ;
  
#line 1800 
  dev->tc_to_txq[(int)tc].count = count;
  
#line 1801 
  dev->tc_to_txq[(int)tc].offset = offset;
  
#line 1802 
  __retres = 0;
  return_label: 
#line 1802 
                return __retres;
}


#line 1806  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netdev_set_num_tc(struct net_device *dev, u8 num_tc)
{
  int __retres;
  
#line 1808 
  if ((unsigned int)num_tc > 16U) {
    
#line 1809 
    __retres = -22;
    
#line 1809 
    goto return_label;
  }
  else ;
  
#line 1811 
  dev->num_tc = num_tc;
  
#line 1812 
  __retres = 0;
  return_label: 
#line 1812 
                return __retres;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct net *dev_net(struct net_device const *dev)
{
  struct net *tmp;
  
#line 1856 
  tmp = read_pnet(& dev->nd_net);
  
#line 1856 
  return tmp;
}


#line 2103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct net_device *netdev_notifier_info_to_dev(struct netdev_notifier_info const *info)
{
  struct net_device *__retres;
  
#line 2105 
  __retres = info->dev;
  
#line 2105 
  return __retres;
}


#line 2205 
static void ldv_free_netdev_122(struct net_device *ldv_func_arg1);


#line 2505 
void netif_schedule_queue(struct netdev_queue *);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2535 
  i = 0U;
  
#line 2535 
  goto ldv_42508;
  ldv_42507: 
#line 2536 
  ;
  {
    
#line 2536 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2537 
    netif_tx_start_queue(txq);
  }
  
#line 2535 
  i += 1U;
  ldv_42508: 
#line 2536 
  ;
  
#line 2535 
  if (dev->num_tx_queues > i) 
#line 2537 
                              goto ldv_42507; else 
#line 2540 
                                                   goto ldv_42509;
  ldv_42509: 
#line 2541 
  ;
  
#line 2542 
  return;
}


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 3003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_put(struct net_device *dev)
{
  {
    
#line 3005 
    void const *__vpp_verify = (void const *)0;
    
#line 3005 
    void const *tmp = __vpp_verify;
  }
  
#line 3005 
  switch (4UL) {
    case (unsigned long)1: 
#line 3005 
    ;
    {
      
#line 3005 
      int const pao_ID__ = -1;
      
#line 3005 
      switch (4UL) {
        case (unsigned long)1: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42767;
        case (unsigned long)2: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42767;
        case (unsigned long)4: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42767;
        case (unsigned long)8: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42767;
        default: 
#line 3005 
        ;
        
#line 3005 
        __bad_percpu_size();
      }
      ldv_42767: 
#line 3005 
      ;
    }
    
#line 3005 
    goto ldv_42772;
    case (unsigned long)2: 
#line 3005 
    ;
    {
      
#line 3005 
      int const pao_ID___0 = -1;
      
#line 3005 
      switch (4UL) {
        case (unsigned long)1: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42778;
        case (unsigned long)2: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42778;
        case (unsigned long)4: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42778;
        case (unsigned long)8: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42778;
        default: 
#line 3005 
        ;
        
#line 3005 
        __bad_percpu_size();
      }
      ldv_42778: 
#line 3005 
      ;
    }
    
#line 3005 
    goto ldv_42772;
    case (unsigned long)4: 
#line 3005 
    ;
    {
      
#line 3005 
      int const pao_ID___1 = -1;
      
#line 3005 
      switch (4UL) {
        case (unsigned long)1: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42788;
        case (unsigned long)2: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42788;
        case (unsigned long)4: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42788;
        case (unsigned long)8: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42788;
        default: 
#line 3005 
        ;
        
#line 3005 
        __bad_percpu_size();
      }
      ldv_42788: 
#line 3005 
      ;
    }
    
#line 3005 
    goto ldv_42772;
    case (unsigned long)8: 
#line 3005 
    ;
    {
      
#line 3005 
      int const pao_ID___2 = -1;
      
#line 3005 
      switch (4UL) {
        case (unsigned long)1: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42798;
        case (unsigned long)2: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42798;
        case (unsigned long)4: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42798;
        case (unsigned long)8: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_42798;
        default: 
#line 3005 
        ;
        
#line 3005 
        __bad_percpu_size();
      }
      ldv_42798: 
#line 3005 
      ;
    }
    
#line 3005 
    goto ldv_42772;
    default: 
#line 3005 
    ;
    
#line 3005 
    __bad_size_call_parameter();
    
#line 3005 
    goto ldv_42772;
  }
  ldv_42772: 
#line 3005 
  ;
  
#line 3006 
  return;
}


#line 3014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_hold(struct net_device *dev)
{
  {
    
#line 3016 
    void const *__vpp_verify = (void const *)0;
    
#line 3016 
    void const *tmp = __vpp_verify;
  }
  
#line 3016 
  switch (4UL) {
    case (unsigned long)1: 
#line 3016 
    ;
    {
      
#line 3016 
      int const pao_ID__ = 1;
      
#line 3016 
      switch (4UL) {
        case (unsigned long)1: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42813;
        case (unsigned long)2: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42813;
        case (unsigned long)4: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42813;
        case (unsigned long)8: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42813;
        default: 
#line 3016 
        ;
        
#line 3016 
        __bad_percpu_size();
      }
      ldv_42813: 
#line 3016 
      ;
    }
    
#line 3016 
    goto ldv_42818;
    case (unsigned long)2: 
#line 3016 
    ;
    {
      
#line 3016 
      int const pao_ID___0 = 1;
      
#line 3016 
      switch (4UL) {
        case (unsigned long)1: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42824;
        case (unsigned long)2: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42824;
        case (unsigned long)4: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42824;
        case (unsigned long)8: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42824;
        default: 
#line 3016 
        ;
        
#line 3016 
        __bad_percpu_size();
      }
      ldv_42824: 
#line 3016 
      ;
    }
    
#line 3016 
    goto ldv_42818;
    case (unsigned long)4: 
#line 3016 
    ;
    {
      
#line 3016 
      int const pao_ID___1 = 1;
      
#line 3016 
      switch (4UL) {
        case (unsigned long)1: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42834;
        case (unsigned long)2: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42834;
        case (unsigned long)4: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42834;
        case (unsigned long)8: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42834;
        default: 
#line 3016 
        ;
        
#line 3016 
        __bad_percpu_size();
      }
      ldv_42834: 
#line 3016 
      ;
    }
    
#line 3016 
    goto ldv_42818;
    case (unsigned long)8: 
#line 3016 
    ;
    {
      
#line 3016 
      int const pao_ID___2 = 1;
      
#line 3016 
      switch (4UL) {
        case (unsigned long)1: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42844;
        case (unsigned long)2: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42844;
        case (unsigned long)4: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42844;
        case (unsigned long)8: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_42844;
        default: 
#line 3016 
        ;
        
#line 3016 
        __bad_percpu_size();
      }
      ldv_42844: 
#line 3016 
      ;
    }
    
#line 3016 
    goto ldv_42818;
    default: 
#line 3016 
    ;
    
#line 3016 
    __bad_size_call_parameter();
    
#line 3016 
    goto ldv_42818;
  }
  ldv_42818: 
#line 3016 
  ;
  
#line 3017 
  return;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_62(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_65(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_lock(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3219 
  ldv_spin_lock_67(& dev->tx_global_lock);
  {
    int pscr_ret__;
    {
      
#line 3220 
      void const *__vpp_verify = (void const *)0;
      
#line 3220 
      void const *tmp = __vpp_verify;
    }
    
#line 3220 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3220 
      ;
      {
        int pfo_ret__;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43018;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43018;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43018;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43018;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43018: 
#line 3220 
        ;
        
#line 3220 
        tmp_0 = pfo_ret__;
      }
      
#line 3220 
      pscr_ret__ = tmp_0;
      
#line 3220 
      goto ldv_43024;
      case (unsigned long)2: 
#line 3220 
      ;
      {
        int pfo_ret___0;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43028;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43028;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43028;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43028;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43028: 
#line 3220 
        ;
        
#line 3220 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3220 
      pscr_ret__ = tmp_0_0;
      
#line 3220 
      goto ldv_43024;
      case (unsigned long)4: 
#line 3220 
      ;
      {
        int pfo_ret___1;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43037;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43037;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43037;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43037;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43037: 
#line 3220 
        ;
        
#line 3220 
        tmp_1 = pfo_ret___1;
      }
      
#line 3220 
      pscr_ret__ = tmp_1;
      
#line 3220 
      goto ldv_43024;
      case (unsigned long)8: 
#line 3220 
      ;
      {
        int pfo_ret___2;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43046;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43046;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43046;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43046;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43046: 
#line 3220 
        ;
        
#line 3220 
        tmp_2 = pfo_ret___2;
      }
      
#line 3220 
      pscr_ret__ = tmp_2;
      
#line 3220 
      goto ldv_43024;
      default: 
#line 3220 
      ;
      
#line 3220 
      __bad_size_call_parameter();
      
#line 3220 
      goto ldv_43024;
    }
    ldv_43024: 
#line 3220 
    ;
    
#line 3220 
    tmp_3 = pscr_ret__;
  }
  
#line 3220 
  cpu = tmp_3;
  
#line 3221 
  i = 0U;
  
#line 3221 
  goto ldv_43056;
  ldv_43055: 
#line 3222 
  ;
  {
    
#line 3222 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3230 
    __netif_tx_lock(txq,cpu);
    
#line 3231 
    set_bit(2L,(unsigned long volatile *)(& txq->state));
    
#line 3232 
    __netif_tx_unlock(txq);
  }
  
#line 3221 
  i += 1U;
  ldv_43056: 
#line 3222 
  ;
  
#line 3221 
  if (dev->num_tx_queues > i) 
#line 3223 
                              goto ldv_43055; else 
#line 3226 
                                                   goto ldv_43057;
  ldv_43057: 
#line 3227 
  ;
  
#line 3228 
  return;
}


#line 3236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_lock_bh(struct net_device *dev)
{
  
#line 3238 
  local_bh_disable();
  
#line 3239 
  netif_tx_lock(dev);
  
#line 3240 
  return;
}


#line 3242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_unlock(struct net_device *dev)
{
  unsigned int i;
  
#line 3246 
  i = 0U;
  
#line 3246 
  goto ldv_43067;
  ldv_43066: 
#line 3247 
  ;
  {
    
#line 3247 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3253 
    set_bit(2L,(unsigned long volatile *)(& txq->state));
    
#line 3254 
    netif_schedule_queue(txq);
  }
  
#line 3246 
  i += 1U;
  ldv_43067: 
#line 3247 
  ;
  
#line 3246 
  if (dev->num_tx_queues > i) 
#line 3248 
                              goto ldv_43066; else 
#line 3251 
                                                   goto ldv_43068;
  ldv_43068: 
#line 3252 
  ;
  
#line 3256 
  ldv_spin_unlock_68(& dev->tx_global_lock);
  
#line 3257 
  return;
}


#line 3259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_unlock_bh(struct net_device *dev)
{
  
#line 3261 
  netif_tx_unlock(dev);
  
#line 3262 
  local_bh_enable();
  
#line 3263 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43082;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43082;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43082;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43082;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43082: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_43088;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43092;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43092;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43092;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43092;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43092: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_43088;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43101;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43101;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43101;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43101;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43101: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_43088;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43110;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43110;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43110;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43110;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43110: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_43088;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_43088;
    }
    ldv_43088: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_43120;
  ldv_43119: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_start_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_43120: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_43119; else 
#line 3294 
                                                   goto ldv_43121;
  ldv_43121: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_addr_lock_bh(struct net_device *dev)
{
  
#line 3316 
  ldv_spin_lock_bh_71(& dev->addr_list_lock);
  
#line 3317 
  return;
}


#line 3324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_addr_unlock_bh(struct net_device *dev)
{
  
#line 3326 
  ldv_spin_unlock_bh_73(& dev->addr_list_lock);
  
#line 3327 
  return;
}


#line 3355 
static int ldv_register_netdev_134(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_119(struct net_device *ldv_func_arg1);


#line 3472 
void netdev_features_change(struct net_device *);


#line 3532 
struct net_device *netdev_master_upper_dev_get(struct net_device *);


#line 3549 
void netdev_rss_key_fill(void *, size_t);


#line 3650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static netdev_features_t netdev_intersect_features(netdev_features_t f1, netdev_features_t f2)
{
  
#line 3653 
  if ((f1 & 8ULL) != 0ULL) 
#line 3654 
                           f1 |= 18ULL; else ;
  
#line 3655 
  if ((f2 & 8ULL) != 0ULL) 
#line 3656 
                           f2 |= 18ULL; else ;
  
#line 3657 
  f1 &= f2;
  
#line 3658 
  if ((f1 & 8ULL) != 0ULL) 
#line 3659 
                           f1 &= 18446744073709551597ULL; else ;
  
#line 3661 
  return f1;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_131(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_broadcast_addr(u8 *addr)
{
  
#line 235 
  memset((void *)addr,255,6UL);
  
#line 236 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal_64bits(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 343 
  u64 fold = *((u64 const *)addr1) ^ *((u64 const *)addr2);
  
#line 348 
  __retres = (_Bool)(fold << 16 == 0ULL);
  
#line 348 
  return __retres;
}


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
int rtnl_is_locked(void);


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 __vlan_get_protocol(struct sk_buff *skb, __be16 type, int *depth)
{
  __be16 __retres;
  
#line 484 
  unsigned int vlan_depth = (unsigned int)skb->mac_len;
  
#line 490 
  if ((unsigned int)type == 129U || (unsigned int)type == 43144U) {
    
#line 491 
    if (vlan_depth != 0U) {
      int tmp;
      {
        
#line 492 
        int __ret_warn_on = vlan_depth <= 3U;
        
#line 492 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 492 
                                              warn_slowpath_null("include/linux/if_vlan.h",492); else ;
        
#line 492 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 492 
      if ((long)tmp != 0L) {
        
#line 493 
        __retres = (unsigned short)0U;
        
#line 493 
        goto return_label;
      }
      else ;
      
#line 494 
      vlan_depth += 4294967292U;
    }
    else 
#line 496 
         vlan_depth = 14U;
    ldv_48793: 
#line 497 
    ;
    {
      struct vlan_hdr *vh;
      int tmp_0;
      
#line 501 
      tmp_0 = pskb_may_pull(skb,vlan_depth + 4U);
      
#line 501 
      if ((long)(tmp_0 == 0) != 0L) {
        
#line 503 
        __retres = (unsigned short)0U;
        
#line 503 
        goto return_label;
      }
      else ;
      
#line 505 
      vh = (struct vlan_hdr *)(skb->data + vlan_depth);
      
#line 506 
      type = vh->h_vlan_encapsulated_proto;
      
#line 507 
      vlan_depth += 4U;
    }
    
#line 509 
    if ((unsigned int)type == 129U || (unsigned int)type == 43144U) 
#line 511 
                                                                    goto ldv_48793; else 
                                                                    
#line 514 
                                                                    goto ldv_48794;
    ldv_48794: 
#line 515 
    ;
  }
  else ;
  
#line 512 
  if (depth != (int *)0) 
#line 513 
                         *depth = (int)vlan_depth; else ;
  
#line 515 
  __retres = type;
  return_label: 
#line 515 
                return __retres;
}


#line 525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 vlan_get_protocol(struct sk_buff *skb)
{
  __be16 tmp;
  
#line 527 
  tmp = __vlan_get_protocol(skb,(unsigned short)((int)skb->protocol),(int *)0);
  
#line 527 
  return tmp;
}


#line 588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static bool skb_vlan_tagged_multi(struct sk_buff const *skb)
{
  bool __retres;
  
#line 590 
  __be16 protocol = skb->protocol;
  
#line 592 
  if (((int)skb->vlan_tci & 4096) == 0) {
    struct vlan_ethhdr *veh;
    
#line 595 
    if ((long)(((unsigned int)protocol != 129U && (unsigned int)protocol != 43144U) != 0) != 0L) {
      
#line 597 
      __retres = (_Bool)0;
      
#line 597 
      goto return_label;
    }
    else ;
    
#line 599 
    veh = (struct vlan_ethhdr *)skb->data;
    
#line 600 
    protocol = veh->h_vlan_encapsulated_proto;
  }
  else ;
  
#line 603 
  if ((unsigned int)protocol != 129U && (unsigned int)protocol != 43144U) {
    
#line 604 
    __retres = (_Bool)0;
    
#line 604 
    goto return_label;
  }
  else ;
  
#line 606 
  __retres = (_Bool)1;
  return_label: 
#line 606 
                return __retres;
}


#line 616  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static netdev_features_t vlan_features_check(struct sk_buff const *skb, netdev_features_t features)
{
  bool tmp;
  
#line 619 
  tmp = skb_vlan_tagged_multi(skb);
  
#line 619 
  if ((int)tmp != 0) 
#line 620 
                     features = netdev_intersect_features(features,549755814121ULL); else ;
  
#line 628 
  return features;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hash.h"
__inline static u64 hash_64(u64 val, unsigned int bits)
{
  u64 __retres;
  
#line 37 
  u64 hash = val;
  
#line 40 
  hash *= 11400862456688148481ULL;
  
#line 59 
  __retres = hash >> (64U - bits);
  
#line 59 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff const *skb)
{
  struct ipv6hdr *tmp;
  
#line 76 
  tmp = (struct ipv6hdr *)skb_network_header(skb);
  
#line 76 
  return tmp;
}


#line 255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip.h"
__inline static bool ip_is_fragment(struct iphdr const *iph)
{
  bool __retres;
  
#line 257 
  __retres = (_Bool)(((int)iph->frag_off & 65343) != 0);
  
#line 257 
  return __retres;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/vxlan.h"
__inline static netdev_features_t vxlan_features_check(struct sk_buff *skb, netdev_features_t features)
{
  netdev_features_t __retres;
  __be16 tmp;
  
#line 156 
  u8 l4_hdr = (unsigned char)0U;
  
#line 158 
  if ((unsigned int)*((unsigned char *)skb + 146UL) == 0U) {
    
#line 159 
    __retres = features;
    
#line 159 
    goto return_label;
  }
  else ;
  
#line 161 
  tmp = vlan_get_protocol(skb);
  
#line 161 
  switch ((int)tmp) {
    struct iphdr *tmp_0;
    struct ipv6hdr *tmp_1;
    case 8: 
#line 162 
    ;
    
#line 163 
    tmp_0 = ip_hdr((struct sk_buff const *)skb);
    
#line 163 
    l4_hdr = tmp_0->protocol;
    
#line 164 
    goto ldv_51073;
    case 56710: 
#line 165 
    ;
    
#line 166 
    tmp_1 = ipv6_hdr((struct sk_buff const *)skb);
    
#line 166 
    l4_hdr = tmp_1->nexthdr;
    
#line 167 
    goto ldv_51073;
    default: 
#line 168 
    ;
    
#line 169 
    __retres = features;
    
#line 169 
    goto return_label;
  }
  ldv_51073: 
#line 172 
  ;
  
#line 172 
  if ((unsigned int)l4_hdr == 17U) 
    
#line 172 
    if ((unsigned int)*((unsigned char *)skb + 147UL) != 0U || (unsigned int)skb->__anonCompField_sk_buff_72.inner_protocol != 22629U) {
      
#line 177 
      __retres = features & 18446744073172746213ULL;
      
#line 177 
      goto return_label;
    }
    else {
      unsigned char *tmp_2;
      unsigned char *tmp_3;
      
#line 174 
      tmp_2 = skb_inner_mac_header((struct sk_buff const *)skb);
      
#line 175 
      tmp_3 = skb_transport_header((struct sk_buff const *)skb);
      
#line 174 
      if ((long)tmp_2 - (long)tmp_3 != 16L) {
        
#line 177 
        __retres = features & 18446744073172746213ULL;
        
#line 177 
        goto return_label;
      }
      else ;
    }
  else ;
  
#line 179 
  __retres = features;
  return_label: 
#line 179 
                return __retres;
}


#line 188 
void vxlan_get_rx_port(struct net_device *);


#line 1017  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
__inline static int mlx4_is_slave(struct mlx4_dev *dev)
{
  int __retres;
  
#line 1019 
  __retres = (int)dev->flags & 8;
  
#line 1019 
  return __retres;
}


#line 1071 
int mlx4_alloc_hwq_res(struct mlx4_dev *, struct mlx4_hwq_resources *, int, int);


#line 1073 
void mlx4_free_hwq_res(struct mlx4_dev *, struct mlx4_hwq_resources *, int);


#line 1080 
int mlx4_qp_reserve_range(struct mlx4_dev *, int, int, int *, u8);


#line 1082 
void mlx4_qp_release_range(struct mlx4_dev *, int, int);


#line 1094 
int mlx4_INIT_PORT(struct mlx4_dev *, int);


#line 1095 
int mlx4_CLOSE_PORT(struct mlx4_dev *, int);


#line 1097 
int mlx4_unicast_attach(struct mlx4_dev *, struct mlx4_qp *, u8 *, int, enum mlx4_protocol);


#line 1099 
int mlx4_unicast_detach(struct mlx4_dev *, struct mlx4_qp *, u8 *, enum mlx4_protocol);


#line 1101 
int mlx4_multicast_attach(struct mlx4_dev *, struct mlx4_qp *, u8 *, u8, int, enum mlx4_protocol, u64 *);


#line 1104 
int mlx4_multicast_detach(struct mlx4_dev *, struct mlx4_qp *, u8 *, enum mlx4_protocol, u64);


#line 1313 
int mlx4_flow_steer_promisc_add(struct mlx4_dev *, u8, u32, enum mlx4_net_trans_promisc_mode);


#line 1315 
int mlx4_flow_steer_promisc_remove(struct mlx4_dev *, u8, enum mlx4_net_trans_promisc_mode);


#line 1317 
int mlx4_multicast_promisc_add(struct mlx4_dev *, u32, u8);


#line 1318 
int mlx4_multicast_promisc_remove(struct mlx4_dev *, u32, u8);


#line 1319 
int mlx4_unicast_promisc_add(struct mlx4_dev *, u32, u8);


#line 1320 
int mlx4_unicast_promisc_remove(struct mlx4_dev *, u32, u8);


#line 1321 
int mlx4_SET_MCAST_FLTR(struct mlx4_dev *, u8, u64, u64, u8);


#line 1323 
int mlx4_register_mac(struct mlx4_dev *, u8, u64);


#line 1324 
void mlx4_unregister_mac(struct mlx4_dev *, u8, u64);


#line 1325 
int mlx4_get_base_qpn(struct mlx4_dev *, u8);


#line 1326 
int __mlx4_replace_mac(struct mlx4_dev *, u8, int, u64);


#line 1329 
int mlx4_SET_PORT_qpn_calc(struct mlx4_dev *, u8, u32, u8);


#line 1332 
int mlx4_SET_PORT_fcs_check(struct mlx4_dev *, u8, u8);


#line 1334 
int mlx4_SET_PORT_VXLAN(struct mlx4_dev *, u8, u8, int);


#line 1337 
int mlx4_register_vlan(struct mlx4_dev *, u8, u16, int *);


#line 1338 
void mlx4_unregister_vlan(struct mlx4_dev *, u8, u16);


#line 1352 
struct cpu_rmap *mlx4_get_cpu_rmap(struct mlx4_dev *, int);


#line 1380 
int mlx4_tunnel_steer_add(struct mlx4_dev *, unsigned char *, int, int, u16, u64 *);


#line 1438 
int mlx4_config_vxlan_port(struct mlx4_dev *, __be16);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/driver.h"
int mlx4_bond(struct mlx4_dev *);


#line 71 
int mlx4_unbond(struct mlx4_dev *);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/driver.h"
__inline static int mlx4_is_bonded(struct mlx4_dev *dev)
{
  int __retres;
  
#line 74 
  __retres = (dev->flags & 128UL) != 0UL;
  
#line 74 
  return __retres;
}


#line 82 
int mlx4_port_map_set(struct mlx4_dev *, struct mlx4_port_map *);


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/driver.h"
__inline static u64 mlx4_mac_to_u64(u8 *addr)
{
  int i;
  
#line 88 
  u64 mac = 0ULL;
  
#line 91 
  i = 0;
  
#line 91 
  goto ldv_55719;
  ldv_55718: 
#line 92 
  ;
  
#line 92 
  mac <<= 8;
  
#line 93 
  mac = (unsigned long long)*(addr + i) | mac;
  
#line 91 
  i += 1;
  ldv_55719: 
#line 92 
  ;
  
#line 91 
  if (i <= 5) 
#line 93 
              goto ldv_55718; else 
#line 96 
                                   goto ldv_55720;
  ldv_55720: 
#line 97 
  ;
  
#line 95 
  return mac;
}


#line 307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cmd.h"
int mlx4_get_vf_stats(struct mlx4_dev *, int, int, struct ifla_vf_stats *);


#line 310 
int mlx4_set_vf_mac(struct mlx4_dev *, int, int, u64);


#line 311 
int mlx4_set_vf_vlan(struct mlx4_dev *, int, int, u16, u8);


#line 312 
int mlx4_set_vf_rate(struct mlx4_dev *, int, int, int, int);


#line 314 
int mlx4_set_vf_spoofchk(struct mlx4_dev *, int, int, bool);


#line 315 
int mlx4_get_vf_config(struct mlx4_dev *, int, int, struct ifla_vf_info *);


#line 316 
int mlx4_set_vf_link_state(struct mlx4_dev *, int, int, int);


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
int mlx4_update_qp(struct mlx4_dev *, u32, enum mlx4_update_qp_attr, struct mlx4_update_qp_params *);


#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
__inline static struct mlx4_cqe *mlx4_en_get_cqe(void *buf, int idx, int cqe_sz)
{
  struct mlx4_cqe *__retres;
  
#line 621 
  __retres = (struct mlx4_cqe *)(buf + idx * cqe_sz);
  
#line 621 
  return __retres;
}


#line 625  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
__inline static void mlx4_en_cq_init_lock(struct mlx4_en_cq *cq)
{
  
#line 627 
  spinlock_check(& cq->poll_lock);
  {
    struct lock_class_key __key;
    
#line 627 
    __raw_spin_lock_init(& cq->poll_lock.__anonCompField_spinlock_18.rlock,"&(&cq->poll_lock)->rlock",& __key);
  }
  
#line 628 
  cq->state = 0U;
  
#line 629 
  return;
}


#line 632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
__inline static bool mlx4_en_cq_lock_napi(struct mlx4_en_cq *cq)
{
  bool __retres;
  
#line 634 
  int rc = 1;
  
#line 635 
  ldv_spin_lock_75(& cq->poll_lock);
  
#line 636 
  if ((cq->state & 3U) != 0U) {
    {
      
#line 637 
      int __ret_warn_on = (cq->state & 1U) != 0U;
      
#line 637 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 637 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h",637); else ;
      
#line 637 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 638 
    cq->state |= 4U;
    
#line 639 
    rc = 0;
  }
  else 
#line 642 
       cq->state = 1U;
  
#line 643 
  ldv_spin_unlock_76(& cq->poll_lock);
  
#line 644 
  __retres = (_Bool)(rc != 0);
  
#line 644 
  return __retres;
}


#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
__inline static bool mlx4_en_cq_lock_poll(struct mlx4_en_cq *cq)
{
  bool __retres;
  
#line 665 
  int rc = 1;
  
#line 666 
  ldv_spin_lock_bh_79(& cq->poll_lock);
  
#line 667 
  if ((cq->state & 3U) != 0U) {
    
#line 668 
    struct net_device *dev = cq->dev;
    
#line 669 
    struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
    
#line 670 
    struct mlx4_en_rx_ring *rx_ring = priv->rx_ring[cq->ring];
    
#line 672 
    cq->state |= 8U;
    
#line 673 
    rc = 0;
    
#line 674 
    rx_ring->yields += 1UL;
  }
  else 
#line 677 
       cq->state |= 2U;
  
#line 678 
  ldv_spin_unlock_bh_80(& cq->poll_lock);
  
#line 679 
  __retres = (_Bool)(rc != 0);
  
#line 679 
  return __retres;
}


#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
__inline static bool mlx4_en_cq_unlock_poll(struct mlx4_en_cq *cq)
{
  bool __retres;
  
#line 685 
  int rc = 0;
  
#line 686 
  ldv_spin_lock_bh_81(& cq->poll_lock);
  {
    
#line 687 
    int __ret_warn_on = (cq->state & 1U) != 0U;
    
#line 687 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 687 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h",687); else ;
    
#line 687 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 689 
  if ((cq->state & 8U) != 0U) 
#line 690 
                              rc = 1; else ;
  
#line 691 
  cq->state = 0U;
  
#line 692 
  ldv_spin_unlock_bh_82(& cq->poll_lock);
  
#line 693 
  __retres = (_Bool)(rc != 0);
  
#line 693 
  return __retres;
}


#line 735 
void mlx4_en_update_loopback_state(struct net_device *dev, netdev_features_t features);


#line 738 
void mlx4_en_destroy_netdev(struct net_device *dev);


#line 739 
int mlx4_en_init_netdev(struct mlx4_en_dev *mdev, int port, struct mlx4_en_port_profile *prof);


#line 745 
void mlx4_en_set_stats_bitmap(struct mlx4_dev *dev, struct mlx4_en_stats_bitmap *stats_bitmap, u8 rx_ppp, u8 rx_pause, u8 tx_ppp, u8 tx_pause);


#line 753 
int mlx4_en_create_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq **pcq, int entries, int ring, enum cq_type mode, int node);


#line 755 
void mlx4_en_destroy_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq **pcq);


#line 756 
int mlx4_en_activate_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq, int cq_idx);


#line 758 
void mlx4_en_deactivate_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq);


#line 760 
int mlx4_en_arm_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq);


#line 763 
u16 mlx4_en_select_queue(struct net_device *dev, struct sk_buff *skb, void *accel_priv, u16 (*fallback)(struct net_device *, struct sk_buff *));


#line 765 
netdev_tx_t mlx4_en_xmit(struct sk_buff *skb, struct net_device *dev);


#line 767 
int mlx4_en_create_tx_ring(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring **pring, u32 size, u16 stride, int node, int queue_index);


#line 771 
void mlx4_en_destroy_tx_ring(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring **pring);


#line 773 
int mlx4_en_activate_tx_ring(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring *ring, int cq, int user_prio);


#line 776 
void mlx4_en_deactivate_tx_ring(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring *ring);


#line 779 
void mlx4_en_recover_from_oom(struct mlx4_en_priv *priv);


#line 780 
int mlx4_en_create_rx_ring(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring **pring, u32 size, u16 stride, int node);


#line 783 
void mlx4_en_destroy_rx_ring(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring **pring, u32 size, u16 stride);


#line 786 
int mlx4_en_activate_rx_rings(struct mlx4_en_priv *priv);


#line 787 
void mlx4_en_deactivate_rx_ring(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring *ring);


#line 789 
int mlx4_en_process_rx_cq(struct net_device *dev, struct mlx4_en_cq *cq, int budget);


#line 801 
void mlx4_en_calc_rx_buf(struct net_device *dev);


#line 802 
int mlx4_en_config_rss_steer(struct mlx4_en_priv *priv);


#line 803 
void mlx4_en_release_rss_steer(struct mlx4_en_priv *priv);


#line 804 
int mlx4_en_create_drop_qp(struct mlx4_en_priv *priv);


#line 805 
void mlx4_en_destroy_drop_qp(struct mlx4_en_priv *priv);


#line 806 
int mlx4_en_free_tx_buf(struct net_device *dev, struct mlx4_en_tx_ring *ring);


#line 816 
struct dcbnl_rtnl_ops const mlx4_en_dcbnl_ops;


#line 817 
struct dcbnl_rtnl_ops const mlx4_en_dcbnl_pfc_ops;


#line 823 
void mlx4_en_cleanup_filters(struct mlx4_en_priv *priv);


#line 828 
void mlx4_en_ptp_overflow_check(struct mlx4_en_dev *mdev);


#line 833 
int mlx4_en_reset_config(struct net_device *dev, struct hwtstamp_config ts_config, netdev_features_t features);


#line 840 
int mlx4_en_netdev_event(struct notifier_block *this, unsigned long event, void *ptr);


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
int mlx4_en_setup_tc(struct net_device *dev, u8 up_0)
{
  int __retres;
  int i;
  
#line 54 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 56 
  unsigned int offset = 0U;
  
#line 58 
  if ((unsigned int)up_0 != 0U && (unsigned int)up_0 != 8U) {
    
#line 59 
    __retres = -22;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  netdev_set_num_tc(dev,(unsigned char)((int)up_0));
  
#line 64 
  i = 0;
  
#line 64 
  goto ldv_57649;
  ldv_57648: 
#line 65 
  ;
  
#line 65 
  netdev_set_tc_queue(dev,(unsigned char)((int)((unsigned char)i)),(unsigned short)((int)priv->num_tx_rings_p_up),(unsigned short)((int)((unsigned short)offset)));
  
#line 66 
  offset = (unsigned int)priv->num_tx_rings_p_up + offset;
  
#line 64 
  i += 1;
  ldv_57649: 
#line 65 
  ;
  
#line 64 
  if ((int)up_0 > i) 
#line 66 
                     goto ldv_57648; else 
#line 69 
                                          goto ldv_57650;
  ldv_57650: 
#line 70 
  ;
  
#line 69 
  __retres = 0;
  return_label: 
#line 69 
                return __retres;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_low_latency_recv(struct napi_struct *napi)
{
  int __retres;
  struct mlx4_en_cq *tmp;
  int done;
  int tmp_2;
  bool tmp_1;
  {
    
#line 76 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 76 
    tmp = (struct mlx4_en_cq *)__mptr + 18446744073709551296U;
  }
  
#line 76 
  struct mlx4_en_cq *cq = tmp;
  
#line 77 
  struct net_device *dev = cq->dev;
  
#line 78 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 79 
  struct mlx4_en_rx_ring *rx_ring = priv->rx_ring[cq->ring];
  
#line 82 
  if (! priv->port_up) {
    
#line 83 
    __retres = -1;
    
#line 83 
    goto return_label;
  }
  else ;
  
#line 85 
  tmp_1 = mlx4_en_cq_lock_poll(cq);
  
#line 85 
  if (tmp_1) 
#line 85 
             tmp_2 = 0; else 
#line 85 
                             tmp_2 = 1;
  
#line 85 
  if (tmp_2) {
    
#line 86 
    __retres = -2;
    
#line 86 
    goto return_label;
  }
  else ;
  
#line 88 
  done = mlx4_en_process_rx_cq(dev,cq,4);
  
#line 89 
  if ((long)(done != 0) != 0L) 
#line 90 
                               rx_ring->cleaned += (unsigned long)done; else 
                                                                    
#line 92 
                                                                    rx_ring->misses += 1UL;
  
#line 94 
  mlx4_en_cq_unlock_poll(cq);
  
#line 96 
  __retres = done;
  return_label: 
#line 96 
                return __retres;
}


#line 123 
static void mlx4_en_filter_rfs_expire(struct mlx4_en_priv *priv);


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static enum mlx4_net_trans_rule_id mlx4_ip_proto_to_trans_rule_id(u8 ip_proto)
{
  enum mlx4_net_trans_rule_id __retres;
  
#line 127 
  switch ((int)ip_proto) {
    case 17: 
#line 128 
    ;
    
#line 129 
    __retres = MLX4_NET_TRANS_RULE_ID_UDP;
    
#line 129 
    goto return_label;
    case 6: 
#line 130 
    ;
    
#line 131 
    __retres = MLX4_NET_TRANS_RULE_ID_TCP;
    
#line 131 
    goto return_label;
    default: 
#line 132 
    ;
    
#line 133 
    __retres = MLX4_NET_TRANS_RULE_NUM;
    
#line 133 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_filter_work(struct work_struct *work)
{
  struct mlx4_en_filter *tmp;
  enum mlx4_net_trans_rule_id tmp_0;
  int rc;
  {
    
#line 139 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 139 
    tmp = (struct mlx4_en_filter *)__mptr + 18446744073709551600U;
  }
  
#line 139 
  struct mlx4_en_filter *filter = tmp;
  
#line 142 
  struct mlx4_en_priv *priv = filter->priv;
  
#line 143 
  tmp_0 = mlx4_ip_proto_to_trans_rule_id((unsigned char)((int)filter->ip_proto));
  
#line 143 
  struct mlx4_spec_list spec_tcp_udp = {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .id = tmp_0, .__anonCompField_mlx4_spec_list_97 = {.tcp_udp = {.dst_port = filter->dst_port, .dst_port_msk = (unsigned short)65535U, .src_port = filter->src_port, .src_port_msk = (unsigned short)65535U}}};
  
#line 154 
  struct mlx4_spec_list spec_ip = {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .id = MLX4_NET_TRANS_RULE_ID_IPV4, .__anonCompField_mlx4_spec_list_97 = {.ipv4 = {.dst_ip = filter->dst_ip, .dst_ip_msk = 4294967295U, .src_ip = filter->src_ip, .src_ip_msk = 4294967295U}}};
  
#line 165 
  struct mlx4_spec_list spec_eth = {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .id = MLX4_NET_TRANS_RULE_ID_ETH, .__anonCompField_mlx4_spec_list_97 = {.eth = {.dst_mac = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .dst_mac_msk = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .src_mac = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .src_mac_msk = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .ether_type_enable = (unsigned char)0, .ether_type = (unsigned short)0, .vlan_id_msk = (unsigned short)0, .vlan_id = (unsigned short)0}}};
  
#line 168 
  struct mlx4_net_trans_rule rule = {.list = {.next = & rule.list, .prev = & rule.list}, .queue_mode = MLX4_NET_TRANS_Q_LIFO, .exclusive = (_Bool)1, .allow_loopback = (_Bool)1, .promisc_mode = MLX4_FS_REGULAR, .port = (unsigned char)priv->port, .priority = (unsigned short)12288U, .qpn = 0U};
  
#line 178 
  __be64 mac_mask = 281474976710655ULL;
  
#line 180 
  if (spec_tcp_udp.id > (unsigned int)MLX4_NET_TRANS_RULE_ID_VXLAN) {
    
#line 181 
    en_print("\001",(struct mlx4_en_priv const *)priv,"RFS: ignoring unsupported ip protocol (%d)\n",(int)filter->ip_proto);
    
#line 183 
    goto ignore;
  }
  else ;
  
#line 185 
  list_add_tail(& spec_eth.list,& rule.list);
  
#line 186 
  list_add_tail(& spec_ip.list,& rule.list);
  
#line 187 
  list_add_tail(& spec_tcp_udp.list,& rule.list);
  
#line 189 
  rule.qpn = (unsigned int)priv->rss_map.qps[filter->rxq_index].qpn;
  
#line 190 
  memcpy((void *)(& spec_eth.__anonCompField_mlx4_spec_list_97.eth.dst_mac),(void const *)(priv->dev)->dev_addr,6UL);
  
#line 191 
  memcpy((void *)(& spec_eth.__anonCompField_mlx4_spec_list_97.eth.dst_mac_msk),(void const *)(& mac_mask),6UL);
  
#line 193 
  filter->activated = (unsigned char)0U;
  
#line 195 
  if (filter->reg_id != 0ULL) {
    
#line 196 
    rc = mlx4_flow_detach((priv->mdev)->dev,filter->reg_id);
    
#line 197 
    if (rc != 0 && rc != -2) 
#line 198 
                             en_print("\001",(struct mlx4_en_priv const *)priv,"Error detaching flow. rc = %d\n",rc); else ;
  }
  else ;
  
#line 201 
  rc = mlx4_flow_attach((priv->mdev)->dev,& rule,& filter->reg_id);
  
#line 202 
  if (rc != 0) 
#line 203 
               en_print("\001",(struct mlx4_en_priv const *)priv,"Error attaching flow. err = %d\n",rc); else ;
  ignore: 
#line 205 
  ;
  
#line 206 
  mlx4_en_filter_rfs_expire(priv);
  
#line 208 
  filter->activated = (unsigned char)1U;
  
#line 209 
  return;
}


#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
__inline static struct hlist_head *filter_hash_bucket(struct mlx4_en_priv *priv, __be32 src_ip, __be32 dst_ip, __be16 src_port, __be16 dst_port)
{
  struct hlist_head *__retres;
  unsigned long l;
  int bucket_idx;
  u64 tmp;
  
#line 218 
  l = (unsigned long)src_port | ((unsigned long)dst_port << 2);
  
#line 220 
  l = (unsigned long)(src_ip ^ dst_ip) ^ l;
  
#line 222 
  tmp = hash_64((unsigned long long)l,4U);
  
#line 222 
  bucket_idx = (int)tmp;
  
#line 224 
  __retres = & priv->filter_hash[bucket_idx];
  
#line 224 
  return __retres;
}


#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static struct mlx4_en_filter *mlx4_en_filter_alloc(struct mlx4_en_priv *priv, int rxq_index, __be32 src_ip, __be32 dst_ip, u8 ip_proto, __be16 src_port, __be16 dst_port, u32 flow_id)
{
  struct mlx4_en_filter *__retres;
  int tmp_0;
  struct hlist_head *tmp_1;
  
#line 232 
  struct mlx4_en_filter *filter = (struct mlx4_en_filter *)0;
  
#line 234 
  filter = (struct mlx4_en_filter *)kzalloc_0(168UL,32U);
  
#line 235 
  if (filter == (struct mlx4_en_filter *)0) {
    
#line 236 
    __retres = (struct mlx4_en_filter *)0;
    
#line 236 
    goto return_label;
  }
  else ;
  
#line 238 
  filter->priv = priv;
  
#line 239 
  filter->rxq_index = rxq_index;
  {
    struct lock_class_key __key;
    
#line 240 
    __init_work(& filter->work,0);
    
#line 240 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 240 
    filter->work.data = __constr_expr_37;
    
#line 240 
    lockdep_init_map(& filter->work.lockdep_map,"(&filter->work)",& __key,0);
    
#line 240 
    INIT_LIST_HEAD(& filter->work.entry);
    
#line 240 
    filter->work.func = & mlx4_en_filter_work;
  }
  
#line 242 
  filter->src_ip = src_ip;
  
#line 243 
  filter->dst_ip = dst_ip;
  
#line 244 
  filter->ip_proto = ip_proto;
  
#line 245 
  filter->src_port = src_port;
  
#line 246 
  filter->dst_port = dst_port;
  
#line 248 
  filter->flow_id = flow_id;
  
#line 250 
  tmp_0 = priv->last_filter_id;
  
#line 250 
  priv->last_filter_id += 1;
  
#line 250 
  filter->id = tmp_0 % 65535;
  
#line 252 
  list_add_tail(& filter->next,& priv->filters);
  
#line 253 
  tmp_1 = filter_hash_bucket(priv,src_ip,dst_ip,(unsigned short)((int)src_port),(unsigned short)((int)dst_port));
  
#line 253 
  ;
  
#line 253 
  hlist_add_head(& filter->filter_chain,tmp_1);
  
#line 257 
  __retres = filter;
  return_label: 
#line 257 
                return __retres;
}


#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_filter_free(struct mlx4_en_filter *filter)
{
  int rc;
  
#line 262 
  struct mlx4_en_priv *priv = filter->priv;
  
#line 265 
  list_del(& filter->next);
  
#line 267 
  rc = mlx4_flow_detach((priv->mdev)->dev,filter->reg_id);
  
#line 268 
  if (rc != 0 && rc != -2) 
#line 269 
                           en_print("\001",(struct mlx4_en_priv const *)priv,"Error detaching flow. rc = %d\n",rc); else ;
  
#line 271 
  kfree((void const *)filter);
  
#line 272 
  return;
}


#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
__inline static struct mlx4_en_filter *mlx4_en_filter_find(struct mlx4_en_priv *priv, __be32 src_ip, __be32 dst_ip, u8 ip_proto, __be16 src_port, __be16 dst_port)
{
  struct mlx4_en_filter *filter;
  struct mlx4_en_filter *tmp_2;
  struct mlx4_en_filter *tmp_5;
  
#line 279 
  struct mlx4_en_filter *ret = (struct mlx4_en_filter *)0;
  {
    struct hlist_head *tmp;
    struct mlx4_en_filter *tmp_1;
    
#line 281 
    tmp = filter_hash_bucket(priv,src_ip,dst_ip,(unsigned short)((int)src_port),(unsigned short)((int)dst_port));
    
#line 281 
    struct hlist_node *____ptr = tmp->first;
    
#line 281 
    if (____ptr != (struct hlist_node *)0) {
      struct mlx4_en_filter *tmp_0;
      {
        
#line 281 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 281 
        tmp_0 = (struct mlx4_en_filter *)__mptr + 18446744073709551464U;
      }
      
#line 281 
      tmp_1 = tmp_0;
    }
    else 
#line 281 
         tmp_1 = (struct mlx4_en_filter *)0;
    
#line 281 
    tmp_2 = tmp_1;
  }
  
#line 281 
  filter = tmp_2;
  
#line 281 
  goto ldv_57745;
  ldv_57744: 
#line 282 
  ;
  
#line 285 
  if ((((filter->src_ip == src_ip && filter->dst_ip == dst_ip) && (int)filter->ip_proto == (int)ip_proto) && (int)filter->src_port == (int)src_port) && (int)filter->dst_port == (int)dst_port) {
    
#line 290 
    ret = filter;
    
#line 291 
    goto ldv_57743;
  }
  else ;
  {
    struct mlx4_en_filter *tmp_4;
    
#line 281 
    struct hlist_node *____ptr_0 = filter->filter_chain.next;
    
#line 281 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct mlx4_en_filter *tmp_3;
      {
        
#line 281 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 281 
        tmp_3 = (struct mlx4_en_filter *)__mptr_0 + 18446744073709551464U;
      }
      
#line 281 
      tmp_4 = tmp_3;
    }
    else 
#line 281 
         tmp_4 = (struct mlx4_en_filter *)0;
    
#line 281 
    tmp_5 = tmp_4;
  }
  
#line 281 
  filter = tmp_5;
  ldv_57745: 
#line 283 
  ;
  
#line 281 
  if (filter != (struct mlx4_en_filter *)0) 
#line 283 
                                            goto ldv_57744; else 
#line 286 
                                                                 goto ldv_57743;
  ldv_57743: 
#line 287 
  ;
  
#line 295 
  return ret;
}


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_filter_rfs(struct net_device *net_dev, struct sk_buff const *skb, u16 rxq_index, u32 flow_id)
{
  int __retres;
  struct mlx4_en_filter *filter;
  struct iphdr const *ip;
  __be16 const *ports;
  u8 ip_proto;
  __be32 src_ip;
  __be32 dst_ip;
  __be16 src_port;
  __be16 dst_port;
  bool tmp_1;
  
#line 302 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)net_dev);
  
#line 311 
  int nhoff = skb_network_offset(skb);
  
#line 312 
  int ret = 0;
  
#line 314 
  if ((unsigned int)skb->protocol != 8U) {
    
#line 315 
    __retres = -93;
    
#line 315 
    goto return_label;
  }
  else ;
  
#line 317 
  ip = (struct iphdr const *)(skb->data + nhoff);
  
#line 318 
  tmp_1 = ip_is_fragment(ip);
  
#line 318 
  if ((int)tmp_1 != 0) {
    
#line 319 
    __retres = -93;
    
#line 319 
    goto return_label;
  }
  else ;
  
#line 321 
  if ((unsigned int)ip->protocol != 6U && (unsigned int)ip->protocol != 17U) {
    
#line 322 
    __retres = -93;
    
#line 322 
    goto return_label;
  }
  else ;
  
#line 323 
  ports = (__be16 const *)(skb->data + (nhoff + (int)ip->ihl * 4));
  
#line 325 
  ip_proto = ip->protocol;
  
#line 326 
  src_ip = ip->saddr;
  
#line 327 
  dst_ip = ip->daddr;
  
#line 328 
  src_port = *ports;
  
#line 329 
  dst_port = *(ports + 1U);
  
#line 331 
  ldv_spin_lock_bh_83_0(& priv->filters_lock);
  
#line 332 
  filter = mlx4_en_filter_find(priv,src_ip,dst_ip,(unsigned char)((int)ip_proto),(unsigned short)((int)src_port),(unsigned short)((int)dst_port));
  
#line 334 
  if (filter != (struct mlx4_en_filter *)0) {
    
#line 335 
    if (filter->rxq_index == (int)rxq_index) 
#line 336 
                                             goto out; else ;
    
#line 338 
    filter->rxq_index = (int)rxq_index;
  }
  else {
    
#line 340 
    filter = mlx4_en_filter_alloc(priv,(int)rxq_index,src_ip,dst_ip,(unsigned char)((int)ip_proto),(unsigned short)((int)src_port),(unsigned short)((int)dst_port),flow_id);
    
#line 343 
    if (filter == (struct mlx4_en_filter *)0) {
      
#line 344 
      ret = -12;
      
#line 345 
      goto err;
    }
    else ;
  }
  
#line 349 
  ldv_queue_work_84((priv->mdev)->workqueue,& filter->work);
  out: 
#line 351 
  ;
  
#line 352 
  ret = filter->id;
  err: 
#line 353 
  ;
  
#line 354 
  ldv_spin_unlock_bh_85_0(& priv->filters_lock);
  
#line 356 
  __retres = ret;
  return_label: 
#line 356 
                return __retres;
}


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
void mlx4_en_cleanup_filters(struct mlx4_en_priv *priv)
{
  struct mlx4_en_filter *filter;
  struct mlx4_en_filter *tmp;
  struct mlx4_en_filter *tmp_0;
  struct mlx4_en_filter *tmp_1;
  struct mlx4_en_filter *tmp_2;
  struct mlx4_en_filter *tmp_3;
  struct mlx4_en_filter *tmp_4;
  struct mlx4_en_filter *tmp_5;
  
#line 362 
  struct list_head del_list = {.next = & del_list, .prev = & del_list};
  
#line 364 
  ldv_spin_lock_bh_86(& priv->filters_lock);
  {
    
#line 365 
    struct list_head const *__mptr = (struct list_head const *)priv->filters.next;
    
#line 365 
    tmp_0 = (struct mlx4_en_filter *)__mptr;
  }
  
#line 365 
  filter = tmp_0;
  {
    
#line 365 
    struct list_head const *__mptr_0 = (struct list_head const *)filter->next.next;
    
#line 365 
    tmp_1 = (struct mlx4_en_filter *)__mptr_0;
  }
  
#line 366 
  tmp = tmp_1;
  
#line 365 
  goto ldv_57778;
  ldv_57777: 
#line 366 
  ;
  
#line 366 
  list_move(& filter->next,& del_list);
  
#line 367 
  hlist_del(& filter->filter_chain);
  
#line 365 
  filter = tmp;
  {
    
#line 365 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp->next.next;
    
#line 365 
    tmp_2 = (struct mlx4_en_filter *)__mptr_1;
  }
  
#line 365 
  tmp = tmp_2;
  ldv_57778: 
#line 367 
  ;
  
#line 365 
  if (& filter->next != & priv->filters) 
#line 367 
                                         goto ldv_57777; else 
#line 370 
                                                              goto ldv_57779;
  ldv_57779: 
#line 371 
  ;
  
#line 369 
  ldv_spin_unlock_bh_87(& priv->filters_lock);
  {
    
#line 371 
    struct list_head const *__mptr_2 = (struct list_head const *)del_list.next;
    
#line 371 
    tmp_3 = (struct mlx4_en_filter *)__mptr_2;
  }
  
#line 371 
  filter = tmp_3;
  {
    
#line 371 
    struct list_head const *__mptr_3 = (struct list_head const *)filter->next.next;
    
#line 371 
    tmp_4 = (struct mlx4_en_filter *)__mptr_3;
  }
  
#line 372 
  tmp = tmp_4;
  
#line 371 
  goto ldv_57787;
  ldv_57786: 
#line 372 
  ;
  
#line 372 
  cancel_work_sync(& filter->work);
  
#line 373 
  mlx4_en_filter_free(filter);
  
#line 371 
  filter = tmp;
  {
    
#line 371 
    struct list_head const *__mptr_4 = (struct list_head const *)tmp->next.next;
    
#line 371 
    tmp_5 = (struct mlx4_en_filter *)__mptr_4;
  }
  
#line 371 
  tmp = tmp_5;
  ldv_57787: 
#line 373 
  ;
  
#line 371 
  if (& filter->next != & del_list) 
#line 373 
                                    goto ldv_57786; else 
#line 376 
                                                         goto ldv_57788;
  ldv_57788: 
#line 377 
  ;
  
#line 378 
  return;
}


#line 377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_filter_rfs_expire(struct mlx4_en_priv *priv)
{
  struct mlx4_en_filter *tmp;
  struct mlx4_en_filter *tmp_0;
  struct mlx4_en_filter *tmp_1;
  struct mlx4_en_filter *tmp_4;
  struct mlx4_en_filter *tmp_5;
  struct mlx4_en_filter *tmp_6;
  struct mlx4_en_filter *tmp_7;
  
#line 379 
  struct mlx4_en_filter *filter = (struct mlx4_en_filter *)0;
  
#line 379 
  struct mlx4_en_filter *last_filter = (struct mlx4_en_filter *)0;
  
#line 380 
  struct list_head del_list = {.next = & del_list, .prev = & del_list};
  
#line 381 
  int i = 0;
  
#line 383 
  ldv_spin_lock_bh_88(& priv->filters_lock);
  {
    
#line 384 
    struct list_head const *__mptr = (struct list_head const *)priv->filters.next;
    
#line 384 
    tmp_0 = (struct mlx4_en_filter *)__mptr;
  }
  
#line 384 
  filter = tmp_0;
  {
    
#line 384 
    struct list_head const *__mptr_0 = (struct list_head const *)filter->next.next;
    
#line 384 
    tmp_1 = (struct mlx4_en_filter *)__mptr_0;
  }
  
#line 385 
  tmp = tmp_1;
  
#line 384 
  goto ldv_57805;
  ldv_57804: 
#line 385 
  ;
  
#line 385 
  if (i > 60) 
#line 386 
              goto ldv_57803; else ;
  
#line 388 
  if ((unsigned int)filter->activated != 0U) {
    int tmp_2;
    
#line 388 
    tmp_2 = constant_test_bit(0L,(unsigned long const volatile *)(& filter->work.data));
    
#line 388 
    if (tmp_2 == 0) {
      bool tmp_3;
      
#line 389 
      tmp_3 = rps_may_expire_flow(priv->dev,(unsigned short)((int)((unsigned short)filter->rxq_index)),filter->flow_id,(unsigned short)((int)((unsigned short)filter->id)));
      
#line 389 
      if ((int)tmp_3 != 0) {
        
#line 393 
        list_move(& filter->next,& del_list);
        
#line 394 
        hlist_del(& filter->filter_chain);
      }
      else 
#line 396 
           last_filter = filter;
    }
    else 
#line 396 
         last_filter = filter;
  }
  else 
#line 396 
       last_filter = filter;
  
#line 398 
  i += 1;
  
#line 384 
  filter = tmp;
  {
    
#line 384 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp->next.next;
    
#line 384 
    tmp_4 = (struct mlx4_en_filter *)__mptr_1;
  }
  
#line 384 
  tmp = tmp_4;
  ldv_57805: 
#line 386 
  ;
  
#line 384 
  if (& filter->next != & priv->filters) 
#line 386 
                                         goto ldv_57804; else 
#line 389 
                                                              goto ldv_57803;
  ldv_57803: 
#line 390 
  ;
  
#line 401 
  if (last_filter != (struct mlx4_en_filter *)0 && & last_filter->next != priv->filters.next) 
    
#line 402 
    list_move(& priv->filters,& last_filter->next); else ;
  
#line 404 
  ldv_spin_unlock_bh_89(& priv->filters_lock);
  {
    
#line 406 
    struct list_head const *__mptr_2 = (struct list_head const *)del_list.next;
    
#line 406 
    tmp_5 = (struct mlx4_en_filter *)__mptr_2;
  }
  
#line 406 
  filter = tmp_5;
  {
    
#line 406 
    struct list_head const *__mptr_3 = (struct list_head const *)filter->next.next;
    
#line 406 
    tmp_6 = (struct mlx4_en_filter *)__mptr_3;
  }
  
#line 407 
  tmp = tmp_6;
  
#line 406 
  goto ldv_57813;
  ldv_57812: 
#line 407 
  ;
  
#line 407 
  mlx4_en_filter_free(filter);
  
#line 406 
  filter = tmp;
  {
    
#line 406 
    struct list_head const *__mptr_4 = (struct list_head const *)tmp->next.next;
    
#line 406 
    tmp_7 = (struct mlx4_en_filter *)__mptr_4;
  }
  
#line 406 
  tmp = tmp_7;
  ldv_57813: 
#line 408 
  ;
  
#line 406 
  if (& filter->next != & del_list) 
#line 408 
                                    goto ldv_57812; else 
#line 411 
                                                         goto ldv_57814;
  ldv_57814: 
#line 412 
  ;
  
#line 413 
  return;
}


#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_vlan_rx_add_vid(struct net_device *dev, __be16 proto, u16 vid)
{
  int __retres;
  int err;
  int idx;
  int tmp_0;
  
#line 414 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 415 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 419 
  if ((priv->msg_enable & 8192U) != 0U) 
#line 419 
                                        en_print("\001",(struct mlx4_en_priv const *)priv,"adding VLAN:%d\n",(int)vid); else ;
  
#line 421 
  set_bit((long)vid,(unsigned long volatile *)(& priv->active_vlans));
  
#line 424 
  ldv_mutex_lock_90(& mdev->state_lock);
  
#line 425 
  if ((int)mdev->device_up != 0 && (int)priv->port_up != 0) {
    
#line 426 
    err = mlx4_SET_VLAN_FLTR(mdev->dev,priv);
    
#line 427 
    if (err != 0) 
#line 428 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed configuring VLAN filter\n"); else ;
  }
  else ;
  
#line 430 
  tmp_0 = mlx4_register_vlan(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned short)((int)vid),& idx);
  
#line 430 
  if (tmp_0 != 0) {
    
#line 431 
    if ((priv->msg_enable & 8192U) != 0U) 
#line 431 
                                          en_print("\001",(struct mlx4_en_priv const *)priv,"failed adding vlan %d\n",(int)vid); else ;
  }
  else ;
  
#line 432 
  ldv_mutex_unlock_91(& mdev->state_lock);
  
#line 434 
  __retres = 0;
  
#line 434 
  return __retres;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_vlan_rx_kill_vid(struct net_device *dev, __be16 proto, u16 vid)
{
  int __retres;
  int err;
  
#line 440 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 441 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 444 
  if ((priv->msg_enable & 8192U) != 0U) 
#line 444 
                                        en_print("\001",(struct mlx4_en_priv const *)priv,"Killing VID:%d\n",(int)vid); else ;
  
#line 446 
  set_bit((long)vid,(unsigned long volatile *)(& priv->active_vlans));
  
#line 449 
  ldv_mutex_lock_92(& mdev->state_lock);
  
#line 450 
  mlx4_unregister_vlan(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned short)((int)vid));
  
#line 452 
  if ((int)mdev->device_up != 0 && (int)priv->port_up != 0) {
    
#line 453 
    err = mlx4_SET_VLAN_FLTR(mdev->dev,priv);
    
#line 454 
    if (err != 0) 
#line 455 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed configuring VLAN filter\n"); else ;
  }
  else ;
  
#line 457 
  ldv_mutex_unlock_93(& mdev->state_lock);
  
#line 459 
  __retres = 0;
  
#line 459 
  return __retres;
}


#line 462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_u64_to_mac(unsigned char *dst_mac, u64 src_mac)
{
  int i;
  
#line 465 
  i = 5;
  
#line 465 
  goto ldv_57838;
  ldv_57837: 
#line 466 
  ;
  
#line 466 
  *(dst_mac + i) = (unsigned char)src_mac;
  
#line 467 
  src_mac >>= 8;
  
#line 465 
  i -= 1;
  ldv_57838: 
#line 466 
  ;
  
#line 465 
  if (i >= 0) 
#line 467 
              goto ldv_57837; else 
#line 470 
                                   goto ldv_57839;
  ldv_57839: 
#line 471 
  ;
  
#line 469 
  memset((void *)(dst_mac + 6U),0,2UL);
  
#line 470 
  return;
}


#line 473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_tunnel_steer_add(struct mlx4_en_priv *priv, unsigned char *addr, int qpn, u64 *reg_id)
{
  int __retres;
  int err;
  
#line 478 
  if (((priv->mdev)->dev)->caps.tunnel_offload_mode != 1 || ((priv->mdev)->dev)->caps.dmfs_high_steer_mode == 2) {
    
#line 480 
    __retres = 0;
    
#line 480 
    goto return_label;
  }
  else ;
  
#line 482 
  err = mlx4_tunnel_steer_add((priv->mdev)->dev,addr,priv->port,qpn,(unsigned short)20480,reg_id);
  
#line 484 
  if (err != 0) {
    
#line 485 
    en_print("\001",(struct mlx4_en_priv const *)priv,"failed to add vxlan steering rule, err %d\n",err);
    
#line 486 
    __retres = err;
    
#line 486 
    goto return_label;
  }
  else ;
  
#line 488 
  if ((priv->msg_enable & 1U) != 0U) 
#line 488 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"added vxlan steering rule, mac %pM reg_id %llx\n",addr,*reg_id); else ;
  
#line 489 
  __retres = 0;
  return_label: 
#line 489 
                return __retres;
}


#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_uc_steer_add(struct mlx4_en_priv *priv, unsigned char *mac, int *qpn, u64 *reg_id)
{
  int __retres;
  int err;
  
#line 496 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 497 
  struct mlx4_dev *dev = mdev->dev;
  
#line 500 
  switch (dev->caps.steering_mode) {
    case 1: 
#line 501 
    ;
    {
      struct mlx4_qp qp;
      
#line 503 
      u8 gid[16U] = {(unsigned char)0U};
      
#line 505 
      qp.qpn = *qpn;
      
#line 506 
      memcpy((void *)(& gid[10]),(void const *)mac,6UL);
      
#line 507 
      gid[5] = (unsigned char)priv->port;
      
#line 509 
      err = mlx4_unicast_attach(dev,& qp,(u8 *)(& gid),0,(enum mlx4_protocol)MLX4_PROT_ETH);
      
#line 510 
      goto ldv_57859;
    }
    case 2: 
#line 512 
    ;
    {
      
#line 513 
      struct mlx4_spec_list spec_eth = {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .id = 0, .__anonCompField_mlx4_spec_list_97 = {.eth = {.dst_mac = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .dst_mac_msk = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .src_mac = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .src_mac_msk = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .ether_type_enable = (unsigned char)0, .ether_type = (unsigned short)0, .vlan_id_msk = (unsigned short)0, .vlan_id = (unsigned short)0}}};
      
#line 514 
      __be64 mac_mask = 281474976710655ULL;
      
#line 516 
      struct mlx4_net_trans_rule rule = {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .queue_mode = MLX4_NET_TRANS_Q_FIFO, .exclusive = (_Bool)0, .allow_loopback = (_Bool)1, .promisc_mode = MLX4_FS_REGULAR, .port = (unsigned char)0, .priority = (unsigned short)20480U, .qpn = 0U};
      
#line 524 
      rule.port = (unsigned char)priv->port;
      
#line 525 
      rule.qpn = (unsigned int)*qpn;
      
#line 526 
      INIT_LIST_HEAD(& rule.list);
      
#line 528 
      spec_eth.id = MLX4_NET_TRANS_RULE_ID_ETH;
      
#line 529 
      memcpy((void *)(& spec_eth.__anonCompField_mlx4_spec_list_97.eth.dst_mac),(void const *)mac,6UL);
      
#line 530 
      memcpy((void *)(& spec_eth.__anonCompField_mlx4_spec_list_97.eth.dst_mac_msk),(void const *)(& mac_mask),6UL);
      
#line 531 
      list_add_tail(& spec_eth.list,& rule.list);
      
#line 533 
      err = mlx4_flow_attach(dev,& rule,reg_id);
      
#line 534 
      goto ldv_57859;
    }
    default: 
#line 536 
    ;
    
#line 537 
    __retres = -22;
    
#line 537 
    goto return_label;
  }
  ldv_57859: 
#line 539 
  ;
  
#line 539 
  if (err != 0) 
#line 540 
                en_print("\001",(struct mlx4_en_priv const *)priv,"Failed Attaching Unicast\n"); else ;
  
#line 542 
  __retres = err;
  return_label: 
#line 542 
                return __retres;
}


#line 545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_uc_steer_release(struct mlx4_en_priv *priv, unsigned char *mac, int qpn, u64 reg_id)
{
  
#line 548 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 549 
  struct mlx4_dev *dev = mdev->dev;
  
#line 551 
  switch (dev->caps.steering_mode) {
    case 1: 
#line 552 
    ;
    {
      struct mlx4_qp qp;
      
#line 554 
      u8 gid[16U] = {(unsigned char)0U};
      
#line 556 
      qp.qpn = qpn;
      
#line 557 
      memcpy((void *)(& gid[10]),(void const *)mac,6UL);
      
#line 558 
      gid[5] = (unsigned char)priv->port;
      
#line 560 
      mlx4_unicast_detach(dev,& qp,(u8 *)(& gid),(enum mlx4_protocol)MLX4_PROT_ETH);
      
#line 561 
      goto ldv_57876;
    }
    case 2: 
#line 563 
    ;
    
#line 564 
    mlx4_flow_detach(dev,reg_id);
    
#line 565 
    goto ldv_57876;
    default: 
#line 567 
    ;
    
#line 568 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Invalid steering mode.\n");
  }
  ldv_57876: 
#line 570 
  ;
  
#line 571 
  return;
}


#line 572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_get_qp(struct mlx4_en_priv *priv)
{
  int __retres;
  struct mlx4_mac_entry *entry;
  
#line 574 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 575 
  struct mlx4_dev *dev = mdev->dev;
  
#line 577 
  int index = 0;
  
#line 578 
  int err = 0;
  
#line 579 
  u64 reg_id = 0ULL;
  
#line 580 
  int *qpn = & priv->base_qpn;
  
#line 581 
  u64 mac = mlx4_mac_to_u64((priv->dev)->dev_addr);
  
#line 583 
  if ((priv->msg_enable & 1U) != 0U) 
#line 583 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Registering MAC: %pM for adding\n",(priv->dev)->dev_addr); else ;
  
#line 585 
  index = mlx4_register_mac(dev,(unsigned char)((int)((unsigned char)priv->port)),mac);
  
#line 586 
  if (index < 0) {
    
#line 587 
    err = index;
    
#line 588 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed adding MAC: %pM\n",(priv->dev)->dev_addr);
    
#line 590 
    __retres = err;
    
#line 590 
    goto return_label;
  }
  else ;
  
#line 593 
  if (dev->caps.steering_mode == 0) {
    
#line 594 
    int base_qpn = mlx4_get_base_qpn(dev,(unsigned char)((int)((unsigned char)priv->port)));
    
#line 595 
    *qpn = base_qpn + index;
    
#line 596 
    __retres = 0;
    
#line 596 
    goto return_label;
  }
  else ;
  
#line 599 
  err = mlx4_qp_reserve_range(dev,1,1,qpn,(unsigned char)64);
  
#line 600 
  if ((priv->msg_enable & 1U) != 0U) 
#line 600 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Reserved qp %d\n",*qpn); else ;
  
#line 601 
  if (err != 0) {
    
#line 602 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to reserve qp for mac registration\n");
    
#line 603 
    goto qp_err;
  }
  else ;
  
#line 606 
  err = mlx4_en_uc_steer_add(priv,(priv->dev)->dev_addr,qpn,& reg_id);
  
#line 607 
  if (err != 0) 
#line 608 
                goto steer_err; else ;
  
#line 610 
  err = mlx4_en_tunnel_steer_add(priv,(priv->dev)->dev_addr,*qpn,& priv->tunnel_reg_id);
  
#line 612 
  if (err != 0) 
#line 613 
                goto tunnel_err; else ;
  
#line 615 
  entry = (struct mlx4_mac_entry *)kmalloc_0(48UL,208U);
  
#line 616 
  if (entry == (struct mlx4_mac_entry *)0) {
    
#line 617 
    err = -12;
    
#line 618 
    goto alloc_err;
  }
  else ;
  
#line 620 
  memcpy((void *)(& entry->mac),(void const *)(priv->dev)->dev_addr,8UL);
  
#line 621 
  memcpy((void *)(& priv->current_mac),(void const *)(& entry->mac),8UL);
  
#line 622 
  entry->reg_id = reg_id;
  
#line 624 
  hlist_add_head_rcu(& entry->hlist,& priv->mac_hash[(int)entry->mac[5]]);
  
#line 627 
  __retres = 0;
  
#line 627 
  goto return_label;
  alloc_err: 
#line 629 
  ;
  
#line 630 
  if (priv->tunnel_reg_id != 0ULL) 
#line 631 
                                   mlx4_flow_detach((priv->mdev)->dev,priv->tunnel_reg_id); else ;
  tunnel_err: 
#line 632 
  ;
  
#line 633 
  mlx4_en_uc_steer_release(priv,(priv->dev)->dev_addr,*qpn,reg_id);
  steer_err: 
#line 635 
  ;
  
#line 636 
  mlx4_qp_release_range(dev,*qpn,1);
  qp_err: 
#line 638 
  ;
  
#line 639 
  mlx4_unregister_mac(dev,(unsigned char)((int)((unsigned char)priv->port)),mac);
  
#line 640 
  __retres = err;
  return_label: 
#line 640 
                return __retres;
}


#line 672 
void __compiletime_assert_672(void);


#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_put_qp(struct mlx4_en_priv *priv)
{
  u64 mac;
  
#line 645 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 646 
  struct mlx4_dev *dev = mdev->dev;
  
#line 647 
  int qpn = priv->base_qpn;
  
#line 650 
  if (dev->caps.steering_mode == 0) {
    
#line 651 
    mac = mlx4_mac_to_u64((priv->dev)->dev_addr);
    
#line 652 
    if ((priv->msg_enable & 1U) != 0U) 
#line 652 
                                       en_print("\001",(struct mlx4_en_priv const *)priv,"Registering MAC: %pM for deleting\n",(priv->dev)->dev_addr); else ;
    
#line 654 
    mlx4_unregister_mac(dev,(unsigned char)((int)((unsigned char)priv->port)),mac);
  }
  else {
    struct mlx4_mac_entry *entry;
    struct hlist_node *tmp;
    struct hlist_head *bucket;
    unsigned int i;
    struct mlx4_mac_entry *tmp_2;
    struct mlx4_mac_entry *tmp_5;
    
#line 661 
    i = 0U;
    
#line 661 
    goto ldv_57924;
    ldv_57923: 
#line 662 
    ;
    
#line 662 
    bucket = & priv->mac_hash[i];
    {
      struct mlx4_mac_entry *tmp_1;
      
#line 663 
      struct hlist_node *____ptr = bucket->first;
      
#line 663 
      if (____ptr != (struct hlist_node *)0) {
        struct mlx4_mac_entry *tmp_0;
        {
          
#line 663 
          struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
          
#line 663 
          tmp_0 = (struct mlx4_mac_entry *)__mptr;
        }
        
#line 663 
        tmp_1 = tmp_0;
      }
      else 
#line 663 
           tmp_1 = (struct mlx4_mac_entry *)0;
      
#line 663 
      tmp_2 = tmp_1;
    }
    
#line 663 
    entry = tmp_2;
    
#line 663 
    goto ldv_57921;
    ldv_57920: 
#line 664 
    ;
    
#line 664 
    mac = mlx4_mac_to_u64((u8 *)(& entry->mac));
    
#line 665 
    if ((priv->msg_enable & 1U) != 0U) 
#line 665 
                                       en_print("\001",(struct mlx4_en_priv const *)priv,"Registering MAC: %pM for deleting\n",(unsigned char *)(& entry->mac)); else ;
    
#line 667 
    mlx4_en_uc_steer_release(priv,(unsigned char *)(& entry->mac),qpn,entry->reg_id);
    
#line 670 
    mlx4_unregister_mac(dev,(unsigned char)((int)((unsigned char)priv->port)),mac);
    
#line 671 
    hlist_del_rcu(& entry->hlist);
    {
      
#line 672 
      bool __cond = (_Bool)0;
      
#line 672 
      if ((int)__cond != 0) 
#line 672 
                            __compiletime_assert_672(); else ;
    }
    
#line 672 
    kfree_call_rcu(& entry->rcu,(void (*)(struct callback_head *))32);
    {
      struct mlx4_mac_entry *tmp_4;
      
#line 663 
      struct hlist_node *____ptr_0 = tmp;
      
#line 663 
      if (____ptr_0 != (struct hlist_node *)0) {
        struct mlx4_mac_entry *tmp_3;
        {
          
#line 663 
          struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
          
#line 663 
          tmp_3 = (struct mlx4_mac_entry *)__mptr_0;
        }
        
#line 663 
        tmp_4 = tmp_3;
      }
      else 
#line 663 
           tmp_4 = (struct mlx4_mac_entry *)0;
      
#line 663 
      tmp_5 = tmp_4;
    }
    
#line 663 
    entry = tmp_5;
    ldv_57921: 
#line 665 
    ;
    
#line 663 
    if (entry != (struct mlx4_mac_entry *)0) {
      
#line 663 
      tmp = entry->hlist.next;
      
#line 663 
      if (1 != 0) 
#line 665 
                  goto ldv_57920; else 
#line 668 
                                       goto ldv_57922;
    }
    else 
#line 668 
         goto ldv_57922;
    ldv_57922: 
#line 669 
    ;
    
#line 661 
    i += 1U;
    ldv_57924: 
#line 662 
    ;
    
#line 661 
    if (i <= 255U) 
#line 663 
                   goto ldv_57923; else 
#line 666 
                                        goto ldv_57925;
    ldv_57925: 
#line 667 
    ;
    
#line 676 
    if (priv->tunnel_reg_id != 0ULL) {
      
#line 677 
      mlx4_flow_detach((priv->mdev)->dev,priv->tunnel_reg_id);
      
#line 678 
      priv->tunnel_reg_id = 0ULL;
    }
    else ;
    
#line 681 
    if ((priv->msg_enable & 1U) != 0U) 
#line 681 
                                       en_print("\001",(struct mlx4_en_priv const *)priv,"Releasing qp: port %d, qpn %d\n",priv->port,qpn); else ;
    
#line 683 
    mlx4_qp_release_range(dev,qpn,1);
    
#line 684 
    priv->flags &= 4294967279U;
  }
  
#line 686 
  return;
}


#line 688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_replace_mac(struct mlx4_en_priv *priv, int qpn, unsigned char *new_mac, unsigned char *prev_mac)
{
  int __retres;
  int tmp_9;
  
#line 691 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 692 
  struct mlx4_dev *dev = mdev->dev;
  
#line 693 
  int err = 0;
  
#line 694 
  u64 new_mac_u64 = mlx4_mac_to_u64(new_mac);
  
#line 696 
  if (dev->caps.steering_mode != 0) {
    struct hlist_head *bucket;
    unsigned int mac_hash;
    struct mlx4_mac_entry *entry;
    struct hlist_node *tmp_0;
    struct mlx4_mac_entry *tmp_4;
    bool tmp_5;
    struct mlx4_mac_entry *tmp_8;
    
#line 701 
    u64 prev_mac_u64 = mlx4_mac_to_u64(prev_mac);
    
#line 703 
    bucket = & priv->mac_hash[(int)*(prev_mac + 5U)];
    {
      struct mlx4_mac_entry *tmp_3;
      
#line 704 
      struct hlist_node *____ptr = bucket->first;
      
#line 704 
      if (____ptr != (struct hlist_node *)0) {
        struct mlx4_mac_entry *tmp_2;
        {
          
#line 704 
          struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
          
#line 704 
          tmp_2 = (struct mlx4_mac_entry *)__mptr;
        }
        
#line 704 
        tmp_3 = tmp_2;
      }
      else 
#line 704 
           tmp_3 = (struct mlx4_mac_entry *)0;
      
#line 704 
      tmp_4 = tmp_3;
    }
    
#line 704 
    entry = tmp_4;
    
#line 704 
    goto ldv_57951;
    ldv_57950: 
#line 705 
    ;
    
#line 705 
    tmp_5 = ether_addr_equal_64bits((u8 const *)(& entry->mac),(u8 const *)prev_mac);
    
#line 705 
    if ((int)tmp_5 != 0) {
      
#line 706 
      mlx4_en_uc_steer_release(priv,(unsigned char *)(& entry->mac),qpn,entry->reg_id);
      
#line 708 
      mlx4_unregister_mac(dev,(unsigned char)((int)((unsigned char)priv->port)),prev_mac_u64);
      
#line 710 
      hlist_del_rcu(& entry->hlist);
      
#line 711 
      synchronize_rcu();
      
#line 712 
      memcpy((void *)(& entry->mac),(void const *)new_mac,6UL);
      
#line 713 
      entry->reg_id = 0ULL;
      
#line 714 
      mac_hash = (unsigned int)*(new_mac + 5U);
      
#line 715 
      hlist_add_head_rcu(& entry->hlist,& priv->mac_hash[mac_hash]);
      
#line 717 
      mlx4_register_mac(dev,(unsigned char)((int)((unsigned char)priv->port)),new_mac_u64);
      
#line 718 
      err = mlx4_en_uc_steer_add(priv,new_mac,& qpn,& entry->reg_id);
      
#line 721 
      if (err != 0) {
        
#line 722 
        __retres = err;
        
#line 722 
        goto return_label;
      }
      else ;
      
#line 723 
      if (priv->tunnel_reg_id != 0ULL) {
        
#line 724 
        mlx4_flow_detach((priv->mdev)->dev,priv->tunnel_reg_id);
        
#line 725 
        priv->tunnel_reg_id = 0ULL;
      }
      else ;
      
#line 727 
      err = mlx4_en_tunnel_steer_add(priv,new_mac,qpn,& priv->tunnel_reg_id);
      
#line 729 
      __retres = err;
      
#line 729 
      goto return_label;
    }
    else ;
    {
      struct mlx4_mac_entry *tmp_7;
      
#line 704 
      struct hlist_node *____ptr_0 = tmp_0;
      
#line 704 
      if (____ptr_0 != (struct hlist_node *)0) {
        struct mlx4_mac_entry *tmp_6;
        {
          
#line 704 
          struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
          
#line 704 
          tmp_6 = (struct mlx4_mac_entry *)__mptr_0;
        }
        
#line 704 
        tmp_7 = tmp_6;
      }
      else 
#line 704 
           tmp_7 = (struct mlx4_mac_entry *)0;
      
#line 704 
      tmp_8 = tmp_7;
    }
    
#line 704 
    entry = tmp_8;
    ldv_57951: 
#line 706 
    ;
    
#line 704 
    if (entry != (struct mlx4_mac_entry *)0) {
      
#line 704 
      tmp_0 = entry->hlist.next;
      
#line 704 
      if (1 != 0) 
#line 706 
                  goto ldv_57950; else 
#line 709 
                                       goto ldv_57952;
    }
    else 
#line 709 
         goto ldv_57952;
    ldv_57952: 
#line 710 
    ;
    
#line 732 
    __retres = -22;
    
#line 732 
    goto return_label;
  }
  else ;
  
#line 735 
  tmp_9 = __mlx4_replace_mac(dev,(unsigned char)((int)((unsigned char)priv->port)),qpn,new_mac_u64);
  
#line 735 
  __retres = tmp_9;
  return_label: 
#line 735 
                return __retres;
}


#line 738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_do_set_mac(struct mlx4_en_priv *priv, unsigned char *new_mac)
{
  
#line 741 
  int err = 0;
  
#line 743 
  if ((int)priv->port_up != 0) {
    
#line 745 
    err = mlx4_en_replace_mac(priv,priv->base_qpn,new_mac,(unsigned char *)(& priv->current_mac));
    
#line 747 
    if (err != 0) 
#line 748 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed changing HW MAC address\n"); else ;
  }
  else 
    
#line 750 
    if ((priv->msg_enable & 8192U) != 0U) 
#line 750 
                                          en_print("\001",(struct mlx4_en_priv const *)priv,"Port is down while registering mac, exiting...\n"); else ;
  
#line 752 
  if (err == 0) 
#line 753 
                memcpy((void *)(& priv->current_mac),(void const *)new_mac,8UL); else ;
  
#line 755 
  return err;
}


#line 758  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_set_mac(struct net_device *dev, void *addr)
{
  int __retres;
  unsigned char new_mac[8U];
  int err;
  int tmp_1;
  bool tmp_0;
  
#line 760 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 761 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 762 
  struct sockaddr *saddr = (struct sockaddr *)addr;
  
#line 766 
  tmp_0 = is_valid_ether_addr((u8 const *)(& saddr->sa_data));
  
#line 766 
  if (tmp_0) 
#line 766 
             tmp_1 = 0; else 
#line 766 
                             tmp_1 = 1;
  
#line 766 
  if (tmp_1) {
    
#line 767 
    __retres = -99;
    
#line 767 
    goto return_label;
  }
  else ;
  
#line 769 
  ldv_mutex_lock_94(& mdev->state_lock);
  
#line 770 
  memcpy((void *)(& new_mac),(void const *)(& saddr->sa_data),6UL);
  
#line 771 
  err = mlx4_en_do_set_mac(priv,(unsigned char *)(& new_mac));
  
#line 772 
  if (err == 0) 
#line 773 
                memcpy((void *)dev->dev_addr,(void const *)(& saddr->sa_data),6UL); else ;
  
#line 774 
  ldv_mutex_unlock_95(& mdev->state_lock);
  
#line 776 
  __retres = err;
  return_label: 
#line 776 
                return __retres;
}


#line 779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_clear_list(struct net_device *dev)
{
  struct mlx4_en_mc_list *tmp_0;
  struct mlx4_en_mc_list *mc_to_del;
  struct mlx4_en_mc_list *tmp_1;
  struct mlx4_en_mc_list *tmp_2;
  struct mlx4_en_mc_list *tmp_3;
  
#line 781 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  {
    
#line 784 
    struct list_head const *__mptr = (struct list_head const *)priv->mc_list.next;
    
#line 784 
    tmp_1 = (struct mlx4_en_mc_list *)__mptr;
  }
  
#line 784 
  mc_to_del = tmp_1;
  {
    
#line 784 
    struct list_head const *__mptr_0 = (struct list_head const *)mc_to_del->list.next;
    
#line 784 
    tmp_2 = (struct mlx4_en_mc_list *)__mptr_0;
  }
  
#line 785 
  tmp_0 = tmp_2;
  
#line 784 
  goto ldv_57980;
  ldv_57979: 
#line 785 
  ;
  
#line 785 
  list_del(& mc_to_del->list);
  
#line 786 
  kfree((void const *)mc_to_del);
  
#line 784 
  mc_to_del = tmp_0;
  {
    
#line 784 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp_0->list.next;
    
#line 784 
    tmp_3 = (struct mlx4_en_mc_list *)__mptr_1;
  }
  
#line 784 
  tmp_0 = tmp_3;
  ldv_57980: 
#line 786 
  ;
  
#line 784 
  if (& mc_to_del->list != & priv->mc_list) 
#line 786 
                                            goto ldv_57979; else 
#line 789 
                                                                 goto ldv_57981;
  ldv_57981: 
#line 790 
  ;
  
#line 791 
  return;
}


#line 790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_cache_mclist(struct net_device *dev)
{
  struct netdev_hw_addr *ha;
  struct mlx4_en_mc_list *tmp_0;
  struct netdev_hw_addr *tmp_1;
  struct netdev_hw_addr *tmp_3;
  
#line 792 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 796 
  mlx4_en_clear_list(dev);
  {
    
#line 797 
    struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
    
#line 797 
    tmp_1 = (struct netdev_hw_addr *)__mptr;
  }
  
#line 797 
  ha = tmp_1;
  
#line 797 
  goto ldv_57993;
  ldv_57992: 
#line 798 
  ;
  
#line 798 
  tmp_0 = (struct mlx4_en_mc_list *)kzalloc_0(48UL,32U);
  
#line 799 
  if (tmp_0 == (struct mlx4_en_mc_list *)0) {
    
#line 800 
    mlx4_en_clear_list(dev);
    
#line 801 
    goto return_label;
  }
  else ;
  
#line 803 
  memcpy((void *)(& tmp_0->addr),(void const *)(& ha->addr),6UL);
  
#line 804 
  list_add_tail(& tmp_0->list,& priv->mc_list);
  {
    
#line 797 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 797 
    tmp_3 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 797 
  ha = tmp_3;
  ldv_57993: 
#line 799 
  ;
  
#line 797 
  if (& ha->list != & dev->mc.list) 
#line 799 
                                    goto ldv_57992; else 
#line 802 
                                                         goto ldv_57994;
  ldv_57994: 
#line 803 
  ;
  return_label: 
#line 804 
                return;
}


#line 808  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void update_mclist_flags(struct mlx4_en_priv *priv, struct list_head *dst, struct list_head *src)
{
  struct mlx4_en_mc_list *dst_tmp;
  struct mlx4_en_mc_list *src_tmp;
  struct mlx4_en_mc_list *new_mc;
  bool found;
  struct mlx4_en_mc_list *tmp;
  struct mlx4_en_mc_list *tmp_0;
  bool tmp_1;
  struct mlx4_en_mc_list *tmp_2;
  struct mlx4_en_mc_list *tmp_3;
  struct mlx4_en_mc_list *tmp_4;
  struct mlx4_en_mc_list *tmp_5;
  bool tmp_6;
  struct mlx4_en_mc_list *tmp_7;
  struct mlx4_en_mc_list *tmp_9;
  {
    
#line 818 
    struct list_head const *__mptr = (struct list_head const *)dst->next;
    
#line 818 
    tmp = (struct mlx4_en_mc_list *)__mptr;
  }
  
#line 818 
  dst_tmp = tmp;
  
#line 818 
  goto ldv_58016;
  ldv_58015: 
#line 819 
  ;
  
#line 819 
  found = (_Bool)0;
  {
    
#line 820 
    struct list_head const *__mptr_0 = (struct list_head const *)src->next;
    
#line 820 
    tmp_0 = (struct mlx4_en_mc_list *)__mptr_0;
  }
  
#line 820 
  src_tmp = tmp_0;
  
#line 820 
  goto ldv_58014;
  ldv_58013: 
#line 821 
  ;
  
#line 821 
  tmp_1 = ether_addr_equal((u8 const *)(& dst_tmp->addr),(u8 const *)(& src_tmp->addr));
  
#line 821 
  if ((int)tmp_1 != 0) {
    
#line 822 
    found = (_Bool)1;
    
#line 823 
    goto ldv_58012;
  }
  else ;
  {
    
#line 820 
    struct list_head const *__mptr_1 = (struct list_head const *)src_tmp->list.next;
    
#line 820 
    tmp_2 = (struct mlx4_en_mc_list *)__mptr_1;
  }
  
#line 820 
  src_tmp = tmp_2;
  ldv_58014: 
#line 822 
  ;
  
#line 820 
  if (& src_tmp->list != src) 
#line 822 
                              goto ldv_58013; else 
#line 825 
                                                   goto ldv_58012;
  ldv_58012: 
#line 826 
  ;
  
#line 826 
  if (! found) 
#line 827 
               dst_tmp->action = MCLIST_REM; else ;
  {
    
#line 818 
    struct list_head const *__mptr_2 = (struct list_head const *)dst_tmp->list.next;
    
#line 818 
    tmp_3 = (struct mlx4_en_mc_list *)__mptr_2;
  }
  
#line 818 
  dst_tmp = tmp_3;
  ldv_58016: 
#line 820 
  ;
  
#line 818 
  if (& dst_tmp->list != dst) 
#line 820 
                              goto ldv_58015; else 
#line 823 
                                                   goto ldv_58017;
  ldv_58017: 
#line 824 
  ;
  {
    
#line 833 
    struct list_head const *__mptr_3 = (struct list_head const *)src->next;
    
#line 833 
    tmp_4 = (struct mlx4_en_mc_list *)__mptr_3;
  }
  
#line 833 
  src_tmp = tmp_4;
  
#line 833 
  goto ldv_58030;
  ldv_58029: 
#line 834 
  ;
  
#line 834 
  found = (_Bool)0;
  {
    
#line 835 
    struct list_head const *__mptr_4 = (struct list_head const *)dst->next;
    
#line 835 
    tmp_5 = (struct mlx4_en_mc_list *)__mptr_4;
  }
  
#line 835 
  dst_tmp = tmp_5;
  
#line 835 
  goto ldv_58028;
  ldv_58027: 
#line 836 
  ;
  
#line 836 
  tmp_6 = ether_addr_equal((u8 const *)(& dst_tmp->addr),(u8 const *)(& src_tmp->addr));
  
#line 836 
  if ((int)tmp_6 != 0) {
    
#line 837 
    dst_tmp->action = MCLIST_NONE;
    
#line 838 
    found = (_Bool)1;
    
#line 839 
    goto ldv_58026;
  }
  else ;
  {
    
#line 835 
    struct list_head const *__mptr_5 = (struct list_head const *)dst_tmp->list.next;
    
#line 835 
    tmp_7 = (struct mlx4_en_mc_list *)__mptr_5;
  }
  
#line 835 
  dst_tmp = tmp_7;
  ldv_58028: 
#line 837 
  ;
  
#line 835 
  if (& dst_tmp->list != dst) 
#line 837 
                              goto ldv_58027; else 
#line 840 
                                                   goto ldv_58026;
  ldv_58026: 
#line 841 
  ;
  
#line 842 
  if (! found) {
    
#line 843 
    new_mc = (struct mlx4_en_mc_list *)kmemdup((void const *)src_tmp,48UL,208U);
    
#line 846 
    if (new_mc == (struct mlx4_en_mc_list *)0) 
#line 847 
                                               goto return_label; else ;
    
#line 849 
    new_mc->action = MCLIST_ADD;
    
#line 850 
    list_add_tail(& new_mc->list,dst);
  }
  else ;
  {
    
#line 833 
    struct list_head const *__mptr_6 = (struct list_head const *)src_tmp->list.next;
    
#line 833 
    tmp_9 = (struct mlx4_en_mc_list *)__mptr_6;
  }
  
#line 833 
  src_tmp = tmp_9;
  ldv_58030: 
#line 835 
  ;
  
#line 833 
  if (& src_tmp->list != src) 
#line 835 
                              goto ldv_58029; else 
#line 838 
                                                   goto ldv_58031;
  ldv_58031: 
#line 839 
  ;
  return_label: 
#line 840 
                return;
}


#line 855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_set_rx_mode(struct net_device *dev)
{
  
#line 857 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 859 
  if (! priv->port_up) 
#line 860 
                       goto return_label; else ;
  
#line 862 
  ldv_queue_work_96((priv->mdev)->workqueue,& priv->rx_mode_task);
  return_label: 
#line 863 
                return;
}


#line 865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_set_promisc_mode(struct mlx4_en_priv *priv, struct mlx4_en_dev *mdev)
{
  
#line 868 
  int err = 0;
  
#line 870 
  if ((priv->flags & 1U) == 0U) {
    
#line 871 
    if ((priv->msg_enable & 2048U) != 0U) 
#line 872 
                                          en_print("\001",(struct mlx4_en_priv const *)priv,"Entering promiscuous mode\n"); else ;
    
#line 873 
    priv->flags |= 1U;
    
#line 876 
    switch ((mdev->dev)->caps.steering_mode) {
      case 2: 
#line 877 
      ;
      
#line 878 
      err = mlx4_flow_steer_promisc_add(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned int)priv->base_qpn,(enum mlx4_net_trans_promisc_mode)MLX4_FS_ALL_DEFAULT);
      
#line 882 
      if (err != 0) 
#line 883 
                    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed enabling promiscuous mode\n"); else ;
      
#line 884 
      priv->flags |= 2U;
      
#line 885 
      goto ldv_58042;
      case 1: 
#line 887 
      ;
      
#line 888 
      err = mlx4_unicast_promisc_add(mdev->dev,(unsigned int)priv->base_qpn,(unsigned char)((int)((unsigned char)priv->port)));
      
#line 891 
      if (err != 0) 
#line 892 
                    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed enabling unicast promiscuous mode\n"); else ;
      
#line 897 
      if ((priv->flags & 2U) == 0U) {
        
#line 898 
        err = mlx4_multicast_promisc_add(mdev->dev,(unsigned int)priv->base_qpn,(unsigned char)((int)((unsigned char)priv->port)));
        
#line 901 
        if (err != 0) 
#line 902 
                      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed enabling multicast promiscuous mode\n"); else ;
        
#line 903 
        priv->flags |= 2U;
      }
      else ;
      
#line 905 
      goto ldv_58042;
      case 0: 
#line 907 
      ;
      
#line 908 
      err = mlx4_SET_PORT_qpn_calc(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned int)priv->base_qpn,(unsigned char)1);
      
#line 912 
      if (err != 0) 
#line 913 
                    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed enabling promiscuous mode\n"); else ;
      
#line 914 
      goto ldv_58042;
    }
    ldv_58042: 
#line 918 
    ;
    
#line 918 
    err = mlx4_SET_MCAST_FLTR(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),0ULL,0ULL,(unsigned char)1);
    
#line 920 
    if (err != 0) 
#line 921 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed disabling multicast filter\n"); else ;
  }
  else ;
  
#line 923 
  return;
}


#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_clear_promisc_mode(struct mlx4_en_priv *priv, struct mlx4_en_dev *mdev)
{
  
#line 928 
  int err = 0;
  
#line 930 
  if ((priv->msg_enable & 2048U) != 0U) 
#line 931 
                                        en_print("\001",(struct mlx4_en_priv const *)priv,"Leaving promiscuous mode\n"); else ;
  
#line 932 
  priv->flags &= 4294967294U;
  
#line 935 
  switch ((mdev->dev)->caps.steering_mode) {
    case 2: 
#line 936 
    ;
    
#line 937 
    err = mlx4_flow_steer_promisc_remove(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(enum mlx4_net_trans_promisc_mode)MLX4_FS_ALL_DEFAULT);
    
#line 940 
    if (err != 0) 
#line 941 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed disabling promiscuous mode\n"); else ;
    
#line 942 
    priv->flags &= 4294967293U;
    
#line 943 
    goto ldv_58051;
    case 1: 
#line 945 
    ;
    
#line 946 
    err = mlx4_unicast_promisc_remove(mdev->dev,(unsigned int)priv->base_qpn,(unsigned char)((int)((unsigned char)priv->port)));
    
#line 949 
    if (err != 0) 
#line 950 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed disabling unicast promiscuous mode\n"); else ;
    
#line 952 
    if ((priv->flags & 2U) != 0U) {
      
#line 953 
      err = mlx4_multicast_promisc_remove(mdev->dev,(unsigned int)priv->base_qpn,(unsigned char)((int)((unsigned char)priv->port)));
      
#line 956 
      if (err != 0) 
#line 957 
                    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed disabling multicast promiscuous mode\n"); else ;
      
#line 958 
      priv->flags &= 4294967293U;
    }
    else ;
    
#line 960 
    goto ldv_58051;
    case 0: 
#line 962 
    ;
    
#line 963 
    err = mlx4_SET_PORT_qpn_calc(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned int)priv->base_qpn,(unsigned char)0);
    
#line 966 
    if (err != 0) 
#line 967 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed disabling promiscuous mode\n"); else ;
    
#line 968 
    goto ldv_58051;
  }
  ldv_58051: 
#line 970 
  ;
  
#line 971 
  return;
}


#line 972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_do_multicast(struct mlx4_en_priv *priv, struct net_device *dev, struct mlx4_en_dev *mdev)
{
  struct mlx4_en_mc_list *mclist;
  struct mlx4_en_mc_list *tmp;
  
#line 977 
  u64 mcast_addr = 0ULL;
  
#line 978 
  u8 mc_list[16U] = {(unsigned char)0U};
  
#line 979 
  int err = 0;
  
#line 982 
  if ((dev->flags & 512U) != 0U) {
    
#line 983 
    err = mlx4_SET_MCAST_FLTR(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),0ULL,0ULL,(unsigned char)1);
    
#line 985 
    if (err != 0) 
#line 986 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed disabling multicast filter\n"); else ;
    
#line 989 
    if ((priv->flags & 2U) == 0U) {
      
#line 990 
      switch ((mdev->dev)->caps.steering_mode) {
        case 2: 
#line 991 
        ;
        
#line 992 
        err = mlx4_flow_steer_promisc_add(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned int)priv->base_qpn,(enum mlx4_net_trans_promisc_mode)MLX4_FS_MC_DEFAULT);
        
#line 996 
        goto ldv_58065;
        case 1: 
#line 998 
        ;
        
#line 999 
        err = mlx4_multicast_promisc_add(mdev->dev,(unsigned int)priv->base_qpn,(unsigned char)((int)((unsigned char)priv->port)));
        
#line 1002 
        goto ldv_58065;
        case 0: 
#line 1004 
        ;
        
#line 1005 
        goto ldv_58065;
      }
      ldv_58065: 
#line 1007 
      ;
      
#line 1007 
      if (err != 0) 
#line 1008 
                    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed entering multicast promisc mode\n"); else ;
      
#line 1009 
      priv->flags |= 2U;
    }
    else ;
  }
  else {
    struct mlx4_en_mc_list *tmp_0;
    struct mlx4_en_mc_list *tmp_1;
    struct mlx4_en_mc_list *tmp_2;
    struct mlx4_en_mc_list *tmp_3;
    struct mlx4_en_mc_list *tmp_4;
    
#line 1013 
    if ((priv->flags & 2U) != 0U) {
      
#line 1014 
      switch ((mdev->dev)->caps.steering_mode) {
        case 2: 
#line 1015 
        ;
        
#line 1016 
        err = mlx4_flow_steer_promisc_remove(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(enum mlx4_net_trans_promisc_mode)MLX4_FS_MC_DEFAULT);
        
#line 1019 
        goto ldv_58069;
        case 1: 
#line 1021 
        ;
        
#line 1022 
        err = mlx4_multicast_promisc_remove(mdev->dev,(unsigned int)priv->base_qpn,(unsigned char)((int)((unsigned char)priv->port)));
        
#line 1025 
        goto ldv_58069;
        case 0: 
#line 1027 
        ;
        
#line 1028 
        goto ldv_58069;
      }
      ldv_58069: 
#line 1030 
      ;
      
#line 1030 
      if (err != 0) 
#line 1031 
                    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed disabling multicast promiscuous mode\n"); else ;
      
#line 1032 
      priv->flags &= 4294967293U;
    }
    else ;
    
#line 1035 
    err = mlx4_SET_MCAST_FLTR(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),0ULL,0ULL,(unsigned char)1);
    
#line 1037 
    if (err != 0) 
#line 1038 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed disabling multicast filter\n"); else ;
    
#line 1041 
    mlx4_SET_MCAST_FLTR(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),281474976710655ULL,1ULL,(unsigned char)0);
    
#line 1046 
    netif_addr_lock_bh(dev);
    
#line 1047 
    mlx4_en_cache_mclist(dev);
    
#line 1048 
    netif_addr_unlock_bh(dev);
    {
      
#line 1049 
      struct list_head const *__mptr = (struct list_head const *)priv->mc_list.next;
      
#line 1049 
      tmp_0 = (struct mlx4_en_mc_list *)__mptr;
    }
    
#line 1049 
    mclist = tmp_0;
    
#line 1049 
    goto ldv_58077;
    ldv_58076: 
#line 1050 
    ;
    
#line 1050 
    mcast_addr = mlx4_mac_to_u64((u8 *)(& mclist->addr));
    
#line 1051 
    mlx4_SET_MCAST_FLTR(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),mcast_addr,0ULL,(unsigned char)0);
    {
      
#line 1049 
      struct list_head const *__mptr_0 = (struct list_head const *)mclist->list.next;
      
#line 1049 
      tmp_1 = (struct mlx4_en_mc_list *)__mptr_0;
    }
    
#line 1049 
    mclist = tmp_1;
    ldv_58077: 
#line 1051 
    ;
    
#line 1049 
    if (& mclist->list != & priv->mc_list) 
#line 1051 
                                           goto ldv_58076; else 
#line 1054 
                                                                goto ldv_58078;
    ldv_58078: 
#line 1055 
    ;
    
#line 1054 
    err = mlx4_SET_MCAST_FLTR(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),0ULL,0ULL,(unsigned char)2);
    
#line 1056 
    if (err != 0) 
#line 1057 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed enabling multicast filter\n"); else ;
    
#line 1059 
    update_mclist_flags(priv,& priv->curr_list,& priv->mc_list);
    {
      
#line 1060 
      struct list_head const *__mptr_1 = (struct list_head const *)priv->curr_list.next;
      
#line 1060 
      tmp_2 = (struct mlx4_en_mc_list *)__mptr_1;
    }
    
#line 1060 
    mclist = tmp_2;
    {
      
#line 1060 
      struct list_head const *__mptr_2 = (struct list_head const *)mclist->list.next;
      
#line 1060 
      tmp_3 = (struct mlx4_en_mc_list *)__mptr_2;
    }
    
#line 1061 
    tmp = tmp_3;
    
#line 1060 
    goto ldv_58086;
    ldv_58085: 
#line 1061 
    ;
    
#line 1061 
    if (mclist->action == (unsigned int)MCLIST_REM) {
      
#line 1063 
      memcpy((void *)(& mc_list[10]),(void const *)(& mclist->addr),6UL);
      
#line 1064 
      mc_list[5] = (unsigned char)priv->port;
      
#line 1065 
      err = mlx4_multicast_detach(mdev->dev,& priv->rss_map.indir_qp,(u8 *)(& mc_list),(enum mlx4_protocol)MLX4_PROT_ETH,mclist->reg_id);
      
#line 1070 
      if (err != 0) 
#line 1071 
                    en_print("\001",(struct mlx4_en_priv const *)priv,"Fail to detach multicast address\n"); else ;
      
#line 1073 
      if (mclist->tunnel_reg_id != 0ULL) {
        
#line 1074 
        err = mlx4_flow_detach((priv->mdev)->dev,mclist->tunnel_reg_id);
        
#line 1075 
        if (err != 0) 
#line 1076 
                      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to detach multicast address\n"); else ;
      }
      else ;
      
#line 1080 
      list_del(& mclist->list);
      
#line 1081 
      kfree((void const *)mclist);
    }
    else 
      
#line 1082 
      if (mclist->action == (unsigned int)MCLIST_ADD) {
        
#line 1084 
        memcpy((void *)(& mc_list[10]),(void const *)(& mclist->addr),6UL);
        
#line 1086 
        mc_list[5] = (unsigned char)priv->port;
        
#line 1087 
        err = mlx4_multicast_attach(mdev->dev,& priv->rss_map.indir_qp,(u8 *)(& mc_list),(unsigned char)((int)((unsigned char)priv->port)),0,(enum mlx4_protocol)MLX4_PROT_ETH,& mclist->reg_id);
        
#line 1093 
        if (err != 0) 
#line 1094 
                      en_print("\001",(struct mlx4_en_priv const *)priv,"Fail to attach multicast address\n"); else ;
        
#line 1096 
        err = mlx4_en_tunnel_steer_add(priv,& mc_list[10],priv->base_qpn,& mclist->tunnel_reg_id);
        
#line 1098 
        if (err != 0) 
#line 1099 
                      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to attach multicast address\n"); else ;
      }
      else ;
    
#line 1060 
    mclist = tmp;
    {
      
#line 1060 
      struct list_head const *__mptr_3 = (struct list_head const *)tmp->list.next;
      
#line 1060 
      tmp_4 = (struct mlx4_en_mc_list *)__mptr_3;
    }
    
#line 1060 
    tmp = tmp_4;
    ldv_58086: 
#line 1062 
    ;
    
#line 1060 
    if (& mclist->list != & priv->curr_list) 
#line 1062 
                                             goto ldv_58085; else 
#line 1065 
                                                                  goto ldv_58087;
    ldv_58087: 
#line 1066 
    ;
  }
  
#line 1068 
  return;
}


#line 1150 
void __compiletime_assert_1150(void);


#line 1105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_do_uc_filter(struct mlx4_en_priv *priv, struct net_device *dev, struct mlx4_en_dev *mdev)
{
  struct netdev_hw_addr *ha;
  struct mlx4_mac_entry *entry;
  struct hlist_node *tmp;
  bool found;
  u64 mac;
  struct hlist_head *bucket;
  unsigned int i;
  u32 prev_flags;
  struct mlx4_mac_entry *tmp_2;
  struct netdev_hw_addr *tmp_3;
  bool tmp_4;
  struct netdev_hw_addr *tmp_5;
  bool tmp_6;
  struct mlx4_mac_entry *tmp_9;
  struct netdev_hw_addr *tmp_10;
  struct mlx4_mac_entry *tmp_13;
  bool tmp_14;
  struct mlx4_mac_entry *tmp_17;
  struct netdev_hw_addr *tmp_19;
  
#line 1114 
  int err = 0;
  
#line 1117 
  int removed = 0;
  
#line 1125 
  i = 0U;
  
#line 1125 
  goto ldv_58128;
  ldv_58127: 
#line 1126 
  ;
  
#line 1126 
  bucket = & priv->mac_hash[i];
  {
    struct mlx4_mac_entry *tmp_1;
    
#line 1127 
    struct hlist_node *____ptr = bucket->first;
    
#line 1127 
    if (____ptr != (struct hlist_node *)0) {
      struct mlx4_mac_entry *tmp_0;
      {
        
#line 1127 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 1127 
        tmp_0 = (struct mlx4_mac_entry *)__mptr;
      }
      
#line 1127 
      tmp_1 = tmp_0;
    }
    else 
#line 1127 
         tmp_1 = (struct mlx4_mac_entry *)0;
    
#line 1127 
    tmp_2 = tmp_1;
  }
  
#line 1127 
  entry = tmp_2;
  
#line 1127 
  goto ldv_58125;
  ldv_58124: 
#line 1128 
  ;
  
#line 1128 
  found = (_Bool)0;
  {
    
#line 1129 
    struct list_head const *__mptr_0 = (struct list_head const *)dev->uc.list.next;
    
#line 1129 
    tmp_3 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 1129 
  ha = tmp_3;
  
#line 1129 
  goto ldv_58118;
  ldv_58117: 
#line 1130 
  ;
  
#line 1130 
  tmp_4 = ether_addr_equal_64bits((u8 const *)(& entry->mac),(u8 const *)(& ha->addr));
  
#line 1130 
  if ((int)tmp_4 != 0) {
    
#line 1132 
    found = (_Bool)1;
    
#line 1133 
    goto ldv_58116;
  }
  else ;
  {
    
#line 1129 
    struct list_head const *__mptr_1 = (struct list_head const *)ha->list.next;
    
#line 1129 
    tmp_5 = (struct netdev_hw_addr *)__mptr_1;
  }
  
#line 1129 
  ha = tmp_5;
  ldv_58118: 
#line 1131 
  ;
  
#line 1129 
  if (& ha->list != & dev->uc.list) 
#line 1131 
                                    goto ldv_58117; else 
#line 1134 
                                                         goto ldv_58116;
  ldv_58116: 
#line 1135 
  ;
  
#line 1138 
  tmp_6 = ether_addr_equal_64bits((u8 const *)(& entry->mac),(u8 const *)(& priv->current_mac));
  
#line 1138 
  if ((int)tmp_6 != 0) 
#line 1140 
                       found = (_Bool)1; else ;
  
#line 1142 
  if (! found) {
    
#line 1143 
    mac = mlx4_mac_to_u64((u8 *)(& entry->mac));
    
#line 1144 
    mlx4_en_uc_steer_release(priv,(unsigned char *)(& entry->mac),priv->base_qpn,entry->reg_id);
    
#line 1147 
    mlx4_unregister_mac(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),mac);
    
#line 1149 
    hlist_del_rcu(& entry->hlist);
    {
      
#line 1150 
      bool __cond = (_Bool)0;
      
#line 1150 
      if ((int)__cond != 0) 
#line 1150 
                            __compiletime_assert_1150(); else ;
    }
    
#line 1150 
    kfree_call_rcu(& entry->rcu,(void (*)(struct callback_head *))32);
    
#line 1151 
    if ((priv->msg_enable & 1U) != 0U) 
#line 1151 
                                       en_print("\001",(struct mlx4_en_priv const *)priv,"Removed MAC %pM on port:%d\n",(unsigned char *)(& entry->mac),priv->port); else ;
    
#line 1153 
    removed += 1;
  }
  else ;
  {
    struct mlx4_mac_entry *tmp_8;
    
#line 1127 
    struct hlist_node *____ptr_0 = tmp;
    
#line 1127 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct mlx4_mac_entry *tmp_7;
      {
        
#line 1127 
        struct hlist_node const *__mptr_2 = (struct hlist_node const *)____ptr_0;
        
#line 1127 
        tmp_7 = (struct mlx4_mac_entry *)__mptr_2;
      }
      
#line 1127 
      tmp_8 = tmp_7;
    }
    else 
#line 1127 
         tmp_8 = (struct mlx4_mac_entry *)0;
    
#line 1127 
    tmp_9 = tmp_8;
  }
  
#line 1127 
  entry = tmp_9;
  ldv_58125: 
#line 1129 
  ;
  
#line 1127 
  if (entry != (struct mlx4_mac_entry *)0) {
    
#line 1127 
    tmp = entry->hlist.next;
    
#line 1127 
    if (1 != 0) 
#line 1129 
                goto ldv_58124; else 
#line 1132 
                                     goto ldv_58126;
  }
  else 
#line 1132 
       goto ldv_58126;
  ldv_58126: 
#line 1133 
  ;
  
#line 1125 
  i += 1U;
  ldv_58128: 
#line 1126 
  ;
  
#line 1125 
  if (i <= 255U) 
#line 1127 
                 goto ldv_58127; else 
#line 1130 
                                      goto ldv_58129;
  ldv_58129: 
#line 1131 
  ;
  
#line 1161 
  if ((priv->flags & 16U) != 0U && removed == 0) 
#line 1162 
                                                 goto return_label; else ;
  
#line 1164 
  prev_flags = priv->flags;
  
#line 1165 
  priv->flags &= 4294967279U;
  {
    
#line 1168 
    struct list_head const *__mptr_3 = (struct list_head const *)dev->uc.list.next;
    
#line 1168 
    tmp_10 = (struct netdev_hw_addr *)__mptr_3;
  }
  
#line 1168 
  ha = tmp_10;
  
#line 1168 
  goto ldv_58148;
  ldv_58147: 
#line 1169 
  ;
  
#line 1169 
  found = (_Bool)0;
  
#line 1170 
  bucket = & priv->mac_hash[(int)ha->addr[5]];
  {
    struct mlx4_mac_entry *tmp_12;
    
#line 1171 
    struct hlist_node *____ptr_1 = bucket->first;
    
#line 1171 
    if (____ptr_1 != (struct hlist_node *)0) {
      struct mlx4_mac_entry *tmp_11;
      {
        
#line 1171 
        struct hlist_node const *__mptr_4 = (struct hlist_node const *)____ptr_1;
        
#line 1171 
        tmp_11 = (struct mlx4_mac_entry *)__mptr_4;
      }
      
#line 1171 
      tmp_12 = tmp_11;
    }
    else 
#line 1171 
         tmp_12 = (struct mlx4_mac_entry *)0;
    
#line 1171 
    tmp_13 = tmp_12;
  }
  
#line 1171 
  entry = tmp_13;
  
#line 1171 
  goto ldv_58144;
  ldv_58143: 
#line 1172 
  ;
  
#line 1172 
  tmp_14 = ether_addr_equal_64bits((u8 const *)(& entry->mac),(u8 const *)(& ha->addr));
  
#line 1172 
  if ((int)tmp_14 != 0) {
    
#line 1173 
    found = (_Bool)1;
    
#line 1174 
    goto ldv_58142;
  }
  else ;
  {
    struct mlx4_mac_entry *tmp_16;
    
#line 1171 
    struct hlist_node *____ptr_2 = entry->hlist.next;
    
#line 1171 
    if (____ptr_2 != (struct hlist_node *)0) {
      struct mlx4_mac_entry *tmp_15;
      {
        
#line 1171 
        struct hlist_node const *__mptr_5 = (struct hlist_node const *)____ptr_2;
        
#line 1171 
        tmp_15 = (struct mlx4_mac_entry *)__mptr_5;
      }
      
#line 1171 
      tmp_16 = tmp_15;
    }
    else 
#line 1171 
         tmp_16 = (struct mlx4_mac_entry *)0;
    
#line 1171 
    tmp_17 = tmp_16;
  }
  
#line 1171 
  entry = tmp_17;
  ldv_58144: 
#line 1173 
  ;
  
#line 1171 
  if (entry != (struct mlx4_mac_entry *)0) 
#line 1173 
                                           goto ldv_58143; else 
#line 1176 
                                                                goto ldv_58142;
  ldv_58142: 
#line 1177 
  ;
  
#line 1178 
  if (! found) {
    
#line 1179 
    entry = (struct mlx4_mac_entry *)kmalloc_0(48UL,208U);
    
#line 1180 
    if (entry == (struct mlx4_mac_entry *)0) {
      
#line 1181 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed adding MAC %pM on port:%d (out of memory)\n",(unsigned char *)(& ha->addr),priv->port);
      
#line 1183 
      priv->flags |= 16U;
      
#line 1184 
      goto ldv_58145;
    }
    else ;
    
#line 1186 
    mac = mlx4_mac_to_u64((u8 *)(& ha->addr));
    
#line 1187 
    memcpy((void *)(& entry->mac),(void const *)(& ha->addr),6UL);
    
#line 1188 
    err = mlx4_register_mac(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),mac);
    
#line 1189 
    if (err < 0) {
      
#line 1190 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed registering MAC %pM on port %d: %d\n",(unsigned char *)(& ha->addr),priv->port,err);
      
#line 1192 
      kfree((void const *)entry);
      
#line 1193 
      priv->flags |= 16U;
      
#line 1194 
      goto ldv_58145;
    }
    else ;
    
#line 1196 
    err = mlx4_en_uc_steer_add(priv,(unsigned char *)(& ha->addr),& priv->base_qpn,& entry->reg_id);
    
#line 1199 
    if (err != 0) {
      
#line 1200 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed adding MAC %pM on port %d: %d\n",(unsigned char *)(& ha->addr),priv->port,err);
      
#line 1202 
      mlx4_unregister_mac(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),mac);
      
#line 1203 
      kfree((void const *)entry);
      
#line 1204 
      priv->flags |= 16U;
      
#line 1205 
      goto ldv_58145;
    }
    else {
      unsigned int mac_hash;
      
#line 1208 
      if ((priv->msg_enable & 1U) != 0U) 
#line 1208 
                                         en_print("\001",(struct mlx4_en_priv const *)priv,"Added MAC %pM on port:%d\n",(unsigned char *)(& ha->addr),priv->port); else ;
      
#line 1210 
      mac_hash = (unsigned int)ha->addr[5];
      
#line 1211 
      bucket = & priv->mac_hash[mac_hash];
      
#line 1212 
      hlist_add_head_rcu(& entry->hlist,bucket);
    }
  }
  else ;
  {
    
#line 1168 
    struct list_head const *__mptr_6 = (struct list_head const *)ha->list.next;
    
#line 1168 
    tmp_19 = (struct netdev_hw_addr *)__mptr_6;
  }
  
#line 1168 
  ha = tmp_19;
  ldv_58148: 
#line 1170 
  ;
  
#line 1168 
  if (& ha->list != & dev->uc.list) 
#line 1170 
                                    goto ldv_58147; else 
#line 1173 
                                                         goto ldv_58145;
  ldv_58145: 
#line 1174 
  ;
  
#line 1217 
  if ((priv->flags & 16U) != 0U) 
#line 1218 
                                 en_print("\001",(struct mlx4_en_priv const *)priv,"Forcing promiscuous mode on port:%d\n",priv->port);
  else 
    
#line 1220 
    if ((prev_flags & 16U) != 0U) 
#line 1221 
                                  en_print("\001",(struct mlx4_en_priv const *)priv,"Stop forcing promiscuous mode on port:%d\n",priv->port); else ;
  return_label: 
#line 1222 
                return;
}


#line 1226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_do_set_rx_mode(struct work_struct *work)
{
  struct mlx4_en_priv *tmp;
  int tmp_2;
  bool tmp_1;
  {
    
#line 1228 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1228 
    tmp = (struct mlx4_en_priv *)__mptr + 18446744073709481488U;
  }
  
#line 1228 
  struct mlx4_en_priv *priv = tmp;
  
#line 1230 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1231 
  struct net_device *dev = priv->dev;
  
#line 1233 
  ldv_mutex_lock_97(& mdev->state_lock);
  
#line 1234 
  if (! mdev->device_up) {
    
#line 1235 
    if ((priv->msg_enable & 8192U) != 0U) 
#line 1235 
                                          en_print("\001",(struct mlx4_en_priv const *)priv,"Card is not up, ignoring rx mode change.\n"); else ;
    
#line 1236 
    goto out;
  }
  else ;
  
#line 1238 
  if (! priv->port_up) {
    
#line 1239 
    if ((priv->msg_enable & 8192U) != 0U) 
#line 1239 
                                          en_print("\001",(struct mlx4_en_priv const *)priv,"Port is down, ignoring rx mode change.\n"); else ;
    
#line 1240 
    goto out;
  }
  else ;
  
#line 1243 
  tmp_1 = netif_carrier_ok((struct net_device const *)dev);
  
#line 1243 
  if (tmp_1) 
#line 1243 
             tmp_2 = 0; else 
#line 1243 
                             tmp_2 = 1;
  
#line 1243 
  if (tmp_2) {
    int tmp_0;
    
#line 1244 
    tmp_0 = mlx4_en_QUERY_PORT(mdev,(unsigned char)((int)((unsigned char)priv->port)));
    
#line 1244 
    if (tmp_0 == 0) {
      
#line 1245 
      if (priv->port_state.link_state != 0) {
        
#line 1246 
        priv->last_link_state = 1;
        
#line 1247 
        netif_carrier_on(dev);
        
#line 1248 
        if ((priv->msg_enable & 4U) != 0U) 
#line 1248 
                                           en_print("\001",(struct mlx4_en_priv const *)priv,"Link Up\n"); else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1253 
  if ((dev->priv_flags & 131072U) != 0U) 
#line 1254 
                                         mlx4_en_do_uc_filter(priv,dev,mdev); else ;
  
#line 1257 
  if ((dev->flags & 256U) != 0U || (priv->flags & 16U) != 0U) {
    
#line 1259 
    mlx4_en_set_promisc_mode(priv,mdev);
    
#line 1260 
    goto out;
  }
  else ;
  
#line 1264 
  if ((priv->flags & 1U) != 0U) 
#line 1265 
                                mlx4_en_clear_promisc_mode(priv,mdev); else ;
  
#line 1267 
  mlx4_en_do_multicast(priv,dev,mdev);
  out: 
#line 1268 
  ;
  
#line 1269 
  ldv_mutex_unlock_98(& mdev->state_lock);
  
#line 1270 
  return;
}


#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_netpoll(struct net_device *dev)
{
  struct mlx4_en_cq *cq;
  int i;
  
#line 1275 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1279 
  i = 0;
  
#line 1279 
  goto ldv_58165;
  ldv_58164: 
#line 1280 
  ;
  
#line 1280 
  cq = priv->rx_cq[i];
  
#line 1281 
  napi_schedule(& cq->napi);
  
#line 1279 
  i += 1;
  ldv_58165: 
#line 1280 
  ;
  
#line 1279 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1281 
                                           goto ldv_58164; else 
#line 1284 
                                                                goto ldv_58166;
  ldv_58166: 
#line 1285 
  ;
  
#line 1286 
  return;
}


#line 1286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_tx_timeout(struct net_device *dev)
{
  int i;
  int tmp_2;
  bool tmp_1;
  struct netdev_queue *tmp_0;
  
#line 1288 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1289 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1292 
  if ((priv->msg_enable & 8U) != 0U) 
#line 1293 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Tx timeout called on port:%d\n",priv->port); else ;
  
#line 1295 
  i = 0;
  
#line 1295 
  goto ldv_58175;
  ldv_58174: 
#line 1296 
  ;
  
#line 1296 
  tmp_0 = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)i);
  
#line 1296 
  tmp_1 = netif_tx_queue_stopped((struct netdev_queue const *)tmp_0);
  
#line 1296 
  if (tmp_1) 
#line 1296 
             tmp_2 = 0; else 
#line 1296 
                             tmp_2 = 1;
  
#line 1296 
  if (tmp_2) 
#line 1297 
             goto ldv_58173; else ;
  
#line 1298 
  en_print("\001",(struct mlx4_en_priv const *)priv,"TX timeout on queue: %d, QP: 0x%x, CQ: 0x%x, Cons: 0x%x, Prod: 0x%x\n",i,(*(priv->tx_ring + i))->qpn,(int)(*(priv->tx_ring + i))->cqn,(*(priv->tx_ring + i))->cons,(*(priv->tx_ring + i))->prod);
  ldv_58173: 
#line 1299 
  ;
  
#line 1295 
  i += 1;
  ldv_58175: 
#line 1296 
  ;
  
#line 1295 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 1297 
                                           goto ldv_58174; else 
#line 1300 
                                                                goto ldv_58176;
  ldv_58176: 
#line 1301 
  ;
  
#line 1303 
  priv->port_stats.tx_timeout += 1UL;
  
#line 1304 
  if ((priv->msg_enable & 1U) != 0U) 
#line 1304 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Scheduling watchdog\n"); else ;
  
#line 1305 
  ldv_queue_work_99(mdev->workqueue,& priv->watchdog_task);
  
#line 1306 
  return;
}


#line 1309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static struct net_device_stats *mlx4_en_get_stats(struct net_device *dev)
{
  struct net_device_stats *__retres;
  
#line 1311 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1313 
  ldv_spin_lock_bh_100(& priv->stats_lock);
  
#line 1314 
  memcpy((void *)(& priv->ret_stats),(void const *)(& priv->stats),184UL);
  
#line 1315 
  ldv_spin_unlock_bh_101(& priv->stats_lock);
  
#line 1317 
  __retres = & priv->ret_stats;
  
#line 1317 
  return __retres;
}


#line 1320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_set_default_moderation(struct mlx4_en_priv *priv)
{
  struct mlx4_en_cq *cq;
  int i;
  
#line 1331 
  priv->rx_frames = (unsigned short)44U;
  
#line 1332 
  priv->rx_usecs = (unsigned short)16U;
  
#line 1333 
  priv->tx_frames = (unsigned short)16U;
  
#line 1334 
  priv->tx_usecs = (unsigned short)16U;
  
#line 1335 
  if ((priv->msg_enable & 512U) != 0U) 
#line 1335 
                                       en_print("\001",(struct mlx4_en_priv const *)priv,"Default coalesing params for mtu:%d - rx_frames:%d rx_usecs:%d\n",(priv->dev)->mtu,(int)priv->rx_frames,(int)priv->rx_usecs); else ;
  
#line 1339 
  i = 0;
  
#line 1339 
  goto ldv_58187;
  ldv_58186: 
#line 1340 
  ;
  
#line 1340 
  cq = priv->rx_cq[i];
  
#line 1341 
  cq->moder_cnt = priv->rx_frames;
  
#line 1342 
  cq->moder_time = priv->rx_usecs;
  
#line 1343 
  priv->last_moder_time[i] = 65535;
  
#line 1344 
  priv->last_moder_packets[i] = 0UL;
  
#line 1345 
  priv->last_moder_bytes[i] = 0UL;
  
#line 1339 
  i += 1;
  ldv_58187: 
#line 1340 
  ;
  
#line 1339 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1341 
                                           goto ldv_58186; else 
#line 1344 
                                                                goto ldv_58188;
  ldv_58188: 
#line 1345 
  ;
  
#line 1348 
  i = 0;
  
#line 1348 
  goto ldv_58190;
  ldv_58189: 
#line 1349 
  ;
  
#line 1349 
  cq = *(priv->tx_cq + i);
  
#line 1350 
  cq->moder_cnt = priv->tx_frames;
  
#line 1351 
  cq->moder_time = priv->tx_usecs;
  
#line 1348 
  i += 1;
  ldv_58190: 
#line 1349 
  ;
  
#line 1348 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 1350 
                                           goto ldv_58189; else 
#line 1353 
                                                                goto ldv_58191;
  ldv_58191: 
#line 1354 
  ;
  
#line 1355 
  priv->pkt_rate_low = 400000U;
  
#line 1356 
  priv->rx_usecs_low = (unsigned short)0U;
  
#line 1357 
  priv->pkt_rate_high = 450000U;
  
#line 1358 
  priv->rx_usecs_high = (unsigned short)128U;
  
#line 1359 
  priv->sample_interval = (unsigned short)0U;
  
#line 1360 
  priv->adaptive_rx_coal = (unsigned short)1U;
  
#line 1361 
  priv->last_moder_jiffies = 0UL;
  
#line 1362 
  priv->last_moder_tx_packets = 0UL;
  
#line 1363 
  return;
}


#line 1365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_auto_moderation(struct mlx4_en_priv *priv)
{
  struct mlx4_en_cq *cq;
  unsigned long packets;
  unsigned long rate;
  unsigned long avg_pkt_size;
  unsigned long rx_packets;
  unsigned long rx_bytes;
  unsigned long rx_pkt_diff;
  int moder_time;
  int ring;
  int err;
  
#line 1367 
  unsigned long period = jiffies - priv->last_moder_jiffies;
  
#line 1378 
  if ((unsigned int)priv->adaptive_rx_coal == 0U || (unsigned long)((int)priv->sample_interval * 250) > period) 
    
#line 1379 
    goto return_label; else ;
  
#line 1381 
  ring = 0;
  
#line 1381 
  goto ldv_58207;
  ldv_58206: 
#line 1382 
  ;
  
#line 1382 
  ldv_spin_lock_bh_102(& priv->stats_lock);
  
#line 1383 
  rx_packets = (priv->rx_ring[ring])->packets;
  
#line 1384 
  rx_bytes = (priv->rx_ring[ring])->bytes;
  
#line 1385 
  ldv_spin_unlock_bh_103(& priv->stats_lock);
  
#line 1387 
  rx_pkt_diff = rx_packets - priv->last_moder_packets[ring];
  
#line 1389 
  packets = rx_pkt_diff;
  
#line 1390 
  rate = (packets * 250UL) / period;
  
#line 1391 
  if (packets != 0UL) 
#line 1391 
                      avg_pkt_size = (rx_bytes - priv->last_moder_bytes[ring]) / packets; else 
                                                                    
#line 1391 
                                                                    avg_pkt_size = 0UL;
  
#line 1396 
  if ((unsigned long)(7812U / priv->rx_ring_num) < rate && avg_pkt_size > 256UL) 
    
#line 1398 
    if ((unsigned long)priv->pkt_rate_low > rate) 
#line 1399 
                                                  moder_time = (int)priv->rx_usecs_low;
    else 
      
#line 1400 
      if ((unsigned long)priv->pkt_rate_high < rate) 
#line 1401 
                                                     moder_time = (int)priv->rx_usecs_high; else 
                                                                    
#line 1403 
                                                                    moder_time = (int)(((rate - (unsigned long)priv->pkt_rate_low) * (unsigned long)((int)priv->rx_usecs_high - (int)priv->rx_usecs_low)) / (unsigned long)(priv->pkt_rate_high - priv->pkt_rate_low) + (unsigned long)priv->rx_usecs_low);
  else 
#line 1408 
       moder_time = (int)priv->rx_usecs_low;
  
#line 1411 
  if (priv->last_moder_time[ring] != moder_time) {
    
#line 1412 
    priv->last_moder_time[ring] = moder_time;
    
#line 1413 
    cq = priv->rx_cq[ring];
    
#line 1414 
    cq->moder_time = (unsigned short)moder_time;
    
#line 1415 
    cq->moder_cnt = priv->rx_frames;
    
#line 1416 
    err = mlx4_en_set_cq_moder(priv,cq);
    
#line 1417 
    if (err != 0) 
#line 1418 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed modifying moderation for cq:%d\n",ring); else ;
  }
  else ;
  
#line 1421 
  priv->last_moder_packets[ring] = rx_packets;
  
#line 1422 
  priv->last_moder_bytes[ring] = rx_bytes;
  
#line 1381 
  ring += 1;
  ldv_58207: 
#line 1382 
  ;
  
#line 1381 
  if (priv->rx_ring_num > (unsigned int)ring) 
#line 1383 
                                              goto ldv_58206; else 
#line 1386 
                                                                   goto ldv_58208;
  ldv_58208: 
#line 1387 
  ;
  
#line 1425 
  priv->last_moder_jiffies = jiffies;
  return_label: 
#line 1426 
                return;
}


#line 1428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_do_get_stats(struct work_struct *work)
{
  struct mlx4_en_priv *tmp_0;
  int err;
  
#line 1430 
  struct delayed_work *delay = to_delayed_work(work);
  {
    
#line 1431 
    struct delayed_work const *__mptr = (struct delayed_work const *)delay;
    
#line 1431 
    tmp_0 = (struct mlx4_en_priv *)__mptr + 18446744073709481248U;
  }
  
#line 1431 
  struct mlx4_en_priv *priv = tmp_0;
  
#line 1433 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1436 
  ldv_mutex_lock_104(& mdev->state_lock);
  
#line 1437 
  if ((int)mdev->device_up != 0) {
    
#line 1438 
    if ((int)priv->port_up != 0) {
      
#line 1439 
      err = mlx4_en_DUMP_ETH_STATS(mdev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned char)0);
      
#line 1440 
      if (err != 0) {
        
#line 1441 
        if ((priv->msg_enable & 8192U) != 0U) 
#line 1441 
                                              en_print("\001",(struct mlx4_en_priv const *)priv,"Could not update stats\n"); else ;
      }
      else ;
      
#line 1443 
      mlx4_en_auto_moderation(priv);
    }
    else ;
    
#line 1446 
    ldv_queue_delayed_work_105(mdev->workqueue,& priv->stats_task,62UL);
  }
  else ;
  
#line 1448 
  if ((unsigned int)mdev->mac_removed[3 - priv->port] != 0U) {
    
#line 1449 
    mlx4_en_do_set_mac(priv,(unsigned char *)(& priv->current_mac));
    
#line 1450 
    mdev->mac_removed[3 - priv->port] = (unsigned char)0U;
  }
  else ;
  
#line 1452 
  ldv_mutex_unlock_106(& mdev->state_lock);
  
#line 1453 
  return;
}


#line 1458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_service_task(struct work_struct *work)
{
  struct mlx4_en_priv *tmp_0;
  
#line 1460 
  struct delayed_work *delay = to_delayed_work(work);
  {
    
#line 1461 
    struct delayed_work const *__mptr = (struct delayed_work const *)delay;
    
#line 1461 
    tmp_0 = (struct mlx4_en_priv *)__mptr + 18446744073709481024U;
  }
  
#line 1461 
  struct mlx4_en_priv *priv = tmp_0;
  
#line 1463 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1465 
  ldv_mutex_lock_107(& mdev->state_lock);
  
#line 1466 
  if ((int)mdev->device_up != 0) {
    
#line 1467 
    if (((mdev->dev)->caps.flags2 & 32ULL) != 0ULL) 
#line 1468 
                                                    mlx4_en_ptp_overflow_check(mdev); else ;
    
#line 1470 
    mlx4_en_recover_from_oom(priv);
    
#line 1471 
    ldv_queue_delayed_work_108(mdev->workqueue,& priv->service_task,62UL);
  }
  else ;
  
#line 1474 
  ldv_mutex_unlock_109(& mdev->state_lock);
  
#line 1475 
  return;
}


#line 1477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_linkstate(struct work_struct *work)
{
  struct mlx4_en_priv *tmp;
  {
    
#line 1479 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1479 
    tmp = (struct mlx4_en_priv *)__mptr + 18446744073709481328U;
  }
  
#line 1479 
  struct mlx4_en_priv *priv = tmp;
  
#line 1481 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1482 
  int linkstate = priv->link_state;
  
#line 1484 
  ldv_mutex_lock_110(& mdev->state_lock);
  
#line 1487 
  if (priv->last_link_state != linkstate) 
    
#line 1488 
    if (linkstate == 2) {
      
#line 1489 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Link Down\n");
      
#line 1490 
      netif_carrier_off(priv->dev);
    }
    else {
      
#line 1492 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Link Up\n");
      
#line 1493 
      netif_carrier_on(priv->dev);
    }
  else ;
  
#line 1496 
  priv->last_link_state = linkstate;
  
#line 1497 
  ldv_mutex_unlock_111(& mdev->state_lock);
  
#line 1498 
  return;
}


#line 1500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_init_affinity_hint(struct mlx4_en_priv *priv, int ring_idx)
{
  int __retres;
  int tmp_0;
  bool tmp;
  unsigned int tmp_1;
  
#line 1502 
  struct mlx4_en_rx_ring *ring = priv->rx_ring[ring_idx];
  
#line 1503 
  int numa_node_0 = ((priv->mdev)->dev)->numa_node;
  
#line 1505 
  tmp = zalloc_cpumask_var((cpumask_var_t **)(& ring->affinity_mask),208U);
  
#line 1505 
  if (tmp) 
#line 1505 
           tmp_0 = 0; else 
#line 1505 
                           tmp_0 = 1;
  
#line 1505 
  if (tmp_0) {
    
#line 1506 
    __retres = -12;
    
#line 1506 
    goto return_label;
  }
  else ;
  
#line 1508 
  ;
  
#line 1508 
  tmp_1 = cpumask_local_spread((unsigned int)ring_idx,numa_node_0);
  
#line 1508 
  cpumask_set_cpu(tmp_1,ring->affinity_mask);
  
#line 1510 
  __retres = 0;
  return_label: 
#line 1510 
                return __retres;
}


#line 1513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_free_affinity_hint(struct mlx4_en_priv *priv, int ring_idx)
{
  
#line 1515 
  free_cpumask_var((priv->rx_ring[ring_idx])->affinity_mask);
  
#line 1516 
  return;
}


#line 1518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
int mlx4_en_start_port(struct net_device *dev)
{
  int __retres;
  struct mlx4_en_cq *cq;
  struct mlx4_en_tx_ring *tx_ring;
  int i;
  int j;
  unsigned int tmp_1;
  int tmp_3;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  
#line 1520 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1521 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1524 
  int rx_index = 0;
  
#line 1525 
  int tx_index = 0;
  
#line 1526 
  int err = 0;
  
#line 1529 
  u8 mc_list[16U] = {(unsigned char)0U};
  
#line 1531 
  if ((int)priv->port_up != 0) {
    
#line 1532 
    if ((priv->msg_enable & 1U) != 0U) 
#line 1532 
                                       en_print("\001",(struct mlx4_en_priv const *)priv,"start port called while port already up\n"); else ;
    
#line 1533 
    __retres = 0;
    
#line 1533 
    goto return_label;
  }
  else ;
  
#line 1536 
  INIT_LIST_HEAD(& priv->mc_list);
  
#line 1537 
  INIT_LIST_HEAD(& priv->curr_list);
  
#line 1538 
  INIT_LIST_HEAD(& priv->ethtool_list);
  
#line 1539 
  memset((void *)(& priv->ethtool_rules[0]),0,49152UL);
  {
    unsigned int tmp_0;
    
#line 1543 
    unsigned int _min1 = dev->mtu;
    
#line 1543 
    unsigned int _min2 = priv->max_mtu;
    
#line 1543 
    if (_min1 < _min2) 
#line 1543 
                       tmp_0 = _min1; else 
#line 1543 
                                           tmp_0 = _min2;
    
#line 1543 
    tmp_1 = tmp_0;
  }
  
#line 1543 
  dev->mtu = tmp_1;
  
#line 1544 
  mlx4_en_calc_rx_buf(dev);
  
#line 1545 
  if ((priv->msg_enable & 1U) != 0U) 
#line 1545 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Rx buf size:%d\n",priv->rx_skb_size); else ;
  
#line 1548 
  err = mlx4_en_activate_rx_rings(priv);
  
#line 1549 
  if (err != 0) {
    
#line 1550 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to activate RX rings\n");
    
#line 1551 
    __retres = err;
    
#line 1551 
    goto return_label;
  }
  else ;
  
#line 1553 
  i = 0;
  
#line 1553 
  goto ldv_58266;
  ldv_58265: 
#line 1554 
  ;
  
#line 1554 
  cq = priv->rx_cq[i];
  
#line 1556 
  mlx4_en_cq_init_lock(cq);
  
#line 1558 
  err = mlx4_en_init_affinity_hint(priv,i);
  
#line 1559 
  if (err != 0) {
    
#line 1560 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed preparing IRQ affinity hint\n");
    
#line 1561 
    goto cq_err;
  }
  else ;
  
#line 1564 
  err = mlx4_en_activate_cq(priv,cq,i);
  
#line 1565 
  if (err != 0) {
    
#line 1566 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed activating Rx CQ\n");
    
#line 1567 
    mlx4_en_free_affinity_hint(priv,i);
    
#line 1568 
    goto cq_err;
  }
  else ;
  
#line 1571 
  j = 0;
  
#line 1571 
  goto ldv_58263;
  ldv_58262: 
#line 1572 
  ;
  {
    struct mlx4_cqe *tmp_2;
    
#line 1572 
    struct mlx4_cqe *cqe = (struct mlx4_cqe *)0;
    
#line 1574 
    tmp_2 = mlx4_en_get_cqe((void *)cq->buf,j,priv->cqe_size);
    
#line 1574 
    cqe = tmp_2 + priv->cqe_factor;
    
#line 1576 
    cqe->owner_sr_opcode = (unsigned char)128U;
  }
  
#line 1571 
  j += 1;
  ldv_58263: 
#line 1572 
  ;
  
#line 1571 
  if (cq->size > j) 
#line 1573 
                    goto ldv_58262; else 
#line 1576 
                                         goto ldv_58264;
  ldv_58264: 
#line 1577 
  ;
  
#line 1579 
  err = mlx4_en_set_cq_moder(priv,cq);
  
#line 1580 
  if (err != 0) {
    
#line 1581 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed setting cq moderation parameters\n");
    
#line 1582 
    mlx4_en_deactivate_cq(priv,cq);
    
#line 1583 
    mlx4_en_free_affinity_hint(priv,i);
    
#line 1584 
    goto cq_err;
  }
  else ;
  
#line 1586 
  mlx4_en_arm_cq(priv,cq);
  
#line 1587 
  (priv->rx_ring[i])->cqn = (unsigned short)cq->mcq.cqn;
  
#line 1588 
  rx_index += 1;
  
#line 1553 
  i += 1;
  ldv_58266: 
#line 1554 
  ;
  
#line 1553 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1555 
                                           goto ldv_58265; else 
#line 1558 
                                                                goto ldv_58267;
  ldv_58267: 
#line 1559 
  ;
  
#line 1592 
  if ((priv->msg_enable & 1U) != 0U) 
#line 1592 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Getting qp number for port %d\n",priv->port); else ;
  
#line 1593 
  err = mlx4_en_get_qp(priv);
  
#line 1594 
  if (err != 0) {
    
#line 1595 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed getting eth qp\n");
    
#line 1596 
    goto cq_err;
  }
  else ;
  
#line 1598 
  mdev->mac_removed[priv->port] = (unsigned char)0U;
  
#line 1601 
  tmp_3 = mlx4_get_default_counter_index(mdev->dev,priv->port);
  
#line 1600 
  priv->counter_index = (unsigned int)tmp_3;
  
#line 1603 
  err = mlx4_en_config_rss_steer(priv);
  
#line 1604 
  if (err != 0) {
    
#line 1605 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed configuring rss steering\n");
    
#line 1606 
    goto mac_err;
  }
  else ;
  
#line 1609 
  err = mlx4_en_create_drop_qp(priv);
  
#line 1610 
  if (err != 0) 
#line 1611 
                goto rss_err; else ;
  
#line 1614 
  i = 0;
  
#line 1614 
  goto ldv_58275;
  ldv_58274: 
#line 1615 
  ;
  
#line 1616 
  cq = *(priv->tx_cq + i);
  
#line 1617 
  err = mlx4_en_activate_cq(priv,cq,i);
  
#line 1618 
  if (err != 0) {
    
#line 1619 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed allocating Tx CQ\n");
    
#line 1620 
    goto tx_err;
  }
  else ;
  
#line 1622 
  err = mlx4_en_set_cq_moder(priv,cq);
  
#line 1623 
  if (err != 0) {
    
#line 1624 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed setting cq moderation parameters\n");
    
#line 1625 
    mlx4_en_deactivate_cq(priv,cq);
    
#line 1626 
    goto tx_err;
  }
  else ;
  
#line 1628 
  if ((priv->msg_enable & 1U) != 0U) 
#line 1628 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Resetting index of collapsed CQ:%d to -1\n",i); else ;
  
#line 1629 
  (cq->buf)->wqe_index = (unsigned short)65535U;
  
#line 1632 
  tx_ring = *(priv->tx_ring + i);
  
#line 1633 
  err = mlx4_en_activate_tx_ring(priv,tx_ring,cq->mcq.cqn,i / (int)priv->num_tx_rings_p_up);
  
#line 1635 
  if (err != 0) {
    
#line 1636 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed allocating Tx ring\n");
    
#line 1637 
    mlx4_en_deactivate_cq(priv,cq);
    
#line 1638 
    goto tx_err;
  }
  else ;
  
#line 1640 
  tx_ring->tx_queue = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)i);
  
#line 1643 
  mlx4_en_arm_cq(priv,cq);
  
#line 1646 
  j = 0;
  
#line 1646 
  goto ldv_58272;
  ldv_58271: 
#line 1647 
  ;
  
#line 1647 
  *((u32 *)(tx_ring->buf + j)) = 4294967295U;
  
#line 1646 
  j += 64;
  ldv_58272: 
#line 1647 
  ;
  
#line 1646 
  if (tx_ring->buf_size > (unsigned int)j) 
#line 1648 
                                           goto ldv_58271; else 
#line 1651 
                                                                goto ldv_58273;
  ldv_58273: 
#line 1652 
  ;
  
#line 1648 
  tx_index += 1;
  
#line 1614 
  i += 1;
  ldv_58275: 
#line 1615 
  ;
  
#line 1614 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 1616 
                                           goto ldv_58274; else 
#line 1619 
                                                                goto ldv_58276;
  ldv_58276: 
#line 1620 
  ;
  
#line 1652 
  err = mlx4_SET_PORT_general(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(int)(priv->rx_skb_size + 4U),(unsigned char)((int)(priv->prof)->tx_pause),(unsigned char)((int)(priv->prof)->tx_ppp),(unsigned char)((int)(priv->prof)->rx_pause),(unsigned char)((int)(priv->prof)->rx_ppp));
  
#line 1658 
  if (err != 0) {
    
#line 1659 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed setting port general configurations for port %d, with error %d\n",priv->port,err);
    
#line 1661 
    goto tx_err;
  }
  else ;
  
#line 1664 
  err = mlx4_SET_PORT_qpn_calc(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned int)priv->base_qpn,(unsigned char)0);
  
#line 1665 
  if (err != 0) {
    
#line 1666 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed setting default qp numbers\n");
    
#line 1667 
    goto tx_err;
  }
  else ;
  
#line 1670 
  if ((mdev->dev)->caps.tunnel_offload_mode == 1) {
    
#line 1671 
    err = mlx4_SET_PORT_VXLAN(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned char)1,1);
    
#line 1672 
    if (err != 0) {
      
#line 1673 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed setting port L2 tunnel configuration, err %d\n",err);
      
#line 1675 
      goto tx_err;
    }
    else ;
  }
  else ;
  
#line 1680 
  if ((priv->msg_enable & 8192U) != 0U) 
#line 1680 
                                        en_print("\001",(struct mlx4_en_priv const *)priv,"Initializing port\n"); else ;
  
#line 1681 
  err = mlx4_INIT_PORT(mdev->dev,priv->port);
  
#line 1682 
  if (err != 0) {
    
#line 1683 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed Initializing port\n");
    
#line 1684 
    goto tx_err;
  }
  else ;
  
#line 1688 
  eth_broadcast_addr(& mc_list[10]);
  
#line 1689 
  mc_list[5] = (unsigned char)priv->port;
  
#line 1690 
  tmp_5 = mlx4_multicast_attach(mdev->dev,& priv->rss_map.indir_qp,(u8 *)(& mc_list),(unsigned char)((int)((unsigned char)priv->port)),0,(enum mlx4_protocol)MLX4_PROT_ETH,& priv->broadcast_id);
  
#line 1690 
  if (tmp_5 != 0) {
    char const *tmp_4;
    
#line 1693 
    tmp_4 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 1693 
    printk("\001",tmp_4);
  }
  else ;
  
#line 1696 
  priv->flags &= 4294967292U;
  
#line 1699 
  ldv_queue_work_112(mdev->workqueue,& priv->rx_mode_task);
  
#line 1702 
  if (((priv->mdev)->dev)->caps.tunnel_offload_mode == 1) 
#line 1703 
                                                          vxlan_get_rx_port(dev); else ;
  
#line 1705 
  priv->port_up = (_Bool)1;
  
#line 1706 
  netif_tx_start_all_queues(dev);
  
#line 1707 
  netif_device_attach(dev);
  
#line 1709 
  __retres = 0;
  
#line 1709 
  goto return_label;
  tx_err: 
#line 1711 
  ;
  
#line 1712 
  goto ldv_58278;
  ldv_58277: 
#line 1713 
  ;
  
#line 1713 
  mlx4_en_deactivate_tx_ring(priv,*(priv->tx_ring + tx_index));
  
#line 1714 
  mlx4_en_deactivate_cq(priv,*(priv->tx_cq + tx_index));
  ldv_58278: 
#line 1715 
  ;
  
#line 1712 
  tmp_6 = tx_index;
  
#line 1712 
  tx_index -= 1;
  
#line 1712 
  ;
  
#line 1712 
  if (tmp_6 != 0) 
#line 1714 
                  goto ldv_58277; else 
#line 1717 
                                       goto ldv_58279;
  ldv_58279: 
#line 1718 
  ;
  
#line 1716 
  mlx4_en_destroy_drop_qp(priv);
  rss_err: 
#line 1717 
  ;
  
#line 1718 
  mlx4_en_release_rss_steer(priv);
  mac_err: 
#line 1719 
  ;
  
#line 1720 
  mlx4_en_put_qp(priv);
  cq_err: 
#line 1721 
  ;
  
#line 1722 
  goto ldv_58281;
  ldv_58280: 
#line 1723 
  ;
  
#line 1723 
  mlx4_en_deactivate_cq(priv,priv->rx_cq[rx_index]);
  
#line 1724 
  mlx4_en_free_affinity_hint(priv,rx_index);
  ldv_58281: 
#line 1725 
  ;
  
#line 1722 
  tmp_7 = rx_index;
  
#line 1722 
  rx_index -= 1;
  
#line 1722 
  ;
  
#line 1722 
  if (tmp_7 != 0) 
#line 1724 
                  goto ldv_58280; else 
#line 1727 
                                       goto ldv_58282;
  ldv_58282: 
#line 1728 
  ;
  
#line 1726 
  i = 0;
  
#line 1726 
  goto ldv_58284;
  ldv_58283: 
#line 1727 
  ;
  
#line 1727 
  mlx4_en_deactivate_rx_ring(priv,priv->rx_ring[i]);
  
#line 1726 
  i += 1;
  ldv_58284: 
#line 1727 
  ;
  
#line 1726 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1728 
                                           goto ldv_58283; else 
#line 1731 
                                                                goto ldv_58285;
  ldv_58285: 
#line 1732 
  ;
  
#line 1729 
  __retres = err;
  return_label: 
#line 1729 
                return __retres;
}


#line 1733  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
void mlx4_en_stop_port(struct net_device *dev, int detach)
{
  struct mlx4_en_mc_list *mclist;
  struct mlx4_en_mc_list *tmp_0;
  struct ethtool_flow_id *flow;
  struct ethtool_flow_id *tmp_flow;
  int i;
  struct mlx4_en_mc_list *tmp_1;
  struct mlx4_en_mc_list *tmp_2;
  struct mlx4_en_mc_list *tmp_3;
  struct mlx4_en_mc_list *tmp_4;
  struct mlx4_en_mc_list *tmp_5;
  
#line 1735 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1736 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1740 
  u8 mc_list[16U] = {(unsigned char)0U};
  
#line 1742 
  if (! priv->port_up) {
    
#line 1743 
    if ((priv->msg_enable & 1U) != 0U) 
#line 1743 
                                       en_print("\001",(struct mlx4_en_priv const *)priv,"stop port called while port already down\n"); else ;
    
#line 1744 
    goto return_label;
  }
  else ;
  
#line 1748 
  mlx4_CLOSE_PORT(mdev->dev,priv->port);
  
#line 1751 
  netif_tx_lock_bh(dev);
  
#line 1752 
  if (detach != 0) 
#line 1753 
                   netif_device_detach(dev); else ;
  
#line 1754 
  netif_tx_stop_all_queues(dev);
  
#line 1755 
  netif_tx_unlock_bh(dev);
  
#line 1757 
  netif_tx_disable(dev);
  
#line 1760 
  priv->port_up = (_Bool)0;
  
#line 1761 
  priv->counter_index = (mdev->dev)->caps.max_counters + 4294967295U;
  
#line 1764 
  if ((mdev->dev)->caps.steering_mode == 2) {
    
#line 1766 
    priv->flags &= 4294967292U;
    
#line 1768 
    mlx4_flow_steer_promisc_remove(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(enum mlx4_net_trans_promisc_mode)MLX4_FS_ALL_DEFAULT);
    
#line 1771 
    mlx4_flow_steer_promisc_remove(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(enum mlx4_net_trans_promisc_mode)MLX4_FS_MC_DEFAULT);
  }
  else 
    
#line 1774 
    if ((priv->flags & 1U) != 0U) {
      
#line 1775 
      priv->flags &= 4294967294U;
      
#line 1778 
      mlx4_unicast_promisc_remove(mdev->dev,(unsigned int)priv->base_qpn,(unsigned char)((int)((unsigned char)priv->port)));
      
#line 1782 
      if ((priv->flags & 2U) != 0U) {
        
#line 1783 
        mlx4_multicast_promisc_remove(mdev->dev,(unsigned int)priv->base_qpn,(unsigned char)((int)((unsigned char)priv->port)));
        
#line 1785 
        priv->flags &= 4294967293U;
      }
      else ;
    }
    else ;
  
#line 1790 
  eth_broadcast_addr(& mc_list[10]);
  
#line 1791 
  mc_list[5] = (unsigned char)priv->port;
  
#line 1792 
  mlx4_multicast_detach(mdev->dev,& priv->rss_map.indir_qp,(u8 *)(& mc_list),(enum mlx4_protocol)MLX4_PROT_ETH,priv->broadcast_id);
  {
    
#line 1794 
    struct list_head const *__mptr = (struct list_head const *)priv->curr_list.next;
    
#line 1794 
    tmp_1 = (struct mlx4_en_mc_list *)__mptr;
  }
  
#line 1794 
  mclist = tmp_1;
  
#line 1794 
  goto ldv_58303;
  ldv_58302: 
#line 1795 
  ;
  
#line 1795 
  memcpy((void *)(& mc_list[10]),(void const *)(& mclist->addr),6UL);
  
#line 1796 
  mc_list[5] = (unsigned char)priv->port;
  
#line 1797 
  mlx4_multicast_detach(mdev->dev,& priv->rss_map.indir_qp,(u8 *)(& mc_list),(enum mlx4_protocol)MLX4_PROT_ETH,mclist->reg_id);
  
#line 1799 
  if (mclist->tunnel_reg_id != 0ULL) 
#line 1800 
                                     mlx4_flow_detach(mdev->dev,mclist->tunnel_reg_id); else ;
  {
    
#line 1794 
    struct list_head const *__mptr_0 = (struct list_head const *)mclist->list.next;
    
#line 1794 
    tmp_2 = (struct mlx4_en_mc_list *)__mptr_0;
  }
  
#line 1794 
  mclist = tmp_2;
  ldv_58303: 
#line 1796 
  ;
  
#line 1794 
  if (& mclist->list != & priv->curr_list) 
#line 1796 
                                           goto ldv_58302; else 
#line 1799 
                                                                goto ldv_58304;
  ldv_58304: 
#line 1800 
  ;
  
#line 1802 
  mlx4_en_clear_list(dev);
  {
    
#line 1803 
    struct list_head const *__mptr_1 = (struct list_head const *)priv->curr_list.next;
    
#line 1803 
    tmp_3 = (struct mlx4_en_mc_list *)__mptr_1;
  }
  
#line 1803 
  mclist = tmp_3;
  {
    
#line 1803 
    struct list_head const *__mptr_2 = (struct list_head const *)mclist->list.next;
    
#line 1803 
    tmp_4 = (struct mlx4_en_mc_list *)__mptr_2;
  }
  
#line 1804 
  tmp_0 = tmp_4;
  
#line 1803 
  goto ldv_58312;
  ldv_58311: 
#line 1804 
  ;
  
#line 1804 
  list_del(& mclist->list);
  
#line 1805 
  kfree((void const *)mclist);
  
#line 1803 
  mclist = tmp_0;
  {
    
#line 1803 
    struct list_head const *__mptr_3 = (struct list_head const *)tmp_0->list.next;
    
#line 1803 
    tmp_5 = (struct mlx4_en_mc_list *)__mptr_3;
  }
  
#line 1803 
  tmp_0 = tmp_5;
  ldv_58312: 
#line 1805 
  ;
  
#line 1803 
  if (& mclist->list != & priv->curr_list) 
#line 1805 
                                           goto ldv_58311; else 
#line 1808 
                                                                goto ldv_58313;
  ldv_58313: 
#line 1809 
  ;
  
#line 1809 
  mlx4_SET_MCAST_FLTR(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),0ULL,1ULL,(unsigned char)0);
  
#line 1812 
  if ((mdev->dev)->caps.steering_mode == 2) {
    int tmp_6;
    struct ethtool_flow_id *tmp_7;
    struct ethtool_flow_id *tmp_8;
    struct ethtool_flow_id *tmp_9;
    
#line 1814 
    tmp_6 = rtnl_is_locked();
    
#line 1814 
    if ((long)(tmp_6 == 0) != 0L) {
      
#line 1814 
      printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c",1814);
      
#line 1814 
      dump_stack();
    }
    else ;
    {
      
#line 1815 
      struct list_head const *__mptr_4 = (struct list_head const *)priv->ethtool_list.next;
      
#line 1815 
      tmp_7 = (struct ethtool_flow_id *)__mptr_4;
    }
    
#line 1815 
    flow = tmp_7;
    {
      
#line 1815 
      struct list_head const *__mptr_5 = (struct list_head const *)flow->list.next;
      
#line 1815 
      tmp_8 = (struct ethtool_flow_id *)__mptr_5;
    }
    
#line 1816 
    tmp_flow = tmp_8;
    
#line 1815 
    goto ldv_58321;
    ldv_58320: 
#line 1816 
    ;
    
#line 1817 
    mlx4_flow_detach(mdev->dev,flow->id);
    
#line 1818 
    list_del(& flow->list);
    
#line 1815 
    flow = tmp_flow;
    {
      
#line 1815 
      struct list_head const *__mptr_6 = (struct list_head const *)tmp_flow->list.next;
      
#line 1815 
      tmp_9 = (struct ethtool_flow_id *)__mptr_6;
    }
    
#line 1815 
    tmp_flow = tmp_9;
    ldv_58321: 
#line 1817 
    ;
    
#line 1815 
    if (& flow->list != & priv->ethtool_list) 
#line 1817 
                                              goto ldv_58320; else 
#line 1820 
                                                                   goto ldv_58322;
    ldv_58322: 
#line 1821 
    ;
  }
  else ;
  
#line 1822 
  mlx4_en_destroy_drop_qp(priv);
  
#line 1825 
  i = 0;
  
#line 1825 
  goto ldv_58324;
  ldv_58323: 
#line 1826 
  ;
  
#line 1826 
  mlx4_en_deactivate_tx_ring(priv,*(priv->tx_ring + i));
  
#line 1827 
  mlx4_en_deactivate_cq(priv,*(priv->tx_cq + i));
  
#line 1825 
  i += 1;
  ldv_58324: 
#line 1826 
  ;
  
#line 1825 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 1827 
                                           goto ldv_58323; else 
#line 1830 
                                                                goto ldv_58325;
  ldv_58325: 
#line 1831 
  ;
  
#line 1829 
  msleep(10U);
  
#line 1831 
  i = 0;
  
#line 1831 
  goto ldv_58327;
  ldv_58326: 
#line 1832 
  ;
  
#line 1832 
  mlx4_en_free_tx_buf(dev,*(priv->tx_ring + i));
  
#line 1831 
  i += 1;
  ldv_58327: 
#line 1832 
  ;
  
#line 1831 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 1833 
                                           goto ldv_58326; else 
#line 1836 
                                                                goto ldv_58328;
  ldv_58328: 
#line 1837 
  ;
  
#line 1835 
  mlx4_en_release_rss_steer(priv);
  
#line 1838 
  mlx4_en_put_qp(priv);
  
#line 1839 
  if (((mdev->dev)->caps.flags2 & 16ULL) == 0ULL) 
#line 1840 
                                                  mdev->mac_removed[priv->port] = (unsigned char)1U; else ;
  
#line 1843 
  i = 0;
  
#line 1843 
  goto ldv_58338;
  ldv_58337: 
#line 1844 
  ;
  {
    int tmp_12;
    bool tmp_11;
    
#line 1844 
    struct mlx4_en_cq *cq = priv->rx_cq[i];
    
#line 1846 
    local_bh_disable();
    
#line 1847 
    goto ldv_58335;
    ldv_58334: 
#line 1848 
    ;
    
#line 1848 
    printk("\001",i);
    
#line 1849 
    if (1) 
#line 1849 
           __const_udelay(4295000UL);
    else {
      
#line 1849 
      unsigned long __ms = 1UL;
      {
        unsigned long tmp_10;
        
#line 1849 
        goto ldv_58332;
        ldv_58331: 
#line 1850 
        ;
        
#line 1849 
        __const_udelay(4295000UL);
        ldv_58332: 
#line 1851 
        ;
        
#line 1849 
        tmp_10 = __ms;
        
#line 1849 
        __ms -= 1UL;
        
#line 1849 
        ;
        
#line 1849 
        if (tmp_10 != 0UL) 
#line 1851 
                           goto ldv_58331; else 
#line 1854 
                                                goto ldv_58333;
        ldv_58333: 
#line 1855 
        ;
      }
    }
    ldv_58335: 
#line 1858 
    ;
    
#line 1847 
    tmp_11 = mlx4_en_cq_lock_napi(cq);
    
#line 1847 
    if (tmp_11) 
#line 1847 
                tmp_12 = 0; else 
#line 1847 
                                 tmp_12 = 1;
    
#line 1847 
    if (tmp_12) 
#line 1849 
                goto ldv_58334; else 
#line 1852 
                                     goto ldv_58336;
    ldv_58336: 
#line 1853 
    ;
    
#line 1851 
    local_bh_enable();
    
#line 1853 
    napi_synchronize((struct napi_struct const *)(& cq->napi));
    
#line 1854 
    mlx4_en_deactivate_rx_ring(priv,priv->rx_ring[i]);
    
#line 1855 
    mlx4_en_deactivate_cq(priv,cq);
    
#line 1857 
    mlx4_en_free_affinity_hint(priv,i);
  }
  
#line 1843 
  i += 1;
  ldv_58338: 
#line 1844 
  ;
  
#line 1843 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1845 
                                           goto ldv_58337; else 
#line 1848 
                                                                goto ldv_58339;
  ldv_58339: 
#line 1849 
  ;
  return_label: 
#line 1850 
                return;
}


#line 1861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_restart(struct work_struct *work)
{
  struct mlx4_en_priv *tmp;
  {
    
#line 1863 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1863 
    tmp = (struct mlx4_en_priv *)__mptr + 18446744073709481408U;
  }
  
#line 1863 
  struct mlx4_en_priv *priv = tmp;
  
#line 1865 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1866 
  struct net_device *dev = priv->dev;
  
#line 1868 
  if ((priv->msg_enable & 1U) != 0U) 
#line 1868 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Watchdog task called for port %d\n",priv->port); else ;
  
#line 1870 
  ldv_mutex_lock_113(& mdev->state_lock);
  
#line 1871 
  if ((int)priv->port_up != 0) {
    int tmp_0;
    
#line 1872 
    mlx4_en_stop_port(dev,1);
    
#line 1873 
    tmp_0 = mlx4_en_start_port(dev);
    
#line 1873 
    if (tmp_0 != 0) 
#line 1874 
                    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed restarting port %d\n",priv->port); else ;
  }
  else ;
  
#line 1876 
  ldv_mutex_unlock_114(& mdev->state_lock);
  
#line 1877 
  return;
}


#line 1879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_clear_stats(struct net_device *dev)
{
  int i;
  int tmp_0;
  
#line 1881 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1882 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1885 
  tmp_0 = mlx4_en_DUMP_ETH_STATS(mdev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned char)1);
  
#line 1885 
  if (tmp_0 != 0) {
    
#line 1886 
    if ((priv->msg_enable & 8192U) != 0U) 
#line 1886 
                                          en_print("\001",(struct mlx4_en_priv const *)priv,"Failed dumping statistics\n"); else ;
  }
  else ;
  
#line 1888 
  memset((void *)(& priv->stats),0,184UL);
  
#line 1889 
  memset((void *)(& priv->pstats),0,32UL);
  
#line 1890 
  memset((void *)(& priv->pkstats),0,344UL);
  
#line 1891 
  memset((void *)(& priv->port_stats),0,80UL);
  
#line 1892 
  memset((void *)(& priv->rx_flowstats),0,24UL);
  
#line 1893 
  memset((void *)(& priv->tx_flowstats),0,24UL);
  
#line 1894 
  memset((void *)(& priv->rx_priority_flowstats),0,192UL);
  
#line 1896 
  memset((void *)(& priv->tx_priority_flowstats),0,192UL);
  
#line 1898 
  memset((void *)(& priv->pf_stats),0,32UL);
  
#line 1900 
  i = 0;
  
#line 1900 
  goto ldv_58355;
  ldv_58354: 
#line 1901 
  ;
  
#line 1901 
  (*(priv->tx_ring + i))->bytes = 0UL;
  
#line 1902 
  (*(priv->tx_ring + i))->packets = 0UL;
  
#line 1903 
  (*(priv->tx_ring + i))->tx_csum = 0UL;
  
#line 1900 
  i += 1;
  ldv_58355: 
#line 1901 
  ;
  
#line 1900 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 1902 
                                           goto ldv_58354; else 
#line 1905 
                                                                goto ldv_58356;
  ldv_58356: 
#line 1906 
  ;
  
#line 1905 
  i = 0;
  
#line 1905 
  goto ldv_58358;
  ldv_58357: 
#line 1906 
  ;
  
#line 1906 
  (priv->rx_ring[i])->bytes = 0UL;
  
#line 1907 
  (priv->rx_ring[i])->packets = 0UL;
  
#line 1908 
  (priv->rx_ring[i])->csum_ok = 0UL;
  
#line 1909 
  (priv->rx_ring[i])->csum_none = 0UL;
  
#line 1910 
  (priv->rx_ring[i])->csum_complete = 0UL;
  
#line 1905 
  i += 1;
  ldv_58358: 
#line 1906 
  ;
  
#line 1905 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1907 
                                           goto ldv_58357; else 
#line 1910 
                                                                goto ldv_58359;
  ldv_58359: 
#line 1911 
  ;
  
#line 1912 
  return;
}


#line 1914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_open(struct net_device *dev)
{
  
#line 1916 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1917 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1918 
  int err = 0;
  
#line 1920 
  ldv_mutex_lock_115(& mdev->state_lock);
  
#line 1922 
  if (! mdev->device_up) {
    
#line 1923 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Cannot open - device down/disabled\n");
    
#line 1924 
    err = -16;
    
#line 1925 
    goto out;
  }
  else ;
  
#line 1929 
  mlx4_en_clear_stats(dev);
  
#line 1931 
  err = mlx4_en_start_port(dev);
  
#line 1932 
  if (err != 0) 
#line 1933 
                en_print("\001",(struct mlx4_en_priv const *)priv,"Failed starting port:%d\n",priv->port); else ;
  out: 
#line 1935 
  ;
  
#line 1936 
  ldv_mutex_unlock_116(& mdev->state_lock);
  
#line 1937 
  return err;
}


#line 1941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_close(struct net_device *dev)
{
  int __retres;
  
#line 1943 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1944 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1946 
  if ((priv->msg_enable & 16U) != 0U) 
#line 1946 
                                      en_print("\001",(struct mlx4_en_priv const *)priv,"Close port called\n"); else ;
  
#line 1948 
  ldv_mutex_lock_117(& mdev->state_lock);
  
#line 1950 
  mlx4_en_stop_port(dev,0);
  
#line 1951 
  netif_carrier_off(dev);
  
#line 1953 
  ldv_mutex_unlock_118(& mdev->state_lock);
  
#line 1954 
  __retres = 0;
  
#line 1954 
  return __retres;
}


#line 1957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
void mlx4_en_free_resources(struct mlx4_en_priv *priv)
{
  int i;
  
#line 1962 
  (priv->dev)->rx_cpu_rmap = (struct cpu_rmap *)0;
  
#line 1965 
  i = 0;
  
#line 1965 
  goto ldv_58377;
  ldv_58376: 
#line 1966 
  ;
  
#line 1966 
  if (priv->tx_ring != (struct mlx4_en_tx_ring **)0 && *(priv->tx_ring + i) != (struct mlx4_en_tx_ring *)0) 
    
#line 1967 
    mlx4_en_destroy_tx_ring(priv,priv->tx_ring + i); else ;
  
#line 1968 
  if (priv->tx_cq != (struct mlx4_en_cq **)0 && *(priv->tx_cq + i) != (struct mlx4_en_cq *)0) 
    
#line 1969 
    mlx4_en_destroy_cq(priv,priv->tx_cq + i); else ;
  
#line 1965 
  i += 1;
  ldv_58377: 
#line 1966 
  ;
  
#line 1965 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 1967 
                                           goto ldv_58376; else 
#line 1970 
                                                                goto ldv_58378;
  ldv_58378: 
#line 1971 
  ;
  
#line 1972 
  i = 0;
  
#line 1972 
  goto ldv_58380;
  ldv_58379: 
#line 1973 
  ;
  
#line 1973 
  if (priv->rx_ring[i] != (struct mlx4_en_rx_ring *)0) 
#line 1974 
                                                       mlx4_en_destroy_rx_ring(priv,& priv->rx_ring[i],(priv->prof)->rx_ring_size,(unsigned short)((int)((unsigned short)priv->stride))); else ;
  
#line 1976 
  if (priv->rx_cq[i] != (struct mlx4_en_cq *)0) 
#line 1977 
                                                mlx4_en_destroy_cq(priv,& priv->rx_cq[i]); else ;
  
#line 1972 
  i += 1;
  ldv_58380: 
#line 1973 
  ;
  
#line 1972 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1974 
                                           goto ldv_58379; else 
#line 1977 
                                                                goto ldv_58381;
  ldv_58381: 
#line 1978 
  ;
  
#line 1979 
  return;
}


#line 1982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
int mlx4_en_alloc_resources(struct mlx4_en_priv *priv)
{
  int __retres;
  int i;
  int node;
  unsigned int tmp;
  int tmp_0;
  int tmp_1;
  unsigned int tmp_2;
  int tmp_3;
  int tmp_4;
  
#line 1984 
  struct mlx4_en_port_profile *prof = priv->prof;
  
#line 1989 
  i = 0;
  
#line 1989 
  goto ldv_58390;
  ldv_58389: 
#line 1990 
  ;
  
#line 1990 
  tmp = cpumask_weight(cpu_online_mask);
  
#line 1990 
  ;
  
#line 1990 
  node = __cpu_to_node((int)((unsigned int)i % tmp));
  
#line 1991 
  tmp_0 = mlx4_en_create_cq(priv,priv->tx_cq + i,(int)prof->tx_ring_size,i,(enum cq_type)TX,node);
  
#line 1991 
  if (tmp_0 != 0) 
#line 1993 
                  goto err; else ;
  
#line 1995 
  tmp_1 = mlx4_en_create_tx_ring(priv,priv->tx_ring + i,prof->tx_ring_size,(unsigned short)64,node,i);
  
#line 1995 
  if (tmp_1 != 0) 
#line 1998 
                  goto err; else ;
  
#line 1989 
  i += 1;
  ldv_58390: 
#line 1990 
  ;
  
#line 1989 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 1991 
                                           goto ldv_58389; else 
#line 1994 
                                                                goto ldv_58391;
  ldv_58391: 
#line 1995 
  ;
  
#line 2002 
  i = 0;
  
#line 2002 
  goto ldv_58393;
  ldv_58392: 
#line 2003 
  ;
  
#line 2003 
  tmp_2 = cpumask_weight(cpu_online_mask);
  
#line 2003 
  ;
  
#line 2003 
  node = __cpu_to_node((int)((unsigned int)i % tmp_2));
  
#line 2004 
  tmp_3 = mlx4_en_create_cq(priv,& priv->rx_cq[i],(int)prof->rx_ring_size,i,(enum cq_type)RX,node);
  
#line 2004 
  if (tmp_3 != 0) 
#line 2006 
                  goto err; else ;
  
#line 2008 
  tmp_4 = mlx4_en_create_rx_ring(priv,& priv->rx_ring[i],prof->rx_ring_size,(unsigned short)((int)((unsigned short)priv->stride)),node);
  
#line 2008 
  if (tmp_4 != 0) 
#line 2011 
                  goto err; else ;
  
#line 2002 
  i += 1;
  ldv_58393: 
#line 2003 
  ;
  
#line 2002 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 2004 
                                           goto ldv_58392; else 
#line 2007 
                                                                goto ldv_58394;
  ldv_58394: 
#line 2008 
  ;
  
#line 2015 
  (priv->dev)->rx_cpu_rmap = mlx4_get_cpu_rmap((priv->mdev)->dev,priv->port);
  
#line 2018 
  __retres = 0;
  
#line 2018 
  goto return_label;
  err: 
#line 2020 
  ;
  
#line 2021 
  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to allocate NIC resources\n");
  
#line 2022 
  i = 0;
  
#line 2022 
  goto ldv_58396;
  ldv_58395: 
#line 2023 
  ;
  
#line 2023 
  if (priv->rx_ring[i] != (struct mlx4_en_rx_ring *)0) 
#line 2024 
                                                       mlx4_en_destroy_rx_ring(priv,& priv->rx_ring[i],prof->rx_ring_size,(unsigned short)((int)((unsigned short)priv->stride))); else ;
  
#line 2027 
  if (priv->rx_cq[i] != (struct mlx4_en_cq *)0) 
#line 2028 
                                                mlx4_en_destroy_cq(priv,& priv->rx_cq[i]); else ;
  
#line 2022 
  i += 1;
  ldv_58396: 
#line 2023 
  ;
  
#line 2022 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 2024 
                                           goto ldv_58395; else 
#line 2027 
                                                                goto ldv_58397;
  ldv_58397: 
#line 2028 
  ;
  
#line 2030 
  i = 0;
  
#line 2030 
  goto ldv_58399;
  ldv_58398: 
#line 2031 
  ;
  
#line 2031 
  if (*(priv->tx_ring + i) != (struct mlx4_en_tx_ring *)0) 
#line 2032 
                                                           mlx4_en_destroy_tx_ring(priv,priv->tx_ring + i); else ;
  
#line 2033 
  if (*(priv->tx_cq + i) != (struct mlx4_en_cq *)0) 
#line 2034 
                                                    mlx4_en_destroy_cq(priv,priv->tx_cq + i); else ;
  
#line 2030 
  i += 1;
  ldv_58399: 
#line 2031 
  ;
  
#line 2030 
  if (priv->tx_ring_num > (unsigned int)i) 
#line 2032 
                                           goto ldv_58398; else 
#line 2035 
                                                                goto ldv_58400;
  ldv_58400: 
#line 2036 
  ;
  
#line 2036 
  __retres = -12;
  return_label: 
#line 2036 
                return __retres;
}


#line 2040  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
void mlx4_en_destroy_netdev(struct net_device *dev)
{
  
#line 2042 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2043 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 2045 
  if ((priv->msg_enable & 1U) != 0U) 
#line 2045 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Destroying netdev on port:%d\n",priv->port); else ;
  
#line 2048 
  if (priv->registered != 0) 
#line 2049 
                             ldv_unregister_netdev_119(dev); else ;
  
#line 2051 
  if (priv->allocated != 0) 
#line 2052 
                            mlx4_free_hwq_res(mdev->dev,& priv->res,4096); else ;
  
#line 2054 
  cancel_delayed_work(& priv->stats_task);
  
#line 2055 
  cancel_delayed_work(& priv->service_task);
  
#line 2057 
  flush_workqueue(mdev->workqueue);
  
#line 2060 
  ldv_mutex_lock_120(& mdev->state_lock);
  
#line 2061 
  mdev->pndev[priv->port] = (struct net_device *)0;
  
#line 2062 
  mdev->upper[priv->port] = (struct net_device *)0;
  
#line 2063 
  ldv_mutex_unlock_121(& mdev->state_lock);
  
#line 2065 
  mlx4_en_free_resources(priv);
  
#line 2067 
  kfree((void const *)priv->tx_ring);
  
#line 2068 
  kfree((void const *)priv->tx_cq);
  
#line 2070 
  ldv_free_netdev_122(dev);
  
#line 2071 
  return;
}


#line 2073  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  bool tmp_0;
  
#line 2075 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2076 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 2077 
  int err = 0;
  
#line 2079 
  if ((priv->msg_enable & 1U) != 0U) 
#line 2079 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Change MTU called - current:%d new:%d\n",dev->mtu,new_mtu); else ;
  
#line 2082 
  if (new_mtu <= 45 || priv->max_mtu < (unsigned int)new_mtu) {
    
#line 2083 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Bad MTU size:%d.\n",new_mtu);
    
#line 2084 
    __retres = -1;
    
#line 2084 
    goto return_label;
  }
  else ;
  
#line 2086 
  dev->mtu = (unsigned int)new_mtu;
  
#line 2088 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2088 
  if ((int)tmp_0 != 0) {
    
#line 2089 
    ldv_mutex_lock_123(& mdev->state_lock);
    
#line 2090 
    if (! mdev->device_up) {
      
#line 2093 
      if ((priv->msg_enable & 1U) != 0U) 
#line 2093 
                                         en_print("\001",(struct mlx4_en_priv const *)priv,"Change MTU called with card down!?\n"); else ;
    }
    else {
      
#line 2095 
      mlx4_en_stop_port(dev,1);
      
#line 2096 
      err = mlx4_en_start_port(dev);
      
#line 2097 
      if (err != 0) {
        
#line 2098 
        en_print("\001",(struct mlx4_en_priv const *)priv,"Failed restarting port:%d\n",priv->port);
        
#line 2100 
        ldv_queue_work_124(mdev->workqueue,& priv->watchdog_task);
      }
      else ;
    }
    
#line 2103 
    ldv_mutex_unlock_125(& mdev->state_lock);
  }
  else ;
  
#line 2105 
  __retres = 0;
  return_label: 
#line 2105 
                return __retres;
}


#line 2108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_hwtstamp_set(struct net_device *dev, struct ifreq *ifr)
{
  int __retres;
  struct hwtstamp_config config;
  unsigned long tmp_0;
  int tmp_1;
  int tmp_3;
  unsigned long tmp_2;
  
#line 2110 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2111 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 2114 
  tmp_0 = copy_from_user((void *)(& config),(void const *)ifr->ifr_ifru.ifru_data,12UL);
  
#line 2114 
  if (tmp_0 != 0UL) {
    
#line 2115 
    __retres = -14;
    
#line 2115 
    goto return_label;
  }
  else ;
  
#line 2118 
  if (config.flags != 0) {
    
#line 2119 
    __retres = -22;
    
#line 2119 
    goto return_label;
  }
  else ;
  
#line 2122 
  if (((mdev->dev)->caps.flags2 & 32ULL) == 0ULL) {
    
#line 2123 
    __retres = -22;
    
#line 2123 
    goto return_label;
  }
  else ;
  
#line 2126 
  switch (config.tx_type) {
    case 0: 
#line 2127 
    ;
    case 1: 
#line 2128 
    ;
    
#line 2129 
    goto ldv_58422;
    default: 
#line 2130 
    ;
    
#line 2131 
    __retres = -34;
    
#line 2131 
    goto return_label;
  }
  ldv_58422: 
#line 2135 
  ;
  
#line 2135 
  switch (config.rx_filter) {
    case 0: 
#line 2136 
    ;
    
#line 2137 
    goto ldv_58425;
    case 1: 
#line 2138 
    ;
    case 2: 
#line 2139 
    ;
    case 3: 
#line 2140 
    ;
    case 4: 
#line 2141 
    ;
    case 5: 
#line 2142 
    ;
    case 6: 
#line 2143 
    ;
    case 7: 
#line 2144 
    ;
    case 8: 
#line 2145 
    ;
    case 9: 
#line 2146 
    ;
    case 10: 
#line 2147 
    ;
    case 11: 
#line 2148 
    ;
    case 12: 
#line 2149 
    ;
    case 13: 
#line 2150 
    ;
    case 14: 
#line 2151 
    ;
    
#line 2152 
    config.rx_filter = 1;
    
#line 2153 
    goto ldv_58425;
    default: 
#line 2154 
    ;
    
#line 2155 
    __retres = -34;
    
#line 2155 
    goto return_label;
  }
  ldv_58425: 
#line 2158 
  ;
  
#line 2158 
  tmp_1 = mlx4_en_reset_config(dev,config,dev->features);
  
#line 2158 
  if (tmp_1 != 0) {
    
#line 2159 
    config.tx_type = 0;
    
#line 2160 
    config.rx_filter = 0;
  }
  else ;
  
#line 2164 
  tmp_2 = copy_to_user(ifr->ifr_ifru.ifru_data,(void const *)(& config),12UL);
  
#line 2164 
  if (tmp_2 != 0UL) 
#line 2164 
                    tmp_3 = -14; else 
#line 2164 
                                      tmp_3 = 0;
  
#line 2164 
  __retres = tmp_3;
  return_label: 
#line 2164 
                return __retres;
}


#line 2167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_hwtstamp_get(struct net_device *dev, struct ifreq *ifr)
{
  int tmp_1;
  unsigned long tmp_0;
  
#line 2169 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2172 
  tmp_0 = copy_to_user(ifr->ifr_ifru.ifru_data,(void const *)(& priv->hwtstamp_config),12UL);
  
#line 2172 
  if (tmp_0 != 0UL) 
#line 2172 
                    tmp_1 = -14; else 
#line 2172 
                                      tmp_1 = 0;
  
#line 2172 
  return tmp_1;
}


#line 2175  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
{
  int __retres;
  
#line 2177 
  switch (cmd) {
    int tmp;
    int tmp_0;
    case 35248: 
#line 2178 
    ;
    
#line 2179 
    tmp = mlx4_en_hwtstamp_set(dev,ifr);
    
#line 2179 
    __retres = tmp;
    
#line 2179 
    goto return_label;
    case 35249: 
#line 2180 
    ;
    
#line 2181 
    tmp_0 = mlx4_en_hwtstamp_get(dev,ifr);
    
#line 2181 
    __retres = tmp_0;
    
#line 2181 
    goto return_label;
    default: 
#line 2182 
    ;
    
#line 2183 
    __retres = -95;
    
#line 2183 
    goto return_label;
  }
  return_label: 
#line 2177 
                return __retres;
}


#line 2187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_set_features(struct net_device *netdev, netdev_features_t features)
{
  int __retres;
  
#line 2190 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)netdev);
  
#line 2191 
  bool reset = (_Bool)0;
  
#line 2192 
  int ret = 0;
  
#line 2194 
  if (((netdev->features ^ features) & 137438953472ULL) != 0ULL) {
    char *tmp_0;
    
#line 2195 
    if ((features & 137438953472ULL) != 0ULL) 
#line 2195 
                                              tmp_0 = (char *)"ON"; else 
                                                                    
#line 2195 
                                                                    tmp_0 = (char *)"OFF";
    
#line 2195 
    ;
    
#line 2195 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Turn %s RX-FCS\n",tmp_0);
    
#line 2197 
    reset = (_Bool)1;
  }
  else ;
  
#line 2200 
  if (((netdev->features ^ features) & 274877906944ULL) != 0ULL) {
    char *tmp_1;
    
#line 2201 
    u8 ignore_fcs_value = (unsigned char)((unsigned int)((unsigned char)(features >> 38)) & 1U);
    
#line 2203 
    if ((unsigned int)ignore_fcs_value != 0U) 
#line 2203 
                                              tmp_1 = (char *)"ON"; else 
                                                                    
#line 2203 
                                                                    tmp_1 = (char *)"OFF";
    
#line 2203 
    ;
    
#line 2203 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Turn %s RX-ALL\n",tmp_1);
    
#line 2205 
    ret = mlx4_SET_PORT_fcs_check((priv->mdev)->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned char)((int)ignore_fcs_value));
    
#line 2207 
    if (ret != 0) {
      
#line 2208 
      __retres = ret;
      
#line 2208 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2211 
  if (((netdev->features ^ features) & 256ULL) != 0ULL) {
    char *tmp_2;
    
#line 2212 
    if ((features & 256ULL) != 0ULL) 
#line 2212 
                                     tmp_2 = (char *)"ON"; else 
#line 2212 
                                                                tmp_2 = (char *)"OFF";
    
#line 2212 
    ;
    
#line 2212 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Turn %s RX vlan strip offload\n",tmp_2);
    
#line 2214 
    reset = (_Bool)1;
  }
  else ;
  
#line 2217 
  if (((netdev->features ^ features) & 128ULL) != 0ULL) {
    char *tmp_3;
    
#line 2218 
    if ((features & 128ULL) != 0ULL) 
#line 2218 
                                     tmp_3 = (char *)"ON"; else 
#line 2218 
                                                                tmp_3 = (char *)"OFF";
    
#line 2218 
    ;
    
#line 2218 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Turn %s TX vlan strip offload\n",tmp_3);
  }
  else ;
  
#line 2221 
  if (((netdev->features ^ features) & 68719476736ULL) != 0ULL) {
    char *tmp_4;
    
#line 2222 
    if ((features & 68719476736ULL) != 0ULL) 
#line 2222 
                                             tmp_4 = (char *)"ON"; else 
                                                                    
#line 2222 
                                                                    tmp_4 = (char *)"OFF";
    
#line 2222 
    ;
    
#line 2222 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Turn %s loopback\n",tmp_4);
    
#line 2224 
    mlx4_en_update_loopback_state(netdev,features);
  }
  else ;
  
#line 2227 
  if ((int)reset != 0) {
    
#line 2228 
    ret = mlx4_en_reset_config(netdev,priv->hwtstamp_config,features);
    
#line 2230 
    if (ret != 0) {
      
#line 2231 
      __retres = ret;
      
#line 2231 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2234 
  __retres = 0;
  return_label: 
#line 2234 
                return __retres;
}


#line 2237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_set_vf_mac(struct net_device *dev, int queue, u8 *mac)
{
  int __retres;
  int tmp_2;
  bool tmp_1;
  int tmp_3;
  
#line 2239 
  struct mlx4_en_priv *en_priv = netdev_priv((struct net_device const *)dev);
  
#line 2240 
  struct mlx4_en_dev *mdev = en_priv->mdev;
  
#line 2241 
  u64 mac_u64 = mlx4_mac_to_u64(mac);
  
#line 2243 
  tmp_1 = is_valid_ether_addr((u8 const *)mac);
  
#line 2243 
  if (tmp_1) 
#line 2243 
             tmp_2 = 0; else 
#line 2243 
                             tmp_2 = 1;
  
#line 2243 
  if (tmp_2) {
    
#line 2244 
    __retres = -22;
    
#line 2244 
    goto return_label;
  }
  else ;
  
#line 2246 
  tmp_3 = mlx4_set_vf_mac(mdev->dev,en_priv->port,queue,mac_u64);
  
#line 2246 
  __retres = tmp_3;
  return_label: 
#line 2246 
                return __retres;
}


#line 2249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_set_vf_vlan(struct net_device *dev, int vf, u16 vlan, u8 qos)
{
  int tmp_0;
  
#line 2251 
  struct mlx4_en_priv *en_priv = netdev_priv((struct net_device const *)dev);
  
#line 2252 
  struct mlx4_en_dev *mdev = en_priv->mdev;
  
#line 2254 
  tmp_0 = mlx4_set_vf_vlan(mdev->dev,en_priv->port,vf,(unsigned short)((int)vlan),(unsigned char)((int)qos));
  
#line 2254 
  return tmp_0;
}


#line 2257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_set_vf_rate(struct net_device *dev, int vf, int min_tx_rate, int max_tx_rate)
{
  int tmp_0;
  
#line 2260 
  struct mlx4_en_priv *en_priv = netdev_priv((struct net_device const *)dev);
  
#line 2261 
  struct mlx4_en_dev *mdev = en_priv->mdev;
  
#line 2263 
  tmp_0 = mlx4_set_vf_rate(mdev->dev,en_priv->port,vf,min_tx_rate,max_tx_rate);
  
#line 2263 
  return tmp_0;
}


#line 2267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_set_vf_spoofchk(struct net_device *dev, int vf, bool setting)
{
  int tmp_0;
  
#line 2269 
  struct mlx4_en_priv *en_priv = netdev_priv((struct net_device const *)dev);
  
#line 2270 
  struct mlx4_en_dev *mdev = en_priv->mdev;
  
#line 2272 
  tmp_0 = mlx4_set_vf_spoofchk(mdev->dev,en_priv->port,vf,(_Bool)((bool)((int)setting) != 0));
  
#line 2272 
  return tmp_0;
}


#line 2275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_get_vf_config(struct net_device *dev, int vf, struct ifla_vf_info *ivf)
{
  int tmp_0;
  
#line 2277 
  struct mlx4_en_priv *en_priv = netdev_priv((struct net_device const *)dev);
  
#line 2278 
  struct mlx4_en_dev *mdev = en_priv->mdev;
  
#line 2280 
  tmp_0 = mlx4_get_vf_config(mdev->dev,en_priv->port,vf,ivf);
  
#line 2280 
  return tmp_0;
}


#line 2283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_set_vf_link_state(struct net_device *dev, int vf, int link_state)
{
  int tmp_0;
  
#line 2285 
  struct mlx4_en_priv *en_priv = netdev_priv((struct net_device const *)dev);
  
#line 2286 
  struct mlx4_en_dev *mdev = en_priv->mdev;
  
#line 2288 
  tmp_0 = mlx4_set_vf_link_state(mdev->dev,en_priv->port,vf,link_state);
  
#line 2288 
  return tmp_0;
}


#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_get_vf_stats(struct net_device *dev, int vf, struct ifla_vf_stats *vf_stats)
{
  int tmp_0;
  
#line 2294 
  struct mlx4_en_priv *en_priv = netdev_priv((struct net_device const *)dev);
  
#line 2295 
  struct mlx4_en_dev *mdev = en_priv->mdev;
  
#line 2297 
  tmp_0 = mlx4_get_vf_stats(mdev->dev,en_priv->port,vf,vf_stats);
  
#line 2297 
  return tmp_0;
}


#line 2301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_get_phys_port_id(struct net_device *dev, struct netdev_phys_item_id *ppid)
{
  int __retres;
  int i;
  
#line 2304 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2305 
  struct mlx4_dev *mdev = (priv->mdev)->dev;
  
#line 2307 
  u64 phys_port_id = mdev->caps.phys_port_id[priv->port];
  
#line 2309 
  if (phys_port_id == 0ULL) {
    
#line 2310 
    __retres = -95;
    
#line 2310 
    goto return_label;
  }
  else ;
  
#line 2312 
  ppid->id_len = (unsigned char)8U;
  
#line 2313 
  i = 7;
  
#line 2313 
  goto ldv_58523;
  ldv_58522: 
#line 2314 
  ;
  
#line 2314 
  ppid->id[i] = (unsigned char)phys_port_id;
  
#line 2315 
  phys_port_id >>= 8;
  
#line 2313 
  i -= 1;
  ldv_58523: 
#line 2314 
  ;
  
#line 2313 
  if (i >= 0) 
#line 2315 
              goto ldv_58522; else 
#line 2318 
                                   goto ldv_58524;
  ldv_58524: 
#line 2319 
  ;
  
#line 2317 
  __retres = 0;
  return_label: 
#line 2317 
                return __retres;
}


#line 2321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_add_vxlan_offloads(struct work_struct *work)
{
  int ret;
  struct mlx4_en_priv *tmp;
  {
    
#line 2324 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2324 
    tmp = (struct mlx4_en_priv *)__mptr + 18446744073709480800U;
  }
  
#line 2324 
  struct mlx4_en_priv *priv = tmp;
  
#line 2327 
  ret = mlx4_config_vxlan_port((priv->mdev)->dev,(unsigned short)((int)priv->vxlan_port));
  
#line 2328 
  if (ret != 0) 
#line 2329 
                goto out; else ;
  
#line 2331 
  ret = mlx4_SET_PORT_VXLAN((priv->mdev)->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned char)1,1);
  out: 
#line 2333 
  ;
  
#line 2334 
  if (ret != 0) {
    
#line 2335 
    en_print("\001",(struct mlx4_en_priv const *)priv,"failed setting L2 tunnel configuration ret %d\n",ret);
    
#line 2336 
    goto return_label;
  }
  else ;
  
#line 2340 
  (priv->dev)->hw_enc_features |= 17247043586ULL;
  
#line 2342 
  (priv->dev)->hw_features |= 67108864ULL;
  
#line 2343 
  (priv->dev)->features |= 67108864ULL;
  return_label: 
#line 2344 
                return;
}


#line 2346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_del_vxlan_offloads(struct work_struct *work)
{
  int ret;
  struct mlx4_en_priv *tmp;
  {
    
#line 2349 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2349 
    tmp = (struct mlx4_en_priv *)__mptr + 18446744073709480720U;
  }
  
#line 2349 
  struct mlx4_en_priv *priv = tmp;
  
#line 2352 
  (priv->dev)->hw_enc_features &= 18446744056462508029ULL;
  
#line 2354 
  (priv->dev)->hw_features &= 18446744073642442751ULL;
  
#line 2355 
  (priv->dev)->features &= 18446744073642442751ULL;
  
#line 2357 
  ret = mlx4_SET_PORT_VXLAN((priv->mdev)->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned char)1,0);
  
#line 2359 
  if (ret != 0) 
#line 2360 
                en_print("\001",(struct mlx4_en_priv const *)priv,"failed setting L2 tunnel configuration ret %d\n",ret); else ;
  
#line 2362 
  priv->vxlan_port = (unsigned short)0U;
  
#line 2363 
  return;
}


#line 2365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_add_vxlan_port(struct net_device *dev, sa_family_t sa_family, __be16 port)
{
  __be16 current_port;
  
#line 2368 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2371 
  if (((priv->mdev)->dev)->caps.tunnel_offload_mode != 1) 
#line 2372 
                                                          goto return_label; else ;
  
#line 2374 
  if ((unsigned int)sa_family == 10U) 
#line 2375 
                                      goto return_label; else ;
  
#line 2377 
  current_port = priv->vxlan_port;
  
#line 2378 
  if ((unsigned int)current_port != 0U && (int)current_port != (int)port) {
    int tmp_1;
    int tmp_3;
    
#line 2379 
    if (0 != 0) 
#line 2379 
                tmp_1 = (int)((unsigned short)(((int)port << 8) | ((int)port >> 8)));
    else {
      __u16 tmp_0;
      
#line 2379 
      tmp_0 = __fswab16((unsigned short)((int)port));
      
#line 2379 
      tmp_1 = (int)tmp_0;
    }
    
#line 2379 
    if (0 != 0) 
#line 2379 
                tmp_3 = (int)((unsigned short)(((int)current_port << 8) | ((int)current_port >> 8)));
    else {
      __u16 tmp_2;
      
#line 2379 
      tmp_2 = __fswab16((unsigned short)((int)current_port));
      
#line 2379 
      tmp_3 = (int)tmp_2;
    }
    
#line 2379 
    ;
    
#line 2379 
    en_print("\001",(struct mlx4_en_priv const *)priv,"vxlan port %d configured, can\'t add port %d\n",tmp_3,tmp_1);
    
#line 2381 
    goto return_label;
  }
  else ;
  
#line 2384 
  priv->vxlan_port = port;
  
#line 2385 
  ldv_queue_work_126((priv->mdev)->workqueue,& priv->vxlan_add_task);
  return_label: 
#line 2386 
                return;
}


#line 2388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_del_vxlan_port(struct net_device *dev, sa_family_t sa_family, __be16 port)
{
  __be16 current_port;
  
#line 2391 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2394 
  if (((priv->mdev)->dev)->caps.tunnel_offload_mode != 1) 
#line 2395 
                                                          goto return_label; else ;
  
#line 2397 
  if ((unsigned int)sa_family == 10U) 
#line 2398 
                                      goto return_label; else ;
  
#line 2400 
  current_port = priv->vxlan_port;
  
#line 2401 
  if ((int)current_port != (int)port) {
    
#line 2402 
    if ((priv->msg_enable & 1U) != 0U) {
      int tmp_1;
      
#line 2402 
      if (0 != 0) 
#line 2402 
                  tmp_1 = (int)((unsigned short)(((int)port << 8) | ((int)port >> 8)));
      else {
        __u16 tmp_0;
        
#line 2402 
        tmp_0 = __fswab16((unsigned short)((int)port));
        
#line 2402 
        tmp_1 = (int)tmp_0;
      }
      
#line 2402 
      ;
      
#line 2402 
      en_print("\001",(struct mlx4_en_priv const *)priv,"vxlan port %d isn\'t configured, ignoring\n",tmp_1);
    }
    else ;
    
#line 2403 
    goto return_label;
  }
  else ;
  
#line 2406 
  ldv_queue_work_127((priv->mdev)->workqueue,& priv->vxlan_del_task);
  return_label: 
#line 2407 
                return;
}


#line 2409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static netdev_features_t mlx4_en_features_check(struct sk_buff *skb, struct net_device *dev, netdev_features_t features)
{
  netdev_features_t tmp;
  
#line 2413 
  features = vlan_features_check((struct sk_buff const *)skb,features);
  
#line 2414 
  tmp = vxlan_features_check(skb,features);
  
#line 2414 
  return tmp;
}


#line 2418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_set_tx_maxrate(struct net_device *dev, int queue_index, u32 maxrate)
{
  int __retres;
  struct mlx4_update_qp_params params;
  int err;
  
#line 2420 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2421 
  struct mlx4_en_tx_ring *tx_ring = *(priv->tx_ring + queue_index);
  
#line 2425 
  if ((((priv->mdev)->dev)->caps.flags2 & 8388608ULL) == 0ULL) {
    
#line 2426 
    __retres = -95;
    
#line 2426 
    goto return_label;
  }
  else ;
  
#line 2429 
  if (maxrate >> 12 != 0U) {
    
#line 2430 
    params.rate_unit = (unsigned short)3U;
    
#line 2431 
    params.rate_val = (unsigned short)(maxrate / 1000U);
  }
  else 
    
#line 2432 
    if (maxrate != 0U) {
      
#line 2433 
      params.rate_unit = (unsigned short)2U;
      
#line 2434 
      params.rate_val = (unsigned short)maxrate;
    }
    else {
      
#line 2436 
      params.rate_unit = (unsigned short)0U;
      
#line 2437 
      params.rate_val = (unsigned short)0U;
    }
  
#line 2440 
  err = mlx4_update_qp((priv->mdev)->dev,(unsigned int)tx_ring->qpn,(enum mlx4_update_qp_attr)MLX4_UPDATE_QP_RATE_LIMIT,& params);
  
#line 2442 
  __retres = err;
  return_label: 
#line 2442 
                return __retres;
}


#line 2445  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static struct net_device_ops const mlx4_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & mlx4_en_open, .ndo_stop = & mlx4_en_close, .ndo_start_xmit = & mlx4_en_xmit, .ndo_select_queue = & mlx4_en_select_queue, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & mlx4_en_set_rx_mode, .ndo_set_mac_address = & mlx4_en_set_mac, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & mlx4_en_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & mlx4_en_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & mlx4_en_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & mlx4_en_get_stats, .ndo_vlan_rx_add_vid = & mlx4_en_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & mlx4_en_vlan_rx_kill_vid, .ndo_poll_controller = & mlx4_en_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = & mlx4_en_low_latency_recv, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = & mlx4_en_setup_tc, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = & mlx4_en_filter_rfs, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & mlx4_en_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = & mlx4_en_get_phys_port_id, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = & mlx4_en_add_vxlan_port, .ndo_del_vxlan_port = & mlx4_en_del_vxlan_port, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = & mlx4_en_features_check, .ndo_set_tx_maxrate = & mlx4_en_set_tx_maxrate, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static struct net_device_ops const mlx4_netdev_ops_master = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & mlx4_en_open, .ndo_stop = & mlx4_en_close, .ndo_start_xmit = & mlx4_en_xmit, .ndo_select_queue = & mlx4_en_select_queue, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & mlx4_en_set_rx_mode, .ndo_set_mac_address = & mlx4_en_set_mac, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & mlx4_en_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & mlx4_en_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & mlx4_en_get_stats, .ndo_vlan_rx_add_vid = & mlx4_en_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & mlx4_en_vlan_rx_kill_vid, .ndo_poll_controller = & mlx4_en_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = & mlx4_en_set_vf_mac, .ndo_set_vf_vlan = & mlx4_en_set_vf_vlan, .ndo_set_vf_rate = & mlx4_en_set_vf_rate, .ndo_set_vf_spoofchk = & mlx4_en_set_vf_spoofchk, .ndo_get_vf_config = & mlx4_en_get_vf_config, .ndo_set_vf_link_state = & mlx4_en_set_vf_link_state, .ndo_get_vf_stats = & mlx4_en_get_vf_stats, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = & mlx4_en_setup_tc, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = & mlx4_en_filter_rfs, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & mlx4_en_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = & mlx4_en_get_phys_port_id, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = & mlx4_en_add_vxlan_port, .ndo_del_vxlan_port = & mlx4_en_del_vxlan_port, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = & mlx4_en_features_check, .ndo_set_tx_maxrate = & mlx4_en_set_tx_maxrate, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static void mlx4_en_bond_work(struct work_struct *work)
{
  struct mlx4_en_bond *tmp;
  {
    
#line 2525 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2525 
    tmp = (struct mlx4_en_bond *)__mptr;
  }
  
#line 2525 
  struct mlx4_en_bond *bond = tmp;
  
#line 2528 
  int err = 0;
  
#line 2529 
  struct mlx4_dev *dev = ((bond->priv)->mdev)->dev;
  
#line 2531 
  if (bond->is_bonded != 0) {
    int tmp_0;
    
#line 2532 
    tmp_0 = mlx4_is_bonded(dev);
    
#line 2532 
    if (tmp_0 == 0) {
      
#line 2533 
      err = mlx4_bond(dev);
      
#line 2534 
      if (err != 0) 
#line 2535 
                    en_print("\001",(struct mlx4_en_priv const *)bond->priv,"Fail to bond device\n"); else ;
    }
    else ;
    
#line 2537 
    if (err == 0) {
      
#line 2538 
      err = mlx4_port_map_set(dev,& bond->port_map);
      
#line 2539 
      if (err != 0) 
#line 2540 
                    en_print("\001",(struct mlx4_en_priv const *)bond->priv,"Fail to set port map [%d][%d]: %d\n",(int)bond->port_map.port1,(int)bond->port_map.port2,err); else ;
    }
    else ;
  }
  else {
    int tmp_1;
    
#line 2545 
    tmp_1 = mlx4_is_bonded(dev);
    
#line 2545 
    if (tmp_1 != 0) {
      
#line 2546 
      err = mlx4_unbond(dev);
      
#line 2547 
      if (err != 0) 
#line 2548 
                    en_print("\001",(struct mlx4_en_priv const *)bond->priv,"Fail to unbond device\n"); else ;
    }
    else ;
  }
  
#line 2550 
  dev_put((bond->priv)->dev);
  
#line 2551 
  kfree((void const *)bond);
  
#line 2552 
  return;
}


#line 2554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
static int mlx4_en_queue_bond_work(struct mlx4_en_priv *priv, int is_bonded, u8 v2p_p1, u8 v2p_p2)
{
  int __retres;
  
#line 2557 
  struct mlx4_en_bond *bond = (struct mlx4_en_bond *)0;
  
#line 2559 
  bond = (struct mlx4_en_bond *)kzalloc_0(96UL,32U);
  
#line 2560 
  if (bond == (struct mlx4_en_bond *)0) {
    
#line 2561 
    __retres = -12;
    
#line 2561 
    goto return_label;
  }
  else ;
  {
    struct lock_class_key __key;
    
#line 2563 
    __init_work(& bond->work,0);
    
#line 2563 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2563 
    bond->work.data = __constr_expr_38;
    
#line 2563 
    lockdep_init_map(& bond->work.lockdep_map,"(&bond->work)",& __key,0);
    
#line 2563 
    INIT_LIST_HEAD(& bond->work.entry);
    
#line 2563 
    bond->work.func = & mlx4_en_bond_work;
  }
  
#line 2564 
  bond->priv = priv;
  
#line 2565 
  bond->is_bonded = is_bonded;
  
#line 2566 
  bond->port_map.port1 = v2p_p1;
  
#line 2567 
  bond->port_map.port2 = v2p_p2;
  
#line 2568 
  dev_hold(priv->dev);
  
#line 2569 
  ldv_queue_work_128((priv->mdev)->workqueue,& bond->work);
  
#line 2570 
  __retres = 0;
  return_label: 
#line 2570 
                return __retres;
}


#line 2573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
int mlx4_en_netdev_event(struct notifier_block *this, unsigned long event, void *ptr)
{
  int __retres;
  struct mlx4_en_dev *mdev;
  struct mlx4_dev *dev;
  int i;
  struct mlx4_en_priv *priv;
  int tmp_1;
  struct net *tmp_0;
  struct mlx4_en_dev *tmp_2;
  int tmp_4;
  
#line 2576 
  struct net_device *ndev = netdev_notifier_info_to_dev((struct netdev_notifier_info const *)ptr);
  
#line 2577 
  u8 port = (unsigned char)0U;
  
#line 2580 
  int num_eth_ports = 0;
  
#line 2581 
  bool do_bond = (_Bool)1;
  
#line 2583 
  u8 v2p_port1 = (unsigned char)0U;
  
#line 2584 
  u8 v2p_port2 = (unsigned char)0U;
  
#line 2586 
  tmp_0 = dev_net((struct net_device const *)ndev);
  
#line 2586 
  tmp_1 = net_eq((struct net const *)tmp_0,(struct net const *)(& init_net));
  
#line 2586 
  if (tmp_1 == 0) {
    
#line 2587 
    __retres = 0;
    
#line 2587 
    goto return_label;
  }
  else ;
  {
    
#line 2589 
    struct notifier_block const *__mptr = (struct notifier_block const *)this;
    
#line 2589 
    tmp_2 = (struct mlx4_en_dev *)__mptr + 18446744073709550776U;
  }
  
#line 2589 
  mdev = tmp_2;
  
#line 2590 
  dev = mdev->dev;
  
#line 2595 
  i = 1;
  
#line 2595 
  goto ldv_58611;
  ldv_58610: 
#line 2596 
  ;
  
#line 2595 
  if (dev->caps.port_mask[i] == 2U) {
    
#line 2596 
    num_eth_ports += 1;
    
#line 2597 
    if ((unsigned int)port == 0U && mdev->pndev[i] == ndev) 
#line 2598 
                                                            port = (unsigned char)i; else ;
    
#line 2599 
    if (mdev->pndev[i] != (struct net_device *)0) 
#line 2599 
                                                  mdev->upper[i] = netdev_master_upper_dev_get(mdev->pndev[i]); else 
                                                                    
#line 2599 
                                                                    mdev->upper[i] = (struct net_device *)0;
    
#line 2602 
    if (mdev->upper[i] == (struct net_device *)0) 
#line 2603 
                                                  do_bond = (_Bool)0; else ;
    
#line 2604 
    if (num_eth_ports <= 1) 
#line 2605 
                            goto ldv_58609; else ;
    
#line 2607 
    if (mdev->upper[i] != mdev->upper[i + -1]) 
#line 2608 
                                               do_bond = (_Bool)0; else ;
  }
  else ;
  ldv_58609: 
#line 2610 
  ;
  
#line 2595 
  i += 1;
  ldv_58611: 
#line 2596 
  ;
  
#line 2595 
  if (dev->caps.num_ports >= i) 
#line 2597 
                                goto ldv_58610; else 
#line 2600 
                                                     goto ldv_58612;
  ldv_58612: 
#line 2601 
  ;
  
#line 2611 
  if (num_eth_ports == 2) 
#line 2611 
                          tmp_4 = (int)do_bond != 0; else 
#line 2611 
                                                          tmp_4 = 0;
  
#line 2611 
  do_bond = (_Bool)(tmp_4 != 0);
  
#line 2614 
  if (((int)do_bond != 0 && event != 25UL) || (unsigned int)port == 0U) {
    
#line 2615 
    __retres = 0;
    
#line 2615 
    goto return_label;
  }
  else ;
  
#line 2617 
  priv = (struct mlx4_en_priv *)netdev_priv((struct net_device const *)ndev);
  
#line 2618 
  if ((int)do_bond != 0) {
    
#line 2619 
    struct netdev_notifier_bonding_info *notifier_info = (struct netdev_notifier_bonding_info *)ptr;
    
#line 2620 
    struct netdev_bonding_info *bonding_info = & notifier_info->bonding_info;
    
#line 2624 
    if ((unsigned int)bonding_info->master.bond_mode + 4294967295U > 1U && bonding_info->master.bond_mode != 4) 
      
#line 2627 
      do_bond = (_Bool)0; else ;
    
#line 2630 
    if (bonding_info->master.num_slaves != 2) 
#line 2631 
                                              do_bond = (_Bool)0; else ;
    
#line 2634 
    if ((int)do_bond != 0) 
      
#line 2635 
      if (bonding_info->master.bond_mode == 1) 
        
#line 2640 
        if ((int)bonding_info->slave.state == 1) 
          
#line 2642 
          if ((unsigned int)port == 1U) {
            
#line 2643 
            v2p_port1 = (unsigned char)2U;
            
#line 2644 
            v2p_port2 = (unsigned char)2U;
          }
          else {
            
#line 2646 
            v2p_port1 = (unsigned char)1U;
            
#line 2647 
            v2p_port2 = (unsigned char)1U;
          }
        else 
          
#line 2650 
          if ((unsigned int)port == 1U) {
            
#line 2651 
            v2p_port1 = (unsigned char)1U;
            
#line 2652 
            v2p_port2 = (unsigned char)1U;
          }
          else {
            
#line 2654 
            v2p_port1 = (unsigned char)2U;
            
#line 2655 
            v2p_port2 = (unsigned char)2U;
          }
      else {
        
#line 2662 
        __s8 link = bonding_info->slave.link;
        
#line 2664 
        if ((unsigned int)port == 1U) 
#line 2665 
                                      v2p_port2 = (unsigned char)2U; else 
                                                                    
#line 2667 
                                                                    v2p_port1 = (unsigned char)1U;
        
#line 2668 
        if ((unsigned int)link <= 1U) 
          
#line 2670 
          if ((unsigned int)port == 1U) 
#line 2671 
                                        v2p_port1 = (unsigned char)1U; else 
                                                                    
#line 2673 
                                                                    v2p_port2 = (unsigned char)2U;
        else 
          
#line 2675 
          if ((unsigned int)port == 1U) 
#line 2676 
                                        v2p_port1 = (unsigned char)2U; else 
                                                                    
#line 2678 
                                                                    v2p_port2 = (unsigned char)1U;
      }
    else ;
  }
  else ;
  
#line 2684 
  mlx4_en_queue_bond_work(priv,(int)do_bond,(unsigned char)((int)v2p_port1),(unsigned char)((int)v2p_port2));
  
#line 2687 
  __retres = 0;
  return_label: 
#line 2687 
                return __retres;
}


#line 2690  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
void mlx4_en_update_pfc_stats_bitmap(struct mlx4_dev *dev, struct mlx4_en_stats_bitmap *stats_bitmap, u8 rx_ppp, u8 rx_pause, u8 tx_ppp, u8 tx_pause)
{
  int tmp;
  
#line 2695 
  int last_i = 35;
  
#line 2697 
  tmp = mlx4_is_slave(dev);
  
#line 2697 
  if (tmp == 0) {
    
#line 2697 
    if ((dev->caps.flags2 & 16777216ULL) != 0ULL) {
      
#line 2699 
      ldv_mutex_lock_129(& stats_bitmap->mutex);
      
#line 2700 
      bitmap_clear((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,54);
      
#line 2702 
      if ((unsigned int)rx_ppp != 0U) 
#line 2703 
                                      bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,24); else ;
      
#line 2705 
      last_i += 24;
      
#line 2707 
      if ((unsigned int)rx_pause != 0U && (unsigned int)rx_ppp == 0U) 
        
#line 2708 
        bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,3); else ;
      
#line 2710 
      last_i += 3;
      
#line 2712 
      if ((unsigned int)tx_ppp != 0U) 
#line 2713 
                                      bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,24); else ;
      
#line 2715 
      last_i += 24;
      
#line 2717 
      if ((unsigned int)tx_pause != 0U && (unsigned int)tx_ppp == 0U) 
        
#line 2718 
        bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,3); else ;
      
#line 2720 
      last_i += 3;
      
#line 2722 
      ldv_mutex_unlock_130(& stats_bitmap->mutex);
    }
    else ;
  }
  else ;
  
#line 2724 
  return;
}


#line 2726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
void mlx4_en_set_stats_bitmap(struct mlx4_dev *dev, struct mlx4_en_stats_bitmap *stats_bitmap, u8 rx_ppp, u8 rx_pause, u8 tx_ppp, u8 tx_pause)
{
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 2731 
  int last_i = 0;
  {
    struct lock_class_key __key;
    
#line 2733 
    __mutex_init(& stats_bitmap->mutex,"&stats_bitmap->mutex",& __key);
  }
  
#line 2734 
  bitmap_zero((unsigned long *)(& stats_bitmap->bitmap),132U);
  
#line 2736 
  tmp = mlx4_is_slave(dev);
  
#line 2736 
  if (tmp != 0) {
    
#line 2737 
    bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,1);
    
#line 2739 
    bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i + 1U,1);
    
#line 2741 
    bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i + 2U,1);
    
#line 2743 
    bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i + 3U,1);
    
#line 2745 
    bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i + 6U,1);
    
#line 2747 
    bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i + 7U,1);
  }
  else 
#line 2750 
       bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,21);
  
#line 2752 
  last_i += 21;
  
#line 2754 
  bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,10);
  
#line 2755 
  last_i += 10;
  
#line 2757 
  tmp_0 = mlx4_is_master(dev);
  
#line 2757 
  if (tmp_0 != 0) 
#line 2758 
                  bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,4); else ;
  
#line 2760 
  last_i += 4;
  
#line 2762 
  mlx4_en_update_pfc_stats_bitmap(dev,stats_bitmap,(unsigned char)((int)rx_ppp),(unsigned char)((int)rx_pause),(unsigned char)((int)tx_ppp),(unsigned char)((int)tx_pause));
  
#line 2765 
  last_i += 54;
  
#line 2767 
  tmp_1 = mlx4_is_slave(dev);
  
#line 2767 
  if (tmp_1 == 0) 
#line 2768 
                  bitmap_set((unsigned long *)(& stats_bitmap->bitmap),(unsigned int)last_i,43); else ;
  
#line 2769 
  return;
}


#line 2771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
int mlx4_en_init_netdev(struct mlx4_en_dev *mdev, int port, struct mlx4_en_port_profile *prof)
{
  int __retres;
  struct net_device *dev;
  struct mlx4_en_priv *priv;
  int i;
  int err;
  u64 mac_u64;
  int tmp_2;
  int tmp_5;
  bool tmp_4;
  int tmp_6;
  
#line 2780 
  dev = ldv_alloc_etherdev_mqs_131(78104,256U,128U);
  
#line 2782 
  if (dev == (struct net_device *)0) {
    
#line 2783 
    __retres = -12;
    
#line 2783 
    goto return_label;
  }
  else ;
  
#line 2785 
  netif_set_real_num_tx_queues(dev,prof->tx_ring_num);
  
#line 2786 
  netif_set_real_num_rx_queues(dev,prof->rx_ring_num);
  
#line 2788 
  dev->dev.parent = & (((mdev->dev)->persist)->pdev)->dev;
  
#line 2789 
  dev->dev_port = (unsigned short)((unsigned int)((unsigned short)port) + 65535U);
  
#line 2795 
  priv = (struct mlx4_en_priv *)netdev_priv((struct net_device const *)dev);
  
#line 2796 
  memset((void *)priv,0,78104UL);
  
#line 2797 
  priv->counter_index = (mdev->dev)->caps.max_counters + 4294967295U;
  
#line 2798 
  spinlock_check(& priv->stats_lock);
  {
    struct lock_class_key __key;
    
#line 2798 
    __raw_spin_lock_init(& priv->stats_lock.__anonCompField_spinlock_18.rlock,"&(&priv->stats_lock)->rlock",& __key);
  }
  {
    struct lock_class_key __key_0;
    
#line 2799 
    __init_work(& priv->rx_mode_task,0);
    
#line 2799 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2799 
    priv->rx_mode_task.data = __constr_expr_39;
    
#line 2799 
    lockdep_init_map(& priv->rx_mode_task.lockdep_map,"(&priv->rx_mode_task)",& __key_0,0);
    
#line 2799 
    INIT_LIST_HEAD(& priv->rx_mode_task.entry);
    
#line 2799 
    priv->rx_mode_task.func = & mlx4_en_do_set_rx_mode;
  }
  {
    struct lock_class_key __key_1;
    
#line 2800 
    __init_work(& priv->watchdog_task,0);
    
#line 2800 
    atomic_long_t __constr_expr_40 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2800 
    priv->watchdog_task.data = __constr_expr_40;
    
#line 2800 
    lockdep_init_map(& priv->watchdog_task.lockdep_map,"(&priv->watchdog_task)",& __key_1,0);
    
#line 2800 
    INIT_LIST_HEAD(& priv->watchdog_task.entry);
    
#line 2800 
    priv->watchdog_task.func = & mlx4_en_restart;
  }
  {
    struct lock_class_key __key_2;
    
#line 2801 
    __init_work(& priv->linkstate_task,0);
    
#line 2801 
    atomic_long_t __constr_expr_41 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2801 
    priv->linkstate_task.data = __constr_expr_41;
    
#line 2801 
    lockdep_init_map(& priv->linkstate_task.lockdep_map,"(&priv->linkstate_task)",& __key_2,0);
    
#line 2801 
    INIT_LIST_HEAD(& priv->linkstate_task.entry);
    
#line 2801 
    priv->linkstate_task.func = & mlx4_en_linkstate;
  }
  {
    struct lock_class_key __key_3;
    
#line 2802 
    __init_work(& priv->stats_task.work,0);
    
#line 2802 
    atomic_long_t __constr_expr_42 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2802 
    priv->stats_task.work.data = __constr_expr_42;
    
#line 2802 
    lockdep_init_map(& priv->stats_task.work.lockdep_map,"(&(&priv->stats_task)->work)",& __key_3,0);
    
#line 2802 
    INIT_LIST_HEAD(& priv->stats_task.work.entry);
    
#line 2802 
    priv->stats_task.work.func = & mlx4_en_do_get_stats;
  }
  {
    struct lock_class_key __key_4;
    
#line 2802 
    init_timer_key(& priv->stats_task.timer,2097152U,"(&(&priv->stats_task)->timer)",& __key_4);
  }
  
#line 2802 
  priv->stats_task.timer.function = & delayed_work_timer_fn;
  
#line 2802 
  priv->stats_task.timer.data = (unsigned long)(& priv->stats_task);
  {
    struct lock_class_key __key_5;
    
#line 2803 
    __init_work(& priv->service_task.work,0);
    
#line 2803 
    atomic_long_t __constr_expr_43 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2803 
    priv->service_task.work.data = __constr_expr_43;
    
#line 2803 
    lockdep_init_map(& priv->service_task.work.lockdep_map,"(&(&priv->service_task)->work)",& __key_5,0);
    
#line 2803 
    INIT_LIST_HEAD(& priv->service_task.work.entry);
    
#line 2803 
    priv->service_task.work.func = & mlx4_en_service_task;
  }
  {
    struct lock_class_key __key_6;
    
#line 2803 
    init_timer_key(& priv->service_task.timer,2097152U,"(&(&priv->service_task)->timer)",& __key_6);
  }
  
#line 2803 
  priv->service_task.timer.function = & delayed_work_timer_fn;
  
#line 2803 
  priv->service_task.timer.data = (unsigned long)(& priv->service_task);
  {
    struct lock_class_key __key_7;
    
#line 2805 
    __init_work(& priv->vxlan_add_task,0);
    
#line 2805 
    atomic_long_t __constr_expr_44 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2805 
    priv->vxlan_add_task.data = __constr_expr_44;
    
#line 2805 
    lockdep_init_map(& priv->vxlan_add_task.lockdep_map,"(&priv->vxlan_add_task)",& __key_7,0);
    
#line 2805 
    INIT_LIST_HEAD(& priv->vxlan_add_task.entry);
    
#line 2805 
    priv->vxlan_add_task.func = & mlx4_en_add_vxlan_offloads;
  }
  {
    struct lock_class_key __key_8;
    
#line 2806 
    __init_work(& priv->vxlan_del_task,0);
    
#line 2806 
    atomic_long_t __constr_expr_45 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2806 
    priv->vxlan_del_task.data = __constr_expr_45;
    
#line 2806 
    lockdep_init_map(& priv->vxlan_del_task.lockdep_map,"(&priv->vxlan_del_task)",& __key_8,0);
    
#line 2806 
    INIT_LIST_HEAD(& priv->vxlan_del_task.entry);
    
#line 2806 
    priv->vxlan_del_task.func = & mlx4_en_del_vxlan_offloads;
  }
  
#line 2809 
  INIT_LIST_HEAD(& priv->filters);
  
#line 2810 
  spinlock_check(& priv->filters_lock);
  {
    struct lock_class_key __key_9;
    
#line 2810 
    __raw_spin_lock_init(& priv->filters_lock.__anonCompField_spinlock_18.rlock,"&(&priv->filters_lock)->rlock",& __key_9);
  }
  
#line 2813 
  priv->dev = dev;
  
#line 2814 
  priv->mdev = mdev;
  
#line 2815 
  priv->ddev = & (mdev->pdev)->dev;
  
#line 2816 
  priv->prof = prof;
  
#line 2817 
  priv->port = port;
  
#line 2818 
  priv->port_up = (_Bool)0;
  
#line 2819 
  priv->flags = prof->flags;
  
#line 2820 
  priv->pflags = 1U;
  
#line 2821 
  priv->ctrl_flags = 234881024U;
  
#line 2823 
  priv->num_tx_rings_p_up = mdev->profile.num_tx_rings_p_up;
  
#line 2824 
  priv->tx_ring_num = prof->tx_ring_num;
  
#line 2825 
  priv->tx_work_limit = 256U;
  
#line 2826 
  netdev_rss_key_fill((void *)(& priv->rss_key),40UL);
  
#line 2828 
  priv->tx_ring = (struct mlx4_en_tx_ring **)kzalloc_0(2048UL,208U);
  
#line 2830 
  if (priv->tx_ring == (struct mlx4_en_tx_ring **)0) {
    
#line 2831 
    err = -12;
    
#line 2832 
    goto out;
  }
  else ;
  
#line 2834 
  priv->tx_cq = (struct mlx4_en_cq **)kzalloc_0(2048UL,208U);
  
#line 2836 
  if (priv->tx_cq == (struct mlx4_en_cq **)0) {
    
#line 2837 
    err = -12;
    
#line 2838 
    goto out;
  }
  else ;
  
#line 2840 
  priv->rx_ring_num = prof->rx_ring_num;
  
#line 2841 
  priv->cqe_factor = (mdev->dev)->caps.cqe_size == 64U;
  
#line 2842 
  priv->cqe_size = (int)(mdev->dev)->caps.cqe_size;
  
#line 2843 
  priv->mac_index = -1;
  
#line 2844 
  priv->msg_enable = 20U;
  
#line 2846 
  tmp_2 = mlx4_is_slave((priv->mdev)->dev);
  
#line 2846 
  if (tmp_2 == 0) 
    
#line 2847 
    if (((mdev->dev)->caps.flags2 & 67108864ULL) != 0ULL) 
#line 2848 
                                                          dev->dcbnl_ops = & mlx4_en_dcbnl_ops;
    else {
      
#line 2850 
      en_print("\001",(struct mlx4_en_priv const *)priv,"enabling only PFC DCB ops\n");
      
#line 2851 
      dev->dcbnl_ops = & mlx4_en_dcbnl_pfc_ops;
    }
  else ;
  
#line 2856 
  i = 0;
  
#line 2856 
  goto ldv_58665;
  ldv_58664: 
#line 2857 
  ;
  
#line 2857 
  priv->mac_hash[i].first = (struct hlist_node *)0;
  
#line 2856 
  i += 1;
  ldv_58665: 
#line 2857 
  ;
  
#line 2856 
  if (i <= 255) 
#line 2858 
                goto ldv_58664; else 
#line 2861 
                                     goto ldv_58666;
  ldv_58666: 
#line 2862 
  ;
  
#line 2860 
  priv->max_mtu = (unsigned int)(mdev->dev)->caps.eth_mtu_cap[priv->port];
  
#line 2862 
  if (((int)(mdev->dev)->caps.rx_checksum_flags_port[priv->port] & 1) != 0) 
    
#line 2864 
    priv->flags |= 32U; else ;
  
#line 2867 
  dev->addr_len = (unsigned char)6U;
  
#line 2868 
  mlx4_en_u64_to_mac(dev->dev_addr,(mdev->dev)->caps.def_mac[priv->port]);
  
#line 2869 
  tmp_4 = is_valid_ether_addr((u8 const *)dev->dev_addr);
  
#line 2869 
  if (tmp_4) 
#line 2869 
             tmp_5 = 0; else 
#line 2869 
                             tmp_5 = 1;
  
#line 2869 
  if (tmp_5) {
    int tmp_3;
    
#line 2870 
    tmp_3 = mlx4_is_slave((priv->mdev)->dev);
    
#line 2870 
    if (tmp_3 != 0) {
      
#line 2871 
      eth_hw_addr_random(dev);
      
#line 2872 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Assigned random MAC address %pM\n",dev->dev_addr);
      
#line 2873 
      mac_u64 = mlx4_mac_to_u64(dev->dev_addr);
      
#line 2874 
      (mdev->dev)->caps.def_mac[priv->port] = mac_u64;
    }
    else {
      
#line 2876 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Port: %d, invalid mac burned: %pM, quiting\n",priv->port,dev->dev_addr);
      
#line 2878 
      err = -22;
      
#line 2879 
      goto out;
    }
  }
  else ;
  
#line 2883 
  memcpy((void *)(& priv->current_mac),(void const *)dev->dev_addr,8UL);
  
#line 2885 
  priv->stride = 64;
  
#line 2887 
  err = mlx4_en_alloc_resources(priv);
  
#line 2888 
  if (err != 0) 
#line 2889 
                goto out; else ;
  
#line 2892 
  priv->hwtstamp_config.flags = 0;
  
#line 2893 
  priv->hwtstamp_config.tx_type = 0;
  
#line 2894 
  priv->hwtstamp_config.rx_filter = 0;
  
#line 2897 
  err = mlx4_alloc_hwq_res(mdev->dev,& priv->res,4096,4096);
  
#line 2899 
  if (err != 0) {
    
#line 2900 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to allocate page for rx qps\n");
    
#line 2901 
    goto out;
  }
  else ;
  
#line 2903 
  priv->allocated = 1;
  
#line 2908 
  tmp_6 = mlx4_is_master((priv->mdev)->dev);
  
#line 2908 
  if (tmp_6 != 0) 
#line 2909 
                  dev->netdev_ops = & mlx4_netdev_ops_master; else 
#line 2911 
                                                                   dev->netdev_ops = & mlx4_netdev_ops;
  
#line 2912 
  dev->watchdog_timeo = 3750;
  
#line 2913 
  netif_set_real_num_tx_queues(dev,priv->tx_ring_num);
  
#line 2914 
  netif_set_real_num_rx_queues(dev,priv->rx_ring_num);
  
#line 2916 
  dev->ethtool_ops = & mlx4_en_ethtool_ops;
  
#line 2921 
  dev->hw_features = 19ULL;
  
#line 2922 
  if (mdev->LSO_support != 0U) 
#line 2923 
                               dev->hw_features |= 1114112ULL; else ;
  
#line 2925 
  dev->vlan_features = dev->hw_features;
  
#line 2927 
  dev->hw_features |= 25769803776ULL;
  
#line 2928 
  dev->features = dev->hw_features | 928ULL;
  
#line 2931 
  dev->hw_features |= 68719477120ULL;
  
#line 2934 
  if (((mdev->dev)->caps.flags & 17179869184ULL) != 0ULL) 
#line 2935 
                                                          dev->hw_features |= 137438953472ULL; else ;
  
#line 2937 
  if (((mdev->dev)->caps.flags2 & 268435456ULL) != 0ULL) 
#line 2938 
                                                         dev->hw_features |= 274877906944ULL; else ;
  
#line 2940 
  if ((mdev->dev)->caps.steering_mode == 2 && (mdev->dev)->caps.dmfs_high_steer_mode != 2) 
    
#line 2943 
    dev->hw_features |= 4294967296ULL; else ;
  
#line 2945 
  if ((mdev->dev)->caps.steering_mode != 0) 
#line 2946 
                                            dev->priv_flags |= 131072U; else ;
  
#line 2949 
  if (((mdev->dev)->caps.flags2 & 2ULL) != 0ULL) 
#line 2950 
                                                 priv->rss_hash_fn = (unsigned char)1U;
  else 
    
#line 2951 
    if (((mdev->dev)->caps.flags2 & 4ULL) != 0ULL) 
#line 2952 
                                                   priv->rss_hash_fn = (unsigned char)2U;
    else {
      
#line 2954 
      en_print("\001",(struct mlx4_en_priv const *)priv,"No RSS hash capabilities exposed, using Toeplitz\n");
      
#line 2956 
      priv->rss_hash_fn = (unsigned char)1U;
    }
  
#line 2959 
  mdev->pndev[port] = dev;
  
#line 2960 
  mdev->upper[port] = (struct net_device *)0;
  
#line 2962 
  netif_carrier_off(dev);
  
#line 2963 
  mlx4_en_set_default_moderation(priv);
  
#line 2965 
  en_print("\001",(struct mlx4_en_priv const *)priv,"Using %d TX rings\n",prof->tx_ring_num);
  
#line 2966 
  en_print("\001",(struct mlx4_en_priv const *)priv,"Using %d RX rings\n",prof->rx_ring_num);
  
#line 2968 
  mlx4_en_update_loopback_state(priv->dev,(priv->dev)->features);
  
#line 2971 
  mlx4_en_calc_rx_buf(dev);
  
#line 2972 
  err = mlx4_SET_PORT_general(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(int)(priv->rx_skb_size + 4U),(unsigned char)((int)prof->tx_pause),(unsigned char)((int)prof->tx_ppp),(unsigned char)((int)prof->rx_pause),(unsigned char)((int)prof->rx_ppp));
  
#line 2976 
  if (err != 0) {
    
#line 2977 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed setting port general configurations for port %d, with error %d\n",priv->port,err);
    
#line 2979 
    goto out;
  }
  else ;
  
#line 2982 
  if ((mdev->dev)->caps.tunnel_offload_mode == 1) {
    
#line 2983 
    err = mlx4_SET_PORT_VXLAN(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(unsigned char)1,1);
    
#line 2984 
    if (err != 0) {
      
#line 2985 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed setting port L2 tunnel configuration, err %d\n",err);
      
#line 2987 
      goto out;
    }
    else ;
  }
  else ;
  
#line 2992 
  en_print("\001",(struct mlx4_en_priv const *)priv,"Initializing port\n");
  
#line 2993 
  err = mlx4_INIT_PORT(mdev->dev,priv->port);
  
#line 2994 
  if (err != 0) {
    
#line 2995 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed Initializing port\n");
    
#line 2996 
    goto out;
  }
  else ;
  
#line 2998 
  ldv_queue_delayed_work_132(mdev->workqueue,& priv->stats_task,62UL);
  
#line 3000 
  if (((mdev->dev)->caps.flags2 & 32ULL) != 0ULL) 
#line 3001 
                                                  ldv_queue_delayed_work_133(mdev->workqueue,& priv->service_task,62UL); else ;
  
#line 3004 
  mlx4_en_set_stats_bitmap(mdev->dev,& priv->stats_bitmap,(unsigned char)((int)mdev->profile.prof[priv->port].rx_ppp),(unsigned char)((int)mdev->profile.prof[priv->port].rx_pause),(unsigned char)((int)mdev->profile.prof[priv->port].tx_ppp),(unsigned char)((int)mdev->profile.prof[priv->port].tx_pause));
  
#line 3010 
  err = ldv_register_netdev_134(dev);
  
#line 3011 
  if (err != 0) {
    
#line 3012 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Netdev registration failed for port %d\n",port);
    
#line 3013 
    goto out;
  }
  else ;
  
#line 3016 
  priv->registered = 1;
  
#line 3018 
  __retres = 0;
  
#line 3018 
  goto return_label;
  out: 
#line 3020 
  ;
  
#line 3021 
  mlx4_en_destroy_netdev(dev);
  
#line 3022 
  __retres = err;
  return_label: 
#line 3022 
                return __retres;
}


#line 3025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_netdev.c"
int mlx4_en_reset_config(struct net_device *dev, struct hwtstamp_config ts_config, netdev_features_t features)
{
  int __retres;
  
#line 3029 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 3030 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 3031 
  int port_up = 0;
  
#line 3032 
  int err = 0;
  
#line 3034 
  if (((priv->hwtstamp_config.tx_type == ts_config.tx_type && priv->hwtstamp_config.rx_filter == ts_config.rx_filter) && ((dev->features ^ features) & 256ULL) == 0ULL) && ((dev->features ^ features) & 137438953472ULL) == 0ULL) {
    
#line 3038 
    __retres = 0;
    
#line 3038 
    goto return_label;
  }
  else ;
  
#line 3040 
  if ((((dev->features ^ features) & 256ULL) != 0ULL && (features & 256ULL) != 0ULL) && priv->hwtstamp_config.rx_filter != 0) {
    
#line 3043 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Can\'t turn ON rx vlan offload while time-stamping rx filter is ON\n");
    
#line 3044 
    __retres = -22;
    
#line 3044 
    goto return_label;
  }
  else ;
  
#line 3047 
  ldv_mutex_lock_135(& mdev->state_lock);
  
#line 3048 
  if ((int)priv->port_up != 0) {
    
#line 3049 
    port_up = 1;
    
#line 3050 
    mlx4_en_stop_port(dev,1);
  }
  else ;
  
#line 3053 
  mlx4_en_free_resources(priv);
  
#line 3055 
  en_print("\001",(struct mlx4_en_priv const *)priv,"Changing device configuration rx filter(%x) rx vlan(%x)\n",ts_config.rx_filter,(features & 256ULL) != 0ULL);
  
#line 3058 
  priv->hwtstamp_config.tx_type = ts_config.tx_type;
  
#line 3059 
  priv->hwtstamp_config.rx_filter = ts_config.rx_filter;
  
#line 3061 
  if (((dev->features ^ features) & 256ULL) != 0ULL) 
    
#line 3062 
    if ((features & 256ULL) != 0ULL) 
#line 3063 
                                     dev->features |= 256ULL; else 
#line 3065 
                                                                   dev->features &= 18446744073709551359ULL;
  else 
    
#line 3066 
    if (ts_config.rx_filter == 0) 
      
#line 3070 
      if ((dev->wanted_features & 256ULL) != 0ULL) 
#line 3071 
                                                   dev->features |= 256ULL; else 
                                                                    
#line 3073 
                                                                    dev->features &= 18446744073709551359ULL;
    else ;
  
#line 3076 
  if (((dev->features ^ features) & 137438953472ULL) != 0ULL) 
    
#line 3077 
    if ((features & 137438953472ULL) != 0ULL) 
#line 3078 
                                              dev->features |= 137438953472ULL; else 
                                                                    
#line 3080 
                                                                    dev->features &= 18446743936270598143ULL;
  else ;
  
#line 3087 
  if (ts_config.rx_filter != 0) {
    
#line 3088 
    if ((dev->features & 256ULL) != 0ULL) 
#line 3089 
                                          en_print("\001",(struct mlx4_en_priv const *)priv,"Turning off RX vlan offload since RX time-stamping is ON\n"); else ;
    
#line 3090 
    dev->features &= 18446744073709551359ULL;
  }
  else ;
  
#line 3093 
  err = mlx4_en_alloc_resources(priv);
  
#line 3094 
  if (err != 0) {
    
#line 3095 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed reallocating port resources\n");
    
#line 3096 
    goto out;
  }
  else ;
  
#line 3098 
  if (port_up != 0) {
    
#line 3099 
    err = mlx4_en_start_port(dev);
    
#line 3100 
    if (err != 0) 
#line 3101 
                  en_print("\001",(struct mlx4_en_priv const *)priv,"Failed starting port\n"); else ;
  }
  else ;
  out: 
#line 3104 
  ;
  
#line 3105 
  ldv_mutex_unlock_136(& mdev->state_lock);
  
#line 3106 
  netdev_features_change(dev);
  
#line 3107 
  __retres = err;
  return_label: 
#line 3107 
                return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int (*ldv_emg_alias_eth_validate_addr_33)(struct net_device *) = & eth_validate_addr;

#line 59 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 60 
_Bool ldv_emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2);


#line 61 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 62 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 63 
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1);


#line 64 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 68  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 69 
  tmp = mlx4_en_close(arg0);
  
#line 69 
  return tmp;
}


#line 73  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
void ldv_emg_wrapper_mlx4_en_tx_timeout_13(struct net_device *arg0)
{
  
#line 74 
  mlx4_en_tx_timeout(arg0);
  
#line 75 
  return;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_set_vf_link_state_4(struct net_device *arg0, int arg1, int arg2)
{
  int tmp;
  
#line 79 
  tmp = mlx4_en_set_vf_link_state(arg0,arg1,arg2);
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
void ldv_emg_wrapper_mlx4_en_set_rx_mode_26(struct net_device *arg0)
{
  
#line 84 
  mlx4_en_set_rx_mode(arg0);
  
#line 85 
  return;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_get_vf_config_39(struct net_device *arg0, int arg1, struct ifla_vf_info *arg2)
{
  int tmp;
  
#line 89 
  tmp = mlx4_en_get_vf_config(arg0,arg1,arg2);
  
#line 89 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 94 
  tmp = mlx4_en_open(arg0);
  
#line 94 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_get_phys_port_id_53(struct net_device *arg0, struct netdev_phys_item_id *arg1)
{
  int tmp;
  
#line 99 
  tmp = mlx4_en_get_phys_port_id(arg0,arg1);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_vlan_rx_kill_vid_49(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 104 
  tmp = mlx4_en_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 104 
  return tmp;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
void ldv_emg_wrapper_mlx4_en_netpoll_59(struct net_device *arg0)
{
  
#line 109 
  mlx4_en_netpoll(arg0);
  
#line 110 
  return;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
struct net_device_stats *ldv_emg_wrapper_mlx4_en_get_stats_18(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 114 
  tmp = mlx4_en_get_stats(arg0);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_get_vf_stats_36(struct net_device *arg0, int arg1, struct ifla_vf_stats *arg2)
{
  int tmp;
  
#line 119 
  tmp = mlx4_en_get_vf_stats(arg0,arg1,arg2);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_set_vf_rate_20(struct net_device *arg0, int arg1, int arg2, int arg3)
{
  int tmp;
  
#line 124 
  tmp = mlx4_en_set_vf_rate(arg0,arg1,arg2,arg3);
  
#line 124 
  return tmp;
}


#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_ioctl_16(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 129 
  tmp = mlx4_en_ioctl(arg0,arg1,arg2);
  
#line 129 
  return tmp;
}


#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
void ldv_emg_wrapper_mlx4_en_add_vxlan_port_9(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  
#line 134 
  mlx4_en_add_vxlan_port(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 135 
  return;
}


#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_set_vf_vlan_34(struct net_device *arg0, int arg1, unsigned short arg2, unsigned char arg3)
{
  int tmp;
  
#line 139 
  tmp = mlx4_en_set_vf_vlan(arg0,arg1,(unsigned short)((int)arg2),(unsigned char)((int)arg3));
  
#line 139 
  return tmp;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_set_features_41(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 144 
  tmp = mlx4_en_set_features(arg0,arg1);
  
#line 144 
  return tmp;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_set_mac_12(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 149 
  tmp = mlx4_en_set_mac(arg0,arg1);
  
#line 149 
  return tmp;
}


#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_vlan_rx_add_vid_45(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 154 
  tmp = mlx4_en_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 154 
  return tmp;
}


#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_set_tx_maxrate_15(struct net_device *arg0, int arg1, unsigned int arg2)
{
  int tmp;
  
#line 159 
  tmp = mlx4_en_set_tx_maxrate(arg0,arg1,arg2);
  
#line 159 
  return tmp;
}


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
void ldv_emg_wrapper_mlx4_en_del_vxlan_port_24(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  
#line 164 
  mlx4_en_del_vxlan_port(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 165 
  return;
}


#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_low_latency_recv_58(struct napi_struct *arg0)
{
  int tmp;
  
#line 169 
  tmp = mlx4_en_low_latency_recv(arg0);
  
#line 169 
  return tmp;
}


#line 173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_set_vf_spoofchk_28(struct net_device *arg0, int arg1, _Bool arg2)
{
  int tmp;
  
#line 174 
  tmp = mlx4_en_set_vf_spoofchk(arg0,arg1,(_Bool)((bool)((int)arg2) != 0));
  
#line 174 
  return tmp;
}


#line 178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
unsigned long long ldv_emg_wrapper_mlx4_en_features_check_48(struct sk_buff *arg0, struct net_device *arg1, unsigned long long arg2)
{
  unsigned long long tmp;
  
#line 179 
  tmp = mlx4_en_features_check(arg0,arg1,arg2);
  
#line 179 
  return tmp;
}


#line 183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_filter_rfs_52(struct net_device *arg0, struct sk_buff *arg1, unsigned short arg2, unsigned int arg3)
{
  int tmp;
  
#line 184 
  tmp = mlx4_en_filter_rfs(arg0,(struct sk_buff const *)arg1,(unsigned short)((int)arg2),arg3);
  
#line 184 
  return tmp;
}


#line 188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_set_vf_mac_60(struct net_device *arg0, int arg1, unsigned char *arg2)
{
  int tmp;
  
#line 189 
  tmp = mlx4_en_set_vf_mac(arg0,arg1,arg2);
  
#line 189 
  return tmp;
}


#line 193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
int ldv_emg_wrapper_mlx4_en_change_mtu_5(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 194 
  tmp = mlx4_en_change_mtu(arg0,arg1);
  
#line 194 
  return tmp;
}


#line 547  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void *kmalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 550 
  tmp = ldv_kmalloc(size,flags);
  
#line 550 
  return tmp;
}


#line 568  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 571 
  tmp = ldv_kzalloc(size,flags);
  
#line 571 
  return tmp;
}


#line 752  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_62(spinlock_t *lock)
{
  
#line 756 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 758 
  spin_lock(lock);
  
#line 759 
  return;
}


#line 795  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_65(spinlock_t *lock)
{
  
#line 799 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 801 
  spin_unlock(lock);
  
#line 802 
  return;
}


#line 815  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_67(spinlock_t *lock)
{
  
#line 819 
  ldv_spin_model_lock((char *)"tx_global_lock_of_net_device");
  
#line 821 
  spin_lock(lock);
  
#line 822 
  return;
}


#line 825  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_68(spinlock_t *lock)
{
  
#line 829 
  ldv_spin_model_unlock((char *)"tx_global_lock_of_net_device");
  
#line 831 
  spin_unlock(lock);
  
#line 832 
  return;
}


#line 855  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_bh_71(spinlock_t *lock)
{
  
#line 859 
  ldv_spin_model_lock((char *)"addr_list_lock_of_net_device");
  
#line 861 
  spin_lock_bh_1(lock);
  
#line 862 
  return;
}


#line 875  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_bh_73(spinlock_t *lock)
{
  
#line 879 
  ldv_spin_model_unlock((char *)"addr_list_lock_of_net_device");
  
#line 881 
  spin_unlock_bh_1(lock);
  
#line 882 
  return;
}


#line 895  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_75(spinlock_t *lock)
{
  
#line 899 
  ldv_spin_model_lock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 901 
  spin_lock(lock);
  
#line 902 
  return;
}


#line 905  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_76(spinlock_t *lock)
{
  
#line 909 
  ldv_spin_model_unlock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 911 
  spin_unlock(lock);
  
#line 912 
  return;
}


#line 935  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_bh_79(spinlock_t *lock)
{
  
#line 939 
  ldv_spin_model_lock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 941 
  spin_lock_bh_1(lock);
  
#line 942 
  return;
}


#line 945  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_bh_80(spinlock_t *lock)
{
  
#line 949 
  ldv_spin_model_unlock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 951 
  spin_unlock_bh_1(lock);
  
#line 952 
  return;
}


#line 955  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_bh_81(spinlock_t *lock)
{
  
#line 959 
  ldv_spin_model_lock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 961 
  spin_lock_bh_1(lock);
  
#line 962 
  return;
}


#line 965  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_bh_82(spinlock_t *lock)
{
  
#line 969 
  ldv_spin_model_unlock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 971 
  spin_unlock_bh_1(lock);
  
#line 972 
  return;
}


#line 975  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_bh_83_0(spinlock_t *lock)
{
  
#line 979 
  ldv_spin_model_lock((char *)"filters_lock_of_mlx4_en_priv");
  
#line 981 
  spin_lock_bh_1(lock);
  
#line 982 
  return;
}


#line 985  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_work_84(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 989 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 989 
  __retres = tmp != 0;
  
#line 989 
  return __retres;
}


#line 993  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_bh_85_0(spinlock_t *lock)
{
  
#line 997 
  ldv_spin_model_unlock((char *)"filters_lock_of_mlx4_en_priv");
  
#line 999 
  spin_unlock_bh_1(lock);
  
#line 1000 
  return;
}


#line 1003  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_bh_86(spinlock_t *lock)
{
  
#line 1007 
  ldv_spin_model_lock((char *)"filters_lock_of_mlx4_en_priv");
  
#line 1009 
  spin_lock_bh_1(lock);
  
#line 1010 
  return;
}


#line 1013  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_bh_87(spinlock_t *lock)
{
  
#line 1017 
  ldv_spin_model_unlock((char *)"filters_lock_of_mlx4_en_priv");
  
#line 1019 
  spin_unlock_bh_1(lock);
  
#line 1020 
  return;
}


#line 1023  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_bh_88(spinlock_t *lock)
{
  
#line 1027 
  ldv_spin_model_lock((char *)"filters_lock_of_mlx4_en_priv");
  
#line 1029 
  spin_lock_bh_1(lock);
  
#line 1030 
  return;
}


#line 1033  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_bh_89(spinlock_t *lock)
{
  
#line 1037 
  ldv_spin_model_unlock((char *)"filters_lock_of_mlx4_en_priv");
  
#line 1039 
  spin_unlock_bh_1(lock);
  
#line 1040 
  return;
}


#line 1043  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1)
{
  
#line 1047 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1048 
  return;
}


#line 1051  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1)
{
  
#line 1055 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1056 
  return;
}


#line 1059  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1)
{
  
#line 1063 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1064 
  return;
}


#line 1067  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1)
{
  
#line 1071 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1072 
  return;
}


#line 1075  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_94(struct mutex *ldv_func_arg1)
{
  
#line 1079 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1080 
  return;
}


#line 1083  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_95(struct mutex *ldv_func_arg1)
{
  
#line 1087 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1088 
  return;
}


#line 1091  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_work_96(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1095 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1095 
  __retres = tmp != 0;
  
#line 1095 
  return __retres;
}


#line 1099  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_97(struct mutex *ldv_func_arg1)
{
  
#line 1103 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1104 
  return;
}


#line 1107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_98(struct mutex *ldv_func_arg1)
{
  
#line 1111 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1112 
  return;
}


#line 1115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_work_99(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1119 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1119 
  __retres = tmp != 0;
  
#line 1119 
  return __retres;
}


#line 1123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_bh_100(spinlock_t *lock)
{
  
#line 1127 
  ldv_spin_model_lock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 1129 
  spin_lock_bh_1(lock);
  
#line 1130 
  return;
}


#line 1133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_bh_101(spinlock_t *lock)
{
  
#line 1137 
  ldv_spin_model_unlock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 1139 
  spin_unlock_bh_1(lock);
  
#line 1140 
  return;
}


#line 1143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_lock_bh_102(spinlock_t *lock)
{
  
#line 1147 
  ldv_spin_model_lock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 1149 
  spin_lock_bh_1(lock);
  
#line 1150 
  return;
}


#line 1153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_spin_unlock_bh_103(spinlock_t *lock)
{
  
#line 1157 
  ldv_spin_model_unlock((char *)"stats_lock_of_mlx4_en_priv");
  
#line 1159 
  spin_unlock_bh_1(lock);
  
#line 1160 
  return;
}


#line 1163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_104(struct mutex *ldv_func_arg1)
{
  
#line 1167 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1168 
  return;
}


#line 1171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_delayed_work_105(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1175 
  tmp = ldv_emg_queue_delayed_work(wq,dwork,delay);
  
#line 1175 
  __retres = tmp != 0;
  
#line 1175 
  return __retres;
}


#line 1179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_106(struct mutex *ldv_func_arg1)
{
  
#line 1183 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1184 
  return;
}


#line 1187  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_107(struct mutex *ldv_func_arg1)
{
  
#line 1191 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1192 
  return;
}


#line 1195  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_delayed_work_108(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1199 
  tmp = ldv_emg_queue_delayed_work(wq,dwork,delay);
  
#line 1199 
  __retres = tmp != 0;
  
#line 1199 
  return __retres;
}


#line 1203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1)
{
  
#line 1207 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1208 
  return;
}


#line 1211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_110(struct mutex *ldv_func_arg1)
{
  
#line 1215 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1216 
  return;
}


#line 1219  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1)
{
  
#line 1223 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1224 
  return;
}


#line 1227  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_work_112(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1231 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1231 
  __retres = tmp != 0;
  
#line 1231 
  return __retres;
}


#line 1235  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_113(struct mutex *ldv_func_arg1)
{
  
#line 1239 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1240 
  return;
}


#line 1243  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1)
{
  
#line 1247 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1248 
  return;
}


#line 1251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_115(struct mutex *ldv_func_arg1)
{
  
#line 1255 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1256 
  return;
}


#line 1259  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1)
{
  
#line 1263 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1264 
  return;
}


#line 1267  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_117(struct mutex *ldv_func_arg1)
{
  
#line 1271 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1272 
  return;
}


#line 1275  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1)
{
  
#line 1279 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1280 
  return;
}


#line 1283  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_unregister_netdev_119(struct net_device *ldv_func_arg1)
{
  
#line 1287 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1288 
  return;
}


#line 1291  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_120(struct mutex *ldv_func_arg1)
{
  
#line 1295 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1296 
  return;
}


#line 1299  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_121(struct mutex *ldv_func_arg1)
{
  
#line 1303 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1304 
  return;
}


#line 1307  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_free_netdev_122(struct net_device *ldv_func_arg1)
{
  
#line 1311 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1312 
  return;
}


#line 1315  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_123(struct mutex *ldv_func_arg1)
{
  
#line 1319 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1320 
  return;
}


#line 1323  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_work_124(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1327 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1327 
  __retres = tmp != 0;
  
#line 1327 
  return __retres;
}


#line 1331  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_125(struct mutex *ldv_func_arg1)
{
  
#line 1335 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1336 
  return;
}


#line 1339  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_work_126(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1343 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1343 
  __retres = tmp != 0;
  
#line 1343 
  return __retres;
}


#line 1347  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_work_127(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1351 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1351 
  __retres = tmp != 0;
  
#line 1351 
  return __retres;
}


#line 1355  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_work_128(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1359 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1359 
  __retres = tmp != 0;
  
#line 1359 
  return __retres;
}


#line 1363  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_129(struct mutex *ldv_func_arg1)
{
  
#line 1367 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_mlx4_en_stats_bitmap");
  
#line 1368 
  return;
}


#line 1371  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_130(struct mutex *ldv_func_arg1)
{
  
#line 1375 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_mlx4_en_stats_bitmap");
  
#line 1376 
  return;
}


#line 1379  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_131(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1383 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1383 
  return tmp;
}


#line 1387  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_delayed_work_132(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1391 
  tmp = ldv_emg_queue_delayed_work(wq,dwork,delay);
  
#line 1391 
  __retres = tmp != 0;
  
#line 1391 
  return __retres;
}


#line 1395  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static bool ldv_queue_delayed_work_133(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1399 
  tmp = ldv_emg_queue_delayed_work(wq,dwork,delay);
  
#line 1399 
  __retres = tmp != 0;
  
#line 1399 
  return __retres;
}


#line 1403  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static int ldv_register_netdev_134(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1407 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1407 
  return tmp;
}


#line 1411  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_lock_135(struct mutex *ldv_func_arg1)
{
  
#line 1415 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1416 
  return;
}


#line 1419  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_netdev.c.aux"
static void ldv_mutex_unlock_136(struct mutex *ldv_func_arg1)
{
  
#line 1423 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 1424 
  return;
}

void __builtin_va_end(__builtin_va_list);

void __builtin_va_start(__builtin_va_list);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_main.c.aux"
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1);


#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct workqueue_struct *__alloc_workqueue_key(char const *, unsigned int, int, struct lock_class_key *, char const * , ...);


#line 421 
void destroy_workqueue(struct workqueue_struct *);


#line 490 
static bool ldv_queue_work_82(struct workqueue_struct *wq, struct work_struct *work);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_1(size_t size, gfp_t flags);


#line 2084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
int register_netdevice_notifier(struct notifier_block *);


#line 2085 
int unregister_netdevice_notifier(struct notifier_block *);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crash_dump.h"
extern unsigned long long elfcorehdr_addr;


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crash_dump.h"
__inline static int is_kdump_kernel(void)
{
  int __retres;
  
#line 56 
  __retres = elfcorehdr_addr != 18446744073709551615ULL;
  
#line 56 
  return __retres;
}


#line 1012  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
__inline static int mlx4_is_mfunc(struct mlx4_dev *dev)
{
  int __retres;
  
#line 1014 
  __retres = (int)dev->flags & 12;
  
#line 1014 
  return __retres;
}


#line 1039 
int mlx4_pd_alloc(struct mlx4_dev *, u32 *);


#line 1040 
void mlx4_pd_free(struct mlx4_dev *, u32);


#line 1044 
int mlx4_uar_alloc(struct mlx4_dev *, struct mlx4_uar *);


#line 1045 
void mlx4_uar_free(struct mlx4_dev *, struct mlx4_uar *);


#line 1054 
int mlx4_mr_alloc(struct mlx4_dev *, u32, u64, u64, u32, int, int, struct mlx4_mr *);


#line 1056 
int mlx4_mr_free(struct mlx4_dev *, struct mlx4_mr *);


#line 1057 
int mlx4_mr_enable(struct mlx4_dev *, struct mlx4_mr *);


#line 1465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
__inline static bool mlx4_low_memory_profile(void)
{
  bool __retres;
  int tmp;
  
#line 1467 
  tmp = is_kdump_kernel();
  
#line 1467 
  __retres = (_Bool)(tmp != 0);
  
#line 1467 
  return __retres;
}


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/driver.h"
int mlx4_register_interface(struct mlx4_interface *);


#line 68 
void mlx4_unregister_interface(struct mlx4_interface *);


#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
void mlx4_en_set_num_rx_rings(struct mlx4_en_dev *mdev);


#line 850 
void mlx4_en_init_timestamp(struct mlx4_en_dev *mdev);


#line 851 
void mlx4_en_remove_timestamp(struct mlx4_en_dev *mdev);


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static char const mlx4_en_version[66U] = {(char)'m', (char)'l', (char)'x', (char)'4', (char)'_', (char)'e', (char)'n', (char)'\000'};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static unsigned int udp_rss = 1U;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static unsigned int pfctx = 0U;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static unsigned int pfcrx = 0U;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static unsigned int inline_thold = 104U;

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
void en_print(char const *level, struct mlx4_en_priv const *priv, char const *format , ...)
{
  va_list args;
  struct va_format vaf;
  
#line 87 
  __builtin_va_start((__builtin_va_list)((__va_list_tag *)(& args)));
  
#line 89 
  vaf.fmt = format;
  
#line 90 
  vaf.va = & args;
  
#line 91 
  if (priv->registered != 0) 
#line 92 
                             printk("%s%s: %s: %pV",level,(char *)"mlx4_en",(char *)(& (priv->dev)->name),& vaf);
  else {
    char const *tmp;
    
#line 95 
    ;
    
#line 96 
    tmp = dev_name((struct device const *)(& ((priv->mdev)->pdev)->dev));
    
#line 95 
    ;
    
#line 95 
    printk("%s%s: %s: Port %d: %pV",level,(char *)"mlx4_en",tmp,priv->port,& vaf);
  }
  
#line 98 
  __builtin_va_end((__builtin_va_list)((__va_list_tag *)(& args)));
  
#line 99 
  return;
}


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
void mlx4_en_update_loopback_state(struct net_device *dev, netdev_features_t features)
{
  int tmp_0;
  int tmp_1;
  
#line 104 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 106 
  if ((features & 68719476736ULL) != 0ULL) 
#line 107 
                                           priv->ctrl_flags |= 16777216U; else 
                                                                    
#line 109 
                                                                    priv->ctrl_flags &= 4278190079U;
  
#line 111 
  priv->flags &= 4294967283U;
  
#line 117 
  tmp_0 = mlx4_is_mfunc((priv->mdev)->dev);
  
#line 117 
  if (tmp_0 != 0) {
    
#line 117 
    if ((features & 68719476736ULL) == 0ULL) {
      
#line 118 
      if (priv->validate_loopback == 0U) 
#line 119 
                                         priv->flags |= 8U; else ;
    }
    else ;
  }
  else ;
  
#line 124 
  tmp_1 = mlx4_is_mfunc((priv->mdev)->dev);
  
#line 124 
  if (tmp_1 != 0) 
#line 125 
                  priv->flags |= 4U;
  else 
    
#line 124 
    if (priv->validate_loopback != 0U) 
#line 125 
                                       priv->flags |= 4U; else ;
  
#line 126 
  return;
}


#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static int mlx4_en_get_profile(struct mlx4_en_dev *mdev)
{
  int __retres;
  int i;
  bool tmp;
  
#line 130 
  struct mlx4_en_profile *params = & mdev->profile;
  
#line 133 
  params->udp_rss = (int)udp_rss;
  
#line 134 
  tmp = mlx4_low_memory_profile();
  
#line 134 
  if ((int)tmp == 0) {
    int tmp_2;
    {
      unsigned int tmp_0;
      int tmp_1;
      
#line 136 
      tmp_0 = cpumask_weight(cpu_online_mask);
      
#line 136 
      int __min1 = (int)tmp_0;
      
#line 136 
      int __min2 = 32;
      
#line 136 
      if (__min1 < __min2) 
#line 136 
                           tmp_1 = __min1; else 
#line 136 
                                                tmp_1 = __min2;
      
#line 136 
      tmp_2 = tmp_1;
    }
    
#line 134 
    params->num_tx_rings_p_up = (unsigned char)tmp_2;
  }
  else 
#line 134 
       params->num_tx_rings_p_up = (unsigned char)1U;
  
#line 138 
  if (params->udp_rss != 0 && ((mdev->dev)->caps.flags & 1099511627776ULL) == 0ULL) {
    char const *tmp_3;
    
#line 140 
    tmp_3 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 140 
    printk("\001",tmp_3);
    
#line 141 
    params->udp_rss = 0;
  }
  else ;
  
#line 143 
  i = 1;
  
#line 143 
  goto ldv_50858;
  ldv_50857: 
#line 144 
  ;
  
#line 144 
  params->prof[i].rx_pause = (unsigned char)1U;
  
#line 145 
  params->prof[i].rx_ppp = (unsigned char)pfcrx;
  
#line 146 
  params->prof[i].tx_pause = (unsigned char)1U;
  
#line 147 
  params->prof[i].tx_ppp = (unsigned char)pfctx;
  
#line 148 
  params->prof[i].tx_ring_size = 512U;
  
#line 149 
  params->prof[i].rx_ring_size = 1024U;
  
#line 150 
  params->prof[i].tx_ring_num = (unsigned int)((int)params->num_tx_rings_p_up * 8);
  
#line 152 
  params->prof[i].rss_rings = 0;
  
#line 153 
  params->prof[i].inline_thold = (int)inline_thold;
  
#line 143 
  i += 1;
  ldv_50858: 
#line 144 
  ;
  
#line 143 
  if (i <= 2) 
#line 145 
              goto ldv_50857; else 
#line 148 
                                   goto ldv_50859;
  ldv_50859: 
#line 149 
  ;
  
#line 156 
  __retres = 0;
  
#line 156 
  return __retres;
}


#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static void *mlx4_en_get_netdev(struct mlx4_dev *dev, void *ctx, u8 port)
{
  void *__retres;
  
#line 161 
  struct mlx4_en_dev *endev = (struct mlx4_en_dev *)ctx;
  
#line 163 
  __retres = (void *)endev->pndev[(int)port];
  
#line 163 
  return __retres;
}


#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static void mlx4_en_event(struct mlx4_dev *dev, void *endev_ptr, enum mlx4_dev_event event, unsigned long port)
{
  struct mlx4_en_priv *priv;
  
#line 169 
  struct mlx4_en_dev *mdev = (struct mlx4_en_dev *)endev_ptr;
  
#line 172 
  switch ((unsigned int)event) {
    char const *tmp_0;
    char const *tmp_1;
    case (unsigned int)1: 
#line 173 
    ;
    case (unsigned int)2: 
#line 174 
    ;
    
#line 175 
    if (mdev->pndev[port] == (struct net_device *)0) 
#line 176 
                                                     goto return_label; else ;
    
#line 177 
    priv = (struct mlx4_en_priv *)netdev_priv((struct net_device const *)mdev->pndev[port]);
    
#line 180 
    priv->link_state = (int)event;
    
#line 181 
    ldv_queue_work_82(mdev->workqueue,& priv->linkstate_task);
    
#line 182 
    goto ldv_50876;
    case (unsigned int)0: 
#line 184 
    ;
    
#line 185 
    tmp_0 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 185 
    printk("\001",tmp_0);
    
#line 186 
    goto ldv_50876;
    case (unsigned int)5: 
#line 188 
    ;
    case (unsigned int)6: 
#line 189 
    ;
    
#line 190 
    goto ldv_50876;
    default: 
#line 191 
    ;
    
#line 192 
    if ((port == 0UL || (unsigned long)dev->caps.num_ports < port) || mdev->pndev[port] == (struct net_device *)0) 
      
#line 194 
      goto return_label; else ;
    
#line 195 
    ;
    
#line 195 
    ;
    
#line 195 
    tmp_1 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 195 
    printk("\001",tmp_1,(unsigned int)event,(int)port);
  }
  ldv_50876: 
#line 198 
  ;
  return_label: 
#line 199 
                return;
}


#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static void mlx4_en_remove(struct mlx4_dev *dev, void *endev_ptr)
{
  int i;
  
#line 202 
  struct mlx4_en_dev *mdev = (struct mlx4_en_dev *)endev_ptr;
  
#line 205 
  ldv_mutex_lock_83(& mdev->state_lock);
  
#line 206 
  mdev->device_up = (_Bool)0;
  
#line 207 
  ldv_mutex_unlock_84(& mdev->state_lock);
  
#line 209 
  i = 1;
  
#line 209 
  goto ldv_50888;
  ldv_50887: 
#line 210 
  ;
  
#line 209 
  if (dev->caps.port_mask[i] == 2U) {
    
#line 210 
    if (mdev->pndev[i] != (struct net_device *)0) 
#line 211 
                                                  mlx4_en_destroy_netdev(mdev->pndev[i]); else ;
  }
  else ;
  
#line 209 
  i += 1;
  ldv_50888: 
#line 210 
  ;
  
#line 209 
  if (dev->caps.num_ports >= i) 
#line 211 
                                goto ldv_50887; else 
#line 214 
                                                     goto ldv_50889;
  ldv_50889: 
#line 215 
  ;
  
#line 213 
  if (((mdev->dev)->caps.flags2 & 32ULL) != 0ULL) 
#line 214 
                                                  mlx4_en_remove_timestamp(mdev); else ;
  
#line 216 
  flush_workqueue(mdev->workqueue);
  
#line 217 
  destroy_workqueue(mdev->workqueue);
  
#line 218 
  mlx4_mr_free(dev,& mdev->mr);
  
#line 219 
  iounmap((void volatile *)mdev->uar_map);
  
#line 220 
  mlx4_uar_free(dev,& mdev->priv_uar);
  
#line 221 
  mlx4_pd_free(dev,mdev->priv_pdn);
  
#line 222 
  if (mdev->nb.notifier_call != (int (*)(struct notifier_block *, unsigned long , void *))0) 
    
#line 223 
    unregister_netdevice_notifier(& mdev->nb); else ;
  
#line 224 
  kfree((void const *)mdev);
  
#line 225 
  return;
}


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static void *mlx4_en_add(struct mlx4_dev *dev)
{
  void *__retres;
  struct mlx4_en_dev *mdev;
  int i;
  int tmp_0;
  int tmp_1;
  int tmp_4;
  int tmp_6;
  int tmp_8;
  struct workqueue_struct *tmp_10;
  int tmp_14;
  {
    bool __print_once;
    
#line 232 
    if (! __print_once) {
      
#line 232 
      __print_once = (_Bool)1;
      
#line 232 
      printk("\001",(char const *)(& mlx4_en_version));
    }
    else ;
  }
  
#line 234 
  mdev = (struct mlx4_en_dev *)kzalloc_1(864UL,208U);
  
#line 235 
  if (mdev == (struct mlx4_en_dev *)0) 
#line 236 
                                       goto err_free_res; else ;
  
#line 238 
  tmp_0 = mlx4_pd_alloc(dev,& mdev->priv_pdn);
  
#line 238 
  if (tmp_0 != 0) 
#line 239 
                  goto err_free_dev; else ;
  
#line 241 
  tmp_1 = mlx4_uar_alloc(dev,& mdev->priv_uar);
  
#line 241 
  if (tmp_1 != 0) 
#line 242 
                  goto err_pd; else ;
  
#line 244 
  mdev->uar_map = ioremap((unsigned long long)mdev->priv_uar.pfn << 12,4096UL);
  
#line 246 
  if (mdev->uar_map == (void *)0) 
#line 247 
                                  goto err_uar; else ;
  
#line 248 
  spinlock_check(& mdev->uar_lock);
  {
    struct lock_class_key __key;
    
#line 248 
    __raw_spin_lock_init(& mdev->uar_lock.__anonCompField_spinlock_18.rlock,"&(&mdev->uar_lock)->rlock",& __key);
  }
  
#line 250 
  mdev->dev = dev;
  
#line 251 
  mdev->dma_device = & ((dev->persist)->pdev)->dev;
  
#line 252 
  mdev->pdev = (dev->persist)->pdev;
  
#line 253 
  mdev->device_up = (_Bool)0;
  
#line 255 
  mdev->LSO_support = (unsigned int)((dev->caps.flags & 32768ULL) != 0ULL);
  
#line 256 
  if (mdev->LSO_support == 0U) {
    char const *tmp_2;
    
#line 257 
    tmp_2 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 257 
    printk("\001",tmp_2);
  }
  else ;
  
#line 259 
  tmp_4 = mlx4_mr_alloc(mdev->dev,mdev->priv_pdn,0ULL,18446744073709551615ULL,3072U,0,0,& mdev->mr);
  
#line 259 
  if (tmp_4 != 0) {
    char const *tmp_3;
    
#line 262 
    tmp_3 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 262 
    printk("\001",tmp_3);
    
#line 263 
    goto err_map;
  }
  else ;
  
#line 265 
  tmp_6 = mlx4_mr_enable(mdev->dev,& mdev->mr);
  
#line 265 
  if (tmp_6 != 0) {
    char const *tmp_5;
    
#line 266 
    tmp_5 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 266 
    printk("\001",tmp_5);
    
#line 267 
    goto err_mr;
  }
  else ;
  
#line 271 
  tmp_8 = mlx4_en_get_profile(mdev);
  
#line 271 
  if (tmp_8 != 0) {
    char const *tmp_7;
    
#line 272 
    tmp_7 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 272 
    printk("\001",tmp_7);
    
#line 273 
    goto err_mr;
  }
  else ;
  
#line 277 
  mdev->port_cnt = 0U;
  
#line 278 
  i = 1;
  
#line 278 
  goto ldv_50904;
  ldv_50903: 
#line 279 
  ;
  
#line 278 
  if (dev->caps.port_mask[i] == 2U) 
#line 279 
                                    mdev->port_cnt += 1U; else ;
  
#line 278 
  i += 1;
  ldv_50904: 
#line 279 
  ;
  
#line 278 
  if (dev->caps.num_ports >= i) 
#line 280 
                                goto ldv_50903; else 
#line 283 
                                                     goto ldv_50905;
  ldv_50905: 
#line 284 
  ;
  
#line 282 
  if (((mdev->dev)->caps.flags2 & 32ULL) != 0ULL) 
#line 283 
                                                  mlx4_en_init_timestamp(mdev); else ;
  
#line 286 
  mlx4_en_set_num_rx_rings(mdev);
  {
    struct lock_class_key __key_0;
    char const *__lock_name;
    
#line 291 
    __lock_name = "\"%s\"";
    
#line 291 
    tmp_10 = __alloc_workqueue_key("%s",131082U,1,& __key_0,__lock_name,(char *)"mlx4_en");
  }
  
#line 291 
  mdev->workqueue = tmp_10;
  
#line 292 
  if (mdev->workqueue == (struct workqueue_struct *)0) 
#line 293 
                                                       goto err_mr; else ;
  {
    struct lock_class_key __key_1;
    
#line 297 
    __mutex_init(& mdev->state_lock,"&mdev->state_lock",& __key_1);
  }
  
#line 298 
  mdev->device_up = (_Bool)1;
  
#line 303 
  i = 1;
  
#line 303 
  goto ldv_50911;
  ldv_50910: 
#line 304 
  ;
  
#line 303 
  if (dev->caps.port_mask[i] == 2U) {
    char const *tmp_11;
    int tmp_12;
    
#line 304 
    ;
    
#line 304 
    tmp_11 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 304 
    printk("\001",tmp_11,i);
    
#line 305 
    tmp_12 = mlx4_en_init_netdev(mdev,i,& mdev->profile.prof[i]);
    
#line 305 
    if (tmp_12 != 0) 
#line 306 
                     mdev->pndev[i] = (struct net_device *)0; else ;
  }
  else ;
  
#line 303 
  i += 1;
  ldv_50911: 
#line 304 
  ;
  
#line 303 
  if (dev->caps.num_ports >= i) 
#line 305 
                                goto ldv_50910; else 
#line 308 
                                                     goto ldv_50912;
  ldv_50912: 
#line 309 
  ;
  
#line 309 
  mdev->nb.notifier_call = & mlx4_en_netdev_event;
  
#line 310 
  tmp_14 = register_netdevice_notifier(& mdev->nb);
  
#line 310 
  if (tmp_14 != 0) {
    char const *tmp_13;
    
#line 311 
    mdev->nb.notifier_call = (int (*)(struct notifier_block *, unsigned long , void *))0;
    
#line 312 
    tmp_13 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 312 
    printk("\001",tmp_13);
  }
  else ;
  
#line 315 
  __retres = (void *)mdev;
  
#line 315 
  goto return_label;
  err_mr: 
#line 317 
  ;
  
#line 318 
  mlx4_mr_free(dev,& mdev->mr);
  err_map: 
#line 319 
  ;
  
#line 320 
  if (mdev->uar_map != (void *)0) 
#line 321 
                                  iounmap((void volatile *)mdev->uar_map); else ;
  err_uar: 
#line 322 
  ;
  
#line 323 
  mlx4_uar_free(dev,& mdev->priv_uar);
  err_pd: 
#line 324 
  ;
  
#line 325 
  mlx4_pd_free(dev,mdev->priv_pdn);
  err_free_dev: 
#line 326 
  ;
  
#line 327 
  kfree((void const *)mdev);
  err_free_res: 
#line 328 
  ;
  
#line 329 
  __retres = (void *)0;
  return_label: 
#line 329 
                return __retres;
}


#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static struct mlx4_interface mlx4_en_interface = {.add = & mlx4_en_add, .remove = & mlx4_en_remove, .event = & mlx4_en_event, .get_dev = & mlx4_en_get_netdev, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .protocol = MLX4_PROT_ETH, .flags = 0};

#line 340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static void mlx4_en_verify_params(void)
{
  
#line 342 
  if (pfctx > 255U) {
    
#line 343 
    printk("\001",pfctx,255);
    
#line 345 
    pfctx = 0U;
  }
  else ;
  
#line 348 
  if (pfcrx > 255U) {
    
#line 349 
    printk("\001",pfcrx,255);
    
#line 351 
    pfcrx = 0U;
  }
  else ;
  
#line 354 
  if (inline_thold + 4294967279U > 87U) {
    
#line 355 
    printk("\001",inline_thold,17,104,104);
    
#line 357 
    inline_thold = 104U;
  }
  else ;
  
#line 359 
  return;
}


#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static int mlx4_en_init(void)
{
  int tmp;
  
#line 363 
  mlx4_en_verify_params();
  
#line 365 
  tmp = mlx4_register_interface(& mlx4_en_interface);
  
#line 365 
  return tmp;
}


#line 368  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_main.c"
static void mlx4_en_cleanup(void)
{
  
#line 370 
  mlx4_unregister_interface(& mlx4_en_interface);
  
#line 371 
  return;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_main.c.aux"
void ldv_emg_mlx4_en_cleanup(void)
{
  
#line 66 
  mlx4_en_cleanup();
  
#line 67 
  return;
}


#line 69  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_main.c.aux"
int ldv_emg_mlx4_en_init(void)
{
  int tmp;
  
#line 70 
  tmp = mlx4_en_init();
  
#line 70 
  return tmp;
}


#line 620  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_main.c.aux"
static void *kzalloc_1(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 623 
  tmp = ldv_kzalloc(size,flags);
  
#line 623 
  return tmp;
}


#line 840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_main.c.aux"
static bool ldv_queue_work_82(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 844 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 844 
  __retres = tmp != 0;
  
#line 844 
  return __retres;
}


#line 848  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_main.c.aux"
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1)
{
  
#line 852 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 853 
  return;
}


#line 856  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_main.c.aux"
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1)
{
  
#line 860 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"state_lock_of_mlx4_en_dev");
  
#line 861 
  return;
}


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/math64.h"
__inline static u64 div_u64_rem(u64 dividend, u32 divisor, u32 *remainder)
{
  u64 __retres;
  
#line 20 
  *remainder = (unsigned int)(dividend % (unsigned long long)divisor);
  
#line 21 
  __retres = dividend / (unsigned long long)divisor;
  
#line 21 
  return __retres;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/math64.h"
__inline static u64 div_u64(u64 dividend, u32 divisor)
{
  u32 remainder;
  u64 tmp;
  
#line 100 
  tmp = div_u64_rem(dividend,divisor,& remainder);
  
#line 100 
  return tmp;
}


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static bool IS_ERR_0(void const *ptr);


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/fw_qos.h"
int mlx4_SET_PORT_PRIO2TC(struct mlx4_dev *, u8, u8 *);


#line 84 
int mlx4_SET_PORT_SCHEDULER(struct mlx4_dev *, u8, u8 *, u8 *, u16 *);


#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_dcbnl_ieee_getets(struct net_device *dev, struct ieee_ets *ets)
{
  int __retres;
  
#line 86 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 87 
  struct ieee_ets *my_ets = & priv->ets;
  
#line 90 
  if (my_ets == (struct ieee_ets *)0) {
    
#line 91 
    __retres = -22;
    
#line 91 
    goto return_label;
  }
  else ;
  
#line 93 
  ets->ets_cap = (unsigned char)8U;
  
#line 94 
  ets->cbs = my_ets->cbs;
  
#line 95 
  memcpy((void *)(& ets->tc_tx_bw),(void const *)(& my_ets->tc_tx_bw),8UL);
  
#line 96 
  memcpy((void *)(& ets->tc_tsa),(void const *)(& my_ets->tc_tsa),8UL);
  
#line 97 
  memcpy((void *)(& ets->prio_tc),(void const *)(& my_ets->prio_tc),8UL);
  
#line 99 
  __retres = 0;
  return_label: 
#line 99 
                return __retres;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_ets_validate(struct mlx4_en_priv *priv, struct ieee_ets *ets)
{
  int __retres;
  int i;
  
#line 105 
  int total_ets_bw = 0;
  
#line 106 
  int has_ets_tc = 0;
  
#line 108 
  i = 0;
  
#line 108 
  goto ldv_50742;
  ldv_50741: 
#line 109 
  ;
  
#line 109 
  if ((unsigned int)ets->prio_tc[i] > 7U) {
    
#line 110 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Bad priority in UP <=> TC mapping. TC: %d, UP: %d\n",i,(int)ets->prio_tc[i]);
    
#line 112 
    __retres = -22;
    
#line 112 
    goto return_label;
  }
  else ;
  
#line 115 
  switch ((int)ets->tc_tsa[i]) {
    case 0: 
#line 116 
    ;
    
#line 117 
    goto ldv_50738;
    case 2: 
#line 118 
    ;
    
#line 119 
    has_ets_tc = 1;
    
#line 120 
    total_ets_bw = (int)ets->tc_tx_bw[i] + total_ets_bw;
    
#line 121 
    goto ldv_50738;
    default: 
#line 122 
    ;
    
#line 123 
    en_print("\001",(struct mlx4_en_priv const *)priv,"TC[%d]: Not supported TSA: %d\n",i,(int)ets->tc_tsa[i]);
    
#line 125 
    __retres = -524;
    
#line 125 
    goto return_label;
  }
  ldv_50738: 
#line 127 
  ;
  
#line 108 
  i += 1;
  ldv_50742: 
#line 109 
  ;
  
#line 108 
  if (i <= 7) 
#line 110 
              goto ldv_50741; else 
#line 113 
                                   goto ldv_50743;
  ldv_50743: 
#line 114 
  ;
  
#line 129 
  if (has_ets_tc != 0 && total_ets_bw != 100) {
    
#line 130 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Bad ETS BW sum: %d. Should be exactly 100%%\n",total_ets_bw);
    
#line 132 
    __retres = -22;
    
#line 132 
    goto return_label;
  }
  else ;
  
#line 135 
  __retres = 0;
  return_label: 
#line 135 
                return __retres;
}


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_config_port_scheduler(struct mlx4_en_priv *priv, struct ieee_ets *ets, u16 *ratelimit)
{
  int i;
  struct ieee_ets *tmp;
  u16 *tmp_0;
  int tmp_2;
  
#line 141 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 142 
  int num_strict = 0;
  
#line 144 
  __u8 tc_tx_bw[8U] = {(unsigned char)0U};
  
#line 145 
  __u8 pg[8U] = {(unsigned char)0U};
  
#line 147 
  tmp = (struct ieee_ets *)(ets != (struct ieee_ets *)0);
  
#line 147 
  if (tmp) ; else 
#line 147 
                  tmp = & priv->ets;
  
#line 147 
  ets = tmp;
  
#line 148 
  tmp_0 = (u16 *)(ratelimit != (u16 *)0U);
  
#line 148 
  if (tmp_0) ; else 
#line 148 
                    tmp_0 = (u16 *)(& priv->maxrate);
  
#line 148 
  ratelimit = tmp_0;
  
#line 151 
  i = 7;
  
#line 151 
  goto ldv_50758;
  ldv_50757: 
#line 152 
  ;
  
#line 152 
  switch ((int)ets->tc_tsa[i]) {
    int tmp_1;
    case 0: 
#line 153 
    ;
    
#line 154 
    tmp_1 = num_strict;
    
#line 154 
    num_strict += 1;
    
#line 154 
    pg[i] = (unsigned char)tmp_1;
    
#line 155 
    tc_tx_bw[i] = (unsigned char)100U;
    
#line 156 
    goto ldv_50755;
    case 2: 
#line 157 
    ;
    
#line 158 
    pg[i] = (unsigned char)7U;
    
#line 159 
    if ((int)ets->tc_tx_bw[i] != 0) 
#line 159 
                                    tc_tx_bw[i] = (unsigned char)((int)ets->tc_tx_bw[i]); else 
                                                                    
#line 159 
                                                                    tc_tx_bw[i] = (unsigned char)1U;
    
#line 160 
    goto ldv_50755;
  }
  ldv_50755: 
#line 162 
  ;
  
#line 151 
  i -= 1;
  ldv_50758: 
#line 152 
  ;
  
#line 151 
  if (i >= 0) 
#line 153 
              goto ldv_50757; else 
#line 156 
                                   goto ldv_50759;
  ldv_50759: 
#line 157 
  ;
  
#line 164 
  tmp_2 = mlx4_SET_PORT_SCHEDULER(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(u8 *)(& tc_tx_bw),(u8 *)(& pg),ratelimit);
  
#line 164 
  return tmp_2;
}


#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_dcbnl_ieee_setets(struct net_device *dev, struct ieee_ets *ets)
{
  int __retres;
  int err;
  
#line 171 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 172 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 175 
  err = mlx4_en_ets_validate(priv,ets);
  
#line 176 
  if (err != 0) {
    
#line 177 
    __retres = err;
    
#line 177 
    goto return_label;
  }
  else ;
  
#line 179 
  err = mlx4_SET_PORT_PRIO2TC(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(u8 *)(& ets->prio_tc));
  
#line 180 
  if (err != 0) {
    
#line 181 
    __retres = err;
    
#line 181 
    goto return_label;
  }
  else ;
  
#line 183 
  err = mlx4_en_config_port_scheduler(priv,ets,(u16 *)0U);
  
#line 184 
  if (err != 0) {
    
#line 185 
    __retres = err;
    
#line 185 
    goto return_label;
  }
  else ;
  
#line 187 
  memcpy((void *)(& priv->ets),(void const *)ets,59UL);
  
#line 189 
  __retres = 0;
  return_label: 
#line 189 
                return __retres;
}


#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_dcbnl_ieee_getpfc(struct net_device *dev, struct ieee_pfc *pfc)
{
  int __retres;
  
#line 195 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 197 
  pfc->pfc_cap = (unsigned char)8U;
  
#line 198 
  pfc->pfc_en = (priv->prof)->tx_ppp;
  
#line 200 
  __retres = 0;
  
#line 200 
  return __retres;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_dcbnl_ieee_setpfc(struct net_device *dev, struct ieee_pfc *pfc)
{
  int err;
  
#line 206 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 207 
  struct mlx4_en_port_profile *prof = priv->prof;
  
#line 208 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 211 
  if ((priv->msg_enable & 1U) != 0U) 
#line 211 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"cap: 0x%x en: 0x%x mbc: 0x%x delay: %d\n",(int)pfc->pfc_cap,(int)pfc->pfc_en,(int)pfc->mbc,(int)pfc->delay); else ;
  
#line 217 
  prof->rx_pause = (unsigned char)((unsigned int)pfc->pfc_en == 0U);
  
#line 218 
  prof->tx_pause = (unsigned char)((unsigned int)pfc->pfc_en == 0U);
  
#line 219 
  prof->rx_ppp = pfc->pfc_en;
  
#line 220 
  prof->tx_ppp = pfc->pfc_en;
  
#line 222 
  err = mlx4_SET_PORT_general(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),(int)(priv->rx_skb_size + 4U),(unsigned char)((int)prof->tx_pause),(unsigned char)((int)prof->tx_ppp),(unsigned char)((int)prof->rx_pause),(unsigned char)((int)prof->rx_ppp));
  
#line 228 
  if (err != 0) 
#line 229 
                en_print("\001",(struct mlx4_en_priv const *)priv,"Failed setting pause params\n"); else 
                                                                    
#line 231 
                                                                    mlx4_en_update_pfc_stats_bitmap(mdev->dev,& priv->stats_bitmap,(unsigned char)((int)prof->rx_ppp),(unsigned char)((int)prof->rx_pause),(unsigned char)((int)prof->tx_ppp),(unsigned char)((int)prof->tx_pause));
  
#line 235 
  return err;
}


#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static u8 mlx4_en_dcbnl_getdcbx(struct net_device *dev)
{
  u8 __retres;
  
#line 240 
  __retres = (unsigned char)9U;
  
#line 240 
  return __retres;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static u8 mlx4_en_dcbnl_setdcbx(struct net_device *dev, u8 mode)
{
  u8 __retres;
  
#line 245 
  if (((((int)mode & 2) != 0 || ((int)mode & 4) != 0) || ((int)mode & 8) == 0) || ((int)mode & 1) == 0) {
    
#line 249 
    __retres = (unsigned char)1U;
    
#line 249 
    goto return_label;
  }
  else ;
  
#line 251 
  __retres = (unsigned char)0U;
  return_label: 
#line 251 
                return __retres;
}


#line 255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_dcbnl_ieee_getmaxrate(struct net_device *dev, struct ieee_maxrate *maxrate)
{
  int __retres;
  int i;
  
#line 258 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 261 
  i = 0;
  
#line 261 
  goto ldv_50794;
  ldv_50793: 
#line 262 
  ;
  
#line 262 
  maxrate->tc_maxrate[i] = (unsigned long long)((int)priv->maxrate[i] * 100000);
  
#line 261 
  i += 1;
  ldv_50794: 
#line 262 
  ;
  
#line 261 
  if (i <= 7) 
#line 263 
              goto ldv_50793; else 
#line 266 
                                   goto ldv_50795;
  ldv_50795: 
#line 267 
  ;
  
#line 265 
  __retres = 0;
  
#line 265 
  return __retres;
}


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_dcbnl_ieee_setmaxrate(struct net_device *dev, struct ieee_maxrate *maxrate)
{
  int __retres;
  u16 tmp_0[8U];
  int i;
  int err;
  u64 tmp_1;
  
#line 271 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 275 
  i = 0;
  
#line 275 
  goto ldv_50805;
  ldv_50804: 
#line 276 
  ;
  
#line 279 
  tmp_1 = div_u64(maxrate->tc_maxrate[i] + 99999ULL,100000U);
  
#line 279 
  tmp_0[i] = (unsigned short)tmp_1;
  
#line 275 
  i += 1;
  ldv_50805: 
#line 276 
  ;
  
#line 275 
  if (i <= 7) 
#line 277 
              goto ldv_50804; else 
#line 280 
                                   goto ldv_50806;
  ldv_50806: 
#line 281 
  ;
  
#line 284 
  err = mlx4_en_config_port_scheduler(priv,(struct ieee_ets *)0,(u16 *)(& tmp_0));
  
#line 285 
  if (err != 0) {
    
#line 286 
    __retres = err;
    
#line 286 
    goto return_label;
  }
  else ;
  
#line 288 
  memcpy((void *)(& priv->maxrate),(void const *)(& tmp_0),16UL);
  
#line 290 
  __retres = 0;
  return_label: 
#line 290 
                return __retres;
}


#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_dcbnl_ieee_getqcn(struct net_device *dev, struct ieee_qcn *qcn)
{
  int __retres;
  struct mlx4_congestion_control_mb_prio_802_1_qau_params *hw_qcn;
  int i;
  int err;
  bool tmp_0;
  
#line 299 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 301 
  struct mlx4_cmd_mailbox *mailbox_out = (struct mlx4_cmd_mailbox *)0;
  
#line 302 
  u64 mailbox_in_dma = 0ULL;
  
#line 303 
  u32 inmod = 0U;
  
#line 306 
  if ((((priv->mdev)->dev)->caps.flags2 & 4194304ULL) == 0ULL) {
    
#line 307 
    __retres = -95;
    
#line 307 
    goto return_label;
  }
  else ;
  
#line 309 
  mailbox_out = mlx4_alloc_cmd_mailbox((priv->mdev)->dev);
  
#line 310 
  tmp_0 = IS_ERR_0((void const *)mailbox_out);
  
#line 310 
  if ((int)tmp_0 != 0) {
    
#line 311 
    __retres = -12;
    
#line 311 
    goto return_label;
  }
  else ;
  
#line 312 
  hw_qcn = (struct mlx4_congestion_control_mb_prio_802_1_qau_params *)mailbox_out->buf;
  
#line 316 
  i = 0;
  
#line 316 
  goto ldv_50819;
  ldv_50818: 
#line 317 
  ;
  
#line 317 
  inmod = (unsigned int)(priv->port | ((1 << i) << 8));
  
#line 319 
  err = mlx4_cmd_box((priv->mdev)->dev,mailbox_in_dma,mailbox_out->dma,inmod,(unsigned char)0,(unsigned short)104,60000UL,1);
  
#line 325 
  if (err != 0) {
    
#line 326 
    mlx4_free_cmd_mailbox((priv->mdev)->dev,mailbox_out);
    
#line 327 
    __retres = err;
    
#line 327 
    goto return_label;
  }
  else ;
  
#line 330 
  if (0 != 0) 
#line 330 
              qcn->rpg_enable[i] = (unsigned char)(((((hw_qcn->extended_enable << 24) | ((hw_qcn->extended_enable << 8) & 16711680U)) | ((hw_qcn->extended_enable >> 8) & 65280U)) | (hw_qcn->extended_enable >> 24)) >> 31);
  else {
    __u32 tmp_1;
    
#line 331 
    tmp_1 = __fswab32(hw_qcn->extended_enable);
    
#line 330 
    qcn->rpg_enable[i] = (unsigned char)(tmp_1 >> 31);
  }
  
#line 332 
  if (0 != 0) 
#line 332 
              qcn->rppp_max_rps[i] = (((hw_qcn->rppp_max_rps << 24) | ((hw_qcn->rppp_max_rps << 8) & 16711680U)) | ((hw_qcn->rppp_max_rps >> 8) & 65280U)) | (hw_qcn->rppp_max_rps >> 24); else 
                                                                    
#line 333 
                                                                    qcn->rppp_max_rps[i] = __fswab32(hw_qcn->rppp_max_rps);
  
#line 334 
  if (0 != 0) 
#line 334 
              qcn->rpg_time_reset[i] = (((hw_qcn->rpg_time_reset << 24) | ((hw_qcn->rpg_time_reset << 8) & 16711680U)) | ((hw_qcn->rpg_time_reset >> 8) & 65280U)) | (hw_qcn->rpg_time_reset >> 24); else 
                                                                    
#line 335 
                                                                    qcn->rpg_time_reset[i] = __fswab32(hw_qcn->rpg_time_reset);
  
#line 336 
  if (0 != 0) 
#line 336 
              qcn->rpg_byte_reset[i] = (((hw_qcn->rpg_byte_reset << 24) | ((hw_qcn->rpg_byte_reset << 8) & 16711680U)) | ((hw_qcn->rpg_byte_reset >> 8) & 65280U)) | (hw_qcn->rpg_byte_reset >> 24); else 
                                                                    
#line 337 
                                                                    qcn->rpg_byte_reset[i] = __fswab32(hw_qcn->rpg_byte_reset);
  
#line 338 
  if (0 != 0) 
#line 338 
              qcn->rpg_threshold[i] = (((hw_qcn->rpg_threshold << 24) | ((hw_qcn->rpg_threshold << 8) & 16711680U)) | ((hw_qcn->rpg_threshold >> 8) & 65280U)) | (hw_qcn->rpg_threshold >> 24); else 
                                                                    
#line 339 
                                                                    qcn->rpg_threshold[i] = __fswab32(hw_qcn->rpg_threshold);
  
#line 340 
  if (0 != 0) 
#line 340 
              qcn->rpg_max_rate[i] = (((hw_qcn->rpg_max_rate << 24) | ((hw_qcn->rpg_max_rate << 8) & 16711680U)) | ((hw_qcn->rpg_max_rate >> 8) & 65280U)) | (hw_qcn->rpg_max_rate >> 24); else 
                                                                    
#line 341 
                                                                    qcn->rpg_max_rate[i] = __fswab32(hw_qcn->rpg_max_rate);
  
#line 342 
  if (0 != 0) 
#line 342 
              qcn->rpg_ai_rate[i] = (((hw_qcn->rpg_ai_rate << 24) | ((hw_qcn->rpg_ai_rate << 8) & 16711680U)) | ((hw_qcn->rpg_ai_rate >> 8) & 65280U)) | (hw_qcn->rpg_ai_rate >> 24); else 
                                                                    
#line 343 
                                                                    qcn->rpg_ai_rate[i] = __fswab32(hw_qcn->rpg_ai_rate);
  
#line 344 
  if (0 != 0) 
#line 344 
              qcn->rpg_hai_rate[i] = (((hw_qcn->rpg_hai_rate << 24) | ((hw_qcn->rpg_hai_rate << 8) & 16711680U)) | ((hw_qcn->rpg_hai_rate >> 8) & 65280U)) | (hw_qcn->rpg_hai_rate >> 24); else 
                                                                    
#line 345 
                                                                    qcn->rpg_hai_rate[i] = __fswab32(hw_qcn->rpg_hai_rate);
  
#line 346 
  if (0 != 0) 
#line 346 
              qcn->rpg_gd[i] = (((hw_qcn->rpg_gd << 24) | ((hw_qcn->rpg_gd << 8) & 16711680U)) | ((hw_qcn->rpg_gd >> 8) & 65280U)) | (hw_qcn->rpg_gd >> 24); else 
                                                                    
#line 347 
                                                                    qcn->rpg_gd[i] = __fswab32(hw_qcn->rpg_gd);
  
#line 348 
  if (0 != 0) 
#line 348 
              qcn->rpg_min_dec_fac[i] = (((hw_qcn->rpg_min_dec_fac << 24) | ((hw_qcn->rpg_min_dec_fac << 8) & 16711680U)) | ((hw_qcn->rpg_min_dec_fac >> 8) & 65280U)) | (hw_qcn->rpg_min_dec_fac >> 24); else 
                                                                    
#line 349 
                                                                    qcn->rpg_min_dec_fac[i] = __fswab32(hw_qcn->rpg_min_dec_fac);
  
#line 350 
  if (0 != 0) 
#line 350 
              qcn->rpg_min_rate[i] = (((hw_qcn->rpg_min_rate << 24) | ((hw_qcn->rpg_min_rate << 8) & 16711680U)) | ((hw_qcn->rpg_min_rate >> 8) & 65280U)) | (hw_qcn->rpg_min_rate >> 24); else 
                                                                    
#line 351 
                                                                    qcn->rpg_min_rate[i] = __fswab32(hw_qcn->rpg_min_rate);
  
#line 352 
  qcn->cndd_state_machine[i] = (unsigned int)priv->cndd_state[i];
  
#line 316 
  i += 1;
  ldv_50819: 
#line 317 
  ;
  
#line 316 
  if (i <= 7) 
#line 318 
              goto ldv_50818; else 
#line 321 
                                   goto ldv_50820;
  ldv_50820: 
#line 322 
  ;
  
#line 355 
  mlx4_free_cmd_mailbox((priv->mdev)->dev,mailbox_out);
  
#line 356 
  __retres = 0;
  return_label: 
#line 356 
                return __retres;
}


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_dcbnl_ieee_setqcn(struct net_device *dev, struct ieee_qcn *qcn)
{
  int __retres;
  struct mlx4_congestion_control_mb_prio_802_1_qau_params *hw_qcn;
  int i;
  int err;
  bool tmp_0;
  
#line 362 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 364 
  struct mlx4_cmd_mailbox *mailbox_in = (struct mlx4_cmd_mailbox *)0;
  
#line 365 
  u64 mailbox_in_dma = 0ULL;
  
#line 366 
  u32 inmod = 0U;
  
#line 371 
  if ((((priv->mdev)->dev)->caps.flags2 & 4194304ULL) == 0ULL) {
    
#line 372 
    __retres = -95;
    
#line 372 
    goto return_label;
  }
  else ;
  
#line 374 
  mailbox_in = mlx4_alloc_cmd_mailbox((priv->mdev)->dev);
  
#line 375 
  tmp_0 = IS_ERR_0((void const *)mailbox_in);
  
#line 375 
  if ((int)tmp_0 != 0) {
    
#line 376 
    __retres = -12;
    
#line 376 
    goto return_label;
  }
  else ;
  
#line 378 
  mailbox_in_dma = mailbox_in->dma;
  
#line 379 
  hw_qcn = (struct mlx4_congestion_control_mb_prio_802_1_qau_params *)mailbox_in->buf;
  
#line 381 
  i = 0;
  
#line 381 
  goto ldv_50833;
  ldv_50832: 
#line 382 
  ;
  
#line 382 
  inmod = (unsigned int)(priv->port | ((1 << i) << 8));
  
#line 389 
  hw_qcn->modify_enable_high = 192U;
  
#line 391 
  hw_qcn->modify_enable_low = 49407U;
  
#line 393 
  if (0 != 0) 
#line 393 
              hw_qcn->extended_enable = (unsigned int)((int)qcn->rpg_enable[i] << 31) >> 24; else 
                                                                    
#line 393 
                                                                    hw_qcn->extended_enable = __fswab32((unsigned int)((int)qcn->rpg_enable[i] << 31));
  
#line 394 
  if (0 != 0) 
#line 394 
              hw_qcn->rppp_max_rps = (((qcn->rppp_max_rps[i] << 24) | ((qcn->rppp_max_rps[i] << 8) & 16711680U)) | ((qcn->rppp_max_rps[i] >> 8) & 65280U)) | (qcn->rppp_max_rps[i] >> 24); else 
                                                                    
#line 394 
                                                                    hw_qcn->rppp_max_rps = __fswab32(qcn->rppp_max_rps[i]);
  
#line 395 
  if (0 != 0) 
#line 395 
              hw_qcn->rpg_time_reset = (((qcn->rpg_time_reset[i] << 24) | ((qcn->rpg_time_reset[i] << 8) & 16711680U)) | ((qcn->rpg_time_reset[i] >> 8) & 65280U)) | (qcn->rpg_time_reset[i] >> 24); else 
                                                                    
#line 395 
                                                                    hw_qcn->rpg_time_reset = __fswab32(qcn->rpg_time_reset[i]);
  
#line 396 
  if (0 != 0) 
#line 396 
              hw_qcn->rpg_byte_reset = (((qcn->rpg_byte_reset[i] << 24) | ((qcn->rpg_byte_reset[i] << 8) & 16711680U)) | ((qcn->rpg_byte_reset[i] >> 8) & 65280U)) | (qcn->rpg_byte_reset[i] >> 24); else 
                                                                    
#line 396 
                                                                    hw_qcn->rpg_byte_reset = __fswab32(qcn->rpg_byte_reset[i]);
  
#line 397 
  if (0 != 0) 
#line 397 
              hw_qcn->rpg_threshold = (((qcn->rpg_threshold[i] << 24) | ((qcn->rpg_threshold[i] << 8) & 16711680U)) | ((qcn->rpg_threshold[i] >> 8) & 65280U)) | (qcn->rpg_threshold[i] >> 24); else 
                                                                    
#line 397 
                                                                    hw_qcn->rpg_threshold = __fswab32(qcn->rpg_threshold[i]);
  
#line 398 
  if (0 != 0) 
#line 398 
              hw_qcn->rpg_max_rate = (((qcn->rpg_max_rate[i] << 24) | ((qcn->rpg_max_rate[i] << 8) & 16711680U)) | ((qcn->rpg_max_rate[i] >> 8) & 65280U)) | (qcn->rpg_max_rate[i] >> 24); else 
                                                                    
#line 398 
                                                                    hw_qcn->rpg_max_rate = __fswab32(qcn->rpg_max_rate[i]);
  
#line 399 
  if (0 != 0) 
#line 399 
              hw_qcn->rpg_ai_rate = (((qcn->rpg_ai_rate[i] << 24) | ((qcn->rpg_ai_rate[i] << 8) & 16711680U)) | ((qcn->rpg_ai_rate[i] >> 8) & 65280U)) | (qcn->rpg_ai_rate[i] >> 24); else 
                                                                    
#line 399 
                                                                    hw_qcn->rpg_ai_rate = __fswab32(qcn->rpg_ai_rate[i]);
  
#line 400 
  if (0 != 0) 
#line 400 
              hw_qcn->rpg_hai_rate = (((qcn->rpg_hai_rate[i] << 24) | ((qcn->rpg_hai_rate[i] << 8) & 16711680U)) | ((qcn->rpg_hai_rate[i] >> 8) & 65280U)) | (qcn->rpg_hai_rate[i] >> 24); else 
                                                                    
#line 400 
                                                                    hw_qcn->rpg_hai_rate = __fswab32(qcn->rpg_hai_rate[i]);
  
#line 401 
  if (0 != 0) 
#line 401 
              hw_qcn->rpg_gd = (((qcn->rpg_gd[i] << 24) | ((qcn->rpg_gd[i] << 8) & 16711680U)) | ((qcn->rpg_gd[i] >> 8) & 65280U)) | (qcn->rpg_gd[i] >> 24); else 
                                                                    
#line 401 
                                                                    hw_qcn->rpg_gd = __fswab32(qcn->rpg_gd[i]);
  
#line 402 
  if (0 != 0) 
#line 402 
              hw_qcn->rpg_min_dec_fac = (((qcn->rpg_min_dec_fac[i] << 24) | ((qcn->rpg_min_dec_fac[i] << 8) & 16711680U)) | ((qcn->rpg_min_dec_fac[i] >> 8) & 65280U)) | (qcn->rpg_min_dec_fac[i] >> 24); else 
                                                                    
#line 402 
                                                                    hw_qcn->rpg_min_dec_fac = __fswab32(qcn->rpg_min_dec_fac[i]);
  
#line 403 
  if (0 != 0) 
#line 403 
              hw_qcn->rpg_min_rate = (((qcn->rpg_min_rate[i] << 24) | ((qcn->rpg_min_rate[i] << 8) & 16711680U)) | ((qcn->rpg_min_rate[i] >> 8) & 65280U)) | (qcn->rpg_min_rate[i] >> 24); else 
                                                                    
#line 403 
                                                                    hw_qcn->rpg_min_rate = __fswab32(qcn->rpg_min_rate[i]);
  
#line 404 
  priv->cndd_state[i] = (enum dcbnl_cndd_states)qcn->cndd_state_machine[i];
  
#line 405 
  if (qcn->cndd_state_machine[i] == 3U) 
#line 406 
                                        hw_qcn->extended_enable |= 64U; else ;
  
#line 408 
  err = mlx4_cmd((priv->mdev)->dev,mailbox_in_dma,inmod,(unsigned char)4,(unsigned short)104,60000UL,1);
  
#line 413 
  if (err != 0) {
    
#line 414 
    mlx4_free_cmd_mailbox((priv->mdev)->dev,mailbox_in);
    
#line 415 
    __retres = err;
    
#line 415 
    goto return_label;
  }
  else ;
  
#line 381 
  i += 1;
  ldv_50833: 
#line 382 
  ;
  
#line 381 
  if (i <= 7) 
#line 383 
              goto ldv_50832; else 
#line 386 
                                   goto ldv_50834;
  ldv_50834: 
#line 387 
  ;
  
#line 418 
  mlx4_free_cmd_mailbox((priv->mdev)->dev,mailbox_in);
  
#line 419 
  __retres = 0;
  return_label: 
#line 419 
                return __retres;
}


#line 422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
static int mlx4_en_dcbnl_ieee_getqcnstats(struct net_device *dev, struct ieee_qcn_stats *qcn_stats)
{
  int __retres;
  struct mlx4_congestion_control_mb_prio_802_1_qau_statistics *hw_qcn_stats;
  int i;
  int err;
  bool tmp_0;
  
#line 425 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 427 
  struct mlx4_cmd_mailbox *mailbox_out = (struct mlx4_cmd_mailbox *)0;
  
#line 428 
  u64 mailbox_in_dma = 0ULL;
  
#line 429 
  u32 inmod = 0U;
  
#line 432 
  if ((((priv->mdev)->dev)->caps.flags2 & 4194304ULL) == 0ULL) {
    
#line 433 
    __retres = -95;
    
#line 433 
    goto return_label;
  }
  else ;
  
#line 435 
  mailbox_out = mlx4_alloc_cmd_mailbox((priv->mdev)->dev);
  
#line 436 
  tmp_0 = IS_ERR_0((void const *)mailbox_out);
  
#line 436 
  if ((int)tmp_0 != 0) {
    
#line 437 
    __retres = -12;
    
#line 437 
    goto return_label;
  }
  else ;
  
#line 439 
  hw_qcn_stats = (struct mlx4_congestion_control_mb_prio_802_1_qau_statistics *)mailbox_out->buf;
  
#line 443 
  i = 0;
  
#line 443 
  goto ldv_50847;
  ldv_50846: 
#line 444 
  ;
  
#line 444 
  inmod = (unsigned int)(priv->port | ((1 << i) << 8));
  
#line 446 
  err = mlx4_cmd_box((priv->mdev)->dev,mailbox_in_dma,mailbox_out->dma,inmod,(unsigned char)1,(unsigned short)104,60000UL,1);
  
#line 452 
  if (err != 0) {
    
#line 453 
    mlx4_free_cmd_mailbox((priv->mdev)->dev,mailbox_out);
    
#line 454 
    __retres = err;
    
#line 454 
    goto return_label;
  }
  else ;
  
#line 456 
  if (0 != 0) 
#line 456 
              qcn_stats->rppp_rp_centiseconds[i] = (((((((hw_qcn_stats->rppp_rp_centiseconds << 56) | ((hw_qcn_stats->rppp_rp_centiseconds << 40) & 71776119061217280ULL)) | ((hw_qcn_stats->rppp_rp_centiseconds << 24) & 280375465082880ULL)) | ((hw_qcn_stats->rppp_rp_centiseconds << 8) & 1095216660480ULL)) | ((hw_qcn_stats->rppp_rp_centiseconds >> 8) & 4278190080ULL)) | ((hw_qcn_stats->rppp_rp_centiseconds >> 24) & 16711680ULL)) | ((hw_qcn_stats->rppp_rp_centiseconds >> 40) & 65280ULL)) | (hw_qcn_stats->rppp_rp_centiseconds >> 56); else 
                                                                    
#line 457 
                                                                    qcn_stats->rppp_rp_centiseconds[i] = __fswab64(hw_qcn_stats->rppp_rp_centiseconds);
  
#line 458 
  if (0 != 0) 
#line 458 
              qcn_stats->rppp_created_rps[i] = (((hw_qcn_stats->rppp_created_rps << 24) | ((hw_qcn_stats->rppp_created_rps << 8) & 16711680U)) | ((hw_qcn_stats->rppp_created_rps >> 8) & 65280U)) | (hw_qcn_stats->rppp_created_rps >> 24); else 
                                                                    
#line 459 
                                                                    qcn_stats->rppp_created_rps[i] = __fswab32(hw_qcn_stats->rppp_created_rps);
  
#line 443 
  i += 1;
  ldv_50847: 
#line 444 
  ;
  
#line 443 
  if (i <= 7) 
#line 445 
              goto ldv_50846; else 
#line 448 
                                   goto ldv_50848;
  ldv_50848: 
#line 449 
  ;
  
#line 461 
  mlx4_free_cmd_mailbox((priv->mdev)->dev,mailbox_out);
  
#line 462 
  __retres = 0;
  return_label: 
#line 462 
                return __retres;
}


#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
struct dcbnl_rtnl_ops const mlx4_en_dcbnl_ops = {.ieee_getets = & mlx4_en_dcbnl_ieee_getets, .ieee_setets = & mlx4_en_dcbnl_ieee_setets, .ieee_getmaxrate = & mlx4_en_dcbnl_ieee_getmaxrate, .ieee_setmaxrate = & mlx4_en_dcbnl_ieee_setmaxrate, .ieee_getqcn = & mlx4_en_dcbnl_ieee_getqcn, .ieee_setqcn = & mlx4_en_dcbnl_ieee_setqcn, .ieee_getqcnstats = & mlx4_en_dcbnl_ieee_getqcnstats, .ieee_getpfc = & mlx4_en_dcbnl_ieee_getpfc, .ieee_setpfc = & mlx4_en_dcbnl_ieee_setpfc, .ieee_getapp = (int (*)(struct net_device *, struct dcb_app *))0, .ieee_setapp = (int (*)(struct net_device *, struct dcb_app *))0, .ieee_delapp = (int (*)(struct net_device *, struct dcb_app *))0, .ieee_peer_getets = (int (*)(struct net_device *, struct ieee_ets *))0, .ieee_peer_getpfc = (int (*)(struct net_device *, struct ieee_pfc *))0, .getstate = (u8 (*)(struct net_device *))0, .setstate = (u8 (*)(struct net_device *, u8 ))0, .getpermhwaddr = (void (*)(struct net_device *, u8 *))0, .setpgtccfgtx = (void (*)(struct net_device *, int , u8 , u8 , u8 , u8 ))0, .setpgbwgcfgtx = (void (*)(struct net_device *, int , u8 ))0, .setpgtccfgrx = (void (*)(struct net_device *, int , u8 , u8 , u8 , u8 ))0, .setpgbwgcfgrx = (void (*)(struct net_device *, int , u8 ))0, .getpgtccfgtx = (void (*)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *))0, .getpgbwgcfgtx = (void (*)(struct net_device *, int , u8 *))0, .getpgtccfgrx = (void (*)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *))0, .getpgbwgcfgrx = (void (*)(struct net_device *, int , u8 *))0, .setpfccfg = (void (*)(struct net_device *, int , u8 ))0, .getpfccfg = (void (*)(struct net_device *, int , u8 *))0, .setall = (u8 (*)(struct net_device *))0, .getcap = (u8 (*)(struct net_device *, int , u8 *))0, .getnumtcs = (int (*)(struct net_device *, int , u8 *))0, .setnumtcs = (int (*)(struct net_device *, int , u8 ))0, .getpfcstate = (u8 (*)(struct net_device *))0, .setpfcstate = (void (*)(struct net_device *, u8 ))0, .getbcncfg = (void (*)(struct net_device *, int , u32 *))0, .setbcncfg = (void (*)(struct net_device *, int , u32 ))0, .getbcnrp = (void (*)(struct net_device *, int , u8 *))0, .setbcnrp = (void (*)(struct net_device *, int , u8 ))0, .setapp = (int (*)(struct net_device *, u8 , u16 , u8 ))0, .getapp = (int (*)(struct net_device *, u8 , u16 ))0, .getfeatcfg = (u8 (*)(struct net_device *, int , u8 *))0, .setfeatcfg = (u8 (*)(struct net_device *, int , u8 ))0, .getdcbx = & mlx4_en_dcbnl_getdcbx, .setdcbx = & mlx4_en_dcbnl_setdcbx, .peer_getappinfo = (int (*)(struct net_device *, struct dcb_peer_app_info *, u16 *))0, .peer_getapptable = (int (*)(struct net_device *, struct dcb_app *))0, .cee_peer_getpg = (int (*)(struct net_device *, struct cee_pg *))0, .cee_peer_getpfc = (int (*)(struct net_device *, struct cee_pfc *))0};

#line 480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_dcb_nl.c"
struct dcbnl_rtnl_ops const mlx4_en_dcbnl_pfc_ops = {.ieee_getets = (int (*)(struct net_device *, struct ieee_ets *))0, .ieee_setets = (int (*)(struct net_device *, struct ieee_ets *))0, .ieee_getmaxrate = (int (*)(struct net_device *, struct ieee_maxrate *))0, .ieee_setmaxrate = (int (*)(struct net_device *, struct ieee_maxrate *))0, .ieee_getqcn = (int (*)(struct net_device *, struct ieee_qcn *))0, .ieee_setqcn = (int (*)(struct net_device *, struct ieee_qcn *))0, .ieee_getqcnstats = (int (*)(struct net_device *, struct ieee_qcn_stats *))0, .ieee_getpfc = & mlx4_en_dcbnl_ieee_getpfc, .ieee_setpfc = & mlx4_en_dcbnl_ieee_setpfc, .ieee_getapp = (int (*)(struct net_device *, struct dcb_app *))0, .ieee_setapp = (int (*)(struct net_device *, struct dcb_app *))0, .ieee_delapp = (int (*)(struct net_device *, struct dcb_app *))0, .ieee_peer_getets = (int (*)(struct net_device *, struct ieee_ets *))0, .ieee_peer_getpfc = (int (*)(struct net_device *, struct ieee_pfc *))0, .getstate = (u8 (*)(struct net_device *))0, .setstate = (u8 (*)(struct net_device *, u8 ))0, .getpermhwaddr = (void (*)(struct net_device *, u8 *))0, .setpgtccfgtx = (void (*)(struct net_device *, int , u8 , u8 , u8 , u8 ))0, .setpgbwgcfgtx = (void (*)(struct net_device *, int , u8 ))0, .setpgtccfgrx = (void (*)(struct net_device *, int , u8 , u8 , u8 , u8 ))0, .setpgbwgcfgrx = (void (*)(struct net_device *, int , u8 ))0, .getpgtccfgtx = (void (*)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *))0, .getpgbwgcfgtx = (void (*)(struct net_device *, int , u8 *))0, .getpgtccfgrx = (void (*)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *))0, .getpgbwgcfgrx = (void (*)(struct net_device *, int , u8 *))0, .setpfccfg = (void (*)(struct net_device *, int , u8 ))0, .getpfccfg = (void (*)(struct net_device *, int , u8 *))0, .setall = (u8 (*)(struct net_device *))0, .getcap = (u8 (*)(struct net_device *, int , u8 *))0, .getnumtcs = (int (*)(struct net_device *, int , u8 *))0, .setnumtcs = (int (*)(struct net_device *, int , u8 ))0, .getpfcstate = (u8 (*)(struct net_device *))0, .setpfcstate = (void (*)(struct net_device *, u8 ))0, .getbcncfg = (void (*)(struct net_device *, int , u32 *))0, .setbcncfg = (void (*)(struct net_device *, int , u32 ))0, .getbcnrp = (void (*)(struct net_device *, int , u8 *))0, .setbcnrp = (void (*)(struct net_device *, int , u8 ))0, .setapp = (int (*)(struct net_device *, u8 , u16 , u8 ))0, .getapp = (int (*)(struct net_device *, u8 , u16 ))0, .getfeatcfg = (u8 (*)(struct net_device *, int , u8 *))0, .setfeatcfg = (u8 (*)(struct net_device *, int , u8 ))0, .getdcbx = & mlx4_en_dcbnl_getdcbx, .setdcbx = & mlx4_en_dcbnl_setdcbx, .peer_getappinfo = (int (*)(struct net_device *, struct dcb_peer_app_info *, u16 *))0, .peer_getapptable = (int (*)(struct net_device *, struct dcb_app *))0, .cee_peer_getpg = (int (*)(struct net_device *, struct cee_pg *))0, .cee_peer_getpfc = (int (*)(struct net_device *, struct cee_pfc *))0};

#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_dcb_nl.c.aux"
static bool IS_ERR_0(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 82 
  ret = ldv_is_err(ptr);
  
#line 83 
  __retres = (_Bool)(ret != 0L);
  
#line 83 
  return __retres;
}

void __builtin_unreachable(void);


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/byteorder/little_endian.h"
__inline static __u32 __le32_to_cpup(__le32 const *p)
{
  __u32 __retres;
  
#line 57 
  __retres = *p;
  
#line 57 
  return __retres;
}


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/byteorder/little_endian.h"
__inline static __u16 __le16_to_cpup(__le16 const *p)
{
  __u16 __retres;
  
#line 65 
  __retres = *p;
  
#line 65 
  return __retres;
}


#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static bool cpumask_empty(struct cpumask const *srcp)
{
  bool __retres;
  int tmp;
  
#line 458 
  tmp = bitmap_empty((unsigned long const *)(& srcp->bits),(unsigned int)nr_cpu_ids);
  
#line 458 
  __retres = (_Bool)(tmp != 0);
  
#line 458 
  return __retres;
}


#line 697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void prefetchw(void const *x)
{
  
#line 699 
  ldv_inline_asm();
  
#line 700 
  return;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
void iowrite32(u32, void *);


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
extern struct kmem_cache *kmalloc_caches[14U];


#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
__inline static int kmalloc_index(size_t size)
{
  int __retres;
  
#line 248 
  if (size == 0UL) {
    
#line 249 
    __retres = 0;
    
#line 249 
    goto return_label;
  }
  else ;
  
#line 251 
  if (size <= 8UL) {
    
#line 252 
    __retres = 3;
    
#line 252 
    goto return_label;
  }
  else ;
  
#line 254 
  if (size + 18446744073709551551UL <= 31UL) {
    
#line 255 
    __retres = 1;
    
#line 255 
    goto return_label;
  }
  else ;
  
#line 256 
  if (size + 18446744073709551487UL <= 63UL) {
    
#line 257 
    __retres = 2;
    
#line 257 
    goto return_label;
  }
  else ;
  
#line 258 
  if (size <= 8UL) {
    
#line 258 
    __retres = 3;
    
#line 258 
    goto return_label;
  }
  else ;
  
#line 259 
  if (size <= 16UL) {
    
#line 259 
    __retres = 4;
    
#line 259 
    goto return_label;
  }
  else ;
  
#line 260 
  if (size <= 32UL) {
    
#line 260 
    __retres = 5;
    
#line 260 
    goto return_label;
  }
  else ;
  
#line 261 
  if (size <= 64UL) {
    
#line 261 
    __retres = 6;
    
#line 261 
    goto return_label;
  }
  else ;
  
#line 262 
  if (size <= 128UL) {
    
#line 262 
    __retres = 7;
    
#line 262 
    goto return_label;
  }
  else ;
  
#line 263 
  if (size <= 256UL) {
    
#line 263 
    __retres = 8;
    
#line 263 
    goto return_label;
  }
  else ;
  
#line 264 
  if (size <= 512UL) {
    
#line 264 
    __retres = 9;
    
#line 264 
    goto return_label;
  }
  else ;
  
#line 265 
  if (size <= 1024UL) {
    
#line 265 
    __retres = 10;
    
#line 265 
    goto return_label;
  }
  else ;
  
#line 266 
  if (size <= 2048UL) {
    
#line 266 
    __retres = 11;
    
#line 266 
    goto return_label;
  }
  else ;
  
#line 267 
  if (size <= 4096UL) {
    
#line 267 
    __retres = 12;
    
#line 267 
    goto return_label;
  }
  else ;
  
#line 268 
  if (size <= 8192UL) {
    
#line 268 
    __retres = 13;
    
#line 268 
    goto return_label;
  }
  else ;
  
#line 269 
  if (size <= 16384UL) {
    
#line 269 
    __retres = 14;
    
#line 269 
    goto return_label;
  }
  else ;
  
#line 270 
  if (size <= 32768UL) {
    
#line 270 
    __retres = 15;
    
#line 270 
    goto return_label;
  }
  else ;
  
#line 271 
  if (size <= 65536UL) {
    
#line 271 
    __retres = 16;
    
#line 271 
    goto return_label;
  }
  else ;
  
#line 272 
  if (size <= 131072UL) {
    
#line 272 
    __retres = 17;
    
#line 272 
    goto return_label;
  }
  else ;
  
#line 273 
  if (size <= 262144UL) {
    
#line 273 
    __retres = 18;
    
#line 273 
    goto return_label;
  }
  else ;
  
#line 274 
  if (size <= 524288UL) {
    
#line 274 
    __retres = 19;
    
#line 274 
    goto return_label;
  }
  else ;
  
#line 275 
  if (size <= 1048576UL) {
    
#line 275 
    __retres = 20;
    
#line 275 
    goto return_label;
  }
  else ;
  
#line 276 
  if (size <= 2097152UL) {
    
#line 276 
    __retres = 21;
    
#line 276 
    goto return_label;
  }
  else ;
  
#line 277 
  if (size <= 4194304UL) {
    
#line 277 
    __retres = 22;
    
#line 277 
    goto return_label;
  }
  else ;
  
#line 278 
  if (size <= 8388608UL) {
    
#line 278 
    __retres = 23;
    
#line 278 
    goto return_label;
  }
  else ;
  
#line 279 
  if (size <= 16777216UL) {
    
#line 279 
    __retres = 24;
    
#line 279 
    goto return_label;
  }
  else ;
  
#line 280 
  if (size <= 33554432UL) {
    
#line 280 
    __retres = 25;
    
#line 280 
    goto return_label;
  }
  else ;
  
#line 281 
  if (size <= 67108864UL) {
    
#line 281 
    __retres = 26;
    
#line 281 
    goto return_label;
  }
  else ;
  
#line 282 
  ldv_inline_asm();
  
#line 282 
  ;
  
#line 285 
  __retres = -1;
  return_label: 
#line 285 
                return __retres;
}


#line 294 
void *__kmalloc_node(size_t, gfp_t, int);


#line 312 
void *kmem_cache_alloc_node_trace(struct kmem_cache *, gfp_t, int, size_t);


#line 418 
static void *kmalloc_1(size_t size, gfp_t flags);


#line 462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
__inline static void *kmalloc_node(size_t size, gfp_t flags, int node)
{
  void *__retres;
  void *tmp_1;
  
#line 465 
  if ((0 != 0 && size <= 8192UL) && (flags & 1U) == 0U) {
    void *tmp_0;
    
#line 467 
    int i = kmalloc_index(size);
    
#line 469 
    if (i == 0) {
      
#line 470 
      __retres = (void *)16;
      
#line 470 
      goto return_label;
    }
    else ;
    
#line 472 
    tmp_0 = kmem_cache_alloc_node_trace(kmalloc_caches[i],flags,node,size);
    
#line 472 
    __retres = tmp_0;
    
#line 472 
    goto return_label;
  }
  else ;
  
#line 476 
  tmp_1 = __kmalloc_node(size,flags,node);
  
#line 476 
  __retres = tmp_1;
  return_label: 
#line 476 
                return __retres;
}


#line 581 
static void *kzalloc_2(size_t size, gfp_t flags);


#line 596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
__inline static void *kzalloc_node(size_t size, gfp_t flags, int node)
{
  void *tmp;
  
#line 598 
  tmp = kmalloc_node(size,flags | 32768U,node);
  
#line 598 
  return tmp;
}


#line 850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void set_dev_node(struct device *dev, int node)
{
  
#line 852 
  dev->numa_node = node;
  
#line 853 
  return;
}


#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
void kvfree(void const *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1824  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_inner_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1827 
  __retres = skb->head + (int)skb->inner_transport_header;
  
#line 1827 
  return __retres;
}


#line 1842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_inner_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1844 
  __retres = skb->head + (int)skb->inner_network_header;
  
#line 1844 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void *skb_frag_address_safe(skb_frag_t const *frag)
{
  void *__retres;
  void *tmp_0;
  struct page *tmp;
  
#line 2344 
  tmp = skb_frag_page(frag);
  
#line 2344 
  tmp_0 = lowmem_page_address((struct page const *)tmp);
  
#line 2344 
  void *ptr = tmp_0;
  
#line 2345 
  if ((long)(ptr == (void *)0) != 0L) {
    
#line 2346 
    __retres = (void *)0;
    
#line 2346 
    goto return_label;
  }
  else ;
  
#line 2348 
  __retres = ptr + frag->page_offset;
  return_label: 
#line 2348 
                return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data(struct sk_buff const *skb, void *to, unsigned int const len)
{
  
#line 2793 
  memcpy(to,(void const *)skb->data,(unsigned long)len);
  
#line 2794 
  return;
}


#line 2796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data_offset(struct sk_buff const *skb, int const offset, void *to, unsigned int const len)
{
  
#line 2800 
  memcpy(to,(void const *)(skb->data + offset),(unsigned long)len);
  
#line 2801 
  return;
}


#line 2865 
void skb_clone_tx_timestamp(struct sk_buff *);


#line 2911 
void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);


#line 2914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void sw_tx_timestamp(struct sk_buff *skb)
{
  unsigned char *tmp;
  
#line 2916 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2916 
  ;
  
#line 2916 
  if (((int)((struct skb_shared_info *)tmp)->tx_flags & 2) != 0) {
    unsigned char *tmp_0;
    
#line 2917 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2916 
    ;
    
#line 2916 
    if (((int)((struct skb_shared_info *)tmp_0)->tx_flags & 4) == 0) 
      
#line 2918 
      skb_tstamp_tx(skb,(struct skb_shared_hwtstamps *)0); else ;
  }
  else ;
  
#line 2919 
  return;
}


#line 2933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_tx_timestamp(struct sk_buff *skb)
{
  
#line 2935 
  skb_clone_tx_timestamp(skb);
  
#line 2936 
  sw_tx_timestamp(skb);
  
#line 2937 
  return;
}


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/io.h"
void __iowrite64_copy(void *, void const *, size_t);


#line 1046  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
int mlx4_bf_alloc(struct mlx4_dev *, struct mlx4_bf *, int);


#line 1047 
void mlx4_bf_free(struct mlx4_dev *, struct mlx4_bf *);


#line 1084 
int mlx4_qp_alloc(struct mlx4_dev *, int, struct mlx4_qp *, gfp_t);


#line 1086 
void mlx4_qp_free(struct mlx4_dev *, struct mlx4_qp *);


#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cq.h"
__inline static void mlx4_cq_set_ci(struct mlx4_cq *cq)
{
  
#line 165 
  if (0 != 0) 
#line 165 
              *(cq->set_ci_db) = ((cq->cons_index << 24) | ((cq->cons_index << 8) & 16711680U)) | ((cq->cons_index >> 8) & 65280U); else 
                                                                    
#line 165 
                                                                    *(cq->set_ci_db) = __fswab32(cq->cons_index & 16777215U);
  
#line 166 
  return;
}


#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/qp.h"
int mlx4_qp_modify(struct mlx4_dev *, struct mlx4_mtt *, enum mlx4_qp_state, enum mlx4_qp_state, struct mlx4_qp_context *, enum mlx4_qp_optpar, int, struct mlx4_qp *);


#line 464 
int mlx4_qp_to_ready(struct mlx4_dev *, struct mlx4_mtt *, struct mlx4_qp_context *, struct mlx4_qp *, enum mlx4_qp_state *);


#line 473 
void mlx4_qp_remove(struct mlx4_dev *, struct mlx4_qp *);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static void dql_queued(struct dql *dql, unsigned int count)
{
  
#line 74 
  if ((long)(count > 268435455U) != 0L) {
    
#line 76 
    ldv_inline_asm();
    
#line 74 
    ;
  }
  else ;
  
#line 76 
  dql->last_obj_cnt = count;
  
#line 77 
  ldv_inline_asm();
  
#line 85 
  dql->num_queued += count;
  
#line 86 
  return;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static int dql_avail(struct dql const *dql)
{
  int __retres;
  unsigned int const volatile *tmp;
  unsigned int const volatile *tmp_0;
  {
    
#line 91 
    unsigned int const __var = 0U;
    
#line 91 
    tmp = (unsigned int const volatile *)(& dql->adj_limit);
  }
  {
    
#line 91 
    unsigned int const __var_0 = 0U;
    
#line 91 
    tmp_0 = (unsigned int const volatile *)(& dql->num_queued);
  }
  
#line 91 
  ;
  
#line 91 
  __retres = (int)(*tmp - *tmp_0);
  
#line 91 
  return __retres;
}


#line 95 
void dql_completed(struct dql *, unsigned int);


#line 98 
void dql_reset(struct dql *);


#line 392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule_irqoff(struct napi_struct *);


#line 433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule_irqoff(struct napi_struct *n)
{
  bool tmp;
  
#line 435 
  tmp = napi_schedule_prep(n);
  
#line 435 
  if ((int)tmp != 0) 
#line 436 
                     __napi_schedule_irqoff(n); else ;
  
#line 437 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_xmit_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  
#line 2602 
  __retres = (_Bool)((dev_queue->state & 3UL) != 0UL);
  
#line 2602 
  return __retres;
}


#line 2624  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_txq_bql_enqueue_prefetchw(struct netdev_queue *dev_queue)
{
  
#line 2627 
  prefetchw((void const *)(& dev_queue->dql.num_queued));
  
#line 2628 
  return;
}


#line 2638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_txq_bql_complete_prefetchw(struct netdev_queue *dev_queue)
{
  
#line 2641 
  prefetchw((void const *)(& dev_queue->dql.limit));
  
#line 2642 
  return;
}


#line 2645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_sent_queue(struct netdev_queue *dev_queue, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2649 
  dql_queued(& dev_queue->dql,bytes);
  
#line 2651 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2651 
  if ((long)(tmp >= 0) != 0L) 
#line 2652 
                              goto return_label; else ;
  
#line 2654 
  set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2655 
  ldv_inline_asm();
  
#line 2664 
  tmp_0 = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2664 
  if ((long)(tmp_0 >= 0) != 0L) 
#line 2665 
                                set_bit(1L,(unsigned long volatile *)(& dev_queue->state)); else ;
  return_label: 
#line 2666 
                return;
}


#line 2683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_completed_queue(struct netdev_queue *dev_queue, unsigned int pkts, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2687 
  if ((long)(bytes == 0U) != 0L) 
#line 2688 
                                 goto return_label; else ;
  
#line 2690 
  dql_completed(& dev_queue->dql,bytes);
  
#line 2691 
  ldv_inline_asm();
  
#line 2699 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2699 
  if (tmp < 0) 
#line 2700 
               goto return_label; else ;
  
#line 2702 
  tmp_0 = test_and_set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2702 
  if (tmp_0 != 0) 
#line 2703 
                  netif_schedule_queue(dev_queue); else ;
  return_label: 
#line 2704 
                return;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_reset_queue(struct netdev_queue *q)
{
  
#line 2726 
  set_bit(1L,(unsigned long volatile *)(& q->state));
  
#line 2727 
  dql_reset(& q->dql);
  
#line 2728 
  return;
}


#line 2832 
int netif_set_xps_queue(struct net_device *, struct cpumask const *, u16);


#line 2843 
u16 __skb_tx_hash(struct net_device const *, struct sk_buff *, unsigned int);


#line 2850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u16 skb_tx_hash(struct net_device const *dev, struct sk_buff *skb)
{
  u16 tmp;
  
#line 2853 
  tmp = __skb_tx_hash(dev,skb,dev->real_num_tx_queues);
  
#line 2853 
  return tmp;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_consume_skb_any(struct sk_buff *skb)
{
  
#line 2938 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_CONSUMED);
  
#line 2939 
  return;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/unaligned/access_ok.h"
__inline static u16 get_unaligned_le16(void const *p)
{
  u16 tmp;
  
#line 9 
  tmp = __le16_to_cpup((__le16 const *)p);
  
#line 9 
  return tmp;
}


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/unaligned/access_ok.h"
__inline static u32 get_unaligned_le32(void const *p)
{
  u32 tmp;
  
#line 14 
  tmp = __le32_to_cpup((__le32 const *)p);
  
#line 14 
  return tmp;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vmalloc(unsigned long);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *inner_tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 39 
  tmp = (struct tcphdr *)skb_inner_transport_header(skb);
  
#line 39 
  return tmp;
}


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int inner_tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 44 
  tmp = inner_tcp_hdr(skb);
  
#line 44 
  ;
  
#line 44 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 44 
  return __retres;
}


#line 762  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
void mlx4_en_tx_irq(struct mlx4_cq *mcq);


#line 793 
int mlx4_en_poll_tx_cq(struct napi_struct *napi, int budget);


#line 846 
u64 mlx4_en_get_cqe_ts(struct mlx4_cqe *cqe);


#line 847 
void mlx4_en_fill_hwtstamps(struct mlx4_en_dev *mdev, struct skb_shared_hwtstamps *hwts, u64 timestamp);


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
int mlx4_en_create_tx_ring(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring **pring, u32 size, u16 stride, int node, int queue_index)
{
  int __retres;
  struct mlx4_en_tx_ring *ring;
  int tmp;
  int err;
  
#line 52 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 57 
  ring = (struct mlx4_en_tx_ring *)kzalloc_node(1728UL,208U,node);
  
#line 58 
  if (ring == (struct mlx4_en_tx_ring *)0) {
    
#line 59 
    ring = (struct mlx4_en_tx_ring *)kzalloc_2(1728UL,208U);
    
#line 60 
    if (ring == (struct mlx4_en_tx_ring *)0) {
      
#line 61 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed allocating TX ring\n");
      
#line 62 
      __retres = -12;
      
#line 62 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 66 
  ring->size = size;
  
#line 67 
  ring->size_mask = size + 4294967295U;
  
#line 68 
  ring->stride = stride;
  
#line 69 
  ring->full_size = ring->size + 4294967255U;
  
#line 71 
  tmp = (int)(size * 64U);
  
#line 72 
  ring->tx_info = (struct mlx4_en_tx_info *)kmalloc_node((unsigned long)tmp,720U,node);
  
#line 73 
  if (ring->tx_info == (struct mlx4_en_tx_info *)0) {
    
#line 74 
    ring->tx_info = (struct mlx4_en_tx_info *)vmalloc((unsigned long)tmp);
    
#line 75 
    if (ring->tx_info == (struct mlx4_en_tx_info *)0) {
      
#line 76 
      err = -12;
      
#line 77 
      goto err_ring;
    }
    else ;
  }
  else ;
  
#line 81 
  if ((priv->msg_enable & 1U) != 0U) 
#line 81 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Allocated tx_info ring at addr:%p size:%d\n",ring->tx_info,tmp); else ;
  
#line 84 
  ring->bounce_buf = (u8 *)kmalloc_node(512UL,208U,node);
  
#line 85 
  if (ring->bounce_buf == (u8 *)0U) {
    
#line 86 
    ring->bounce_buf = (u8 *)kmalloc_1(512UL,208U);
    
#line 87 
    if (ring->bounce_buf == (u8 *)0U) {
      
#line 88 
      err = -12;
      
#line 89 
      goto err_info;
    }
    else ;
  }
  else ;
  
#line 92 
  ring->buf_size = ((unsigned int)ring->stride * size + 4095U) & 4294963200U;
  
#line 95 
  set_dev_node(& (((mdev->dev)->persist)->pdev)->dev,node);
  
#line 96 
  err = mlx4_alloc_hwq_res(mdev->dev,& ring->wqres,(int)ring->buf_size,8192);
  
#line 98 
  set_dev_node(& (((mdev->dev)->persist)->pdev)->dev,(mdev->dev)->numa_node);
  
#line 99 
  if (err != 0) {
    
#line 100 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed allocating hwq resources\n");
    
#line 101 
    goto err_bounce;
  }
  else ;
  
#line 104 
  err = mlx4_en_map_buffer(& ring->wqres.buf);
  
#line 105 
  if (err != 0) {
    
#line 106 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to map TX buffer\n");
    
#line 107 
    goto err_hwq_res;
  }
  else ;
  
#line 110 
  ring->buf = ring->wqres.buf.direct.buf;
  
#line 112 
  if ((priv->msg_enable & 1U) != 0U) 
#line 112 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Allocated TX ring (addr:%p) - buf:%p size:%d buf_size:%d dma:%llx\n",ring,ring->buf,ring->size,ring->buf_size,ring->wqres.buf.direct.map); else ;
  
#line 116 
  err = mlx4_qp_reserve_range(mdev->dev,1,1,& ring->qpn,(unsigned char)128);
  
#line 118 
  if (err != 0) {
    
#line 119 
    en_print("\001",(struct mlx4_en_priv const *)priv,"failed reserving qp for TX ring\n");
    
#line 120 
    goto err_map;
  }
  else ;
  
#line 123 
  err = mlx4_qp_alloc(mdev->dev,ring->qpn,& ring->qp,208U);
  
#line 124 
  if (err != 0) {
    
#line 125 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed allocating qp %d\n",ring->qpn);
    
#line 126 
    goto err_reserve;
  }
  else ;
  
#line 128 
  ring->qp.event = & mlx4_en_sqp_event;
  
#line 130 
  err = mlx4_bf_alloc(mdev->dev,& ring->bf,node);
  
#line 131 
  if (err != 0) {
    
#line 132 
    if ((priv->msg_enable & 1U) != 0U) 
#line 132 
                                       en_print("\001",(struct mlx4_en_priv const *)priv,"working without blueflame (%d)\n",err); else ;
    
#line 133 
    ring->bf.uar = & mdev->priv_uar;
    
#line 134 
    (ring->bf.uar)->map = mdev->uar_map;
    
#line 135 
    ring->bf_enabled = (_Bool)0;
    
#line 136 
    ring->bf_alloced = (_Bool)0;
    
#line 137 
    priv->pflags &= 4294967294U;
  }
  else {
    
#line 139 
    ring->bf_alloced = (_Bool)1;
    
#line 140 
    ring->bf_enabled = (_Bool)((priv->pflags & 1U) != 0U);
  }
  
#line 144 
  ring->hwtstamp_tx_type = priv->hwtstamp_config.tx_type;
  
#line 145 
  ring->queue_index = (unsigned char)queue_index;
  
#line 147 
  if ((int)priv->num_tx_rings_p_up > queue_index) {
    unsigned int tmp_6;
    
#line 148 
    ;
    
#line 148 
    tmp_6 = cpumask_local_spread((unsigned int)queue_index,((priv->mdev)->dev)->numa_node);
    
#line 148 
    cpumask_set_cpu(tmp_6,& ring->affinity_mask);
  }
  else ;
  
#line 152 
  *pring = ring;
  
#line 153 
  __retres = 0;
  
#line 153 
  goto return_label;
  err_reserve: 
#line 155 
  ;
  
#line 156 
  mlx4_qp_release_range(mdev->dev,ring->qpn,1);
  err_map: 
#line 157 
  ;
  
#line 158 
  mlx4_en_unmap_buffer(& ring->wqres.buf);
  err_hwq_res: 
#line 159 
  ;
  
#line 160 
  mlx4_free_hwq_res(mdev->dev,& ring->wqres,(int)ring->buf_size);
  err_bounce: 
#line 161 
  ;
  
#line 162 
  kfree((void const *)ring->bounce_buf);
  
#line 163 
  ring->bounce_buf = (u8 *)0U;
  err_info: 
#line 164 
  ;
  
#line 165 
  kvfree((void const *)ring->tx_info);
  
#line 166 
  ring->tx_info = (struct mlx4_en_tx_info *)0;
  err_ring: 
#line 167 
  ;
  
#line 168 
  kfree((void const *)ring);
  
#line 169 
  *pring = (struct mlx4_en_tx_ring *)0;
  
#line 170 
  __retres = err;
  return_label: 
#line 170 
                return __retres;
}


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
void mlx4_en_destroy_tx_ring(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring **pring)
{
  
#line 176 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 177 
  struct mlx4_en_tx_ring *ring = *pring;
  
#line 178 
  if ((priv->msg_enable & 1U) != 0U) 
#line 178 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Destroying tx ring, qpn: %d\n",ring->qpn); else ;
  
#line 180 
  if ((int)ring->bf_alloced != 0) 
#line 181 
                                  mlx4_bf_free(mdev->dev,& ring->bf); else ;
  
#line 182 
  mlx4_qp_remove(mdev->dev,& ring->qp);
  
#line 183 
  mlx4_qp_free(mdev->dev,& ring->qp);
  
#line 184 
  mlx4_qp_release_range((priv->mdev)->dev,ring->qpn,1);
  
#line 185 
  mlx4_en_unmap_buffer(& ring->wqres.buf);
  
#line 186 
  mlx4_free_hwq_res(mdev->dev,& ring->wqres,(int)ring->buf_size);
  
#line 187 
  kfree((void const *)ring->bounce_buf);
  
#line 188 
  ring->bounce_buf = (u8 *)0U;
  
#line 189 
  kvfree((void const *)ring->tx_info);
  
#line 190 
  ring->tx_info = (struct mlx4_en_tx_info *)0;
  
#line 191 
  kfree((void const *)ring);
  
#line 192 
  *pring = (struct mlx4_en_tx_ring *)0;
  
#line 193 
  return;
}


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
int mlx4_en_activate_tx_ring(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring *ring, int cq, int user_prio)
{
  int err;
  int tmp_3;
  bool tmp_2;
  
#line 199 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 202 
  ring->cqn = (unsigned short)cq;
  
#line 203 
  ring->prod = 0U;
  
#line 204 
  ring->cons = 4294967295U;
  
#line 205 
  ring->last_nr_txbb = 1U;
  
#line 206 
  memset((void *)ring->tx_info,0,(unsigned long)ring->size * 64UL);
  
#line 207 
  memset(ring->buf,0,(unsigned long)ring->buf_size);
  
#line 209 
  ring->qp_state = MLX4_QP_STATE_RST;
  
#line 210 
  if (0 != 0) 
#line 210 
              ring->doorbell_qpn = ((((unsigned int)(ring->qp.qpn << 8) << 8) & 16776960U) | (((unsigned int)(ring->qp.qpn << 8) >> 8) & 65280U)) | ((unsigned int)(ring->qp.qpn << 8) >> 24); else 
                                                                    
#line 210 
                                                                    ring->doorbell_qpn = __fswab32((unsigned int)(ring->qp.qpn << 8));
  
#line 211 
  if (0 != 0) 
#line 211 
              ring->mr_key = (((mdev->mr.key << 24) | ((mdev->mr.key << 8) & 16711680U)) | ((mdev->mr.key >> 8) & 65280U)) | (mdev->mr.key >> 24); else 
                                                                    
#line 211 
                                                                    ring->mr_key = __fswab32(mdev->mr.key);
  
#line 213 
  mlx4_en_fill_qp_context(priv,(int)ring->size,(int)ring->stride,1,0,ring->qpn,(int)ring->cqn,user_prio,& ring->context);
  
#line 215 
  if ((int)ring->bf_alloced != 0) 
    
#line 216 
    if (0 != 0) 
#line 216 
                ring->context.usr_page = ((((unsigned int)(ring->bf.uar)->index << 24) | (((unsigned int)(ring->bf.uar)->index << 8) & 16711680U)) | (((unsigned int)(ring->bf.uar)->index >> 8) & 65280U)) | ((unsigned int)(ring->bf.uar)->index >> 24); else 
                                                                    
#line 216 
                                                                    ring->context.usr_page = __fswab32((unsigned int)(ring->bf.uar)->index);
  else ;
  
#line 218 
  err = mlx4_qp_to_ready(mdev->dev,& ring->wqres.mtt,& ring->context,& ring->qp,& ring->qp_state);
  
#line 220 
  tmp_2 = cpumask_empty((struct cpumask const *)(& ring->affinity_mask));
  
#line 220 
  if (tmp_2) 
#line 220 
             tmp_3 = 0; else 
#line 220 
                             tmp_3 = 1;
  
#line 220 
  if (tmp_3) 
#line 221 
             netif_set_xps_queue(priv->dev,(struct cpumask const *)(& ring->affinity_mask),(unsigned short)((int)ring->queue_index)); else ;
  
#line 224 
  return err;
}


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
void mlx4_en_deactivate_tx_ring(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring *ring)
{
  
#line 230 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 232 
  mlx4_qp_modify(mdev->dev,(struct mlx4_mtt *)0,ring->qp_state,(enum mlx4_qp_state)MLX4_QP_STATE_RST,(struct mlx4_qp_context *)0,(enum mlx4_qp_optpar)0,0,& ring->qp);
  
#line 234 
  return;
}


#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
__inline static bool mlx4_en_is_tx_ring_full(struct mlx4_en_tx_ring *ring)
{
  bool __retres;
  
#line 238 
  __retres = (_Bool)(ring->prod - ring->cons > ring->full_size);
  
#line 238 
  return __retres;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
static void mlx4_en_stamp_wqe(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring *ring, int index, u8 owner)
{
  unsigned int tmp_3;
  int i;
  
#line 245 
  if (0 != 0) {
    unsigned int tmp_0;
    
#line 245 
    if ((unsigned int)owner != 0U) 
#line 245 
                                   tmp_0 = 4294967295U; else 
#line 245 
                                                             tmp_0 = 4294967167U;
    
#line 245 
    tmp_3 = tmp_0;
  }
  else {
    __u32 tmp_2;
    int tmp_1;
    
#line 245 
    if ((unsigned int)owner != 0U) 
#line 245 
                                   tmp_1 = -1; else 
#line 245 
                                                    tmp_1 = 2147483647;
    
#line 245 
    tmp_2 = __fswab32((unsigned int)tmp_1);
    
#line 245 
    tmp_3 = tmp_2;
  }
  
#line 245 
  __be32 stamp = tmp_3;
  
#line 246 
  struct mlx4_en_tx_desc *tx_desc = (struct mlx4_en_tx_desc *)(ring->buf + index * 64);
  
#line 247 
  struct mlx4_en_tx_info *tx_info = ring->tx_info + index;
  
#line 248 
  void *end = ring->buf + ring->buf_size;
  
#line 249 
  __be32 *ptr = (__be32 *)tx_desc;
  
#line 253 
  if ((long)((void *)tx_desc + tx_info->nr_txbb * 64U <= end) != 0L) {
    
#line 255 
    i = 0;
    
#line 255 
    goto ldv_55315;
    ldv_55314: 
#line 256 
    ;
    
#line 257 
    *ptr = stamp;
    
#line 258 
    ptr += 16U;
    
#line 256 
    i += 64;
    ldv_55315: 
#line 257 
    ;
    
#line 255 
    if (tx_info->nr_txbb * 64U > (unsigned int)i) 
#line 257 
                                                  goto ldv_55314; else 
                                                                    
#line 260 
                                                                    goto ldv_55316;
    ldv_55316: 
#line 261 
    ;
  }
  else {
    
#line 262 
    i = 0;
    
#line 262 
    goto ldv_55318;
    ldv_55317: 
#line 263 
    ;
    
#line 264 
    *ptr = stamp;
    
#line 265 
    ptr += 16U;
    
#line 266 
    if ((void *)ptr >= end) {
      
#line 267 
      ptr = (__be32 *)ring->buf;
      
#line 268 
      stamp ^= 128U;
    }
    else ;
    
#line 263 
    i += 64;
    ldv_55318: 
#line 264 
    ;
    
#line 262 
    if (tx_info->nr_txbb * 64U > (unsigned int)i) 
#line 264 
                                                  goto ldv_55317; else 
                                                                    
#line 267 
                                                                    goto ldv_55319;
    ldv_55319: 
#line 268 
    ;
  }
  
#line 270 
  return;
}


#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
static u32 mlx4_en_free_tx_desc(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring *ring, int index, u8 owner, u64 timestamp)
{
  u32 __retres;
  int i;
  
#line 279 
  struct mlx4_en_tx_info *tx_info = ring->tx_info + index;
  
#line 280 
  struct mlx4_en_tx_desc *tx_desc = (struct mlx4_en_tx_desc *)(ring->buf + index * 64);
  
#line 281 
  struct mlx4_wqe_data_seg *data = (struct mlx4_wqe_data_seg *)tx_desc + (int)tx_info->data_offset;
  
#line 282 
  void *end = ring->buf + ring->buf_size;
  
#line 283 
  struct sk_buff *skb = tx_info->skb;
  
#line 284 
  int nr_maps = (int)tx_info->nr_maps;
  
#line 290 
  prefetchw((void const *)(& skb->users));
  
#line 292 
  if ((long)(timestamp != 0ULL) != 0L) {
    struct skb_shared_hwtstamps hwts;
    
#line 295 
    mlx4_en_fill_hwtstamps(priv->mdev,& hwts,timestamp);
    
#line 296 
    skb_tstamp_tx(skb,& hwts);
  }
  else ;
  
#line 300 
  if ((long)((void *)tx_desc + tx_info->nr_txbb * 64U <= end) != 0L) {
    
#line 301 
    if ((unsigned int)tx_info->inl == 0U) {
      unsigned int tmp_0;
      unsigned long long tmp_2;
      
#line 302 
      if ((unsigned int)tx_info->linear != 0U) 
#line 303 
                                               dma_unmap_single_attrs(priv->ddev,tx_info->map0_dma,(unsigned long)tx_info->map0_byte_count,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0); else 
                                                                    
#line 308 
                                                                    dma_unmap_page(priv->ddev,tx_info->map0_dma,(unsigned long)tx_info->map0_byte_count,(enum dma_data_direction)DMA_TO_DEVICE);
      
#line 312 
      i = 1;
      
#line 312 
      goto ldv_55336;
      ldv_55335: 
#line 313 
      ;
      
#line 313 
      data += 1;
      
#line 316 
      if (0 != 0) 
#line 316 
                  tmp_0 = (((data->byte_count << 24) | ((data->byte_count << 8) & 16711680U)) | ((data->byte_count >> 8) & 65280U)) | (data->byte_count >> 24); else 
                                                                    
#line 316 
                                                                    tmp_0 = __fswab32(data->byte_count);
      
#line 314 
      if (0 != 0) 
#line 314 
                  tmp_2 = (((((((data->addr << 56) | ((data->addr << 40) & 71776119061217280ULL)) | ((data->addr << 24) & 280375465082880ULL)) | ((data->addr << 8) & 1095216660480ULL)) | ((data->addr >> 8) & 4278190080ULL)) | ((data->addr >> 24) & 16711680ULL)) | ((data->addr >> 40) & 65280ULL)) | (data->addr >> 56); else 
                                                                    
#line 315 
                                                                    tmp_2 = __fswab64(data->addr);
      
#line 314 
      ;
      
#line 314 
      dma_unmap_page(priv->ddev,tmp_2,(unsigned long)tmp_0,(enum dma_data_direction)DMA_TO_DEVICE);
      
#line 312 
      i += 1;
      ldv_55336: 
#line 313 
      ;
      
#line 312 
      if (i < nr_maps) 
#line 314 
                       goto ldv_55335; else 
#line 317 
                                            goto ldv_55337;
      ldv_55337: 
#line 318 
      ;
    }
    else ;
  }
  else 
    
#line 321 
    if ((unsigned int)tx_info->inl == 0U) {
      unsigned int tmp_4;
      unsigned long long tmp_6;
      
#line 322 
      if ((void *)data >= end) 
#line 323 
                               data = (struct mlx4_wqe_data_seg *)(ring->buf + ((long)data - (long)end)); else ;
      
#line 326 
      if ((unsigned int)tx_info->linear != 0U) 
#line 327 
                                               dma_unmap_single_attrs(priv->ddev,tx_info->map0_dma,(unsigned long)tx_info->map0_byte_count,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0); else 
                                                                    
#line 332 
                                                                    dma_unmap_page(priv->ddev,tx_info->map0_dma,(unsigned long)tx_info->map0_byte_count,(enum dma_data_direction)DMA_TO_DEVICE);
      
#line 336 
      i = 1;
      
#line 336 
      goto ldv_55339;
      ldv_55338: 
#line 337 
      ;
      
#line 337 
      data += 1;
      
#line 339 
      if ((void *)data >= end) 
#line 340 
                               data = (struct mlx4_wqe_data_seg *)ring->buf; else ;
      
#line 343 
      if (0 != 0) 
#line 343 
                  tmp_4 = (((data->byte_count << 24) | ((data->byte_count << 8) & 16711680U)) | ((data->byte_count >> 8) & 65280U)) | (data->byte_count >> 24); else 
                                                                    
#line 343 
                                                                    tmp_4 = __fswab32(data->byte_count);
      
#line 341 
      if (0 != 0) 
#line 341 
                  tmp_6 = (((((((data->addr << 56) | ((data->addr << 40) & 71776119061217280ULL)) | ((data->addr << 24) & 280375465082880ULL)) | ((data->addr << 8) & 1095216660480ULL)) | ((data->addr >> 8) & 4278190080ULL)) | ((data->addr >> 24) & 16711680ULL)) | ((data->addr >> 40) & 65280ULL)) | (data->addr >> 56); else 
                                                                    
#line 342 
                                                                    tmp_6 = __fswab64(data->addr);
      
#line 341 
      ;
      
#line 341 
      dma_unmap_page(priv->ddev,tmp_6,(unsigned long)tmp_4,(enum dma_data_direction)DMA_TO_DEVICE);
      
#line 336 
      i += 1;
      ldv_55339: 
#line 337 
      ;
      
#line 336 
      if (i < nr_maps) 
#line 338 
                       goto ldv_55338; else 
#line 341 
                                            goto ldv_55340;
      ldv_55340: 
#line 342 
      ;
    }
    else ;
  
#line 348 
  dev_consume_skb_any(skb);
  
#line 349 
  __retres = tx_info->nr_txbb;
  
#line 349 
  return __retres;
}


#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
int mlx4_en_free_tx_buf(struct net_device *dev, struct mlx4_en_tx_ring *ring)
{
  int __retres;
  
#line 355 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 356 
  int cnt = 0;
  
#line 359 
  ring->cons += ring->last_nr_txbb;
  
#line 360 
  if ((priv->msg_enable & 1U) != 0U) 
#line 360 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Freeing Tx buf - cons:0x%x prod:0x%x\n",ring->cons,ring->prod); else ;
  
#line 363 
  if (ring->prod - ring->cons > ring->size) {
    
#line 364 
    if ((priv->msg_enable & 128U) != 0U) 
#line 365 
                                         en_print("\001",(struct mlx4_en_priv const *)priv,"Tx consumer passed producer!\n"); else ;
    
#line 366 
    __retres = 0;
    
#line 366 
    goto return_label;
  }
  else ;
  
#line 369 
  goto ldv_55348;
  ldv_55347: 
#line 370 
  ;
  
#line 370 
  ring->last_nr_txbb = mlx4_en_free_tx_desc(priv,ring,(int)(ring->cons & ring->size_mask),(unsigned char)((ring->cons & ring->size) != 0U),0ULL);
  
#line 373 
  ring->cons += ring->last_nr_txbb;
  
#line 374 
  cnt += 1;
  ldv_55348: 
#line 375 
  ;
  
#line 369 
  if (ring->cons != ring->prod) 
#line 371 
                                goto ldv_55347; else 
#line 374 
                                                     goto ldv_55349;
  ldv_55349: 
#line 375 
  ;
  
#line 377 
  netdev_tx_reset_queue(ring->tx_queue);
  
#line 379 
  if (cnt != 0) {
    
#line 380 
    if ((priv->msg_enable & 1U) != 0U) 
#line 380 
                                       en_print("\001",(struct mlx4_en_priv const *)priv,"Freed %d uncompleted tx descriptors\n",cnt); else ;
  }
  else ;
  
#line 382 
  __retres = cnt;
  return_label: 
#line 382 
                return __retres;
}


#line 385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
static bool mlx4_en_process_tx_cq(struct net_device *dev, struct mlx4_en_cq *cq)
{
  bool __retres;
  struct mlx4_cqe *cqe;
  u16 index;
  u16 new_index;
  u16 ring_index;
  u16 stamp_index;
  u32 last_nr_txbb;
  u32 ring_cons;
  struct mlx4_cqe *tmp_0;
  u32 volatile *tmp_1;
  u32 volatile *tmp_2;
  int tmp_4;
  struct mlx4_cqe *tmp_5;
  u32 volatile *tmp_6;
  u32 volatile *tmp_7;
  bool tmp_8;
  
#line 388 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 389 
  struct mlx4_cq *mcq = & cq->mcq;
  
#line 390 
  struct mlx4_en_tx_ring *ring = *(priv->tx_ring + cq->ring);
  
#line 394 
  u32 txbbs_skipped = 0U;
  
#line 395 
  u32 txbbs_stamp = 0U;
  
#line 396 
  u32 cons_index = mcq->cons_index;
  
#line 397 
  int size = cq->size;
  
#line 398 
  u32 size_mask = ring->size_mask;
  
#line 399 
  struct mlx4_cqe *buf = cq->buf;
  
#line 400 
  u32 packets = 0U;
  
#line 401 
  u32 bytes = 0U;
  
#line 402 
  int factor = priv->cqe_factor;
  
#line 403 
  u64 timestamp = 0ULL;
  
#line 404 
  int done = 0;
  
#line 405 
  int budget = (int)priv->tx_work_limit;
  
#line 409 
  if (! priv->port_up) {
    
#line 410 
    __retres = (_Bool)1;
    
#line 410 
    goto return_label;
  }
  else ;
  
#line 412 
  netdev_txq_bql_complete_prefetchw(ring->tx_queue);
  
#line 414 
  index = (unsigned short)((int)((unsigned short)cons_index) & (int)((unsigned short)size_mask));
  
#line 415 
  tmp_0 = mlx4_en_get_cqe((void *)buf,(int)index,priv->cqe_size);
  
#line 415 
  cqe = tmp_0 + factor;
  {
    
#line 416 
    u32 __var = 0U;
    
#line 416 
    tmp_1 = (u32 volatile *)(& ring->last_nr_txbb);
  }
  
#line 416 
  last_nr_txbb = *tmp_1;
  {
    
#line 417 
    u32 __var_0 = 0U;
    
#line 417 
    tmp_2 = (u32 volatile *)(& ring->cons);
  }
  
#line 417 
  ring_cons = *tmp_2;
  
#line 418 
  ring_index = (unsigned short)((int)((unsigned short)ring_cons) & (int)((unsigned short)size_mask));
  
#line 419 
  stamp_index = ring_index;
  
#line 422 
  goto ldv_55384;
  ldv_55383: 
#line 423 
  ;
  
#line 424 
  ldv_inline_asm();
  
#line 430 
  if ((long)(((int)cqe->owner_sr_opcode & 31) == 30) != 0L) {
    
#line 432 
    struct mlx4_err_cqe *cqe_err = (struct mlx4_err_cqe *)cqe;
    
#line 434 
    en_print("\001",(struct mlx4_en_priv const *)priv,"CQE error - vendor syndrome: 0x%x syndrome: 0x%x\n",(int)cqe_err->vendor_err_syndrome,(int)cqe_err->syndrome);
  }
  else ;
  
#line 440 
  if (0 != 0) 
#line 440 
              tmp_4 = (int)((unsigned short)(((int)cqe->wqe_index << 8) | ((int)cqe->wqe_index >> 8)));
  else {
    __u16 tmp_3;
    
#line 440 
    tmp_3 = __fswab16((unsigned short)((int)cqe->wqe_index));
    
#line 440 
    tmp_4 = (int)tmp_3;
  }
  
#line 440 
  new_index = (unsigned short)(tmp_4 & (int)((unsigned short)size_mask));
  ldv_55381: 
#line 441 
  ;
  
#line 443 
  txbbs_skipped += last_nr_txbb;
  
#line 444 
  ring_index = (unsigned short)(((int)((unsigned short)last_nr_txbb) + (int)ring_index) & (int)((unsigned short)size_mask));
  
#line 445 
  if ((unsigned int)(ring->tx_info + (int)ring_index)->ts_requested != 0U) 
    
#line 446 
    timestamp = mlx4_en_get_cqe_ts(cqe); else ;
  
#line 449 
  last_nr_txbb = mlx4_en_free_tx_desc(priv,ring,(int)ring_index,(unsigned char)(((ring_cons + txbbs_skipped) & ring->size) != 0U),timestamp);
  
#line 454 
  mlx4_en_stamp_wqe(priv,ring,(int)stamp_index,(unsigned char)(((ring_cons + txbbs_stamp) & ring->size) != 0U));
  
#line 457 
  stamp_index = ring_index;
  
#line 458 
  txbbs_stamp = txbbs_skipped;
  
#line 459 
  packets += 1U;
  
#line 460 
  bytes = (ring->tx_info + (int)ring_index)->nr_bytes + bytes;
  
#line 461 
  done += 1;
  
#line 461 
  ;
  
#line 461 
  if (done < budget) {
    
#line 461 
    if ((int)ring_index != (int)new_index) 
#line 463 
                                           goto ldv_55381; else 
#line 466 
                                                                goto ldv_55382;
  }
  else 
#line 466 
       goto ldv_55382;
  ldv_55382: 
#line 467 
  ;
  
#line 463 
  cons_index += 1U;
  
#line 464 
  index = (unsigned short)((int)((unsigned short)cons_index) & (int)((unsigned short)size_mask));
  
#line 465 
  tmp_5 = mlx4_en_get_cqe((void *)buf,(int)index,priv->cqe_size);
  
#line 465 
  cqe = tmp_5 + factor;
  ldv_55384: 
#line 466 
  ;
  
#line 422 
  if (((int)cqe->owner_sr_opcode < 0) ^ ((cons_index & (unsigned int)size) == 0U) && done < budget) 
    
#line 425 
    goto ldv_55383; else 
#line 428 
                         goto ldv_55385;
  ldv_55385: 
#line 429 
  ;
  
#line 473 
  mcq->cons_index = cons_index;
  
#line 474 
  mlx4_cq_set_ci(mcq);
  
#line 475 
  ldv_inline_asm();
  {
    
#line 478 
    u32 __var_1 = 0U;
    
#line 478 
    tmp_6 = (u32 volatile *)(& ring->last_nr_txbb);
  }
  
#line 478 
  *tmp_6 = last_nr_txbb;
  {
    
#line 479 
    u32 __var_2 = 0U;
    
#line 479 
    tmp_7 = (u32 volatile *)(& ring->cons);
  }
  
#line 479 
  *tmp_7 = ring_cons + txbbs_skipped;
  
#line 481 
  netdev_tx_completed_queue(ring->tx_queue,packets,bytes);
  
#line 485 
  tmp_8 = netif_tx_queue_stopped((struct netdev_queue const *)ring->tx_queue);
  
#line 485 
  if ((int)tmp_8 != 0) {
    int tmp_10;
    bool tmp_9;
    
#line 486 
    tmp_9 = mlx4_en_is_tx_ring_full(ring);
    
#line 486 
    if (tmp_9) 
#line 486 
               tmp_10 = 0; else 
#line 486 
                                tmp_10 = 1;
    
#line 486 
    if (tmp_10) {
      
#line 487 
      netif_tx_wake_queue(ring->tx_queue);
      
#line 488 
      ring->wake_queue += 1UL;
    }
    else ;
  }
  else ;
  
#line 490 
  __retres = (_Bool)(done < budget);
  return_label: 
#line 490 
                return __retres;
}


#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
void mlx4_en_tx_irq(struct mlx4_cq *mcq)
{
  struct mlx4_en_cq *tmp;
  {
    
#line 495 
    struct mlx4_cq const *__mptr = (struct mlx4_cq const *)mcq;
    
#line 495 
    tmp = (struct mlx4_en_cq *)__mptr;
  }
  
#line 495 
  struct mlx4_en_cq *cq = tmp;
  
#line 496 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)cq->dev);
  
#line 498 
  if ((long)((int)priv->port_up != 0) != 0L) 
#line 499 
                                             napi_schedule_irqoff(& cq->napi); else 
                                                                    
#line 501 
                                                                    mlx4_en_arm_cq(priv,cq);
  
#line 502 
  return;
}


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
int mlx4_en_poll_tx_cq(struct napi_struct *napi, int budget)
{
  int __retres;
  struct mlx4_en_cq *tmp;
  int clean_complete;
  bool tmp_1;
  {
    
#line 507 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 507 
    tmp = (struct mlx4_en_cq *)__mptr + 18446744073709551296U;
  }
  
#line 507 
  struct mlx4_en_cq *cq = tmp;
  
#line 508 
  struct net_device *dev = cq->dev;
  
#line 509 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 512 
  tmp_1 = mlx4_en_process_tx_cq(dev,cq);
  
#line 512 
  clean_complete = (int)tmp_1;
  
#line 513 
  if (clean_complete == 0) {
    
#line 514 
    __retres = budget;
    
#line 514 
    goto return_label;
  }
  else ;
  
#line 516 
  napi_complete(napi);
  
#line 517 
  mlx4_en_arm_cq(priv,cq);
  
#line 519 
  __retres = 0;
  return_label: 
#line 519 
                return __retres;
}


#line 522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
static struct mlx4_en_tx_desc *mlx4_en_bounce_to_desc(struct mlx4_en_priv *priv, struct mlx4_en_tx_ring *ring, u32 index, unsigned int desc_size)
{
  struct mlx4_en_tx_desc *__retres;
  int i;
  
#line 527 
  u32 copy = (ring->size - index) * 64U;
  
#line 530 
  i = (int)((desc_size - copy) + 4294967292U);
  
#line 530 
  goto ldv_55416;
  ldv_55415: 
#line 531 
  ;
  
#line 531 
  if ((i & 63) == 0) 
#line 532 
                     ldv_inline_asm(); else ;
  
#line 534 
  *((u32 *)(ring->buf + i)) = *((u32 *)(ring->bounce_buf + (copy + (u32)i)));
  
#line 530 
  i += -4;
  ldv_55416: 
#line 531 
  ;
  
#line 530 
  if (i >= 0) 
#line 532 
              goto ldv_55415; else 
#line 535 
                                   goto ldv_55417;
  ldv_55417: 
#line 536 
  ;
  
#line 538 
  i = (int)(copy + 4294967292U);
  
#line 538 
  goto ldv_55419;
  ldv_55418: 
#line 539 
  ;
  
#line 539 
  if ((i & 63) == 0) 
#line 540 
                     ldv_inline_asm(); else ;
  
#line 542 
  *((u32 *)(ring->buf + (index * 64U + (u32)i))) = *((u32 *)(ring->bounce_buf + i));
  
#line 538 
  i += -4;
  ldv_55419: 
#line 539 
  ;
  
#line 538 
  if (i > 3) 
#line 540 
             goto ldv_55418; else 
#line 543 
                                  goto ldv_55420;
  ldv_55420: 
#line 544 
  ;
  
#line 547 
  __retres = (struct mlx4_en_tx_desc *)(ring->buf + index * 64U);
  
#line 547 
  return __retres;
}


#line 557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
static bool is_inline(int inline_thold_0, struct sk_buff const *skb, struct skb_shared_info const *shinfo, void **pfrag)
{
  bool __retres;
  void *ptr;
  
#line 563 
  if (skb->len > (unsigned int)inline_thold_0 || inline_thold_0 == 0) {
    
#line 564 
    __retres = (_Bool)0;
    
#line 564 
    goto return_label;
  }
  else ;
  
#line 566 
  if ((unsigned int)shinfo->nr_frags == 1U) {
    
#line 567 
    ptr = skb_frag_address_safe(& shinfo->frags[0]);
    
#line 568 
    if ((long)(ptr == (void *)0) != 0L) {
      
#line 569 
      __retres = (_Bool)0;
      
#line 569 
      goto return_label;
    }
    else ;
    
#line 570 
    *pfrag = ptr;
    
#line 571 
    __retres = (_Bool)1;
    
#line 571 
    goto return_label;
  }
  else ;
  
#line 573 
  if ((unsigned int)shinfo->nr_frags != 0U) {
    
#line 574 
    __retres = (_Bool)0;
    
#line 574 
    goto return_label;
  }
  else ;
  
#line 575 
  __retres = (_Bool)1;
  return_label: 
#line 575 
                return __retres;
}


#line 578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
static int inline_size(struct sk_buff const *skb)
{
  int __retres;
  
#line 580 
  if ((unsigned long)skb->len + 20UL <= 64UL) {
    
#line 582 
    __retres = (int)(skb->len + 35U) & -16;
    
#line 582 
    goto return_label;
  }
  else {
    
#line 585 
    __retres = (int)(skb->len + 39U) & -16;
    
#line 585 
    goto return_label;
  }
  return_label: 
#line 580 
                return __retres;
}


#line 589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
static int get_real_size(struct sk_buff const *skb, struct skb_shared_info const *shinfo, struct net_device *dev, int *lso_header_size, bool *inline_ok, void **pfrag)
{
  int __retres;
  int real_size;
  
#line 596 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 599 
  if ((unsigned int)shinfo->gso_size != 0U) {
    unsigned int tmp_5;
    
#line 600 
    *inline_ok = (_Bool)0;
    
#line 601 
    if ((unsigned int)*((unsigned char *)skb + 146UL) != 0U) {
      unsigned char *tmp_0;
      unsigned int tmp_1;
      
#line 602 
      tmp_0 = skb_inner_transport_header(skb);
      
#line 602 
      tmp_1 = inner_tcp_hdrlen(skb);
      
#line 602 
      *lso_header_size = (int)(((long)tmp_0 - (long)skb->data) + (long)tmp_1);
    }
    else {
      int tmp_2;
      unsigned int tmp_3;
      
#line 604 
      tmp_2 = skb_transport_offset(skb);
      
#line 604 
      tmp_3 = tcp_hdrlen(skb);
      
#line 604 
      *lso_header_size = (int)((unsigned int)tmp_2 + tmp_3);
    }
    
#line 605 
    real_size = (int)(((unsigned long)shinfo->nr_frags + 1UL) * (unsigned long)16U + (unsigned long)((unsigned int)(*lso_header_size + 19) & 4294967280U));
    
#line 607 
    tmp_5 = skb_headlen(skb);
    
#line 607 
    ;
    
#line 607 
    if ((long)((unsigned int)*lso_header_size != tmp_5) != 0L) {
      unsigned int tmp_4;
      
#line 610 
      tmp_4 = skb_headlen(skb);
      
#line 610 
      ;
      
#line 610 
      if ((unsigned int)*lso_header_size < tmp_4) 
#line 611 
                                                  real_size = (int)((unsigned int)real_size + 16U);
      else {
        
#line 613 
        if ((priv->msg_enable & 128U) != 0U) 
#line 614 
                                             en_print("\001",(struct mlx4_en_priv const *)priv,"Non-linear headers\n"); else ;
        
#line 615 
        __retres = 0;
        
#line 615 
        goto return_label;
      }
    }
    else ;
  }
  else {
    
#line 619 
    *lso_header_size = 0;
    
#line 620 
    *inline_ok = is_inline((priv->prof)->inline_thold,skb,shinfo,pfrag);
    
#line 623 
    if ((int)*inline_ok != 0) 
#line 624 
                              real_size = inline_size(skb); else 
#line 626 
                                                                 real_size = (int)(((unsigned long)((int)shinfo->nr_frags + 1) + 1UL) * (unsigned long)16U);
  }
  
#line 630 
  __retres = real_size;
  return_label: 
#line 630 
                return __retres;
}


#line 633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
static void build_inline_wqe(struct mlx4_en_tx_desc *tx_desc, struct sk_buff const *skb, struct skb_shared_info const *shinfo, int real_size, u16 *vlan_tag, int tx_ind, void *fragptr)
{
  
#line 639 
  struct mlx4_wqe_inline_seg *inl_0 = & tx_desc->__anonCompField_mlx4_en_tx_desc_121.inl;
  
#line 640 
  int spc = 44;
  
#line 641 
  unsigned int hlen = skb_headlen(skb);
  
#line 643 
  if (skb->len <= (unsigned int)spc) {
    
#line 644 
    if ((long)(skb->len > 16U) != 0L) 
      
#line 645 
      if (0 != 0) 
#line 645 
                  inl_0->byte_count = ((((skb->len << 24) | ((skb->len << 8) & 16711680U)) | ((skb->len >> 8) & 65280U)) | (skb->len >> 24)) | 128U; else 
                                                                    
#line 645 
                                                                    inl_0->byte_count = __fswab32(skb->len | 2147483648U);
    else {
      
#line 647 
      inl_0->byte_count = 285212800U;
      
#line 648 
      memset((void *)(inl_0 + 1U) + skb->len,0,(unsigned long)(17U - skb->len));
    }
    
#line 651 
    skb_copy_from_linear_data(skb,(void *)(inl_0 + 1U),hlen);
    
#line 652 
    if ((unsigned int)shinfo->nr_frags != 0U) {
      unsigned int tmp_1;
      
#line 654 
      tmp_1 = skb_frag_size(& shinfo->frags[0]);
      
#line 653 
      ;
      
#line 653 
      ;
      
#line 653 
      memcpy((void *)(inl_0 + 1U) + hlen,(void const *)fragptr,(unsigned long)tmp_1);
    }
    else ;
  }
  else {
    
#line 657 
    if (0 != 0) 
#line 657 
                inl_0->byte_count = (((((unsigned int)spc << 24) | (((unsigned int)spc << 8) & 16711680U)) | (((unsigned int)spc >> 8) & 65280U)) | ((unsigned int)spc >> 24)) | 128U; else 
                                                                    
#line 657 
                                                                    inl_0->byte_count = __fswab32((unsigned int)spc | -2147483648);
    
#line 658 
    if (hlen <= (unsigned int)spc) {
      
#line 659 
      skb_copy_from_linear_data(skb,(void *)(inl_0 + 1U),hlen);
      
#line 660 
      if (hlen < (unsigned int)spc) {
        
#line 661 
        memcpy((void *)(inl_0 + 1U) + hlen,(void const *)fragptr,(unsigned long)((unsigned int)spc - hlen));
        
#line 663 
        fragptr += (unsigned int)spc - hlen;
      }
      else ;
      
#line 665 
      inl_0 += (unsigned int)spc + 1U;
      
#line 666 
      memcpy((void *)(inl_0 + 1U),(void const *)fragptr,(unsigned long)(skb->len - (unsigned int)spc));
    }
    else {
      
#line 668 
      skb_copy_from_linear_data(skb,(void *)(inl_0 + 1U),(unsigned int)spc);
      
#line 669 
      inl_0 += (unsigned int)spc + 1U;
      
#line 670 
      skb_copy_from_linear_data_offset(skb,spc,(void *)(inl_0 + 1U),hlen - (unsigned int)spc);
      
#line 672 
      if ((unsigned int)shinfo->nr_frags != 0U) {
        unsigned int tmp_3;
        
#line 675 
        tmp_3 = skb_frag_size(& shinfo->frags[0]);
        
#line 673 
        ;
        
#line 673 
        ;
        
#line 673 
        memcpy((void *)(inl_0 + 1U) + (hlen + (unsigned int)(- spc)),(void const *)fragptr,(unsigned long)tmp_3);
      }
      else ;
    }
    
#line 677 
    ldv_inline_asm();
    
#line 679 
    if (0 != 0) 
#line 679 
                inl_0->byte_count = (((((skb->len - (unsigned int)spc) << 24) | (((skb->len - (unsigned int)spc) << 8) & 16711680U)) | (((skb->len - (unsigned int)spc) >> 8) & 65280U)) | ((skb->len - (unsigned int)spc) >> 24)) | 128U; else 
                                                                    
#line 679 
                                                                    inl_0->byte_count = __fswab32((skb->len - (unsigned int)spc) | 2147483648U);
  }
  
#line 681 
  return;
}


#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
u16 mlx4_en_select_queue(struct net_device *dev, struct sk_buff *skb, void *accel_priv, u16 (*fallback)(struct net_device *, struct sk_buff *))
{
  u16 __retres;
  u16 tmp_1;
  
#line 686 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 687 
  u16 rings_p_up = (unsigned short)priv->num_tx_rings_p_up;
  
#line 688 
  u8 up_0 = (unsigned char)0U;
  
#line 690 
  if ((unsigned int)dev->num_tc != 0U) {
    u16 tmp_0;
    
#line 691 
    tmp_0 = skb_tx_hash((struct net_device const *)dev,skb);
    
#line 691 
    __retres = tmp_0;
    
#line 691 
    goto return_label;
  }
  else ;
  
#line 693 
  if (((int)skb->vlan_tci & 4096) != 0) 
#line 694 
                                        up_0 = (unsigned char)((int)skb->vlan_tci >> 13); else ;
  
#line 696 
  tmp_1 = (*fallback)(dev,skb);
  
#line 696 
  ;
  
#line 696 
  __retres = (unsigned short)((int)((unsigned short)((int)tmp_1 % (int)rings_p_up)) + (int)((unsigned short)up_0) * (int)rings_p_up);
  return_label: 
#line 696 
                return __retres;
}


#line 699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
static void mlx4_bf_copy(void *dst, void const *src, unsigned int bytecnt)
{
  
#line 702 
  __iowrite64_copy(dst,src,(unsigned long)(bytecnt / 8U));
  
#line 703 
  return;
}


#line 705  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_tx.c"
netdev_tx_t mlx4_en_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  struct mlx4_en_tx_ring *ring;
  struct mlx4_en_tx_desc *tx_desc;
  struct mlx4_wqe_data_seg *data;
  struct mlx4_en_tx_info *tx_info;
  int nr_txbb;
  int desc_size;
  int real_size;
  u32 index;
  u32 bf_index;
  __be32 op_own;
  int i_frag;
  int lso_header_size;
  bool send_doorbell;
  bool stop_queue;
  bool inline_ok;
  u32 ring_cons;
  u16 tmp_1;
  u32 volatile *tmp_2;
  int tmp_4;
  unsigned int tmp_3;
  int tmp_19;
  unsigned int tmp_29;
  unsigned long long tmp_31;
  
#line 707 
  struct skb_shared_info *shinfo = skb_end_pointer((struct sk_buff const *)skb);
  
#line 708 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 709 
  struct device *ddev = priv->ddev;
  
#line 714 
  int tx_ind = 0;
  
#line 720 
  u16 vlan_tag = (unsigned short)0U;
  
#line 723 
  void *fragptr = (void *)0;
  
#line 724 
  bool bounce = (_Bool)0;
  
#line 730 
  if (! priv->port_up) 
#line 731 
                       goto tx_drop; else ;
  
#line 733 
  tmp_1 = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 733 
  tx_ind = (int)tmp_1;
  
#line 734 
  ring = *(priv->tx_ring + tx_ind);
  {
    
#line 737 
    u32 __var = 0U;
    
#line 737 
    tmp_2 = (u32 volatile *)(& ring->cons);
  }
  
#line 737 
  ring_cons = *tmp_2;
  
#line 739 
  real_size = get_real_size((struct sk_buff const *)skb,(struct skb_shared_info const *)shinfo,dev,& lso_header_size,& inline_ok,& fragptr);
  
#line 741 
  if ((long)(real_size == 0) != 0L) 
#line 742 
                                    goto tx_drop; else ;
  
#line 745 
  desc_size = (real_size + 63) & -64;
  
#line 746 
  nr_txbb = desc_size / 64;
  
#line 747 
  if ((long)(nr_txbb > 8) != 0L) {
    
#line 748 
    if ((priv->msg_enable & 128U) != 0U) 
#line 749 
                                         en_print("\001",(struct mlx4_en_priv const *)priv,"Oversized header or SG list\n"); else ;
    
#line 750 
    goto tx_drop;
  }
  else ;
  
#line 753 
  if (((int)skb->vlan_tci & 4096) != 0) 
#line 754 
                                        vlan_tag = (unsigned short)((unsigned int)skb->vlan_tci & 61439U); else ;
  
#line 757 
  netdev_txq_bql_enqueue_prefetchw(ring->tx_queue);
  
#line 764 
  index = ring->prod & ring->size_mask;
  
#line 765 
  bf_index = ring->prod;
  
#line 769 
  if ((long)(index + (unsigned int)nr_txbb <= ring->size) != 0L) 
#line 770 
                                                                 tx_desc = (struct mlx4_en_tx_desc *)(ring->buf + index * 64U);
  else {
    
#line 772 
    tx_desc = (struct mlx4_en_tx_desc *)ring->bounce_buf;
    
#line 773 
    bounce = (_Bool)1;
  }
  
#line 777 
  tx_info = ring->tx_info + index;
  
#line 778 
  tx_info->skb = skb;
  
#line 779 
  tx_info->nr_txbb = (unsigned int)nr_txbb;
  
#line 781 
  data = & tx_desc->__anonCompField_mlx4_en_tx_desc_121.data;
  
#line 782 
  if (lso_header_size != 0) 
#line 783 
                            data = (struct mlx4_wqe_data_seg *)(& tx_desc->__anonCompField_mlx4_en_tx_desc_121.lso) + ((lso_header_size + 19) & -16); else ;
  
#line 787 
  tx_info->data_offset = (unsigned char)((long)data - (long)tx_desc);
  
#line 789 
  tx_info->inl = (unsigned char)inline_ok;
  
#line 791 
  tmp_3 = skb_headlen((struct sk_buff const *)skb);
  
#line 791 
  ;
  
#line 791 
  if (tmp_3 > (unsigned int)lso_header_size) 
    
#line 792 
    if (! inline_ok) 
#line 791 
                     tmp_4 = 1; else 
#line 791 
                                     tmp_4 = 0;
  else 
#line 791 
       tmp_4 = 0;
  
#line 791 
  tx_info->linear = (unsigned char)tmp_4;
  
#line 794 
  tx_info->nr_maps = (unsigned char)((int)shinfo->nr_frags + (int)tx_info->linear);
  
#line 795 
  data += (unsigned long)tx_info->nr_maps + 18446744073709551615U;
  
#line 797 
  if ((unsigned int)tx_info->inl == 0U) {
    
#line 798 
    dma_addr_t dma = 0ULL;
    
#line 799 
    u32 byte_count = 0U;
    
#line 802 
    i_frag = (int)shinfo->nr_frags + -1;
    
#line 802 
    goto ldv_55502;
    ldv_55501: 
#line 803 
    ;
    {
      struct skb_frag_struct const *frag;
      int tmp_5;
      
#line 805 
      frag = (struct skb_frag_struct const *)(& shinfo->frags[i_frag]);
      
#line 806 
      byte_count = skb_frag_size(frag);
      
#line 807 
      dma = skb_frag_dma_map(ddev,frag,0UL,(unsigned long)byte_count,(enum dma_data_direction)DMA_TO_DEVICE);
      
#line 810 
      tmp_5 = dma_mapping_error(ddev,dma);
      
#line 810 
      if (tmp_5 != 0) 
#line 811 
                      goto tx_drop_unmap; else ;
      
#line 813 
      if (0 != 0) 
#line 813 
                  data->addr = (((((((dma << 56) | ((dma << 40) & 71776119061217280ULL)) | ((dma << 24) & 280375465082880ULL)) | ((dma << 8) & 1095216660480ULL)) | ((dma >> 8) & 4278190080ULL)) | ((dma >> 24) & 16711680ULL)) | ((dma >> 40) & 65280ULL)) | (dma >> 56); else 
                                                                    
#line 813 
                                                                    data->addr = __fswab64(dma);
      
#line 814 
      data->lkey = ring->mr_key;
      
#line 815 
      ldv_inline_asm();
      
#line 816 
      if (0 != 0) 
#line 816 
                  data->byte_count = (((byte_count << 24) | ((byte_count << 8) & 16711680U)) | ((byte_count >> 8) & 65280U)) | (byte_count >> 24); else 
                                                                    
#line 816 
                                                                    data->byte_count = __fswab32(byte_count);
      
#line 817 
      data -= 1;
    }
    
#line 802 
    i_frag -= 1;
    ldv_55502: 
#line 803 
    ;
    
#line 802 
    if (i_frag >= 0) 
#line 804 
                     goto ldv_55501; else 
#line 807 
                                          goto ldv_55503;
    ldv_55503: 
#line 808 
    ;
    
#line 821 
    if ((unsigned int)tx_info->linear != 0U) {
      unsigned int tmp_8;
      int tmp_9;
      
#line 822 
      tmp_8 = skb_headlen((struct sk_buff const *)skb);
      
#line 822 
      byte_count = tmp_8 - (unsigned int)lso_header_size;
      
#line 824 
      dma = dma_map_single_attrs(ddev,(void *)(skb->data + lso_header_size),(unsigned long)byte_count,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      
#line 827 
      tmp_9 = dma_mapping_error(ddev,dma);
      
#line 827 
      if (tmp_9 != 0) 
#line 828 
                      goto tx_drop_unmap; else ;
      
#line 830 
      if (0 != 0) 
#line 830 
                  data->addr = (((((((dma << 56) | ((dma << 40) & 71776119061217280ULL)) | ((dma << 24) & 280375465082880ULL)) | ((dma << 8) & 1095216660480ULL)) | ((dma >> 8) & 4278190080ULL)) | ((dma >> 24) & 16711680ULL)) | ((dma >> 40) & 65280ULL)) | (dma >> 56); else 
                                                                    
#line 830 
                                                                    data->addr = __fswab64(dma);
      
#line 831 
      data->lkey = ring->mr_key;
      
#line 832 
      ldv_inline_asm();
      
#line 833 
      if (0 != 0) 
#line 833 
                  data->byte_count = (((byte_count << 24) | ((byte_count << 8) & 16711680U)) | ((byte_count >> 8) & 65280U)) | (byte_count >> 24); else 
                                                                    
#line 833 
                                                                    data->byte_count = __fswab32(byte_count);
    }
    else ;
    
#line 836 
    tx_info->map0_dma = dma;
    
#line 837 
    tx_info->map0_byte_count = byte_count;
  }
  else ;
  
#line 844 
  tx_info->ts_requested = (unsigned char)0U;
  
#line 845 
  if ((long)(ring->hwtstamp_tx_type == 1) != 0L && (long)(((int)shinfo->tx_flags & 1) != 0) != 0L) {
    
#line 847 
    shinfo->tx_flags = (unsigned char)((unsigned int)shinfo->tx_flags | 4U);
    
#line 848 
    tx_info->ts_requested = (unsigned char)1U;
  }
  else ;
  
#line 853 
  tx_desc->ctrl.__anonCompField_mlx4_wqe_ctrl_seg_94.srcrb_flags = priv->ctrl_flags;
  
#line 854 
  if ((long)((unsigned int)*((unsigned char *)skb + 145UL) == 6U) != 0L) {
    
#line 855 
    if ((unsigned int)*((unsigned char *)skb + 146UL) == 0U) 
#line 856 
                                                             tx_desc->ctrl.__anonCompField_mlx4_wqe_ctrl_seg_94.srcrb_flags |= 805306368U; else 
                                                                    
#line 859 
                                                                    tx_desc->ctrl.__anonCompField_mlx4_wqe_ctrl_seg_94.srcrb_flags |= 268435456U;
    
#line 860 
    ring->tx_csum += 1UL;
  }
  else ;
  
#line 863 
  if ((priv->flags & 4U) != 0U) {
    struct ethhdr *ethh;
    
#line 869 
    ethh = (struct ethhdr *)skb->data;
    
#line 870 
    tx_desc->ctrl.__anonCompField_mlx4_wqe_ctrl_seg_94.srcrb_flags16[0] = get_unaligned_le16((void const *)(& ethh->h_dest));
    
#line 871 
    tx_desc->ctrl.imm = get_unaligned_le32((void const *)(& ethh->h_dest) + 2U);
  }
  else ;
  
#line 875 
  if (lso_header_size != 0) {
    int i;
    
#line 879 
    if ((ring->prod & ring->size) != 0U) 
#line 879 
                                         op_own = 1308622976U; else 
#line 879 
                                                                    op_own = 1308622848U;
    
#line 884 
    if (0 != 0) 
#line 884 
                tx_desc->__anonCompField_mlx4_en_tx_desc_121.lso.mss_hdr_size = ((((unsigned int)(((int)shinfo->gso_size << 16) | lso_header_size) << 24) | (((unsigned int)(((int)shinfo->gso_size << 16) | lso_header_size) << 8) & 16711680U)) | (((unsigned int)(((int)shinfo->gso_size << 16) | lso_header_size) >> 8) & 65280U)) | ((unsigned int)(((int)shinfo->gso_size << 16) | lso_header_size) >> 24); else 
                                                                    
#line 884 
                                                                    tx_desc->__anonCompField_mlx4_en_tx_desc_121.lso.mss_hdr_size = __fswab32((unsigned int)(((int)shinfo->gso_size << 16) | lso_header_size));
    
#line 889 
    memcpy((void *)(& tx_desc->__anonCompField_mlx4_en_tx_desc_121.lso.header),(void const *)skb->data,(unsigned long)lso_header_size);
    
#line 891 
    ring->tso_packets += 1UL;
    
#line 893 
    i = (int)((skb->len - (unsigned int)lso_header_size) / (unsigned int)shinfo->gso_size + (unsigned int)((skb->len - (unsigned int)lso_header_size) % (unsigned int)shinfo->gso_size != 0U));
    
#line 895 
    tx_info->nr_bytes = skb->len + (unsigned int)((i + -1) * lso_header_size);
    
#line 896 
    ring->packets += (unsigned long)i;
  }
  else {
    unsigned int tmp_16;
    
#line 899 
    if ((ring->prod & ring->size) != 0U) 
#line 899 
                                         op_own = 167772288U; else 
#line 899 
                                                                   op_own = 167772160U;
    {
      unsigned int tmp_15;
      
#line 902 
      unsigned int __max1 = skb->len;
      
#line 902 
      unsigned int __max2 = 60U;
      
#line 902 
      if (__max1 > __max2) 
#line 902 
                           tmp_15 = __max1; else 
#line 902 
                                                 tmp_15 = __max2;
      
#line 902 
      tmp_16 = tmp_15;
    }
    
#line 902 
    tx_info->nr_bytes = tmp_16;
    
#line 903 
    ring->packets += 1UL;
  }
  
#line 905 
  ring->bytes += (unsigned long)tx_info->nr_bytes;
  
#line 906 
  netdev_tx_sent_queue(ring->tx_queue,tx_info->nr_bytes);
  
#line 909 
  if ((unsigned int)tx_info->inl != 0U) 
#line 910 
                                        build_inline_wqe(tx_desc,(struct sk_buff const *)skb,(struct skb_shared_info const *)shinfo,real_size,& vlan_tag,tx_ind,fragptr); else ;
  
#line 913 
  if ((unsigned int)*((unsigned char *)skb + 146UL) != 0U) {
    
#line 914 
    struct iphdr *ipv4 = skb_inner_network_header((struct sk_buff const *)skb);
    
#line 915 
    if ((unsigned int)ipv4->protocol == 6U || (unsigned int)ipv4->protocol == 17U) 
      
#line 916 
      op_own |= 24U; else 
#line 918 
                          op_own |= 16U;
  }
  else ;
  
#line 921 
  ring->prod += (unsigned int)nr_txbb;
  
#line 924 
  if ((long)((int)bounce != 0) != 0L) 
#line 925 
                                      tx_desc = mlx4_en_bounce_to_desc(priv,ring,index,(unsigned int)desc_size); else ;
  
#line 927 
  skb_tx_timestamp(skb);
  
#line 930 
  stop_queue = mlx4_en_is_tx_ring_full(ring);
  
#line 931 
  if ((long)((int)stop_queue != 0) != 0L) {
    
#line 932 
    netif_tx_start_queue(ring->tx_queue);
    
#line 933 
    ring->queue_stopped += 1UL;
  }
  else ;
  
#line 935 
  if ((unsigned int)*((unsigned char *)skb + 142UL) == 0U) 
#line 935 
                                                           tmp_19 = 1;
  else {
    bool tmp_18;
    
#line 935 
    tmp_18 = netif_xmit_stopped((struct netdev_queue const *)ring->tx_queue);
    
#line 935 
    if ((int)tmp_18 != 0) 
#line 935 
                          tmp_19 = 1; else 
#line 935 
                                           tmp_19 = 0;
  }
  
#line 935 
  send_doorbell = (_Bool)(tmp_19 != 0);
  
#line 937 
  real_size = real_size / 16 & 63;
  
#line 939 
  if ((((int)ring->bf_enabled != 0 && (desc_size <= 256 && ! bounce)) && ((int)skb->vlan_tci & 4096) == 0) && (int)send_doorbell != 0) {
    unsigned int tmp_21;
    unsigned int tmp_23;
    
#line 942 
    if (0 != 0) 
#line 942 
                tmp_21 = ((((unsigned int)real_size << 24) | (((unsigned int)real_size << 8) & 16711680U)) | (((unsigned int)real_size >> 8) & 65280U)) | ((unsigned int)real_size >> 24); else 
                                                                    
#line 942 
                                                                    tmp_21 = __fswab32((unsigned int)real_size);
    
#line 941 
    tx_desc->ctrl.__anonCompField_mlx4_wqe_ctrl_seg_93.bf_qpn = ring->doorbell_qpn | tmp_21;
    
#line 944 
    if (0 != 0) 
#line 944 
                tmp_23 = (((bf_index << 8) << 8) & 16776960U) | (((bf_index << 8) >> 8) & 65280U); else 
                                                                    
#line 944 
                                                                    tmp_23 = __fswab32((bf_index << 8) & 16776960U);
    
#line 944 
    op_own = tmp_23 | op_own;
    
#line 945 
    ldv_inline_asm();
    
#line 949 
    tx_desc->ctrl.owner_opcode = op_own;
    
#line 950 
    ldv_inline_asm();
    
#line 953 
    mlx4_bf_copy(ring->bf.reg + ring->bf.offset,(void const *)(& tx_desc->ctrl),(unsigned int)desc_size);
    
#line 954 
    ldv_inline_asm();
    
#line 958 
    ring->bf.offset ^= (unsigned int)ring->bf.buf_size;
  }
  else {
    
#line 960 
    if (0 != 0) 
#line 960 
                tx_desc->ctrl.__anonCompField_mlx4_wqe_ctrl_seg_93.__anonCompField___anonunion_2612_92.vlan_tag = (unsigned short)(((int)vlan_tag << 8) | ((int)vlan_tag >> 8)); else 
                                                                    
#line 960 
                                                                    tx_desc->ctrl.__anonCompField_mlx4_wqe_ctrl_seg_93.__anonCompField___anonunion_2612_92.vlan_tag = __fswab16((unsigned short)((int)vlan_tag));
    
#line 961 
    tx_desc->ctrl.__anonCompField_mlx4_wqe_ctrl_seg_93.__anonCompField___anonunion_2612_92.ins_vlan = (unsigned char)((unsigned int)((unsigned char)((int)skb->vlan_tci >> 6)) & 64U);
    
#line 963 
    tx_desc->ctrl.__anonCompField_mlx4_wqe_ctrl_seg_93.__anonCompField___anonunion_2612_92.fence_size = (unsigned char)real_size;
    
#line 964 
    ldv_inline_asm();
    
#line 969 
    tx_desc->ctrl.owner_opcode = op_own;
    
#line 970 
    if ((int)send_doorbell != 0) {
      
#line 972 
      ldv_inline_asm();
      
#line 978 
      iowrite32(ring->doorbell_qpn,(ring->bf.uar)->map + 20U);
    }
    else 
#line 985 
         ring->xmit_more += 1UL;
  }
  
#line 989 
  if ((long)((int)stop_queue != 0) != 0L) {
    u32 volatile *tmp_25;
    int tmp_27;
    bool tmp_26;
    
#line 991 
    ldv_inline_asm();
    {
      
#line 998 
      u32 __var_0 = 0U;
      
#line 998 
      tmp_25 = (u32 volatile *)(& ring->cons);
    }
    
#line 998 
    ring_cons = *tmp_25;
    
#line 999 
    tmp_26 = mlx4_en_is_tx_ring_full(ring);
    
#line 999 
    if (tmp_26) 
#line 999 
                tmp_27 = 0; else 
#line 999 
                                 tmp_27 = 1;
    
#line 999 
    if ((long)tmp_27 != 0L) {
      
#line 1000 
      netif_tx_wake_queue(ring->tx_queue);
      
#line 1001 
      ring->wake_queue += 1UL;
    }
    else ;
  }
  else ;
  
#line 1004 
  __retres = NETDEV_TX_OK;
  
#line 1004 
  goto return_label;
  tx_drop_unmap: 
#line 1006 
  ;
  
#line 1007 
  en_print("\001",(struct mlx4_en_priv const *)priv,"DMA mapping error\n");
  
#line 1009 
  goto ldv_55513;
  ldv_55512: 
#line 1010 
  ;
  
#line 1010 
  data += 1;
  
#line 1012 
  if (0 != 0) 
#line 1012 
              tmp_29 = (((data->byte_count << 24) | ((data->byte_count << 8) & 16711680U)) | ((data->byte_count >> 8) & 65280U)) | (data->byte_count >> 24); else 
                                                                    
#line 1012 
                                                                    tmp_29 = __fswab32(data->byte_count);
  
#line 1011 
  if (0 != 0) 
#line 1011 
              tmp_31 = (((((((data->addr << 56) | ((data->addr << 40) & 71776119061217280ULL)) | ((data->addr << 24) & 280375465082880ULL)) | ((data->addr << 8) & 1095216660480ULL)) | ((data->addr >> 8) & 4278190080ULL)) | ((data->addr >> 24) & 16711680ULL)) | ((data->addr >> 40) & 65280ULL)) | (data->addr >> 56); else 
                                                                    
#line 1011 
                                                                    tmp_31 = __fswab64(data->addr);
  
#line 1011 
  ;
  
#line 1011 
  dma_unmap_page(ddev,tmp_31,(unsigned long)tmp_29,(enum dma_data_direction)DMA_TO_DEVICE);
  ldv_55513: 
#line 1013 
  ;
  
#line 1009 
  i_frag += 1;
  
#line 1009 
  ;
  
#line 1009 
  if (i_frag < (int)shinfo->nr_frags) 
#line 1011 
                                      goto ldv_55512; else 
#line 1014 
                                                           goto ldv_55514;
  ldv_55514: 
#line 1015 
  ;
  tx_drop: 
#line 1016 
  ;
  
#line 1017 
  dev_kfree_skb_any(skb);
  
#line 1018 
  priv->stats.tx_dropped += 1UL;
  
#line 1019 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 1019 
                return __retres;
}


#line 412  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_tx.c.aux"
static void *kmalloc_1(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 415 
  tmp = ldv_kmalloc(size,flags);
  
#line 415 
  return tmp;
}


#line 433  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_tx.c.aux"
static void *kzalloc_2(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 436 
  tmp = ldv_kzalloc(size,flags);
  
#line 436 
  return tmp;
}

void *__builtin_memcpy(void *, void const *, unsigned long);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 4  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_rx.c.aux"
void ldv_atomic_add(int i, atomic_t *v);


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u64(u64 n)
{
  int __retres;
  int tmp;
  
#line 42 
  tmp = fls64(n);
  
#line 42 
  __retres = tmp + -1;
  
#line 42 
  return __retres;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __rounddown_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 72 
  tmp = fls_long(n);
  
#line 72 
  __retres = 1UL << (tmp + 4294967295U);
  
#line 72 
  return __retres;
}


#line 292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static int cpumask_test_cpu(int cpu, struct cpumask const *cpumask)
{
  int tmp_0;
  unsigned int tmp;
  
#line 294 
  ;
  
#line 294 
  tmp = cpumask_check((unsigned int)cpu);
  
#line 294 
  tmp_0 = variable_test_bit((long)tmp,(unsigned long const volatile *)(& cpumask->bits));
  
#line 294 
  return tmp_0;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  
#line 39 
  v->counter = i;
  
#line 40 
  return;
}


#line 49 
static void atomic_add(int i, atomic_t *v);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_75_0(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_77(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_76_0(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_78(spinlock_t *lock);


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  
#line 270 
  __preempt_count_add(1);
  
#line 271 
  ldv_inline_asm();
  
#line 272 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  
#line 275 
  ldv_inline_asm();
  
#line 275 
  __preempt_count_sub(1);
  
#line 276 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  __rcu_read_lock();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  __rcu_read_unlock();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_46.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static int page_count(struct page *page)
{
  int tmp_0;
  struct page *tmp;
  
#line 498 
  tmp = compound_head(page);
  
#line 498 
  tmp_0 = atomic_read((atomic_t const *)(& tmp->__anonCompField_page_42.__anonCompField___anonstruct_149_41.__anonCompField___anonunion_151_40._count));
  
#line 498 
  return tmp_0;
}


#line 569 
void put_page(struct page *);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_2(size_t size, gfp_t flags);


#line 581 
static void *kzalloc_3(size_t size, gfp_t flags);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  
#line 89 
  ldv_inline_asm();
  
#line 97 
  return sum;
}


#line 129 
__wsum csum_partial(void const *, int, __wsum);


#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static unsigned int add32_with_carry(unsigned int a, unsigned int b)
{
  
#line 184 
  ldv_inline_asm();
  
#line 188 
  return a;
}


#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_add(__wsum csum, __wsum addend)
{
  __wsum tmp;
  
#line 194 
  tmp = add32_with_carry(csum,addend);
  
#line 194 
  return tmp;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __wsum csum_sub(__wsum csum, __wsum addend)
{
  __wsum tmp;
  
#line 71 
  tmp = csum_add(csum,~ addend);
  
#line 71 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __wsum csum_unfold(__sum16 n)
{
  __wsum __retres;
  
#line 113 
  __retres = (unsigned int)n;
  
#line 113 
  return __retres;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_sub(skb_frag_t *frag, int delta)
{
  
#line 247 
  frag->size -= (unsigned int)delta;
  
#line 248 
  return;
}


#line 772 
void kfree_skb(struct sk_buff *);


#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_hash(struct sk_buff *skb, __u32 hash, enum pkt_hash_types type)
{
  
#line 928 
  skb->l4_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))(type == (unsigned int)PKT_HASH_TYPE_L4);
  
#line 929 
  skb->sw_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 930 
  skb->hash = hash;
  
#line 931 
  return;
}


#line 1000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct skb_shared_hwtstamps *skb_hwtstamps(struct sk_buff *skb)
{
  struct skb_shared_hwtstamps *__retres;
  unsigned char *tmp;
  
#line 1002 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1002 
  __retres = & ((struct skb_shared_info *)tmp)->hwtstamps;
  
#line 1002 
  return __retres;
}


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_frag_unref(skb_frag_t *frag)
{
  struct page *tmp;
  
#line 2308 
  tmp = skb_frag_page((skb_frag_t const *)frag);
  
#line 2308 
  put_page(tmp);
  
#line 2309 
  return;
}


#line 2330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void *skb_frag_address(skb_frag_t const *frag)
{
  void *__retres;
  void *tmp_0;
  struct page *tmp;
  
#line 2332 
  tmp = skb_frag_page(frag);
  
#line 2332 
  tmp_0 = lowmem_page_address((struct page const *)tmp);
  
#line 2332 
  ;
  
#line 2332 
  __retres = tmp_0 + frag->page_offset;
  
#line 2332 
  return __retres;
}


#line 2358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_frag_set_page(skb_frag_t *frag, struct page *page)
{
  
#line 2360 
  frag->page.p = page;
  
#line 2361 
  return;
}


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data(struct sk_buff *skb, void const *from, unsigned int const len)
{
  
#line 2807 
  memcpy((void *)skb->data,from,(unsigned long)len);
  
#line 2808 
  return;
}


#line 3305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_record_rx_queue(struct sk_buff *skb, u16 rx_queue)
{
  
#line 3307 
  skb->queue_mapping = (unsigned short)((unsigned int)rx_queue + 1U);
  
#line 3308 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqdesc.h"
__inline static struct irq_data *irq_desc_get_irq_data(struct irq_desc *desc)
{
  struct irq_data *__retres;
  
#line 115 
  __retres = & desc->irq_data;
  
#line 115 
  return __retres;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_reschedule(struct napi_struct *napi)
{
  bool __retres;
  bool tmp;
  
#line 442 
  tmp = napi_schedule_prep(napi);
  
#line 442 
  if ((int)tmp != 0) {
    
#line 443 
    __napi_schedule(napi);
    
#line 444 
    __retres = (_Bool)1;
    
#line 444 
    goto return_label;
  }
  else ;
  
#line 446 
  __retres = (_Bool)0;
  return_label: 
#line 446 
                return __retres;
}


#line 2892 
int netif_get_num_default_rss_queues(void);


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 2950 
struct sk_buff *napi_get_frags(struct napi_struct *);


#line 2951 
gro_result_t napi_gro_frags(struct napi_struct *);


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/busy_poll.h"
__inline static void skb_mark_napi_id(struct sk_buff *skb, struct napi_struct *napi)
{
  
#line 124 
  skb->__anonCompField_sk_buff_70.napi_id = napi->napi_id;
  
#line 125 
  return;
}


#line 1350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
u32 mlx4_get_eqs_per_port(struct mlx4_dev *, u8);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
u32 eth_get_headlen(void *, unsigned int);


#line 33 
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vmalloc_node(unsigned long, int);


#line 83 
void vfree(void const *);


#line 632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
__inline static bool mlx4_en_cq_lock_napi_0(struct mlx4_en_cq *cq)
{
  bool __retres;
  
#line 634 
  int rc = 1;
  
#line 635 
  ldv_spin_lock_75_0(& cq->poll_lock);
  
#line 636 
  if ((cq->state & 3U) != 0U) {
    {
      
#line 637 
      int __ret_warn_on = (cq->state & 1U) != 0U;
      
#line 637 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 637 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h",637); else ;
      
#line 637 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 638 
    cq->state |= 4U;
    
#line 639 
    rc = 0;
  }
  else 
#line 642 
       cq->state = 1U;
  
#line 643 
  ldv_spin_unlock_76_0(& cq->poll_lock);
  
#line 644 
  __retres = (_Bool)(rc != 0);
  
#line 644 
  return __retres;
}


#line 648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
__inline static bool mlx4_en_cq_unlock_napi(struct mlx4_en_cq *cq)
{
  bool __retres;
  
#line 650 
  int rc = 0;
  
#line 651 
  ldv_spin_lock_77(& cq->poll_lock);
  {
    
#line 652 
    int __ret_warn_on = (cq->state & 6U) != 0U;
    
#line 652 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 652 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h",653); else ;
    
#line 652 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 655 
  if ((cq->state & 8U) != 0U) 
#line 656 
                              rc = 1; else ;
  
#line 657 
  cq->state = 0U;
  
#line 658 
  ldv_spin_unlock_78(& cq->poll_lock);
  
#line 659 
  __retres = (_Bool)(rc != 0);
  
#line 659 
  return __retres;
}


#line 697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h"
__inline static bool mlx4_en_cq_busy_polling(struct mlx4_en_cq *cq)
{
  bool __retres;
  {
    
#line 699 
    int __ret_warn_on = (cq->state & 3U) == 0U;
    
#line 699 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 699 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h",699); else ;
    
#line 699 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 700 
  __retres = (_Bool)((cq->state & 10U) != 0U);
  
#line 700 
  return __retres;
}


#line 792 
int mlx4_en_poll_rx_cq(struct napi_struct *napi, int budget);


#line 807 
void mlx4_en_rx_irq(struct mlx4_cq *mcq);


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int mlx4_alloc_pages(struct mlx4_en_priv *priv, struct mlx4_en_rx_alloc *page_alloc, struct mlx4_en_frag_info const *frag_info, gfp_t _gfp)
{
  int __retres;
  int order;
  struct page *page;
  dma_addr_t dma;
  int tmp;
  
#line 60 
  order = 3;
  ldv_57435: 
#line 61 
  ;
  {
    
#line 61 
    gfp_t gfp = _gfp;
    
#line 63 
    if (order != 0) 
#line 64 
                    gfp |= 16896U; else ;
    
#line 65 
    page = alloc_pages(gfp,(unsigned int)order);
    
#line 66 
    if ((long)(page != (struct page *)0) != 0L) 
#line 67 
                                                goto ldv_57434; else ;
    
#line 68 
    order -= 1;
    
#line 68 
    if (order < 0) {
      
#line 70 
      __retres = -12;
      
#line 70 
      goto return_label;
    }
    else 
      
#line 68 
      if (4096UL << order < (unsigned long)frag_info->frag_size) {
        
#line 70 
        __retres = -12;
        
#line 70 
        goto return_label;
      }
      else ;
  }
  
#line 60 
  goto ldv_57435;
  ldv_57434: 
#line 61 
  ;
  
#line 72 
  dma = dma_map_page(priv->ddev,page,0UL,4096UL << order,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 74 
  tmp = dma_mapping_error(priv->ddev,dma);
  
#line 74 
  if (tmp != 0) {
    
#line 75 
    put_page(page);
    
#line 76 
    __retres = -12;
    
#line 76 
    goto return_label;
  }
  else ;
  
#line 78 
  page_alloc->page_size = (unsigned int)(4096UL << order);
  
#line 79 
  page_alloc->page = page;
  
#line 80 
  page_alloc->dma = dma;
  
#line 81 
  page_alloc->page_offset = 0U;
  
#line 85 
  atomic_add((int)(page_alloc->page_size / (unsigned int)frag_info->frag_stride + 4294967295U),& page->__anonCompField_page_42.__anonCompField___anonstruct_149_41.__anonCompField___anonunion_151_40._count);
  
#line 87 
  __retres = 0;
  return_label: 
#line 87 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int mlx4_en_alloc_frags(struct mlx4_en_priv *priv, struct mlx4_en_rx_desc *rx_desc, struct mlx4_en_rx_alloc *frags, struct mlx4_en_rx_alloc *ring_alloc, gfp_t gfp)
{
  int __retres;
  struct mlx4_en_rx_alloc page_alloc[4U];
  struct mlx4_en_frag_info const *frag_info;
  struct page *page;
  dma_addr_t dma;
  int i;
  int tmp;
  int tmp_1;
  
#line 102 
  i = 0;
  
#line 102 
  goto ldv_57451;
  ldv_57450: 
#line 103 
  ;
  
#line 103 
  frag_info = (struct mlx4_en_frag_info const *)(& priv->frag_info[i]);
  
#line 104 
  page_alloc[i] = *(ring_alloc + i);
  
#line 105 
  page_alloc[i].page_offset += (unsigned int)frag_info->frag_stride;
  
#line 107 
  if (page_alloc[i].page_offset + (unsigned int)frag_info->frag_stride <= (ring_alloc + i)->page_size) 
    
#line 109 
    goto ldv_57448; else ;
  
#line 111 
  tmp = mlx4_alloc_pages(priv,& page_alloc[i],frag_info,gfp);
  
#line 111 
  if (tmp != 0) 
#line 112 
                goto out; else ;
  ldv_57448: 
#line 113 
  ;
  
#line 102 
  i += 1;
  ldv_57451: 
#line 103 
  ;
  
#line 102 
  if ((int)priv->num_frags > i) 
#line 104 
                                goto ldv_57450; else 
#line 107 
                                                     goto ldv_57452;
  ldv_57452: 
#line 108 
  ;
  
#line 115 
  i = 0;
  
#line 115 
  goto ldv_57454;
  ldv_57453: 
#line 116 
  ;
  
#line 116 
  *(frags + i) = *(ring_alloc + i);
  
#line 117 
  dma = (ring_alloc + i)->dma + (unsigned long long)(ring_alloc + i)->page_offset;
  
#line 118 
  *(ring_alloc + i) = page_alloc[i];
  
#line 119 
  if (0 != 0) 
#line 119 
              rx_desc->data[i].addr = (((((((dma << 56) | ((dma << 40) & 71776119061217280ULL)) | ((dma << 24) & 280375465082880ULL)) | ((dma << 8) & 1095216660480ULL)) | ((dma >> 8) & 4278190080ULL)) | ((dma >> 24) & 16711680ULL)) | ((dma >> 40) & 65280ULL)) | (dma >> 56); else 
                                                                    
#line 119 
                                                                    rx_desc->data[i].addr = __fswab64(dma);
  
#line 115 
  i += 1;
  ldv_57454: 
#line 116 
  ;
  
#line 115 
  if ((int)priv->num_frags > i) 
#line 117 
                                goto ldv_57453; else 
#line 120 
                                                     goto ldv_57455;
  ldv_57455: 
#line 121 
  ;
  
#line 122 
  __retres = 0;
  
#line 122 
  goto return_label;
  out: 
#line 124 
  ;
  
#line 125 
  goto ldv_57457;
  ldv_57456: 
#line 126 
  ;
  
#line 126 
  if (page_alloc[i].page != (ring_alloc + i)->page) {
    
#line 127 
    dma_unmap_page(priv->ddev,page_alloc[i].dma,(unsigned long)page_alloc[i].page_size,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 129 
    page = page_alloc[i].page;
    
#line 130 
    atomic_set(& page->__anonCompField_page_42.__anonCompField___anonstruct_149_41.__anonCompField___anonunion_151_40._count,1);
    
#line 131 
    put_page(page);
  }
  else ;
  ldv_57457: 
#line 133 
  ;
  
#line 125 
  tmp_1 = i;
  
#line 125 
  i -= 1;
  
#line 125 
  ;
  
#line 125 
  if (tmp_1 != 0) 
#line 127 
                  goto ldv_57456; else 
#line 130 
                                       goto ldv_57458;
  ldv_57458: 
#line 131 
  ;
  
#line 134 
  __retres = -12;
  return_label: 
#line 134 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static void mlx4_en_free_frag(struct mlx4_en_priv *priv, struct mlx4_en_rx_alloc *frags, int i)
{
  
#line 141 
  struct mlx4_en_frag_info const *frag_info = (struct mlx4_en_frag_info const *)(& priv->frag_info[i]);
  
#line 142 
  u32 next_frag_end = (frags + i)->page_offset + (unsigned int)((int)frag_info->frag_stride * 2);
  
#line 145 
  if ((frags + i)->page_size < next_frag_end) 
#line 146 
                                              dma_unmap_page(priv->ddev,(frags + i)->dma,(unsigned long)(frags + i)->page_size,(enum dma_data_direction)DMA_FROM_DEVICE); else ;
  
#line 149 
  if ((frags + i)->page != (struct page *)0) 
#line 150 
                                             put_page((frags + i)->page); else ;
  
#line 151 
  return;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int mlx4_en_init_allocator(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring *ring)
{
  int __retres;
  int i;
  struct mlx4_en_rx_alloc *page_alloc;
  int tmp_1;
  
#line 159 
  i = 0;
  
#line 159 
  goto ldv_57475;
  ldv_57474: 
#line 160 
  ;
  {
    int tmp;
    
#line 160 
    struct mlx4_en_frag_info const *frag_info = (struct mlx4_en_frag_info const *)(& priv->frag_info[i]);
    
#line 162 
    tmp = mlx4_alloc_pages(priv,& ring->page_alloc[i],frag_info,464U);
    
#line 162 
    if (tmp != 0) 
#line 164 
                  goto out; else ;
    
#line 166 
    if ((priv->msg_enable & 1U) != 0U) {
      int tmp_0;
      
#line 166 
      tmp_0 = atomic_read((atomic_t const *)(& (ring->page_alloc[i].page)->__anonCompField_page_42.__anonCompField___anonstruct_149_41.__anonCompField___anonunion_151_40._count));
      
#line 166 
      ;
      
#line 166 
      ;
      
#line 166 
      ;
      
#line 166 
      en_print("\001",(struct mlx4_en_priv const *)priv,"  frag %d allocator: - size:%d frags:%d\n",i,ring->page_alloc[i].page_size,tmp_0);
    }
    else ;
  }
  
#line 159 
  i += 1;
  ldv_57475: 
#line 160 
  ;
  
#line 159 
  if ((int)priv->num_frags > i) 
#line 161 
                                goto ldv_57474; else 
#line 164 
                                                     goto ldv_57476;
  ldv_57476: 
#line 165 
  ;
  
#line 170 
  __retres = 0;
  
#line 170 
  goto return_label;
  out: 
#line 172 
  ;
  
#line 173 
  goto ldv_57479;
  ldv_57478: 
#line 174 
  ;
  {
    struct page *page;
    
#line 176 
    page_alloc = & ring->page_alloc[i];
    
#line 177 
    dma_unmap_page(priv->ddev,page_alloc->dma,(unsigned long)page_alloc->page_size,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 179 
    page = page_alloc->page;
    
#line 180 
    atomic_set(& page->__anonCompField_page_42.__anonCompField___anonstruct_149_41.__anonCompField___anonunion_151_40._count,1);
    
#line 181 
    put_page(page);
    
#line 182 
    page_alloc->page = (struct page *)0;
  }
  ldv_57479: 
#line 184 
  ;
  
#line 173 
  tmp_1 = i;
  
#line 173 
  i -= 1;
  
#line 173 
  ;
  
#line 173 
  if (tmp_1 != 0) 
#line 175 
                  goto ldv_57478; else 
#line 178 
                                       goto ldv_57480;
  ldv_57480: 
#line 179 
  ;
  
#line 184 
  __retres = -12;
  return_label: 
#line 184 
                return __retres;
}


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static void mlx4_en_destroy_allocator(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring *ring)
{
  struct mlx4_en_rx_alloc *page_alloc;
  int i;
  
#line 193 
  i = 0;
  
#line 193 
  goto ldv_57492;
  ldv_57491: 
#line 194 
  ;
  {
    
#line 194 
    struct mlx4_en_frag_info const *frag_info = (struct mlx4_en_frag_info const *)(& priv->frag_info[i]);
    
#line 196 
    page_alloc = & ring->page_alloc[i];
    
#line 197 
    if ((priv->msg_enable & 1U) != 0U) {
      int tmp;
      
#line 197 
      tmp = page_count(page_alloc->page);
      
#line 197 
      ;
      
#line 197 
      ;
      
#line 197 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Freeing allocator:%d count:%d\n",i,tmp);
    }
    else ;
    
#line 200 
    dma_unmap_page(priv->ddev,page_alloc->dma,(unsigned long)page_alloc->page_size,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 202 
    goto ldv_57489;
    ldv_57488: 
#line 203 
    ;
    
#line 204 
    put_page(page_alloc->page);
    
#line 205 
    page_alloc->page_offset += (unsigned int)frag_info->frag_stride;
    ldv_57489: 
#line 206 
    ;
    
#line 202 
    if (page_alloc->page_offset + (unsigned int)frag_info->frag_stride < page_alloc->page_size) 
      
#line 205 
      goto ldv_57488; else 
#line 208 
                           goto ldv_57490;
    ldv_57490: 
#line 209 
    ;
    
#line 207 
    page_alloc->page = (struct page *)0;
  }
  
#line 193 
  i += 1;
  ldv_57492: 
#line 194 
  ;
  
#line 193 
  if ((int)priv->num_frags > i) 
#line 195 
                                goto ldv_57491; else 
#line 198 
                                                     goto ldv_57493;
  ldv_57493: 
#line 199 
  ;
  
#line 200 
  return;
}


#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static void mlx4_en_init_rx_desc(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring *ring, int index)
{
  int possible_frags;
  int i;
  
#line 214 
  struct mlx4_en_rx_desc *rx_desc = (struct mlx4_en_rx_desc *)(ring->buf + (int)ring->stride * index);
  
#line 219 
  i = 0;
  
#line 219 
  goto ldv_57503;
  ldv_57502: 
#line 220 
  ;
  
#line 220 
  if (0 != 0) 
#line 220 
              rx_desc->data[i].byte_count = ((unsigned int)priv->frag_info[i].frag_size << 24) | (((unsigned int)priv->frag_info[i].frag_size << 8) & 16711680U); else 
                                                                    
#line 221 
                                                                    rx_desc->data[i].byte_count = __fswab32((unsigned int)priv->frag_info[i].frag_size);
  
#line 222 
  if (0 != 0) 
#line 222 
              rx_desc->data[i].lkey = ((((priv->mdev)->mr.key << 24) | (((priv->mdev)->mr.key << 8) & 16711680U)) | (((priv->mdev)->mr.key >> 8) & 65280U)) | ((priv->mdev)->mr.key >> 24); else 
                                                                    
#line 222 
                                                                    rx_desc->data[i].lkey = __fswab32((priv->mdev)->mr.key);
  
#line 219 
  i += 1;
  ldv_57503: 
#line 220 
  ;
  
#line 219 
  if ((int)priv->num_frags > i) 
#line 221 
                                goto ldv_57502; else 
#line 224 
                                                     goto ldv_57504;
  ldv_57504: 
#line 225 
  ;
  
#line 228 
  possible_frags = (int)((unsigned int)ring->stride / 16U);
  
#line 229 
  i = (int)priv->num_frags;
  
#line 229 
  goto ldv_57506;
  ldv_57505: 
#line 230 
  ;
  
#line 230 
  rx_desc->data[i].byte_count = 0U;
  
#line 231 
  rx_desc->data[i].lkey = 65536U;
  
#line 232 
  rx_desc->data[i].addr = 0ULL;
  
#line 229 
  i += 1;
  ldv_57506: 
#line 230 
  ;
  
#line 229 
  if (i < possible_frags) 
#line 231 
                          goto ldv_57505; else 
#line 234 
                                               goto ldv_57507;
  ldv_57507: 
#line 235 
  ;
  
#line 236 
  return;
}


#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int mlx4_en_prepare_rx_desc(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring *ring, int index, gfp_t gfp)
{
  int tmp;
  
#line 240 
  struct mlx4_en_rx_desc *rx_desc = (struct mlx4_en_rx_desc *)(ring->buf + (int)ring->stride * index);
  
#line 241 
  struct mlx4_en_rx_alloc *frags = (struct mlx4_en_rx_alloc *)(ring->rx_info + (index << (int)priv->log_rx_info));
  
#line 244 
  tmp = mlx4_en_alloc_frags(priv,rx_desc,frags,(struct mlx4_en_rx_alloc *)(& ring->page_alloc),gfp);
  
#line 244 
  return tmp;
}


#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
__inline static bool mlx4_en_is_ring_empty(struct mlx4_en_rx_ring *ring)
{
  bool __retres;
  
#line 249 
  __retres = (_Bool)(ring->prod == ring->cons);
  
#line 249 
  return __retres;
}


#line 252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
__inline static void mlx4_en_update_rx_prod_db(struct mlx4_en_rx_ring *ring)
{
  
#line 254 
  if (0 != 0) 
#line 254 
              *(ring->wqres.db.db) = (ring->prod << 24) | ((ring->prod << 8) & 16711680U); else 
                                                                    
#line 254 
                                                                    *(ring->wqres.db.db) = __fswab32(ring->prod & 65535U);
  
#line 255 
  return;
}


#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static void mlx4_en_free_rx_desc(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring *ring, int index)
{
  struct mlx4_en_rx_alloc *frags;
  int nr;
  
#line 264 
  frags = (struct mlx4_en_rx_alloc *)(ring->rx_info + (index << (int)priv->log_rx_info));
  
#line 265 
  nr = 0;
  
#line 265 
  goto ldv_57530;
  ldv_57529: 
#line 266 
  ;
  
#line 266 
  if ((priv->msg_enable & 1U) != 0U) 
#line 266 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Freeing fragment:%d\n",nr); else ;
  
#line 267 
  mlx4_en_free_frag(priv,frags,nr);
  
#line 265 
  nr += 1;
  ldv_57530: 
#line 266 
  ;
  
#line 265 
  if ((int)priv->num_frags > nr) 
#line 267 
                                 goto ldv_57529; else 
#line 270 
                                                      goto ldv_57531;
  ldv_57531: 
#line 271 
  ;
  
#line 272 
  return;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int mlx4_en_fill_rx_buffers(struct mlx4_en_priv *priv)
{
  int __retres;
  struct mlx4_en_rx_ring *ring;
  int ring_ind;
  int buf_ind;
  int new_size;
  int tmp_68;
  
#line 278 
  buf_ind = 0;
  
#line 278 
  goto ldv_57544;
  ldv_57543: 
#line 279 
  ;
  
#line 279 
  ring_ind = 0;
  
#line 279 
  goto ldv_57541;
  ldv_57540: 
#line 280 
  ;
  
#line 280 
  ring = priv->rx_ring[ring_ind];
  
#line 282 
  tmp_68 = mlx4_en_prepare_rx_desc(priv,ring,(int)ring->actual_size,464U);
  
#line 282 
  if (tmp_68 != 0) 
    
#line 285 
    if (ring->actual_size <= 255U) {
      
#line 286 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to allocate enough rx buffers\n");
      
#line 287 
      __retres = -12;
      
#line 287 
      goto return_label;
    }
    else {
      
#line 289 
      if (0 != 0) {
        unsigned int tmp_66;
        
#line 289 
        if (0 != 0) {
          unsigned int tmp_64;
          
#line 289 
          if (ring->actual_size == 0U) {
            int tmp;
            
#line 289 
            tmp = ____ilog2_NaN();
            
#line 289 
            tmp_64 = (unsigned int)((int)(1UL << tmp));
          }
          else {
            unsigned int tmp_63;
            
#line 289 
            if (((unsigned long long)ring->actual_size & 4611686018427387904ULL) == 0ULL) {
              unsigned int tmp_62;
              
#line 289 
              if (((unsigned long long)ring->actual_size & 2305843009213693952ULL) == 0ULL) {
                unsigned int tmp_61;
                
#line 289 
                if (((unsigned long long)ring->actual_size & 1152921504606846976ULL) == 0ULL) {
                  unsigned int tmp_60;
                  
#line 289 
                  if (((unsigned long long)ring->actual_size & 576460752303423488ULL) == 0ULL) {
                    unsigned int tmp_59;
                    
#line 289 
                    if (((unsigned long long)ring->actual_size & 288230376151711744ULL) == 0ULL) {
                      unsigned int tmp_58;
                      
#line 289 
                      if (((unsigned long long)ring->actual_size & 144115188075855872ULL) == 0ULL) {
                        unsigned int tmp_57;
                        
#line 289 
                        if (((unsigned long long)ring->actual_size & 72057594037927936ULL) == 0ULL) {
                          unsigned int tmp_56;
                          
#line 289 
                          if (((unsigned long long)ring->actual_size & 36028797018963968ULL) == 0ULL) {
                            unsigned int tmp_55;
                            
#line 289 
                            if (((unsigned long long)ring->actual_size & 18014398509481984ULL) == 0ULL) {
                              unsigned int tmp_54;
                              
#line 289 
                              if (((unsigned long long)ring->actual_size & 9007199254740992ULL) == 0ULL) {
                                unsigned int tmp_53;
                                
#line 289 
                                if (((unsigned long long)ring->actual_size & 4503599627370496ULL) == 0ULL) {
                                  unsigned int tmp_52;
                                  
#line 289 
                                  if (((unsigned long long)ring->actual_size & 2251799813685248ULL) == 0ULL) {
                                    unsigned int tmp_51;
                                    
#line 289 
                                    if (((unsigned long long)ring->actual_size & 1125899906842624ULL) == 0ULL) {
                                      unsigned int tmp_50;
                                      
#line 289 
                                      if (((unsigned long long)ring->actual_size & 562949953421312ULL) == 0ULL) {
                                        unsigned int tmp_49;
                                        
#line 289 
                                        if (((unsigned long long)ring->actual_size & 281474976710656ULL) == 0ULL) {
                                          unsigned int tmp_48;
                                          
#line 289 
                                          if (((unsigned long long)ring->actual_size & 140737488355328ULL) == 0ULL) {
                                            unsigned int tmp_47;
                                            
#line 289 
                                            if (((unsigned long long)ring->actual_size & 70368744177664ULL) == 0ULL) {
                                              unsigned int tmp_46;
                                              
#line 289 
                                              if (((unsigned long long)ring->actual_size & 35184372088832ULL) == 0ULL) {
                                                unsigned int tmp_45;
                                                
#line 289 
                                                if (((unsigned long long)ring->actual_size & 17592186044416ULL) == 0ULL) {
                                                  unsigned int tmp_44;
                                                  
#line 289 
                                                  if (((unsigned long long)ring->actual_size & 8796093022208ULL) == 0ULL) {
                                                    unsigned int tmp_43;
                                                    
#line 289 
                                                    if (((unsigned long long)ring->actual_size & 4398046511104ULL) == 0ULL) {
                                                      unsigned int tmp_42;
                                                      
#line 289 
                                                      if (((unsigned long long)ring->actual_size & 2199023255552ULL) == 0ULL) {
                                                        unsigned int tmp_41;
                                                        
#line 289 
                                                        if (((unsigned long long)ring->actual_size & 1099511627776ULL) == 0ULL) {
                                                          unsigned int tmp_40;
                                                          
#line 289 
                                                          if (((unsigned long long)ring->actual_size & 549755813888ULL) == 0ULL) {
                                                            unsigned int tmp_39;
                                                            
#line 289 
                                                            if (((unsigned long long)ring->actual_size & 274877906944ULL) == 0ULL) {
                                                              unsigned int tmp_38;
                                                              
#line 289 
                                                              if (((unsigned long long)ring->actual_size & 137438953472ULL) == 0ULL) {
                                                                unsigned int tmp_37;
                                                                
#line 289 
                                                                if (((unsigned long long)ring->actual_size & 68719476736ULL) == 0ULL) {
                                                                  unsigned int tmp_36;
                                                                  
#line 289 
                                                                  if (
                                                                    ((unsigned long long)ring->actual_size & 34359738368ULL) == 0ULL) {
                                                                    unsigned int tmp_35;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_32;
                                                                    
#line 289 
                                                                    if (
                                                                    ring->actual_size >= (u32)0) {
                                                                    int tmp_31;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 1073741824ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 536870912ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 268435456ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 134217728ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 67108864ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 33554432ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 16777216ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 8388608ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 4194304ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 2097152ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 1048576ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 524288ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 262144ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 131072ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 65536ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 32768ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 16384ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 8192ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 4096ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 2048ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 1024ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 512ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 256ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 128ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 64ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 32ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 16ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 8ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 4ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 2ULL) == 0ULL) {
                                                                    int tmp_1;
                                                                    
#line 289 
                                                                    if (
                                                                    ((unsigned long long)ring->actual_size & 1ULL) == 0ULL) {
                                                                    int tmp_0;
                                                                    
#line 289 
                                                                    tmp_0 = ____ilog2_NaN();
                                                                    
#line 289 
                                                                    tmp_1 = (int)(1UL << tmp_0);
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_1 = 1;
                                                                    
#line 289 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_2 = 2;
                                                                    
#line 289 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_3 = 4;
                                                                    
#line 289 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_4 = 8;
                                                                    
#line 289 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_5 = 16;
                                                                    
#line 289 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_6 = 32;
                                                                    
#line 289 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_7 = 64;
                                                                    
#line 289 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_8 = 128;
                                                                    
#line 289 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_9 = 256;
                                                                    
#line 289 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_10 = 512;
                                                                    
#line 289 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_11 = 1024;
                                                                    
#line 289 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_12 = 2048;
                                                                    
#line 289 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_13 = 4096;
                                                                    
#line 289 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_14 = 8192;
                                                                    
#line 289 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_15 = 16384;
                                                                    
#line 289 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_16 = 32768;
                                                                    
#line 289 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_17 = 65536;
                                                                    
#line 289 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_18 = 131072;
                                                                    
#line 289 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_19 = 262144;
                                                                    
#line 289 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_20 = 524288;
                                                                    
#line 289 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_21 = 1048576;
                                                                    
#line 289 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_22 = 2097152;
                                                                    
#line 289 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_23 = 4194304;
                                                                    
#line 289 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_24 = 8388608;
                                                                    
#line 289 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_25 = 16777216;
                                                                    
#line 289 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_26 = 33554432;
                                                                    
#line 289 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_27 = 67108864;
                                                                    
#line 289 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_28 = 134217728;
                                                                    
#line 289 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_29 = 268435456;
                                                                    
#line 289 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_30 = 536870912;
                                                                    
#line 289 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_31 = 1073741824;
                                                                    
#line 289 
                                                                    tmp_32 = (unsigned int)tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_32 = -2147483648;
                                                                    
#line 289 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_33 = (unsigned int)0;
                                                                    
#line 289 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_34 = (unsigned int)0;
                                                                    
#line 289 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 289 
                                                                    tmp_35 = (unsigned int)0;
                                                                    
#line 289 
                                                                    tmp_36 = tmp_35;
                                                                  }
                                                                  else 
                                                                    
#line 289 
                                                                    tmp_36 = (unsigned int)0;
                                                                  
#line 289 
                                                                  tmp_37 = tmp_36;
                                                                }
                                                                else 
                                                                  
#line 289 
                                                                  tmp_37 = (unsigned int)0;
                                                                
#line 289 
                                                                tmp_38 = tmp_37;
                                                              }
                                                              else 
#line 289 
                                                                   tmp_38 = (unsigned int)0;
                                                              
#line 289 
                                                              tmp_39 = tmp_38;
                                                            }
                                                            else 
#line 289 
                                                                 tmp_39 = (unsigned int)0;
                                                            
#line 289 
                                                            tmp_40 = tmp_39;
                                                          }
                                                          else 
#line 289 
                                                               tmp_40 = (unsigned int)0;
                                                          
#line 289 
                                                          tmp_41 = tmp_40;
                                                        }
                                                        else 
#line 289 
                                                             tmp_41 = (unsigned int)0;
                                                        
#line 289 
                                                        tmp_42 = tmp_41;
                                                      }
                                                      else 
#line 289 
                                                           tmp_42 = (unsigned int)0;
                                                      
#line 289 
                                                      tmp_43 = tmp_42;
                                                    }
                                                    else 
#line 289 
                                                         tmp_43 = (unsigned int)0;
                                                    
#line 289 
                                                    tmp_44 = tmp_43;
                                                  }
                                                  else 
#line 289 
                                                       tmp_44 = (unsigned int)0;
                                                  
#line 289 
                                                  tmp_45 = tmp_44;
                                                }
                                                else 
#line 289 
                                                     tmp_45 = (unsigned int)0;
                                                
#line 289 
                                                tmp_46 = tmp_45;
                                              }
                                              else 
#line 289 
                                                   tmp_46 = (unsigned int)0;
                                              
#line 289 
                                              tmp_47 = tmp_46;
                                            }
                                            else 
#line 289 
                                                 tmp_47 = (unsigned int)0;
                                            
#line 289 
                                            tmp_48 = tmp_47;
                                          }
                                          else 
#line 289 
                                               tmp_48 = (unsigned int)0;
                                          
#line 289 
                                          tmp_49 = tmp_48;
                                        }
                                        else 
#line 289 
                                             tmp_49 = (unsigned int)0;
                                        
#line 289 
                                        tmp_50 = tmp_49;
                                      }
                                      else 
#line 289 
                                           tmp_50 = (unsigned int)0;
                                      
#line 289 
                                      tmp_51 = tmp_50;
                                    }
                                    else 
#line 289 
                                         tmp_51 = (unsigned int)0;
                                    
#line 289 
                                    tmp_52 = tmp_51;
                                  }
                                  else 
#line 289 
                                       tmp_52 = (unsigned int)0;
                                  
#line 289 
                                  tmp_53 = tmp_52;
                                }
                                else 
#line 289 
                                     tmp_53 = (unsigned int)0;
                                
#line 289 
                                tmp_54 = tmp_53;
                              }
                              else 
#line 289 
                                   tmp_54 = (unsigned int)0;
                              
#line 289 
                              tmp_55 = tmp_54;
                            }
                            else 
#line 289 
                                 tmp_55 = (unsigned int)0;
                            
#line 289 
                            tmp_56 = tmp_55;
                          }
                          else 
#line 289 
                               tmp_56 = (unsigned int)0;
                          
#line 289 
                          tmp_57 = tmp_56;
                        }
                        else 
#line 289 
                             tmp_57 = (unsigned int)0;
                        
#line 289 
                        tmp_58 = tmp_57;
                      }
                      else 
#line 289 
                           tmp_58 = (unsigned int)0;
                      
#line 289 
                      tmp_59 = tmp_58;
                    }
                    else 
#line 289 
                         tmp_59 = (unsigned int)0;
                    
#line 289 
                    tmp_60 = tmp_59;
                  }
                  else 
#line 289 
                       tmp_60 = (unsigned int)0;
                  
#line 289 
                  tmp_61 = tmp_60;
                }
                else 
#line 289 
                     tmp_61 = (unsigned int)0;
                
#line 289 
                tmp_62 = tmp_61;
              }
              else 
#line 289 
                   tmp_62 = (unsigned int)0;
              
#line 289 
              tmp_63 = tmp_62;
            }
            else 
#line 289 
                 tmp_63 = (unsigned int)0;
            
#line 289 
            tmp_64 = tmp_63;
          }
          
#line 289 
          tmp_66 = tmp_64;
        }
        else {
          int tmp_65;
          
#line 289 
          tmp_65 = __ilog2_u32(ring->actual_size);
          
#line 289 
          tmp_66 = (unsigned int)((int)(1UL << tmp_65));
        }
        
#line 289 
        new_size = (int)tmp_66;
      }
      else {
        unsigned long tmp_67;
        
#line 289 
        tmp_67 = __rounddown_pow_of_two((unsigned long)ring->actual_size);
        
#line 289 
        new_size = (int)tmp_67;
      }
      
#line 290 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Only %d buffers allocated reducing ring size to %d\n",ring->actual_size,new_size);
      
#line 292 
      goto reduce_rings;
    }
  else ;
  
#line 295 
  ring->actual_size += 1U;
  
#line 296 
  ring->prod += 1U;
  
#line 279 
  ring_ind += 1;
  ldv_57541: 
#line 280 
  ;
  
#line 279 
  if (priv->rx_ring_num > (unsigned int)ring_ind) 
#line 281 
                                                  goto ldv_57540; else 
                                                                    
#line 284 
                                                                    goto ldv_57542;
  ldv_57542: 
#line 285 
  ;
  
#line 278 
  buf_ind += 1;
  ldv_57544: 
#line 279 
  ;
  
#line 278 
  if ((priv->prof)->rx_ring_size > (unsigned int)buf_ind) 
#line 280 
                                                          goto ldv_57543; else 
                                                                    
#line 283 
                                                                    goto ldv_57545;
  ldv_57545: 
#line 284 
  ;
  
#line 299 
  __retres = 0;
  
#line 299 
  goto return_label;
  reduce_rings: 
#line 301 
  ;
  
#line 302 
  ring_ind = 0;
  
#line 302 
  goto ldv_57550;
  ldv_57549: 
#line 303 
  ;
  
#line 303 
  ring = priv->rx_ring[ring_ind];
  
#line 304 
  goto ldv_57547;
  ldv_57546: 
#line 305 
  ;
  
#line 305 
  ring->actual_size -= 1U;
  
#line 306 
  ring->prod -= 1U;
  
#line 307 
  mlx4_en_free_rx_desc(priv,ring,(int)ring->actual_size);
  ldv_57547: 
#line 308 
  ;
  
#line 304 
  if (ring->actual_size > (unsigned int)new_size) 
#line 306 
                                                  goto ldv_57546; else 
                                                                    
#line 309 
                                                                    goto ldv_57548;
  ldv_57548: 
#line 310 
  ;
  
#line 302 
  ring_ind += 1;
  ldv_57550: 
#line 303 
  ;
  
#line 302 
  if (priv->rx_ring_num > (unsigned int)ring_ind) 
#line 304 
                                                  goto ldv_57549; else 
                                                                    
#line 307 
                                                                    goto ldv_57551;
  ldv_57551: 
#line 308 
  ;
  
#line 311 
  __retres = 0;
  return_label: 
#line 311 
                return __retres;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static void mlx4_en_free_rx_buf(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring *ring)
{
  int index;
  int tmp_0;
  bool tmp;
  
#line 319 
  if ((priv->msg_enable & 1U) != 0U) 
#line 319 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Freeing Rx buf - cons:%d prod:%d\n",ring->cons,ring->prod); else ;
  
#line 323 
  goto ldv_57558;
  ldv_57557: 
#line 324 
  ;
  
#line 324 
  index = (int)(ring->cons & ring->size_mask);
  
#line 325 
  if ((priv->msg_enable & 1U) != 0U) 
#line 325 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Processing descriptor:%d\n",index); else ;
  
#line 326 
  mlx4_en_free_rx_desc(priv,ring,index);
  
#line 327 
  ring->cons += 1U;
  ldv_57558: 
#line 328 
  ;
  
#line 323 
  tmp = mlx4_en_is_ring_empty(ring);
  
#line 323 
  if (tmp) 
#line 323 
           tmp_0 = 0; else 
#line 323 
                           tmp_0 = 1;
  
#line 323 
  if (tmp_0) 
#line 325 
             goto ldv_57557; else 
#line 328 
                                  goto ldv_57559;
  ldv_57559: 
#line 329 
  ;
  
#line 330 
  return;
}


#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
void mlx4_en_set_num_rx_rings(struct mlx4_en_dev *mdev)
{
  int i;
  int num_of_eqs;
  int num_rx_rings;
  
#line 336 
  struct mlx4_dev *dev = mdev->dev;
  
#line 338 
  i = 1;
  
#line 338 
  goto ldv_57577;
  ldv_57576: 
#line 339 
  ;
  
#line 338 
  if (dev->caps.port_mask[i] == 2U) {
    int tmp_3;
    bool tmp_4;
    {
      int tmp_1;
      int tmp_2;
      
#line 339 
      int __max1 = 4;
      {
        u32 tmp;
        int tmp_0;
        
#line 339 
        tmp = mlx4_get_eqs_per_port(mdev->dev,(unsigned char)((int)((unsigned char)i)));
        
#line 339 
        int __min1 = (int)tmp;
        
#line 339 
        int __min2 = 16;
        
#line 339 
        if (__min1 < __min2) 
#line 339 
                             tmp_0 = __min1; else 
#line 339 
                                                  tmp_0 = __min2;
        
#line 339 
        tmp_1 = tmp_0;
      }
      
#line 339 
      int __max2 = tmp_1;
      
#line 339 
      if (__max1 > __max2) 
#line 339 
                           tmp_2 = __max1; else 
#line 339 
                                                tmp_2 = __max2;
      
#line 339 
      tmp_3 = tmp_2;
    }
    
#line 339 
    num_of_eqs = tmp_3;
    
#line 344 
    tmp_4 = mlx4_low_memory_profile();
    
#line 344 
    if ((int)tmp_4 == 0) {
      int tmp_7;
      {
        int tmp_6;
        
#line 345 
        int __min1_0 = num_of_eqs;
        
#line 345 
        int __min2_0 = netif_get_num_default_rss_queues();
        
#line 345 
        if (__min1_0 < __min2_0) 
#line 345 
                                 tmp_6 = __min1_0; else 
#line 345 
                                                        tmp_6 = __min2_0;
        
#line 345 
        tmp_7 = tmp_6;
      }
      
#line 344 
      num_rx_rings = tmp_7;
    }
    else 
#line 344 
         num_rx_rings = 4;
    
#line 347 
    if (0 != 0) {
      unsigned int tmp_76;
      
#line 348 
      if (0 != 0) {
        unsigned int tmp_74;
        
#line 348 
        if (num_rx_rings <= 0) {
          int tmp_8;
          
#line 348 
          tmp_8 = ____ilog2_NaN();
          
#line 348 
          tmp_74 = (unsigned int)(1UL << tmp_8);
        }
        else {
          unsigned int tmp_73;
          
#line 348 
          if (num_rx_rings >= 0) {
            unsigned int tmp_72;
            
#line 348 
            if (((unsigned long long)num_rx_rings & 4611686018427387904ULL) == 0ULL) {
              unsigned int tmp_71;
              
#line 348 
              if (((unsigned long long)num_rx_rings & 2305843009213693952ULL) == 0ULL) {
                unsigned int tmp_70;
                
#line 348 
                if (((unsigned long long)num_rx_rings & 1152921504606846976ULL) == 0ULL) {
                  unsigned int tmp_69;
                  
#line 348 
                  if (((unsigned long long)num_rx_rings & 576460752303423488ULL) == 0ULL) {
                    unsigned int tmp_68;
                    
#line 348 
                    if (((unsigned long long)num_rx_rings & 288230376151711744ULL) == 0ULL) {
                      unsigned int tmp_67;
                      
#line 348 
                      if (((unsigned long long)num_rx_rings & 144115188075855872ULL) == 0ULL) {
                        unsigned int tmp_66;
                        
#line 348 
                        if (((unsigned long long)num_rx_rings & 72057594037927936ULL) == 0ULL) {
                          unsigned int tmp_65;
                          
#line 348 
                          if (((unsigned long long)num_rx_rings & 36028797018963968ULL) == 0ULL) {
                            unsigned int tmp_64;
                            
#line 348 
                            if (((unsigned long long)num_rx_rings & 18014398509481984ULL) == 0ULL) {
                              unsigned int tmp_63;
                              
#line 348 
                              if (((unsigned long long)num_rx_rings & 9007199254740992ULL) == 0ULL) {
                                unsigned int tmp_62;
                                
#line 348 
                                if (((unsigned long long)num_rx_rings & 4503599627370496ULL) == 0ULL) {
                                  unsigned int tmp_61;
                                  
#line 348 
                                  if (((unsigned long long)num_rx_rings & 2251799813685248ULL) == 0ULL) {
                                    unsigned int tmp_60;
                                    
#line 348 
                                    if (((unsigned long long)num_rx_rings & 1125899906842624ULL) == 0ULL) {
                                      unsigned int tmp_59;
                                      
#line 348 
                                      if (((unsigned long long)num_rx_rings & 562949953421312ULL) == 0ULL) {
                                        unsigned int tmp_58;
                                        
#line 348 
                                        if (((unsigned long long)num_rx_rings & 281474976710656ULL) == 0ULL) {
                                          unsigned int tmp_57;
                                          
#line 348 
                                          if (((unsigned long long)num_rx_rings & 140737488355328ULL) == 0ULL) {
                                            unsigned int tmp_56;
                                            
#line 348 
                                            if (((unsigned long long)num_rx_rings & 70368744177664ULL) == 0ULL) {
                                              unsigned int tmp_55;
                                              
#line 348 
                                              if (((unsigned long long)num_rx_rings & 35184372088832ULL) == 0ULL) {
                                                unsigned int tmp_54;
                                                
#line 348 
                                                if (((unsigned long long)num_rx_rings & 17592186044416ULL) == 0ULL) {
                                                  unsigned int tmp_53;
                                                  
#line 348 
                                                  if (((unsigned long long)num_rx_rings & 8796093022208ULL) == 0ULL) {
                                                    unsigned int tmp_52;
                                                    
#line 348 
                                                    if (((unsigned long long)num_rx_rings & 4398046511104ULL) == 0ULL) {
                                                      unsigned int tmp_51;
                                                      
#line 348 
                                                      if (((unsigned long long)num_rx_rings & 2199023255552ULL) == 0ULL) {
                                                        unsigned int tmp_50;
                                                        
#line 348 
                                                        if (((unsigned long long)num_rx_rings & 1099511627776ULL) == 0ULL) {
                                                          unsigned int tmp_49;
                                                          
#line 348 
                                                          if (((unsigned long long)num_rx_rings & 549755813888ULL) == 0ULL) {
                                                            unsigned int tmp_48;
                                                            
#line 348 
                                                            if (((unsigned long long)num_rx_rings & 274877906944ULL) == 0ULL) {
                                                              unsigned int tmp_47;
                                                              
#line 348 
                                                              if (((unsigned long long)num_rx_rings & 137438953472ULL) == 0ULL) {
                                                                unsigned int tmp_46;
                                                                
#line 348 
                                                                if (((unsigned long long)num_rx_rings & 68719476736ULL) == 0ULL) {
                                                                  unsigned int tmp_45;
                                                                  
#line 348 
                                                                  if (
                                                                    ((unsigned long long)num_rx_rings & 34359738368ULL) == 0ULL) {
                                                                    unsigned int tmp_44;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_43;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_42;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_41;
                                                                    
#line 348 
                                                                    if (
                                                                    num_rx_rings >= 0) {
                                                                    unsigned int tmp_40;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_39;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_38;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_37;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_36;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_35;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_32;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_31;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_30;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_29;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_28;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_27;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_26;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_25;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_24;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_23;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_22;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_21;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_20;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_19;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_18;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_17;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_16;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_15;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_14;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_13;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_12;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_11;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_10;
                                                                    
#line 348 
                                                                    if (
                                                                    ((unsigned long long)num_rx_rings & 1ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 348 
                                                                    tmp_9 = ____ilog2_NaN();
                                                                    
#line 348 
                                                                    tmp_10 = (unsigned int)(1UL << tmp_9);
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_10 = 1U;
                                                                    
#line 348 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_11 = 2U;
                                                                    
#line 348 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_12 = 4U;
                                                                    
#line 348 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_13 = 8U;
                                                                    
#line 348 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_14 = 16U;
                                                                    
#line 348 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_15 = 32U;
                                                                    
#line 348 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_16 = 64U;
                                                                    
#line 348 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_17 = 128U;
                                                                    
#line 348 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_18 = 256U;
                                                                    
#line 348 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_19 = 512U;
                                                                    
#line 348 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_20 = 1024U;
                                                                    
#line 348 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_21 = 2048U;
                                                                    
#line 348 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_22 = 4096U;
                                                                    
#line 348 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_23 = 8192U;
                                                                    
#line 348 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_24 = 16384U;
                                                                    
#line 348 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_25 = 32768U;
                                                                    
#line 348 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_26 = 65536U;
                                                                    
#line 348 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_27 = 131072U;
                                                                    
#line 348 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_28 = 262144U;
                                                                    
#line 348 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_29 = 524288U;
                                                                    
#line 348 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_30 = 1048576U;
                                                                    
#line 348 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_31 = 2097152U;
                                                                    
#line 348 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_32 = 4194304U;
                                                                    
#line 348 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_33 = 8388608U;
                                                                    
#line 348 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_34 = 16777216U;
                                                                    
#line 348 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_35 = 33554432U;
                                                                    
#line 348 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_36 = 67108864U;
                                                                    
#line 348 
                                                                    tmp_37 = tmp_36;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_37 = 134217728U;
                                                                    
#line 348 
                                                                    tmp_38 = tmp_37;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_38 = 268435456U;
                                                                    
#line 348 
                                                                    tmp_39 = tmp_38;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_39 = 536870912U;
                                                                    
#line 348 
                                                                    tmp_40 = tmp_39;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_40 = 1073741824U;
                                                                    
#line 348 
                                                                    tmp_41 = tmp_40;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_41 = 2147483648U;
                                                                    
#line 348 
                                                                    tmp_42 = tmp_41;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_42 = 0U;
                                                                    
#line 348 
                                                                    tmp_43 = tmp_42;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_43 = 0U;
                                                                    
#line 348 
                                                                    tmp_44 = tmp_43;
                                                                    }
                                                                    else 
                                                                    
#line 348 
                                                                    tmp_44 = 0U;
                                                                    
#line 348 
                                                                    tmp_45 = tmp_44;
                                                                  }
                                                                  else 
                                                                    
#line 348 
                                                                    tmp_45 = 0U;
                                                                  
#line 348 
                                                                  tmp_46 = tmp_45;
                                                                }
                                                                else 
                                                                  
#line 348 
                                                                  tmp_46 = 0U;
                                                                
#line 348 
                                                                tmp_47 = tmp_46;
                                                              }
                                                              else 
#line 348 
                                                                   tmp_47 = 0U;
                                                              
#line 348 
                                                              tmp_48 = tmp_47;
                                                            }
                                                            else 
#line 348 
                                                                 tmp_48 = 0U;
                                                            
#line 348 
                                                            tmp_49 = tmp_48;
                                                          }
                                                          else 
#line 348 
                                                               tmp_49 = 0U;
                                                          
#line 348 
                                                          tmp_50 = tmp_49;
                                                        }
                                                        else 
#line 348 
                                                             tmp_50 = 0U;
                                                        
#line 348 
                                                        tmp_51 = tmp_50;
                                                      }
                                                      else 
#line 348 
                                                           tmp_51 = 0U;
                                                      
#line 348 
                                                      tmp_52 = tmp_51;
                                                    }
                                                    else 
#line 348 
                                                         tmp_52 = 0U;
                                                    
#line 348 
                                                    tmp_53 = tmp_52;
                                                  }
                                                  else 
#line 348 
                                                       tmp_53 = 0U;
                                                  
#line 348 
                                                  tmp_54 = tmp_53;
                                                }
                                                else 
#line 348 
                                                     tmp_54 = 0U;
                                                
#line 348 
                                                tmp_55 = tmp_54;
                                              }
                                              else 
#line 348 
                                                   tmp_55 = 0U;
                                              
#line 348 
                                              tmp_56 = tmp_55;
                                            }
                                            else 
#line 348 
                                                 tmp_56 = 0U;
                                            
#line 348 
                                            tmp_57 = tmp_56;
                                          }
                                          else 
#line 348 
                                               tmp_57 = 0U;
                                          
#line 348 
                                          tmp_58 = tmp_57;
                                        }
                                        else 
#line 348 
                                             tmp_58 = 0U;
                                        
#line 348 
                                        tmp_59 = tmp_58;
                                      }
                                      else 
#line 348 
                                           tmp_59 = 0U;
                                      
#line 348 
                                      tmp_60 = tmp_59;
                                    }
                                    else 
#line 348 
                                         tmp_60 = 0U;
                                    
#line 348 
                                    tmp_61 = tmp_60;
                                  }
                                  else 
#line 348 
                                       tmp_61 = 0U;
                                  
#line 348 
                                  tmp_62 = tmp_61;
                                }
                                else 
#line 348 
                                     tmp_62 = 0U;
                                
#line 348 
                                tmp_63 = tmp_62;
                              }
                              else 
#line 348 
                                   tmp_63 = 0U;
                              
#line 348 
                              tmp_64 = tmp_63;
                            }
                            else 
#line 348 
                                 tmp_64 = 0U;
                            
#line 348 
                            tmp_65 = tmp_64;
                          }
                          else 
#line 348 
                               tmp_65 = 0U;
                          
#line 348 
                          tmp_66 = tmp_65;
                        }
                        else 
#line 348 
                             tmp_66 = 0U;
                        
#line 348 
                        tmp_67 = tmp_66;
                      }
                      else 
#line 348 
                           tmp_67 = 0U;
                      
#line 348 
                      tmp_68 = tmp_67;
                    }
                    else 
#line 348 
                         tmp_68 = 0U;
                    
#line 348 
                    tmp_69 = tmp_68;
                  }
                  else 
#line 348 
                       tmp_69 = 0U;
                  
#line 348 
                  tmp_70 = tmp_69;
                }
                else 
#line 348 
                     tmp_70 = 0U;
                
#line 348 
                tmp_71 = tmp_70;
              }
              else 
#line 348 
                   tmp_71 = 0U;
              
#line 348 
              tmp_72 = tmp_71;
            }
            else 
#line 348 
                 tmp_72 = 0U;
            
#line 348 
            tmp_73 = tmp_72;
          }
          else 
#line 348 
               tmp_73 = 0U;
          
#line 348 
          tmp_74 = tmp_73;
        }
        
#line 348 
        tmp_76 = tmp_74;
      }
      else {
        int tmp_75;
        
#line 348 
        tmp_75 = __ilog2_u32((unsigned int)num_rx_rings);
        
#line 348 
        tmp_76 = (unsigned int)(1UL << tmp_75);
      }
      
#line 347 
      mdev->profile.prof[i].rx_ring_num = tmp_76;
    }
    else {
      unsigned long tmp_77;
      
#line 348 
      tmp_77 = __rounddown_pow_of_two((unsigned long)num_rx_rings);
      
#line 347 
      mdev->profile.prof[i].rx_ring_num = (unsigned int)tmp_77;
    }
  }
  else ;
  
#line 338 
  i += 1;
  ldv_57577: 
#line 339 
  ;
  
#line 338 
  if (dev->caps.num_ports >= i) 
#line 340 
                                goto ldv_57576; else 
#line 343 
                                                     goto ldv_57578;
  ldv_57578: 
#line 344 
  ;
  
#line 345 
  return;
}


#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
int mlx4_en_create_rx_ring(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring **pring, u32 size, u16 stride, int node)
{
  int __retres;
  struct mlx4_en_rx_ring *ring;
  int tmp;
  int tmp_2;
  
#line 356 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 358 
  int err = -12;
  
#line 361 
  ring = (struct mlx4_en_rx_ring *)kzalloc_node(320UL,208U,node);
  
#line 362 
  if (ring == (struct mlx4_en_rx_ring *)0) {
    
#line 363 
    ring = (struct mlx4_en_rx_ring *)kzalloc_3(320UL,208U);
    
#line 364 
    if (ring == (struct mlx4_en_rx_ring *)0) {
      
#line 365 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to allocate RX ring structure\n");
      
#line 366 
      __retres = -12;
      
#line 366 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 370 
  ring->prod = 0U;
  
#line 371 
  ring->cons = 0U;
  
#line 372 
  ring->size = size;
  
#line 373 
  ring->size_mask = size + 4294967295U;
  
#line 374 
  ring->stride = stride;
  
#line 375 
  tmp_2 = fls((int)ring->stride);
  
#line 375 
  ring->log_stride = (unsigned short)((unsigned int)((unsigned short)tmp_2) + 65535U);
  
#line 376 
  ring->buf_size = ring->size * (unsigned int)ring->stride + 64U;
  
#line 378 
  tmp = (int)(size * 128U);
  
#line 380 
  ring->rx_info = vmalloc_node((unsigned long)tmp,node);
  
#line 381 
  if (ring->rx_info == (void *)0) {
    
#line 382 
    ring->rx_info = vmalloc((unsigned long)tmp);
    
#line 383 
    if (ring->rx_info == (void *)0) {
      
#line 384 
      err = -12;
      
#line 385 
      goto err_ring;
    }
    else ;
  }
  else ;
  
#line 389 
  if ((priv->msg_enable & 1U) != 0U) 
#line 389 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Allocated rx_info ring at addr:%p size:%d\n",ring->rx_info,tmp); else ;
  
#line 393 
  set_dev_node(& (((mdev->dev)->persist)->pdev)->dev,node);
  
#line 394 
  err = mlx4_alloc_hwq_res(mdev->dev,& ring->wqres,(int)ring->buf_size,8192);
  
#line 396 
  set_dev_node(& (((mdev->dev)->persist)->pdev)->dev,(mdev->dev)->numa_node);
  
#line 397 
  if (err != 0) 
#line 398 
                goto err_info; else ;
  
#line 400 
  err = mlx4_en_map_buffer(& ring->wqres.buf);
  
#line 401 
  if (err != 0) {
    
#line 402 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to map RX buffer\n");
    
#line 403 
    goto err_hwq;
  }
  else ;
  
#line 405 
  ring->buf = ring->wqres.buf.direct.buf;
  
#line 407 
  ring->hwtstamp_rx_filter = priv->hwtstamp_config.rx_filter;
  
#line 409 
  *pring = ring;
  
#line 410 
  __retres = 0;
  
#line 410 
  goto return_label;
  err_hwq: 
#line 412 
  ;
  
#line 413 
  mlx4_free_hwq_res(mdev->dev,& ring->wqres,(int)ring->buf_size);
  err_info: 
#line 414 
  ;
  
#line 415 
  vfree((void const *)ring->rx_info);
  
#line 416 
  ring->rx_info = (void *)0;
  err_ring: 
#line 417 
  ;
  
#line 418 
  kfree((void const *)ring);
  
#line 419 
  *pring = (struct mlx4_en_rx_ring *)0;
  
#line 421 
  __retres = err;
  return_label: 
#line 421 
                return __retres;
}


#line 424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
int mlx4_en_activate_rx_rings(struct mlx4_en_priv *priv)
{
  int __retres;
  struct mlx4_en_rx_ring *ring;
  int i;
  int ring_ind;
  int err;
  unsigned int tmp_70;
  int tmp_71;
  
#line 430 
  if (0 != 0) {
    unsigned int tmp_68;
    
#line 430 
    if ((unsigned long)priv->num_frags * 16UL != 1UL) {
      unsigned int tmp_67;
      
#line 430 
      if (0 != 0) {
        unsigned int tmp_65;
        
#line 430 
        if ((unsigned long)priv->num_frags * 16UL == 1UL) {
          int tmp;
          
#line 430 
          tmp = ____ilog2_NaN();
          
#line 430 
          tmp_65 = (unsigned int)((int)(1UL << (tmp + 1)));
        }
        else {
          unsigned int tmp_64;
          
#line 430 
          if ((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL >= (unsigned long)0) {
            unsigned int tmp_63;
            
#line 430 
            if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 4611686018427387904ULL) == 0ULL) {
              unsigned int tmp_62;
              
#line 430 
              if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 2305843009213693952ULL) == 0ULL) {
                unsigned int tmp_61;
                
#line 430 
                if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 1152921504606846976ULL) == 0ULL) {
                  unsigned int tmp_60;
                  
#line 430 
                  if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 576460752303423488ULL) == 0ULL) {
                    unsigned int tmp_59;
                    
#line 430 
                    if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 288230376151711744ULL) == 0ULL) {
                      unsigned int tmp_58;
                      
#line 430 
                      if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 144115188075855872ULL) == 0ULL) {
                        unsigned int tmp_57;
                        
#line 430 
                        if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 72057594037927936ULL) == 0ULL) {
                          unsigned int tmp_56;
                          
#line 430 
                          if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 36028797018963968ULL) == 0ULL) {
                            unsigned int tmp_55;
                            
#line 430 
                            if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 18014398509481984ULL) == 0ULL) {
                              unsigned int tmp_54;
                              
#line 430 
                              if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 9007199254740992ULL) == 0ULL) {
                                unsigned int tmp_53;
                                
#line 430 
                                if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 4503599627370496ULL) == 0ULL) {
                                  unsigned int tmp_52;
                                  
#line 430 
                                  if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 2251799813685248ULL) == 0ULL) {
                                    unsigned int tmp_51;
                                    
#line 430 
                                    if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 1125899906842624ULL) == 0ULL) {
                                      unsigned int tmp_50;
                                      
#line 430 
                                      if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 562949953421312ULL) == 0ULL) {
                                        unsigned int tmp_49;
                                        
#line 430 
                                        if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 281474976710656ULL) == 0ULL) {
                                          unsigned int tmp_48;
                                          
#line 430 
                                          if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 140737488355328ULL) == 0ULL) {
                                            unsigned int tmp_47;
                                            
#line 430 
                                            if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 70368744177664ULL) == 0ULL) {
                                              unsigned int tmp_46;
                                              
#line 430 
                                              if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 35184372088832ULL) == 0ULL) {
                                                unsigned int tmp_45;
                                                
#line 430 
                                                if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 17592186044416ULL) == 0ULL) {
                                                  unsigned int tmp_44;
                                                  
#line 430 
                                                  if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 8796093022208ULL) == 0ULL) {
                                                    unsigned int tmp_43;
                                                    
#line 430 
                                                    if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 4398046511104ULL) == 0ULL) {
                                                      unsigned int tmp_42;
                                                      
#line 430 
                                                      if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 2199023255552ULL) == 0ULL) {
                                                        unsigned int tmp_41;
                                                        
#line 430 
                                                        if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 1099511627776ULL) == 0ULL) {
                                                          unsigned int tmp_40;
                                                          
#line 430 
                                                          if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 549755813888ULL) == 0ULL) {
                                                            unsigned int tmp_39;
                                                            
#line 430 
                                                            if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 274877906944ULL) == 0ULL) {
                                                              unsigned int tmp_38;
                                                              
#line 430 
                                                              if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 137438953472ULL) == 0ULL) {
                                                                unsigned int tmp_37;
                                                                
#line 430 
                                                                if (((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 68719476736ULL) == 0ULL) {
                                                                  unsigned int tmp_36;
                                                                  
#line 430 
                                                                  if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 34359738368ULL) == 0ULL) {
                                                                    unsigned int tmp_35;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_32;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 2147483648ULL) == 0ULL) {
                                                                    unsigned int tmp_31;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 1073741824ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 536870912ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 268435456ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 134217728ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 67108864ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 33554432ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 16777216ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 8388608ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 4194304ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 2097152ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 1048576ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 524288ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 262144ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 131072ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 65536ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 32768ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 16384ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 8192ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 4096ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 2048ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 1024ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 512ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 256ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 128ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 64ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 32ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 16ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 8ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 4ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 2ULL) == 0ULL) {
                                                                    int tmp_1;
                                                                    
#line 430 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL) & 1ULL) == 0ULL) {
                                                                    int tmp_0;
                                                                    
#line 430 
                                                                    tmp_0 = ____ilog2_NaN();
                                                                    
#line 430 
                                                                    tmp_1 = (int)(1UL << (tmp_0 + 1));
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_1 = 2;
                                                                    
#line 430 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_2 = 4;
                                                                    
#line 430 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_3 = 8;
                                                                    
#line 430 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_4 = 16;
                                                                    
#line 430 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_5 = 32;
                                                                    
#line 430 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_6 = 64;
                                                                    
#line 430 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_7 = 128;
                                                                    
#line 430 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_8 = 256;
                                                                    
#line 430 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_9 = 512;
                                                                    
#line 430 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_10 = 1024;
                                                                    
#line 430 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_11 = 2048;
                                                                    
#line 430 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_12 = 4096;
                                                                    
#line 430 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_13 = 8192;
                                                                    
#line 430 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_14 = 16384;
                                                                    
#line 430 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_15 = 32768;
                                                                    
#line 430 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_16 = 65536;
                                                                    
#line 430 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_17 = 131072;
                                                                    
#line 430 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_18 = 262144;
                                                                    
#line 430 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_19 = 524288;
                                                                    
#line 430 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_20 = 1048576;
                                                                    
#line 430 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_21 = 2097152;
                                                                    
#line 430 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_22 = 4194304;
                                                                    
#line 430 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_23 = 8388608;
                                                                    
#line 430 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_24 = 16777216;
                                                                    
#line 430 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_25 = 33554432;
                                                                    
#line 430 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_26 = 67108864;
                                                                    
#line 430 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_27 = 134217728;
                                                                    
#line 430 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_28 = 268435456;
                                                                    
#line 430 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_29 = 536870912;
                                                                    
#line 430 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_30 = 1073741824;
                                                                    
#line 430 
                                                                    tmp_31 = (unsigned int)tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_31 = -2147483648;
                                                                    
#line 430 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_32 = (unsigned int)0;
                                                                    
#line 430 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_33 = (unsigned int)0;
                                                                    
#line 430 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_34 = (unsigned int)0;
                                                                    
#line 430 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 430 
                                                                    tmp_35 = (unsigned int)0;
                                                                    
#line 430 
                                                                    tmp_36 = tmp_35;
                                                                  }
                                                                  else 
                                                                    
#line 430 
                                                                    tmp_36 = (unsigned int)0;
                                                                  
#line 430 
                                                                  tmp_37 = tmp_36;
                                                                }
                                                                else 
                                                                  
#line 430 
                                                                  tmp_37 = (unsigned int)0;
                                                                
#line 430 
                                                                tmp_38 = tmp_37;
                                                              }
                                                              else 
#line 430 
                                                                   tmp_38 = (unsigned int)0;
                                                              
#line 430 
                                                              tmp_39 = tmp_38;
                                                            }
                                                            else 
#line 430 
                                                                 tmp_39 = (unsigned int)0;
                                                            
#line 430 
                                                            tmp_40 = tmp_39;
                                                          }
                                                          else 
#line 430 
                                                               tmp_40 = (unsigned int)0;
                                                          
#line 430 
                                                          tmp_41 = tmp_40;
                                                        }
                                                        else 
#line 430 
                                                             tmp_41 = (unsigned int)0;
                                                        
#line 430 
                                                        tmp_42 = tmp_41;
                                                      }
                                                      else 
#line 430 
                                                           tmp_42 = (unsigned int)0;
                                                      
#line 430 
                                                      tmp_43 = tmp_42;
                                                    }
                                                    else 
#line 430 
                                                         tmp_43 = (unsigned int)0;
                                                    
#line 430 
                                                    tmp_44 = tmp_43;
                                                  }
                                                  else 
#line 430 
                                                       tmp_44 = (unsigned int)0;
                                                  
#line 430 
                                                  tmp_45 = tmp_44;
                                                }
                                                else 
#line 430 
                                                     tmp_45 = (unsigned int)0;
                                                
#line 430 
                                                tmp_46 = tmp_45;
                                              }
                                              else 
#line 430 
                                                   tmp_46 = (unsigned int)0;
                                              
#line 430 
                                              tmp_47 = tmp_46;
                                            }
                                            else 
#line 430 
                                                 tmp_47 = (unsigned int)0;
                                            
#line 430 
                                            tmp_48 = tmp_47;
                                          }
                                          else 
#line 430 
                                               tmp_48 = (unsigned int)0;
                                          
#line 430 
                                          tmp_49 = tmp_48;
                                        }
                                        else 
#line 430 
                                             tmp_49 = (unsigned int)0;
                                        
#line 430 
                                        tmp_50 = tmp_49;
                                      }
                                      else 
#line 430 
                                           tmp_50 = (unsigned int)0;
                                      
#line 430 
                                      tmp_51 = tmp_50;
                                    }
                                    else 
#line 430 
                                         tmp_51 = (unsigned int)0;
                                    
#line 430 
                                    tmp_52 = tmp_51;
                                  }
                                  else 
#line 430 
                                       tmp_52 = (unsigned int)0;
                                  
#line 430 
                                  tmp_53 = tmp_52;
                                }
                                else 
#line 430 
                                     tmp_53 = (unsigned int)0;
                                
#line 430 
                                tmp_54 = tmp_53;
                              }
                              else 
#line 430 
                                   tmp_54 = (unsigned int)0;
                              
#line 430 
                              tmp_55 = tmp_54;
                            }
                            else 
#line 430 
                                 tmp_55 = (unsigned int)0;
                            
#line 430 
                            tmp_56 = tmp_55;
                          }
                          else 
#line 430 
                               tmp_56 = (unsigned int)0;
                          
#line 430 
                          tmp_57 = tmp_56;
                        }
                        else 
#line 430 
                             tmp_57 = (unsigned int)0;
                        
#line 430 
                        tmp_58 = tmp_57;
                      }
                      else 
#line 430 
                           tmp_58 = (unsigned int)0;
                      
#line 430 
                      tmp_59 = tmp_58;
                    }
                    else 
#line 430 
                         tmp_59 = (unsigned int)0;
                    
#line 430 
                    tmp_60 = tmp_59;
                  }
                  else 
#line 430 
                       tmp_60 = (unsigned int)0;
                  
#line 430 
                  tmp_61 = tmp_60;
                }
                else 
#line 430 
                     tmp_61 = (unsigned int)0;
                
#line 430 
                tmp_62 = tmp_61;
              }
              else 
#line 430 
                   tmp_62 = (unsigned int)0;
              
#line 430 
              tmp_63 = tmp_62;
            }
            else 
#line 430 
                 tmp_63 = (unsigned int)0;
            
#line 430 
            tmp_64 = tmp_63;
          }
          else 
#line 430 
               tmp_64 = (unsigned int)0;
          
#line 430 
          tmp_65 = tmp_64;
        }
        
#line 430 
        tmp_67 = tmp_65;
      }
      else {
        int tmp_66;
        
#line 430 
        tmp_66 = __ilog2_u64((unsigned long long)((unsigned long)priv->num_frags * 16UL + 18446744073709551615UL));
        
#line 430 
        tmp_67 = (unsigned int)((int)(1UL << (tmp_66 + 1)));
      }
      
#line 430 
      tmp_68 = tmp_67;
    }
    else 
#line 430 
         tmp_68 = (unsigned int)1;
    
#line 430 
    tmp_70 = tmp_68;
  }
  else {
    unsigned long tmp_69;
    
#line 430 
    tmp_69 = __roundup_pow_of_two((unsigned long)priv->num_frags * 16UL);
    
#line 430 
    tmp_70 = (unsigned int)((int)tmp_69);
  }
  
#line 430 
  int stride = (int)tmp_70;
  
#line 433 
  ring_ind = 0;
  
#line 433 
  goto ldv_57606;
  ldv_57605: 
#line 434 
  ;
  
#line 434 
  ring = priv->rx_ring[ring_ind];
  
#line 436 
  ring->prod = 0U;
  
#line 437 
  ring->cons = 0U;
  
#line 438 
  ring->actual_size = 0U;
  
#line 439 
  ring->cqn = (unsigned short)(priv->rx_cq[ring_ind])->mcq.cqn;
  
#line 441 
  ring->stride = (unsigned short)stride;
  
#line 442 
  if ((unsigned int)ring->stride <= 64U) 
#line 443 
                                         ring->buf += 64U; else ;
  
#line 445 
  tmp_71 = fls((int)ring->stride);
  
#line 445 
  ring->log_stride = (unsigned short)((unsigned int)((unsigned short)tmp_71) + 65535U);
  
#line 446 
  ring->buf_size = ring->size * (unsigned int)ring->stride;
  
#line 448 
  memset(ring->buf,0,(unsigned long)ring->buf_size);
  
#line 449 
  mlx4_en_update_rx_prod_db(ring);
  
#line 452 
  i = 0;
  
#line 452 
  goto ldv_57602;
  ldv_57601: 
#line 453 
  ;
  
#line 453 
  mlx4_en_init_rx_desc(priv,ring,i);
  
#line 452 
  i += 1;
  ldv_57602: 
#line 453 
  ;
  
#line 452 
  if (ring->size > (unsigned int)i) 
#line 454 
                                    goto ldv_57601; else 
#line 457 
                                                         goto ldv_57603;
  ldv_57603: 
#line 458 
  ;
  
#line 456 
  err = mlx4_en_init_allocator(priv,ring);
  
#line 457 
  if (err != 0) {
    
#line 458 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed initializing ring allocator\n");
    
#line 459 
    if ((unsigned int)ring->stride <= 64U) 
#line 460 
                                           ring->buf += 18446744073709551552U; else ;
    
#line 461 
    ring_ind -= 1;
    
#line 462 
    goto err_allocator;
  }
  else ;
  
#line 433 
  ring_ind += 1;
  ldv_57606: 
#line 434 
  ;
  
#line 433 
  if (priv->rx_ring_num > (unsigned int)ring_ind) 
#line 435 
                                                  goto ldv_57605; else 
                                                                    
#line 438 
                                                                    goto ldv_57607;
  ldv_57607: 
#line 439 
  ;
  
#line 465 
  err = mlx4_en_fill_rx_buffers(priv);
  
#line 466 
  if (err != 0) 
#line 467 
                goto err_buffers; else ;
  
#line 469 
  ring_ind = 0;
  
#line 469 
  goto ldv_57610;
  ldv_57609: 
#line 470 
  ;
  
#line 470 
  ring = priv->rx_ring[ring_ind];
  
#line 472 
  ring->size_mask = ring->actual_size + 4294967295U;
  
#line 473 
  mlx4_en_update_rx_prod_db(ring);
  
#line 469 
  ring_ind += 1;
  ldv_57610: 
#line 470 
  ;
  
#line 469 
  if (priv->rx_ring_num > (unsigned int)ring_ind) 
#line 471 
                                                  goto ldv_57609; else 
                                                                    
#line 474 
                                                                    goto ldv_57611;
  ldv_57611: 
#line 475 
  ;
  
#line 476 
  __retres = 0;
  
#line 476 
  goto return_label;
  err_buffers: 
#line 478 
  ;
  
#line 479 
  ring_ind = 0;
  
#line 479 
  goto ldv_57613;
  ldv_57612: 
#line 480 
  ;
  
#line 480 
  mlx4_en_free_rx_buf(priv,priv->rx_ring[ring_ind]);
  
#line 479 
  ring_ind += 1;
  ldv_57613: 
#line 480 
  ;
  
#line 479 
  if (priv->rx_ring_num > (unsigned int)ring_ind) 
#line 481 
                                                  goto ldv_57612; else 
                                                                    
#line 484 
                                                                    goto ldv_57614;
  ldv_57614: 
#line 485 
  ;
  
#line 482 
  ring_ind = (int)(priv->rx_ring_num + 4294967295U);
  err_allocator: 
#line 483 
  ;
  
#line 484 
  goto ldv_57616;
  ldv_57615: 
#line 485 
  ;
  
#line 485 
  if ((unsigned int)(priv->rx_ring[ring_ind])->stride <= 64U) 
#line 486 
                                                              (priv->rx_ring[ring_ind])->buf += 18446744073709551552U; else ;
  
#line 487 
  mlx4_en_destroy_allocator(priv,priv->rx_ring[ring_ind]);
  
#line 488 
  ring_ind -= 1;
  ldv_57616: 
#line 489 
  ;
  
#line 484 
  if (ring_ind >= 0) 
#line 486 
                     goto ldv_57615; else 
#line 489 
                                          goto ldv_57617;
  ldv_57617: 
#line 490 
  ;
  
#line 490 
  __retres = err;
  return_label: 
#line 490 
                return __retres;
}


#line 497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
void mlx4_en_recover_from_oom(struct mlx4_en_priv *priv)
{
  int ring;
  bool tmp;
  
#line 501 
  if (! priv->port_up) 
#line 502 
                       goto return_label; else ;
  
#line 504 
  ring = 0;
  
#line 504 
  goto ldv_57623;
  ldv_57622: 
#line 505 
  ;
  
#line 505 
  tmp = mlx4_en_is_ring_empty(priv->rx_ring[ring]);
  
#line 505 
  if ((int)tmp != 0) 
#line 506 
                     napi_reschedule(& (priv->rx_cq[ring])->napi); else ;
  
#line 504 
  ring += 1;
  ldv_57623: 
#line 505 
  ;
  
#line 504 
  if (priv->rx_ring_num > (unsigned int)ring) 
#line 506 
                                              goto ldv_57622; else 
#line 509 
                                                                   goto ldv_57624;
  ldv_57624: 
#line 510 
  ;
  return_label: 
#line 511 
                return;
}


#line 510  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
void mlx4_en_destroy_rx_ring(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring **pring, u32 size, u16 stride)
{
  
#line 514 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 515 
  struct mlx4_en_rx_ring *ring = *pring;
  
#line 517 
  mlx4_en_unmap_buffer(& ring->wqres.buf);
  
#line 518 
  mlx4_free_hwq_res(mdev->dev,& ring->wqres,(int)((unsigned int)stride * size + 64U));
  
#line 519 
  vfree((void const *)ring->rx_info);
  
#line 520 
  ring->rx_info = (void *)0;
  
#line 521 
  kfree((void const *)ring);
  
#line 522 
  *pring = (struct mlx4_en_rx_ring *)0;
  
#line 524 
  mlx4_en_cleanup_filters(priv);
  
#line 525 
  return;
}


#line 528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
void mlx4_en_deactivate_rx_ring(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring *ring)
{
  
#line 531 
  mlx4_en_free_rx_buf(priv,ring);
  
#line 532 
  if ((unsigned int)ring->stride <= 64U) 
#line 533 
                                         ring->buf += 18446744073709551552U; else ;
  
#line 534 
  mlx4_en_destroy_allocator(priv,ring);
  
#line 535 
  return;
}


#line 538  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int mlx4_en_complete_rx_desc(struct mlx4_en_priv *priv, struct mlx4_en_rx_desc *rx_desc, struct mlx4_en_rx_alloc *frags, struct sk_buff *skb, int length)
{
  int __retres;
  unsigned char *tmp;
  struct mlx4_en_frag_info *frag_info;
  int nr;
  dma_addr_t dma;
  
#line 544 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 544 
  struct skb_frag_struct *skb_frags_rx = (struct skb_frag_struct *)(& ((struct skb_shared_info *)tmp)->frags);
  
#line 550 
  nr = 0;
  
#line 550 
  goto ldv_57651;
  ldv_57650: 
#line 551 
  ;
  
#line 551 
  frag_info = & priv->frag_info[nr];
  
#line 552 
  if ((int)frag_info->frag_prefix_size >= length) 
#line 553 
                                                  goto ldv_57648; else ;
  
#line 554 
  if ((frags + nr)->page == (struct page *)0) 
#line 555 
                                              goto fail; else ;
  
#line 557 
  if (0 != 0) 
#line 557 
              dma = (((((((rx_desc->data[nr].addr << 56) | ((rx_desc->data[nr].addr << 40) & 71776119061217280ULL)) | ((rx_desc->data[nr].addr << 24) & 280375465082880ULL)) | ((rx_desc->data[nr].addr << 8) & 1095216660480ULL)) | ((rx_desc->data[nr].addr >> 8) & 4278190080ULL)) | ((rx_desc->data[nr].addr >> 24) & 16711680ULL)) | ((rx_desc->data[nr].addr >> 40) & 65280ULL)) | (rx_desc->data[nr].addr >> 56); else 
                                                                    
#line 557 
                                                                    dma = __fswab64(rx_desc->data[nr].addr);
  
#line 558 
  dma_sync_single_for_cpu(priv->ddev,dma,(unsigned long)frag_info->frag_size,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 562 
  __skb_frag_set_page(skb_frags_rx + nr,(frags + nr)->page);
  
#line 563 
  skb_frag_size_set(skb_frags_rx + nr,(unsigned int)frag_info->frag_size);
  
#line 564 
  (skb_frags_rx + nr)->page_offset = (frags + nr)->page_offset;
  
#line 565 
  skb->truesize += (unsigned int)frag_info->frag_stride;
  
#line 566 
  (frags + nr)->page = (struct page *)0;
  
#line 550 
  nr += 1;
  ldv_57651: 
#line 551 
  ;
  
#line 550 
  if ((int)priv->num_frags > nr) 
#line 552 
                                 goto ldv_57650; else 
#line 555 
                                                      goto ldv_57648;
  ldv_57648: 
#line 556 
  ;
  
#line 569 
  if (nr > 0) 
#line 570 
              skb_frag_size_set(skb_frags_rx + ((unsigned long)nr + 18446744073709551615U),(unsigned int)(length - (int)priv->frag_info[nr + -1].frag_prefix_size)); else ;
  
#line 572 
  __retres = nr;
  
#line 572 
  goto return_label;
  fail: 
#line 574 
  ;
  
#line 575 
  goto ldv_57653;
  ldv_57652: 
#line 576 
  ;
  
#line 576 
  nr -= 1;
  
#line 577 
  __skb_frag_unref(skb_frags_rx + nr);
  ldv_57653: 
#line 578 
  ;
  
#line 575 
  if (nr > 0) 
#line 577 
              goto ldv_57652; else 
#line 580 
                                   goto ldv_57654;
  ldv_57654: 
#line 581 
  ;
  
#line 579 
  __retres = 0;
  return_label: 
#line 579 
                return __retres;
}


#line 583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static struct sk_buff *mlx4_en_rx_skb(struct mlx4_en_priv *priv, struct mlx4_en_rx_desc *rx_desc, struct mlx4_en_rx_alloc *frags, unsigned int length)
{
  struct sk_buff *__retres;
  struct sk_buff *skb;
  void *va;
  int used_frags;
  dma_addr_t dma;
  void *tmp;
  
#line 593 
  skb = netdev_alloc_skb(priv->dev,256U);
  
#line 594 
  if (skb == (struct sk_buff *)0) {
    
#line 595 
    if ((priv->msg_enable & 64U) != 0U) 
#line 595 
                                        en_print("\001",(struct mlx4_en_priv const *)priv,"Failed allocating skb\n"); else ;
    
#line 596 
    __retres = (struct sk_buff *)0;
    
#line 596 
    goto return_label;
  }
  else ;
  
#line 598 
  skb_reserve(skb,0);
  
#line 599 
  skb->len = length;
  
#line 603 
  tmp = lowmem_page_address((struct page const *)frags->page);
  
#line 603 
  va = tmp + frags->page_offset;
  
#line 605 
  if (length <= 256U) {
    
#line 608 
    if (0 != 0) 
#line 608 
                dma = (((((((rx_desc->data[0].addr << 56) | ((rx_desc->data[0].addr << 40) & 71776119061217280ULL)) | ((rx_desc->data[0].addr << 24) & 280375465082880ULL)) | ((rx_desc->data[0].addr << 8) & 1095216660480ULL)) | ((rx_desc->data[0].addr >> 8) & 4278190080ULL)) | ((rx_desc->data[0].addr >> 24) & 16711680ULL)) | ((rx_desc->data[0].addr >> 40) & 65280ULL)) | (rx_desc->data[0].addr >> 56); else 
                                                                    
#line 608 
                                                                    dma = __fswab64(rx_desc->data[0].addr);
    
#line 609 
    dma_sync_single_for_cpu(priv->ddev,dma,(unsigned long)length,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 611 
    skb_copy_to_linear_data(skb,(void const *)va,length);
    
#line 612 
    skb->tail += length;
  }
  else {
    unsigned int pull_len;
    unsigned char *tmp_1;
    unsigned char *tmp_2;
    unsigned char *tmp_3;
    
#line 617 
    used_frags = mlx4_en_complete_rx_desc(priv,rx_desc,frags,skb,(int)length);
    
#line 619 
    if ((long)(used_frags == 0) != 0L) {
      
#line 620 
      kfree_skb(skb);
      
#line 621 
      __retres = (struct sk_buff *)0;
      
#line 621 
      goto return_label;
    }
    else ;
    
#line 623 
    tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 623 
    ((struct skb_shared_info *)tmp_1)->nr_frags = (unsigned char)used_frags;
    
#line 625 
    pull_len = eth_get_headlen(va,256U);
    
#line 627 
    memcpy((void *)skb->data,(void const *)va,(unsigned long)pull_len);
    
#line 628 
    skb->tail += pull_len;
    
#line 631 
    tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 631 
    ((struct skb_shared_info *)tmp_2)->frags[0].page_offset += pull_len;
    
#line 634 
    ;
    
#line 634 
    tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 634 
    skb_frag_size_sub(& ((struct skb_shared_info *)tmp_3)->frags[0],(int)pull_len);
    
#line 635 
    skb->data_len = length - pull_len;
  }
  
#line 637 
  __retres = skb;
  return_label: 
#line 637 
                return __retres;
}


#line 640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static void validate_loopback(struct mlx4_en_priv *priv, struct sk_buff *skb)
{
  int i;
  
#line 643 
  int offset = 14;
  
#line 645 
  i = 0;
  
#line 645 
  goto ldv_57674;
  ldv_57673: 
#line 646 
  ;
  
#line 646 
  if ((int)*(skb->data + offset) != (int)((unsigned char)i)) 
#line 647 
                                                             goto out_loopback; else ;
  
#line 645 
  i += 1;
  
#line 645 
  offset += 1;
  ldv_57674: 
#line 646 
  ;
  
#line 645 
  if (i <= 113) 
#line 647 
                goto ldv_57673; else 
#line 650 
                                     goto ldv_57675;
  ldv_57675: 
#line 651 
  ;
  
#line 650 
  priv->loopback_ok = 1U;
  out_loopback: 
#line 652 
  ;
  
#line 653 
  dev_kfree_skb_any(skb);
  
#line 654 
  return;
}


#line 656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static void mlx4_en_refill_rx_buffers(struct mlx4_en_priv *priv, struct mlx4_en_rx_ring *ring)
{
  int tmp;
  
#line 659 
  int index = (int)(ring->prod & ring->size_mask);
  
#line 661 
  goto ldv_57683;
  ldv_57682: 
#line 662 
  ;
  
#line 662 
  tmp = mlx4_en_prepare_rx_desc(priv,ring,index,288U);
  
#line 662 
  if (tmp != 0) 
#line 664 
                goto ldv_57681; else ;
  
#line 665 
  ring->prod += 1U;
  
#line 666 
  index = (int)(ring->prod & ring->size_mask);
  ldv_57683: 
#line 667 
  ;
  
#line 661 
  if (ring->prod - ring->cons < ring->actual_size) 
#line 663 
                                                   goto ldv_57682; else 
                                                                    
#line 666 
                                                                    goto ldv_57681;
  ldv_57681: 
#line 667 
  ;
  
#line 668 
  return;
}


#line 673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
__inline static __wsum get_fixed_vlan_csum(__wsum hw_checksum, struct vlan_hdr *vlanh)
{
  __wsum tmp;
  
#line 676 
  tmp = csum_add(hw_checksum,*((__wsum *)vlanh));
  
#line 676 
  return tmp;
}


#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static void get_fixed_ipv4_csum(__wsum hw_checksum, struct sk_buff *skb, struct iphdr *iph)
{
  int tmp_0;
  
#line 686 
  __u16 length_for_csum = (unsigned short)0U;
  
#line 687 
  __wsum csum_pseudo_header = 0U;
  
#line 689 
  if (0 != 0) 
#line 689 
              tmp_0 = (int)((unsigned short)(((int)iph->tot_len << 8) | ((int)iph->tot_len >> 8)));
  else {
    __u16 tmp;
    
#line 689 
    tmp = __fswab16((unsigned short)((int)iph->tot_len));
    
#line 689 
    tmp_0 = (int)tmp;
  }
  
#line 689 
  length_for_csum = (unsigned short)(tmp_0 - ((int)((unsigned short)iph->ihl) << 2U));
  
#line 690 
  csum_pseudo_header = csum_tcpudp_nofold(iph->saddr,iph->daddr,(unsigned short)((int)length_for_csum),(unsigned short)((int)iph->protocol),0U);
  
#line 692 
  skb->__anonCompField_sk_buff_69.csum = csum_sub(hw_checksum,csum_pseudo_header);
  
#line 693 
  return;
}


#line 700  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int get_fixed_ipv6_csum(__wsum hw_checksum, struct sk_buff *skb, struct ipv6hdr *ipv6h)
{
  int __retres;
  int tmp_0;
  __wsum tmp_1;
  
#line 703 
  __wsum csum_pseudo_hdr = 0U;
  
#line 705 
  if ((unsigned int)ipv6h->nexthdr == 44U || (unsigned int)ipv6h->nexthdr == 0U) {
    
#line 706 
    __retres = -1;
    
#line 706 
    goto return_label;
  }
  else ;
  
#line 707 
  hw_checksum = csum_add(hw_checksum,(unsigned int)((int)ipv6h->nexthdr << 8));
  
#line 709 
  csum_pseudo_hdr = csum_partial((void const *)(& ipv6h->saddr),32,0U);
  
#line 711 
  csum_pseudo_hdr = csum_add(csum_pseudo_hdr,(unsigned int)ipv6h->payload_len);
  
#line 712 
  if (0 != 0) 
#line 712 
              tmp_0 = (int)((unsigned short)((int)ipv6h->nexthdr << 8));
  else {
    __u16 tmp;
    
#line 712 
    tmp = __fswab16((unsigned short)((int)ipv6h->nexthdr));
    
#line 712 
    tmp_0 = (int)tmp;
  }
  
#line 712 
  csum_pseudo_hdr = csum_add(csum_pseudo_hdr,(unsigned int)tmp_0);
  
#line 714 
  skb->__anonCompField_sk_buff_69.csum = csum_sub(hw_checksum,csum_pseudo_hdr);
  
#line 715 
  tmp_1 = csum_partial((void const *)ipv6h,40,0U);
  
#line 715 
  ;
  
#line 715 
  skb->__anonCompField_sk_buff_69.csum = csum_add(skb->__anonCompField_sk_buff_69.csum,tmp_1);
  
#line 716 
  __retres = 0;
  return_label: 
#line 716 
                return __retres;
}


#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int check_csum(struct mlx4_cqe *cqe, struct sk_buff *skb, void *va, netdev_features_t dev_features)
{
  int __retres;
  
#line 722 
  __wsum hw_checksum = 0U;
  
#line 724 
  void *hdr = va + 14U;
  
#line 726 
  hw_checksum = csum_unfold((unsigned short)((int)cqe->checksum));
  
#line 728 
  if ((cqe->vlan_my_qpn & 32U) != 0U && (dev_features & 256ULL) == 0ULL) {
    
#line 730 
    hw_checksum = get_fixed_vlan_csum(hw_checksum,(struct vlan_hdr *)hdr);
    
#line 731 
    hdr += 4U;
  }
  else ;
  
#line 734 
  if (((int)cqe->__anonCompField_mlx4_cqe_106.__anonCompField___anonunion_363_105.status & 16384) != 0) 
    
#line 735 
    get_fixed_ipv4_csum(hw_checksum,skb,(struct iphdr *)hdr);
  else 
    
#line 737 
    if (((int)cqe->__anonCompField_mlx4_cqe_106.__anonCompField___anonunion_363_105.status & 1) != 0) {
      int tmp;
      
#line 738 
      tmp = get_fixed_ipv6_csum(hw_checksum,skb,(struct ipv6hdr *)hdr);
      
#line 738 
      if (tmp != 0) {
        
#line 739 
        __retres = -1;
        
#line 739 
        goto return_label;
      }
      else ;
    }
    else ;
  
#line 741 
  __retres = 0;
  return_label: 
#line 741 
                return __retres;
}


#line 744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
int mlx4_en_process_rx_cq(struct net_device *dev, struct mlx4_en_cq *cq, int budget)
{
  int __retres;
  struct mlx4_cqe *cqe;
  struct mlx4_en_rx_alloc *frags;
  struct mlx4_en_rx_desc *rx_desc;
  struct sk_buff *skb;
  int index;
  int nr;
  unsigned int length;
  int ip_summed;
  u64 timestamp;
  bool l2_tunnel;
  struct mlx4_cqe *tmp_0;
  int tmp_33;
  bool tmp_32;
  int tmp_40;
  int tmp_43;
  bool tmp_42;
  struct mlx4_cqe *tmp_44;
  
#line 746 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 747 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 749 
  struct mlx4_en_rx_ring *ring = priv->rx_ring[cq->ring];
  
#line 756 
  int polled = 0;
  
#line 758 
  int factor = priv->cqe_factor;
  
#line 762 
  if (! priv->port_up) {
    
#line 763 
    __retres = 0;
    
#line 763 
    goto return_label;
  }
  else ;
  
#line 765 
  if (budget <= 0) {
    
#line 766 
    __retres = polled;
    
#line 766 
    goto return_label;
  }
  else ;
  
#line 771 
  index = (int)(cq->mcq.cons_index & ring->size_mask);
  
#line 772 
  tmp_0 = mlx4_en_get_cqe((void *)cq->buf,index,priv->cqe_size);
  
#line 772 
  cqe = tmp_0 + factor;
  
#line 775 
  goto ldv_57794;
  ldv_57793: 
#line 776 
  ;
  
#line 778 
  frags = (struct mlx4_en_rx_alloc *)(ring->rx_info + (index << (int)priv->log_rx_info));
  
#line 779 
  rx_desc = (struct mlx4_en_rx_desc *)(ring->buf + (index << (int)ring->log_stride));
  
#line 780 
  ldv_inline_asm();
  
#line 787 
  if ((long)(((int)cqe->owner_sr_opcode & 31) == 30) != 0L) {
    
#line 789 
    en_print("\001",(struct mlx4_en_priv const *)priv,"CQE completed in error - vendor syndrom:%d syndrom:%d\n",(int)((struct mlx4_err_cqe *)cqe)->vendor_err_syndrome,(int)((struct mlx4_err_cqe *)cqe)->syndrome);
    
#line 792 
    goto next;
  }
  else ;
  
#line 794 
  if ((long)(((int)cqe->__anonCompField_mlx4_cqe_106.__anonCompField___anonunion_363_105.badfcs_enc & 16) != 0) != 0L) {
    
#line 795 
    if ((priv->msg_enable & 64U) != 0U) 
#line 795 
                                        en_print("\001",(struct mlx4_en_priv const *)priv,"Accepted frame with bad FCS\n"); else ;
    
#line 796 
    goto next;
  }
  else ;
  
#line 802 
  if ((priv->flags & 8U) != 0U) {
    struct ethhdr *ethh;
    dma_addr_t dma;
    void *tmp_2;
    bool tmp_20;
    
#line 808 
    if (0 != 0) 
#line 808 
                dma = (((((((rx_desc->data[0].addr << 56) | ((rx_desc->data[0].addr << 40) & 71776119061217280ULL)) | ((rx_desc->data[0].addr << 24) & 280375465082880ULL)) | ((rx_desc->data[0].addr << 8) & 1095216660480ULL)) | ((rx_desc->data[0].addr >> 8) & 4278190080ULL)) | ((rx_desc->data[0].addr >> 24) & 16711680ULL)) | ((rx_desc->data[0].addr >> 40) & 65280ULL)) | (rx_desc->data[0].addr >> 56); else 
                                                                    
#line 808 
                                                                    dma = __fswab64(rx_desc->data[0].addr);
    
#line 809 
    dma_sync_single_for_cpu(priv->ddev,dma,14UL,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 811 
    tmp_2 = lowmem_page_address((struct page const *)frags->page);
    
#line 811 
    ethh = (struct ethhdr *)(tmp_2 + frags->page_offset);
    
#line 814 
    tmp_20 = is_multicast_ether_addr((u8 const *)(& ethh->h_dest));
    
#line 814 
    if ((int)tmp_20 != 0) {
      struct mlx4_mac_entry *entry;
      struct hlist_head *bucket;
      unsigned int mac_hash;
      struct mlx4_mac_entry *tmp_10;
      bool tmp_11;
      struct mlx4_mac_entry *tmp_19;
      
#line 820 
      mac_hash = (unsigned int)ethh->h_source[5];
      
#line 821 
      bucket = & priv->mac_hash[mac_hash];
      
#line 822 
      rcu_read_lock();
      {
        struct hlist_node *tmp_7;
        struct mlx4_mac_entry *tmp_9;
        {
          struct hlist_node *tmp_4;
          {
            struct hlist_node *tmp_3;
            {
              union __anonunion___u_3119 __u;
              
#line 823 
              __read_once_size((void const volatile *)(& bucket->first),(void *)(& __u.__c),8);
              
#line 823 
              tmp_3 = __u.__val;
            }
            
#line 823 
            struct hlist_node *_________p1 = tmp_3;
            
#line 823 
            tmp_4 = _________p1;
          }
          
#line 823 
          struct hlist_node *________p1 = tmp_4;
          {
            bool __warned;
            int tmp_6;
            int tmp_5;
            
#line 823 
            tmp_5 = debug_lockdep_rcu_enabled();
            
#line 823 
            if (tmp_5 != 0) 
              
#line 823 
              if (! __warned) 
#line 823 
                              tmp_6 = 1; else 
#line 823 
                                              tmp_6 = 0;
            else 
#line 823 
                 tmp_6 = 0;
          }
          
#line 823 
          tmp_7 = ________p1;
        }
        
#line 823 
        struct hlist_node *____ptr = tmp_7;
        
#line 823 
        if (____ptr != (struct hlist_node *)0) {
          struct mlx4_mac_entry *tmp_8;
          {
            
#line 823 
            struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
            
#line 823 
            tmp_8 = (struct mlx4_mac_entry *)__mptr;
          }
          
#line 823 
          tmp_9 = tmp_8;
        }
        else 
#line 823 
             tmp_9 = (struct mlx4_mac_entry *)0;
        
#line 823 
        tmp_10 = tmp_9;
      }
      
#line 823 
      entry = tmp_10;
      
#line 823 
      goto ldv_57784;
      ldv_57783: 
#line 824 
      ;
      
#line 824 
      tmp_11 = ether_addr_equal_64bits((u8 const *)(& entry->mac),(u8 const *)(& ethh->h_source));
      
#line 824 
      if ((int)tmp_11 != 0) {
        
#line 826 
        rcu_read_unlock();
        
#line 827 
        goto next;
      }
      else ;
      {
        struct hlist_node *tmp_16;
        struct mlx4_mac_entry *tmp_18;
        {
          struct hlist_node *tmp_13;
          {
            struct hlist_node *tmp_12;
            {
              union __anonunion___u_3121 __u_0;
              
#line 823 
              __read_once_size((void const volatile *)(& entry->hlist.next),(void *)(& __u_0.__c),8);
              
#line 823 
              tmp_12 = __u_0.__val;
            }
            
#line 823 
            struct hlist_node *_________p1_0 = tmp_12;
            
#line 823 
            tmp_13 = _________p1_0;
          }
          
#line 823 
          struct hlist_node *________p1_0 = tmp_13;
          {
            bool __warned_0;
            int tmp_15;
            int tmp_14;
            
#line 823 
            tmp_14 = debug_lockdep_rcu_enabled();
            
#line 823 
            if (tmp_14 != 0) 
              
#line 823 
              if (! __warned_0) 
#line 823 
                                tmp_15 = 1; else 
#line 823 
                                                 tmp_15 = 0;
            else 
#line 823 
                 tmp_15 = 0;
          }
          
#line 823 
          tmp_16 = ________p1_0;
        }
        
#line 823 
        struct hlist_node *____ptr_0 = tmp_16;
        
#line 823 
        if (____ptr_0 != (struct hlist_node *)0) {
          struct mlx4_mac_entry *tmp_17;
          {
            
#line 823 
            struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
            
#line 823 
            tmp_17 = (struct mlx4_mac_entry *)__mptr_0;
          }
          
#line 823 
          tmp_18 = tmp_17;
        }
        else 
#line 823 
             tmp_18 = (struct mlx4_mac_entry *)0;
        
#line 823 
        tmp_19 = tmp_18;
      }
      
#line 823 
      entry = tmp_19;
      ldv_57784: 
#line 825 
      ;
      
#line 823 
      if (entry != (struct mlx4_mac_entry *)0) 
#line 825 
                                               goto ldv_57783; else 
#line 828 
                                                                    goto ldv_57785;
      ldv_57785: 
#line 829 
      ;
      
#line 830 
      rcu_read_unlock();
    }
    else ;
  }
  else ;
  
#line 837 
  if (0 != 0) 
#line 837 
              length = (((cqe->byte_cnt << 24) | ((cqe->byte_cnt << 8) & 16711680U)) | ((cqe->byte_cnt >> 8) & 65280U)) | (cqe->byte_cnt >> 24); else 
                                                                    
#line 837 
                                                                    length = __fswab32(cqe->byte_cnt);
  
#line 838 
  length -= (unsigned int)ring->fcs_del;
  
#line 839 
  ring->bytes += (unsigned long)length;
  
#line 840 
  ring->packets += 1UL;
  
#line 841 
  l2_tunnel = (_Bool)(((dev->hw_enc_features & 17179869184ULL) != 0ULL && (cqe->vlan_my_qpn & 8U) != 0U) != 0);
  
#line 844 
  if ((long)((dev->features & 17179869184ULL) != 0ULL) != 0L) 
    
#line 845 
    if (((int)cqe->__anonCompField_mlx4_cqe_106.__anonCompField___anonunion_363_105.status & 12) != 0) 
      
#line 847 
      if (((int)cqe->__anonCompField_mlx4_cqe_106.__anonCompField___anonunion_363_105.status & 16) != 0 && (unsigned int)cqe->checksum == 65535U) {
        
#line 849 
        ip_summed = 1;
        
#line 850 
        ring->csum_ok += 1UL;
      }
      else {
        
#line 852 
        ip_summed = 0;
        
#line 853 
        ring->csum_none += 1UL;
      }
    else 
      
#line 856 
      if ((priv->flags & 32U) != 0U && ((int)cqe->__anonCompField_mlx4_cqe_106.__anonCompField___anonunion_363_105.status & 16385) != 0) {
        
#line 859 
        ip_summed = 2;
        
#line 860 
        ring->csum_complete += 1UL;
      }
      else {
        
#line 862 
        ip_summed = 0;
        
#line 863 
        ring->csum_none += 1UL;
      }
  else {
    
#line 867 
    ip_summed = 0;
    
#line 868 
    ring->csum_none += 1UL;
  }
  
#line 878 
  tmp_32 = mlx4_en_cq_busy_polling(cq);
  
#line 878 
  if (tmp_32) 
#line 878 
              tmp_33 = 0; else 
#line 878 
                               tmp_33 = 1;
  
#line 878 
  if (tmp_33) {
    
#line 878 
    if ((dev->features & 16384ULL) != 0ULL) {
      unsigned char *tmp_26;
      
#line 880 
      struct sk_buff *gro_skb = napi_get_frags(& cq->napi);
      
#line 881 
      if (gro_skb == (struct sk_buff *)0) 
#line 882 
                                          goto next; else ;
      
#line 884 
      nr = mlx4_en_complete_rx_desc(priv,rx_desc,frags,gro_skb,(int)length);
      
#line 887 
      if (nr == 0) 
#line 888 
                   goto next; else ;
      
#line 890 
      if (ip_summed == 2) {
        void *tmp_24;
        unsigned char *tmp_23;
        int tmp_25;
        
#line 891 
        tmp_23 = skb_end_pointer((struct sk_buff const *)gro_skb);
        
#line 891 
        tmp_24 = skb_frag_address((skb_frag_t const *)(& ((struct skb_shared_info *)tmp_23)->frags));
        
#line 891 
        void *va = tmp_24;
        
#line 892 
        tmp_25 = check_csum(cqe,gro_skb,va,dev->features);
        
#line 892 
        if (tmp_25 != 0) {
          
#line 894 
          ip_summed = 0;
          
#line 895 
          ring->csum_none += 1UL;
          
#line 896 
          ring->csum_complete -= 1UL;
        }
        else ;
      }
      else ;
      
#line 900 
      tmp_26 = skb_end_pointer((struct sk_buff const *)gro_skb);
      
#line 900 
      ((struct skb_shared_info *)tmp_26)->nr_frags = (unsigned char)nr;
      
#line 901 
      gro_skb->len = length;
      
#line 902 
      gro_skb->data_len = length;
      
#line 903 
      gro_skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))ip_summed;
      
#line 905 
      if ((int)l2_tunnel != 0 && ip_summed == 1) 
#line 906 
                                                 gro_skb->csum_level = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else ;
      
#line 908 
      if ((cqe->vlan_my_qpn & 32U) != 0U && (dev->features & 256ULL) != 0ULL) {
        int tmp_28;
        
#line 911 
        if (0 != 0) 
#line 911 
                    tmp_28 = (int)((unsigned short)(((int)cqe->sl_vid << 8) | ((int)cqe->sl_vid >> 8)));
        else {
          __u16 tmp_27;
          
#line 911 
          tmp_27 = __fswab16((unsigned short)((int)cqe->sl_vid));
          
#line 911 
          tmp_28 = (int)tmp_27;
        }
        
#line 911 
        u16 vid = (unsigned short)tmp_28;
        
#line 913 
        __vlan_hwaccel_put_tag(gro_skb,(unsigned short)129,(unsigned short)((int)vid));
      }
      else ;
      
#line 916 
      if ((dev->features & 8589934592ULL) != 0ULL) {
        unsigned int tmp_30;
        
#line 917 
        if (0 != 0) 
#line 917 
                    tmp_30 = (((cqe->immed_rss_invalid << 24) | ((cqe->immed_rss_invalid << 8) & 16711680U)) | ((cqe->immed_rss_invalid >> 8) & 65280U)) | (cqe->immed_rss_invalid >> 24); else 
                                                                    
#line 918 
                                                                    tmp_30 = __fswab32(cqe->immed_rss_invalid);
        
#line 917 
        ;
        
#line 917 
        skb_set_hash(gro_skb,tmp_30,(enum pkt_hash_types)PKT_HASH_TYPE_L3);
      }
      else ;
      
#line 921 
      skb_record_rx_queue(gro_skb,(unsigned short)((int)((unsigned short)cq->ring)));
      
#line 922 
      skb_mark_napi_id(gro_skb,& cq->napi);
      
#line 924 
      if (ring->hwtstamp_rx_filter == 1) {
        struct skb_shared_hwtstamps *tmp_31;
        
#line 925 
        timestamp = mlx4_en_get_cqe_ts(cqe);
        
#line 926 
        ;
        
#line 926 
        tmp_31 = skb_hwtstamps(gro_skb);
        
#line 926 
        ;
        
#line 926 
        mlx4_en_fill_hwtstamps(mdev,tmp_31,timestamp);
      }
      else ;
      
#line 931 
      napi_gro_frags(& cq->napi);
      
#line 932 
      goto next;
    }
    else ;
  }
  else ;
  
#line 936 
  skb = mlx4_en_rx_skb(priv,rx_desc,frags,length);
  
#line 937 
  if (skb == (struct sk_buff *)0) {
    
#line 938 
    priv->stats.rx_dropped += 1UL;
    
#line 939 
    goto next;
  }
  else ;
  
#line 942 
  if ((long)(priv->validate_loopback != 0U) != 0L) {
    
#line 943 
    validate_loopback(priv,skb);
    
#line 944 
    goto next;
  }
  else ;
  
#line 947 
  if (ip_summed == 2) {
    int tmp_34;
    
#line 948 
    tmp_34 = check_csum(cqe,skb,(void *)skb->data,dev->features);
    
#line 948 
    if (tmp_34 != 0) {
      
#line 949 
      ip_summed = 0;
      
#line 950 
      ring->csum_complete -= 1UL;
      
#line 951 
      ring->csum_none += 1UL;
    }
    else ;
  }
  else ;
  
#line 955 
  skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))ip_summed;
  
#line 956 
  skb->protocol = eth_type_trans(skb,dev);
  
#line 957 
  skb_record_rx_queue(skb,(unsigned short)((int)((unsigned short)cq->ring)));
  
#line 959 
  if ((int)l2_tunnel != 0 && ip_summed == 1) 
#line 960 
                                             skb->csum_level = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else ;
  
#line 962 
  if ((dev->features & 8589934592ULL) != 0ULL) {
    unsigned int tmp_36;
    
#line 963 
    if (0 != 0) 
#line 963 
                tmp_36 = (((cqe->immed_rss_invalid << 24) | ((cqe->immed_rss_invalid << 8) & 16711680U)) | ((cqe->immed_rss_invalid >> 8) & 65280U)) | (cqe->immed_rss_invalid >> 24); else 
                                                                    
#line 964 
                                                                    tmp_36 = __fswab32(cqe->immed_rss_invalid);
    
#line 963 
    ;
    
#line 963 
    skb_set_hash(skb,tmp_36,(enum pkt_hash_types)PKT_HASH_TYPE_L3);
  }
  else ;
  
#line 967 
  if (0 != 0) 
#line 967 
              tmp_40 = (((((cqe->vlan_my_qpn << 24) | ((cqe->vlan_my_qpn << 8) & 16711680U)) | ((cqe->vlan_my_qpn >> 8) & 65280U)) | (cqe->vlan_my_qpn >> 24)) & 536870912U) != 0U;
  else {
    __u32 tmp_39;
    
#line 967 
    tmp_39 = __fswab32(cqe->vlan_my_qpn);
    
#line 967 
    tmp_40 = (tmp_39 & 536870912U) != 0U;
  }
  
#line 967 
  if (tmp_40) {
    
#line 968 
    if ((dev->features & 256ULL) != 0ULL) {
      int tmp_38;
      
#line 970 
      if (0 != 0) 
#line 970 
                  tmp_38 = (int)((unsigned short)(((int)cqe->sl_vid << 8) | ((int)cqe->sl_vid >> 8)));
      else {
        __u16 tmp_37;
        
#line 970 
        tmp_37 = __fswab16((unsigned short)((int)cqe->sl_vid));
        
#line 970 
        tmp_38 = (int)tmp_37;
      }
      
#line 970 
      ;
      
#line 970 
      __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)tmp_38);
    }
    else ;
  }
  else ;
  
#line 972 
  if (ring->hwtstamp_rx_filter == 1) {
    struct skb_shared_hwtstamps *tmp_41;
    
#line 973 
    timestamp = mlx4_en_get_cqe_ts(cqe);
    
#line 974 
    ;
    
#line 974 
    tmp_41 = skb_hwtstamps(skb);
    
#line 974 
    ;
    
#line 974 
    mlx4_en_fill_hwtstamps(mdev,tmp_41,timestamp);
  }
  else ;
  
#line 978 
  skb_mark_napi_id(skb,& cq->napi);
  
#line 980 
  tmp_42 = mlx4_en_cq_busy_polling(cq);
  
#line 980 
  if (tmp_42) 
#line 980 
              tmp_43 = 0; else 
#line 980 
                               tmp_43 = 1;
  
#line 980 
  if (tmp_43) 
#line 981 
              napi_gro_receive(& cq->napi,skb); else 
#line 983 
                                                     netif_receive_skb(skb);
  next: 
#line 985 
  ;
  
#line 986 
  nr = 0;
  
#line 986 
  goto ldv_57790;
  ldv_57789: 
#line 987 
  ;
  
#line 987 
  mlx4_en_free_frag(priv,frags,nr);
  
#line 986 
  nr += 1;
  ldv_57790: 
#line 987 
  ;
  
#line 986 
  if ((int)priv->num_frags > nr) 
#line 988 
                                 goto ldv_57789; else 
#line 991 
                                                      goto ldv_57791;
  ldv_57791: 
#line 992 
  ;
  
#line 989 
  cq->mcq.cons_index += 1U;
  
#line 990 
  index = (int)(cq->mcq.cons_index & ring->size_mask);
  
#line 991 
  tmp_44 = mlx4_en_get_cqe((void *)cq->buf,index,priv->cqe_size);
  
#line 991 
  cqe = tmp_44 + factor;
  
#line 992 
  polled += 1;
  
#line 992 
  ;
  
#line 992 
  if (polled == budget) 
#line 993 
                        goto out; else ;
  ldv_57794: 
#line 994 
  ;
  
#line 775 
  if (((int)cqe->owner_sr_opcode < 0) ^ ((cq->mcq.cons_index & (unsigned int)cq->size) == 0U)) 
    
#line 777 
    goto ldv_57793; else 
#line 780 
                         goto ldv_57795;
  ldv_57795: 
#line 781 
  ;
  out: 
#line 996 
  ;
  
#line 998 
  mlx4_cq_set_ci(& cq->mcq);
  
#line 999 
  ldv_inline_asm();
  
#line 1000 
  ring->cons = cq->mcq.cons_index;
  
#line 1001 
  mlx4_en_refill_rx_buffers(priv,ring);
  
#line 1002 
  mlx4_en_update_rx_prod_db(ring);
  
#line 1003 
  __retres = polled;
  return_label: 
#line 1003 
                return __retres;
}


#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
void mlx4_en_rx_irq(struct mlx4_cq *mcq)
{
  struct mlx4_en_cq *tmp;
  {
    
#line 1009 
    struct mlx4_cq const *__mptr = (struct mlx4_cq const *)mcq;
    
#line 1009 
    tmp = (struct mlx4_en_cq *)__mptr;
  }
  
#line 1009 
  struct mlx4_en_cq *cq = tmp;
  
#line 1010 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)cq->dev);
  
#line 1012 
  if ((long)((int)priv->port_up != 0) != 0L) 
#line 1013 
                                             napi_schedule_irqoff(& cq->napi); else 
                                                                    
#line 1015 
                                                                    mlx4_en_arm_cq(priv,cq);
  
#line 1016 
  return;
}


#line 1019  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
int mlx4_en_poll_rx_cq(struct napi_struct *napi, int budget)
{
  int __retres;
  struct mlx4_en_cq *tmp;
  int done;
  int tmp_2;
  bool tmp_1;
  {
    
#line 1021 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1021 
    tmp = (struct mlx4_en_cq *)__mptr + 18446744073709551296U;
  }
  
#line 1021 
  struct mlx4_en_cq *cq = tmp;
  
#line 1022 
  struct net_device *dev = cq->dev;
  
#line 1023 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1026 
  tmp_1 = mlx4_en_cq_lock_napi_0(cq);
  
#line 1026 
  if (tmp_1) 
#line 1026 
             tmp_2 = 0; else 
#line 1026 
                             tmp_2 = 1;
  
#line 1026 
  if (tmp_2) {
    
#line 1027 
    __retres = budget;
    
#line 1027 
    goto return_label;
  }
  else ;
  
#line 1029 
  done = mlx4_en_process_rx_cq(dev,cq,budget);
  
#line 1031 
  mlx4_en_cq_unlock_napi(cq);
  
#line 1034 
  if (done == budget) {
    int cpu_curr;
    struct cpumask const *aff;
    int tmp_7;
    struct irq_data *tmp_8;
    int tmp_9;
    {
      int pscr_ret__;
      {
        
#line 1040 
        void const *__vpp_verify = (void const *)0;
        
#line 1040 
        void const *tmp_3 = __vpp_verify;
      }
      
#line 1040 
      switch (4UL) {
        int tmp_3_0;
        int tmp_4;
        int tmp_5;
        int tmp_6;
        case (unsigned long)1: 
#line 1040 
        ;
        {
          int pfo_ret__;
          
#line 1040 
          switch (4UL) {
            case (unsigned long)1: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57820;
            case (unsigned long)2: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57820;
            case (unsigned long)4: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57820;
            case (unsigned long)8: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57820;
            default: 
#line 1040 
            ;
            
#line 1040 
            __bad_percpu_size();
          }
          ldv_57820: 
#line 1040 
          ;
          
#line 1040 
          tmp_3_0 = pfo_ret__;
        }
        
#line 1040 
        pscr_ret__ = tmp_3_0;
        
#line 1040 
        goto ldv_57826;
        case (unsigned long)2: 
#line 1040 
        ;
        {
          int pfo_ret___0;
          
#line 1040 
          switch (4UL) {
            case (unsigned long)1: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57830;
            case (unsigned long)2: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57830;
            case (unsigned long)4: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57830;
            case (unsigned long)8: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57830;
            default: 
#line 1040 
            ;
            
#line 1040 
            __bad_percpu_size();
          }
          ldv_57830: 
#line 1040 
          ;
          
#line 1040 
          tmp_4 = pfo_ret___0;
        }
        
#line 1040 
        pscr_ret__ = tmp_4;
        
#line 1040 
        goto ldv_57826;
        case (unsigned long)4: 
#line 1040 
        ;
        {
          int pfo_ret___1;
          
#line 1040 
          switch (4UL) {
            case (unsigned long)1: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57839;
            case (unsigned long)2: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57839;
            case (unsigned long)4: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57839;
            case (unsigned long)8: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57839;
            default: 
#line 1040 
            ;
            
#line 1040 
            __bad_percpu_size();
          }
          ldv_57839: 
#line 1040 
          ;
          
#line 1040 
          tmp_5 = pfo_ret___1;
        }
        
#line 1040 
        pscr_ret__ = tmp_5;
        
#line 1040 
        goto ldv_57826;
        case (unsigned long)8: 
#line 1040 
        ;
        {
          int pfo_ret___2;
          
#line 1040 
          switch (4UL) {
            case (unsigned long)1: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57848;
            case (unsigned long)2: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57848;
            case (unsigned long)4: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57848;
            case (unsigned long)8: 
#line 1040 
            ;
            
#line 1041 
            ldv_inline_asm();
            
#line 1040 
            goto ldv_57848;
            default: 
#line 1040 
            ;
            
#line 1040 
            __bad_percpu_size();
          }
          ldv_57848: 
#line 1040 
          ;
          
#line 1040 
          tmp_6 = pfo_ret___2;
        }
        
#line 1040 
        pscr_ret__ = tmp_6;
        
#line 1040 
        goto ldv_57826;
        default: 
#line 1040 
        ;
        
#line 1040 
        __bad_size_call_parameter();
        
#line 1040 
        goto ldv_57826;
      }
      ldv_57826: 
#line 1040 
      ;
      
#line 1040 
      tmp_7 = pscr_ret__;
    }
    
#line 1040 
    cpu_curr = tmp_7;
    
#line 1041 
    tmp_8 = irq_desc_get_irq_data(cq->irq_desc);
    
#line 1041 
    aff = (struct cpumask const *)tmp_8->affinity;
    
#line 1043 
    tmp_9 = cpumask_test_cpu(cpu_curr,aff);
    
#line 1043 
    if ((long)(tmp_9 != 0) != 0L) {
      
#line 1044 
      __retres = budget;
      
#line 1044 
      goto return_label;
    }
    else ;
    
#line 1050 
    done = 0;
  }
  else ;
  
#line 1053 
  napi_complete_done(napi,done);
  
#line 1054 
  mlx4_en_arm_cq(priv,cq);
  
#line 1055 
  __retres = done;
  return_label: 
#line 1055 
                return __retres;
}


#line 1058  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int const frag_sizes[4U] = {1536, 4096, 4096, 16384};

#line 1065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
void mlx4_en_calc_rx_buf(struct net_device *dev)
{
  int tmp_72;
  unsigned long tmp_71;
  
#line 1067 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1068 
  int eff_mtu = (int)(dev->mtu + 18U);
  
#line 1069 
  int buf_size = 0;
  
#line 1070 
  int i = 0;
  
#line 1072 
  goto ldv_57865;
  ldv_57864: 
#line 1073 
  ;
  
#line 1074 
  if (frag_sizes[i] + buf_size < eff_mtu) 
#line 1074 
                                          priv->frag_info[i].frag_size = (unsigned short)frag_sizes[i]; else 
                                                                    
#line 1074 
                                                                    priv->frag_info[i].frag_size = (unsigned short)((int)((unsigned short)eff_mtu) - (int)((unsigned short)buf_size));
  
#line 1076 
  priv->frag_info[i].frag_prefix_size = (unsigned short)buf_size;
  
#line 1077 
  priv->frag_info[i].frag_stride = (unsigned short)((unsigned int)((unsigned short)((unsigned int)priv->frag_info[i].frag_size + 63U)) & 65472U);
  
#line 1080 
  buf_size = (int)priv->frag_info[i].frag_size + buf_size;
  
#line 1081 
  i += 1;
  ldv_57865: 
#line 1082 
  ;
  
#line 1072 
  if (buf_size < eff_mtu) 
#line 1074 
                          goto ldv_57864; else 
#line 1077 
                                               goto ldv_57866;
  ldv_57866: 
#line 1078 
  ;
  
#line 1084 
  priv->num_frags = (unsigned short)i;
  
#line 1085 
  priv->rx_skb_size = (unsigned int)eff_mtu;
  
#line 1086 
  if (0 != 0) {
    unsigned long tmp_69;
    
#line 1086 
    if ((unsigned long)i * 24UL != 1UL) {
      unsigned long tmp_68;
      
#line 1086 
      if (0 != 0) {
        unsigned long tmp_66;
        
#line 1086 
        if ((unsigned long)i * 24UL == 1UL) {
          int tmp_0;
          
#line 1086 
          tmp_0 = ____ilog2_NaN();
          
#line 1086 
          tmp_66 = 1UL << (tmp_0 + 1);
        }
        else {
          unsigned long tmp_65;
          
#line 1086 
          if ((unsigned long)i * 24UL + 18446744073709551615UL >= (unsigned long)0) {
            unsigned long tmp_64;
            
#line 1086 
            if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 4611686018427387904ULL) == 0ULL) {
              unsigned long tmp_63;
              
#line 1086 
              if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 2305843009213693952ULL) == 0ULL) {
                unsigned long tmp_62;
                
#line 1086 
                if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 1152921504606846976ULL) == 0ULL) {
                  unsigned long tmp_61;
                  
#line 1086 
                  if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 576460752303423488ULL) == 0ULL) {
                    unsigned long tmp_60;
                    
#line 1086 
                    if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 288230376151711744ULL) == 0ULL) {
                      unsigned long tmp_59;
                      
#line 1086 
                      if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 144115188075855872ULL) == 0ULL) {
                        unsigned long tmp_58;
                        
#line 1086 
                        if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 72057594037927936ULL) == 0ULL) {
                          unsigned long tmp_57;
                          
#line 1086 
                          if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 36028797018963968ULL) == 0ULL) {
                            unsigned long tmp_56;
                            
#line 1086 
                            if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 18014398509481984ULL) == 0ULL) {
                              unsigned long tmp_55;
                              
#line 1086 
                              if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 9007199254740992ULL) == 0ULL) {
                                unsigned long tmp_54;
                                
#line 1086 
                                if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 4503599627370496ULL) == 0ULL) {
                                  unsigned long tmp_53;
                                  
#line 1086 
                                  if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 2251799813685248ULL) == 0ULL) {
                                    unsigned long tmp_52;
                                    
#line 1086 
                                    if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 1125899906842624ULL) == 0ULL) {
                                      unsigned long tmp_51;
                                      
#line 1086 
                                      if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 562949953421312ULL) == 0ULL) {
                                        unsigned long tmp_50;
                                        
#line 1086 
                                        if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 281474976710656ULL) == 0ULL) {
                                          unsigned long tmp_49;
                                          
#line 1086 
                                          if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 140737488355328ULL) == 0ULL) {
                                            unsigned long tmp_48;
                                            
#line 1086 
                                            if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 70368744177664ULL) == 0ULL) {
                                              unsigned long tmp_47;
                                              
#line 1086 
                                              if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 35184372088832ULL) == 0ULL) {
                                                unsigned long tmp_46;
                                                
#line 1086 
                                                if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 17592186044416ULL) == 0ULL) {
                                                  unsigned long tmp_45;
                                                  
#line 1086 
                                                  if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 8796093022208ULL) == 0ULL) {
                                                    unsigned long tmp_44;
                                                    
#line 1086 
                                                    if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 4398046511104ULL) == 0ULL) {
                                                      unsigned long tmp_43;
                                                      
#line 1086 
                                                      if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 2199023255552ULL) == 0ULL) {
                                                        unsigned long tmp_42;
                                                        
#line 1086 
                                                        if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 1099511627776ULL) == 0ULL) {
                                                          unsigned long tmp_41;
                                                          
#line 1086 
                                                          if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 549755813888ULL) == 0ULL) {
                                                            unsigned long tmp_40;
                                                            
#line 1086 
                                                            if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 274877906944ULL) == 0ULL) {
                                                              unsigned long tmp_39;
                                                              
#line 1086 
                                                              if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 137438953472ULL) == 0ULL) {
                                                                unsigned long tmp_38;
                                                                
#line 1086 
                                                                if (((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 68719476736ULL) == 0ULL) {
                                                                  unsigned long tmp_37;
                                                                  
#line 1086 
                                                                  if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 34359738368ULL) == 0ULL) {
                                                                    unsigned long tmp_36;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 17179869184ULL) == 0ULL) {
                                                                    unsigned long tmp_35;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 8589934592ULL) == 0ULL) {
                                                                    unsigned long tmp_34;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 4294967296ULL) == 0ULL) {
                                                                    unsigned long tmp_33;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 2147483648ULL) == 0ULL) {
                                                                    unsigned long tmp_32;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 1073741824ULL) == 0ULL) {
                                                                    unsigned long tmp_31;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 536870912ULL) == 0ULL) {
                                                                    unsigned long tmp_30;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 268435456ULL) == 0ULL) {
                                                                    unsigned long tmp_29;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 134217728ULL) == 0ULL) {
                                                                    unsigned long tmp_28;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 67108864ULL) == 0ULL) {
                                                                    unsigned long tmp_27;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 33554432ULL) == 0ULL) {
                                                                    unsigned long tmp_26;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 16777216ULL) == 0ULL) {
                                                                    unsigned long tmp_25;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 8388608ULL) == 0ULL) {
                                                                    unsigned long tmp_24;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 4194304ULL) == 0ULL) {
                                                                    unsigned long tmp_23;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 2097152ULL) == 0ULL) {
                                                                    unsigned long tmp_22;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 1048576ULL) == 0ULL) {
                                                                    unsigned long tmp_21;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 524288ULL) == 0ULL) {
                                                                    unsigned long tmp_20;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 262144ULL) == 0ULL) {
                                                                    unsigned long tmp_19;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 131072ULL) == 0ULL) {
                                                                    unsigned long tmp_18;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 65536ULL) == 0ULL) {
                                                                    unsigned long tmp_17;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 32768ULL) == 0ULL) {
                                                                    unsigned long tmp_16;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 16384ULL) == 0ULL) {
                                                                    unsigned long tmp_15;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 8192ULL) == 0ULL) {
                                                                    unsigned long tmp_14;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 4096ULL) == 0ULL) {
                                                                    unsigned long tmp_13;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 2048ULL) == 0ULL) {
                                                                    unsigned long tmp_12;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 1024ULL) == 0ULL) {
                                                                    unsigned long tmp_11;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 512ULL) == 0ULL) {
                                                                    unsigned long tmp_10;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 256ULL) == 0ULL) {
                                                                    unsigned long tmp_9;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 128ULL) == 0ULL) {
                                                                    unsigned long tmp_8;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 64ULL) == 0ULL) {
                                                                    unsigned long tmp_7;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 32ULL) == 0ULL) {
                                                                    unsigned long tmp_6;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 16ULL) == 0ULL) {
                                                                    unsigned long tmp_5;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 8ULL) == 0ULL) {
                                                                    unsigned long tmp_4;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 4ULL) == 0ULL) {
                                                                    unsigned long tmp_3;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 2ULL) == 0ULL) {
                                                                    unsigned long tmp_2;
                                                                    
#line 1086 
                                                                    if (
                                                                    ((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL) & 1ULL) == 0ULL) {
                                                                    int tmp_1;
                                                                    
#line 1086 
                                                                    tmp_1 = ____ilog2_NaN();
                                                                    
#line 1086 
                                                                    tmp_2 = 1UL << (tmp_1 + 1);
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_2 = 2UL;
                                                                    
#line 1086 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_3 = 4UL;
                                                                    
#line 1086 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_4 = 8UL;
                                                                    
#line 1086 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_5 = 16UL;
                                                                    
#line 1086 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_6 = 32UL;
                                                                    
#line 1086 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_7 = 64UL;
                                                                    
#line 1086 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_8 = 128UL;
                                                                    
#line 1086 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_9 = 256UL;
                                                                    
#line 1086 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_10 = 512UL;
                                                                    
#line 1086 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_11 = 1024UL;
                                                                    
#line 1086 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_12 = 2048UL;
                                                                    
#line 1086 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_13 = 4096UL;
                                                                    
#line 1086 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_14 = 8192UL;
                                                                    
#line 1086 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_15 = 16384UL;
                                                                    
#line 1086 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_16 = 32768UL;
                                                                    
#line 1086 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_17 = 65536UL;
                                                                    
#line 1086 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_18 = 131072UL;
                                                                    
#line 1086 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_19 = 262144UL;
                                                                    
#line 1086 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_20 = 524288UL;
                                                                    
#line 1086 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_21 = 1048576UL;
                                                                    
#line 1086 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_22 = 2097152UL;
                                                                    
#line 1086 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_23 = 4194304UL;
                                                                    
#line 1086 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_24 = 8388608UL;
                                                                    
#line 1086 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_25 = 16777216UL;
                                                                    
#line 1086 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_26 = 33554432UL;
                                                                    
#line 1086 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_27 = 67108864UL;
                                                                    
#line 1086 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_28 = 134217728UL;
                                                                    
#line 1086 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_29 = 268435456UL;
                                                                    
#line 1086 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_30 = 536870912UL;
                                                                    
#line 1086 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_31 = 1073741824UL;
                                                                    
#line 1086 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_32 = 2147483648UL;
                                                                    
#line 1086 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_33 = 4294967296UL;
                                                                    
#line 1086 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_34 = 8589934592UL;
                                                                    
#line 1086 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_35 = 17179869184UL;
                                                                    
#line 1086 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 1086 
                                                                    tmp_36 = 34359738368UL;
                                                                    
#line 1086 
                                                                    tmp_37 = tmp_36;
                                                                  }
                                                                  else 
                                                                    
#line 1086 
                                                                    tmp_37 = 68719476736UL;
                                                                  
#line 1086 
                                                                  tmp_38 = tmp_37;
                                                                }
                                                                else 
                                                                  
#line 1086 
                                                                  tmp_38 = 137438953472UL;
                                                                
#line 1086 
                                                                tmp_39 = tmp_38;
                                                              }
                                                              else 
#line 1086 
                                                                   tmp_39 = 274877906944UL;
                                                              
#line 1086 
                                                              tmp_40 = tmp_39;
                                                            }
                                                            else 
#line 1086 
                                                                 tmp_40 = 549755813888UL;
                                                            
#line 1086 
                                                            tmp_41 = tmp_40;
                                                          }
                                                          else 
#line 1086 
                                                               tmp_41 = 1099511627776UL;
                                                          
#line 1086 
                                                          tmp_42 = tmp_41;
                                                        }
                                                        else 
#line 1086 
                                                             tmp_42 = 2199023255552UL;
                                                        
#line 1086 
                                                        tmp_43 = tmp_42;
                                                      }
                                                      else 
#line 1086 
                                                           tmp_43 = 4398046511104UL;
                                                      
#line 1086 
                                                      tmp_44 = tmp_43;
                                                    }
                                                    else 
#line 1086 
                                                         tmp_44 = 8796093022208UL;
                                                    
#line 1086 
                                                    tmp_45 = tmp_44;
                                                  }
                                                  else 
#line 1086 
                                                       tmp_45 = 17592186044416UL;
                                                  
#line 1086 
                                                  tmp_46 = tmp_45;
                                                }
                                                else 
#line 1086 
                                                     tmp_46 = 35184372088832UL;
                                                
#line 1086 
                                                tmp_47 = tmp_46;
                                              }
                                              else 
#line 1086 
                                                   tmp_47 = 70368744177664UL;
                                              
#line 1086 
                                              tmp_48 = tmp_47;
                                            }
                                            else 
#line 1086 
                                                 tmp_48 = 140737488355328UL;
                                            
#line 1086 
                                            tmp_49 = tmp_48;
                                          }
                                          else 
#line 1086 
                                               tmp_49 = 281474976710656UL;
                                          
#line 1086 
                                          tmp_50 = tmp_49;
                                        }
                                        else 
#line 1086 
                                             tmp_50 = 562949953421312UL;
                                        
#line 1086 
                                        tmp_51 = tmp_50;
                                      }
                                      else 
#line 1086 
                                           tmp_51 = 1125899906842624UL;
                                      
#line 1086 
                                      tmp_52 = tmp_51;
                                    }
                                    else 
#line 1086 
                                         tmp_52 = 2251799813685248UL;
                                    
#line 1086 
                                    tmp_53 = tmp_52;
                                  }
                                  else 
#line 1086 
                                       tmp_53 = 4503599627370496UL;
                                  
#line 1086 
                                  tmp_54 = tmp_53;
                                }
                                else 
#line 1086 
                                     tmp_54 = 9007199254740992UL;
                                
#line 1086 
                                tmp_55 = tmp_54;
                              }
                              else 
#line 1086 
                                   tmp_55 = 18014398509481984UL;
                              
#line 1086 
                              tmp_56 = tmp_55;
                            }
                            else 
#line 1086 
                                 tmp_56 = 36028797018963968UL;
                            
#line 1086 
                            tmp_57 = tmp_56;
                          }
                          else 
#line 1086 
                               tmp_57 = 72057594037927936UL;
                          
#line 1086 
                          tmp_58 = tmp_57;
                        }
                        else 
#line 1086 
                             tmp_58 = 144115188075855872UL;
                        
#line 1086 
                        tmp_59 = tmp_58;
                      }
                      else 
#line 1086 
                           tmp_59 = 288230376151711744UL;
                      
#line 1086 
                      tmp_60 = tmp_59;
                    }
                    else 
#line 1086 
                         tmp_60 = 576460752303423488UL;
                    
#line 1086 
                    tmp_61 = tmp_60;
                  }
                  else 
#line 1086 
                       tmp_61 = 1152921504606846976UL;
                  
#line 1086 
                  tmp_62 = tmp_61;
                }
                else 
#line 1086 
                     tmp_62 = 2305843009213693952UL;
                
#line 1086 
                tmp_63 = tmp_62;
              }
              else 
#line 1086 
                   tmp_63 = 4611686018427387904UL;
              
#line 1086 
              tmp_64 = tmp_63;
            }
            else 
#line 1086 
                 tmp_64 = 9223372036854775808UL;
            
#line 1086 
            tmp_65 = tmp_64;
          }
          else 
#line 1086 
               tmp_65 = 0UL;
          
#line 1086 
          tmp_66 = tmp_65;
        }
        
#line 1086 
        tmp_68 = tmp_66;
      }
      else {
        int tmp_67;
        
#line 1086 
        tmp_67 = __ilog2_u64((unsigned long long)((unsigned long)i * 24UL + 18446744073709551615UL));
        
#line 1086 
        tmp_68 = 1UL << (tmp_67 + 1);
      }
      
#line 1086 
      tmp_69 = tmp_68;
    }
    else 
#line 1086 
         tmp_69 = 1UL;
    
#line 1086 
    tmp_71 = tmp_69;
  }
  else 
#line 1086 
       tmp_71 = __roundup_pow_of_two((unsigned long)i * 24UL);
  
#line 1086 
  tmp_72 = __ilog2_u64((unsigned long long)tmp_71);
  
#line 1086 
  priv->log_rx_info = (unsigned short)tmp_72;
  
#line 1088 
  if ((priv->msg_enable & 1U) != 0U) 
#line 1088 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Rx buffer scatter-list (effective-mtu:%d num_frags:%d):\n",eff_mtu,(int)priv->num_frags); else ;
  
#line 1090 
  i = 0;
  
#line 1090 
  goto ldv_57868;
  ldv_57867: 
#line 1091 
  ;
  
#line 1091 
  en_print("\001",(struct mlx4_en_priv const *)priv,"  frag:%d - size:%d prefix:%d stride:%d\n",i,(int)priv->frag_info[i].frag_size,(int)priv->frag_info[i].frag_prefix_size,(int)priv->frag_info[i].frag_stride);
  
#line 1090 
  i += 1;
  ldv_57868: 
#line 1091 
  ;
  
#line 1090 
  if ((int)priv->num_frags > i) 
#line 1092 
                                goto ldv_57867; else 
#line 1095 
                                                     goto ldv_57869;
  ldv_57869: 
#line 1096 
  ;
  
#line 1097 
  return;
}


#line 1102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
static int mlx4_en_config_rss_qp(struct mlx4_en_priv *priv, int qpn, struct mlx4_en_rx_ring *ring, enum mlx4_qp_state *state, struct mlx4_qp *qp)
{
  int __retres;
  struct mlx4_qp_context *context;
  
#line 1107 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1109 
  int err = 0;
  
#line 1111 
  context = (struct mlx4_qp_context *)kmalloc_2(248UL,208U);
  
#line 1112 
  if (context == (struct mlx4_qp_context *)0) {
    
#line 1113 
    __retres = -12;
    
#line 1113 
    goto return_label;
  }
  else ;
  
#line 1115 
  err = mlx4_qp_alloc(mdev->dev,qpn,qp,208U);
  
#line 1116 
  if (err != 0) {
    
#line 1117 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to allocate qp #%x\n",qpn);
    
#line 1118 
    goto out;
  }
  else ;
  
#line 1120 
  qp->event = & mlx4_en_sqp_event;
  
#line 1122 
  memset((void *)context,0,248UL);
  
#line 1123 
  mlx4_en_fill_qp_context(priv,(int)ring->actual_size,(int)ring->stride,0,0,qpn,(int)ring->cqn,-1,context);
  
#line 1125 
  if (0 != 0) 
#line 1125 
              context->db_rec_addr = (((((((ring->wqres.db.dma << 56) | ((ring->wqres.db.dma << 40) & 71776119061217280ULL)) | ((ring->wqres.db.dma << 24) & 280375465082880ULL)) | ((ring->wqres.db.dma << 8) & 1095216660480ULL)) | ((ring->wqres.db.dma >> 8) & 4278190080ULL)) | ((ring->wqres.db.dma >> 24) & 16711680ULL)) | ((ring->wqres.db.dma >> 40) & 65280ULL)) | (ring->wqres.db.dma >> 56); else 
                                                                    
#line 1125 
                                                                    context->db_rec_addr = __fswab64(ring->wqres.db.dma);
  
#line 1128 
  if (((mdev->dev)->caps.flags & 17179869184ULL) != 0ULL) {
    
#line 1129 
    context->param3 |= 32U;
    
#line 1130 
    if (((priv->dev)->features & 137438953472ULL) != 0ULL) 
#line 1131 
                                                           ring->fcs_del = (unsigned char)0U; else 
                                                                    
#line 1133 
                                                                    ring->fcs_del = (unsigned char)4U;
  }
  else 
#line 1135 
       ring->fcs_del = (unsigned char)0U;
  
#line 1137 
  err = mlx4_qp_to_ready(mdev->dev,& ring->wqres.mtt,context,qp,state);
  
#line 1138 
  if (err != 0) {
    
#line 1139 
    mlx4_qp_remove(mdev->dev,qp);
    
#line 1140 
    mlx4_qp_free(mdev->dev,qp);
  }
  else ;
  
#line 1142 
  mlx4_en_update_rx_prod_db(ring);
  out: 
#line 1143 
  ;
  
#line 1144 
  kfree((void const *)context);
  
#line 1145 
  __retres = err;
  return_label: 
#line 1145 
                return __retres;
}


#line 1148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
int mlx4_en_create_drop_qp(struct mlx4_en_priv *priv)
{
  int __retres;
  int err;
  u32 qpn;
  
#line 1153 
  err = mlx4_qp_reserve_range((priv->mdev)->dev,1,1,(int *)(& qpn),(unsigned char)64);
  
#line 1155 
  if (err != 0) {
    
#line 1156 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed reserving drop qpn\n");
    
#line 1157 
    __retres = err;
    
#line 1157 
    goto return_label;
  }
  else ;
  
#line 1159 
  err = mlx4_qp_alloc((priv->mdev)->dev,(int)qpn,& priv->drop_qp,208U);
  
#line 1160 
  if (err != 0) {
    
#line 1161 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed allocating drop qp\n");
    
#line 1162 
    mlx4_qp_release_range((priv->mdev)->dev,(int)qpn,1);
    
#line 1163 
    __retres = err;
    
#line 1163 
    goto return_label;
  }
  else ;
  
#line 1166 
  __retres = 0;
  return_label: 
#line 1166 
                return __retres;
}


#line 1169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
void mlx4_en_destroy_drop_qp(struct mlx4_en_priv *priv)
{
  u32 qpn;
  
#line 1173 
  qpn = (unsigned int)priv->drop_qp.qpn;
  
#line 1174 
  mlx4_qp_remove((priv->mdev)->dev,& priv->drop_qp);
  
#line 1175 
  mlx4_qp_free((priv->mdev)->dev,& priv->drop_qp);
  
#line 1176 
  mlx4_qp_release_range((priv->mdev)->dev,(int)qpn,1);
  
#line 1177 
  return;
}


#line 1180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
int mlx4_en_config_rss_steer(struct mlx4_en_priv *priv)
{
  int __retres;
  struct mlx4_qp_context context;
  struct mlx4_rss_context *rss_context;
  int rss_rings;
  void *ptr;
  int i;
  int qpn;
  __u32 tmp_68;
  int tmp_67;
  
#line 1182 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1183 
  struct mlx4_en_rss_map *rss_map = & priv->rss_map;
  
#line 1188 
  u8 rss_mask = (unsigned char)60U;
  
#line 1191 
  int err = 0;
  
#line 1192 
  int good_qps = 0;
  
#line 1194 
  if ((priv->msg_enable & 1U) != 0U) 
#line 1194 
                                     en_print("\001",(struct mlx4_en_priv const *)priv,"Configuring rss steering\n"); else ;
  
#line 1195 
  err = mlx4_qp_reserve_range(mdev->dev,(int)priv->rx_ring_num,(int)priv->rx_ring_num,& rss_map->base_qpn,(unsigned char)0);
  
#line 1198 
  if (err != 0) {
    
#line 1199 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed reserving %d qps\n",priv->rx_ring_num);
    
#line 1200 
    __retres = err;
    
#line 1200 
    goto return_label;
  }
  else ;
  
#line 1203 
  i = 0;
  
#line 1203 
  goto ldv_57906;
  ldv_57905: 
#line 1204 
  ;
  
#line 1204 
  qpn = rss_map->base_qpn + i;
  
#line 1205 
  err = mlx4_en_config_rss_qp(priv,qpn,priv->rx_ring[i],& rss_map->state[i],& rss_map->qps[i]);
  
#line 1208 
  if (err != 0) 
#line 1209 
                goto rss_err; else ;
  
#line 1211 
  good_qps += 1;
  
#line 1203 
  i += 1;
  ldv_57906: 
#line 1204 
  ;
  
#line 1203 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1205 
                                           goto ldv_57905; else 
#line 1208 
                                                                goto ldv_57907;
  ldv_57907: 
#line 1209 
  ;
  
#line 1215 
  err = mlx4_qp_alloc(mdev->dev,priv->base_qpn,& rss_map->indir_qp,208U);
  
#line 1216 
  if (err != 0) {
    
#line 1217 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to allocate RSS indirection QP\n");
    
#line 1218 
    goto rss_err;
  }
  else ;
  
#line 1220 
  rss_map->indir_qp.event = & mlx4_en_sqp_event;
  
#line 1221 
  mlx4_en_fill_qp_context(priv,0,0,0,1,priv->base_qpn,(int)(priv->rx_ring[0])->cqn,-1,& context);
  
#line 1224 
  if ((priv->prof)->rss_rings == 0 || (unsigned int)(priv->prof)->rss_rings > priv->rx_ring_num) 
    
#line 1225 
    rss_rings = (int)priv->rx_ring_num; else 
#line 1227 
                                             rss_rings = (priv->prof)->rss_rings;
  
#line 1229 
  ptr = (void *)(& context) + 60U;
  
#line 1231 
  rss_context = (struct mlx4_rss_context *)ptr;
  
#line 1232 
  if (0 != 0) {
    int tmp_65;
    
#line 1232 
    if (rss_rings <= 0) {
      int tmp;
      
#line 1232 
      tmp = ____ilog2_NaN();
      
#line 1232 
      tmp_65 = tmp << 24;
    }
    else {
      int tmp_64;
      
#line 1232 
      if (rss_rings >= 0) {
        int tmp_63;
        
#line 1232 
        if (((unsigned long long)rss_rings & 4611686018427387904ULL) == 0ULL) {
          int tmp_62;
          
#line 1232 
          if (((unsigned long long)rss_rings & 2305843009213693952ULL) == 0ULL) {
            int tmp_61;
            
#line 1232 
            if (((unsigned long long)rss_rings & 1152921504606846976ULL) == 0ULL) {
              int tmp_60;
              
#line 1232 
              if (((unsigned long long)rss_rings & 576460752303423488ULL) == 0ULL) {
                int tmp_59;
                
#line 1232 
                if (((unsigned long long)rss_rings & 288230376151711744ULL) == 0ULL) {
                  int tmp_58;
                  
#line 1232 
                  if (((unsigned long long)rss_rings & 144115188075855872ULL) == 0ULL) {
                    int tmp_57;
                    
#line 1232 
                    if (((unsigned long long)rss_rings & 72057594037927936ULL) == 0ULL) {
                      int tmp_56;
                      
#line 1232 
                      if (((unsigned long long)rss_rings & 36028797018963968ULL) == 0ULL) {
                        int tmp_55;
                        
#line 1232 
                        if (((unsigned long long)rss_rings & 18014398509481984ULL) == 0ULL) {
                          int tmp_54;
                          
#line 1232 
                          if (((unsigned long long)rss_rings & 9007199254740992ULL) == 0ULL) {
                            int tmp_53;
                            
#line 1232 
                            if (((unsigned long long)rss_rings & 4503599627370496ULL) == 0ULL) {
                              int tmp_52;
                              
#line 1232 
                              if (((unsigned long long)rss_rings & 2251799813685248ULL) == 0ULL) {
                                int tmp_51;
                                
#line 1232 
                                if (((unsigned long long)rss_rings & 1125899906842624ULL) == 0ULL) {
                                  int tmp_50;
                                  
#line 1232 
                                  if (((unsigned long long)rss_rings & 562949953421312ULL) == 0ULL) {
                                    int tmp_49;
                                    
#line 1232 
                                    if (((unsigned long long)rss_rings & 281474976710656ULL) == 0ULL) {
                                      int tmp_48;
                                      
#line 1232 
                                      if (((unsigned long long)rss_rings & 140737488355328ULL) == 0ULL) {
                                        int tmp_47;
                                        
#line 1232 
                                        if (((unsigned long long)rss_rings & 70368744177664ULL) == 0ULL) {
                                          int tmp_46;
                                          
#line 1232 
                                          if (((unsigned long long)rss_rings & 35184372088832ULL) == 0ULL) {
                                            int tmp_45;
                                            
#line 1232 
                                            if (((unsigned long long)rss_rings & 17592186044416ULL) == 0ULL) {
                                              int tmp_44;
                                              
#line 1232 
                                              if (((unsigned long long)rss_rings & 8796093022208ULL) == 0ULL) {
                                                int tmp_43;
                                                
#line 1232 
                                                if (((unsigned long long)rss_rings & 4398046511104ULL) == 0ULL) {
                                                  int tmp_42;
                                                  
#line 1232 
                                                  if (((unsigned long long)rss_rings & 2199023255552ULL) == 0ULL) {
                                                    int tmp_41;
                                                    
#line 1232 
                                                    if (((unsigned long long)rss_rings & 1099511627776ULL) == 0ULL) {
                                                      int tmp_40;
                                                      
#line 1232 
                                                      if (((unsigned long long)rss_rings & 549755813888ULL) == 0ULL) {
                                                        int tmp_39;
                                                        
#line 1232 
                                                        if (((unsigned long long)rss_rings & 274877906944ULL) == 0ULL) {
                                                          int tmp_38;
                                                          
#line 1232 
                                                          if (((unsigned long long)rss_rings & 137438953472ULL) == 0ULL) {
                                                            int tmp_37;
                                                            
#line 1232 
                                                            if (((unsigned long long)rss_rings & 68719476736ULL) == 0ULL) {
                                                              int tmp_36;
                                                              
#line 1232 
                                                              if (((unsigned long long)rss_rings & 34359738368ULL) == 0ULL) {
                                                                int tmp_35;
                                                                
#line 1232 
                                                                if (((unsigned long long)rss_rings & 17179869184ULL) == 0ULL) {
                                                                  int tmp_34;
                                                                  
#line 1232 
                                                                  if (
                                                                    ((unsigned long long)rss_rings & 8589934592ULL) == 0ULL) {
                                                                    int tmp_33;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 4294967296ULL) == 0ULL) {
                                                                    int tmp_32;
                                                                    
#line 1232 
                                                                    if (
                                                                    rss_rings >= 0) {
                                                                    int tmp_31;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 1073741824ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 536870912ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 268435456ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 134217728ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 67108864ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 33554432ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 16777216ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 8388608ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 4194304ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 2097152ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 1048576ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 524288ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 262144ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 131072ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 65536ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 32768ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 16384ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 8192ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 4096ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 2048ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 1024ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 512ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 256ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 128ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 64ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 32ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 16ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 8ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 4ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 2ULL) == 0ULL) {
                                                                    int tmp_1;
                                                                    
#line 1232 
                                                                    if (
                                                                    ((unsigned long long)rss_rings & 1ULL) == 0ULL) {
                                                                    int tmp_0;
                                                                    
#line 1232 
                                                                    tmp_0 = ____ilog2_NaN();
                                                                    
#line 1232 
                                                                    tmp_1 = tmp_0 << 24;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_1 = 0;
                                                                    
#line 1232 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_2 = 16777216;
                                                                    
#line 1232 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_3 = 33554432;
                                                                    
#line 1232 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_4 = 50331648;
                                                                    
#line 1232 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_5 = 67108864;
                                                                    
#line 1232 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_6 = 83886080;
                                                                    
#line 1232 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_7 = 100663296;
                                                                    
#line 1232 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_8 = 117440512;
                                                                    
#line 1232 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_9 = 134217728;
                                                                    
#line 1232 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_10 = 150994944;
                                                                    
#line 1232 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_11 = 167772160;
                                                                    
#line 1232 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_12 = 184549376;
                                                                    
#line 1232 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_13 = 201326592;
                                                                    
#line 1232 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_14 = 218103808;
                                                                    
#line 1232 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_15 = 234881024;
                                                                    
#line 1232 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_16 = 251658240;
                                                                    
#line 1232 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_17 = 268435456;
                                                                    
#line 1232 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_18 = 285212672;
                                                                    
#line 1232 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_19 = 301989888;
                                                                    
#line 1232 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_20 = 318767104;
                                                                    
#line 1232 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_21 = 335544320;
                                                                    
#line 1232 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_22 = 352321536;
                                                                    
#line 1232 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_23 = 369098752;
                                                                    
#line 1232 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_24 = 385875968;
                                                                    
#line 1232 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_25 = 402653184;
                                                                    
#line 1232 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_26 = 419430400;
                                                                    
#line 1232 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_27 = 436207616;
                                                                    
#line 1232 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_28 = 452984832;
                                                                    
#line 1232 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_29 = 469762048;
                                                                    
#line 1232 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_30 = 486539264;
                                                                    
#line 1232 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_31 = 503316480;
                                                                    
#line 1232 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_32 = 520093696;
                                                                    
#line 1232 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 1232 
                                                                    tmp_33 = 536870912;
                                                                    
#line 1232 
                                                                    tmp_34 = tmp_33;
                                                                  }
                                                                  else 
                                                                    
#line 1232 
                                                                    tmp_34 = 553648128;
                                                                  
#line 1232 
                                                                  tmp_35 = tmp_34;
                                                                }
                                                                else 
                                                                  
#line 1232 
                                                                  tmp_35 = 570425344;
                                                                
#line 1232 
                                                                tmp_36 = tmp_35;
                                                              }
                                                              else 
#line 1232 
                                                                   tmp_36 = 587202560;
                                                              
#line 1232 
                                                              tmp_37 = tmp_36;
                                                            }
                                                            else 
#line 1232 
                                                                 tmp_37 = 603979776;
                                                            
#line 1232 
                                                            tmp_38 = tmp_37;
                                                          }
                                                          else 
#line 1232 
                                                               tmp_38 = 620756992;
                                                          
#line 1232 
                                                          tmp_39 = tmp_38;
                                                        }
                                                        else 
#line 1232 
                                                             tmp_39 = 637534208;
                                                        
#line 1232 
                                                        tmp_40 = tmp_39;
                                                      }
                                                      else 
#line 1232 
                                                           tmp_40 = 654311424;
                                                      
#line 1232 
                                                      tmp_41 = tmp_40;
                                                    }
                                                    else 
#line 1232 
                                                         tmp_41 = 671088640;
                                                    
#line 1232 
                                                    tmp_42 = tmp_41;
                                                  }
                                                  else 
#line 1232 
                                                       tmp_42 = 687865856;
                                                  
#line 1232 
                                                  tmp_43 = tmp_42;
                                                }
                                                else 
#line 1232 
                                                     tmp_43 = 704643072;
                                                
#line 1232 
                                                tmp_44 = tmp_43;
                                              }
                                              else 
#line 1232 
                                                   tmp_44 = 721420288;
                                              
#line 1232 
                                              tmp_45 = tmp_44;
                                            }
                                            else 
#line 1232 
                                                 tmp_45 = 738197504;
                                            
#line 1232 
                                            tmp_46 = tmp_45;
                                          }
                                          else 
#line 1232 
                                               tmp_46 = 754974720;
                                          
#line 1232 
                                          tmp_47 = tmp_46;
                                        }
                                        else 
#line 1232 
                                             tmp_47 = 771751936;
                                        
#line 1232 
                                        tmp_48 = tmp_47;
                                      }
                                      else 
#line 1232 
                                           tmp_48 = 788529152;
                                      
#line 1232 
                                      tmp_49 = tmp_48;
                                    }
                                    else 
#line 1232 
                                         tmp_49 = 805306368;
                                    
#line 1232 
                                    tmp_50 = tmp_49;
                                  }
                                  else 
#line 1232 
                                       tmp_50 = 822083584;
                                  
#line 1232 
                                  tmp_51 = tmp_50;
                                }
                                else 
#line 1232 
                                     tmp_51 = 838860800;
                                
#line 1232 
                                tmp_52 = tmp_51;
                              }
                              else 
#line 1232 
                                   tmp_52 = 855638016;
                              
#line 1232 
                              tmp_53 = tmp_52;
                            }
                            else 
#line 1232 
                                 tmp_53 = 872415232;
                            
#line 1232 
                            tmp_54 = tmp_53;
                          }
                          else 
#line 1232 
                               tmp_54 = 889192448;
                          
#line 1232 
                          tmp_55 = tmp_54;
                        }
                        else 
#line 1232 
                             tmp_55 = 905969664;
                        
#line 1232 
                        tmp_56 = tmp_55;
                      }
                      else 
#line 1232 
                           tmp_56 = 922746880;
                      
#line 1232 
                      tmp_57 = tmp_56;
                    }
                    else 
#line 1232 
                         tmp_57 = 939524096;
                    
#line 1232 
                    tmp_58 = tmp_57;
                  }
                  else 
#line 1232 
                       tmp_58 = 956301312;
                  
#line 1232 
                  tmp_59 = tmp_58;
                }
                else 
#line 1232 
                     tmp_59 = 973078528;
                
#line 1232 
                tmp_60 = tmp_59;
              }
              else 
#line 1232 
                   tmp_60 = 989855744;
              
#line 1232 
              tmp_61 = tmp_60;
            }
            else 
#line 1232 
                 tmp_61 = 1006632960;
            
#line 1232 
            tmp_62 = tmp_61;
          }
          else 
#line 1232 
               tmp_62 = 1023410176;
          
#line 1232 
          tmp_63 = tmp_62;
        }
        else 
#line 1232 
             tmp_63 = 1040187392;
        
#line 1232 
        tmp_64 = tmp_63;
      }
      else 
#line 1232 
           tmp_64 = 1056964608;
      
#line 1232 
      tmp_65 = tmp_64;
    }
    
#line 1232 
    tmp_67 = tmp_65;
  }
  else {
    int tmp_66;
    
#line 1232 
    tmp_66 = __ilog2_u32((unsigned int)rss_rings);
    
#line 1232 
    tmp_67 = tmp_66 << 24;
  }
  
#line 1232 
  ;
  
#line 1232 
  tmp_68 = __fswab32((unsigned int)(tmp_67 | rss_map->base_qpn));
  
#line 1232 
  rss_context->base_qpn = tmp_68;
  
#line 1234 
  if (0 != 0) 
#line 1234 
              rss_context->default_qpn = ((((unsigned int)rss_map->base_qpn << 24) | (((unsigned int)rss_map->base_qpn << 8) & 16711680U)) | (((unsigned int)rss_map->base_qpn >> 8) & 65280U)) | ((unsigned int)rss_map->base_qpn >> 24); else 
                                                                    
#line 1234 
                                                                    rss_context->default_qpn = __fswab32((unsigned int)rss_map->base_qpn);
  
#line 1235 
  if ((priv->mdev)->profile.udp_rss != 0) {
    
#line 1236 
    rss_mask = (unsigned char)((unsigned int)rss_mask | 3U);
    
#line 1237 
    rss_context->base_qpn_udp = rss_context->default_qpn;
  }
  else ;
  
#line 1240 
  if ((mdev->dev)->caps.tunnel_offload_mode == 1) {
    
#line 1241 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Setting RSS context tunnel type to RSS on inner headers\n");
    
#line 1242 
    rss_mask = (unsigned char)((unsigned int)rss_mask | 128U);
  }
  else ;
  
#line 1245 
  rss_context->flags = rss_mask;
  
#line 1246 
  rss_context->hash_fn = (unsigned char)1U;
  
#line 1247 
  if ((unsigned int)priv->rss_hash_fn == 2U) 
#line 1248 
                                             rss_context->hash_fn = (unsigned char)0U;
  else 
    
#line 1249 
    if ((unsigned int)priv->rss_hash_fn == 1U) {
      
#line 1250 
      rss_context->hash_fn = (unsigned char)1U;
      
#line 1251 
      memcpy((void *)(& rss_context->rss_key),(void const *)(& priv->rss_key),40UL);
    }
    else {
      
#line 1254 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Unknown RSS hash function requested\n");
      
#line 1255 
      err = -22;
      
#line 1256 
      goto indir_err;
    }
  
#line 1258 
  err = mlx4_qp_to_ready(mdev->dev,& priv->res.mtt,& context,& rss_map->indir_qp,& rss_map->indir_state);
  
#line 1260 
  if (err != 0) 
#line 1261 
                goto indir_err; else ;
  
#line 1263 
  __retres = 0;
  
#line 1263 
  goto return_label;
  indir_err: 
#line 1265 
  ;
  
#line 1266 
  mlx4_qp_modify(mdev->dev,(struct mlx4_mtt *)0,rss_map->indir_state,(enum mlx4_qp_state)MLX4_QP_STATE_RST,(struct mlx4_qp_context *)0,(enum mlx4_qp_optpar)0,0,& rss_map->indir_qp);
  
#line 1268 
  mlx4_qp_remove(mdev->dev,& rss_map->indir_qp);
  
#line 1269 
  mlx4_qp_free(mdev->dev,& rss_map->indir_qp);
  rss_err: 
#line 1270 
  ;
  
#line 1271 
  i = 0;
  
#line 1271 
  goto ldv_57910;
  ldv_57909: 
#line 1272 
  ;
  
#line 1272 
  mlx4_qp_modify(mdev->dev,(struct mlx4_mtt *)0,rss_map->state[i],(enum mlx4_qp_state)MLX4_QP_STATE_RST,(struct mlx4_qp_context *)0,(enum mlx4_qp_optpar)0,0,& rss_map->qps[i]);
  
#line 1274 
  mlx4_qp_remove(mdev->dev,& rss_map->qps[i]);
  
#line 1275 
  mlx4_qp_free(mdev->dev,& rss_map->qps[i]);
  
#line 1271 
  i += 1;
  ldv_57910: 
#line 1272 
  ;
  
#line 1271 
  if (i < good_qps) 
#line 1273 
                    goto ldv_57909; else 
#line 1276 
                                         goto ldv_57911;
  ldv_57911: 
#line 1277 
  ;
  
#line 1277 
  mlx4_qp_release_range(mdev->dev,rss_map->base_qpn,(int)priv->rx_ring_num);
  
#line 1278 
  __retres = err;
  return_label: 
#line 1278 
                return __retres;
}


#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_rx.c"
void mlx4_en_release_rss_steer(struct mlx4_en_priv *priv)
{
  int i;
  
#line 1283 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 1284 
  struct mlx4_en_rss_map *rss_map = & priv->rss_map;
  
#line 1287 
  mlx4_qp_modify(mdev->dev,(struct mlx4_mtt *)0,rss_map->indir_state,(enum mlx4_qp_state)MLX4_QP_STATE_RST,(struct mlx4_qp_context *)0,(enum mlx4_qp_optpar)0,0,& rss_map->indir_qp);
  
#line 1289 
  mlx4_qp_remove(mdev->dev,& rss_map->indir_qp);
  
#line 1290 
  mlx4_qp_free(mdev->dev,& rss_map->indir_qp);
  
#line 1292 
  i = 0;
  
#line 1292 
  goto ldv_57919;
  ldv_57918: 
#line 1293 
  ;
  
#line 1293 
  mlx4_qp_modify(mdev->dev,(struct mlx4_mtt *)0,rss_map->state[i],(enum mlx4_qp_state)MLX4_QP_STATE_RST,(struct mlx4_qp_context *)0,(enum mlx4_qp_optpar)0,0,& rss_map->qps[i]);
  
#line 1295 
  mlx4_qp_remove(mdev->dev,& rss_map->qps[i]);
  
#line 1296 
  mlx4_qp_free(mdev->dev,& rss_map->qps[i]);
  
#line 1292 
  i += 1;
  ldv_57919: 
#line 1293 
  ;
  
#line 1292 
  if (priv->rx_ring_num > (unsigned int)i) 
#line 1294 
                                           goto ldv_57918; else 
#line 1297 
                                                                goto ldv_57920;
  ldv_57920: 
#line 1298 
  ;
  
#line 1298 
  mlx4_qp_release_range(mdev->dev,rss_map->base_qpn,(int)priv->rx_ring_num);
  
#line 1299 
  return;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_rx.c.aux"
static void atomic_add(int i, atomic_t *v)
{
  
#line 99 
  ldv_atomic_add(i,v);
  
#line 100 
  return;
}


#line 589  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_rx.c.aux"
static void *kmalloc_2(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 592 
  tmp = ldv_kmalloc(size,flags);
  
#line 592 
  return tmp;
}


#line 610  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_rx.c.aux"
static void *kzalloc_3(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 613 
  tmp = ldv_kzalloc(size,flags);
  
#line 613 
  return tmp;
}


#line 760  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_rx.c.aux"
static void ldv_spin_lock_75_0(spinlock_t *lock)
{
  
#line 764 
  ldv_spin_model_lock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 766 
  spin_lock_0(lock);
  
#line 767 
  return;
}


#line 770  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_rx.c.aux"
static void ldv_spin_unlock_76_0(spinlock_t *lock)
{
  
#line 774 
  ldv_spin_model_unlock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 776 
  spin_unlock_0(lock);
  
#line 777 
  return;
}


#line 780  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_rx.c.aux"
static void ldv_spin_lock_77(spinlock_t *lock)
{
  
#line 784 
  ldv_spin_model_lock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 786 
  spin_lock_0(lock);
  
#line 787 
  return;
}


#line 790  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_rx.c.aux"
static void ldv_spin_unlock_78(spinlock_t *lock)
{
  
#line 794 
  ldv_spin_model_unlock((char *)"poll_lock_of_mlx4_en_cq");
  
#line 796 
  spin_unlock_0(lock);
  
#line 797 
  return;
}


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_first(struct cpumask const *srcp)
{
  unsigned int __retres;
  unsigned long tmp;
  
#line 174 
  tmp = find_first_bit((unsigned long const *)(& srcp->bits),(unsigned long)nr_cpu_ids);
  
#line 174 
  __retres = (unsigned int)tmp;
  
#line 174 
  return __retres;
}


#line 8  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqnr.h"
struct irq_desc *irq_to_desc(unsigned int);


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeq(unsigned long val, void volatile *addr)
{
  
#line 93 
  ldv_inline_asm();
  
#line 94 
  return;
}


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_4(size_t size, gfp_t flags);


#line 1076  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
int mlx4_cq_alloc(struct mlx4_dev *, int, struct mlx4_mtt *, struct mlx4_uar *, u64, struct mlx4_cq *, unsigned int, int, int);


#line 1079 
void mlx4_cq_free(struct mlx4_dev *, struct mlx4_cq *);


#line 1351 
bool mlx4_is_eq_vector_valid(struct mlx4_dev *, u8, int);


#line 1353 
int mlx4_assign_eq(struct mlx4_dev *, u8, int *);


#line 1354 
void mlx4_release_eq(struct mlx4_dev *, int);


#line 1357 
int mlx4_eq_get_irq(struct mlx4_dev *, int);


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/doorbell.h"
__inline static void mlx4_write64(__be32 *val, void *dest, spinlock_t *doorbell_lock)
{
  
#line 58 
  writeq((unsigned long)*((u64 *)val),(void volatile *)dest);
  
#line 59 
  return;
}


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/cq.h"
__inline static void mlx4_cq_arm(struct mlx4_cq *cq, u32 cmd, void *uar_page, spinlock_t *doorbell_lock)
{
  __be32 doorbell[2U];
  u32 sn;
  u32 ci;
  
#line 146 
  sn = (unsigned int)cq->arm_sn & 3U;
  
#line 147 
  ci = cq->cons_index & 16777215U;
  
#line 149 
  if (0 != 0) 
#line 149 
              *(cq->arm_db) = ((((((sn << 28) | cmd) | ci) << 24) | (((((sn << 28) | cmd) | ci) << 8) & 16711680U)) | (((((sn << 28) | cmd) | ci) >> 8) & 65280U)) | ((((sn << 28) | cmd) | ci) >> 24); else 
                                                                    
#line 149 
                                                                    *(cq->arm_db) = __fswab32(((sn << 28) | cmd) | ci);
  
#line 150 
  ldv_inline_asm();
  
#line 157 
  if (0 != 0) 
#line 157 
              doorbell[0] = ((((((sn << 28) | cmd) | (unsigned int)cq->cqn) << 24) | (((((sn << 28) | cmd) | (unsigned int)cq->cqn) << 8) & 16711680U)) | (((((sn << 28) | cmd) | (unsigned int)cq->cqn) >> 8) & 65280U)) | ((((sn << 28) | cmd) | (unsigned int)cq->cqn) >> 24); else 
                                                                    
#line 157 
                                                                    doorbell[0] = __fswab32(((sn << 28) | cmd) | (unsigned int)cq->cqn);
  
#line 158 
  if (0 != 0) 
#line 158 
              doorbell[1] = (((ci << 24) | ((ci << 8) & 16711680U)) | ((ci >> 8) & 65280U)) | (ci >> 24); else 
                                                                    
#line 158 
                                                                    doorbell[1] = __fswab32(ci);
  
#line 160 
  mlx4_write64((__be32 *)(& doorbell),uar_page + 32U,doorbell_lock);
  
#line 161 
  return;
}


#line 173 
int mlx4_cq_modify(struct mlx4_dev *, struct mlx4_cq *, u16, u16);


#line 478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void napi_hash_add(struct napi_struct *);


#line 487 
void napi_hash_del(struct napi_struct *);


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_cq.c"
static void mlx4_en_cq_event(struct mlx4_cq *cq, enum mlx4_event event)
{
  
#line 42 
  return;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_cq.c"
int mlx4_en_create_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq **pcq, int entries, int ring, enum cq_type mode, int node)
{
  int __retres;
  struct mlx4_en_cq *cq;
  int err;
  
#line 51 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 55 
  cq = (struct mlx4_en_cq *)kzalloc_node(720UL,208U,node);
  
#line 56 
  if (cq == (struct mlx4_en_cq *)0) {
    
#line 57 
    cq = (struct mlx4_en_cq *)kzalloc_4(720UL,208U);
    
#line 58 
    if (cq == (struct mlx4_en_cq *)0) {
      
#line 59 
      en_print("\001",(struct mlx4_en_priv const *)priv,"Failed to allocate CQ structure\n");
      
#line 60 
      __retres = -12;
      
#line 60 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 64 
  cq->size = entries;
  
#line 65 
  cq->buf_size = (int)((unsigned int)cq->size * (mdev->dev)->caps.cqe_size);
  
#line 67 
  cq->ring = ring;
  
#line 68 
  cq->is_tx = mode;
  
#line 69 
  cq->vector = (mdev->dev)->caps.num_comp_vectors;
  
#line 74 
  set_dev_node(& (((mdev->dev)->persist)->pdev)->dev,node);
  
#line 75 
  err = mlx4_alloc_hwq_res(mdev->dev,& cq->wqres,cq->buf_size,8192);
  
#line 77 
  set_dev_node(& (((mdev->dev)->persist)->pdev)->dev,(mdev->dev)->numa_node);
  
#line 78 
  if (err != 0) 
#line 79 
                goto err_cq; else ;
  
#line 81 
  err = mlx4_en_map_buffer(& cq->wqres.buf);
  
#line 82 
  if (err != 0) 
#line 83 
                goto err_res; else ;
  
#line 85 
  cq->buf = (struct mlx4_cqe *)cq->wqres.buf.direct.buf;
  
#line 86 
  *pcq = cq;
  
#line 88 
  __retres = 0;
  
#line 88 
  goto return_label;
  err_res: 
#line 90 
  ;
  
#line 91 
  mlx4_free_hwq_res(mdev->dev,& cq->wqres,cq->buf_size);
  err_cq: 
#line 92 
  ;
  
#line 93 
  kfree((void const *)cq);
  
#line 94 
  *pcq = (struct mlx4_en_cq *)0;
  
#line 95 
  __retres = err;
  return_label: 
#line 95 
                return __retres;
}


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_cq.c"
int mlx4_en_activate_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq, int cq_idx)
{
  int __retres;
  char name[25U];
  
#line 101 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 102 
  int err = 0;
  
#line 104 
  int timestamp_en = 0;
  
#line 105 
  bool assigned_eq = (_Bool)0;
  
#line 107 
  cq->dev = mdev->pndev[priv->port];
  
#line 108 
  cq->mcq.set_ci_db = cq->wqres.db.db;
  
#line 109 
  cq->mcq.arm_db = cq->wqres.db.db + 1U;
  
#line 110 
  *(cq->mcq.set_ci_db) = 0U;
  
#line 111 
  *(cq->mcq.arm_db) = 0U;
  
#line 112 
  memset((void *)cq->buf,0,(unsigned long)cq->buf_size);
  
#line 114 
  if (cq->is_tx == (unsigned int)RX) {
    int tmp_2;
    bool tmp_1;
    int tmp_3;
    
#line 115 
    tmp_1 = mlx4_is_eq_vector_valid(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),cq->vector);
    
#line 115 
    if (tmp_1) 
#line 115 
               tmp_2 = 0; else 
#line 115 
                               tmp_2 = 1;
    
#line 115 
    if (tmp_2) {
      unsigned int tmp;
      
#line 117 
      tmp = cpumask_first((struct cpumask const *)(priv->rx_ring[cq->ring])->affinity_mask);
      
#line 117 
      cq->vector = (int)tmp;
      
#line 119 
      err = mlx4_assign_eq(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),& cq->vector);
      
#line 121 
      if (err != 0) {
        char const *tmp_0;
        
#line 122 
        tmp_0 = dev_name((struct device const *)(& (mdev->pdev)->dev));
        
#line 122 
        printk("\001",tmp_0,(char *)(& name));
        
#line 124 
        goto free_eq;
      }
      else ;
      
#line 127 
      assigned_eq = (_Bool)1;
    }
    else ;
    
#line 131 
    tmp_3 = mlx4_eq_get_irq(mdev->dev,cq->vector);
    
#line 130 
    cq->irq_desc = irq_to_desc((unsigned int)tmp_3);
  }
  else {
    struct mlx4_en_cq *rx_cq;
    
#line 138 
    cq_idx = (int)((unsigned int)cq_idx % priv->rx_ring_num);
    
#line 139 
    rx_cq = priv->rx_cq[cq_idx];
    
#line 140 
    cq->vector = rx_cq->vector;
  }
  
#line 143 
  if (cq->is_tx == (unsigned int)RX) 
#line 144 
                                     cq->size = (int)(priv->rx_ring[cq->ring])->actual_size; else ;
  
#line 146 
  if ((cq->is_tx != (unsigned int)RX && priv->hwtstamp_config.tx_type != 0) || (cq->is_tx == (unsigned int)RX && priv->hwtstamp_config.rx_filter != 0)) 
    
#line 148 
    timestamp_en = 1; else ;
  
#line 150 
  err = mlx4_cq_alloc(mdev->dev,cq->size,& cq->wqres.mtt,& mdev->priv_uar,cq->wqres.db.dma,& cq->mcq,(unsigned int)cq->vector,0,timestamp_en);
  
#line 153 
  if (err != 0) 
#line 154 
                goto free_eq; else ;
  
#line 156 
  if (cq->is_tx != (unsigned int)RX) 
#line 156 
                                     cq->mcq.comp = & mlx4_en_tx_irq; else 
                                                                    
#line 156 
                                                                    cq->mcq.comp = & mlx4_en_rx_irq;
  
#line 157 
  cq->mcq.event = & mlx4_en_cq_event;
  
#line 159 
  if (cq->is_tx != (unsigned int)RX) 
#line 160 
                                     netif_napi_add(cq->dev,& cq->napi,& mlx4_en_poll_tx_cq,64);
  else {
    
#line 163 
    netif_napi_add(cq->dev,& cq->napi,& mlx4_en_poll_rx_cq,64);
    
#line 164 
    napi_hash_add(& cq->napi);
  }
  
#line 167 
  napi_enable(& cq->napi);
  
#line 169 
  __retres = 0;
  
#line 169 
  goto return_label;
  free_eq: 
#line 171 
  ;
  
#line 172 
  if ((int)assigned_eq != 0) 
#line 173 
                             mlx4_release_eq(mdev->dev,cq->vector); else ;
  
#line 174 
  cq->vector = (mdev->dev)->caps.num_comp_vectors;
  
#line 175 
  __retres = err;
  return_label: 
#line 175 
                return __retres;
}


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_cq.c"
void mlx4_en_destroy_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq **pcq)
{
  bool tmp;
  
#line 180 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 181 
  struct mlx4_en_cq *cq = *pcq;
  
#line 183 
  mlx4_en_unmap_buffer(& cq->wqres.buf);
  
#line 184 
  mlx4_free_hwq_res(mdev->dev,& cq->wqres,cq->buf_size);
  
#line 185 
  tmp = mlx4_is_eq_vector_valid(mdev->dev,(unsigned char)((int)((unsigned char)priv->port)),cq->vector);
  
#line 185 
  if ((int)tmp != 0) {
    
#line 185 
    if (cq->is_tx == (unsigned int)RX) 
#line 187 
                                       mlx4_release_eq((priv->mdev)->dev,cq->vector); else ;
  }
  else ;
  
#line 188 
  cq->vector = 0;
  
#line 189 
  cq->buf_size = 0;
  
#line 190 
  cq->buf = (struct mlx4_cqe *)0;
  
#line 191 
  kfree((void const *)cq);
  
#line 192 
  *pcq = (struct mlx4_en_cq *)0;
  
#line 193 
  return;
}


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_cq.c"
void mlx4_en_deactivate_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq)
{
  
#line 197 
  napi_disable(& cq->napi);
  
#line 198 
  if (cq->is_tx == (unsigned int)RX) {
    
#line 199 
    napi_hash_del(& cq->napi);
    
#line 200 
    synchronize_rcu();
  }
  else ;
  
#line 202 
  netif_napi_del(& cq->napi);
  
#line 204 
  mlx4_cq_free((priv->mdev)->dev,& cq->mcq);
  
#line 205 
  return;
}


#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_cq.c"
int mlx4_en_set_cq_moder(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq)
{
  int tmp;
  
#line 210 
  tmp = mlx4_cq_modify((priv->mdev)->dev,& cq->mcq,(unsigned short)((int)cq->moder_cnt),(unsigned short)((int)cq->moder_time));
  
#line 210 
  return tmp;
}


#line 214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_cq.c"
int mlx4_en_arm_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq)
{
  int __retres;
  
#line 216 
  mlx4_cq_arm(& cq->mcq,33554432U,(priv->mdev)->uar_map,& (priv->mdev)->uar_lock);
  
#line 219 
  __retres = 0;
  
#line 219 
  return __retres;
}


#line 433  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_cq.c.aux"
static void *kzalloc_4(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 436 
  tmp = ldv_kzalloc(size,flags);
  
#line 436 
  return tmp;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static bool IS_ERR_1(void const *ptr);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock.h"
void __rwlock_init(rwlock_t *, char const *, struct lock_class_key *);


#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_api_smp.h"
unsigned long _raw_read_lock_irqsave(rwlock_t *);


#line 26 
unsigned long _raw_write_lock_irqsave(rwlock_t *);


#line 37 
void _raw_read_unlock_irqrestore(rwlock_t *, unsigned long);


#line 40 
void _raw_write_unlock_irqrestore(rwlock_t *, unsigned long);


#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/time.h"
__inline static s64 timespec_to_ns(struct timespec const *ts)
{
  s64 __retres;
  
#line 193 
  __retres = (long long)ts->tv_sec * 1000000000LL + (long long)ts->tv_nsec;
  
#line 193 
  return __retres;
}


#line 215 
struct timespec ns_to_timespec(s64 const);


#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
__inline static ktime_t ns_to_ktime(u64 ns)
{
  
#line 285 
  ktime_t const ktime_zero = {.tv64 = 0LL};
  
#line 287 
  ktime_t __constr_expr_17 = {.tv64 = (long long)((unsigned long long)ktime_zero.tv64 + ns)};
  
#line 287 
  return __constr_expr_17;
}


#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
ktime_t ktime_get_with_offset(enum tk_offsets);


#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
__inline static ktime_t ktime_get_real(void)
{
  ktime_t tmp;
  
#line 172 
  tmp = ktime_get_with_offset((enum tk_offsets)TK_OFFS_REAL);
  
#line 172 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clocksource.h"
__inline static u32 clocksource_khz2mult(u32 khz, u32 shift_constant)
{
  u32 __retres;
  
#line 132 
  u64 tmp = 1000000ULL << shift_constant;
  
#line 134 
  tmp = (unsigned long long)(khz / 2U) + tmp;
  {
    uint32_t __rem;
    
#line 135 
    uint32_t __base = khz;
    
#line 135 
    __rem = (unsigned int)(tmp % (unsigned long long)__base);
    
#line 135 
    tmp /= (unsigned long long)__base;
    
#line 135 
    uint32_t tmp_2 = __rem;
  }
  
#line 137 
  __retres = (unsigned int)tmp;
  
#line 137 
  return __retres;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timecounter.h"
__inline static u64 cyclecounter_cyc2ns(struct cyclecounter const *cc, cycle_t cycles, u64 mask, u64 *frac)
{
  u64 __retres;
  
#line 82 
  u64 ns = cycles;
  
#line 84 
  ns = (unsigned long long)cc->mult * ns + *frac;
  
#line 85 
  *frac = ns & mask;
  
#line 86 
  __retres = ns >> cc->shift;
  
#line 86 
  return __retres;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timecounter.h"
__inline static void timecounter_adjtime(struct timecounter *tc, s64 delta)
{
  
#line 95 
  tc->nsec += (unsigned long long)delta;
  
#line 96 
  return;
}


#line 108 
void timecounter_init(struct timecounter *, struct cyclecounter const *, u64);


#line 120 
u64 timecounter_read(struct timecounter *);


#line 136 
u64 timecounter_cyc2time(struct timecounter *, cycle_t);


#line 1407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
cycle_t mlx4_read_clock(struct mlx4_dev *);


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
struct ptp_clock *ptp_clock_register(struct ptp_clock_info *, struct device *);


#line 133 
int ptp_clock_unregister(struct ptp_clock *);


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
static cycle_t mlx4_en_read_clock(struct cyclecounter const *tc)
{
  cycle_t __retres;
  struct mlx4_en_dev *tmp;
  cycle_t tmp_0;
  {
    
#line 44 
    struct cyclecounter const *__mptr = tc;
    
#line 44 
    tmp = (struct mlx4_en_dev *)__mptr + 18446744073709550968U;
  }
  
#line 43 
  struct mlx4_en_dev *mdev = tmp;
  
#line 45 
  struct mlx4_dev *dev = mdev->dev;
  
#line 47 
  tmp_0 = mlx4_read_clock(dev);
  
#line 47 
  ;
  
#line 47 
  __retres = tmp_0 & tc->mask;
  
#line 47 
  return __retres;
}


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
u64 mlx4_en_get_cqe_ts(struct mlx4_cqe *cqe)
{
  u64 __retres;
  u64 hi;
  u64 lo;
  int tmp_0;
  unsigned int tmp_2;
  
#line 53 
  struct mlx4_ts_cqe *ts_cqe = (struct mlx4_ts_cqe *)cqe;
  
#line 55 
  if (0 != 0) 
#line 55 
              tmp_0 = (int)((unsigned short)(((int)ts_cqe->timestamp_lo << 8) | ((int)ts_cqe->timestamp_lo >> 8)));
  else {
    __u16 tmp;
    
#line 55 
    tmp = __fswab16((unsigned short)((int)ts_cqe->timestamp_lo));
    
#line 55 
    tmp_0 = (int)tmp;
  }
  
#line 55 
  lo = (unsigned long long)tmp_0;
  
#line 56 
  if (0 != 0) 
#line 56 
              tmp_2 = (((ts_cqe->timestamp_hi << 24) | ((ts_cqe->timestamp_hi << 8) & 16711680U)) | ((ts_cqe->timestamp_hi >> 8) & 65280U)) | (ts_cqe->timestamp_hi >> 24); else 
                                                                    
#line 56 
                                                                    tmp_2 = __fswab32(ts_cqe->timestamp_hi);
  
#line 56 
  hi = ((unsigned long long)tmp_2 + (unsigned long long)(lo == 0ULL)) << 16;
  
#line 58 
  __retres = hi | lo;
  
#line 58 
  return __retres;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
void mlx4_en_fill_hwtstamps(struct mlx4_en_dev *mdev, struct skb_shared_hwtstamps *hwts, u64 timestamp)
{
  unsigned long flags;
  u64 nsec;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 68 
  flags = _raw_read_lock_irqsave(& mdev->clock_lock);
  
#line 69 
  nsec = timecounter_cyc2time(& mdev->clock,timestamp);
  {
    unsigned long __dummy_0;
    unsigned long __dummy2_0;
    
  }
  
#line 70 
  _raw_read_unlock_irqrestore(& mdev->clock_lock,flags);
  
#line 72 
  memset((void *)hwts,0,8UL);
  
#line 73 
  hwts->hwtstamp = ns_to_ktime(nsec);
  
#line 74 
  return;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
void mlx4_en_remove_timestamp(struct mlx4_en_dev *mdev)
{
  
#line 84 
  if (mdev->ptp_clock != (struct ptp_clock *)0) {
    char const *tmp;
    
#line 85 
    ptp_clock_unregister(mdev->ptp_clock);
    
#line 86 
    mdev->ptp_clock = (struct ptp_clock *)0;
    
#line 87 
    tmp = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 87 
    printk("\001",tmp);
  }
  else ;
  
#line 89 
  return;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
void mlx4_en_ptp_overflow_check(struct mlx4_en_dev *mdev)
{
  int tmp_1;
  int tmp;
  unsigned long flags;
  {
    unsigned long __dummy;
    unsigned long volatile __dummy2;
    
#line 93 
    tmp = 1;
  }
  
#line 93 
  if (tmp != 0) {
    int tmp_0;
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
#line 93 
      tmp_0 = 1;
    }
    
#line 93 
    if (tmp_0 != 0) 
      
#line 93 
      if ((long)((mdev->last_overflow_check + mdev->overflow_period) - jiffies) < 0L) 
        
#line 93 
        tmp_1 = 1; else 
#line 93 
                        tmp_1 = 0;
    else 
#line 93 
         tmp_1 = 0;
  }
  else 
#line 93 
       tmp_1 = 0;
  
#line 93 
  bool timeout = (_Bool)(tmp_1 != 0);
  
#line 97 
  if ((int)timeout != 0) {
    {
      unsigned long __dummy_1;
      unsigned long __dummy2_1;
      
    }
    
#line 98 
    flags = _raw_write_lock_irqsave(& mdev->clock_lock);
    
#line 99 
    timecounter_read(& mdev->clock);
    {
      unsigned long __dummy_2;
      unsigned long __dummy2_2;
      
    }
    
#line 100 
    _raw_write_unlock_irqrestore(& mdev->clock_lock,flags);
    
#line 101 
    mdev->last_overflow_check = jiffies;
  }
  else ;
  
#line 103 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
static int mlx4_en_phc_adjfreq(struct ptp_clock_info *ptp, s32 delta)
{
  int __retres;
  u64 adj;
  u32 diff;
  u32 mult;
  unsigned long flags;
  struct mlx4_en_dev *tmp;
  u64 tmp_0;
  
#line 117 
  int neg_adj = 0;
  {
    
#line 119 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)ptp;
    
#line 119 
    tmp = (struct mlx4_en_dev *)__mptr + 18446744073709550880U;
  }
  
#line 119 
  struct mlx4_en_dev *mdev = tmp;
  
#line 122 
  if (delta < 0) {
    
#line 123 
    neg_adj = 1;
    
#line 124 
    delta = - delta;
  }
  else ;
  
#line 126 
  mult = mdev->nominal_c_mult;
  
#line 127 
  adj = (unsigned long long)mult;
  
#line 128 
  adj = (unsigned long long)delta * adj;
  
#line 129 
  tmp_0 = div_u64(adj,1000000000U);
  
#line 129 
  diff = (unsigned int)tmp_0;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 131 
  flags = _raw_write_lock_irqsave(& mdev->clock_lock);
  
#line 132 
  timecounter_read(& mdev->clock);
  
#line 133 
  if (neg_adj != 0) 
#line 133 
                    mdev->cycles.mult = mult - diff; else 
#line 133 
                                                          mdev->cycles.mult = mult + diff;
  {
    unsigned long __dummy_0;
    unsigned long __dummy2_0;
    
  }
  
#line 134 
  _raw_write_unlock_irqrestore(& mdev->clock_lock,flags);
  
#line 136 
  __retres = 0;
  
#line 136 
  return __retres;
}


#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
static int mlx4_en_phc_adjtime(struct ptp_clock_info *ptp, s64 delta)
{
  int __retres;
  struct mlx4_en_dev *tmp;
  unsigned long flags;
  {
    
#line 148 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)ptp;
    
#line 148 
    tmp = (struct mlx4_en_dev *)__mptr + 18446744073709550880U;
  }
  
#line 148 
  struct mlx4_en_dev *mdev = tmp;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 152 
  flags = _raw_write_lock_irqsave(& mdev->clock_lock);
  
#line 153 
  timecounter_adjtime(& mdev->clock,delta);
  {
    unsigned long __dummy_0;
    unsigned long __dummy2_0;
    
  }
  
#line 154 
  _raw_write_unlock_irqrestore(& mdev->clock_lock,flags);
  
#line 156 
  __retres = 0;
  
#line 156 
  return __retres;
}


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
static int mlx4_en_phc_gettime(struct ptp_clock_info *ptp, struct timespec *ts)
{
  int __retres;
  struct mlx4_en_dev *tmp;
  unsigned long flags;
  u64 ns;
  {
    
#line 170 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)ptp;
    
#line 170 
    tmp = (struct mlx4_en_dev *)__mptr + 18446744073709550880U;
  }
  
#line 170 
  struct mlx4_en_dev *mdev = tmp;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 175 
  flags = _raw_write_lock_irqsave(& mdev->clock_lock);
  
#line 176 
  ns = timecounter_read(& mdev->clock);
  {
    unsigned long __dummy_0;
    unsigned long __dummy2_0;
    
  }
  
#line 177 
  _raw_write_unlock_irqrestore(& mdev->clock_lock,flags);
  
#line 179 
  *ts = ns_to_timespec((long long)ns);
  
#line 181 
  __retres = 0;
  
#line 181 
  return __retres;
}


#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
static int mlx4_en_phc_settime(struct ptp_clock_info *ptp, struct timespec const *ts)
{
  int __retres;
  struct mlx4_en_dev *tmp;
  s64 tmp_0;
  unsigned long flags;
  {
    
#line 195 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)ptp;
    
#line 195 
    tmp = (struct mlx4_en_dev *)__mptr + 18446744073709550880U;
  }
  
#line 195 
  struct mlx4_en_dev *mdev = tmp;
  
#line 197 
  tmp_0 = timespec_to_ns(ts);
  
#line 197 
  u64 ns = (unsigned long long)tmp_0;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 201 
  flags = _raw_write_lock_irqsave(& mdev->clock_lock);
  
#line 202 
  timecounter_init(& mdev->clock,(struct cyclecounter const *)(& mdev->cycles),ns);
  {
    unsigned long __dummy_0;
    unsigned long __dummy2_0;
    
  }
  
#line 203 
  _raw_write_unlock_irqrestore(& mdev->clock_lock,flags);
  
#line 205 
  __retres = 0;
  
#line 205 
  return __retres;
}


#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
static int mlx4_en_phc_enable(struct ptp_clock_info *ptp, struct ptp_clock_request *request, int on)
{
  int __retres;
  
#line 221 
  __retres = -95;
  
#line 221 
  return __retres;
}


#line 224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
static struct ptp_clock_info const mlx4_en_ptp_clock_info = {.owner = & __this_module, .name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .max_adj = 100000000, .n_alarm = 0, .n_ext_ts = 0, .n_per_out = 0, .n_pins = 0, .pps = 0, .pin_config = (struct ptp_pin_desc *)0, .adjfreq = & mlx4_en_phc_adjfreq, .adjtime = & mlx4_en_phc_adjtime, .gettime64 = & mlx4_en_phc_gettime, .settime64 = & mlx4_en_phc_settime, .enable = & mlx4_en_phc_enable, .verify = (int (*)(struct ptp_clock_info *, unsigned int , enum ptp_pin_function , unsigned int ))0};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_clock.c"
void mlx4_en_init_timestamp(struct mlx4_en_dev *mdev)
{
  unsigned long flags;
  u64 ns;
  ktime_t tmp;
  bool tmp_2_0;
  
#line 241 
  struct mlx4_dev *dev = mdev->dev;
  
#line 243 
  u64 zero = 0ULL;
  {
    struct lock_class_key __key;
    
#line 245 
    __rwlock_init(& mdev->clock_lock,"&mdev->clock_lock",& __key);
  }
  
#line 247 
  memset((void *)(& mdev->cycles),0,24UL);
  
#line 248 
  mdev->cycles.read = & mlx4_en_read_clock;
  
#line 249 
  mdev->cycles.mask = 281474976710655ULL;
  
#line 255 
  mdev->cycles.shift = 14U;
  
#line 256 
  mdev->cycles.mult = clocksource_khz2mult((unsigned int)((int)dev->caps.hca_core_clock * 1000),mdev->cycles.shift);
  
#line 258 
  mdev->nominal_c_mult = mdev->cycles.mult;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 260 
  flags = _raw_write_lock_irqsave(& mdev->clock_lock);
  
#line 262 
  tmp = ktime_get_real();
  
#line 261 
  ;
  
#line 261 
  ;
  
#line 261 
  timecounter_init(& mdev->clock,(struct cyclecounter const *)(& mdev->cycles),(unsigned long long)tmp.tv64);
  {
    unsigned long __dummy_0;
    unsigned long __dummy2_0;
    
  }
  
#line 263 
  _raw_write_unlock_irqrestore(& mdev->clock_lock,flags);
  
#line 268 
  ns = cyclecounter_cyc2ns((struct cyclecounter const *)(& mdev->cycles),mdev->cycles.mask,zero,& zero);
  {
    uint32_t __rem;
    
#line 269 
    uint32_t __base = 2000000U;
    
#line 269 
    __rem = (unsigned int)(ns % (unsigned long long)__base);
    
#line 269 
    ns /= (unsigned long long)__base;
    
#line 269 
    uint32_t tmp_2 = __rem;
  }
  
#line 270 
  mdev->overflow_period = (unsigned long)ns;
  
#line 273 
  mdev->ptp_clock_info = mlx4_en_ptp_clock_info;
  
#line 274 
  snprintf((char *)(& mdev->ptp_clock_info.name),16UL,"mlx4 ptp");
  
#line 276 
  mdev->ptp_clock = ptp_clock_register(& mdev->ptp_clock_info,& (mdev->pdev)->dev);
  
#line 278 
  tmp_2_0 = IS_ERR_1((void const *)mdev->ptp_clock);
  
#line 278 
  if ((int)tmp_2_0 != 0) {
    char const *tmp_0;
    
#line 279 
    mdev->ptp_clock = (struct ptp_clock *)0;
    
#line 280 
    tmp_0 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 280 
    printk("\001",tmp_0);
  }
  else {
    char const *tmp_1;
    
#line 282 
    tmp_1 = dev_name((struct device const *)(& (mdev->pdev)->dev));
    
#line 282 
    printk("\001",tmp_1);
  }
  
#line 283 
  return;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/weaver/.tmp_en_clock.c.aux"
static bool IS_ERR_1(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 82 
  ret = ldv_is_err(ptr);
  
#line 83 
  __retres = (_Bool)(ret != 0L);
  
#line 83 
  return __retres;
}


#line 1688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_mac_header(struct sk_buff *skb)
{
  
#line 1925 
  skb->mac_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1926 
  return;
}


#line 1928  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_mac_header(struct sk_buff *skb, int const offset)
{
  
#line 1930 
  skb_reset_mac_header(skb);
  
#line 1931 
  skb->mac_header = (unsigned short)((int)skb->mac_header + (int)((unsigned short)offset));
  
#line 1932 
  return;
}


#line 1349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mlx4/device.h"
int mlx4_test_interrupts(struct mlx4_dev *);


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_selftest.c"
static int mlx4_en_test_registers(struct mlx4_en_priv *priv)
{
  int tmp;
  
#line 45 
  tmp = mlx4_cmd((priv->mdev)->dev,0ULL,0U,(unsigned char)0,(unsigned short)80,60000UL,0);
  
#line 45 
  return tmp;
}


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_selftest.c"
static int mlx4_en_test_loopback_xmit(struct mlx4_en_priv *priv)
{
  int __retres;
  struct sk_buff *skb;
  struct ethhdr *ethh;
  unsigned char *packet;
  unsigned int i;
  int err;
  netdev_tx_t tmp_0;
  
#line 54 
  unsigned int packet_size = 114U;
  
#line 60 
  skb = netdev_alloc_skb(priv->dev,128U);
  
#line 61 
  if (skb == (struct sk_buff *)0) {
    
#line 62 
    __retres = -12;
    
#line 62 
    goto return_label;
  }
  else ;
  
#line 64 
  skb_reserve(skb,0);
  
#line 66 
  ethh = (struct ethhdr *)skb_put(skb,14U);
  
#line 67 
  packet = skb_put(skb,packet_size);
  
#line 68 
  memcpy((void *)(& ethh->h_dest),(void const *)(priv->dev)->dev_addr,6UL);
  
#line 69 
  eth_zero_addr((u8 *)(& ethh->h_source));
  
#line 70 
  ethh->h_proto = (unsigned short)1544U;
  
#line 71 
  skb_set_mac_header(skb,0);
  
#line 72 
  i = 0U;
  
#line 72 
  goto ldv_50725;
  ldv_50724: 
#line 73 
  ;
  
#line 73 
  *(packet + i) = (unsigned char)i;
  
#line 72 
  i += 1U;
  ldv_50725: 
#line 73 
  ;
  
#line 72 
  if (i < packet_size) 
#line 74 
                       goto ldv_50724; else 
#line 77 
                                            goto ldv_50726;
  ldv_50726: 
#line 78 
  ;
  
#line 76 
  tmp_0 = mlx4_en_xmit(skb,priv->dev);
  
#line 76 
  err = (int)tmp_0;
  
#line 77 
  __retres = err;
  return_label: 
#line 77 
                return __retres;
}


#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_selftest.c"
static int mlx4_en_test_loopback(struct mlx4_en_priv *priv)
{
  int __retres;
  int i;
  bool gro_enabled;
  int tmp;
  
#line 82 
  u32 loopback_ok = 0U;
  
#line 86 
  priv->loopback_ok = 0U;
  
#line 87 
  priv->validate_loopback = 1U;
  
#line 88 
  gro_enabled = (_Bool)(((priv->dev)->features & 16384ULL) != 0ULL);
  
#line 90 
  mlx4_en_update_loopback_state(priv->dev,(priv->dev)->features);
  
#line 91 
  (priv->dev)->features &= 18446744073709535231ULL;
  
#line 94 
  tmp = mlx4_en_test_loopback_xmit(priv);
  
#line 94 
  if (tmp != 0) {
    
#line 95 
    en_print("\001",(struct mlx4_en_priv const *)priv,"Transmitting loopback packet failed\n");
    
#line 96 
    goto mlx4_en_test_loopback_exit;
  }
  else ;
  
#line 100 
  i = 0;
  
#line 100 
  goto ldv_50736;
  ldv_50735: 
#line 101 
  ;
  
#line 101 
  msleep(100U);
  
#line 102 
  if (priv->loopback_ok != 0U) {
    
#line 103 
    loopback_ok = 1U;
    
#line 104 
    goto ldv_50734;
  }
  else ;
  
#line 100 
  i += 1;
  ldv_50736: 
#line 101 
  ;
  
#line 100 
  if (i <= 4) 
#line 102 
              goto ldv_50735; else 
#line 105 
                                   goto ldv_50734;
  ldv_50734: 
#line 106 
  ;
  
#line 107 
  if (loopback_ok == 0U) 
#line 108 
                         en_print("\001",(struct mlx4_en_priv const *)priv,"Loopback packet didn\'t arrive\n"); else ;
  mlx4_en_test_loopback_exit: 
#line 110 
  ;
  
#line 112 
  priv->validate_loopback = 0U;
  
#line 114 
  if ((int)gro_enabled != 0) 
#line 115 
                             (priv->dev)->features |= 16384ULL; else ;
  
#line 117 
  mlx4_en_update_loopback_state(priv->dev,(priv->dev)->features);
  
#line 118 
  __retres = loopback_ok == 0U;
  
#line 118 
  return __retres;
}


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_selftest.c"
static int mlx4_en_test_link(struct mlx4_en_priv *priv)
{
  int __retres;
  int tmp;
  
#line 124 
  tmp = mlx4_en_QUERY_PORT(priv->mdev,(unsigned char)((int)((unsigned char)priv->port)));
  
#line 124 
  if (tmp != 0) {
    
#line 125 
    __retres = -12;
    
#line 125 
    goto return_label;
  }
  else ;
  
#line 126 
  if (priv->port_state.link_state == 1) {
    
#line 127 
    __retres = 0;
    
#line 127 
    goto return_label;
  }
  else {
    
#line 129 
    __retres = 1;
    
#line 129 
    goto return_label;
  }
  return_label: 
#line 126 
                return __retres;
}


#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_selftest.c"
static int mlx4_en_test_speed(struct mlx4_en_priv *priv)
{
  int __retres;
  int tmp;
  
#line 135 
  tmp = mlx4_en_QUERY_PORT(priv->mdev,(unsigned char)((int)((unsigned char)priv->port)));
  
#line 135 
  if (tmp != 0) {
    
#line 136 
    __retres = -12;
    
#line 136 
    goto return_label;
  }
  else ;
  
#line 139 
  if (((((priv->port_state.link_speed != 100 && priv->port_state.link_speed != 1000) && priv->port_state.link_speed != 10000) && priv->port_state.link_speed != 20000) && priv->port_state.link_speed != 40000) && priv->port_state.link_speed != 56000) {
    
#line 145 
    __retres = priv->port_state.link_speed;
    
#line 145 
    goto return_label;
  }
  else ;
  
#line 147 
  __retres = 0;
  return_label: 
#line 147 
                return __retres;
}


#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/mellanox/mlx4/en_selftest.c"
void mlx4_en_ex_selftest(struct net_device *dev, u32 *flags, u64 *buf)
{
  int i;
  int carrier_ok;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  
#line 153 
  struct mlx4_en_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 154 
  struct mlx4_en_dev *mdev = priv->mdev;
  
#line 157 
  memset((void *)buf,0,40UL);
  
#line 159 
  if ((*flags & 1U) != 0U) {
    bool tmp_0;
    
#line 161 
    tmp_0 = netif_carrier_ok((struct net_device const *)dev);
    
#line 161 
    carrier_ok = (int)tmp_0;
    
#line 163 
    netif_carrier_off(dev);
    
#line 167 
    msleep(200U);
    
#line 169 
    if ((((priv->mdev)->dev)->caps.flags & 4294967296ULL) != 0ULL) {
      int tmp_1;
      
#line 171 
      tmp_1 = mlx4_en_test_registers(priv);
      
#line 171 
      *(buf + 3U) = (unsigned long long)tmp_1;
      
#line 172 
      if ((int)priv->port_up != 0) {
        int tmp_2;
        
#line 173 
        tmp_2 = mlx4_en_test_loopback(priv);
        
#line 173 
        *(buf + 4U) = (unsigned long long)tmp_2;
      }
      else ;
    }
    else ;
    
#line 176 
    if (carrier_ok != 0) 
#line 177 
                         netif_carrier_on(dev); else ;
  }
  else ;
  
#line 180 
  tmp_3 = mlx4_test_interrupts(mdev->dev);
  
#line 180 
  *buf = (unsigned long long)tmp_3;
  
#line 181 
  tmp_4 = mlx4_en_test_link(priv);
  
#line 181 
  *(buf + 1U) = (unsigned long long)tmp_4;
  
#line 182 
  tmp_5 = mlx4_en_test_speed(priv);
  
#line 182 
  *(buf + 2U) = (unsigned long long)tmp_5;
  
#line 184 
  i = 0;
  
#line 184 
  goto ldv_50753;
  ldv_50752: 
#line 185 
  ;
  
#line 185 
  if (*(buf + i) != 0ULL) 
#line 186 
                          *flags |= 2U; else ;
  
#line 184 
  i += 1;
  ldv_50753: 
#line 185 
  ;
  
#line 184 
  if (i <= 4) 
#line 186 
              goto ldv_50752; else 
#line 189 
                                   goto ldv_50754;
  ldv_50754: 
#line 190 
  ;
  
#line 191 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 90 
int main(void);


#line 91 
void *ldv_initialization_1(void *arg0);


#line 93 
void ldv_dispatch_register_4_4(struct net_device *arg0);


#line 94 
void *ldv_random_allocationless_scenario_8(void *arg0);


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_8;

#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_8 *cf_arg_8;
  int tmp;
  
#line 106 
  tmp = ldv_undef_int();
  
#line 106 
  switch (tmp) {
    case 0: 
#line 107 
    ;
    
#line 108 
    ret = pthread_join(ldv_thread_8,(void **)0);
    
#line 109 
    __VERIFIER_assume(ret == 0);
    
#line 110 
    goto ldv_43157;
    default: 
#line 112 
    ;
    
#line 112 
    __VERIFIER_assume(0);
  }
  ldv_43157: 
#line 113 
  ;
  
#line 114 
  return;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 124 
  ldv_5_netdev = arg0;
  
#line 129 
  ldv_emg_wrapper_mlx4_en_close_2(ldv_5_netdev);
  
#line 133 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 137 
  goto return_label;
  return_label: 
#line 139 
                return;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2)
{
  _Bool __retres;
  struct work_struct *ldv_6_ldv_param_0_2;
  struct delayed_work *ldv_6_delayed_work;
  int tmp_0;
  
#line 152 
  tmp_0 = ldv_undef_int();
  
#line 152 
  if (tmp_0 != 0) {
    
#line 154 
    ldv_6_delayed_work = arg1;
    
#line 158 
    ldv_6_ldv_param_0_2 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    
#line 162 
    if (ldv_6_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      
#line 164 
      (*(ldv_6_delayed_work->work.func))(ldv_6_ldv_param_0_2); else ;
    
#line 169 
    ldv_free((void *)ldv_6_ldv_param_0_2);
    
#line 173 
    __retres = (_Bool)1;
    
#line 173 
    goto return_label;
  }
  else {
    
#line 180 
    __retres = (_Bool)0;
    
#line 180 
    goto return_label;
  }
  return_label: 
#line 152 
                return __retres;
}


#line 190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_4_netdev;
  int tmp_3;
  
#line 194 
  int ldv_4_ret = ldv_undef_int();
  
#line 197 
  ldv_4_ret = ldv_undef_int();
  
#line 200 
  tmp_3 = ldv_undef_int();
  
#line 200 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 202 
    ldv_4_netdev = arg0;
    
#line 207 
    ldv_4_ret = ldv_emg_wrapper_mlx4_en_open_2(ldv_4_netdev);
    
#line 210 
    tmp_1 = ldv_undef_int();
    
#line 210 
    if (tmp_1 != 0) {
      
#line 212 
      __VERIFIER_assume(ldv_4_ret == 0);
      
#line 216 
      ldv_dispatch_register_4_4(ldv_4_netdev);
      
#line 220 
      __retres = 0;
      
#line 220 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 227 
      __VERIFIER_assume(ldv_4_ret != 0);
      
#line 228 
      ldv_failed_register_netdev();
      
#line 229 
      tmp_0 = ldv_undef_int_negative();
      
#line 229 
      __retres = tmp_0;
      
#line 229 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 237 
    ldv_failed_register_netdev();
    
#line 238 
    tmp_2 = ldv_undef_int_negative();
    
#line 238 
    __retres = tmp_2;
    
#line 238 
    goto return_label;
  }
  return_label: 
#line 200 
                return __retres;
}


#line 248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 251 
  ldv_initialize();
  
#line 254 
  ldv_initialization_1((void *)0);
  
#line 256 
  __retres = 0;
  
#line 256 
  return __retres;
}


#line 261  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 268 
  ldv_1_ret = ldv_emg_mlx4_en_init();
  
#line 269 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 272 
  tmp = ldv_undef_int();
  
#line 272 
  if (tmp != 0) {
    
#line 274 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 278 
    __retres = (void *)0;
    
#line 278 
    goto return_label;
  }
  else {
    
#line 282 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 287 
    ldv_emg_mlx4_en_cleanup();
    
#line 291 
    __retres = (void *)0;
    
#line 291 
    goto return_label;
  }
  
#line 294 
  __retres = (void *)0;
  return_label: 
#line 294 
                return __retres;
}


#line 299  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 305 
  ldv_2_netdev = arg0;
  
#line 306 
  ldv_free((void *)ldv_2_netdev);
  
#line 310 
  goto return_label;
  return_label: 
#line 312 
                return;
}


#line 317  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_4_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_8 *cf_arg_8;
  int tmp;
  
#line 320 
  tmp = ldv_undef_int();
  
#line 320 
  switch (tmp) {
    case 0: 
#line 321 
    ;
    
#line 322 
    cf_arg_8 = (struct ldv_struct_random_allocationless_scenario_8 *)ldv_xmalloc(16UL);
    
#line 323 
    cf_arg_8->arg0 = arg0;
    
#line 324 
    ret = pthread_create(& ldv_thread_8,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_8,(void *)cf_arg_8);
    
#line 325 
    __VERIFIER_assume(ret == 0);
    
#line 326 
    goto ldv_43192;
    default: 
#line 328 
    ;
    
#line 328 
    __VERIFIER_assume(0);
  }
  ldv_43192: 
#line 329 
  ;
  
#line 330 
  return;
}


#line 334  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_8(void *arg0)
{
  void *__retres;
  struct sk_buff *ldv_8_ldv_param_0_4;
  struct ethtool_modinfo *ldv_8_ldv_param_1_62;
  unsigned short ldv_8_ldv_param_1_81;
  int ldv_8_ldv_param_1_10;
  struct sk_buff *ldv_8_ldv_param_1_74;
  struct ethtool_cmd *ldv_8_ldv_param_1_60;
  struct ethtool_channels *ldv_8_ldv_param_1_55;
  unsigned char *ldv_8_ldv_param_2_68;
  unsigned int *ldv_8_ldv_param_1_14;
  unsigned short ldv_8_ldv_param_2_40;
  int ldv_8_ldv_param_1_49;
  int ldv_8_ldv_param_1_58;
  int ldv_8_ldv_param_1_44;
  void *ldv_8_ldv_param_1_19;
  int ldv_8_ldv_param_1_26;
  unsigned long long ldv_8_ldv_param_1_61;
  int ldv_8_ldv_param_2_21;
  struct ethtool_drvinfo *ldv_8_ldv_param_1_12;
  struct ethtool_coalesce *ldv_8_ldv_param_1_79;
  void *ldv_8_ldv_param_2_70;
  struct ethtool_eeprom *ldv_8_ldv_param_1_67;
  struct ethtool_tunable *ldv_8_ldv_param_1_72;
  unsigned short (*ldv_8_ldv_param_3_71)(struct net_device *, struct sk_buff *);
  _Bool ldv_8_ldv_param_2_45;
  unsigned short ldv_8_ldv_param_1_56;
  struct ethtool_ringparam *ldv_8_ldv_param_1_17;
  unsigned short ldv_8_ldv_param_2_75;
  struct ethtool_ts_info *ldv_8_ldv_param_1_46;
  struct ethtool_wolinfo *ldv_8_ldv_param_1_63;
  unsigned int ldv_8_ldv_param_3_76;
  struct napi_struct *ldv_8_ldv_param_0_33;
  unsigned short ldv_8_ldv_param_2_82;
  struct net_device *ldv_8_container;
  struct ethtool_wolinfo *ldv_8_ldv_param_1_30;
  int ldv_8_ldv_param_1_84;
  struct ifreq *ldv_8_ldv_param_1_28;
  struct ethtool_channels *ldv_8_ldv_param_1_52;
  struct sk_buff *ldv_8_ldv_param_0_18;
  unsigned int ldv_8_ldv_param_1_13;
  int ldv_8_ldv_param_2_9;
  unsigned char *ldv_8_ldv_param_2_15;
  void *ldv_8_ldv_param_2_73;
  int ldv_8_ldv_param_2_29;
  unsigned char ldv_8_ldv_param_3_51;
  unsigned long long *ldv_8_ldv_param_2_24;
  unsigned int ldv_8_ldv_param_2_27;
  int ldv_8_ldv_param_1_8;
  unsigned long long *ldv_8_ldv_param_2_42;
  int ldv_8_ldv_param_1_47;
  struct sk_buff *ldv_8_ldv_param_1_69;
  struct ifla_vf_stats *ldv_8_ldv_param_2_54;
  struct ifla_vf_info *ldv_8_ldv_param_2_59;
  struct ethtool_rxnfc *ldv_8_ldv_param_1_11;
  struct ethtool_pauseparam *ldv_8_ldv_param_1_43;
  struct netdev_phys_item_id *ldv_8_ldv_param_1_83;
  unsigned char *ldv_8_ldv_param_2_78;
  unsigned char *ldv_8_ldv_param_3_38;
  struct ethtool_ringparam *ldv_8_ldv_param_1_48;
  unsigned char *ldv_8_ldv_param_2_37;
  unsigned short ldv_8_ldv_param_2_65;
  unsigned int *ldv_8_ldv_param_1_36;
  struct ethtool_test *ldv_8_ldv_param_1_23;
  unsigned long long ldv_8_ldv_param_2_5;
  unsigned short ldv_8_ldv_param_1_64;
  unsigned char ldv_8_ldv_param_1_2;
  unsigned int ldv_8_ldv_param_1_77;
  unsigned short ldv_8_ldv_param_2_50;
  struct ethtool_stats *ldv_8_ldv_param_1_41;
  unsigned short ldv_8_ldv_param_1_39;
  unsigned char ldv_8_ldv_param_3_16;
  int ldv_8_ldv_param_1_53;
  enum ethtool_phys_id_state *ldv_8_ldv_param_1_6;
  struct ethtool_tunable *ldv_8_ldv_param_1_31;
  struct ethtool_cmd *ldv_8_ldv_param_1_3;
  unsigned char *ldv_8_ldv_param_2_85;
  unsigned int ldv_8_ldv_param_1_25;
  struct ethtool_coalesce *ldv_8_ldv_param_1_66;
  unsigned int *ldv_8_ldv_param_2_35;
  int ldv_8_ldv_param_1_20;
  void *ldv_8_ldv_param_2_32;
  struct ethtool_rxnfc *ldv_8_ldv_param_1_34;
  unsigned short ldv_8_ldv_param_2_57;
  struct ethtool_pauseparam *ldv_8_ldv_param_1_80;
  int ldv_8_ldv_param_1_7;
  int ldv_8_ldv_param_3_22;
  int tmp_44;
  
#line 423 
  struct ldv_struct_random_allocationless_scenario_8 *data = (struct ldv_struct_random_allocationless_scenario_8 *)arg0;
  
#line 428 
  if (data != (struct ldv_struct_random_allocationless_scenario_8 *)0) {
    
#line 429 
    ldv_8_container = data->arg0;
    
#line 430 
    ldv_free((void *)data);
  }
  else ;
  
#line 438 
  goto ldv_call_8;
  
#line 440 
  __retres = (void *)0;
  
#line 440 
  goto return_label;
  ldv_call_8: 
#line 443 
  ;
  
#line 446 
  tmp_44 = ldv_undef_int();
  
#line 446 
  if (tmp_44 != 0) {
    int tmp;
    
#line 450 
    tmp = ldv_undef_int();
    
#line 450 
    switch (tmp) {
      case 1: 
#line 451 
      ;
      
#line 454 
      mlx4_en_setup_tc(ldv_8_container,(unsigned char)((int)ldv_8_ldv_param_1_2));
      
#line 457 
      goto ldv_43287;
      case 2: 
#line 459 
      ;
      
#line 461 
      ldv_8_ldv_param_2_85 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 466 
      ldv_emg_wrapper_mlx4_en_set_vf_mac_60(ldv_8_container,ldv_8_ldv_param_1_84,ldv_8_ldv_param_2_85);
      
#line 470 
      ldv_free((void *)ldv_8_ldv_param_2_85);
      
#line 473 
      goto ldv_43287;
      case 3: 
#line 475 
      ;
      
#line 477 
      ldv_8_ldv_param_1_83 = (struct netdev_phys_item_id *)ldv_xmalloc_unknown_size(0UL);
      
#line 482 
      ldv_emg_wrapper_mlx4_en_get_phys_port_id_53(ldv_8_container,ldv_8_ldv_param_1_83);
      
#line 486 
      ldv_free((void *)ldv_8_ldv_param_1_83);
      
#line 489 
      goto ldv_43287;
      case 4: 
#line 491 
      ;
      
#line 497 
      ldv_emg_wrapper_mlx4_en_vlan_rx_kill_vid_49(ldv_8_container,(unsigned short)((int)ldv_8_ldv_param_1_81),(unsigned short)((int)ldv_8_ldv_param_2_82));
      
#line 503 
      goto ldv_43287;
      case 5: 
#line 505 
      ;
      
#line 507 
      ldv_8_ldv_param_1_80 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 512 
      ldv_emg_wrapper_mlx4_en_set_pauseparam_57(ldv_8_container,ldv_8_ldv_param_1_80);
      
#line 516 
      ldv_free((void *)ldv_8_ldv_param_1_80);
      
#line 519 
      goto ldv_43287;
      case 6: 
#line 521 
      ;
      
#line 523 
      ldv_8_ldv_param_1_79 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 528 
      ldv_emg_wrapper_mlx4_en_set_coalesce_56(ldv_8_container,ldv_8_ldv_param_1_79);
      
#line 532 
      ldv_free((void *)ldv_8_ldv_param_1_79);
      
#line 535 
      goto ldv_43287;
      case 7: 
#line 537 
      ;
      
#line 539 
      ldv_8_ldv_param_2_78 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 544 
      ldv_emg_wrapper_mlx4_en_get_strings_43(ldv_8_container,ldv_8_ldv_param_1_77,ldv_8_ldv_param_2_78);
      
#line 548 
      ldv_free((void *)ldv_8_ldv_param_2_78);
      
#line 551 
      goto ldv_43287;
      case 8: 
#line 553 
      ;
      
#line 556 
      ldv_emg_wrapper_mlx4_en_netpoll_59(ldv_8_container);
      
#line 559 
      goto ldv_43287;
      case 9: 
#line 561 
      ;
      
#line 563 
      ldv_8_ldv_param_1_74 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 568 
      ldv_emg_wrapper_mlx4_en_filter_rfs_52(ldv_8_container,ldv_8_ldv_param_1_74,(unsigned short)((int)ldv_8_ldv_param_2_75),ldv_8_ldv_param_3_76);
      
#line 572 
      ldv_free((void *)ldv_8_ldv_param_1_74);
      
#line 575 
      goto ldv_43287;
      case 10: 
#line 577 
      ;
      
#line 579 
      ldv_8_ldv_param_2_73 = ldv_xmalloc_unknown_size(0UL);
      
#line 580 
      ldv_8_ldv_param_1_72 = (struct ethtool_tunable *)ldv_xmalloc_unknown_size(0UL);
      
#line 585 
      ldv_emg_wrapper_mlx4_en_get_tunable_51(ldv_8_container,ldv_8_ldv_param_1_72,ldv_8_ldv_param_2_73);
      
#line 589 
      ldv_free(ldv_8_ldv_param_2_73);
      
#line 590 
      ldv_free((void *)ldv_8_ldv_param_1_72);
      
#line 593 
      goto ldv_43287;
      case 11: 
#line 595 
      ;
      
#line 598 
      ldv_emg_wrapper_mlx4_en_tx_timeout_13(ldv_8_container);
      
#line 601 
      goto ldv_43287;
      case 12: 
#line 603 
      ;
      
#line 605 
      ldv_8_ldv_param_3_71 = (unsigned short (*)(struct net_device *, struct sk_buff *))ldv_xmalloc_unknown_size(0UL);
      
#line 606 
      ldv_8_ldv_param_2_70 = ldv_xmalloc_unknown_size(0UL);
      
#line 607 
      ldv_8_ldv_param_1_69 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 612 
      mlx4_en_select_queue(ldv_8_container,ldv_8_ldv_param_1_69,ldv_8_ldv_param_2_70,ldv_8_ldv_param_3_71);
      
#line 616 
      ldv_free((void *)ldv_8_ldv_param_3_71);
      
#line 617 
      ldv_free(ldv_8_ldv_param_2_70);
      
#line 618 
      ldv_free((void *)ldv_8_ldv_param_1_69);
      
#line 621 
      goto ldv_43287;
      case 13: 
#line 623 
      ;
      
#line 625 
      ldv_8_ldv_param_1_67 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 626 
      ldv_8_ldv_param_2_68 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 631 
      ldv_emg_wrapper_mlx4_en_get_module_eeprom_47(ldv_8_container,ldv_8_ldv_param_1_67,ldv_8_ldv_param_2_68);
      
#line 635 
      ldv_free((void *)ldv_8_ldv_param_1_67);
      
#line 636 
      ldv_free((void *)ldv_8_ldv_param_2_68);
      
#line 639 
      goto ldv_43287;
      case 14: 
#line 641 
      ;
      
#line 643 
      ldv_8_ldv_param_1_66 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 648 
      ldv_emg_wrapper_mlx4_en_get_coalesce_46(ldv_8_container,ldv_8_ldv_param_1_66);
      
#line 652 
      ldv_free((void *)ldv_8_ldv_param_1_66);
      
#line 655 
      goto ldv_43287;
      case 15: 
#line 657 
      ;
      
#line 663 
      ldv_emg_wrapper_mlx4_en_vlan_rx_add_vid_45(ldv_8_container,(unsigned short)((int)ldv_8_ldv_param_1_64),(unsigned short)((int)ldv_8_ldv_param_2_65));
      
#line 669 
      goto ldv_43287;
      case 16: 
#line 671 
      ;
      
#line 673 
      ldv_8_ldv_param_1_63 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 678 
      ldv_emg_wrapper_mlx4_en_get_wol_44(ldv_8_container,ldv_8_ldv_param_1_63);
      
#line 682 
      ldv_free((void *)ldv_8_ldv_param_1_63);
      
#line 685 
      goto ldv_43287;
      case 17: 
#line 687 
      ;
      
#line 689 
      ldv_8_ldv_param_1_62 = (struct ethtool_modinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 694 
      ldv_emg_wrapper_mlx4_en_get_module_info_42(ldv_8_container,ldv_8_ldv_param_1_62);
      
#line 698 
      ldv_free((void *)ldv_8_ldv_param_1_62);
      
#line 701 
      goto ldv_43287;
      case 18: 
#line 703 
      ;
      
#line 709 
      ldv_emg_wrapper_mlx4_en_set_features_41(ldv_8_container,ldv_8_ldv_param_1_61);
      
#line 715 
      goto ldv_43287;
      case 19: 
#line 717 
      ;
      
#line 719 
      ldv_8_ldv_param_1_60 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 724 
      ldv_emg_wrapper_mlx4_en_get_settings_40(ldv_8_container,ldv_8_ldv_param_1_60);
      
#line 728 
      ldv_free((void *)ldv_8_ldv_param_1_60);
      
#line 731 
      goto ldv_43287;
      case 20: 
#line 733 
      ;
      
#line 735 
      ldv_8_ldv_param_2_59 = (struct ifla_vf_info *)ldv_xmalloc_unknown_size(0UL);
      
#line 740 
      ldv_emg_wrapper_mlx4_en_get_vf_config_39(ldv_8_container,ldv_8_ldv_param_1_58,ldv_8_ldv_param_2_59);
      
#line 744 
      ldv_free((void *)ldv_8_ldv_param_2_59);
      
#line 747 
      goto ldv_43287;
      case 21: 
#line 749 
      ;
      
#line 755 
      ldv_emg_wrapper_mlx4_en_add_vxlan_port_9(ldv_8_container,(unsigned short)((int)ldv_8_ldv_param_1_56),(unsigned short)((int)ldv_8_ldv_param_2_57));
      
#line 761 
      goto ldv_43287;
      case 22: 
#line 763 
      ;
      
#line 765 
      ldv_8_ldv_param_1_55 = (struct ethtool_channels *)ldv_xmalloc_unknown_size(0UL);
      
#line 770 
      ldv_emg_wrapper_mlx4_en_set_channels_37(ldv_8_container,ldv_8_ldv_param_1_55);
      
#line 774 
      ldv_free((void *)ldv_8_ldv_param_1_55);
      
#line 777 
      goto ldv_43287;
      case 23: 
#line 779 
      ;
      
#line 781 
      ldv_8_ldv_param_2_54 = (struct ifla_vf_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 786 
      ldv_emg_wrapper_mlx4_en_get_vf_stats_36(ldv_8_container,ldv_8_ldv_param_1_53,ldv_8_ldv_param_2_54);
      
#line 790 
      ldv_free((void *)ldv_8_ldv_param_2_54);
      
#line 793 
      goto ldv_43287;
      case 24: 
#line 795 
      ;
      
#line 797 
      ldv_8_ldv_param_1_52 = (struct ethtool_channels *)ldv_xmalloc_unknown_size(0UL);
      
#line 802 
      ldv_emg_wrapper_mlx4_en_get_channels_35(ldv_8_container,ldv_8_ldv_param_1_52);
      
#line 806 
      ldv_free((void *)ldv_8_ldv_param_1_52);
      
#line 809 
      goto ldv_43287;
      case 25: 
#line 811 
      ;
      
#line 817 
      ldv_emg_wrapper_mlx4_en_set_vf_vlan_34(ldv_8_container,ldv_8_ldv_param_1_49,(unsigned short)((int)ldv_8_ldv_param_2_50),(unsigned char)((int)ldv_8_ldv_param_3_51));
      
#line 823 
      goto ldv_43287;
      case 26: 
#line 825 
      ;
      
#line 828 
      (*ldv_emg_alias_eth_validate_addr_33)(ldv_8_container);
      
#line 831 
      goto ldv_43287;
      case 27: 
#line 833 
      ;
      
#line 835 
      ldv_8_ldv_param_1_48 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 840 
      ldv_emg_wrapper_mlx4_en_get_ringparam_32(ldv_8_container,ldv_8_ldv_param_1_48);
      
#line 844 
      ldv_free((void *)ldv_8_ldv_param_1_48);
      
#line 847 
      goto ldv_43287;
      case 28: 
#line 849 
      ;
      
#line 855 
      ldv_emg_wrapper_mlx4_en_change_mtu_5(ldv_8_container,ldv_8_ldv_param_1_47);
      
#line 861 
      goto ldv_43287;
      case 29: 
#line 863 
      ;
      
#line 865 
      ldv_8_ldv_param_1_46 = (struct ethtool_ts_info *)ldv_xmalloc_unknown_size(0UL);
      
#line 870 
      ldv_emg_wrapper_mlx4_en_get_ts_info_54(ldv_8_container,ldv_8_ldv_param_1_46);
      
#line 874 
      ldv_free((void *)ldv_8_ldv_param_1_46);
      
#line 877 
      goto ldv_43287;
      case 30: 
#line 879 
      ;
      
#line 882 
      ldv_emg_wrapper_mlx4_en_get_rxfh_indir_size_30(ldv_8_container);
      
#line 885 
      goto ldv_43287;
      case 31: 
#line 887 
      ;
      
#line 890 
      (*ldv_emg_alias_ethtool_op_get_link_29)(ldv_8_container);
      
#line 893 
      goto ldv_43287;
      case 32: 
#line 895 
      ;
      
#line 901 
      ldv_emg_wrapper_mlx4_en_set_vf_spoofchk_28(ldv_8_container,ldv_8_ldv_param_1_44,(_Bool)((_Bool)((int)ldv_8_ldv_param_2_45) != 0));
      
#line 907 
      goto ldv_43287;
      case 33: 
#line 909 
      ;
      
#line 911 
      ldv_8_ldv_param_1_43 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 916 
      ldv_emg_wrapper_mlx4_en_get_pauseparam_27(ldv_8_container,ldv_8_ldv_param_1_43);
      
#line 920 
      ldv_free((void *)ldv_8_ldv_param_1_43);
      
#line 923 
      goto ldv_43287;
      case 34: 
#line 925 
      ;
      
#line 928 
      ldv_emg_wrapper_mlx4_en_set_rx_mode_26(ldv_8_container);
      
#line 931 
      goto ldv_43287;
      case 35: 
#line 933 
      ;
      
#line 935 
      ldv_8_ldv_param_1_41 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 936 
      ldv_8_ldv_param_2_42 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 941 
      ldv_emg_wrapper_mlx4_en_get_ethtool_stats_25(ldv_8_container,ldv_8_ldv_param_1_41,ldv_8_ldv_param_2_42);
      
#line 945 
      ldv_free((void *)ldv_8_ldv_param_1_41);
      
#line 946 
      ldv_free((void *)ldv_8_ldv_param_2_42);
      
#line 949 
      goto ldv_43287;
      case 36: 
#line 951 
      ;
      
#line 957 
      ldv_emg_wrapper_mlx4_en_del_vxlan_port_24(ldv_8_container,(unsigned short)((int)ldv_8_ldv_param_1_39),(unsigned short)((int)ldv_8_ldv_param_2_40));
      
#line 963 
      goto ldv_43287;
      case 37: 
#line 965 
      ;
      
#line 967 
      ldv_8_ldv_param_1_36 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 968 
      ldv_8_ldv_param_3_38 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 969 
      ldv_8_ldv_param_2_37 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 974 
      ldv_emg_wrapper_mlx4_en_get_rxfh_23(ldv_8_container,ldv_8_ldv_param_1_36,ldv_8_ldv_param_2_37,ldv_8_ldv_param_3_38);
      
#line 978 
      ldv_free((void *)ldv_8_ldv_param_1_36);
      
#line 979 
      ldv_free((void *)ldv_8_ldv_param_3_38);
      
#line 980 
      ldv_free((void *)ldv_8_ldv_param_2_37);
      
#line 983 
      goto ldv_43287;
      case 38: 
#line 985 
      ;
      
#line 988 
      ldv_emg_wrapper_mlx4_en_get_priv_flags_22(ldv_8_container);
      
#line 991 
      goto ldv_43287;
      case 39: 
#line 993 
      ;
      
#line 995 
      ldv_8_ldv_param_1_34 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
      
#line 996 
      ldv_8_ldv_param_2_35 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 1001 
      ldv_emg_wrapper_mlx4_en_get_rxnfc_21(ldv_8_container,ldv_8_ldv_param_1_34,ldv_8_ldv_param_2_35);
      
#line 1005 
      ldv_free((void *)ldv_8_ldv_param_1_34);
      
#line 1006 
      ldv_free((void *)ldv_8_ldv_param_2_35);
      
#line 1009 
      goto ldv_43287;
      case 40: 
#line 1011 
      ;
      
#line 1013 
      ldv_8_ldv_param_0_33 = (struct napi_struct *)ldv_xmalloc_unknown_size(0UL);
      
#line 1018 
      ldv_emg_wrapper_mlx4_en_low_latency_recv_58(ldv_8_ldv_param_0_33);
      
#line 1022 
      ldv_free((void *)ldv_8_ldv_param_0_33);
      
#line 1025 
      goto ldv_43287;
      case 41: 
#line 1027 
      ;
      
#line 1030 
      ldv_emg_wrapper_mlx4_en_get_rxfh_key_size_55(ldv_8_container);
      
#line 1033 
      goto ldv_43287;
      case 42: 
#line 1035 
      ;
      
#line 1037 
      ldv_8_ldv_param_1_31 = (struct ethtool_tunable *)ldv_xmalloc_unknown_size(0UL);
      
#line 1038 
      ldv_8_ldv_param_2_32 = ldv_xmalloc_unknown_size(0UL);
      
#line 1043 
      ldv_emg_wrapper_mlx4_en_set_tunable_19(ldv_8_container,ldv_8_ldv_param_1_31,ldv_8_ldv_param_2_32);
      
#line 1047 
      ldv_free((void *)ldv_8_ldv_param_1_31);
      
#line 1048 
      ldv_free(ldv_8_ldv_param_2_32);
      
#line 1051 
      goto ldv_43287;
      case 43: 
#line 1053 
      ;
      
#line 1056 
      ldv_emg_wrapper_mlx4_en_get_stats_18(ldv_8_container);
      
#line 1059 
      goto ldv_43287;
      case 44: 
#line 1061 
      ;
      
#line 1063 
      ldv_8_ldv_param_1_30 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1068 
      ldv_emg_wrapper_mlx4_en_set_wol_17(ldv_8_container,ldv_8_ldv_param_1_30);
      
#line 1072 
      ldv_free((void *)ldv_8_ldv_param_1_30);
      
#line 1075 
      goto ldv_43287;
      case 45: 
#line 1077 
      ;
      
#line 1079 
      ldv_8_ldv_param_1_28 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 1084 
      ldv_emg_wrapper_mlx4_en_ioctl_16(ldv_8_container,ldv_8_ldv_param_1_28,ldv_8_ldv_param_2_29);
      
#line 1088 
      ldv_free((void *)ldv_8_ldv_param_1_28);
      
#line 1091 
      goto ldv_43287;
      case 46: 
#line 1093 
      ;
      
#line 1099 
      ldv_emg_wrapper_mlx4_en_set_tx_maxrate_15(ldv_8_container,ldv_8_ldv_param_1_26,ldv_8_ldv_param_2_27);
      
#line 1105 
      goto ldv_43287;
      case 47: 
#line 1107 
      ;
      
#line 1113 
      ldv_emg_wrapper_mlx4_en_set_msglevel_31(ldv_8_container,ldv_8_ldv_param_1_25);
      
#line 1119 
      goto ldv_43287;
      case 48: 
#line 1121 
      ;
      
#line 1123 
      ldv_8_ldv_param_1_23 = (struct ethtool_test *)ldv_xmalloc_unknown_size(0UL);
      
#line 1124 
      ldv_8_ldv_param_2_24 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1129 
      ldv_emg_wrapper_mlx4_en_self_test_14(ldv_8_container,ldv_8_ldv_param_1_23,ldv_8_ldv_param_2_24);
      
#line 1133 
      ldv_free((void *)ldv_8_ldv_param_1_23);
      
#line 1134 
      ldv_free((void *)ldv_8_ldv_param_2_24);
      
#line 1137 
      goto ldv_43287;
      case 49: 
#line 1139 
      ;
      
#line 1145 
      ldv_emg_wrapper_mlx4_en_set_vf_rate_20(ldv_8_container,ldv_8_ldv_param_1_20,ldv_8_ldv_param_2_21,ldv_8_ldv_param_3_22);
      
#line 1151 
      goto ldv_43287;
      case 50: 
#line 1153 
      ;
      
#line 1155 
      ldv_8_ldv_param_1_19 = ldv_xmalloc_unknown_size(0UL);
      
#line 1160 
      ldv_emg_wrapper_mlx4_en_set_mac_12(ldv_8_container,ldv_8_ldv_param_1_19);
      
#line 1164 
      ldv_free(ldv_8_ldv_param_1_19);
      
#line 1167 
      goto ldv_43287;
      case 51: 
#line 1169 
      ;
      
#line 1171 
      ldv_8_ldv_param_0_18 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1176 
      mlx4_en_xmit(ldv_8_ldv_param_0_18,ldv_8_container);
      
#line 1180 
      ldv_free((void *)ldv_8_ldv_param_0_18);
      
#line 1183 
      goto ldv_43287;
      case 52: 
#line 1185 
      ;
      
#line 1188 
      ldv_emg_wrapper_mlx4_en_get_msglevel_11(ldv_8_container);
      
#line 1191 
      goto ldv_43287;
      case 53: 
#line 1193 
      ;
      
#line 1195 
      ldv_8_ldv_param_1_17 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1200 
      ldv_emg_wrapper_mlx4_en_set_ringparam_10(ldv_8_container,ldv_8_ldv_param_1_17);
      
#line 1204 
      ldv_free((void *)ldv_8_ldv_param_1_17);
      
#line 1207 
      goto ldv_43287;
      case 54: 
#line 1209 
      ;
      
#line 1211 
      ldv_8_ldv_param_1_14 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 1212 
      ldv_8_ldv_param_2_15 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1217 
      ldv_emg_wrapper_mlx4_en_set_rxfh_38(ldv_8_container,ldv_8_ldv_param_1_14,ldv_8_ldv_param_2_15,(unsigned char)((int)ldv_8_ldv_param_3_16));
      
#line 1221 
      ldv_free((void *)ldv_8_ldv_param_1_14);
      
#line 1222 
      ldv_free((void *)ldv_8_ldv_param_2_15);
      
#line 1225 
      goto ldv_43287;
      case 55: 
#line 1227 
      ;
      
#line 1233 
      ldv_emg_wrapper_mlx4_en_set_priv_flags_8(ldv_8_container,ldv_8_ldv_param_1_13);
      
#line 1239 
      goto ldv_43287;
      case 56: 
#line 1241 
      ;
      
#line 1243 
      ldv_8_ldv_param_1_12 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1248 
      ldv_emg_wrapper_mlx4_en_get_drvinfo_7(ldv_8_container,ldv_8_ldv_param_1_12);
      
#line 1252 
      ldv_free((void *)ldv_8_ldv_param_1_12);
      
#line 1255 
      goto ldv_43287;
      case 57: 
#line 1257 
      ;
      
#line 1259 
      ldv_8_ldv_param_1_11 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
      
#line 1264 
      ldv_emg_wrapper_mlx4_en_set_rxnfc_6(ldv_8_container,ldv_8_ldv_param_1_11);
      
#line 1268 
      ldv_free((void *)ldv_8_ldv_param_1_11);
      
#line 1271 
      goto ldv_43287;
      case 58: 
#line 1273 
      ;
      
#line 1279 
      ldv_emg_wrapper_mlx4_en_change_mtu_5(ldv_8_container,ldv_8_ldv_param_1_10);
      
#line 1285 
      goto ldv_43287;
      case 59: 
#line 1287 
      ;
      
#line 1293 
      ldv_emg_wrapper_mlx4_en_set_vf_link_state_4(ldv_8_container,ldv_8_ldv_param_1_8,ldv_8_ldv_param_2_9);
      
#line 1299 
      goto ldv_43287;
      case 60: 
#line 1301 
      ;
      
#line 1307 
      ldv_emg_wrapper_mlx4_en_get_sset_count_50(ldv_8_container,ldv_8_ldv_param_1_7);
      
#line 1313 
      goto ldv_43287;
      case 61: 
#line 1315 
      ;
      
#line 1317 
      ldv_8_ldv_param_1_6 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 1322 
      ldv_emg_wrapper_mlx4_en_set_phys_id_3(ldv_8_container,*ldv_8_ldv_param_1_6);
      
#line 1326 
      ldv_free((void *)ldv_8_ldv_param_1_6);
      
#line 1329 
      goto ldv_43287;
      case 62: 
#line 1331 
      ;
      
#line 1333 
      ldv_8_ldv_param_0_4 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1338 
      ldv_emg_wrapper_mlx4_en_features_check_48(ldv_8_ldv_param_0_4,ldv_8_container,ldv_8_ldv_param_2_5);
      
#line 1342 
      ldv_free((void *)ldv_8_ldv_param_0_4);
      
#line 1345 
      goto ldv_43287;
      case 63: 
#line 1347 
      ;
      
#line 1349 
      ldv_8_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1354 
      ldv_emg_wrapper_mlx4_en_set_settings_2(ldv_8_container,ldv_8_ldv_param_1_3);
      
#line 1358 
      ldv_free((void *)ldv_8_ldv_param_1_3);
      
#line 1361 
      goto ldv_43287;
      default: 
#line 1363 
      ;
      
#line 1363 
      __VERIFIER_assume(0);
    }
    ldv_43287: 
#line 1372 
    ;
    
#line 1372 
    goto ldv_call_8;
  }
  else {
    
#line 1380 
    __retres = (void *)0;
    
#line 1380 
    goto return_label;
  }
  
#line 1383 
  __retres = (void *)0;
  return_label: 
#line 1383 
                return __retres;
}


#line 1388  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_3_netdev;
  int tmp_0;
  
#line 1395 
  tmp_0 = ldv_undef_int();
  
#line 1395 
  if (tmp_0 != 0) {
    
#line 1397 
    ldv_3_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 1401 
    __retres = ldv_3_netdev;
    
#line 1401 
    goto return_label;
  }
  else {
    
#line 1408 
    __retres = (struct net_device *)0;
    
#line 1408 
    goto return_label;
  }
  return_label: 
#line 1395 
                return __retres;
}


#line 1418  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1)
{
  _Bool __retres;
  struct work_struct *ldv_7_work_struct;
  int tmp;
  
#line 1425 
  tmp = ldv_undef_int();
  
#line 1425 
  if (tmp != 0) {
    
#line 1427 
    ldv_7_work_struct = arg1;
    
#line 1431 
    if (ldv_7_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1433 
      (*(ldv_7_work_struct->func))(ldv_7_work_struct); else ;
    
#line 1438 
    __retres = (_Bool)1;
    
#line 1438 
    goto return_label;
  }
  else {
    
#line 1445 
    __retres = (_Bool)0;
    
#line 1445 
    goto return_label;
  }
  return_label: 
#line 1425 
                return __retres;
}


