/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39 
struct rw_semaphore;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct vm_area_struct;

#line 173 
struct inode;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_47 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_46 {
   struct __anonstruct_47 __anonCompField___anonunion_46_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_46 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_53 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_54 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_52 {
   struct __anonstruct_53 __anonCompField___anonunion_52_23 ;
   struct __anonstruct_54 __anonCompField___anonunion_52_24 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_52 __anonCompField_uprobe_task_25 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_55 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_55 mm_context_t;

#line 27 
struct address_space;

#line 28 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_56 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_58 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_62 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_61 {
   atomic_t _mapcount ;
   struct __anonstruct_62 __anonCompField___anonunion_61_28 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_60 {
   union __anonunion_61 __anonCompField___anonstruct_60_29 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_59 {
   unsigned long counters ;
   struct __anonstruct_60 __anonCompField___anonunion_59_30 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_57 {
   union __anonunion_58 __anonCompField___anonstruct_57_27 ;
   union __anonunion_59 __anonCompField___anonstruct_57_31 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_64 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_65 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_63 {
   struct list_head lru ;
   struct __anonstruct_64 __anonCompField___anonunion_63_33 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_65 __anonCompField___anonunion_63_34 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_66 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_56 __anonCompField_page_26 ;
   struct __anonstruct_57 __anonCompField_page_32 ;
   union __anonunion_63 __anonCompField_page_35 ;
   union __anonunion_66 __anonCompField_page_36 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_67 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_67 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct bio_vec;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_69 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_69 __anonCompField_iov_iter_37 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_12086 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_12086 socket_state;

#line 54 
struct poll_table_struct;

#line 55 
struct pipe_inode_info;

#line 56 
struct net;

#line 73 
struct fasync_struct;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct sock;

#line 93 
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_70 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_70 nodemask_t;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 33 
struct dentry;

#line 34 
struct user_namespace;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_162 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_162 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_163 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_163 kgid_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_164 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_164 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_166 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_167 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_169 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_171 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_170 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_171 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_172 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_173 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_165 {
   int _pad[28U] ;
   struct __anonstruct__kill_166 _kill ;
   struct __anonstruct__timer_167 _timer ;
   struct __anonstruct__rt_168 _rt ;
   struct __anonstruct__sigchld_169 _sigchld ;
   struct __anonstruct__sigfault_170 _sigfault ;
   struct __anonstruct__sigpoll_172 _sigpoll ;
   struct __anonstruct__sigsys_173 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_165 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_180 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_181 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_183 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_182 {
   struct keyring_index_key index_key ;
   struct __anonstruct_183 __anonCompField___anonunion_182_50 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_184 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_186 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_185 {
   union __anonunion_payload_186 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_180 __anonCompField_key_48 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_181 __anonCompField_key_49 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_182 __anonCompField_key_51 ;
   union __anonunion_type_data_184 type_data ;
   union __anonunion_185 __anonCompField_key_52 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_187 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_187 __anonCompField_idr_layer_53 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 31 
struct kernfs_node;

#line 32 
struct kernfs_ops;

#line 33 
struct kernfs_open_file;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct iattr;

#line 177 
struct super_block;

#line 178 
struct file_system_type;

#line 179 
struct kernfs_open_node;

#line 180 
struct kernfs_iattrs;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_206 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_206 __anonCompField_kernfs_node_57 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct kobject;

#line 478 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_207 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_207 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_22418 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_212 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_213 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_22418 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_212 __anonCompField_nf_bridge_info_61 ;
   union __anonunion_213 __anonCompField_nf_bridge_info_62 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_216 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_215 {
   u64 v64 ;
   struct __anonstruct_216 __anonCompField___anonunion_215_63 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_215 __anonCompField_skb_mstamp_64 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_219 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_218 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_219 __anonCompField___anonstruct_218_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_217 {
   struct __anonstruct_218 __anonCompField___anonunion_217_66 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_221 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_220 {
   __wsum csum ;
   struct __anonstruct_221 __anonCompField___anonunion_220_68 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_222 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_217 __anonCompField_sk_buff_67 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_220 __anonCompField_sk_buff_69 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_222 __anonCompField_sk_buff_70 ;
   __u32 secmark ;
   union __anonunion_223 __anonCompField_sk_buff_71 ;
   union __anonunion_224 __anonCompField_sk_buff_72 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_226 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_226 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_227 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_227 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_228 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_228 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_229 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_229 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_230 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_230 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_231 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_231 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_232 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_232 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_233 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_233 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_234 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_235 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_234 ifr_ifrn ;
   union __anonunion_ifr_ifru_235 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_240 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_239 {
   struct __anonstruct_240 __anonCompField___anonunion_239_73 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_239 __anonCompField_lockref_74 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_242 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_241 {
   struct __anonstruct_242 __anonCompField___anonunion_241_75 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_241 __anonCompField_qstr_76 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_243 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_243 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_247 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_246 {
   struct __anonstruct_247 __anonCompField___anonunion_246_77 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_246 __anonCompField_radix_tree_node_78 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_251 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_251 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_252 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_252 __anonCompField_kqid_80 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_255 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_256 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_257 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_255 __anonCompField_inode_81 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_256 __anonCompField_inode_82 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_257 __anonCompField_inode_83 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_258 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_258 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_260 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_259 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_260 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_259 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_27980 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_27980 phy_interface_t;

#line 126 
enum ldv_28033 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28033 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29745 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29746 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29745 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29746 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_319 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_319 __anonCompField_kernel_param_94 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_326 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_326 __anonCompField_pci_dev_95 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct eeprom_93cx6 {
   void *data ;
   void (*register_read)(struct eeprom_93cx6 *) ;
   void (*register_write)(struct eeprom_93cx6 *) ;
   int width ;
   char drive_data ;
   char reg_data_in ;
   char reg_data_out ;
   char reg_data_clock ;
   char reg_chip_select ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/eeprom_93cx6.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
enum led_brightness {
    LED_OFF = 0,
    LED_HALF = 127,
    LED_FULL = 255
};

#line 58 
struct led_trigger;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
struct led_classdev {
   char const *name ;
   enum led_brightness brightness ;
   enum led_brightness max_brightness ;
   int flags ;
   void (*brightness_set)(struct led_classdev *, enum led_brightness ) ;
   int (*brightness_set_sync)(struct led_classdev *, enum led_brightness ) ;
   enum led_brightness (*brightness_get)(struct led_classdev *) ;
   int (*blink_set)(struct led_classdev *, unsigned long *, unsigned long *) ;
   struct device *dev ;
   struct attribute_group const **groups ;
   struct list_head node ;
   char const *default_trigger ;
   unsigned long blink_delay_on ;
   unsigned long blink_delay_off ;
   struct timer_list blink_timer ;
   int blink_brightness ;
   void (*flash_resume)(struct led_classdev *) ;
   struct work_struct set_brightness_work ;
   int delayed_set_value ;
   struct rw_semaphore trigger_lock ;
   struct led_trigger *trigger ;
   struct list_head trig_list ;
   void *trigger_data ;
   bool activated ;
   struct mutex led_access ;
};

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/leds.h"
struct led_trigger {
   char const *name ;
   void (*activate)(struct led_classdev *) ;
   void (*deactivate)(struct led_classdev *) ;
   rwlock_t leddev_list_lock ;
   struct list_head led_cdevs ;
   struct list_head next_trig ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/input-polldev.h"
struct __kfifo {
   unsigned int in ;
   unsigned int out ;
   unsigned int mask ;
   unsigned int esize ;
   void *data ;
};

#line 832  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kfifo.h"
struct ewma {
   unsigned long internal ;
   unsigned long factor ;
   unsigned long weight ;
};

#line 1161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
};

#line 1180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
};

#line 1204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
};

#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
};

#line 1354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
};

#line 1435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
};

#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NUM_NL80211_IFTYPES = 12,
    NL80211_IFTYPE_MAX = 11
};

#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
};

#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};

#line 2484 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};

#line 2491 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};

#line 2524 
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};

#line 2607 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};

#line 2618 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};

#line 2650 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    __NL80211_AUTHTYPE_NUM = 5,
    NL80211_AUTHTYPE_MAX = 4,
    NL80211_AUTHTYPE_AUTOMATIC = 5
};

#line 2668 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1
};

#line 3559 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};

#line 3596 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};

#line 3734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};

#line 3871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};

#line 3883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};

#line 4131 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};

#line 4153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};

#line 4581 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};

#line 4587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[2U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};

#line 205 
struct wiphy;

#line 206 
enum ieee80211_band {
    IEEE80211_BAND_2GHZ = 0,
    IEEE80211_BAND_5GHZ = 1,
    IEEE80211_BAND_60GHZ = 2,
    IEEE80211_NUM_BANDS = 3
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_channel {
   enum ieee80211_band band ;
   u16 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};

#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum ieee80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u32 filled ;
   s8 noise ;
};

#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
};

#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};

#line 914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
};

#line 964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};

#line 989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct station_info {
   u32 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 const *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   struct cfg80211_tid_stats pertid[17U] ;
};

#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};

#line 1428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   u32 rates[3U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   bool aborted ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   s32 rssi_thold ;
};

#line 1499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u32 interval ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1561 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};

#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 const *ssid ;
   u8 const *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 const *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool userspace_handles_dfs ;
   int mcast_rate[3U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
};

#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 const *bssid ;
   u8 const *bssid_hint ;
   u8 const *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 const *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 const *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
};

#line 1882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_control_370 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};

#line 1882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_370 control[3U] ;
};

#line 1916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 const *mask ;
   u8 const *pattern ;
   int pattern_len ;
   int pkt_offset ;
};

#line 1933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 const *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 const *wake_data ;
   u8 const *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};

#line 1968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};

#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 const *kek ;
   u8 const *kck ;
   u8 const *replay_ctr ;
};

#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};

#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit const *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
};

#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};

#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature const *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};

#line 2910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support const *tcp ;
};

#line 2935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};

#line 2960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void const *, int ) ;
};

#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes const *mgmt_stypes ;
   struct ieee80211_iface_combination const *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[1U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   int n_cipher_suites ;
   u32 const *cipher_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support const *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 const *extended_capabilities ;
   u8 const *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   void const *privid ;
   struct ieee80211_supported_band *bands[3U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain const *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap const *ht_capa_mod_mask ;
   struct ieee80211_vht_cap const *vht_capa_mod_mask ;
   possible_net_t _net ;
   struct iw_handler_def const *wext ;
   struct wiphy_coalesce_support const *coalesce ;
   struct wiphy_vendor_command const *vendor_commands ;
   struct nl80211_vendor_cmd_info const *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   char priv[0U] ;
};

#line 3369 
struct cfg80211_conn;

#line 3370 
struct cfg80211_internal_bss;

#line 3371 
struct cfg80211_cached_keys;

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_wext_371 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 const *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool p2p_started ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   u32 owner_nlportid ;
   struct __anonstruct_wext_371 wext ;
};

#line 5244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};

#line 224 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};

#line 229 
struct ieee80211_vif;

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};

#line 287 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};

#line 294 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};

#line 369 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};

#line 376 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};

#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};

#line 407 
struct ieee80211_sta;

#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};

#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_u_372 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};

#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_372 u ;
};

#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 const *bssid ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[3U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   struct cfg80211_chan_def chandef ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
};

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) count : 5 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) flags : 11 ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_376 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_rts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_cts_prot : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) short_preamble : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skip_table : 1 ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_375 {
   struct __anonstruct_376 __anonCompField___anonunion_375_100 ;
   unsigned long jiffies ;
};

#line 819 
struct ieee80211_key_conf;

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_control_374 {
   union __anonunion_375 __anonCompField___anonstruct_control_374_101 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_ack_377 {
   u64 cookie ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_status_378 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   void *status_driver_data[2U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_379 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_373 {
   struct __anonstruct_control_374 control ;
   struct __anonstruct_ack_377 ack ;
   struct __anonstruct_status_378 status ;
   struct __anonstruct_379 __anonCompField___anonunion_373_102 ;
   void *driver_data[5U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id ;
   union __anonunion_373 __anonCompField_ieee80211_tx_info_103 ;
};

#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 const *ies[3U] ;
   size_t len[3U] ;
   u8 const *common_ies ;
   size_t common_ie_len ;
};

#line 1174 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   int max_sleep_period ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};

#line 1285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
};

#line 1316 
struct ieee80211_txq;

#line 1316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   u8 drv_priv[0U] ;
};

#line 1432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   u8 flags ;
   s8 keyidx ;
   u8 keylen ;
   u8 key[0U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_tkip_381 {
   u32 iv32 ;
   u16 iv16 ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_ccmp_382 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_aes_cmac_383 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_aes_gmac_384 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_gcmp_385 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_hw_386 {
   u8 seq[16U] ;
   u8 seq_len ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_380 {
   struct __anonstruct_tkip_381 tkip ;
   struct __anonstruct_ccmp_382 ccmp ;
   struct __anonstruct_aes_cmac_383 aes_cmac ;
   struct __anonstruct_aes_gmac_384 aes_gmac ;
   struct __anonstruct_gcmp_385 gcmp ;
   struct __anonstruct_hw_386 hw ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_380 __anonCompField_ieee80211_key_seq_104 ;
};

#line 1547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};

#line 1577 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};

#line 1582 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};

#line 1590 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_rate_387 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_387 rate[4U] ;
};

#line 1645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[3U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   struct ieee80211_txq *txq[16U] ;
   u8 drv_priv[0U] ;
};

#line 1703 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};

#line 1708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};

#line 1726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};

#line 1748 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    NUM_IEEE80211_HW_FLAGS = 29
};

#line 1781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char const *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u8 max_rx_aggregation_subframes ;
   u8 max_tx_aggregation_subframes ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme const *cipher_schemes ;
   int txq_ac_max_pending ;
};

#line 2070  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};

#line 2084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};

#line 2194 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};

#line 2204 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};

#line 2216 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};

#line 2221 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};

#line 2226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 const *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_remove_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params const *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, enum ieee80211_ampdu_mlme_action , struct ieee80211_sta *, u16 , u16 *, u8 ) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask const *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event const *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
};

#line 5433 
struct rt2x00_dev;

#line 5438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct regcsr {
   void (*read)(struct rt2x00_dev *, unsigned int const , u32 *) ;
   void (*write)(struct rt2x00_dev *, unsigned int const , u32 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00debug.h"
struct regeeprom {
   void (*read)(struct rt2x00_dev *, unsigned int const , u16 *) ;
   void (*write)(struct rt2x00_dev *, unsigned int const , u16 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00debug.h"
struct regbbp {
   void (*read)(struct rt2x00_dev *, unsigned int const , u8 *) ;
   void (*write)(struct rt2x00_dev *, unsigned int const , u8 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00debug.h"
struct regrf {
   void (*read)(struct rt2x00_dev *, unsigned int const , u32 *) ;
   void (*write)(struct rt2x00_dev *, unsigned int const , u32 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00debug.h"
struct regrfcsr {
   void (*read)(struct rt2x00_dev *, unsigned int const , u8 *) ;
   void (*write)(struct rt2x00_dev *, unsigned int const , u8 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00debug.h"
struct rt2x00debug {
   struct module *owner ;
   struct regcsr csr ;
   struct regeeprom eeprom ;
   struct regbbp bbp ;
   struct regrf rf ;
   struct regrfcsr rfcsr ;
};

#line 68 
enum rt2x00_dump_type {
    DUMP_FRAME_RXDONE = 1,
    DUMP_FRAME_TX = 2,
    DUMP_FRAME_TXDONE = 3,
    DUMP_FRAME_BEACON = 4
};

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00dump.h"
enum led_type {
    LED_TYPE_RADIO = 0,
    LED_TYPE_ASSOC = 1,
    LED_TYPE_ACTIVITY = 2,
    LED_TYPE_QUALITY = 3
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00dump.h"
struct rt2x00_led {
   struct rt2x00_dev *rt2x00dev ;
   struct led_classdev led_dev ;
   enum led_type type ;
   unsigned int flags ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00leds.h"
enum antenna {
    ANTENNA_SW_DIVERSITY = 0,
    ANTENNA_A = 1,
    ANTENNA_B = 2,
    ANTENNA_HW_DIVERSITY = 3
};

#line 63 
enum tsf_sync {
    TSF_SYNC_NONE = 0,
    TSF_SYNC_INFRA = 1,
    TSF_SYNC_ADHOC = 2,
    TSF_SYNC_AP_NONE = 3
};

#line 70 
enum dev_state {
    STATE_DEEP_SLEEP = 0,
    STATE_SLEEP = 1,
    STATE_STANDBY = 2,
    STATE_AWAKE = 3,
    STATE_RADIO_ON = 4,
    STATE_RADIO_OFF = 5,
    STATE_RADIO_IRQ_ON = 6,
    STATE_RADIO_IRQ_OFF = 7
};

#line 81 
enum ifs {
    IFS_BACKOFF = 0,
    IFS_SIFS = 1,
    IFS_NEW_BACKOFF = 2,
    IFS_NONE = 3
};

#line 88 
enum txop {
    TXOP_HTTXOP = 0,
    TXOP_PIFS = 1,
    TXOP_SIFS = 2,
    TXOP_BACKOFF = 3
};

#line 95 
enum cipher {
    CIPHER_NONE = 0,
    CIPHER_WEP64 = 1,
    CIPHER_WEP128 = 2,
    CIPHER_TKIP = 3,
    CIPHER_AES = 4,
    CIPHER_CKIP64 = 5,
    CIPHER_CKIP128 = 6,
    CIPHER_TKIP_NO_MIC = 7,
    CIPHER_MAX = 4
};

#line 107 
enum rate_modulation {
    RATE_MODE_CCK = 0,
    RATE_MODE_OFDM = 1,
    RATE_MODE_HT_MIX = 2,
    RATE_MODE_HT_GREENFIELD = 3
};

#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00leds.h"
struct rt2x00_field8 {
   u8 bit_offset ;
   u8 bit_mask ;
};

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00reg.h"
struct rt2x00_field16 {
   u16 bit_offset ;
   u16 bit_mask ;
};

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00reg.h"
struct rt2x00_field32 {
   u32 bit_offset ;
   u32 bit_mask ;
};

#line 172 
enum data_queue_qid {
    QID_AC_VO = 0,
    QID_AC_VI = 1,
    QID_AC_BE = 2,
    QID_AC_BK = 3,
    QID_HCCA = 4,
    QID_MGMT = 13,
    QID_RX = 14,
    QID_OTHER = 15,
    QID_BEACON = 16,
    QID_ATIM = 17
};

#line 193 
struct queue_entry;

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00reg.h"
struct skb_frame_desc {
   u8 flags ;
   u8 desc_len ;
   u8 tx_rate_idx ;
   u8 tx_rate_flags ;
   void *desc ;
   __le32 iv[2U] ;
   dma_addr_t skb_dma ;
   struct queue_entry *entry ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
struct rxdone_entry_desc {
   u64 timestamp ;
   int signal ;
   int rssi ;
   int size ;
   int flags ;
   int dev_flags ;
   u16 rate_mode ;
   u8 cipher ;
   u8 cipher_status ;
   __le32 iv[2U] ;
   __le32 icv ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
struct txdone_entry_desc {
   unsigned long flags ;
   int retry ;
};

#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
struct __anonstruct_plcp_390 {
   u16 length_high ;
   u16 length_low ;
   u16 signal ;
   u16 service ;
   enum ifs ifs ;
};

#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
struct __anonstruct_ht_391 {
   u16 mcs ;
   u8 stbc ;
   u8 ba_size ;
   u8 mpdu_density ;
   enum txop txop ;
   int wcid ;
};

#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
union __anonunion_u_389 {
   struct __anonstruct_plcp_390 plcp ;
   struct __anonstruct_ht_391 ht ;
};

#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
struct txentry_desc {
   unsigned long flags ;
   u16 length ;
   u16 header_length ;
   union __anonunion_u_389 u ;
   enum rate_modulation rate_mode ;
   short retry_limit ;
   enum cipher cipher ;
   u16 key_idx ;
   u16 iv_offset ;
   u16 iv_len ;
};

#line 345 
struct data_queue;

#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
struct queue_entry {
   unsigned long flags ;
   unsigned long last_action ;
   struct data_queue *queue ;
   struct sk_buff *skb ;
   unsigned int entry_idx ;
   u32 status ;
   void *priv_data ;
};

#line 391 
enum queue_index {
    Q_INDEX = 0,
    Q_INDEX_DMA_DONE = 1,
    Q_INDEX_DONE = 2,
    Q_INDEX_MAX = 3
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
struct data_queue {
   struct rt2x00_dev *rt2x00dev ;
   struct queue_entry *entries ;
   enum data_queue_qid qid ;
   unsigned long flags ;
   struct mutex status_lock ;
   spinlock_t tx_lock ;
   spinlock_t index_lock ;
   unsigned int count ;
   unsigned short limit ;
   unsigned short threshold ;
   unsigned short length ;
   unsigned short index[3U] ;
   unsigned short txop ;
   unsigned short aifs ;
   unsigned short cw_min ;
   unsigned short cw_max ;
   unsigned short data_size ;
   unsigned char desc_size ;
   unsigned char winfo_size ;
   unsigned short priv_size ;
   unsigned short usb_endpoint ;
   unsigned short usb_maxpacket ;
};

#line 685 
enum rt2x00_chip_intf {
    RT2X00_CHIP_INTF_PCI = 0,
    RT2X00_CHIP_INTF_PCIE = 1,
    RT2X00_CHIP_INTF_USB = 2,
    RT2X00_CHIP_INTF_SOC = 3
};

#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
struct rt2x00_chip {
   u16 rt ;
   u16 rf ;
   u16 rev ;
   enum rt2x00_chip_intf intf ;
};

#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct rf_channel {
   int channel ;
   u32 rf1 ;
   u32 rf2 ;
   u32 rf3 ;
   u32 rf4 ;
};

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct channel_info {
   unsigned int flags ;
   short max_power ;
   short default_power1 ;
   short default_power2 ;
   short default_power3 ;
};

#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct antenna_setup {
   enum antenna rx ;
   enum antenna tx ;
   u8 rx_chain_num ;
   u8 tx_chain_num ;
};

#line 214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct link_qual {
   int rssi ;
   int false_cca ;
   u8 vgc_level ;
   u8 vgc_level_reg ;
   int rx_success ;
   int rx_failed ;
   int tx_success ;
   int tx_failed ;
};

#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct link_ant {
   unsigned int flags ;
   struct antenna_setup active ;
   int rssi_history ;
   struct ewma rssi_ant ;
};

#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct link {
   u32 count ;
   struct link_qual qual ;
   struct link_ant ant ;
   struct ewma avg_rssi ;
   struct delayed_work work ;
   struct delayed_work watchdog_work ;
   struct delayed_work agc_work ;
   struct delayed_work vco_work ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct rt2x00_intf {
   struct mutex beacon_skb_mutex ;
   struct queue_entry *beacon ;
   bool enable_beacon ;
   unsigned long delayed_flags ;
   atomic_t seqno ;
};

#line 385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct hw_mode_spec {
   unsigned int supported_bands ;
   unsigned int supported_rates ;
   unsigned int num_channels ;
   struct rf_channel const *channels ;
   struct channel_info const *channels_info ;
   struct ieee80211_sta_ht_cap ht ;
};

#line 416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct rt2x00lib_conf {
   struct ieee80211_conf *conf ;
   struct rf_channel rf ;
   struct channel_info channel ;
};

#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct rt2x00lib_erp {
   int short_preamble ;
   int cts_protection ;
   u32 basic_rates ;
   int slot_time ;
   short sifs ;
   short pifs ;
   short difs ;
   short eifs ;
   u16 beacon_int ;
   u16 ht_opmode ;
};

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct rt2x00lib_crypto {
   enum cipher cipher ;
   enum set_key_cmd cmd ;
   u8 const *address ;
   u32 bssidx ;
   u8 key[16U] ;
   u8 tx_mic[8U] ;
   u8 rx_mic[8U] ;
   int wcid ;
};

#line 468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct rt2x00intf_conf {
   enum nl80211_iftype type ;
   enum tsf_sync sync ;
   __le32 mac[2U] ;
   __le32 bssid[2U] ;
};

#line 512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct rt2x00lib_ops {
   irqreturn_t (*irq_handler)(int , void *) ;
   void (*txstatus_tasklet)(unsigned long ) ;
   void (*pretbtt_tasklet)(unsigned long ) ;
   void (*tbtt_tasklet)(unsigned long ) ;
   void (*rxdone_tasklet)(unsigned long ) ;
   void (*autowake_tasklet)(unsigned long ) ;
   int (*probe_hw)(struct rt2x00_dev *) ;
   char *(*get_firmware_name)(struct rt2x00_dev *) ;
   int (*check_firmware)(struct rt2x00_dev *, u8 const *, size_t const ) ;
   int (*load_firmware)(struct rt2x00_dev *, u8 const *, size_t const ) ;
   int (*initialize)(struct rt2x00_dev *) ;
   void (*uninitialize)(struct rt2x00_dev *) ;
   bool (*get_entry_state)(struct queue_entry *) ;
   void (*clear_entry)(struct queue_entry *) ;
   int (*set_device_state)(struct rt2x00_dev *, enum dev_state ) ;
   int (*rfkill_poll)(struct rt2x00_dev *) ;
   void (*link_stats)(struct rt2x00_dev *, struct link_qual *) ;
   void (*reset_tuner)(struct rt2x00_dev *, struct link_qual *) ;
   void (*link_tuner)(struct rt2x00_dev *, struct link_qual *, u32 const ) ;
   void (*gain_calibration)(struct rt2x00_dev *) ;
   void (*vco_calibration)(struct rt2x00_dev *) ;
   void (*watchdog)(struct rt2x00_dev *) ;
   void (*start_queue)(struct data_queue *) ;
   void (*kick_queue)(struct data_queue *) ;
   void (*stop_queue)(struct data_queue *) ;
   void (*flush_queue)(struct data_queue *, bool ) ;
   void (*tx_dma_done)(struct queue_entry *) ;
   void (*write_tx_desc)(struct queue_entry *, struct txentry_desc *) ;
   void (*write_tx_data)(struct queue_entry *, struct txentry_desc *) ;
   void (*write_beacon)(struct queue_entry *, struct txentry_desc *) ;
   void (*clear_beacon)(struct queue_entry *) ;
   int (*get_tx_data_len)(struct queue_entry *) ;
   void (*fill_rxdone)(struct queue_entry *, struct rxdone_entry_desc *) ;
   int (*config_shared_key)(struct rt2x00_dev *, struct rt2x00lib_crypto *, struct ieee80211_key_conf *) ;
   int (*config_pairwise_key)(struct rt2x00_dev *, struct rt2x00lib_crypto *, struct ieee80211_key_conf *) ;
   void (*config_filter)(struct rt2x00_dev *, unsigned int const ) ;
   void (*config_intf)(struct rt2x00_dev *, struct rt2x00_intf *, struct rt2x00intf_conf *, unsigned int const ) ;
   void (*config_erp)(struct rt2x00_dev *, struct rt2x00lib_erp *, u32 ) ;
   void (*config_ant)(struct rt2x00_dev *, struct antenna_setup *) ;
   void (*config)(struct rt2x00_dev *, struct rt2x00lib_conf *, unsigned int const ) ;
   int (*sta_add)(struct rt2x00_dev *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct rt2x00_dev *, int ) ;
};

#line 628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct rt2x00_ops {
   char const *name ;
   unsigned int const drv_data_size ;
   unsigned int const max_ap_intf ;
   unsigned int const eeprom_size ;
   unsigned int const rf_size ;
   unsigned int const tx_queues ;
   void (*queue_init)(struct data_queue *) ;
   struct rt2x00lib_ops const *lib ;
   void const *drv ;
   struct ieee80211_ops const *hw ;
   struct rt2x00debug const *debugfs ;
};

#line 695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
union csr {
   void *base ;
   void *cache ;
};

#line 820 
struct rt2x00debug_intf;

#line 820  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
union __anonunion_393 {
   struct __kfifo kfifo ;
   u32 *type ;
   u32 const *const_type ;
   char (*rectype)[0U] ;
   u32 *ptr ;
   u32 const *ptr_const ;
};

#line 820  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct __anonstruct_txstatus_fifo_392 {
   union __anonunion_393 __anonCompField___anonstruct_txstatus_fifo_392_105 ;
   u32 buf[0U] ;
};

#line 820  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
struct rt2x00_dev {
   struct device *dev ;
   struct rt2x00_ops const *ops ;
   void *drv_data ;
   struct ieee80211_hw *hw ;
   struct ieee80211_supported_band bands[3U] ;
   enum ieee80211_band curr_band ;
   int curr_freq ;
   struct rt2x00debug_intf *debugfs_intf ;
   struct rt2x00_led led_radio ;
   struct rt2x00_led led_assoc ;
   struct rt2x00_led led_qual ;
   u16 led_mcu_reg ;
   unsigned long flags ;
   unsigned long cap_flags ;
   int irq ;
   char const *name ;
   struct rt2x00_chip chip ;
   struct hw_mode_spec spec ;
   struct antenna_setup default_ant ;
   union csr csr ;
   struct mutex csr_mutex ;
   unsigned int packet_filter ;
   unsigned int intf_ap_count ;
   unsigned int intf_sta_count ;
   unsigned int intf_associated ;
   unsigned int intf_beaconing ;
   struct ieee80211_iface_limit if_limits_ap ;
   struct ieee80211_iface_combination if_combinations[1U] ;
   struct link link ;
   __le16 *eeprom ;
   u32 *rf ;
   short lna_gain ;
   u16 tx_power ;
   u8 short_retry ;
   u8 long_retry ;
   u8 rssi_offset ;
   u8 freq_offset ;
   u16 aid ;
   u16 beacon_int ;
   unsigned long last_beacon ;
   struct ieee80211_low_level_stats low_level_stats ;
   struct workqueue_struct *workqueue ;
   struct work_struct intf_work ;
   struct work_struct rxdone_work ;
   struct work_struct txdone_work ;
   struct delayed_work autowakeup_work ;
   struct work_struct sleep_work ;
   unsigned int data_queues ;
   struct data_queue *rx ;
   struct data_queue *tx ;
   struct data_queue *bcn ;
   struct data_queue *atim ;
   struct firmware const *fw ;
   struct __anonstruct_txstatus_fifo_392 txstatus_fifo ;
   struct hrtimer txstatus_timer ;
   struct tasklet_struct txstatus_tasklet ;
   struct tasklet_struct pretbtt_tasklet ;
   struct tasklet_struct tbtt_tasklet ;
   struct tasklet_struct rxdone_tasklet ;
   struct tasklet_struct autowake_tasklet ;
   int rf_channel ;
   spinlock_t irqmask_lock ;
   struct list_head bar_list ;
   spinlock_t bar_list_lock ;
   unsigned int extra_tx_headroom ;
};

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00mmio.h"
struct queue_entry_priv_mmio {
   __le32 *desc ;
   dma_addr_t desc_dma ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct ldv_struct_pci_scenario_6 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/fvtp/.tmp_rt2500pci.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void __set_bit(long nr, unsigned long volatile *addr)
{
  
#line 96 
  ldv_inline_asm();
  
#line 97 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_dev_dbg(struct _ddebug *, struct device const *, char const * , ...);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 31 
void _raw_spin_lock_irq(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 43 
void _raw_spin_unlock_irq(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_88(spinlock_t *lock);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_irq(spinlock_t *lock)
{
  
#line 346 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 347 
  return;
}


#line 366 
static void ldv_spin_lock_irq_80(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_irq_82(spinlock_t *lock);


#line 371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 373 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 374 
  return;
}


#line 415 
static void ldv_spin_unlock_89(spinlock_t *lock);


#line 441  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irq(spinlock_t *lock)
{
  
#line 443 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 444 
  return;
}


#line 457 
static void ldv_spin_unlock_irq_81(spinlock_t *lock);


#line 461 
static void ldv_spin_unlock_irq_83(spinlock_t *lock);


#line 462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 464 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 465 
  return;
}


#line 494 
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_mutex_lock_72(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1);


#line 51 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 53 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 55 
void __ldv_spin_lock(spinlock_t *);


#line 82 
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1);


#line 90 
void ldv_spin_model_lock(char *);


#line 91 
void ldv_spin_model_unlock(char *);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
void __compiletime_assert_95(void);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void dev_err(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/io.h"
void __iowrite32_copy(void *, void const *, size_t);


#line 540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static void ldv_tasklet_schedule_84(struct tasklet_struct *t);


#line 544 
static void ldv_tasklet_schedule_86(struct tasklet_struct *t);


#line 548 
static void ldv_tasklet_schedule_87(struct tasklet_struct *t);


#line 560 
static void ldv_tasklet_hi_schedule_85(struct tasklet_struct *t);


#line 595 
void tasklet_kill(struct tasklet_struct *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 1146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
static int ldv___pci_register_driver_90(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_91(struct pci_driver *ldv_func_arg1);


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/eeprom_93cx6.h"
void eeprom_93cx6_multiread(struct eeprom_93cx6 *, u8 const, __le16 *, u16 const);


#line 3281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  
#line 3283 
  wiphy->dev.parent = dev;
  
#line 3284 
  return;
}


#line 918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  struct ieee80211_tx_info *__retres;
  
#line 920 
  __retres = (struct ieee80211_tx_info *)(& skb->cb);
  
#line 920 
  return __retres;
}


#line 947 
void __compiletime_assert_948(void);


#line 2065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  
#line 2068 
  __set_bit((long)flg,(unsigned long volatile *)(& hw->flags));
  
#line 2069 
  return;
}


#line 2131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  
#line 2133 
  set_wiphy_dev(hw->wiphy,dev);
  
#line 2134 
  return;
}


#line 2142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
  
#line 2144 
  memcpy((void *)(& (hw->wiphy)->perm_addr),(void const *)addr,6UL);
  
#line 2145 
  return;
}


#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
void __compiletime_assert_130(void);


#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
__inline static struct skb_frame_desc *get_skb_frame_desc(struct sk_buff *skb)
{
  struct skb_frame_desc *__retres;
  struct ieee80211_tx_info *tmp;
  {
    
#line 129 
    bool __cond = (_Bool)0;
    
#line 129 
    if ((int)__cond != 0) 
#line 129 
                          __compiletime_assert_130(); else ;
  }
  
#line 131 
  tmp = IEEE80211_SKB_CB(skb);
  
#line 131 
  __retres = (struct skb_frame_desc *)(& tmp->__anonCompField_ieee80211_tx_info_103.driver_data);
  
#line 131 
  return __retres;
}


#line 596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
__inline static int rt2x00queue_empty(struct data_queue *queue)
{
  int __retres;
  
#line 598 
  __retres = (unsigned int)queue->length == 0U;
  
#line 598 
  return __retres;
}


#line 644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
__inline static void _rt2x00_desc_read(__le32 *desc, u8 const word, __le32 *value)
{
  
#line 646 
  *value = *(desc + (int)word);
  
#line 647 
  return;
}


#line 656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
__inline static void rt2x00_desc_read(__le32 *desc, u8 const word, u32 *value)
{
  __le32 tmp;
  
#line 659 
  _rt2x00_desc_read(desc,(unsigned char)((int)word),& tmp);
  
#line 660 
  *value = tmp;
  
#line 661 
  return;
}


#line 670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
__inline static void _rt2x00_desc_write(__le32 *desc, u8 const word, __le32 value)
{
  
#line 672 
  *(desc + (int)word) = value;
  
#line 673 
  return;
}


#line 681  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00queue.h"
__inline static void rt2x00_desc_write(__le32 *desc, u8 const word, u32 value)
{
  
#line 683 
  _rt2x00_desc_write(desc,(unsigned char)((int)word),value);
  
#line 684 
  return;
}


#line 1034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
__inline static void rt2x00_rf_read(struct rt2x00_dev *rt2x00dev, unsigned int const word, u32 *data)
{
  
#line 1037 
  if ((long)(word == 0U) != 0L || (long)((rt2x00dev->ops)->rf_size / 4U < word) != 0L) {
    
#line 1039 
    ldv_inline_asm();
    
#line 1037 
    ;
  }
  else ;
  
#line 1038 
  *data = *(rt2x00dev->rf + (word + 4294967295U));
  
#line 1039 
  return;
}


#line 1041  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
__inline static void rt2x00_rf_write(struct rt2x00_dev *rt2x00dev, unsigned int const word, u32 data)
{
  
#line 1044 
  if ((long)(word == 0U) != 0L || (long)((rt2x00dev->ops)->rf_size / 4U < word) != 0L) {
    
#line 1046 
    ldv_inline_asm();
    
#line 1044 
    ;
  }
  else ;
  
#line 1045 
  *(rt2x00dev->rf + (word + 4294967295U)) = data;
  
#line 1046 
  return;
}


#line 1051  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
__inline static void *rt2x00_eeprom_addr(struct rt2x00_dev *rt2x00dev, unsigned int const word)
{
  void *__retres;
  
#line 1054 
  __retres = (void *)(rt2x00dev->eeprom + word);
  
#line 1054 
  return __retres;
}


#line 1057  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
__inline static void rt2x00_eeprom_read(struct rt2x00_dev *rt2x00dev, unsigned int const word, u16 *data)
{
  
#line 1060 
  *data = *(rt2x00dev->eeprom + word);
  
#line 1061 
  return;
}


#line 1063  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
__inline static void rt2x00_eeprom_write(struct rt2x00_dev *rt2x00dev, unsigned int const word, u16 data)
{
  
#line 1066 
  *(rt2x00dev->eeprom + word) = data;
  
#line 1067 
  return;
}


#line 1078  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
__inline static void rt2x00_set_chip(struct rt2x00_dev *rt2x00dev, u16 const rt, u16 const rf, u16 const rev)
{
  
#line 1081 
  rt2x00dev->chip.rt = rt;
  
#line 1082 
  rt2x00dev->chip.rf = rf;
  
#line 1083 
  rt2x00dev->chip.rev = rev;
  
#line 1085 
  _dev_info((struct device const *)(& ((rt2x00dev->hw)->wiphy)->dev),"%s: Info - ","rt2x00_set_chip",(int)rt2x00dev->chip.rt,(int)rt2x00dev->chip.rf,(int)rt2x00dev->chip.rev);
  
#line 1086 
  return;
}


#line 1113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
__inline static bool rt2x00_rf(struct rt2x00_dev *rt2x00dev, u16 const rf)
{
  bool __retres;
  
#line 1115 
  __retres = (_Bool)((int)rt2x00dev->chip.rf == (int)rf);
  
#line 1115 
  return __retres;
}


#line 1118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
__inline static u16 rt2x00_rev(struct rt2x00_dev *rt2x00dev)
{
  u16 __retres;
  
#line 1120 
  __retres = rt2x00dev->chip.rev;
  
#line 1120 
  return __retres;
}


#line 1267 
int rt2x00queue_map_txskb(struct queue_entry *);


#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00.h"
__inline static struct data_queue *rt2x00queue_get_tx_queue(struct rt2x00_dev *rt2x00dev, enum data_queue_qid const queue)
{
  struct data_queue *__retres;
  
#line 1286 
  if ((rt2x00dev->ops)->tx_queues > (unsigned int)queue && rt2x00dev->tx != (struct data_queue *)0) {
    
#line 1287 
    __retres = rt2x00dev->tx + queue;
    
#line 1287 
    goto return_label;
  }
  else ;
  
#line 1289 
  if (queue == (unsigned int)QID_ATIM) {
    
#line 1290 
    __retres = rt2x00dev->atim;
    
#line 1290 
    goto return_label;
  }
  else ;
  
#line 1292 
  __retres = (struct data_queue *)0;
  return_label: 
#line 1292 
                return __retres;
}


#line 1300 
struct queue_entry *rt2x00queue_get_entry(struct data_queue *, enum queue_index);


#line 1385 
void rt2x00debug_dump_frame(struct rt2x00_dev *, enum rt2x00_dump_type, struct sk_buff *);


#line 1404 
void rt2x00lib_beacondone(struct rt2x00_dev *);


#line 1408 
void rt2x00lib_txdone(struct queue_entry *, struct txdone_entry_desc *);


#line 1416 
void rt2x00mac_tx(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *);


#line 1419 
int rt2x00mac_start(struct ieee80211_hw *);


#line 1420 
void rt2x00mac_stop(struct ieee80211_hw *);


#line 1421 
int rt2x00mac_add_interface(struct ieee80211_hw *, struct ieee80211_vif *);


#line 1423 
void rt2x00mac_remove_interface(struct ieee80211_hw *, struct ieee80211_vif *);


#line 1425 
int rt2x00mac_config(struct ieee80211_hw *, u32);


#line 1426 
void rt2x00mac_configure_filter(struct ieee80211_hw *, unsigned int, unsigned int *, u64);


#line 1443 
void rt2x00mac_sw_scan_start(struct ieee80211_hw *, struct ieee80211_vif *, u8 const *);


#line 1446 
void rt2x00mac_sw_scan_complete(struct ieee80211_hw *, struct ieee80211_vif *);


#line 1448 
int rt2x00mac_get_stats(struct ieee80211_hw *, struct ieee80211_low_level_stats *);


#line 1450 
void rt2x00mac_bss_info_changed(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32);


#line 1454 
int rt2x00mac_conf_tx(struct ieee80211_hw *, struct ieee80211_vif *, u16, struct ieee80211_tx_queue_params const *);


#line 1457 
void rt2x00mac_rfkill_poll(struct ieee80211_hw *);


#line 1458 
void rt2x00mac_flush(struct ieee80211_hw *, struct ieee80211_vif *, u32, bool);


#line 1460 
int rt2x00mac_set_antenna(struct ieee80211_hw *, u32, u32);


#line 1461 
int rt2x00mac_get_antenna(struct ieee80211_hw *, u32 *, u32 *);


#line 1462 
void rt2x00mac_get_ringparam(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *);


#line 1464 
bool rt2x00mac_tx_frames_pending(struct ieee80211_hw *);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00mmio.h"
__inline static void rt2x00mmio_register_read(struct rt2x00_dev *rt2x00dev, unsigned int const offset, u32 *value)
{
  
#line 36 
  *value = readl((void const volatile *)(rt2x00dev->csr.base + offset));
  
#line 37 
  return;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00mmio.h"
__inline static void rt2x00mmio_register_write(struct rt2x00_dev *rt2x00dev, unsigned int const offset, u32 value)
{
  
#line 50 
  writel(value,(void volatile *)(rt2x00dev->csr.base + offset));
  
#line 51 
  return;
}


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00mmio.h"
__inline static void rt2x00mmio_register_multiwrite(struct rt2x00_dev *rt2x00dev, unsigned int const offset, void const *value, u32 const length)
{
  
#line 58 
  __iowrite32_copy(rt2x00dev->csr.base + offset,value,(unsigned long)(length >> 2));
  
#line 59 
  return;
}


#line 74 
int rt2x00mmio_regbusy_read(struct rt2x00_dev *, unsigned int const, struct rt2x00_field32 const, u32 *);


#line 99 
bool rt2x00mmio_rxdone(struct rt2x00_dev *);


#line 109 
void rt2x00mmio_flush_queue(struct data_queue *, bool);


#line 114 
int rt2x00mmio_initialize(struct rt2x00_dev *);


#line 115 
void rt2x00mmio_uninitialize(struct rt2x00_dev *);


#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2x00pci.h"
int rt2x00pci_probe(struct pci_dev *, struct rt2x00_ops const *);


#line 40 
void rt2x00pci_remove(struct pci_dev *);


#line 42 
int rt2x00pci_suspend(struct pci_dev *, pm_message_t);


#line 43 
int rt2x00pci_resume(struct pci_dev *);


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
void __compiletime_assert_67(void);


#line 69 
void __compiletime_assert_69(void);


#line 70 
void __compiletime_assert_70(void);


#line 71 
void __compiletime_assert_71(void);


#line 72 
void __compiletime_assert_72(void);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_bbp_write(struct rt2x00_dev *rt2x00dev, unsigned int const word, u8 const value)
{
  u32 reg;
  int tmp_12;
  struct rt2x00_field32 tmp_11;
  
#line 61 
  ldv_mutex_lock_72(& rt2x00dev->csr_mutex);
  {
    {
      
#line 67 
      bool __cond_11 = (_Bool)0;
      
#line 67 
      if ((int)__cond_11 != 0) 
#line 67 
                               __compiletime_assert_67(); else ;
    }
    
#line 67 
    struct rt2x00_field32 __constr_expr_49 = {.bit_offset = 15U, .bit_mask = 32768U};
    
#line 67 
    tmp_11 = __constr_expr_49;
  }
  
#line 67 
  ;
  
#line 67 
  tmp_12 = rt2x00mmio_regbusy_read(rt2x00dev,240U,tmp_11,& reg);
  
#line 67 
  if (tmp_12 != 0) {
    
#line 68 
    reg = 0U;
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 69 
          bool __cond = (_Bool)0;
          
#line 69 
          if ((int)__cond != 0) 
#line 69 
                                __compiletime_assert_69(); else ;
        }
        
#line 69 
        struct rt2x00_field32 __constr_expr_37 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 69 
        tmp = __constr_expr_37;
      }
      
#line 69 
      reg = ~ tmp.bit_mask & reg;
      {
        {
          
#line 69 
          bool __cond_0 = (_Bool)0;
          
#line 69 
          if ((int)__cond_0 != 0) 
#line 69 
                                  __compiletime_assert_69(); else ;
        }
        
#line 69 
        struct rt2x00_field32 __constr_expr_38 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 69 
        tmp_0 = __constr_expr_38;
      }
      {
        {
          
#line 69 
          bool __cond_1 = (_Bool)0;
          
#line 69 
          if ((int)__cond_1 != 0) 
#line 69 
                                  __compiletime_assert_69(); else ;
        }
        
#line 69 
        struct rt2x00_field32 __constr_expr_39 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 69 
        tmp_1 = __constr_expr_39;
      }
      
#line 69 
      reg = ((unsigned int)((int)value << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 70 
          bool __cond_2 = (_Bool)0;
          
#line 70 
          if ((int)__cond_2 != 0) 
#line 70 
                                  __compiletime_assert_70(); else ;
        }
        
#line 70 
        struct rt2x00_field32 __constr_expr_40 = {.bit_offset = 8U, .bit_mask = 32512U};
        
#line 70 
        tmp_2 = __constr_expr_40;
      }
      
#line 70 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 70 
          bool __cond_3 = (_Bool)0;
          
#line 70 
          if ((int)__cond_3 != 0) 
#line 70 
                                  __compiletime_assert_70(); else ;
        }
        
#line 70 
        struct rt2x00_field32 __constr_expr_41 = {.bit_offset = 8U, .bit_mask = 32512U};
        
#line 70 
        tmp_3 = __constr_expr_41;
      }
      {
        {
          
#line 70 
          bool __cond_4 = (_Bool)0;
          
#line 70 
          if ((int)__cond_4 != 0) 
#line 70 
                                  __compiletime_assert_70(); else ;
        }
        
#line 70 
        struct rt2x00_field32 __constr_expr_42 = {.bit_offset = 8U, .bit_mask = 32512U};
        
#line 70 
        tmp_4 = __constr_expr_42;
      }
      
#line 70 
      reg = ((word << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 71 
          bool __cond_5 = (_Bool)0;
          
#line 71 
          if ((int)__cond_5 != 0) 
#line 71 
                                  __compiletime_assert_71(); else ;
        }
        
#line 71 
        struct rt2x00_field32 __constr_expr_43 = {.bit_offset = 15U, .bit_mask = 32768U};
        
#line 71 
        tmp_5 = __constr_expr_43;
      }
      
#line 71 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 71 
          bool __cond_6 = (_Bool)0;
          
#line 71 
          if ((int)__cond_6 != 0) 
#line 71 
                                  __compiletime_assert_71(); else ;
        }
        
#line 71 
        struct rt2x00_field32 __constr_expr_44 = {.bit_offset = 15U, .bit_mask = 32768U};
        
#line 71 
        tmp_6 = __constr_expr_44;
      }
      {
        {
          
#line 71 
          bool __cond_7 = (_Bool)0;
          
#line 71 
          if ((int)__cond_7 != 0) 
#line 71 
                                  __compiletime_assert_71(); else ;
        }
        
#line 71 
        struct rt2x00_field32 __constr_expr_45 = {.bit_offset = 15U, .bit_mask = 32768U};
        
#line 71 
        tmp_7 = __constr_expr_45;
      }
      
#line 71 
      reg = ((unsigned int)(1 << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_8;
      struct rt2x00_field32 tmp_9;
      struct rt2x00_field32 tmp_10;
      {
        struct rt2x00_field32 __dummy_2;
        struct rt2x00_field32 __dummy2_2;
        
      }
      {
        {
          
#line 72 
          bool __cond_8 = (_Bool)0;
          
#line 72 
          if ((int)__cond_8 != 0) 
#line 72 
                                  __compiletime_assert_72(); else ;
        }
        
#line 72 
        struct rt2x00_field32 __constr_expr_46 = {.bit_offset = 16U, .bit_mask = 65536U};
        
#line 72 
        tmp_8 = __constr_expr_46;
      }
      
#line 72 
      reg = ~ tmp_8.bit_mask & reg;
      {
        {
          
#line 72 
          bool __cond_9 = (_Bool)0;
          
#line 72 
          if ((int)__cond_9 != 0) 
#line 72 
                                  __compiletime_assert_72(); else ;
        }
        
#line 72 
        struct rt2x00_field32 __constr_expr_47 = {.bit_offset = 16U, .bit_mask = 65536U};
        
#line 72 
        tmp_9 = __constr_expr_47;
      }
      {
        {
          
#line 72 
          bool __cond_10 = (_Bool)0;
          
#line 72 
          if ((int)__cond_10 != 0) 
#line 72 
                                   __compiletime_assert_72(); else ;
        }
        
#line 72 
        struct rt2x00_field32 __constr_expr_48 = {.bit_offset = 16U, .bit_mask = 65536U};
        
#line 72 
        tmp_10 = __constr_expr_48;
      }
      
#line 72 
      reg = ((unsigned int)(1 << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
    }
    
#line 74 
    rt2x00mmio_register_write(rt2x00dev,240U,reg);
  }
  else ;
  
#line 77 
  ldv_mutex_unlock_73(& rt2x00dev->csr_mutex);
  
#line 78 
  return;
}


#line 97 
void __compiletime_assert_97(void);


#line 98 
void __compiletime_assert_98(void);


#line 99 
void __compiletime_assert_99(void);


#line 103 
void __compiletime_assert_103(void);


#line 106 
void __compiletime_assert_106(void);


#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_bbp_read(struct rt2x00_dev *rt2x00dev, unsigned int const word, u8 *value)
{
  u32 reg;
  int tmp_10;
  struct rt2x00_field32 tmp_9;
  unsigned int tmp_13;
  
#line 85 
  ldv_mutex_lock_74(& rt2x00dev->csr_mutex);
  {
    {
      
#line 95 
      bool __cond_9 = (_Bool)0;
      
#line 95 
      if ((int)__cond_9 != 0) 
#line 95 
                              __compiletime_assert_95(); else ;
    }
    
#line 95 
    struct rt2x00_field32 __constr_expr_60 = {.bit_offset = 15U, .bit_mask = 32768U};
    
#line 95 
    tmp_9 = __constr_expr_60;
  }
  
#line 95 
  ;
  
#line 95 
  tmp_10 = rt2x00mmio_regbusy_read(rt2x00dev,240U,tmp_9,& reg);
  
#line 95 
  if (tmp_10 != 0) {
    struct rt2x00_field32 tmp_8;
    
#line 96 
    reg = 0U;
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 97 
          bool __cond = (_Bool)0;
          
#line 97 
          if ((int)__cond != 0) 
#line 97 
                                __compiletime_assert_97(); else ;
        }
        
#line 97 
        struct rt2x00_field32 __constr_expr_50 = {.bit_offset = 8U, .bit_mask = 32512U};
        
#line 97 
        tmp = __constr_expr_50;
      }
      
#line 97 
      reg = ~ tmp.bit_mask & reg;
      {
        {
          
#line 97 
          bool __cond_0 = (_Bool)0;
          
#line 97 
          if ((int)__cond_0 != 0) 
#line 97 
                                  __compiletime_assert_97(); else ;
        }
        
#line 97 
        struct rt2x00_field32 __constr_expr_51 = {.bit_offset = 8U, .bit_mask = 32512U};
        
#line 97 
        tmp_0 = __constr_expr_51;
      }
      {
        {
          
#line 97 
          bool __cond_1 = (_Bool)0;
          
#line 97 
          if ((int)__cond_1 != 0) 
#line 97 
                                  __compiletime_assert_97(); else ;
        }
        
#line 97 
        struct rt2x00_field32 __constr_expr_52 = {.bit_offset = 8U, .bit_mask = 32512U};
        
#line 97 
        tmp_1 = __constr_expr_52;
      }
      
#line 97 
      reg = ((word << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 98 
          bool __cond_2 = (_Bool)0;
          
#line 98 
          if ((int)__cond_2 != 0) 
#line 98 
                                  __compiletime_assert_98(); else ;
        }
        
#line 98 
        struct rt2x00_field32 __constr_expr_53 = {.bit_offset = 15U, .bit_mask = 32768U};
        
#line 98 
        tmp_2 = __constr_expr_53;
      }
      
#line 98 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 98 
          bool __cond_3 = (_Bool)0;
          
#line 98 
          if ((int)__cond_3 != 0) 
#line 98 
                                  __compiletime_assert_98(); else ;
        }
        
#line 98 
        struct rt2x00_field32 __constr_expr_54 = {.bit_offset = 15U, .bit_mask = 32768U};
        
#line 98 
        tmp_3 = __constr_expr_54;
      }
      {
        {
          
#line 98 
          bool __cond_4 = (_Bool)0;
          
#line 98 
          if ((int)__cond_4 != 0) 
#line 98 
                                  __compiletime_assert_98(); else ;
        }
        
#line 98 
        struct rt2x00_field32 __constr_expr_55 = {.bit_offset = 15U, .bit_mask = 32768U};
        
#line 98 
        tmp_4 = __constr_expr_55;
      }
      
#line 98 
      reg = ((unsigned int)(1 << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 99 
          bool __cond_5 = (_Bool)0;
          
#line 99 
          if ((int)__cond_5 != 0) 
#line 99 
                                  __compiletime_assert_99(); else ;
        }
        
#line 99 
        struct rt2x00_field32 __constr_expr_56 = {.bit_offset = 16U, .bit_mask = 65536U};
        
#line 99 
        tmp_5 = __constr_expr_56;
      }
      
#line 99 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 99 
          bool __cond_6 = (_Bool)0;
          
#line 99 
          if ((int)__cond_6 != 0) 
#line 99 
                                  __compiletime_assert_99(); else ;
        }
        
#line 99 
        struct rt2x00_field32 __constr_expr_57 = {.bit_offset = 16U, .bit_mask = 65536U};
        
#line 99 
        tmp_6 = __constr_expr_57;
      }
      {
        {
          
#line 99 
          bool __cond_7 = (_Bool)0;
          
#line 99 
          if ((int)__cond_7 != 0) 
#line 99 
                                  __compiletime_assert_99(); else ;
        }
        
#line 99 
        struct rt2x00_field32 __constr_expr_58 = {.bit_offset = 16U, .bit_mask = 65536U};
        
#line 99 
        tmp_7 = __constr_expr_58;
      }
      
#line 99 
      reg = 0U | reg;
    }
    
#line 101 
    rt2x00mmio_register_write(rt2x00dev,240U,reg);
    {
      {
        
#line 103 
        bool __cond_8 = (_Bool)0;
        
#line 103 
        if ((int)__cond_8 != 0) 
#line 103 
                                __compiletime_assert_103(); else ;
      }
      
#line 103 
      struct rt2x00_field32 __constr_expr_59 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 103 
      tmp_8 = __constr_expr_59;
    }
    
#line 103 
    ;
    
#line 103 
    rt2x00mmio_regbusy_read(rt2x00dev,240U,tmp_8,& reg);
  }
  else ;
  {
    struct rt2x00_field32 tmp_11;
    struct rt2x00_field32 tmp_12;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 106 
        bool __cond_10 = (_Bool)0;
        
#line 106 
        if ((int)__cond_10 != 0) 
#line 106 
                                 __compiletime_assert_106(); else ;
      }
      
#line 106 
      struct rt2x00_field32 __constr_expr_61 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 106 
      tmp_11 = __constr_expr_61;
    }
    {
      {
        
#line 106 
        bool __cond_11 = (_Bool)0;
        
#line 106 
        if ((int)__cond_11 != 0) 
#line 106 
                                 __compiletime_assert_106(); else ;
      }
      
#line 106 
      struct rt2x00_field32 __constr_expr_62 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 106 
      tmp_12 = __constr_expr_62;
    }
    
#line 106 
    ;
    
#line 106 
    tmp_13 = (tmp_11.bit_mask & reg) >> tmp_12.bit_offset;
  }
  
#line 106 
  *value = (unsigned char)tmp_13;
  
#line 108 
  ldv_mutex_unlock_75(& rt2x00dev->csr_mutex);
  
#line 109 
  return;
}


#line 122 
void __compiletime_assert_122(void);


#line 124 
void __compiletime_assert_124(void);


#line 125 
void __compiletime_assert_125(void);


#line 126 
void __compiletime_assert_126(void);


#line 127 
void __compiletime_assert_127(void);


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_rf_write(struct rt2x00_dev *rt2x00dev, unsigned int const word, u32 const value)
{
  u32 reg;
  int tmp_12;
  struct rt2x00_field32 tmp_11;
  
#line 116 
  ldv_mutex_lock_76(& rt2x00dev->csr_mutex);
  {
    {
      
#line 122 
      bool __cond_11 = (_Bool)0;
      
#line 122 
      if ((int)__cond_11 != 0) 
#line 122 
                               __compiletime_assert_122(); else ;
    }
    
#line 122 
    struct rt2x00_field32 __constr_expr_75 = {.bit_offset = 31U, .bit_mask = 2147483648U};
    
#line 122 
    tmp_11 = __constr_expr_75;
  }
  
#line 122 
  ;
  
#line 122 
  tmp_12 = rt2x00mmio_regbusy_read(rt2x00dev,244U,tmp_11,& reg);
  
#line 122 
  if (tmp_12 != 0) {
    
#line 123 
    reg = 0U;
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 124 
          bool __cond = (_Bool)0;
          
#line 124 
          if ((int)__cond != 0) 
#line 124 
                                __compiletime_assert_124(); else ;
        }
        
#line 124 
        struct rt2x00_field32 __constr_expr_63 = {.bit_offset = 0U, .bit_mask = 16777215U};
        
#line 124 
        tmp = __constr_expr_63;
      }
      
#line 124 
      reg = ~ tmp.bit_mask & reg;
      {
        {
          
#line 124 
          bool __cond_0 = (_Bool)0;
          
#line 124 
          if ((int)__cond_0 != 0) 
#line 124 
                                  __compiletime_assert_124(); else ;
        }
        
#line 124 
        struct rt2x00_field32 __constr_expr_64 = {.bit_offset = 0U, .bit_mask = 16777215U};
        
#line 124 
        tmp_0 = __constr_expr_64;
      }
      {
        {
          
#line 124 
          bool __cond_1 = (_Bool)0;
          
#line 124 
          if ((int)__cond_1 != 0) 
#line 124 
                                  __compiletime_assert_124(); else ;
        }
        
#line 124 
        struct rt2x00_field32 __constr_expr_65 = {.bit_offset = 0U, .bit_mask = 16777215U};
        
#line 124 
        tmp_1 = __constr_expr_65;
      }
      
#line 124 
      reg = ((value << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 125 
          bool __cond_2 = (_Bool)0;
          
#line 125 
          if ((int)__cond_2 != 0) 
#line 125 
                                  __compiletime_assert_125(); else ;
        }
        
#line 125 
        struct rt2x00_field32 __constr_expr_66 = {.bit_offset = 24U, .bit_mask = 520093696U};
        
#line 125 
        tmp_2 = __constr_expr_66;
      }
      
#line 125 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 125 
          bool __cond_3 = (_Bool)0;
          
#line 125 
          if ((int)__cond_3 != 0) 
#line 125 
                                  __compiletime_assert_125(); else ;
        }
        
#line 125 
        struct rt2x00_field32 __constr_expr_67 = {.bit_offset = 24U, .bit_mask = 520093696U};
        
#line 125 
        tmp_3 = __constr_expr_67;
      }
      {
        {
          
#line 125 
          bool __cond_4 = (_Bool)0;
          
#line 125 
          if ((int)__cond_4 != 0) 
#line 125 
                                  __compiletime_assert_125(); else ;
        }
        
#line 125 
        struct rt2x00_field32 __constr_expr_68 = {.bit_offset = 24U, .bit_mask = 520093696U};
        
#line 125 
        tmp_4 = __constr_expr_68;
      }
      
#line 125 
      reg = ((unsigned int)(20 << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 126 
          bool __cond_5 = (_Bool)0;
          
#line 126 
          if ((int)__cond_5 != 0) 
#line 126 
                                  __compiletime_assert_126(); else ;
        }
        
#line 126 
        struct rt2x00_field32 __constr_expr_69 = {.bit_offset = 29U, .bit_mask = 536870912U};
        
#line 126 
        tmp_5 = __constr_expr_69;
      }
      
#line 126 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 126 
          bool __cond_6 = (_Bool)0;
          
#line 126 
          if ((int)__cond_6 != 0) 
#line 126 
                                  __compiletime_assert_126(); else ;
        }
        
#line 126 
        struct rt2x00_field32 __constr_expr_70 = {.bit_offset = 29U, .bit_mask = 536870912U};
        
#line 126 
        tmp_6 = __constr_expr_70;
      }
      {
        {
          
#line 126 
          bool __cond_7 = (_Bool)0;
          
#line 126 
          if ((int)__cond_7 != 0) 
#line 126 
                                  __compiletime_assert_126(); else ;
        }
        
#line 126 
        struct rt2x00_field32 __constr_expr_71 = {.bit_offset = 29U, .bit_mask = 536870912U};
        
#line 126 
        tmp_7 = __constr_expr_71;
      }
      
#line 126 
      reg = 0U | reg;
    }
    {
      struct rt2x00_field32 tmp_8;
      struct rt2x00_field32 tmp_9;
      struct rt2x00_field32 tmp_10;
      {
        struct rt2x00_field32 __dummy_2;
        struct rt2x00_field32 __dummy2_2;
        
      }
      {
        {
          
#line 127 
          bool __cond_8 = (_Bool)0;
          
#line 127 
          if ((int)__cond_8 != 0) 
#line 127 
                                  __compiletime_assert_127(); else ;
        }
        
#line 127 
        struct rt2x00_field32 __constr_expr_72 = {.bit_offset = 31U, .bit_mask = 2147483648U};
        
#line 127 
        tmp_8 = __constr_expr_72;
      }
      
#line 127 
      reg = ~ tmp_8.bit_mask & reg;
      {
        {
          
#line 127 
          bool __cond_9 = (_Bool)0;
          
#line 127 
          if ((int)__cond_9 != 0) 
#line 127 
                                  __compiletime_assert_127(); else ;
        }
        
#line 127 
        struct rt2x00_field32 __constr_expr_73 = {.bit_offset = 31U, .bit_mask = 2147483648U};
        
#line 127 
        tmp_9 = __constr_expr_73;
      }
      {
        {
          
#line 127 
          bool __cond_10 = (_Bool)0;
          
#line 127 
          if ((int)__cond_10 != 0) 
#line 127 
                                   __compiletime_assert_127(); else ;
        }
        
#line 127 
        struct rt2x00_field32 __constr_expr_74 = {.bit_offset = 31U, .bit_mask = 2147483648U};
        
#line 127 
        tmp_10 = __constr_expr_74;
      }
      
#line 127 
      reg = ((unsigned int)(1 << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
    }
    
#line 129 
    rt2x00mmio_register_write(rt2x00dev,244U,reg);
    
#line 130 
    rt2x00_rf_write(rt2x00dev,word,value);
  }
  else ;
  
#line 133 
  ldv_mutex_unlock_77(& rt2x00dev->csr_mutex);
  
#line 134 
  return;
}


#line 143 
void __compiletime_assert_143(void);


#line 144 
void __compiletime_assert_144(void);


#line 146 
void __compiletime_assert_146(void);


#line 148 
void __compiletime_assert_148(void);


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_eepromregister_read(struct eeprom_93cx6 *eeprom)
{
  u32 reg;
  unsigned int tmp_1;
  unsigned int tmp_4;
  unsigned int tmp_7;
  unsigned int tmp_10;
  
#line 138 
  struct rt2x00_dev *rt2x00dev = (struct rt2x00_dev *)eeprom->data;
  
#line 141 
  rt2x00mmio_register_read(rt2x00dev,84U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 143 
        bool __cond = (_Bool)0;
        
#line 143 
        if ((int)__cond != 0) 
#line 143 
                              __compiletime_assert_143(); else ;
      }
      
#line 143 
      struct rt2x00_field32 __constr_expr_76 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 143 
      tmp = __constr_expr_76;
    }
    {
      {
        
#line 143 
        bool __cond_0 = (_Bool)0;
        
#line 143 
        if ((int)__cond_0 != 0) 
#line 143 
                                __compiletime_assert_143(); else ;
      }
      
#line 143 
      struct rt2x00_field32 __constr_expr_77 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 143 
      tmp_0 = __constr_expr_77;
    }
    
#line 143 
    ;
    
#line 143 
    tmp_1 = (tmp.bit_mask & reg) >> tmp_0.bit_offset;
  }
  
#line 143 
  eeprom->reg_data_in = (char)(tmp_1 != 0U);
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 144 
        bool __cond_1 = (_Bool)0;
        
#line 144 
        if ((int)__cond_1 != 0) 
#line 144 
                                __compiletime_assert_144(); else ;
      }
      
#line 144 
      struct rt2x00_field32 __constr_expr_78 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 144 
      tmp_2 = __constr_expr_78;
    }
    {
      {
        
#line 144 
        bool __cond_2 = (_Bool)0;
        
#line 144 
        if ((int)__cond_2 != 0) 
#line 144 
                                __compiletime_assert_144(); else ;
      }
      
#line 144 
      struct rt2x00_field32 __constr_expr_79 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 144 
      tmp_3 = __constr_expr_79;
    }
    
#line 144 
    ;
    
#line 144 
    tmp_4 = (tmp_2.bit_mask & reg) >> tmp_3.bit_offset;
  }
  
#line 144 
  eeprom->reg_data_out = (char)(tmp_4 != 0U);
  {
    struct rt2x00_field32 tmp_5;
    struct rt2x00_field32 tmp_6;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 146 
        bool __cond_3 = (_Bool)0;
        
#line 146 
        if ((int)__cond_3 != 0) 
#line 146 
                                __compiletime_assert_146(); else ;
      }
      
#line 146 
      struct rt2x00_field32 __constr_expr_80 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 146 
      tmp_5 = __constr_expr_80;
    }
    {
      {
        
#line 146 
        bool __cond_4 = (_Bool)0;
        
#line 146 
        if ((int)__cond_4 != 0) 
#line 146 
                                __compiletime_assert_146(); else ;
      }
      
#line 146 
      struct rt2x00_field32 __constr_expr_81 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 146 
      tmp_6 = __constr_expr_81;
    }
    
#line 146 
    ;
    
#line 146 
    tmp_7 = (tmp_5.bit_mask & reg) >> tmp_6.bit_offset;
  }
  
#line 145 
  eeprom->reg_data_clock = (char)(tmp_7 != 0U);
  {
    struct rt2x00_field32 tmp_8;
    struct rt2x00_field32 tmp_9;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 148 
        bool __cond_5 = (_Bool)0;
        
#line 148 
        if ((int)__cond_5 != 0) 
#line 148 
                                __compiletime_assert_148(); else ;
      }
      
#line 148 
      struct rt2x00_field32 __constr_expr_82 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 148 
      tmp_8 = __constr_expr_82;
    }
    {
      {
        
#line 148 
        bool __cond_6 = (_Bool)0;
        
#line 148 
        if ((int)__cond_6 != 0) 
#line 148 
                                __compiletime_assert_148(); else ;
      }
      
#line 148 
      struct rt2x00_field32 __constr_expr_83 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 148 
      tmp_9 = __constr_expr_83;
    }
    
#line 148 
    ;
    
#line 148 
    tmp_10 = (tmp_8.bit_mask & reg) >> tmp_9.bit_offset;
  }
  
#line 147 
  eeprom->reg_chip_select = (char)(tmp_10 != 0U);
  
#line 149 
  return;
}


#line 156 
void __compiletime_assert_156(void);


#line 157 
void __compiletime_assert_157(void);


#line 158 
void __compiletime_assert_159(void);


#line 160 
void __compiletime_assert_161(void);


#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_eepromregister_write(struct eeprom_93cx6 *eeprom)
{
  
#line 153 
  struct rt2x00_dev *rt2x00dev = (struct rt2x00_dev *)eeprom->data;
  
#line 154 
  u32 reg = 0U;
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 156 
        bool __cond = (_Bool)0;
        
#line 156 
        if ((int)__cond != 0) 
#line 156 
                              __compiletime_assert_156(); else ;
      }
      
#line 156 
      struct rt2x00_field32 __constr_expr_84 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 156 
      tmp = __constr_expr_84;
    }
    
#line 156 
    reg = ~ tmp.bit_mask & reg;
    {
      {
        
#line 156 
        bool __cond_0 = (_Bool)0;
        
#line 156 
        if ((int)__cond_0 != 0) 
#line 156 
                                __compiletime_assert_156(); else ;
      }
      
#line 156 
      struct rt2x00_field32 __constr_expr_85 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 156 
      tmp_0 = __constr_expr_85;
    }
    {
      {
        
#line 156 
        bool __cond_1 = (_Bool)0;
        
#line 156 
        if ((int)__cond_1 != 0) 
#line 156 
                                __compiletime_assert_156(); else ;
      }
      
#line 156 
      struct rt2x00_field32 __constr_expr_86 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 156 
      tmp_1 = __constr_expr_86;
    }
    
#line 156 
    reg = ((unsigned int)(((int)eeprom->reg_data_in != 0) << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 157 
        bool __cond_2 = (_Bool)0;
        
#line 157 
        if ((int)__cond_2 != 0) 
#line 157 
                                __compiletime_assert_157(); else ;
      }
      
#line 157 
      struct rt2x00_field32 __constr_expr_87 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 157 
      tmp_2 = __constr_expr_87;
    }
    
#line 157 
    reg = ~ tmp_2.bit_mask & reg;
    {
      {
        
#line 157 
        bool __cond_3 = (_Bool)0;
        
#line 157 
        if ((int)__cond_3 != 0) 
#line 157 
                                __compiletime_assert_157(); else ;
      }
      
#line 157 
      struct rt2x00_field32 __constr_expr_88 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 157 
      tmp_3 = __constr_expr_88;
    }
    {
      {
        
#line 157 
        bool __cond_4 = (_Bool)0;
        
#line 157 
        if ((int)__cond_4 != 0) 
#line 157 
                                __compiletime_assert_157(); else ;
      }
      
#line 157 
      struct rt2x00_field32 __constr_expr_89 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 157 
      tmp_4 = __constr_expr_89;
    }
    
#line 157 
    reg = ((unsigned int)(((int)eeprom->reg_data_out != 0) << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_5;
    struct rt2x00_field32 tmp_6;
    struct rt2x00_field32 tmp_7;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 158 
        bool __cond_5 = (_Bool)0;
        
#line 158 
        if ((int)__cond_5 != 0) 
#line 158 
                                __compiletime_assert_159(); else ;
      }
      
#line 158 
      struct rt2x00_field32 __constr_expr_90 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 158 
      tmp_5 = __constr_expr_90;
    }
    
#line 158 
    reg = ~ tmp_5.bit_mask & reg;
    {
      {
        
#line 158 
        bool __cond_6 = (_Bool)0;
        
#line 158 
        if ((int)__cond_6 != 0) 
#line 158 
                                __compiletime_assert_159(); else ;
      }
      
#line 158 
      struct rt2x00_field32 __constr_expr_91 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 158 
      tmp_6 = __constr_expr_91;
    }
    {
      {
        
#line 158 
        bool __cond_7 = (_Bool)0;
        
#line 158 
        if ((int)__cond_7 != 0) 
#line 158 
                                __compiletime_assert_159(); else ;
      }
      
#line 158 
      struct rt2x00_field32 __constr_expr_92 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 158 
      tmp_7 = __constr_expr_92;
    }
    
#line 158 
    reg = ((unsigned int)(((int)eeprom->reg_data_clock != 0) << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_8;
    struct rt2x00_field32 tmp_9;
    struct rt2x00_field32 tmp_10;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 160 
        bool __cond_8 = (_Bool)0;
        
#line 160 
        if ((int)__cond_8 != 0) 
#line 160 
                                __compiletime_assert_161(); else ;
      }
      
#line 160 
      struct rt2x00_field32 __constr_expr_93 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 160 
      tmp_8 = __constr_expr_93;
    }
    
#line 160 
    reg = ~ tmp_8.bit_mask & reg;
    {
      {
        
#line 160 
        bool __cond_9 = (_Bool)0;
        
#line 160 
        if ((int)__cond_9 != 0) 
#line 160 
                                __compiletime_assert_161(); else ;
      }
      
#line 160 
      struct rt2x00_field32 __constr_expr_94 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 160 
      tmp_9 = __constr_expr_94;
    }
    {
      {
        
#line 160 
        bool __cond_10 = (_Bool)0;
        
#line 160 
        if ((int)__cond_10 != 0) 
#line 160 
                                 __compiletime_assert_161(); else ;
      }
      
#line 160 
      struct rt2x00_field32 __constr_expr_95 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 160 
      tmp_10 = __constr_expr_95;
    }
    
#line 160 
    reg = ((unsigned int)(((int)eeprom->reg_chip_select != 0) << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
  }
  
#line 163 
  rt2x00mmio_register_write(rt2x00dev,84U,reg);
  
#line 164 
  return;
}


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct rt2x00debug const rt2500pci_rt2x00debug = {.owner = & __this_module, .csr = {.read = & rt2x00mmio_register_read, .write = & rt2x00mmio_register_write, .flags = 1U, .word_base = 0U, .word_size = 4U, .word_count = 93U}, .eeprom = {.read = & rt2x00_eeprom_read, .write = & rt2x00_eeprom_write, .flags = 0U, .word_base = 0U, .word_size = 2U, .word_count = 256U}, .bbp = {.read = & rt2500pci_bbp_read, .write = (void (*)(struct rt2x00_dev *, unsigned int const , u8 ))(& rt2500pci_bbp_write), .flags = 0U, .word_base = 0U, .word_size = 1U, .word_count = 64U}, .rf = {.read = & rt2x00_rf_read, .write = (void (*)(struct rt2x00_dev *, unsigned int const , u32 ))(& rt2500pci_rf_write), .flags = 0U, .word_base = 4U, .word_size = 4U, .word_count = 4U}, .rfcsr = {.read = (void (*)(struct rt2x00_dev *, unsigned int const , u8 *))0, .write = (void (*)(struct rt2x00_dev *, unsigned int const , u8 ))0, .flags = 0U, .word_base = 0U, .word_size = 0U, .word_count = 0U}};

#line 206 
void __compiletime_assert_206(void);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_rfkill_poll(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  u32 reg;
  unsigned int tmp_1;
  
#line 205 
  rt2x00mmio_register_read(rt2x00dev,288U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 206 
        bool __cond = (_Bool)0;
        
#line 206 
        if ((int)__cond != 0) 
#line 206 
                              __compiletime_assert_206(); else ;
      }
      
#line 206 
      struct rt2x00_field32 __constr_expr_96 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 206 
      tmp = __constr_expr_96;
    }
    {
      {
        
#line 206 
        bool __cond_0 = (_Bool)0;
        
#line 206 
        if ((int)__cond_0 != 0) 
#line 206 
                                __compiletime_assert_206(); else ;
      }
      
#line 206 
      struct rt2x00_field32 __constr_expr_97 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 206 
      tmp_0 = __constr_expr_97;
    }
    
#line 206 
    ;
    
#line 206 
    tmp_1 = (tmp.bit_mask & reg) >> tmp_0.bit_offset;
  }
  
#line 206 
  __retres = (int)tmp_1;
  
#line 206 
  return __retres;
}


#line 221 
void __compiletime_assert_221(void);


#line 223 
void __compiletime_assert_223(void);


#line 210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_brightness_set(struct led_classdev *led_cdev, enum led_brightness brightness)
{
  struct rt2x00_led *tmp;
  u32 reg;
  {
    
#line 214 
    struct led_classdev const *__mptr = (struct led_classdev const *)led_cdev;
    
#line 214 
    tmp = (struct rt2x00_led *)__mptr + 18446744073709551608U;
  }
  
#line 213 
  struct rt2x00_led *led = tmp;
  
#line 215 
  unsigned int enabled = (unsigned int)(brightness != (unsigned int)LED_OFF);
  
#line 218 
  rt2x00mmio_register_read(led->rt2x00dev,248U,& reg);
  
#line 220 
  if (led->type <= (unsigned int)LED_TYPE_ASSOC) {
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    struct rt2x00_field32 tmp_2;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 221 
        bool __cond = (_Bool)0;
        
#line 221 
        if ((int)__cond != 0) 
#line 221 
                              __compiletime_assert_221(); else ;
      }
      
#line 221 
      struct rt2x00_field32 __constr_expr_98 = {.bit_offset = 16U, .bit_mask = 65536U};
      
#line 221 
      tmp_0 = __constr_expr_98;
    }
    
#line 221 
    reg = ~ tmp_0.bit_mask & reg;
    {
      {
        
#line 221 
        bool __cond_0 = (_Bool)0;
        
#line 221 
        if ((int)__cond_0 != 0) 
#line 221 
                                __compiletime_assert_221(); else ;
      }
      
#line 221 
      struct rt2x00_field32 __constr_expr_99 = {.bit_offset = 16U, .bit_mask = 65536U};
      
#line 221 
      tmp_1 = __constr_expr_99;
    }
    {
      {
        
#line 221 
        bool __cond_1 = (_Bool)0;
        
#line 221 
        if ((int)__cond_1 != 0) 
#line 221 
                                __compiletime_assert_221(); else ;
      }
      
#line 221 
      struct rt2x00_field32 __constr_expr_100 = {.bit_offset = 16U, .bit_mask = 65536U};
      
#line 221 
      tmp_2 = __constr_expr_100;
    }
    
#line 221 
    reg = ((enabled << tmp_1.bit_offset) & tmp_2.bit_mask) | reg;
  }
  else 
    
#line 222 
    if (led->type == (unsigned int)LED_TYPE_ACTIVITY) {
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      struct rt2x00_field32 tmp_5;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 223 
          bool __cond_2 = (_Bool)0;
          
#line 223 
          if ((int)__cond_2 != 0) 
#line 223 
                                  __compiletime_assert_223(); else ;
        }
        
#line 223 
        struct rt2x00_field32 __constr_expr_101 = {.bit_offset = 17U, .bit_mask = 131072U};
        
#line 223 
        tmp_3 = __constr_expr_101;
      }
      
#line 223 
      reg = ~ tmp_3.bit_mask & reg;
      {
        {
          
#line 223 
          bool __cond_3 = (_Bool)0;
          
#line 223 
          if ((int)__cond_3 != 0) 
#line 223 
                                  __compiletime_assert_223(); else ;
        }
        
#line 223 
        struct rt2x00_field32 __constr_expr_102 = {.bit_offset = 17U, .bit_mask = 131072U};
        
#line 223 
        tmp_4 = __constr_expr_102;
      }
      {
        {
          
#line 223 
          bool __cond_4 = (_Bool)0;
          
#line 223 
          if ((int)__cond_4 != 0) 
#line 223 
                                  __compiletime_assert_223(); else ;
        }
        
#line 223 
        struct rt2x00_field32 __constr_expr_103 = {.bit_offset = 17U, .bit_mask = 131072U};
        
#line 223 
        tmp_5 = __constr_expr_103;
      }
      
#line 223 
      reg = ((enabled << tmp_4.bit_offset) & tmp_5.bit_mask) | reg;
    }
    else ;
  
#line 225 
  rt2x00mmio_register_write(led->rt2x00dev,248U,reg);
  
#line 226 
  return;
}


#line 237 
void __compiletime_assert_237(void);


#line 238 
void __compiletime_assert_238(void);


#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_blink_set(struct led_classdev *led_cdev, unsigned long *delay_on, unsigned long *delay_off)
{
  int __retres;
  struct rt2x00_led *tmp;
  u32 reg;
  {
    
#line 233 
    struct led_classdev const *__mptr = (struct led_classdev const *)led_cdev;
    
#line 233 
    tmp = (struct rt2x00_led *)__mptr + 18446744073709551608U;
  }
  
#line 232 
  struct rt2x00_led *led = tmp;
  
#line 236 
  rt2x00mmio_register_read(led->rt2x00dev,248U,& reg);
  {
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    struct rt2x00_field32 tmp_2;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 237 
        bool __cond = (_Bool)0;
        
#line 237 
        if ((int)__cond != 0) 
#line 237 
                              __compiletime_assert_237(); else ;
      }
      
#line 237 
      struct rt2x00_field32 __constr_expr_104 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 237 
      tmp_0 = __constr_expr_104;
    }
    
#line 237 
    reg = ~ tmp_0.bit_mask & reg;
    {
      {
        
#line 237 
        bool __cond_0 = (_Bool)0;
        
#line 237 
        if ((int)__cond_0 != 0) 
#line 237 
                                __compiletime_assert_237(); else ;
      }
      
#line 237 
      struct rt2x00_field32 __constr_expr_105 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 237 
      tmp_1 = __constr_expr_105;
    }
    {
      {
        
#line 237 
        bool __cond_1 = (_Bool)0;
        
#line 237 
        if ((int)__cond_1 != 0) 
#line 237 
                                __compiletime_assert_237(); else ;
      }
      
#line 237 
      struct rt2x00_field32 __constr_expr_106 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 237 
      tmp_2 = __constr_expr_106;
    }
    
#line 237 
    reg = (unsigned int)((*delay_on << tmp_1.bit_offset) & (unsigned long)tmp_2.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    struct rt2x00_field32 tmp_5;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 238 
        bool __cond_2 = (_Bool)0;
        
#line 238 
        if ((int)__cond_2 != 0) 
#line 238 
                                __compiletime_assert_238(); else ;
      }
      
#line 238 
      struct rt2x00_field32 __constr_expr_107 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 238 
      tmp_3 = __constr_expr_107;
    }
    
#line 238 
    reg = ~ tmp_3.bit_mask & reg;
    {
      {
        
#line 238 
        bool __cond_3 = (_Bool)0;
        
#line 238 
        if ((int)__cond_3 != 0) 
#line 238 
                                __compiletime_assert_238(); else ;
      }
      
#line 238 
      struct rt2x00_field32 __constr_expr_108 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 238 
      tmp_4 = __constr_expr_108;
    }
    {
      {
        
#line 238 
        bool __cond_4 = (_Bool)0;
        
#line 238 
        if ((int)__cond_4 != 0) 
#line 238 
                                __compiletime_assert_238(); else ;
      }
      
#line 238 
      struct rt2x00_field32 __constr_expr_109 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 238 
      tmp_5 = __constr_expr_109;
    }
    
#line 238 
    reg = (unsigned int)((*delay_off << tmp_4.bit_offset) & (unsigned long)tmp_5.bit_mask) | reg;
  }
  
#line 239 
  rt2x00mmio_register_write(led->rt2x00dev,248U,reg);
  
#line 241 
  __retres = 0;
  
#line 241 
  return __retres;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_init_led(struct rt2x00_dev *rt2x00dev, struct rt2x00_led *led, enum led_type type)
{
  
#line 248 
  led->rt2x00dev = rt2x00dev;
  
#line 249 
  led->type = type;
  
#line 250 
  led->led_dev.brightness_set = & rt2500pci_brightness_set;
  
#line 251 
  led->led_dev.blink_set = & rt2500pci_blink_set;
  
#line 252 
  led->flags = 1U;
  
#line 253 
  return;
}


#line 271 
void __compiletime_assert_272(void);


#line 273 
void __compiletime_assert_274(void);


#line 275 
void __compiletime_assert_276(void);


#line 277 
void __compiletime_assert_277(void);


#line 278 
void __compiletime_assert_279(void);


#line 280 
void __compiletime_assert_280(void);


#line 281 
void __compiletime_assert_282(void);


#line 283 
void __compiletime_assert_283(void);


#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_config_filter(struct rt2x00_dev *rt2x00dev, unsigned int const filter_flags)
{
  u32 reg;
  
#line 270 
  rt2x00mmio_register_read(rt2x00dev,128U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 271 
        bool __cond = (_Bool)0;
        
#line 271 
        if ((int)__cond != 0) 
#line 271 
                              __compiletime_assert_272(); else ;
      }
      
#line 271 
      struct rt2x00_field32 __constr_expr_110 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 271 
      tmp = __constr_expr_110;
    }
    
#line 271 
    reg = ~ tmp.bit_mask & reg;
    {
      {
        
#line 271 
        bool __cond_0 = (_Bool)0;
        
#line 271 
        if ((int)__cond_0 != 0) 
#line 271 
                                __compiletime_assert_272(); else ;
      }
      
#line 271 
      struct rt2x00_field32 __constr_expr_111 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 271 
      tmp_0 = __constr_expr_111;
    }
    {
      {
        
#line 271 
        bool __cond_1 = (_Bool)0;
        
#line 271 
        if ((int)__cond_1 != 0) 
#line 271 
                                __compiletime_assert_272(); else ;
      }
      
#line 271 
      struct rt2x00_field32 __constr_expr_112 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 271 
      tmp_1 = __constr_expr_112;
    }
    
#line 271 
    reg = ((unsigned int)(((filter_flags & 4U) == 0U) << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 273 
        bool __cond_2 = (_Bool)0;
        
#line 273 
        if ((int)__cond_2 != 0) 
#line 273 
                                __compiletime_assert_274(); else ;
      }
      
#line 273 
      struct rt2x00_field32 __constr_expr_113 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 273 
      tmp_2 = __constr_expr_113;
    }
    
#line 273 
    reg = ~ tmp_2.bit_mask & reg;
    {
      {
        
#line 273 
        bool __cond_3 = (_Bool)0;
        
#line 273 
        if ((int)__cond_3 != 0) 
#line 273 
                                __compiletime_assert_274(); else ;
      }
      
#line 273 
      struct rt2x00_field32 __constr_expr_114 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 273 
      tmp_3 = __constr_expr_114;
    }
    {
      {
        
#line 273 
        bool __cond_4 = (_Bool)0;
        
#line 273 
        if ((int)__cond_4 != 0) 
#line 273 
                                __compiletime_assert_274(); else ;
      }
      
#line 273 
      struct rt2x00_field32 __constr_expr_115 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 273 
      tmp_4 = __constr_expr_115;
    }
    
#line 273 
    reg = ((unsigned int)(((filter_flags & 8U) == 0U) << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_5;
    struct rt2x00_field32 tmp_6;
    struct rt2x00_field32 tmp_7;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 275 
        bool __cond_5 = (_Bool)0;
        
#line 275 
        if ((int)__cond_5 != 0) 
#line 275 
                                __compiletime_assert_276(); else ;
      }
      
#line 275 
      struct rt2x00_field32 __constr_expr_116 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 275 
      tmp_5 = __constr_expr_116;
    }
    
#line 275 
    reg = ~ tmp_5.bit_mask & reg;
    {
      {
        
#line 275 
        bool __cond_6 = (_Bool)0;
        
#line 275 
        if ((int)__cond_6 != 0) 
#line 275 
                                __compiletime_assert_276(); else ;
      }
      
#line 275 
      struct rt2x00_field32 __constr_expr_117 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 275 
      tmp_6 = __constr_expr_117;
    }
    {
      {
        
#line 275 
        bool __cond_7 = (_Bool)0;
        
#line 275 
        if ((int)__cond_7 != 0) 
#line 275 
                                __compiletime_assert_276(); else ;
      }
      
#line 275 
      struct rt2x00_field32 __constr_expr_118 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 275 
      tmp_7 = __constr_expr_118;
    }
    
#line 275 
    reg = ((unsigned int)(((filter_flags & 32U) == 0U) << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_8;
    struct rt2x00_field32 tmp_9;
    struct rt2x00_field32 tmp_10;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 277 
        bool __cond_8 = (_Bool)0;
        
#line 277 
        if ((int)__cond_8 != 0) 
#line 277 
                                __compiletime_assert_277(); else ;
      }
      
#line 277 
      struct rt2x00_field32 __constr_expr_119 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 277 
      tmp_8 = __constr_expr_119;
    }
    
#line 277 
    reg = ~ tmp_8.bit_mask & reg;
    {
      {
        
#line 277 
        bool __cond_9 = (_Bool)0;
        
#line 277 
        if ((int)__cond_9 != 0) 
#line 277 
                                __compiletime_assert_277(); else ;
      }
      
#line 277 
      struct rt2x00_field32 __constr_expr_120 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 277 
      tmp_9 = __constr_expr_120;
    }
    {
      {
        
#line 277 
        bool __cond_10 = (_Bool)0;
        
#line 277 
        if ((int)__cond_10 != 0) 
#line 277 
                                 __compiletime_assert_277(); else ;
      }
      
#line 277 
      struct rt2x00_field32 __constr_expr_121 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 277 
      tmp_10 = __constr_expr_121;
    }
    
#line 277 
    reg = ((unsigned int)(1 << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_11;
    struct rt2x00_field32 tmp_12;
    struct rt2x00_field32 tmp_13;
    {
      struct rt2x00_field32 __dummy_3;
      struct rt2x00_field32 __dummy2_3;
      
    }
    {
      {
        
#line 278 
        bool __cond_11 = (_Bool)0;
        
#line 278 
        if ((int)__cond_11 != 0) 
#line 278 
                                 __compiletime_assert_279(); else ;
      }
      
#line 278 
      struct rt2x00_field32 __constr_expr_122 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 278 
      tmp_11 = __constr_expr_122;
    }
    
#line 278 
    reg = ~ tmp_11.bit_mask & reg;
    {
      {
        
#line 278 
        bool __cond_12 = (_Bool)0;
        
#line 278 
        if ((int)__cond_12 != 0) 
#line 278 
                                 __compiletime_assert_279(); else ;
      }
      
#line 278 
      struct rt2x00_field32 __constr_expr_123 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 278 
      tmp_12 = __constr_expr_123;
    }
    {
      {
        
#line 278 
        bool __cond_13 = (_Bool)0;
        
#line 278 
        if ((int)__cond_13 != 0) 
#line 278 
                                 __compiletime_assert_279(); else ;
      }
      
#line 278 
      struct rt2x00_field32 __constr_expr_124 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 278 
      tmp_13 = __constr_expr_124;
    }
    
#line 278 
    reg = ((unsigned int)((rt2x00dev->intf_ap_count == 0U) << tmp_12.bit_offset) & tmp_13.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_14;
    struct rt2x00_field32 tmp_15;
    struct rt2x00_field32 tmp_16;
    {
      struct rt2x00_field32 __dummy_4;
      struct rt2x00_field32 __dummy2_4;
      
    }
    {
      {
        
#line 280 
        bool __cond_14 = (_Bool)0;
        
#line 280 
        if ((int)__cond_14 != 0) 
#line 280 
                                 __compiletime_assert_280(); else ;
      }
      
#line 280 
      struct rt2x00_field32 __constr_expr_125 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 280 
      tmp_14 = __constr_expr_125;
    }
    
#line 280 
    reg = ~ tmp_14.bit_mask & reg;
    {
      {
        
#line 280 
        bool __cond_15 = (_Bool)0;
        
#line 280 
        if ((int)__cond_15 != 0) 
#line 280 
                                 __compiletime_assert_280(); else ;
      }
      
#line 280 
      struct rt2x00_field32 __constr_expr_126 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 280 
      tmp_15 = __constr_expr_126;
    }
    {
      {
        
#line 280 
        bool __cond_16 = (_Bool)0;
        
#line 280 
        if ((int)__cond_16 != 0) 
#line 280 
                                 __compiletime_assert_280(); else ;
      }
      
#line 280 
      struct rt2x00_field32 __constr_expr_127 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 280 
      tmp_16 = __constr_expr_127;
    }
    
#line 280 
    reg = ((unsigned int)(1 << tmp_15.bit_offset) & tmp_16.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_17;
    struct rt2x00_field32 tmp_18;
    struct rt2x00_field32 tmp_19;
    {
      struct rt2x00_field32 __dummy_5;
      struct rt2x00_field32 __dummy2_5;
      
    }
    {
      {
        
#line 281 
        bool __cond_17 = (_Bool)0;
        
#line 281 
        if ((int)__cond_17 != 0) 
#line 281 
                                 __compiletime_assert_282(); else ;
      }
      
#line 281 
      struct rt2x00_field32 __constr_expr_128 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 281 
      tmp_17 = __constr_expr_128;
    }
    
#line 281 
    reg = ~ tmp_17.bit_mask & reg;
    {
      {
        
#line 281 
        bool __cond_18 = (_Bool)0;
        
#line 281 
        if ((int)__cond_18 != 0) 
#line 281 
                                 __compiletime_assert_282(); else ;
      }
      
#line 281 
      struct rt2x00_field32 __constr_expr_129 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 281 
      tmp_18 = __constr_expr_129;
    }
    {
      {
        
#line 281 
        bool __cond_19 = (_Bool)0;
        
#line 281 
        if ((int)__cond_19 != 0) 
#line 281 
                                 __compiletime_assert_282(); else ;
      }
      
#line 281 
      struct rt2x00_field32 __constr_expr_130 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 281 
      tmp_19 = __constr_expr_130;
    }
    
#line 281 
    reg = ((unsigned int)(((filter_flags & 2U) == 0U) << tmp_18.bit_offset) & tmp_19.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_20;
    struct rt2x00_field32 tmp_21;
    struct rt2x00_field32 tmp_22;
    {
      struct rt2x00_field32 __dummy_6;
      struct rt2x00_field32 __dummy2_6;
      
    }
    {
      {
        
#line 283 
        bool __cond_20 = (_Bool)0;
        
#line 283 
        if ((int)__cond_20 != 0) 
#line 283 
                                 __compiletime_assert_283(); else ;
      }
      
#line 283 
      struct rt2x00_field32 __constr_expr_131 = {.bit_offset = 10U, .bit_mask = 1024U};
      
#line 283 
      tmp_20 = __constr_expr_131;
    }
    
#line 283 
    reg = ~ tmp_20.bit_mask & reg;
    {
      {
        
#line 283 
        bool __cond_21 = (_Bool)0;
        
#line 283 
        if ((int)__cond_21 != 0) 
#line 283 
                                 __compiletime_assert_283(); else ;
      }
      
#line 283 
      struct rt2x00_field32 __constr_expr_132 = {.bit_offset = 10U, .bit_mask = 1024U};
      
#line 283 
      tmp_21 = __constr_expr_132;
    }
    {
      {
        
#line 283 
        bool __cond_22 = (_Bool)0;
        
#line 283 
        if ((int)__cond_22 != 0) 
#line 283 
                                 __compiletime_assert_283(); else ;
      }
      
#line 283 
      struct rt2x00_field32 __constr_expr_133 = {.bit_offset = 10U, .bit_mask = 1024U};
      
#line 283 
      tmp_22 = __constr_expr_133;
    }
    
#line 283 
    reg = 0U | reg;
  }
  
#line 284 
  rt2x00mmio_register_write(rt2x00dev,128U,reg);
  
#line 285 
  return;
}


#line 302 
void __compiletime_assert_302(void);


#line 303 
void __compiletime_assert_303(void);


#line 310 
void __compiletime_assert_310(void);


#line 287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_config_intf(struct rt2x00_dev *rt2x00dev, struct rt2x00_intf *intf, struct rt2x00intf_conf *conf, unsigned int const flags)
{
  unsigned int bcn_preload;
  u32 reg;
  
#line 292 
  struct data_queue *queue = rt2x00dev->bcn;
  
#line 296 
  if ((flags & 2U) != 0U) {
    
#line 300 
    bcn_preload = 240U;
    
#line 301 
    rt2x00mmio_register_read(rt2x00dev,304U,& reg);
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 302 
          bool __cond = (_Bool)0;
          
#line 302 
          if ((int)__cond != 0) 
#line 302 
                                __compiletime_assert_302(); else ;
        }
        
#line 302 
        struct rt2x00_field32 __constr_expr_134 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 302 
        tmp = __constr_expr_134;
      }
      
#line 302 
      reg = ~ tmp.bit_mask & reg;
      {
        {
          
#line 302 
          bool __cond_0 = (_Bool)0;
          
#line 302 
          if ((int)__cond_0 != 0) 
#line 302 
                                  __compiletime_assert_302(); else ;
        }
        
#line 302 
        struct rt2x00_field32 __constr_expr_135 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 302 
        tmp_0 = __constr_expr_135;
      }
      {
        {
          
#line 302 
          bool __cond_1 = (_Bool)0;
          
#line 302 
          if ((int)__cond_1 != 0) 
#line 302 
                                  __compiletime_assert_302(); else ;
        }
        
#line 302 
        struct rt2x00_field32 __constr_expr_136 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 302 
        tmp_1 = __constr_expr_136;
      }
      
#line 302 
      reg = ((bcn_preload << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 303 
          bool __cond_2 = (_Bool)0;
          
#line 303 
          if ((int)__cond_2 != 0) 
#line 303 
                                  __compiletime_assert_303(); else ;
        }
        
#line 303 
        struct rt2x00_field32 __constr_expr_137 = {.bit_offset = 16U, .bit_mask = 983040U};
        
#line 303 
        tmp_2 = __constr_expr_137;
      }
      
#line 303 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 303 
          bool __cond_3 = (_Bool)0;
          
#line 303 
          if ((int)__cond_3 != 0) 
#line 303 
                                  __compiletime_assert_303(); else ;
        }
        
#line 303 
        struct rt2x00_field32 __constr_expr_138 = {.bit_offset = 16U, .bit_mask = 983040U};
        
#line 303 
        tmp_3 = __constr_expr_138;
      }
      {
        {
          
#line 303 
          bool __cond_4 = (_Bool)0;
          
#line 303 
          if ((int)__cond_4 != 0) 
#line 303 
                                  __compiletime_assert_303(); else ;
        }
        
#line 303 
        struct rt2x00_field32 __constr_expr_139 = {.bit_offset = 16U, .bit_mask = 983040U};
        
#line 303 
        tmp_4 = __constr_expr_139;
      }
      
#line 303 
      reg = ((unsigned int)((int)queue->cw_min << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
    }
    
#line 304 
    rt2x00mmio_register_write(rt2x00dev,304U,reg);
    
#line 309 
    rt2x00mmio_register_read(rt2x00dev,56U,& reg);
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 310 
          bool __cond_5 = (_Bool)0;
          
#line 310 
          if ((int)__cond_5 != 0) 
#line 310 
                                  __compiletime_assert_310(); else ;
        }
        
#line 310 
        struct rt2x00_field32 __constr_expr_140 = {.bit_offset = 1U, .bit_mask = 6U};
        
#line 310 
        tmp_5 = __constr_expr_140;
      }
      
#line 310 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 310 
          bool __cond_6 = (_Bool)0;
          
#line 310 
          if ((int)__cond_6 != 0) 
#line 310 
                                  __compiletime_assert_310(); else ;
        }
        
#line 310 
        struct rt2x00_field32 __constr_expr_141 = {.bit_offset = 1U, .bit_mask = 6U};
        
#line 310 
        tmp_6 = __constr_expr_141;
      }
      {
        {
          
#line 310 
          bool __cond_7 = (_Bool)0;
          
#line 310 
          if ((int)__cond_7 != 0) 
#line 310 
                                  __compiletime_assert_310(); else ;
        }
        
#line 310 
        struct rt2x00_field32 __constr_expr_142 = {.bit_offset = 1U, .bit_mask = 6U};
        
#line 310 
        tmp_7 = __constr_expr_142;
      }
      
#line 310 
      reg = (((unsigned int)conf->sync << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
    }
    
#line 311 
    rt2x00mmio_register_write(rt2x00dev,56U,reg);
  }
  else ;
  
#line 314 
  if ((flags & 4U) != 0U) 
#line 315 
                          rt2x00mmio_register_multiwrite(rt2x00dev,12U,(void const *)(& conf->mac),8U); else ;
  
#line 318 
  if ((flags & 8U) != 0U) 
#line 319 
                          rt2x00mmio_register_multiwrite(rt2x00dev,20U,(void const *)(& conf->bssid),8U); else ;
  
#line 321 
  return;
}


#line 337 
void __compiletime_assert_337(void);


#line 338 
void __compiletime_assert_338(void);


#line 339 
void __compiletime_assert_339(void);


#line 340 
void __compiletime_assert_340(void);


#line 344 
void __compiletime_assert_344(void);


#line 345 
void __compiletime_assert_345(void);


#line 346 
void __compiletime_assert_347(void);


#line 351 
void __compiletime_assert_351(void);


#line 352 
void __compiletime_assert_352(void);


#line 353 
void __compiletime_assert_354(void);


#line 358 
void __compiletime_assert_358(void);


#line 359 
void __compiletime_assert_359(void);


#line 360 
void __compiletime_assert_361(void);


#line 365 
void __compiletime_assert_365(void);


#line 366 
void __compiletime_assert_366(void);


#line 367 
void __compiletime_assert_368(void);


#line 377 
void __compiletime_assert_377(void);


#line 381 
void __compiletime_assert_381(void);


#line 382 
void __compiletime_assert_382(void);


#line 386 
void __compiletime_assert_386(void);


#line 387 
void __compiletime_assert_387(void);


#line 393 
void __compiletime_assert_394(void);


#line 395 
void __compiletime_assert_396(void);


#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_config_erp(struct rt2x00_dev *rt2x00dev, struct rt2x00lib_erp *erp, u32 changed)
{
  int preamble_mask;
  u32 reg;
  
#line 333 
  if ((changed & 4U) != 0U) {
    
#line 334 
    preamble_mask = erp->short_preamble << 3;
    
#line 336 
    rt2x00mmio_register_read(rt2x00dev,100U,& reg);
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 337 
          bool __cond = (_Bool)0;
          
#line 337 
          if ((int)__cond != 0) 
#line 337 
                                __compiletime_assert_337(); else ;
        }
        
#line 337 
        struct rt2x00_field32 __constr_expr_143 = {.bit_offset = 0U, .bit_mask = 511U};
        
#line 337 
        tmp = __constr_expr_143;
      }
      
#line 337 
      reg = ~ tmp.bit_mask & reg;
      {
        {
          
#line 337 
          bool __cond_0 = (_Bool)0;
          
#line 337 
          if ((int)__cond_0 != 0) 
#line 337 
                                  __compiletime_assert_337(); else ;
        }
        
#line 337 
        struct rt2x00_field32 __constr_expr_144 = {.bit_offset = 0U, .bit_mask = 511U};
        
#line 337 
        tmp_0 = __constr_expr_144;
      }
      {
        {
          
#line 337 
          bool __cond_1 = (_Bool)0;
          
#line 337 
          if ((int)__cond_1 != 0) 
#line 337 
                                  __compiletime_assert_337(); else ;
        }
        
#line 337 
        struct rt2x00_field32 __constr_expr_145 = {.bit_offset = 0U, .bit_mask = 511U};
        
#line 337 
        tmp_1 = __constr_expr_145;
      }
      
#line 337 
      reg = ((unsigned int)(354 << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 338 
          bool __cond_2 = (_Bool)0;
          
#line 338 
          if ((int)__cond_2 != 0) 
#line 338 
                                  __compiletime_assert_338(); else ;
        }
        
#line 338 
        struct rt2x00_field32 __constr_expr_146 = {.bit_offset = 9U, .bit_mask = 261632U};
        
#line 338 
        tmp_2 = __constr_expr_146;
      }
      
#line 338 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 338 
          bool __cond_3 = (_Bool)0;
          
#line 338 
          if ((int)__cond_3 != 0) 
#line 338 
                                  __compiletime_assert_338(); else ;
        }
        
#line 338 
        struct rt2x00_field32 __constr_expr_147 = {.bit_offset = 9U, .bit_mask = 261632U};
        
#line 338 
        tmp_3 = __constr_expr_147;
      }
      {
        {
          
#line 338 
          bool __cond_4 = (_Bool)0;
          
#line 338 
          if ((int)__cond_4 != 0) 
#line 338 
                                  __compiletime_assert_338(); else ;
        }
        
#line 338 
        struct rt2x00_field32 __constr_expr_148 = {.bit_offset = 9U, .bit_mask = 261632U};
        
#line 338 
        tmp_4 = __constr_expr_148;
      }
      
#line 338 
      reg = ((unsigned int)(162 << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 339 
          bool __cond_5 = (_Bool)0;
          
#line 339 
          if ((int)__cond_5 != 0) 
#line 339 
                                  __compiletime_assert_339(); else ;
        }
        
#line 339 
        struct rt2x00_field32 __constr_expr_149 = {.bit_offset = 18U, .bit_mask = 16515072U};
        
#line 339 
        tmp_5 = __constr_expr_149;
      }
      
#line 339 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 339 
          bool __cond_6 = (_Bool)0;
          
#line 339 
          if ((int)__cond_6 != 0) 
#line 339 
                                  __compiletime_assert_339(); else ;
        }
        
#line 339 
        struct rt2x00_field32 __constr_expr_150 = {.bit_offset = 18U, .bit_mask = 16515072U};
        
#line 339 
        tmp_6 = __constr_expr_150;
      }
      {
        {
          
#line 339 
          bool __cond_7 = (_Bool)0;
          
#line 339 
          if ((int)__cond_7 != 0) 
#line 339 
                                  __compiletime_assert_339(); else ;
        }
        
#line 339 
        struct rt2x00_field32 __constr_expr_151 = {.bit_offset = 18U, .bit_mask = 16515072U};
        
#line 339 
        tmp_7 = __constr_expr_151;
      }
      
#line 339 
      reg = ((unsigned int)(24 << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_8;
      struct rt2x00_field32 tmp_9;
      struct rt2x00_field32 tmp_10;
      {
        struct rt2x00_field32 __dummy_2;
        struct rt2x00_field32 __dummy2_2;
        
      }
      {
        {
          
#line 340 
          bool __cond_8 = (_Bool)0;
          
#line 340 
          if ((int)__cond_8 != 0) 
#line 340 
                                  __compiletime_assert_340(); else ;
        }
        
#line 340 
        struct rt2x00_field32 __constr_expr_152 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 340 
        tmp_8 = __constr_expr_152;
      }
      
#line 340 
      reg = ~ tmp_8.bit_mask & reg;
      {
        {
          
#line 340 
          bool __cond_9 = (_Bool)0;
          
#line 340 
          if ((int)__cond_9 != 0) 
#line 340 
                                  __compiletime_assert_340(); else ;
        }
        
#line 340 
        struct rt2x00_field32 __constr_expr_153 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 340 
        tmp_9 = __constr_expr_153;
      }
      {
        {
          
#line 340 
          bool __cond_10 = (_Bool)0;
          
#line 340 
          if ((int)__cond_10 != 0) 
#line 340 
                                   __compiletime_assert_340(); else ;
        }
        
#line 340 
        struct rt2x00_field32 __constr_expr_154 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 340 
        tmp_10 = __constr_expr_154;
      }
      
#line 340 
      reg = ((unsigned int)(1 << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
    }
    
#line 341 
    rt2x00mmio_register_write(rt2x00dev,100U,reg);
    
#line 343 
    rt2x00mmio_register_read(rt2x00dev,316U,& reg);
    {
      struct rt2x00_field32 tmp_11;
      struct rt2x00_field32 tmp_12;
      struct rt2x00_field32 tmp_13;
      {
        struct rt2x00_field32 __dummy_3;
        struct rt2x00_field32 __dummy2_3;
        
      }
      {
        {
          
#line 344 
          bool __cond_11 = (_Bool)0;
          
#line 344 
          if ((int)__cond_11 != 0) 
#line 344 
                                   __compiletime_assert_344(); else ;
        }
        
#line 344 
        struct rt2x00_field32 __constr_expr_155 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 344 
        tmp_11 = __constr_expr_155;
      }
      
#line 344 
      reg = ~ tmp_11.bit_mask & reg;
      {
        {
          
#line 344 
          bool __cond_12 = (_Bool)0;
          
#line 344 
          if ((int)__cond_12 != 0) 
#line 344 
                                   __compiletime_assert_344(); else ;
        }
        
#line 344 
        struct rt2x00_field32 __constr_expr_156 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 344 
        tmp_12 = __constr_expr_156;
      }
      {
        {
          
#line 344 
          bool __cond_13 = (_Bool)0;
          
#line 344 
          if ((int)__cond_13 != 0) 
#line 344 
                                   __compiletime_assert_344(); else ;
        }
        
#line 344 
        struct rt2x00_field32 __constr_expr_157 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 344 
        tmp_13 = __constr_expr_157;
      }
      
#line 344 
      reg = 0U | reg;
    }
    {
      struct rt2x00_field32 tmp_14;
      struct rt2x00_field32 tmp_15;
      struct rt2x00_field32 tmp_16;
      {
        struct rt2x00_field32 __dummy_4;
        struct rt2x00_field32 __dummy2_4;
        
      }
      {
        {
          
#line 345 
          bool __cond_14 = (_Bool)0;
          
#line 345 
          if ((int)__cond_14 != 0) 
#line 345 
                                   __compiletime_assert_345(); else ;
        }
        
#line 345 
        struct rt2x00_field32 __constr_expr_158 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 345 
        tmp_14 = __constr_expr_158;
      }
      
#line 345 
      reg = ~ tmp_14.bit_mask & reg;
      {
        {
          
#line 345 
          bool __cond_15 = (_Bool)0;
          
#line 345 
          if ((int)__cond_15 != 0) 
#line 345 
                                   __compiletime_assert_345(); else ;
        }
        
#line 345 
        struct rt2x00_field32 __constr_expr_159 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 345 
        tmp_15 = __constr_expr_159;
      }
      {
        {
          
#line 345 
          bool __cond_16 = (_Bool)0;
          
#line 345 
          if ((int)__cond_16 != 0) 
#line 345 
                                   __compiletime_assert_345(); else ;
        }
        
#line 345 
        struct rt2x00_field32 __constr_expr_160 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 345 
        tmp_16 = __constr_expr_160;
      }
      
#line 345 
      reg = ((unsigned int)(4 << tmp_15.bit_offset) & tmp_16.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_17;
      struct rt2x00_field32 tmp_18;
      struct rt2x00_field32 tmp_19;
      {
        struct rt2x00_field32 __dummy_5;
        struct rt2x00_field32 __dummy2_5;
        
      }
      {
        {
          
#line 346 
          bool __cond_17 = (_Bool)0;
          
#line 346 
          if ((int)__cond_17 != 0) 
#line 346 
                                   __compiletime_assert_347(); else ;
        }
        
#line 346 
        struct rt2x00_field32 __constr_expr_161 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 346 
        tmp_17 = __constr_expr_161;
      }
      
#line 346 
      reg = ~ tmp_17.bit_mask & reg;
      {
        {
          
#line 346 
          bool __cond_18 = (_Bool)0;
          
#line 346 
          if ((int)__cond_18 != 0) 
#line 346 
                                   __compiletime_assert_347(); else ;
        }
        
#line 346 
        struct rt2x00_field32 __constr_expr_162 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 346 
        tmp_18 = __constr_expr_162;
      }
      {
        {
          
#line 346 
          bool __cond_19 = (_Bool)0;
          
#line 346 
          if ((int)__cond_19 != 0) 
#line 346 
                                   __compiletime_assert_347(); else ;
        }
        
#line 346 
        struct rt2x00_field32 __constr_expr_163 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 346 
        tmp_19 = __constr_expr_163;
      }
      
#line 346 
      reg = ((unsigned int)(112 << tmp_18.bit_offset) & tmp_19.bit_mask) | reg;
    }
    
#line 348 
    rt2x00mmio_register_write(rt2x00dev,316U,reg);
    
#line 350 
    rt2x00mmio_register_read(rt2x00dev,320U,& reg);
    {
      struct rt2x00_field32 tmp_20;
      struct rt2x00_field32 tmp_21;
      struct rt2x00_field32 tmp_22;
      {
        struct rt2x00_field32 __dummy_6;
        struct rt2x00_field32 __dummy2_6;
        
      }
      {
        {
          
#line 351 
          bool __cond_20 = (_Bool)0;
          
#line 351 
          if ((int)__cond_20 != 0) 
#line 351 
                                   __compiletime_assert_351(); else ;
        }
        
#line 351 
        struct rt2x00_field32 __constr_expr_164 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 351 
        tmp_20 = __constr_expr_164;
      }
      
#line 351 
      reg = ~ tmp_20.bit_mask & reg;
      {
        {
          
#line 351 
          bool __cond_21 = (_Bool)0;
          
#line 351 
          if ((int)__cond_21 != 0) 
#line 351 
                                   __compiletime_assert_351(); else ;
        }
        
#line 351 
        struct rt2x00_field32 __constr_expr_165 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 351 
        tmp_21 = __constr_expr_165;
      }
      {
        {
          
#line 351 
          bool __cond_22 = (_Bool)0;
          
#line 351 
          if ((int)__cond_22 != 0) 
#line 351 
                                   __compiletime_assert_351(); else ;
        }
        
#line 351 
        struct rt2x00_field32 __constr_expr_166 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 351 
        tmp_22 = __constr_expr_166;
      }
      
#line 351 
      reg = ((unsigned int)((preamble_mask | 1) << tmp_21.bit_offset) & tmp_22.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_23;
      struct rt2x00_field32 tmp_24;
      struct rt2x00_field32 tmp_25;
      {
        struct rt2x00_field32 __dummy_7;
        struct rt2x00_field32 __dummy2_7;
        
      }
      {
        {
          
#line 352 
          bool __cond_23 = (_Bool)0;
          
#line 352 
          if ((int)__cond_23 != 0) 
#line 352 
                                   __compiletime_assert_352(); else ;
        }
        
#line 352 
        struct rt2x00_field32 __constr_expr_167 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 352 
        tmp_23 = __constr_expr_167;
      }
      
#line 352 
      reg = ~ tmp_23.bit_mask & reg;
      {
        {
          
#line 352 
          bool __cond_24 = (_Bool)0;
          
#line 352 
          if ((int)__cond_24 != 0) 
#line 352 
                                   __compiletime_assert_352(); else ;
        }
        
#line 352 
        struct rt2x00_field32 __constr_expr_168 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 352 
        tmp_24 = __constr_expr_168;
      }
      {
        {
          
#line 352 
          bool __cond_25 = (_Bool)0;
          
#line 352 
          if ((int)__cond_25 != 0) 
#line 352 
                                   __compiletime_assert_352(); else ;
        }
        
#line 352 
        struct rt2x00_field32 __constr_expr_169 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 352 
        tmp_25 = __constr_expr_169;
      }
      
#line 352 
      reg = ((unsigned int)(4 << tmp_24.bit_offset) & tmp_25.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_26;
      struct rt2x00_field32 tmp_27;
      struct rt2x00_field32 tmp_28;
      {
        struct rt2x00_field32 __dummy_8;
        struct rt2x00_field32 __dummy2_8;
        
      }
      {
        {
          
#line 353 
          bool __cond_26 = (_Bool)0;
          
#line 353 
          if ((int)__cond_26 != 0) 
#line 353 
                                   __compiletime_assert_354(); else ;
        }
        
#line 353 
        struct rt2x00_field32 __constr_expr_170 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 353 
        tmp_26 = __constr_expr_170;
      }
      
#line 353 
      reg = ~ tmp_26.bit_mask & reg;
      {
        {
          
#line 353 
          bool __cond_27 = (_Bool)0;
          
#line 353 
          if ((int)__cond_27 != 0) 
#line 353 
                                   __compiletime_assert_354(); else ;
        }
        
#line 353 
        struct rt2x00_field32 __constr_expr_171 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 353 
        tmp_27 = __constr_expr_171;
      }
      {
        {
          
#line 353 
          bool __cond_28 = (_Bool)0;
          
#line 353 
          if ((int)__cond_28 != 0) 
#line 353 
                                   __compiletime_assert_354(); else ;
        }
        
#line 353 
        struct rt2x00_field32 __constr_expr_172 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 353 
        tmp_28 = __constr_expr_172;
      }
      
#line 353 
      reg = ((unsigned int)(56 << tmp_27.bit_offset) & tmp_28.bit_mask) | reg;
    }
    
#line 355 
    rt2x00mmio_register_write(rt2x00dev,320U,reg);
    
#line 357 
    rt2x00mmio_register_read(rt2x00dev,324U,& reg);
    {
      struct rt2x00_field32 tmp_29;
      struct rt2x00_field32 tmp_30;
      struct rt2x00_field32 tmp_31;
      {
        struct rt2x00_field32 __dummy_9;
        struct rt2x00_field32 __dummy2_9;
        
      }
      {
        {
          
#line 358 
          bool __cond_29 = (_Bool)0;
          
#line 358 
          if ((int)__cond_29 != 0) 
#line 358 
                                   __compiletime_assert_358(); else ;
        }
        
#line 358 
        struct rt2x00_field32 __constr_expr_173 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 358 
        tmp_29 = __constr_expr_173;
      }
      
#line 358 
      reg = ~ tmp_29.bit_mask & reg;
      {
        {
          
#line 358 
          bool __cond_30 = (_Bool)0;
          
#line 358 
          if ((int)__cond_30 != 0) 
#line 358 
                                   __compiletime_assert_358(); else ;
        }
        
#line 358 
        struct rt2x00_field32 __constr_expr_174 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 358 
        tmp_30 = __constr_expr_174;
      }
      {
        {
          
#line 358 
          bool __cond_31 = (_Bool)0;
          
#line 358 
          if ((int)__cond_31 != 0) 
#line 358 
                                   __compiletime_assert_358(); else ;
        }
        
#line 358 
        struct rt2x00_field32 __constr_expr_175 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 358 
        tmp_31 = __constr_expr_175;
      }
      
#line 358 
      reg = ((unsigned int)((preamble_mask | 2) << tmp_30.bit_offset) & tmp_31.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_32;
      struct rt2x00_field32 tmp_33;
      struct rt2x00_field32 tmp_34;
      {
        struct rt2x00_field32 __dummy_10;
        struct rt2x00_field32 __dummy2_10;
        
      }
      {
        {
          
#line 359 
          bool __cond_32 = (_Bool)0;
          
#line 359 
          if ((int)__cond_32 != 0) 
#line 359 
                                   __compiletime_assert_359(); else ;
        }
        
#line 359 
        struct rt2x00_field32 __constr_expr_176 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 359 
        tmp_32 = __constr_expr_176;
      }
      
#line 359 
      reg = ~ tmp_32.bit_mask & reg;
      {
        {
          
#line 359 
          bool __cond_33 = (_Bool)0;
          
#line 359 
          if ((int)__cond_33 != 0) 
#line 359 
                                   __compiletime_assert_359(); else ;
        }
        
#line 359 
        struct rt2x00_field32 __constr_expr_177 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 359 
        tmp_33 = __constr_expr_177;
      }
      {
        {
          
#line 359 
          bool __cond_34 = (_Bool)0;
          
#line 359 
          if ((int)__cond_34 != 0) 
#line 359 
                                   __compiletime_assert_359(); else ;
        }
        
#line 359 
        struct rt2x00_field32 __constr_expr_178 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 359 
        tmp_34 = __constr_expr_178;
      }
      
#line 359 
      reg = ((unsigned int)(4 << tmp_33.bit_offset) & tmp_34.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_35;
      struct rt2x00_field32 tmp_36;
      struct rt2x00_field32 tmp_37;
      {
        struct rt2x00_field32 __dummy_11;
        struct rt2x00_field32 __dummy2_11;
        
      }
      {
        {
          
#line 360 
          bool __cond_35 = (_Bool)0;
          
#line 360 
          if ((int)__cond_35 != 0) 
#line 360 
                                   __compiletime_assert_361(); else ;
        }
        
#line 360 
        struct rt2x00_field32 __constr_expr_179 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 360 
        tmp_35 = __constr_expr_179;
      }
      
#line 360 
      reg = ~ tmp_35.bit_mask & reg;
      {
        {
          
#line 360 
          bool __cond_36 = (_Bool)0;
          
#line 360 
          if ((int)__cond_36 != 0) 
#line 360 
                                   __compiletime_assert_361(); else ;
        }
        
#line 360 
        struct rt2x00_field32 __constr_expr_180 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 360 
        tmp_36 = __constr_expr_180;
      }
      {
        {
          
#line 360 
          bool __cond_37 = (_Bool)0;
          
#line 360 
          if ((int)__cond_37 != 0) 
#line 360 
                                   __compiletime_assert_361(); else ;
        }
        
#line 360 
        struct rt2x00_field32 __constr_expr_181 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 360 
        tmp_37 = __constr_expr_181;
      }
      
#line 360 
      reg = ((unsigned int)(20 << tmp_36.bit_offset) & tmp_37.bit_mask) | reg;
    }
    
#line 362 
    rt2x00mmio_register_write(rt2x00dev,324U,reg);
    
#line 364 
    rt2x00mmio_register_read(rt2x00dev,328U,& reg);
    {
      struct rt2x00_field32 tmp_38;
      struct rt2x00_field32 tmp_39;
      struct rt2x00_field32 tmp_40;
      {
        struct rt2x00_field32 __dummy_12;
        struct rt2x00_field32 __dummy2_12;
        
      }
      {
        {
          
#line 365 
          bool __cond_38 = (_Bool)0;
          
#line 365 
          if ((int)__cond_38 != 0) 
#line 365 
                                   __compiletime_assert_365(); else ;
        }
        
#line 365 
        struct rt2x00_field32 __constr_expr_182 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 365 
        tmp_38 = __constr_expr_182;
      }
      
#line 365 
      reg = ~ tmp_38.bit_mask & reg;
      {
        {
          
#line 365 
          bool __cond_39 = (_Bool)0;
          
#line 365 
          if ((int)__cond_39 != 0) 
#line 365 
                                   __compiletime_assert_365(); else ;
        }
        
#line 365 
        struct rt2x00_field32 __constr_expr_183 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 365 
        tmp_39 = __constr_expr_183;
      }
      {
        {
          
#line 365 
          bool __cond_40 = (_Bool)0;
          
#line 365 
          if ((int)__cond_40 != 0) 
#line 365 
                                   __compiletime_assert_365(); else ;
        }
        
#line 365 
        struct rt2x00_field32 __constr_expr_184 = {.bit_offset = 0U, .bit_mask = 255U};
        
#line 365 
        tmp_40 = __constr_expr_184;
      }
      
#line 365 
      reg = ((unsigned int)((preamble_mask | 3) << tmp_39.bit_offset) & tmp_40.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_41;
      struct rt2x00_field32 tmp_42;
      struct rt2x00_field32 tmp_43;
      {
        struct rt2x00_field32 __dummy_13;
        struct rt2x00_field32 __dummy2_13;
        
      }
      {
        {
          
#line 366 
          bool __cond_41 = (_Bool)0;
          
#line 366 
          if ((int)__cond_41 != 0) 
#line 366 
                                   __compiletime_assert_366(); else ;
        }
        
#line 366 
        struct rt2x00_field32 __constr_expr_185 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 366 
        tmp_41 = __constr_expr_185;
      }
      
#line 366 
      reg = ~ tmp_41.bit_mask & reg;
      {
        {
          
#line 366 
          bool __cond_42 = (_Bool)0;
          
#line 366 
          if ((int)__cond_42 != 0) 
#line 366 
                                   __compiletime_assert_366(); else ;
        }
        
#line 366 
        struct rt2x00_field32 __constr_expr_186 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 366 
        tmp_42 = __constr_expr_186;
      }
      {
        {
          
#line 366 
          bool __cond_43 = (_Bool)0;
          
#line 366 
          if ((int)__cond_43 != 0) 
#line 366 
                                   __compiletime_assert_366(); else ;
        }
        
#line 366 
        struct rt2x00_field32 __constr_expr_187 = {.bit_offset = 8U, .bit_mask = 65280U};
        
#line 366 
        tmp_43 = __constr_expr_187;
      }
      
#line 366 
      reg = ((unsigned int)(132 << tmp_42.bit_offset) & tmp_43.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_44;
      struct rt2x00_field32 tmp_45;
      struct rt2x00_field32 tmp_46;
      {
        struct rt2x00_field32 __dummy_14;
        struct rt2x00_field32 __dummy2_14;
        
      }
      {
        {
          
#line 367 
          bool __cond_44 = (_Bool)0;
          
#line 367 
          if ((int)__cond_44 != 0) 
#line 367 
                                   __compiletime_assert_368(); else ;
        }
        
#line 367 
        struct rt2x00_field32 __constr_expr_188 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 367 
        tmp_44 = __constr_expr_188;
      }
      
#line 367 
      reg = ~ tmp_44.bit_mask & reg;
      {
        {
          
#line 367 
          bool __cond_45 = (_Bool)0;
          
#line 367 
          if ((int)__cond_45 != 0) 
#line 367 
                                   __compiletime_assert_368(); else ;
        }
        
#line 367 
        struct rt2x00_field32 __constr_expr_189 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 367 
        tmp_45 = __constr_expr_189;
      }
      {
        {
          
#line 367 
          bool __cond_46 = (_Bool)0;
          
#line 367 
          if ((int)__cond_46 != 0) 
#line 367 
                                   __compiletime_assert_368(); else ;
        }
        
#line 367 
        struct rt2x00_field32 __constr_expr_190 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 367 
        tmp_46 = __constr_expr_190;
      }
      
#line 367 
      reg = ((unsigned int)(10 << tmp_45.bit_offset) & tmp_46.bit_mask) | reg;
    }
    
#line 369 
    rt2x00mmio_register_write(rt2x00dev,328U,reg);
  }
  else ;
  
#line 372 
  if ((changed & 32U) != 0U) 
#line 373 
                             rt2x00mmio_register_write(rt2x00dev,156U,erp->basic_rates); else ;
  
#line 375 
  if ((changed & 8U) != 0U) {
    
#line 376 
    rt2x00mmio_register_read(rt2x00dev,44U,& reg);
    {
      struct rt2x00_field32 tmp_47;
      struct rt2x00_field32 tmp_48;
      struct rt2x00_field32 tmp_49;
      {
        struct rt2x00_field32 __dummy_15;
        struct rt2x00_field32 __dummy2_15;
        
      }
      {
        {
          
#line 377 
          bool __cond_47 = (_Bool)0;
          
#line 377 
          if ((int)__cond_47 != 0) 
#line 377 
                                   __compiletime_assert_377(); else ;
        }
        
#line 377 
        struct rt2x00_field32 __constr_expr_191 = {.bit_offset = 8U, .bit_mask = 7936U};
        
#line 377 
        tmp_47 = __constr_expr_191;
      }
      
#line 377 
      reg = ~ tmp_47.bit_mask & reg;
      {
        {
          
#line 377 
          bool __cond_48 = (_Bool)0;
          
#line 377 
          if ((int)__cond_48 != 0) 
#line 377 
                                   __compiletime_assert_377(); else ;
        }
        
#line 377 
        struct rt2x00_field32 __constr_expr_192 = {.bit_offset = 8U, .bit_mask = 7936U};
        
#line 377 
        tmp_48 = __constr_expr_192;
      }
      {
        {
          
#line 377 
          bool __cond_49 = (_Bool)0;
          
#line 377 
          if ((int)__cond_49 != 0) 
#line 377 
                                   __compiletime_assert_377(); else ;
        }
        
#line 377 
        struct rt2x00_field32 __constr_expr_193 = {.bit_offset = 8U, .bit_mask = 7936U};
        
#line 377 
        tmp_49 = __constr_expr_193;
      }
      
#line 377 
      reg = ((unsigned int)(erp->slot_time << tmp_48.bit_offset) & tmp_49.bit_mask) | reg;
    }
    
#line 378 
    rt2x00mmio_register_write(rt2x00dev,44U,reg);
    
#line 380 
    rt2x00mmio_register_read(rt2x00dev,72U,& reg);
    {
      struct rt2x00_field32 tmp_50;
      struct rt2x00_field32 tmp_51;
      struct rt2x00_field32 tmp_52;
      {
        struct rt2x00_field32 __dummy_16;
        struct rt2x00_field32 __dummy2_16;
        
      }
      {
        {
          
#line 381 
          bool __cond_50 = (_Bool)0;
          
#line 381 
          if ((int)__cond_50 != 0) 
#line 381 
                                   __compiletime_assert_381(); else ;
        }
        
#line 381 
        struct rt2x00_field32 __constr_expr_194 = {.bit_offset = 0U, .bit_mask = 511U};
        
#line 381 
        tmp_50 = __constr_expr_194;
      }
      
#line 381 
      reg = ~ tmp_50.bit_mask & reg;
      {
        {
          
#line 381 
          bool __cond_51 = (_Bool)0;
          
#line 381 
          if ((int)__cond_51 != 0) 
#line 381 
                                   __compiletime_assert_381(); else ;
        }
        
#line 381 
        struct rt2x00_field32 __constr_expr_195 = {.bit_offset = 0U, .bit_mask = 511U};
        
#line 381 
        tmp_51 = __constr_expr_195;
      }
      {
        {
          
#line 381 
          bool __cond_52 = (_Bool)0;
          
#line 381 
          if ((int)__cond_52 != 0) 
#line 381 
                                   __compiletime_assert_381(); else ;
        }
        
#line 381 
        struct rt2x00_field32 __constr_expr_196 = {.bit_offset = 0U, .bit_mask = 511U};
        
#line 381 
        tmp_52 = __constr_expr_196;
      }
      
#line 381 
      reg = ((unsigned int)((int)erp->sifs << tmp_51.bit_offset) & tmp_52.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_53;
      struct rt2x00_field32 tmp_54;
      struct rt2x00_field32 tmp_55;
      {
        struct rt2x00_field32 __dummy_17;
        struct rt2x00_field32 __dummy2_17;
        
      }
      {
        {
          
#line 382 
          bool __cond_53 = (_Bool)0;
          
#line 382 
          if ((int)__cond_53 != 0) 
#line 382 
                                   __compiletime_assert_382(); else ;
        }
        
#line 382 
        struct rt2x00_field32 __constr_expr_197 = {.bit_offset = 16U, .bit_mask = 2031616U};
        
#line 382 
        tmp_53 = __constr_expr_197;
      }
      
#line 382 
      reg = ~ tmp_53.bit_mask & reg;
      {
        {
          
#line 382 
          bool __cond_54 = (_Bool)0;
          
#line 382 
          if ((int)__cond_54 != 0) 
#line 382 
                                   __compiletime_assert_382(); else ;
        }
        
#line 382 
        struct rt2x00_field32 __constr_expr_198 = {.bit_offset = 16U, .bit_mask = 2031616U};
        
#line 382 
        tmp_54 = __constr_expr_198;
      }
      {
        {
          
#line 382 
          bool __cond_55 = (_Bool)0;
          
#line 382 
          if ((int)__cond_55 != 0) 
#line 382 
                                   __compiletime_assert_382(); else ;
        }
        
#line 382 
        struct rt2x00_field32 __constr_expr_199 = {.bit_offset = 16U, .bit_mask = 2031616U};
        
#line 382 
        tmp_55 = __constr_expr_199;
      }
      
#line 382 
      reg = ((unsigned int)((int)erp->pifs << tmp_54.bit_offset) & tmp_55.bit_mask) | reg;
    }
    
#line 383 
    rt2x00mmio_register_write(rt2x00dev,72U,reg);
    
#line 385 
    rt2x00mmio_register_read(rt2x00dev,76U,& reg);
    {
      struct rt2x00_field32 tmp_56;
      struct rt2x00_field32 tmp_57;
      struct rt2x00_field32 tmp_58;
      {
        struct rt2x00_field32 __dummy_18;
        struct rt2x00_field32 __dummy2_18;
        
      }
      {
        {
          
#line 386 
          bool __cond_56 = (_Bool)0;
          
#line 386 
          if ((int)__cond_56 != 0) 
#line 386 
                                   __compiletime_assert_386(); else ;
        }
        
#line 386 
        struct rt2x00_field32 __constr_expr_200 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 386 
        tmp_56 = __constr_expr_200;
      }
      
#line 386 
      reg = ~ tmp_56.bit_mask & reg;
      {
        {
          
#line 386 
          bool __cond_57 = (_Bool)0;
          
#line 386 
          if ((int)__cond_57 != 0) 
#line 386 
                                   __compiletime_assert_386(); else ;
        }
        
#line 386 
        struct rt2x00_field32 __constr_expr_201 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 386 
        tmp_57 = __constr_expr_201;
      }
      {
        {
          
#line 386 
          bool __cond_58 = (_Bool)0;
          
#line 386 
          if ((int)__cond_58 != 0) 
#line 386 
                                   __compiletime_assert_386(); else ;
        }
        
#line 386 
        struct rt2x00_field32 __constr_expr_202 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 386 
        tmp_58 = __constr_expr_202;
      }
      
#line 386 
      reg = ((unsigned int)((int)erp->difs << tmp_57.bit_offset) & tmp_58.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_59;
      struct rt2x00_field32 tmp_60;
      struct rt2x00_field32 tmp_61;
      {
        struct rt2x00_field32 __dummy_19;
        struct rt2x00_field32 __dummy2_19;
        
      }
      {
        {
          
#line 387 
          bool __cond_59 = (_Bool)0;
          
#line 387 
          if ((int)__cond_59 != 0) 
#line 387 
                                   __compiletime_assert_387(); else ;
        }
        
#line 387 
        struct rt2x00_field32 __constr_expr_203 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 387 
        tmp_59 = __constr_expr_203;
      }
      
#line 387 
      reg = ~ tmp_59.bit_mask & reg;
      {
        {
          
#line 387 
          bool __cond_60 = (_Bool)0;
          
#line 387 
          if ((int)__cond_60 != 0) 
#line 387 
                                   __compiletime_assert_387(); else ;
        }
        
#line 387 
        struct rt2x00_field32 __constr_expr_204 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 387 
        tmp_60 = __constr_expr_204;
      }
      {
        {
          
#line 387 
          bool __cond_61 = (_Bool)0;
          
#line 387 
          if ((int)__cond_61 != 0) 
#line 387 
                                   __compiletime_assert_387(); else ;
        }
        
#line 387 
        struct rt2x00_field32 __constr_expr_205 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 387 
        tmp_61 = __constr_expr_205;
      }
      
#line 387 
      reg = ((unsigned int)((int)erp->eifs << tmp_60.bit_offset) & tmp_61.bit_mask) | reg;
    }
    
#line 388 
    rt2x00mmio_register_write(rt2x00dev,76U,reg);
  }
  else ;
  
#line 391 
  if ((changed & 64U) != 0U) {
    
#line 392 
    rt2x00mmio_register_read(rt2x00dev,48U,& reg);
    {
      struct rt2x00_field32 tmp_62;
      struct rt2x00_field32 tmp_63;
      struct rt2x00_field32 tmp_64;
      {
        struct rt2x00_field32 __dummy_20;
        struct rt2x00_field32 __dummy2_20;
        
      }
      {
        {
          
#line 393 
          bool __cond_62 = (_Bool)0;
          
#line 393 
          if ((int)__cond_62 != 0) 
#line 393 
                                   __compiletime_assert_394(); else ;
        }
        
#line 393 
        struct rt2x00_field32 __constr_expr_206 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 393 
        tmp_62 = __constr_expr_206;
      }
      
#line 393 
      reg = ~ tmp_62.bit_mask & reg;
      {
        {
          
#line 393 
          bool __cond_63 = (_Bool)0;
          
#line 393 
          if ((int)__cond_63 != 0) 
#line 393 
                                   __compiletime_assert_394(); else ;
        }
        
#line 393 
        struct rt2x00_field32 __constr_expr_207 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 393 
        tmp_63 = __constr_expr_207;
      }
      {
        {
          
#line 393 
          bool __cond_64 = (_Bool)0;
          
#line 393 
          if ((int)__cond_64 != 0) 
#line 393 
                                   __compiletime_assert_394(); else ;
        }
        
#line 393 
        struct rt2x00_field32 __constr_expr_208 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 393 
        tmp_64 = __constr_expr_208;
      }
      
#line 393 
      reg = ((unsigned int)((int)erp->beacon_int * 16 << tmp_63.bit_offset) & tmp_64.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_65;
      struct rt2x00_field32 tmp_66;
      struct rt2x00_field32 tmp_67;
      {
        struct rt2x00_field32 __dummy_21;
        struct rt2x00_field32 __dummy2_21;
        
      }
      {
        {
          
#line 395 
          bool __cond_65 = (_Bool)0;
          
#line 395 
          if ((int)__cond_65 != 0) 
#line 395 
                                   __compiletime_assert_396(); else ;
        }
        
#line 395 
        struct rt2x00_field32 __constr_expr_209 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 395 
        tmp_65 = __constr_expr_209;
      }
      
#line 395 
      reg = ~ tmp_65.bit_mask & reg;
      {
        {
          
#line 395 
          bool __cond_66 = (_Bool)0;
          
#line 395 
          if ((int)__cond_66 != 0) 
#line 395 
                                   __compiletime_assert_396(); else ;
        }
        
#line 395 
        struct rt2x00_field32 __constr_expr_210 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 395 
        tmp_66 = __constr_expr_210;
      }
      {
        {
          
#line 395 
          bool __cond_67 = (_Bool)0;
          
#line 395 
          if ((int)__cond_67 != 0) 
#line 395 
                                   __compiletime_assert_396(); else ;
        }
        
#line 395 
        struct rt2x00_field32 __constr_expr_211 = {.bit_offset = 16U, .bit_mask = 4294901760U};
        
#line 395 
        tmp_67 = __constr_expr_211;
      }
      
#line 395 
      reg = ((unsigned int)((int)erp->beacon_int * 16 << tmp_66.bit_offset) & tmp_67.bit_mask) | reg;
    }
    
#line 397 
    rt2x00mmio_register_write(rt2x00dev,48U,reg);
  }
  else ;
  
#line 399 
  return;
}


#line 425 
void __compiletime_assert_425(void);


#line 426 
void __compiletime_assert_426(void);


#line 427 
void __compiletime_assert_427(void);


#line 431 
void __compiletime_assert_431(void);


#line 432 
void __compiletime_assert_432(void);


#line 433 
void __compiletime_assert_433(void);


#line 442 
void __compiletime_assert_442(void);


#line 446 
void __compiletime_assert_446(void);


#line 454 
void __compiletime_assert_454(void);


#line 455 
void __compiletime_assert_455(void);


#line 456 
void __compiletime_assert_456(void);


#line 462 
void __compiletime_assert_462(void);


#line 464 
void __compiletime_assert_464(void);


#line 465 
void __compiletime_assert_465(void);


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_config_ant(struct rt2x00_dev *rt2x00dev, struct antenna_setup *ant)
{
  u32 reg;
  u8 r14;
  u8 r2;
  bool tmp_42;
  
#line 413 
  if ((long)(ant->rx == (unsigned int)ANTENNA_SW_DIVERSITY) != 0L || (long)(ant->tx == (unsigned int)ANTENNA_SW_DIVERSITY) != 0L) {
    
#line 415 
    ldv_inline_asm();
    
#line 413 
    ;
  }
  else ;
  
#line 416 
  rt2x00mmio_register_read(rt2x00dev,348U,& reg);
  
#line 417 
  rt2500pci_bbp_read(rt2x00dev,14U,& r14);
  
#line 418 
  rt2500pci_bbp_read(rt2x00dev,2U,& r2);
  
#line 423 
  switch ((unsigned int)ant->tx) {
    case (unsigned int)1: 
#line 424 
    ;
    {
      struct rt2x00_field8 tmp;
      struct rt2x00_field8 tmp_0;
      struct rt2x00_field8 tmp_1;
      {
        struct rt2x00_field8 __dummy;
        struct rt2x00_field8 __dummy2;
        
      }
      {
        {
          
#line 425 
          bool __cond = (_Bool)0;
          
#line 425 
          if ((int)__cond != 0) 
#line 425 
                                __compiletime_assert_425(); else ;
        }
        
#line 425 
        struct rt2x00_field8 __constr_expr_212 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 425 
        tmp = __constr_expr_212;
      }
      
#line 425 
      r2 = (unsigned char)(~ ((int)tmp.bit_mask) & (int)r2);
      {
        {
          
#line 425 
          bool __cond_0 = (_Bool)0;
          
#line 425 
          if ((int)__cond_0 != 0) 
#line 425 
                                  __compiletime_assert_425(); else ;
        }
        
#line 425 
        struct rt2x00_field8 __constr_expr_213 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 425 
        tmp_0 = __constr_expr_213;
      }
      {
        {
          
#line 425 
          bool __cond_1 = (_Bool)0;
          
#line 425 
          if ((int)__cond_1 != 0) 
#line 425 
                                  __compiletime_assert_425(); else ;
        }
        
#line 425 
        struct rt2x00_field8 __constr_expr_214 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 425 
        tmp_1 = __constr_expr_214;
      }
      
#line 425 
      r2 = (unsigned char)(0 | (int)r2);
    }
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 426 
          bool __cond_2 = (_Bool)0;
          
#line 426 
          if ((int)__cond_2 != 0) 
#line 426 
                                  __compiletime_assert_426(); else ;
        }
        
#line 426 
        struct rt2x00_field32 __constr_expr_215 = {.bit_offset = 0U, .bit_mask = 3U};
        
#line 426 
        tmp_2 = __constr_expr_215;
      }
      
#line 426 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 426 
          bool __cond_3 = (_Bool)0;
          
#line 426 
          if ((int)__cond_3 != 0) 
#line 426 
                                  __compiletime_assert_426(); else ;
        }
        
#line 426 
        struct rt2x00_field32 __constr_expr_216 = {.bit_offset = 0U, .bit_mask = 3U};
        
#line 426 
        tmp_3 = __constr_expr_216;
      }
      {
        {
          
#line 426 
          bool __cond_4 = (_Bool)0;
          
#line 426 
          if ((int)__cond_4 != 0) 
#line 426 
                                  __compiletime_assert_426(); else ;
        }
        
#line 426 
        struct rt2x00_field32 __constr_expr_217 = {.bit_offset = 0U, .bit_mask = 3U};
        
#line 426 
        tmp_4 = __constr_expr_217;
      }
      
#line 426 
      reg = 0U | reg;
    }
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 427 
          bool __cond_5 = (_Bool)0;
          
#line 427 
          if ((int)__cond_5 != 0) 
#line 427 
                                  __compiletime_assert_427(); else ;
        }
        
#line 427 
        struct rt2x00_field32 __constr_expr_218 = {.bit_offset = 16U, .bit_mask = 196608U};
        
#line 427 
        tmp_5 = __constr_expr_218;
      }
      
#line 427 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 427 
          bool __cond_6 = (_Bool)0;
          
#line 427 
          if ((int)__cond_6 != 0) 
#line 427 
                                  __compiletime_assert_427(); else ;
        }
        
#line 427 
        struct rt2x00_field32 __constr_expr_219 = {.bit_offset = 16U, .bit_mask = 196608U};
        
#line 427 
        tmp_6 = __constr_expr_219;
      }
      {
        {
          
#line 427 
          bool __cond_7 = (_Bool)0;
          
#line 427 
          if ((int)__cond_7 != 0) 
#line 427 
                                  __compiletime_assert_427(); else ;
        }
        
#line 427 
        struct rt2x00_field32 __constr_expr_220 = {.bit_offset = 16U, .bit_mask = 196608U};
        
#line 427 
        tmp_7 = __constr_expr_220;
      }
      
#line 427 
      reg = 0U | reg;
    }
    
#line 428 
    goto ldv_55413;
    case (unsigned int)2: 
#line 429 
    ;
    default: 
#line 430 
    ;
    {
      struct rt2x00_field8 tmp_8;
      struct rt2x00_field8 tmp_9;
      struct rt2x00_field8 tmp_10;
      {
        struct rt2x00_field8 __dummy_2;
        struct rt2x00_field8 __dummy2_2;
        
      }
      {
        {
          
#line 431 
          bool __cond_8 = (_Bool)0;
          
#line 431 
          if ((int)__cond_8 != 0) 
#line 431 
                                  __compiletime_assert_431(); else ;
        }
        
#line 431 
        struct rt2x00_field8 __constr_expr_221 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 431 
        tmp_8 = __constr_expr_221;
      }
      
#line 431 
      r2 = (unsigned char)(~ ((int)tmp_8.bit_mask) & (int)r2);
      {
        {
          
#line 431 
          bool __cond_9 = (_Bool)0;
          
#line 431 
          if ((int)__cond_9 != 0) 
#line 431 
                                  __compiletime_assert_431(); else ;
        }
        
#line 431 
        struct rt2x00_field8 __constr_expr_222 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 431 
        tmp_9 = __constr_expr_222;
      }
      {
        {
          
#line 431 
          bool __cond_10 = (_Bool)0;
          
#line 431 
          if ((int)__cond_10 != 0) 
#line 431 
                                   __compiletime_assert_431(); else ;
        }
        
#line 431 
        struct rt2x00_field8 __constr_expr_223 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 431 
        tmp_10 = __constr_expr_223;
      }
      
#line 431 
      r2 = (unsigned char)(((2 << (int)tmp_9.bit_offset) & (int)tmp_10.bit_mask) | (int)r2);
    }
    {
      struct rt2x00_field32 tmp_11;
      struct rt2x00_field32 tmp_12;
      struct rt2x00_field32 tmp_13;
      {
        struct rt2x00_field32 __dummy_3;
        struct rt2x00_field32 __dummy2_3;
        
      }
      {
        {
          
#line 432 
          bool __cond_11 = (_Bool)0;
          
#line 432 
          if ((int)__cond_11 != 0) 
#line 432 
                                   __compiletime_assert_432(); else ;
        }
        
#line 432 
        struct rt2x00_field32 __constr_expr_224 = {.bit_offset = 0U, .bit_mask = 3U};
        
#line 432 
        tmp_11 = __constr_expr_224;
      }
      
#line 432 
      reg = ~ tmp_11.bit_mask & reg;
      {
        {
          
#line 432 
          bool __cond_12 = (_Bool)0;
          
#line 432 
          if ((int)__cond_12 != 0) 
#line 432 
                                   __compiletime_assert_432(); else ;
        }
        
#line 432 
        struct rt2x00_field32 __constr_expr_225 = {.bit_offset = 0U, .bit_mask = 3U};
        
#line 432 
        tmp_12 = __constr_expr_225;
      }
      {
        {
          
#line 432 
          bool __cond_13 = (_Bool)0;
          
#line 432 
          if ((int)__cond_13 != 0) 
#line 432 
                                   __compiletime_assert_432(); else ;
        }
        
#line 432 
        struct rt2x00_field32 __constr_expr_226 = {.bit_offset = 0U, .bit_mask = 3U};
        
#line 432 
        tmp_13 = __constr_expr_226;
      }
      
#line 432 
      reg = ((unsigned int)(2 << tmp_12.bit_offset) & tmp_13.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_14;
      struct rt2x00_field32 tmp_15;
      struct rt2x00_field32 tmp_16;
      {
        struct rt2x00_field32 __dummy_4;
        struct rt2x00_field32 __dummy2_4;
        
      }
      {
        {
          
#line 433 
          bool __cond_14 = (_Bool)0;
          
#line 433 
          if ((int)__cond_14 != 0) 
#line 433 
                                   __compiletime_assert_433(); else ;
        }
        
#line 433 
        struct rt2x00_field32 __constr_expr_227 = {.bit_offset = 16U, .bit_mask = 196608U};
        
#line 433 
        tmp_14 = __constr_expr_227;
      }
      
#line 433 
      reg = ~ tmp_14.bit_mask & reg;
      {
        {
          
#line 433 
          bool __cond_15 = (_Bool)0;
          
#line 433 
          if ((int)__cond_15 != 0) 
#line 433 
                                   __compiletime_assert_433(); else ;
        }
        
#line 433 
        struct rt2x00_field32 __constr_expr_228 = {.bit_offset = 16U, .bit_mask = 196608U};
        
#line 433 
        tmp_15 = __constr_expr_228;
      }
      {
        {
          
#line 433 
          bool __cond_16 = (_Bool)0;
          
#line 433 
          if ((int)__cond_16 != 0) 
#line 433 
                                   __compiletime_assert_433(); else ;
        }
        
#line 433 
        struct rt2x00_field32 __constr_expr_229 = {.bit_offset = 16U, .bit_mask = 196608U};
        
#line 433 
        tmp_16 = __constr_expr_229;
      }
      
#line 433 
      reg = ((unsigned int)(2 << tmp_15.bit_offset) & tmp_16.bit_mask) | reg;
    }
    
#line 434 
    goto ldv_55413;
  }
  ldv_55413: 
#line 440 
  ;
  
#line 440 
  switch ((unsigned int)ant->rx) {
    case (unsigned int)1: 
#line 441 
    ;
    {
      struct rt2x00_field8 tmp_17;
      struct rt2x00_field8 tmp_18;
      struct rt2x00_field8 tmp_19;
      {
        struct rt2x00_field8 __dummy_5;
        struct rt2x00_field8 __dummy2_5;
        
      }
      {
        {
          
#line 442 
          bool __cond_17 = (_Bool)0;
          
#line 442 
          if ((int)__cond_17 != 0) 
#line 442 
                                   __compiletime_assert_442(); else ;
        }
        
#line 442 
        struct rt2x00_field8 __constr_expr_230 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 442 
        tmp_17 = __constr_expr_230;
      }
      
#line 442 
      r14 = (unsigned char)(~ ((int)tmp_17.bit_mask) & (int)r14);
      {
        {
          
#line 442 
          bool __cond_18 = (_Bool)0;
          
#line 442 
          if ((int)__cond_18 != 0) 
#line 442 
                                   __compiletime_assert_442(); else ;
        }
        
#line 442 
        struct rt2x00_field8 __constr_expr_231 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 442 
        tmp_18 = __constr_expr_231;
      }
      {
        {
          
#line 442 
          bool __cond_19 = (_Bool)0;
          
#line 442 
          if ((int)__cond_19 != 0) 
#line 442 
                                   __compiletime_assert_442(); else ;
        }
        
#line 442 
        struct rt2x00_field8 __constr_expr_232 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 442 
        tmp_19 = __constr_expr_232;
      }
      
#line 442 
      r14 = (unsigned char)(0 | (int)r14);
    }
    
#line 443 
    goto ldv_55529;
    case (unsigned int)2: 
#line 444 
    ;
    default: 
#line 445 
    ;
    {
      struct rt2x00_field8 tmp_20;
      struct rt2x00_field8 tmp_21;
      struct rt2x00_field8 tmp_22;
      {
        struct rt2x00_field8 __dummy_6;
        struct rt2x00_field8 __dummy2_6;
        
      }
      {
        {
          
#line 446 
          bool __cond_20 = (_Bool)0;
          
#line 446 
          if ((int)__cond_20 != 0) 
#line 446 
                                   __compiletime_assert_446(); else ;
        }
        
#line 446 
        struct rt2x00_field8 __constr_expr_233 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 446 
        tmp_20 = __constr_expr_233;
      }
      
#line 446 
      r14 = (unsigned char)(~ ((int)tmp_20.bit_mask) & (int)r14);
      {
        {
          
#line 446 
          bool __cond_21 = (_Bool)0;
          
#line 446 
          if ((int)__cond_21 != 0) 
#line 446 
                                   __compiletime_assert_446(); else ;
        }
        
#line 446 
        struct rt2x00_field8 __constr_expr_234 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 446 
        tmp_21 = __constr_expr_234;
      }
      {
        {
          
#line 446 
          bool __cond_22 = (_Bool)0;
          
#line 446 
          if ((int)__cond_22 != 0) 
#line 446 
                                   __compiletime_assert_446(); else ;
        }
        
#line 446 
        struct rt2x00_field8 __constr_expr_235 = {.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
        
#line 446 
        tmp_22 = __constr_expr_235;
      }
      
#line 446 
      r14 = (unsigned char)(((2 << (int)tmp_21.bit_offset) & (int)tmp_22.bit_mask) | (int)r14);
    }
    
#line 447 
    goto ldv_55529;
  }
  ldv_55529: 
#line 453 
  ;
  
#line 453 
  tmp_42 = rt2x00_rf(rt2x00dev,(unsigned short)4);
  
#line 453 
  if ((int)tmp_42 != 0) 
#line 453 
                        goto _LOR;
  else {
    bool tmp_43;
    
#line 453 
    tmp_43 = rt2x00_rf(rt2x00dev,(unsigned short)16);
    
#line 453 
    if ((int)tmp_43 != 0) {
      _LOR: {
              bool tmp_35;
              {
                struct rt2x00_field8 tmp_23;
                struct rt2x00_field8 tmp_24;
                struct rt2x00_field8 tmp_25;
                {
                  struct rt2x00_field8 __dummy_7;
                  struct rt2x00_field8 __dummy2_7;
                  
                }
                {
                  {
                    
#line 454 
                    bool __cond_23 = (_Bool)0;
                    
#line 454 
                    if ((int)__cond_23 != 0) 
#line 454 
                                             __compiletime_assert_454(); else ;
                  }
                  
#line 454 
                  struct rt2x00_field8 __constr_expr_236 = {.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                  
#line 454 
                  tmp_23 = __constr_expr_236;
                }
                
#line 454 
                r2 = (unsigned char)(~ ((int)tmp_23.bit_mask) & (int)r2);
                {
                  {
                    
#line 454 
                    bool __cond_24 = (_Bool)0;
                    
#line 454 
                    if ((int)__cond_24 != 0) 
#line 454 
                                             __compiletime_assert_454(); else ;
                  }
                  
#line 454 
                  struct rt2x00_field8 __constr_expr_237 = {.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                  
#line 454 
                  tmp_24 = __constr_expr_237;
                }
                {
                  {
                    
#line 454 
                    bool __cond_25 = (_Bool)0;
                    
#line 454 
                    if ((int)__cond_25 != 0) 
#line 454 
                                             __compiletime_assert_454(); else ;
                  }
                  
#line 454 
                  struct rt2x00_field8 __constr_expr_238 = {.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                  
#line 454 
                  tmp_25 = __constr_expr_238;
                }
                
#line 454 
                r2 = (unsigned char)(((1 << (int)tmp_24.bit_offset) & (int)tmp_25.bit_mask) | (int)r2);
              }
              {
                struct rt2x00_field32 tmp_26;
                struct rt2x00_field32 tmp_27;
                struct rt2x00_field32 tmp_28;
                {
                  struct rt2x00_field32 __dummy_8;
                  struct rt2x00_field32 __dummy2_8;
                  
                }
                {
                  {
                    
#line 455 
                    bool __cond_26 = (_Bool)0;
                    
#line 455 
                    if ((int)__cond_26 != 0) 
#line 455 
                                             __compiletime_assert_455(); else ;
                  }
                  
#line 455 
                  struct rt2x00_field32 __constr_expr_239 = {.bit_offset = 2U, .bit_mask = 4U};
                  
#line 455 
                  tmp_26 = __constr_expr_239;
                }
                
#line 455 
                reg = ~ tmp_26.bit_mask & reg;
                {
                  {
                    
#line 455 
                    bool __cond_27 = (_Bool)0;
                    
#line 455 
                    if ((int)__cond_27 != 0) 
#line 455 
                                             __compiletime_assert_455(); else ;
                  }
                  
#line 455 
                  struct rt2x00_field32 __constr_expr_240 = {.bit_offset = 2U, .bit_mask = 4U};
                  
#line 455 
                  tmp_27 = __constr_expr_240;
                }
                {
                  {
                    
#line 455 
                    bool __cond_28 = (_Bool)0;
                    
#line 455 
                    if ((int)__cond_28 != 0) 
#line 455 
                                             __compiletime_assert_455(); else ;
                  }
                  
#line 455 
                  struct rt2x00_field32 __constr_expr_241 = {.bit_offset = 2U, .bit_mask = 4U};
                  
#line 455 
                  tmp_28 = __constr_expr_241;
                }
                
#line 455 
                reg = ((unsigned int)(1 << tmp_27.bit_offset) & tmp_28.bit_mask) | reg;
              }
              {
                struct rt2x00_field32 tmp_29;
                struct rt2x00_field32 tmp_30;
                struct rt2x00_field32 tmp_31;
                {
                  struct rt2x00_field32 __dummy_9;
                  struct rt2x00_field32 __dummy2_9;
                  
                }
                {
                  {
                    
#line 456 
                    bool __cond_29 = (_Bool)0;
                    
#line 456 
                    if ((int)__cond_29 != 0) 
#line 456 
                                             __compiletime_assert_456(); else ;
                  }
                  
#line 456 
                  struct rt2x00_field32 __constr_expr_242 = {.bit_offset = 18U, .bit_mask = 262144U};
                  
#line 456 
                  tmp_29 = __constr_expr_242;
                }
                
#line 456 
                reg = ~ tmp_29.bit_mask & reg;
                {
                  {
                    
#line 456 
                    bool __cond_30 = (_Bool)0;
                    
#line 456 
                    if ((int)__cond_30 != 0) 
#line 456 
                                             __compiletime_assert_456(); else ;
                  }
                  
#line 456 
                  struct rt2x00_field32 __constr_expr_243 = {.bit_offset = 18U, .bit_mask = 262144U};
                  
#line 456 
                  tmp_30 = __constr_expr_243;
                }
                {
                  {
                    
#line 456 
                    bool __cond_31 = (_Bool)0;
                    
#line 456 
                    if ((int)__cond_31 != 0) 
#line 456 
                                             __compiletime_assert_456(); else ;
                  }
                  
#line 456 
                  struct rt2x00_field32 __constr_expr_244 = {.bit_offset = 18U, .bit_mask = 262144U};
                  
#line 456 
                  tmp_31 = __constr_expr_244;
                }
                
#line 456 
                reg = ((unsigned int)(1 << tmp_30.bit_offset) & tmp_31.bit_mask) | reg;
              }
              
#line 461 
              tmp_35 = rt2x00_rf(rt2x00dev,(unsigned short)4);
              
#line 461 
              if ((int)tmp_35 != 0) {
                struct rt2x00_field8 tmp_32;
                struct rt2x00_field8 tmp_33;
                struct rt2x00_field8 tmp_34;
                {
                  struct rt2x00_field8 __dummy_10;
                  struct rt2x00_field8 __dummy2_10;
                  
                }
                {
                  {
                    
#line 462 
                    bool __cond_32 = (_Bool)0;
                    
#line 462 
                    if ((int)__cond_32 != 0) 
#line 462 
                                             __compiletime_assert_462(); else ;
                  }
                  
#line 462 
                  struct rt2x00_field8 __constr_expr_245 = {.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                  
#line 462 
                  tmp_32 = __constr_expr_245;
                }
                
#line 462 
                r14 = (unsigned char)(~ ((int)tmp_32.bit_mask) & (int)r14);
                {
                  {
                    
#line 462 
                    bool __cond_33 = (_Bool)0;
                    
#line 462 
                    if ((int)__cond_33 != 0) 
#line 462 
                                             __compiletime_assert_462(); else ;
                  }
                  
#line 462 
                  struct rt2x00_field8 __constr_expr_246 = {.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                  
#line 462 
                  tmp_33 = __constr_expr_246;
                }
                {
                  {
                    
#line 462 
                    bool __cond_34 = (_Bool)0;
                    
#line 462 
                    if ((int)__cond_34 != 0) 
#line 462 
                                             __compiletime_assert_462(); else ;
                  }
                  
#line 462 
                  struct rt2x00_field8 __constr_expr_247 = {.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                  
#line 462 
                  tmp_34 = __constr_expr_247;
                }
                
#line 462 
                r14 = (unsigned char)(0 | (int)r14);
              }
              else ;
            }
    }
    else {
      {
        struct rt2x00_field32 tmp_36;
        struct rt2x00_field32 tmp_37;
        struct rt2x00_field32 tmp_38;
        {
          struct rt2x00_field32 __dummy_11;
          struct rt2x00_field32 __dummy2_11;
          
        }
        {
          {
            
#line 464 
            bool __cond_35 = (_Bool)0;
            
#line 464 
            if ((int)__cond_35 != 0) 
#line 464 
                                     __compiletime_assert_464(); else ;
          }
          
#line 464 
          struct rt2x00_field32 __constr_expr_248 = {.bit_offset = 2U, .bit_mask = 4U};
          
#line 464 
          tmp_36 = __constr_expr_248;
        }
        
#line 464 
        reg = ~ tmp_36.bit_mask & reg;
        {
          {
            
#line 464 
            bool __cond_36 = (_Bool)0;
            
#line 464 
            if ((int)__cond_36 != 0) 
#line 464 
                                     __compiletime_assert_464(); else ;
          }
          
#line 464 
          struct rt2x00_field32 __constr_expr_249 = {.bit_offset = 2U, .bit_mask = 4U};
          
#line 464 
          tmp_37 = __constr_expr_249;
        }
        {
          {
            
#line 464 
            bool __cond_37 = (_Bool)0;
            
#line 464 
            if ((int)__cond_37 != 0) 
#line 464 
                                     __compiletime_assert_464(); else ;
          }
          
#line 464 
          struct rt2x00_field32 __constr_expr_250 = {.bit_offset = 2U, .bit_mask = 4U};
          
#line 464 
          tmp_38 = __constr_expr_250;
        }
        
#line 464 
        reg = 0U | reg;
      }
      {
        struct rt2x00_field32 tmp_39;
        struct rt2x00_field32 tmp_40;
        struct rt2x00_field32 tmp_41;
        {
          struct rt2x00_field32 __dummy_12;
          struct rt2x00_field32 __dummy2_12;
          
        }
        {
          {
            
#line 465 
            bool __cond_38 = (_Bool)0;
            
#line 465 
            if ((int)__cond_38 != 0) 
#line 465 
                                     __compiletime_assert_465(); else ;
          }
          
#line 465 
          struct rt2x00_field32 __constr_expr_251 = {.bit_offset = 18U, .bit_mask = 262144U};
          
#line 465 
          tmp_39 = __constr_expr_251;
        }
        
#line 465 
        reg = ~ tmp_39.bit_mask & reg;
        {
          {
            
#line 465 
            bool __cond_39 = (_Bool)0;
            
#line 465 
            if ((int)__cond_39 != 0) 
#line 465 
                                     __compiletime_assert_465(); else ;
          }
          
#line 465 
          struct rt2x00_field32 __constr_expr_252 = {.bit_offset = 18U, .bit_mask = 262144U};
          
#line 465 
          tmp_40 = __constr_expr_252;
        }
        {
          {
            
#line 465 
            bool __cond_40 = (_Bool)0;
            
#line 465 
            if ((int)__cond_40 != 0) 
#line 465 
                                     __compiletime_assert_465(); else ;
          }
          
#line 465 
          struct rt2x00_field32 __constr_expr_253 = {.bit_offset = 18U, .bit_mask = 262144U};
          
#line 465 
          tmp_41 = __constr_expr_253;
        }
        
#line 465 
        reg = 0U | reg;
      }
    }
  }
  
#line 468 
  rt2x00mmio_register_write(rt2x00dev,348U,reg);
  
#line 469 
  rt2500pci_bbp_write(rt2x00dev,14U,(unsigned char)((int)r14));
  
#line 470 
  rt2500pci_bbp_write(rt2x00dev,2U,(unsigned char)((int)r2));
  
#line 471 
  return;
}


#line 481 
void __compiletime_assert_481(void);


#line 488 
void __compiletime_assert_488(void);


#line 489 
void __compiletime_assert_489(void);


#line 519 
void __compiletime_assert_519(void);


#line 529 
void __compiletime_assert_529(void);


#line 533 
void __compiletime_assert_533(void);


#line 473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_config_channel(struct rt2x00_dev *rt2x00dev, struct rf_channel *rf, int const txpower)
{
  u8 r70;
  int tmp_10;
  bool tmp_9;
  bool tmp_14;
  int tmp_22;
  bool tmp_21;
  {
    struct rt2x00_field32 tmp;
    int tmp_3;
    struct rt2x00_field32 tmp_4;
    struct rt2x00_field32 tmp_5;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 481 
        bool __cond = (_Bool)0;
        
#line 481 
        if ((int)__cond != 0) 
#line 481 
                              __compiletime_assert_481(); else ;
      }
      
#line 481 
      struct rt2x00_field32 __constr_expr_254 = {.bit_offset = 9U, .bit_mask = 15872U};
      
#line 481 
      tmp = __constr_expr_254;
    }
    
#line 481 
    rf->rf3 &= ~ tmp.bit_mask;
    {
      int tmp_1;
      int tmp_2;
      {
        int tmp_0;
        
#line 481 
        char __max1 = (char)txpower;
        
#line 481 
        char __max2 = (char)0;
        
#line 481 
        if ((int)__max1 > (int)__max2) 
#line 481 
                                       tmp_0 = (int)__max1; else 
#line 481 
                                                                 tmp_0 = (int)__max2;
        
#line 481 
        tmp_1 = tmp_0;
      }
      
#line 481 
      char __min1 = (char)tmp_1;
      
#line 481 
      char __min2 = (char)31;
      
#line 481 
      if ((int)__min1 < (int)__min2) 
#line 481 
                                     tmp_2 = (int)__min1; else 
#line 481 
                                                               tmp_2 = (int)__min2;
      
#line 481 
      tmp_3 = tmp_2;
    }
    {
      {
        
#line 481 
        bool __cond_0 = (_Bool)0;
        
#line 481 
        if ((int)__cond_0 != 0) 
#line 481 
                                __compiletime_assert_481(); else ;
      }
      
#line 481 
      struct rt2x00_field32 __constr_expr_255 = {.bit_offset = 9U, .bit_mask = 15872U};
      
#line 481 
      tmp_4 = __constr_expr_255;
    }
    {
      {
        
#line 481 
        bool __cond_1 = (_Bool)0;
        
#line 481 
        if ((int)__cond_1 != 0) 
#line 481 
                                __compiletime_assert_481(); else ;
      }
      
#line 481 
      struct rt2x00_field32 __constr_expr_256 = {.bit_offset = 9U, .bit_mask = 15872U};
      
#line 481 
      tmp_5 = __constr_expr_256;
    }
    
#line 481 
    rf->rf3 |= (unsigned int)(tmp_3 << tmp_4.bit_offset) & tmp_5.bit_mask;
  }
  
#line 487 
  tmp_9 = rt2x00_rf(rt2x00dev,(unsigned short)1);
  
#line 487 
  if (tmp_9) 
#line 487 
             tmp_10 = 0; else 
#line 487 
                              tmp_10 = 1;
  
#line 487 
  if (tmp_10) {
    struct rt2x00_field32 tmp_6;
    struct rt2x00_field32 tmp_7;
    struct rt2x00_field32 tmp_8;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 488 
        bool __cond_2 = (_Bool)0;
        
#line 488 
        if ((int)__cond_2 != 0) 
#line 488 
                                __compiletime_assert_488(); else ;
      }
      
#line 488 
      struct rt2x00_field32 __constr_expr_257 = {.bit_offset = 17U, .bit_mask = 131072U};
      
#line 488 
      tmp_6 = __constr_expr_257;
    }
    
#line 488 
    rf->rf1 &= ~ tmp_6.bit_mask;
    {
      {
        
#line 488 
        bool __cond_3 = (_Bool)0;
        
#line 488 
        if ((int)__cond_3 != 0) 
#line 488 
                                __compiletime_assert_488(); else ;
      }
      
#line 488 
      struct rt2x00_field32 __constr_expr_258 = {.bit_offset = 17U, .bit_mask = 131072U};
      
#line 488 
      tmp_7 = __constr_expr_258;
    }
    {
      {
        
#line 488 
        bool __cond_4 = (_Bool)0;
        
#line 488 
        if ((int)__cond_4 != 0) 
#line 488 
                                __compiletime_assert_488(); else ;
      }
      
#line 488 
      struct rt2x00_field32 __constr_expr_259 = {.bit_offset = 17U, .bit_mask = 131072U};
      
#line 488 
      tmp_8 = __constr_expr_259;
    }
    
#line 488 
    rf->rf1 |= (unsigned int)(1 << tmp_7.bit_offset) & tmp_8.bit_mask;
  }
  else ;
  {
    struct rt2x00_field32 tmp_11;
    struct rt2x00_field32 tmp_12;
    struct rt2x00_field32 tmp_13;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 489 
        bool __cond_5 = (_Bool)0;
        
#line 489 
        if ((int)__cond_5 != 0) 
#line 489 
                                __compiletime_assert_489(); else ;
      }
      
#line 489 
      struct rt2x00_field32 __constr_expr_260 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 489 
      tmp_11 = __constr_expr_260;
    }
    
#line 489 
    rf->rf3 &= ~ tmp_11.bit_mask;
    {
      {
        
#line 489 
        bool __cond_6 = (_Bool)0;
        
#line 489 
        if ((int)__cond_6 != 0) 
#line 489 
                                __compiletime_assert_489(); else ;
      }
      
#line 489 
      struct rt2x00_field32 __constr_expr_261 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 489 
      tmp_12 = __constr_expr_261;
    }
    {
      {
        
#line 489 
        bool __cond_7 = (_Bool)0;
        
#line 489 
        if ((int)__cond_7 != 0) 
#line 489 
                                __compiletime_assert_489(); else ;
      }
      
#line 489 
      struct rt2x00_field32 __constr_expr_262 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 489 
      tmp_13 = __constr_expr_262;
    }
    
#line 489 
    rf->rf3 |= (unsigned int)(1 << tmp_12.bit_offset) & tmp_13.bit_mask;
  }
  
#line 494 
  tmp_14 = rt2x00_rf(rt2x00dev,(unsigned short)3);
  
#line 494 
  if ((int)tmp_14 != 0) {
    
#line 495 
    u32 const vals[14U] = {527550U, 527618U, 527622U, 527626U, 527630U, 527634U, 527638U, 527642U, 527646U, 527650U, 527654U, 527658U, 527662U, 527674U};
    
#line 502 
    rt2500pci_rf_write(rt2x00dev,1U,rf->rf1);
    
#line 503 
    rt2500pci_rf_write(rt2x00dev,2U,vals[rf->channel + -1]);
    
#line 504 
    rt2500pci_rf_write(rt2x00dev,3U,rf->rf3);
    
#line 505 
    if (rf->rf4 != 0U) 
#line 506 
                       rt2500pci_rf_write(rt2x00dev,4U,rf->rf4); else ;
  }
  else ;
  
#line 509 
  rt2500pci_rf_write(rt2x00dev,1U,rf->rf1);
  
#line 510 
  rt2500pci_rf_write(rt2x00dev,2U,rf->rf2);
  
#line 511 
  rt2500pci_rf_write(rt2x00dev,3U,rf->rf3);
  
#line 512 
  if (rf->rf4 != 0U) 
#line 513 
                     rt2500pci_rf_write(rt2x00dev,4U,rf->rf4); else ;
  
#line 518 
  r70 = (unsigned char)70U;
  {
    struct rt2x00_field8 tmp_15;
    struct rt2x00_field8 tmp_16;
    struct rt2x00_field8 tmp_17;
    {
      struct rt2x00_field8 __dummy_2;
      struct rt2x00_field8 __dummy2_2;
      
    }
    {
      {
        
#line 519 
        bool __cond_8 = (_Bool)0;
        
#line 519 
        if ((int)__cond_8 != 0) 
#line 519 
                                __compiletime_assert_519(); else ;
      }
      
#line 519 
      struct rt2x00_field8 __constr_expr_263 = {.bit_offset = (unsigned char)3U, .bit_mask = (unsigned char)8U};
      
#line 519 
      tmp_15 = __constr_expr_263;
    }
    
#line 519 
    r70 = (unsigned char)(~ ((int)tmp_15.bit_mask) & (int)r70);
    {
      {
        
#line 519 
        bool __cond_9 = (_Bool)0;
        
#line 519 
        if ((int)__cond_9 != 0) 
#line 519 
                                __compiletime_assert_519(); else ;
      }
      
#line 519 
      struct rt2x00_field8 __constr_expr_264 = {.bit_offset = (unsigned char)3U, .bit_mask = (unsigned char)8U};
      
#line 519 
      tmp_16 = __constr_expr_264;
    }
    {
      {
        
#line 519 
        bool __cond_10 = (_Bool)0;
        
#line 519 
        if ((int)__cond_10 != 0) 
#line 519 
                                 __compiletime_assert_519(); else ;
      }
      
#line 519 
      struct rt2x00_field8 __constr_expr_265 = {.bit_offset = (unsigned char)3U, .bit_mask = (unsigned char)8U};
      
#line 519 
      tmp_17 = __constr_expr_265;
    }
    
#line 519 
    r70 = (unsigned char)((((rf->channel == 14) << (int)tmp_16.bit_offset) & (int)tmp_17.bit_mask) | (int)r70);
  }
  
#line 520 
  rt2500pci_bbp_write(rt2x00dev,70U,(unsigned char)((int)r70));
  
#line 522 
  msleep(1U);
  
#line 528 
  tmp_21 = rt2x00_rf(rt2x00dev,(unsigned short)1);
  
#line 528 
  if (tmp_21) 
#line 528 
              tmp_22 = 0; else 
#line 528 
                               tmp_22 = 1;
  
#line 528 
  if (tmp_22) {
    {
      struct rt2x00_field32 tmp_18;
      struct rt2x00_field32 tmp_19;
      struct rt2x00_field32 tmp_20;
      {
        struct rt2x00_field32 __dummy_3;
        struct rt2x00_field32 __dummy2_3;
        
      }
      {
        {
          
#line 529 
          bool __cond_11 = (_Bool)0;
          
#line 529 
          if ((int)__cond_11 != 0) 
#line 529 
                                   __compiletime_assert_529(); else ;
        }
        
#line 529 
        struct rt2x00_field32 __constr_expr_266 = {.bit_offset = 17U, .bit_mask = 131072U};
        
#line 529 
        tmp_18 = __constr_expr_266;
      }
      
#line 529 
      rf->rf1 &= ~ tmp_18.bit_mask;
      {
        {
          
#line 529 
          bool __cond_12 = (_Bool)0;
          
#line 529 
          if ((int)__cond_12 != 0) 
#line 529 
                                   __compiletime_assert_529(); else ;
        }
        
#line 529 
        struct rt2x00_field32 __constr_expr_267 = {.bit_offset = 17U, .bit_mask = 131072U};
        
#line 529 
        tmp_19 = __constr_expr_267;
      }
      {
        {
          
#line 529 
          bool __cond_13 = (_Bool)0;
          
#line 529 
          if ((int)__cond_13 != 0) 
#line 529 
                                   __compiletime_assert_529(); else ;
        }
        
#line 529 
        struct rt2x00_field32 __constr_expr_268 = {.bit_offset = 17U, .bit_mask = 131072U};
        
#line 529 
        tmp_20 = __constr_expr_268;
      }
      
#line 529 
      rf->rf1 |= 0U;
    }
    
#line 530 
    rt2500pci_rf_write(rt2x00dev,1U,rf->rf1);
  }
  else ;
  {
    struct rt2x00_field32 tmp_23;
    struct rt2x00_field32 tmp_24;
    struct rt2x00_field32 tmp_25;
    {
      struct rt2x00_field32 __dummy_4;
      struct rt2x00_field32 __dummy2_4;
      
    }
    {
      {
        
#line 533 
        bool __cond_14 = (_Bool)0;
        
#line 533 
        if ((int)__cond_14 != 0) 
#line 533 
                                 __compiletime_assert_533(); else ;
      }
      
#line 533 
      struct rt2x00_field32 __constr_expr_269 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 533 
      tmp_23 = __constr_expr_269;
    }
    
#line 533 
    rf->rf3 &= ~ tmp_23.bit_mask;
    {
      {
        
#line 533 
        bool __cond_15 = (_Bool)0;
        
#line 533 
        if ((int)__cond_15 != 0) 
#line 533 
                                 __compiletime_assert_533(); else ;
      }
      
#line 533 
      struct rt2x00_field32 __constr_expr_270 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 533 
      tmp_24 = __constr_expr_270;
    }
    {
      {
        
#line 533 
        bool __cond_16 = (_Bool)0;
        
#line 533 
        if ((int)__cond_16 != 0) 
#line 533 
                                 __compiletime_assert_533(); else ;
      }
      
#line 533 
      struct rt2x00_field32 __constr_expr_271 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 533 
      tmp_25 = __constr_expr_271;
    }
    
#line 533 
    rf->rf3 |= 0U;
  }
  
#line 534 
  rt2500pci_rf_write(rt2x00dev,3U,rf->rf3);
  
#line 539 
  rt2x00mmio_register_read(rt2x00dev,160U,& rf->rf1);
  
#line 540 
  return;
}


#line 548 
void __compiletime_assert_548(void);


#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_config_txpower(struct rt2x00_dev *rt2x00dev, int const txpower)
{
  u32 rf3;
  
#line 547 
  rt2x00_rf_read(rt2x00dev,3U,& rf3);
  {
    struct rt2x00_field32 tmp;
    int tmp_3;
    struct rt2x00_field32 tmp_4;
    struct rt2x00_field32 tmp_5;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 548 
        bool __cond = (_Bool)0;
        
#line 548 
        if ((int)__cond != 0) 
#line 548 
                              __compiletime_assert_548(); else ;
      }
      
#line 548 
      struct rt2x00_field32 __constr_expr_272 = {.bit_offset = 9U, .bit_mask = 15872U};
      
#line 548 
      tmp = __constr_expr_272;
    }
    
#line 548 
    rf3 = ~ tmp.bit_mask & rf3;
    {
      int tmp_1;
      int tmp_2;
      {
        int tmp_0;
        
#line 548 
        char __max1 = (char)txpower;
        
#line 548 
        char __max2 = (char)0;
        
#line 548 
        if ((int)__max1 > (int)__max2) 
#line 548 
                                       tmp_0 = (int)__max1; else 
#line 548 
                                                                 tmp_0 = (int)__max2;
        
#line 548 
        tmp_1 = tmp_0;
      }
      
#line 548 
      char __min1 = (char)tmp_1;
      
#line 548 
      char __min2 = (char)31;
      
#line 548 
      if ((int)__min1 < (int)__min2) 
#line 548 
                                     tmp_2 = (int)__min1; else 
#line 548 
                                                               tmp_2 = (int)__min2;
      
#line 548 
      tmp_3 = tmp_2;
    }
    {
      {
        
#line 548 
        bool __cond_0 = (_Bool)0;
        
#line 548 
        if ((int)__cond_0 != 0) 
#line 548 
                                __compiletime_assert_548(); else ;
      }
      
#line 548 
      struct rt2x00_field32 __constr_expr_273 = {.bit_offset = 9U, .bit_mask = 15872U};
      
#line 548 
      tmp_4 = __constr_expr_273;
    }
    {
      {
        
#line 548 
        bool __cond_1 = (_Bool)0;
        
#line 548 
        if ((int)__cond_1 != 0) 
#line 548 
                                __compiletime_assert_548(); else ;
      }
      
#line 548 
      struct rt2x00_field32 __constr_expr_274 = {.bit_offset = 9U, .bit_mask = 15872U};
      
#line 548 
      tmp_5 = __constr_expr_274;
    }
    
#line 548 
    rf3 = ((unsigned int)(tmp_3 << tmp_4.bit_offset) & tmp_5.bit_mask) | rf3;
  }
  
#line 549 
  rt2500pci_rf_write(rt2x00dev,3U,rf3);
  
#line 550 
  return;
}


#line 558 
void __compiletime_assert_559(void);


#line 560 
void __compiletime_assert_561(void);


#line 552  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_config_retry_limit(struct rt2x00_dev *rt2x00dev, struct rt2x00lib_conf *libconf)
{
  u32 reg;
  
#line 557 
  rt2x00mmio_register_read(rt2x00dev,44U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 558 
        bool __cond = (_Bool)0;
        
#line 558 
        if ((int)__cond != 0) 
#line 558 
                              __compiletime_assert_559(); else ;
      }
      
#line 558 
      struct rt2x00_field32 __constr_expr_275 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 558 
      tmp = __constr_expr_275;
    }
    
#line 558 
    reg = ~ tmp.bit_mask & reg;
    {
      {
        
#line 558 
        bool __cond_0 = (_Bool)0;
        
#line 558 
        if ((int)__cond_0 != 0) 
#line 558 
                                __compiletime_assert_559(); else ;
      }
      
#line 558 
      struct rt2x00_field32 __constr_expr_276 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 558 
      tmp_0 = __constr_expr_276;
    }
    {
      {
        
#line 558 
        bool __cond_1 = (_Bool)0;
        
#line 558 
        if ((int)__cond_1 != 0) 
#line 558 
                                __compiletime_assert_559(); else ;
      }
      
#line 558 
      struct rt2x00_field32 __constr_expr_277 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 558 
      tmp_1 = __constr_expr_277;
    }
    
#line 558 
    reg = ((unsigned int)((int)(libconf->conf)->long_frame_max_tx_count << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 560 
        bool __cond_2 = (_Bool)0;
        
#line 560 
        if ((int)__cond_2 != 0) 
#line 560 
                                __compiletime_assert_561(); else ;
      }
      
#line 560 
      struct rt2x00_field32 __constr_expr_278 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 560 
      tmp_2 = __constr_expr_278;
    }
    
#line 560 
    reg = ~ tmp_2.bit_mask & reg;
    {
      {
        
#line 560 
        bool __cond_3 = (_Bool)0;
        
#line 560 
        if ((int)__cond_3 != 0) 
#line 560 
                                __compiletime_assert_561(); else ;
      }
      
#line 560 
      struct rt2x00_field32 __constr_expr_279 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 560 
      tmp_3 = __constr_expr_279;
    }
    {
      {
        
#line 560 
        bool __cond_4 = (_Bool)0;
        
#line 560 
        if ((int)__cond_4 != 0) 
#line 560 
                                __compiletime_assert_561(); else ;
      }
      
#line 560 
      struct rt2x00_field32 __constr_expr_280 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 560 
      tmp_4 = __constr_expr_280;
    }
    
#line 560 
    reg = ((unsigned int)((int)(libconf->conf)->short_frame_max_tx_count << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
  }
  
#line 562 
  rt2x00mmio_register_write(rt2x00dev,44U,reg);
  
#line 563 
  return;
}


#line 575 
void __compiletime_assert_576(void);


#line 577 
void __compiletime_assert_578(void);


#line 581 
void __compiletime_assert_581(void);


#line 584 
void __compiletime_assert_584(void);


#line 588 
void __compiletime_assert_588(void);


#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_config_ps(struct rt2x00_dev *rt2x00dev, struct rt2x00lib_conf *libconf)
{
  int tmp;
  u32 reg;
  
#line 570 
  if (((libconf->conf)->flags & 2U) != 0U) 
#line 570 
                                           tmp = 1; else 
#line 570 
                                                         tmp = 3;
  
#line 568 
  enum dev_state state = (enum dev_state)tmp;
  
#line 573 
  if (state == (unsigned int)STATE_SLEEP) {
    
#line 574 
    rt2x00mmio_register_read(rt2x00dev,80U,& reg);
    {
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      struct rt2x00_field32 tmp_2;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 575 
          bool __cond = (_Bool)0;
          
#line 575 
          if ((int)__cond != 0) 
#line 575 
                                __compiletime_assert_576(); else ;
        }
        
#line 575 
        struct rt2x00_field32 __constr_expr_281 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 575 
        tmp_0 = __constr_expr_281;
      }
      
#line 575 
      reg = ~ tmp_0.bit_mask & reg;
      {
        {
          
#line 575 
          bool __cond_0 = (_Bool)0;
          
#line 575 
          if ((int)__cond_0 != 0) 
#line 575 
                                  __compiletime_assert_576(); else ;
        }
        
#line 575 
        struct rt2x00_field32 __constr_expr_282 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 575 
        tmp_1 = __constr_expr_282;
      }
      {
        {
          
#line 575 
          bool __cond_1 = (_Bool)0;
          
#line 575 
          if ((int)__cond_1 != 0) 
#line 575 
                                  __compiletime_assert_576(); else ;
        }
        
#line 575 
        struct rt2x00_field32 __constr_expr_283 = {.bit_offset = 0U, .bit_mask = 65535U};
        
#line 575 
        tmp_2 = __constr_expr_283;
      }
      
#line 575 
      reg = ((unsigned int)(((int)rt2x00dev->beacon_int + -20) * 16 << tmp_1.bit_offset) & tmp_2.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      struct rt2x00_field32 tmp_5;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 577 
          bool __cond_2 = (_Bool)0;
          
#line 577 
          if ((int)__cond_2 != 0) 
#line 577 
                                  __compiletime_assert_578(); else ;
        }
        
#line 577 
        struct rt2x00_field32 __constr_expr_284 = {.bit_offset = 16U, .bit_mask = 16711680U};
        
#line 577 
        tmp_3 = __constr_expr_284;
      }
      
#line 577 
      reg = ~ tmp_3.bit_mask & reg;
      {
        {
          
#line 577 
          bool __cond_3 = (_Bool)0;
          
#line 577 
          if ((int)__cond_3 != 0) 
#line 577 
                                  __compiletime_assert_578(); else ;
        }
        
#line 577 
        struct rt2x00_field32 __constr_expr_285 = {.bit_offset = 16U, .bit_mask = 16711680U};
        
#line 577 
        tmp_4 = __constr_expr_285;
      }
      {
        {
          
#line 577 
          bool __cond_4 = (_Bool)0;
          
#line 577 
          if ((int)__cond_4 != 0) 
#line 577 
                                  __compiletime_assert_578(); else ;
        }
        
#line 577 
        struct rt2x00_field32 __constr_expr_286 = {.bit_offset = 16U, .bit_mask = 16711680U};
        
#line 577 
        tmp_5 = __constr_expr_286;
      }
      
#line 577 
      reg = ((unsigned int)(((int)(libconf->conf)->listen_interval + -1) << tmp_4.bit_offset) & tmp_5.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      struct rt2x00_field32 tmp_8;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 581 
          bool __cond_5 = (_Bool)0;
          
#line 581 
          if ((int)__cond_5 != 0) 
#line 581 
                                  __compiletime_assert_581(); else ;
        }
        
#line 581 
        struct rt2x00_field32 __constr_expr_287 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 581 
        tmp_6 = __constr_expr_287;
      }
      
#line 581 
      reg = ~ tmp_6.bit_mask & reg;
      {
        {
          
#line 581 
          bool __cond_6 = (_Bool)0;
          
#line 581 
          if ((int)__cond_6 != 0) 
#line 581 
                                  __compiletime_assert_581(); else ;
        }
        
#line 581 
        struct rt2x00_field32 __constr_expr_288 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 581 
        tmp_7 = __constr_expr_288;
      }
      {
        {
          
#line 581 
          bool __cond_7 = (_Bool)0;
          
#line 581 
          if ((int)__cond_7 != 0) 
#line 581 
                                  __compiletime_assert_581(); else ;
        }
        
#line 581 
        struct rt2x00_field32 __constr_expr_289 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 581 
        tmp_8 = __constr_expr_289;
      }
      
#line 581 
      reg = 0U | reg;
    }
    
#line 582 
    rt2x00mmio_register_write(rt2x00dev,80U,reg);
    {
      struct rt2x00_field32 tmp_9;
      struct rt2x00_field32 tmp_10;
      struct rt2x00_field32 tmp_11;
      {
        struct rt2x00_field32 __dummy_2;
        struct rt2x00_field32 __dummy2_2;
        
      }
      {
        {
          
#line 584 
          bool __cond_8 = (_Bool)0;
          
#line 584 
          if ((int)__cond_8 != 0) 
#line 584 
                                  __compiletime_assert_584(); else ;
        }
        
#line 584 
        struct rt2x00_field32 __constr_expr_290 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 584 
        tmp_9 = __constr_expr_290;
      }
      
#line 584 
      reg = ~ tmp_9.bit_mask & reg;
      {
        {
          
#line 584 
          bool __cond_9 = (_Bool)0;
          
#line 584 
          if ((int)__cond_9 != 0) 
#line 584 
                                  __compiletime_assert_584(); else ;
        }
        
#line 584 
        struct rt2x00_field32 __constr_expr_291 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 584 
        tmp_10 = __constr_expr_291;
      }
      {
        {
          
#line 584 
          bool __cond_10 = (_Bool)0;
          
#line 584 
          if ((int)__cond_10 != 0) 
#line 584 
                                   __compiletime_assert_584(); else ;
        }
        
#line 584 
        struct rt2x00_field32 __constr_expr_292 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 584 
        tmp_11 = __constr_expr_292;
      }
      
#line 584 
      reg = ((unsigned int)(1 << tmp_10.bit_offset) & tmp_11.bit_mask) | reg;
    }
    
#line 585 
    rt2x00mmio_register_write(rt2x00dev,80U,reg);
  }
  else {
    
#line 587 
    rt2x00mmio_register_read(rt2x00dev,80U,& reg);
    {
      struct rt2x00_field32 tmp_12;
      struct rt2x00_field32 tmp_13;
      struct rt2x00_field32 tmp_14;
      {
        struct rt2x00_field32 __dummy_3;
        struct rt2x00_field32 __dummy2_3;
        
      }
      {
        {
          
#line 588 
          bool __cond_11 = (_Bool)0;
          
#line 588 
          if ((int)__cond_11 != 0) 
#line 588 
                                   __compiletime_assert_588(); else ;
        }
        
#line 588 
        struct rt2x00_field32 __constr_expr_293 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 588 
        tmp_12 = __constr_expr_293;
      }
      
#line 588 
      reg = ~ tmp_12.bit_mask & reg;
      {
        {
          
#line 588 
          bool __cond_12 = (_Bool)0;
          
#line 588 
          if ((int)__cond_12 != 0) 
#line 588 
                                   __compiletime_assert_588(); else ;
        }
        
#line 588 
        struct rt2x00_field32 __constr_expr_294 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 588 
        tmp_13 = __constr_expr_294;
      }
      {
        {
          
#line 588 
          bool __cond_13 = (_Bool)0;
          
#line 588 
          if ((int)__cond_13 != 0) 
#line 588 
                                   __compiletime_assert_588(); else ;
        }
        
#line 588 
        struct rt2x00_field32 __constr_expr_295 = {.bit_offset = 24U, .bit_mask = 16777216U};
        
#line 588 
        tmp_14 = __constr_expr_295;
      }
      
#line 588 
      reg = 0U | reg;
    }
    
#line 589 
    rt2x00mmio_register_write(rt2x00dev,80U,reg);
  }
  
#line 592 
  (*(((rt2x00dev->ops)->lib)->set_device_state))(rt2x00dev,state);
  
#line 593 
  return;
}


#line 595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_config(struct rt2x00_dev *rt2x00dev, struct rt2x00lib_conf *libconf, unsigned int const flags)
{
  
#line 599 
  if ((flags & 64U) != 0U) 
#line 600 
                           rt2500pci_config_channel(rt2x00dev,& libconf->rf,(libconf->conf)->power_level); else ;
  
#line 602 
  if ((flags & 32U) != 0U && (flags & 64U) == 0U) 
#line 604 
                                                  rt2500pci_config_txpower(rt2x00dev,(libconf->conf)->power_level); else ;
  
#line 606 
  if ((flags & 128U) != 0U) 
#line 607 
                            rt2500pci_config_retry_limit(rt2x00dev,libconf); else ;
  
#line 608 
  if ((flags & 16U) != 0U) 
#line 609 
                           rt2500pci_config_ps(rt2x00dev,libconf); else ;
  
#line 610 
  return;
}


#line 624 
void __compiletime_assert_624(void);


#line 630 
void __compiletime_assert_630(void);


#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_link_stats(struct rt2x00_dev *rt2x00dev, struct link_qual *qual)
{
  u32 reg;
  unsigned int tmp_1;
  unsigned int tmp_4;
  
#line 623 
  rt2x00mmio_register_read(rt2x00dev,160U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 624 
        bool __cond = (_Bool)0;
        
#line 624 
        if ((int)__cond != 0) 
#line 624 
                              __compiletime_assert_624(); else ;
      }
      
#line 624 
      struct rt2x00_field32 __constr_expr_296 = {.bit_offset = 0U, .bit_mask = 65535U};
      
#line 624 
      tmp = __constr_expr_296;
    }
    {
      {
        
#line 624 
        bool __cond_0 = (_Bool)0;
        
#line 624 
        if ((int)__cond_0 != 0) 
#line 624 
                                __compiletime_assert_624(); else ;
      }
      
#line 624 
      struct rt2x00_field32 __constr_expr_297 = {.bit_offset = 0U, .bit_mask = 65535U};
      
#line 624 
      tmp_0 = __constr_expr_297;
    }
    
#line 624 
    ;
    
#line 624 
    tmp_1 = (tmp.bit_mask & reg) >> tmp_0.bit_offset;
  }
  
#line 624 
  qual->rx_failed = (int)tmp_1;
  
#line 629 
  rt2x00mmio_register_read(rt2x00dev,184U,& reg);
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 630 
        bool __cond_1 = (_Bool)0;
        
#line 630 
        if ((int)__cond_1 != 0) 
#line 630 
                                __compiletime_assert_630(); else ;
      }
      
#line 630 
      struct rt2x00_field32 __constr_expr_298 = {.bit_offset = 0U, .bit_mask = 65535U};
      
#line 630 
      tmp_2 = __constr_expr_298;
    }
    {
      {
        
#line 630 
        bool __cond_2 = (_Bool)0;
        
#line 630 
        if ((int)__cond_2 != 0) 
#line 630 
                                __compiletime_assert_630(); else ;
      }
      
#line 630 
      struct rt2x00_field32 __constr_expr_299 = {.bit_offset = 0U, .bit_mask = 65535U};
      
#line 630 
      tmp_3 = __constr_expr_299;
    }
    
#line 630 
    ;
    
#line 630 
    tmp_4 = (tmp_2.bit_mask & reg) >> tmp_3.bit_offset;
  }
  
#line 630 
  qual->false_cca = (int)tmp_4;
  
#line 632 
  return;
}


#line 633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
__inline static void rt2500pci_set_vgc(struct rt2x00_dev *rt2x00dev, struct link_qual *qual, u8 vgc_level)
{
  
#line 636 
  if ((int)qual->vgc_level_reg != (int)vgc_level) {
    
#line 637 
    rt2500pci_bbp_write(rt2x00dev,17U,(unsigned char)((int)vgc_level));
    
#line 638 
    qual->vgc_level = vgc_level;
    
#line 639 
    qual->vgc_level_reg = vgc_level;
  }
  else ;
  
#line 641 
  return;
}


#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_reset_tuner(struct rt2x00_dev *rt2x00dev, struct link_qual *qual)
{
  
#line 646 
  rt2500pci_set_vgc(rt2x00dev,qual,(unsigned char)72);
  
#line 647 
  return;
}


#line 649  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_link_tuner(struct rt2x00_dev *rt2x00dev, struct link_qual *qual, u32 const count)
{
  u16 tmp;
  u16 tmp_0;
  
#line 657 
  tmp = rt2x00_rev(rt2x00dev);
  
#line 657 
  if ((unsigned int)tmp <= 3U) {
    
#line 657 
    if (rt2x00dev->intf_associated != 0U) {
      
#line 658 
      if (count > 20U) 
#line 659 
                       goto return_label; else ;
    }
    else ;
  }
  else ;
  
#line 667 
  tmp_0 = rt2x00_rev(rt2x00dev);
  
#line 667 
  if ((unsigned int)tmp_0 <= 3U) 
#line 669 
                                 goto dynamic_cca_tune;
  else 
    
#line 667 
    if (rt2x00dev->intf_associated == 0U) 
#line 669 
                                          goto dynamic_cca_tune; else ;
  
#line 676 
  if (qual->rssi < -80 && count > 20U) {
    
#line 677 
    if ((unsigned int)qual->vgc_level_reg > 64U) 
#line 678 
                                                 rt2500pci_set_vgc(rt2x00dev,qual,(unsigned char)((int)qual->vgc_level)); else ;
    
#line 679 
    goto return_label;
  }
  else ;
  
#line 685 
  if (qual->rssi >= -58) {
    
#line 686 
    rt2500pci_set_vgc(rt2x00dev,qual,(unsigned char)80);
    
#line 687 
    goto return_label;
  }
  else ;
  
#line 693 
  if (qual->rssi >= -74) {
    
#line 694 
    rt2500pci_set_vgc(rt2x00dev,qual,(unsigned char)65);
    
#line 695 
    goto return_label;
  }
  else ;
  
#line 702 
  if ((unsigned int)qual->vgc_level_reg > 64U) {
    
#line 703 
    rt2500pci_set_vgc(rt2x00dev,qual,(unsigned char)((int)qual->vgc_level));
    
#line 704 
    goto return_label;
  }
  else ;
  dynamic_cca_tune: 
#line 707 
  ;
  
#line 713 
  if (qual->false_cca > 512 && (unsigned int)qual->vgc_level_reg <= 63U) {
    
#line 714 
    qual->vgc_level_reg = (u8)((int)qual->vgc_level_reg + 1);
    
#line 714 
    ;
    
#line 714 
    ;
    
#line 714 
    rt2500pci_set_vgc(rt2x00dev,qual,(unsigned char)((int)qual->vgc_level_reg));
  }
  else 
    
#line 715 
    if (qual->false_cca <= 99 && (unsigned int)qual->vgc_level_reg > 50U) {
      
#line 716 
      qual->vgc_level_reg = (u8)((int)qual->vgc_level_reg - 1);
      
#line 716 
      ;
      
#line 716 
      ;
      
#line 716 
      rt2500pci_set_vgc(rt2x00dev,qual,(unsigned char)((int)qual->vgc_level_reg));
    }
    else ;
  return_label: 
#line 717 
                return;
}


#line 730 
void __compiletime_assert_730(void);


#line 735 
void __compiletime_assert_735(void);


#line 736 
void __compiletime_assert_736(void);


#line 737 
void __compiletime_assert_737(void);


#line 722  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_start_queue(struct data_queue *queue)
{
  u32 reg;
  
#line 724 
  struct rt2x00_dev *rt2x00dev = queue->rt2x00dev;
  
#line 727 
  switch ((unsigned int)queue->qid) {
    case (unsigned int)14: 
#line 728 
    ;
    
#line 729 
    rt2x00mmio_register_read(rt2x00dev,128U,& reg);
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 730 
          bool __cond = (_Bool)0;
          
#line 730 
          if ((int)__cond != 0) 
#line 730 
                                __compiletime_assert_730(); else ;
        }
        
#line 730 
        struct rt2x00_field32 __constr_expr_300 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 730 
        tmp = __constr_expr_300;
      }
      
#line 730 
      reg = ~ tmp.bit_mask & reg;
      {
        {
          
#line 730 
          bool __cond_0 = (_Bool)0;
          
#line 730 
          if ((int)__cond_0 != 0) 
#line 730 
                                  __compiletime_assert_730(); else ;
        }
        
#line 730 
        struct rt2x00_field32 __constr_expr_301 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 730 
        tmp_0 = __constr_expr_301;
      }
      {
        {
          
#line 730 
          bool __cond_1 = (_Bool)0;
          
#line 730 
          if ((int)__cond_1 != 0) 
#line 730 
                                  __compiletime_assert_730(); else ;
        }
        
#line 730 
        struct rt2x00_field32 __constr_expr_302 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 730 
        tmp_1 = __constr_expr_302;
      }
      
#line 730 
      reg = 0U | reg;
    }
    
#line 731 
    rt2x00mmio_register_write(rt2x00dev,128U,reg);
    
#line 732 
    goto ldv_56258;
    case (unsigned int)16: 
#line 733 
    ;
    
#line 734 
    rt2x00mmio_register_read(rt2x00dev,56U,& reg);
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 735 
          bool __cond_2 = (_Bool)0;
          
#line 735 
          if ((int)__cond_2 != 0) 
#line 735 
                                  __compiletime_assert_735(); else ;
        }
        
#line 735 
        struct rt2x00_field32 __constr_expr_303 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 735 
        tmp_2 = __constr_expr_303;
      }
      
#line 735 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 735 
          bool __cond_3 = (_Bool)0;
          
#line 735 
          if ((int)__cond_3 != 0) 
#line 735 
                                  __compiletime_assert_735(); else ;
        }
        
#line 735 
        struct rt2x00_field32 __constr_expr_304 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 735 
        tmp_3 = __constr_expr_304;
      }
      {
        {
          
#line 735 
          bool __cond_4 = (_Bool)0;
          
#line 735 
          if ((int)__cond_4 != 0) 
#line 735 
                                  __compiletime_assert_735(); else ;
        }
        
#line 735 
        struct rt2x00_field32 __constr_expr_305 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 735 
        tmp_4 = __constr_expr_305;
      }
      
#line 735 
      reg = ((unsigned int)(1 << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 736 
          bool __cond_5 = (_Bool)0;
          
#line 736 
          if ((int)__cond_5 != 0) 
#line 736 
                                  __compiletime_assert_736(); else ;
        }
        
#line 736 
        struct rt2x00_field32 __constr_expr_306 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 736 
        tmp_5 = __constr_expr_306;
      }
      
#line 736 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 736 
          bool __cond_6 = (_Bool)0;
          
#line 736 
          if ((int)__cond_6 != 0) 
#line 736 
                                  __compiletime_assert_736(); else ;
        }
        
#line 736 
        struct rt2x00_field32 __constr_expr_307 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 736 
        tmp_6 = __constr_expr_307;
      }
      {
        {
          
#line 736 
          bool __cond_7 = (_Bool)0;
          
#line 736 
          if ((int)__cond_7 != 0) 
#line 736 
                                  __compiletime_assert_736(); else ;
        }
        
#line 736 
        struct rt2x00_field32 __constr_expr_308 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 736 
        tmp_7 = __constr_expr_308;
      }
      
#line 736 
      reg = ((unsigned int)(1 << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
    }
    {
      struct rt2x00_field32 tmp_8;
      struct rt2x00_field32 tmp_9;
      struct rt2x00_field32 tmp_10;
      {
        struct rt2x00_field32 __dummy_2;
        struct rt2x00_field32 __dummy2_2;
        
      }
      {
        {
          
#line 737 
          bool __cond_8 = (_Bool)0;
          
#line 737 
          if ((int)__cond_8 != 0) 
#line 737 
                                  __compiletime_assert_737(); else ;
        }
        
#line 737 
        struct rt2x00_field32 __constr_expr_309 = {.bit_offset = 6U, .bit_mask = 64U};
        
#line 737 
        tmp_8 = __constr_expr_309;
      }
      
#line 737 
      reg = ~ tmp_8.bit_mask & reg;
      {
        {
          
#line 737 
          bool __cond_9 = (_Bool)0;
          
#line 737 
          if ((int)__cond_9 != 0) 
#line 737 
                                  __compiletime_assert_737(); else ;
        }
        
#line 737 
        struct rt2x00_field32 __constr_expr_310 = {.bit_offset = 6U, .bit_mask = 64U};
        
#line 737 
        tmp_9 = __constr_expr_310;
      }
      {
        {
          
#line 737 
          bool __cond_10 = (_Bool)0;
          
#line 737 
          if ((int)__cond_10 != 0) 
#line 737 
                                   __compiletime_assert_737(); else ;
        }
        
#line 737 
        struct rt2x00_field32 __constr_expr_311 = {.bit_offset = 6U, .bit_mask = 64U};
        
#line 737 
        tmp_10 = __constr_expr_311;
      }
      
#line 737 
      reg = ((unsigned int)(1 << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
    }
    
#line 738 
    rt2x00mmio_register_write(rt2x00dev,56U,reg);
    
#line 739 
    goto ldv_56258;
    default: 
#line 740 
    ;
    
#line 741 
    goto ldv_56258;
  }
  ldv_56258: 
#line 743 
  ;
  
#line 744 
  return;
}


#line 753 
void __compiletime_assert_753(void);


#line 758 
void __compiletime_assert_758(void);


#line 763 
void __compiletime_assert_763(void);


#line 745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_kick_queue(struct data_queue *queue)
{
  u32 reg;
  
#line 747 
  struct rt2x00_dev *rt2x00dev = queue->rt2x00dev;
  
#line 750 
  switch ((unsigned int)queue->qid) {
    case (unsigned int)0: 
#line 751 
    ;
    
#line 752 
    rt2x00mmio_register_read(rt2x00dev,96U,& reg);
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 753 
          bool __cond = (_Bool)0;
          
#line 753 
          if ((int)__cond != 0) 
#line 753 
                                __compiletime_assert_753(); else ;
        }
        
#line 753 
        struct rt2x00_field32 __constr_expr_312 = {.bit_offset = 2U, .bit_mask = 4U};
        
#line 753 
        tmp = __constr_expr_312;
      }
      
#line 753 
      reg = ~ tmp.bit_mask & reg;
      {
        {
          
#line 753 
          bool __cond_0 = (_Bool)0;
          
#line 753 
          if ((int)__cond_0 != 0) 
#line 753 
                                  __compiletime_assert_753(); else ;
        }
        
#line 753 
        struct rt2x00_field32 __constr_expr_313 = {.bit_offset = 2U, .bit_mask = 4U};
        
#line 753 
        tmp_0 = __constr_expr_313;
      }
      {
        {
          
#line 753 
          bool __cond_1 = (_Bool)0;
          
#line 753 
          if ((int)__cond_1 != 0) 
#line 753 
                                  __compiletime_assert_753(); else ;
        }
        
#line 753 
        struct rt2x00_field32 __constr_expr_314 = {.bit_offset = 2U, .bit_mask = 4U};
        
#line 753 
        tmp_1 = __constr_expr_314;
      }
      
#line 753 
      reg = ((unsigned int)(1 << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
    }
    
#line 754 
    rt2x00mmio_register_write(rt2x00dev,96U,reg);
    
#line 755 
    goto ldv_56379;
    case (unsigned int)1: 
#line 756 
    ;
    
#line 757 
    rt2x00mmio_register_read(rt2x00dev,96U,& reg);
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 758 
          bool __cond_2 = (_Bool)0;
          
#line 758 
          if ((int)__cond_2 != 0) 
#line 758 
                                  __compiletime_assert_758(); else ;
        }
        
#line 758 
        struct rt2x00_field32 __constr_expr_315 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 758 
        tmp_2 = __constr_expr_315;
      }
      
#line 758 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 758 
          bool __cond_3 = (_Bool)0;
          
#line 758 
          if ((int)__cond_3 != 0) 
#line 758 
                                  __compiletime_assert_758(); else ;
        }
        
#line 758 
        struct rt2x00_field32 __constr_expr_316 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 758 
        tmp_3 = __constr_expr_316;
      }
      {
        {
          
#line 758 
          bool __cond_4 = (_Bool)0;
          
#line 758 
          if ((int)__cond_4 != 0) 
#line 758 
                                  __compiletime_assert_758(); else ;
        }
        
#line 758 
        struct rt2x00_field32 __constr_expr_317 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 758 
        tmp_4 = __constr_expr_317;
      }
      
#line 758 
      reg = ((unsigned int)(1 << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
    }
    
#line 759 
    rt2x00mmio_register_write(rt2x00dev,96U,reg);
    
#line 760 
    goto ldv_56379;
    case (unsigned int)17: 
#line 761 
    ;
    
#line 762 
    rt2x00mmio_register_read(rt2x00dev,96U,& reg);
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 763 
          bool __cond_5 = (_Bool)0;
          
#line 763 
          if ((int)__cond_5 != 0) 
#line 763 
                                  __compiletime_assert_763(); else ;
        }
        
#line 763 
        struct rt2x00_field32 __constr_expr_318 = {.bit_offset = 1U, .bit_mask = 2U};
        
#line 763 
        tmp_5 = __constr_expr_318;
      }
      
#line 763 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 763 
          bool __cond_6 = (_Bool)0;
          
#line 763 
          if ((int)__cond_6 != 0) 
#line 763 
                                  __compiletime_assert_763(); else ;
        }
        
#line 763 
        struct rt2x00_field32 __constr_expr_319 = {.bit_offset = 1U, .bit_mask = 2U};
        
#line 763 
        tmp_6 = __constr_expr_319;
      }
      {
        {
          
#line 763 
          bool __cond_7 = (_Bool)0;
          
#line 763 
          if ((int)__cond_7 != 0) 
#line 763 
                                  __compiletime_assert_763(); else ;
        }
        
#line 763 
        struct rt2x00_field32 __constr_expr_320 = {.bit_offset = 1U, .bit_mask = 2U};
        
#line 763 
        tmp_7 = __constr_expr_320;
      }
      
#line 763 
      reg = ((unsigned int)(1 << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
    }
    
#line 764 
    rt2x00mmio_register_write(rt2x00dev,96U,reg);
    
#line 765 
    goto ldv_56379;
    default: 
#line 766 
    ;
    
#line 767 
    goto ldv_56379;
  }
  ldv_56379: 
#line 769 
  ;
  
#line 770 
  return;
}


#line 781 
void __compiletime_assert_781(void);


#line 786 
void __compiletime_assert_786(void);


#line 791 
void __compiletime_assert_791(void);


#line 792 
void __compiletime_assert_792(void);


#line 793 
void __compiletime_assert_793(void);


#line 771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_stop_queue(struct data_queue *queue)
{
  u32 reg;
  
#line 773 
  struct rt2x00_dev *rt2x00dev = queue->rt2x00dev;
  
#line 776 
  switch ((unsigned int)queue->qid) {
    case (unsigned int)0: 
#line 777 
    ;
    case (unsigned int)1: 
#line 778 
    ;
    case (unsigned int)17: 
#line 779 
    ;
    
#line 780 
    rt2x00mmio_register_read(rt2x00dev,96U,& reg);
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 781 
          bool __cond = (_Bool)0;
          
#line 781 
          if ((int)__cond != 0) 
#line 781 
                                __compiletime_assert_781(); else ;
        }
        
#line 781 
        struct rt2x00_field32 __constr_expr_321 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 781 
        tmp = __constr_expr_321;
      }
      
#line 781 
      reg = ~ tmp.bit_mask & reg;
      {
        {
          
#line 781 
          bool __cond_0 = (_Bool)0;
          
#line 781 
          if ((int)__cond_0 != 0) 
#line 781 
                                  __compiletime_assert_781(); else ;
        }
        
#line 781 
        struct rt2x00_field32 __constr_expr_322 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 781 
        tmp_0 = __constr_expr_322;
      }
      {
        {
          
#line 781 
          bool __cond_1 = (_Bool)0;
          
#line 781 
          if ((int)__cond_1 != 0) 
#line 781 
                                  __compiletime_assert_781(); else ;
        }
        
#line 781 
        struct rt2x00_field32 __constr_expr_323 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 781 
        tmp_1 = __constr_expr_323;
      }
      
#line 781 
      reg = ((unsigned int)(1 << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
    }
    
#line 782 
    rt2x00mmio_register_write(rt2x00dev,96U,reg);
    
#line 783 
    goto ldv_56475;
    case (unsigned int)14: 
#line 784 
    ;
    
#line 785 
    rt2x00mmio_register_read(rt2x00dev,128U,& reg);
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 786 
          bool __cond_2 = (_Bool)0;
          
#line 786 
          if ((int)__cond_2 != 0) 
#line 786 
                                  __compiletime_assert_786(); else ;
        }
        
#line 786 
        struct rt2x00_field32 __constr_expr_324 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 786 
        tmp_2 = __constr_expr_324;
      }
      
#line 786 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 786 
          bool __cond_3 = (_Bool)0;
          
#line 786 
          if ((int)__cond_3 != 0) 
#line 786 
                                  __compiletime_assert_786(); else ;
        }
        
#line 786 
        struct rt2x00_field32 __constr_expr_325 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 786 
        tmp_3 = __constr_expr_325;
      }
      {
        {
          
#line 786 
          bool __cond_4 = (_Bool)0;
          
#line 786 
          if ((int)__cond_4 != 0) 
#line 786 
                                  __compiletime_assert_786(); else ;
        }
        
#line 786 
        struct rt2x00_field32 __constr_expr_326 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 786 
        tmp_4 = __constr_expr_326;
      }
      
#line 786 
      reg = ((unsigned int)(1 << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
    }
    
#line 787 
    rt2x00mmio_register_write(rt2x00dev,128U,reg);
    
#line 788 
    goto ldv_56475;
    case (unsigned int)16: 
#line 789 
    ;
    
#line 790 
    rt2x00mmio_register_read(rt2x00dev,56U,& reg);
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 791 
          bool __cond_5 = (_Bool)0;
          
#line 791 
          if ((int)__cond_5 != 0) 
#line 791 
                                  __compiletime_assert_791(); else ;
        }
        
#line 791 
        struct rt2x00_field32 __constr_expr_327 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 791 
        tmp_5 = __constr_expr_327;
      }
      
#line 791 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 791 
          bool __cond_6 = (_Bool)0;
          
#line 791 
          if ((int)__cond_6 != 0) 
#line 791 
                                  __compiletime_assert_791(); else ;
        }
        
#line 791 
        struct rt2x00_field32 __constr_expr_328 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 791 
        tmp_6 = __constr_expr_328;
      }
      {
        {
          
#line 791 
          bool __cond_7 = (_Bool)0;
          
#line 791 
          if ((int)__cond_7 != 0) 
#line 791 
                                  __compiletime_assert_791(); else ;
        }
        
#line 791 
        struct rt2x00_field32 __constr_expr_329 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 791 
        tmp_7 = __constr_expr_329;
      }
      
#line 791 
      reg = 0U | reg;
    }
    {
      struct rt2x00_field32 tmp_8;
      struct rt2x00_field32 tmp_9;
      struct rt2x00_field32 tmp_10;
      {
        struct rt2x00_field32 __dummy_2;
        struct rt2x00_field32 __dummy2_2;
        
      }
      {
        {
          
#line 792 
          bool __cond_8 = (_Bool)0;
          
#line 792 
          if ((int)__cond_8 != 0) 
#line 792 
                                  __compiletime_assert_792(); else ;
        }
        
#line 792 
        struct rt2x00_field32 __constr_expr_330 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 792 
        tmp_8 = __constr_expr_330;
      }
      
#line 792 
      reg = ~ tmp_8.bit_mask & reg;
      {
        {
          
#line 792 
          bool __cond_9 = (_Bool)0;
          
#line 792 
          if ((int)__cond_9 != 0) 
#line 792 
                                  __compiletime_assert_792(); else ;
        }
        
#line 792 
        struct rt2x00_field32 __constr_expr_331 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 792 
        tmp_9 = __constr_expr_331;
      }
      {
        {
          
#line 792 
          bool __cond_10 = (_Bool)0;
          
#line 792 
          if ((int)__cond_10 != 0) 
#line 792 
                                   __compiletime_assert_792(); else ;
        }
        
#line 792 
        struct rt2x00_field32 __constr_expr_332 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 792 
        tmp_10 = __constr_expr_332;
      }
      
#line 792 
      reg = 0U | reg;
    }
    {
      struct rt2x00_field32 tmp_11;
      struct rt2x00_field32 tmp_12;
      struct rt2x00_field32 tmp_13;
      {
        struct rt2x00_field32 __dummy_3;
        struct rt2x00_field32 __dummy2_3;
        
      }
      {
        {
          
#line 793 
          bool __cond_11 = (_Bool)0;
          
#line 793 
          if ((int)__cond_11 != 0) 
#line 793 
                                   __compiletime_assert_793(); else ;
        }
        
#line 793 
        struct rt2x00_field32 __constr_expr_333 = {.bit_offset = 6U, .bit_mask = 64U};
        
#line 793 
        tmp_11 = __constr_expr_333;
      }
      
#line 793 
      reg = ~ tmp_11.bit_mask & reg;
      {
        {
          
#line 793 
          bool __cond_12 = (_Bool)0;
          
#line 793 
          if ((int)__cond_12 != 0) 
#line 793 
                                   __compiletime_assert_793(); else ;
        }
        
#line 793 
        struct rt2x00_field32 __constr_expr_334 = {.bit_offset = 6U, .bit_mask = 64U};
        
#line 793 
        tmp_12 = __constr_expr_334;
      }
      {
        {
          
#line 793 
          bool __cond_13 = (_Bool)0;
          
#line 793 
          if ((int)__cond_13 != 0) 
#line 793 
                                   __compiletime_assert_793(); else ;
        }
        
#line 793 
        struct rt2x00_field32 __constr_expr_335 = {.bit_offset = 6U, .bit_mask = 64U};
        
#line 793 
        tmp_13 = __constr_expr_335;
      }
      
#line 793 
      reg = 0U | reg;
    }
    
#line 794 
    rt2x00mmio_register_write(rt2x00dev,56U,reg);
    
#line 799 
    tasklet_kill(& rt2x00dev->tbtt_tasklet);
    
#line 800 
    goto ldv_56475;
    default: 
#line 801 
    ;
    
#line 802 
    goto ldv_56475;
  }
  ldv_56475: 
#line 804 
  ;
  
#line 805 
  return;
}


#line 817 
void __compiletime_assert_817(void);


#line 821 
void __compiletime_assert_821(void);


#line 822 
void __compiletime_assert_822(void);


#line 809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static bool rt2500pci_get_entry_state(struct queue_entry *entry)
{
  bool __retres;
  u32 word;
  
#line 811 
  struct queue_entry_priv_mmio *entry_priv = (struct queue_entry_priv_mmio *)entry->priv_data;
  
#line 814 
  if ((entry->queue)->qid == (unsigned int)QID_RX) {
    unsigned int tmp_1;
    
#line 815 
    rt2x00_desc_read(entry_priv->desc,(unsigned char)0,& word);
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 817 
          bool __cond = (_Bool)0;
          
#line 817 
          if ((int)__cond != 0) 
#line 817 
                                __compiletime_assert_817(); else ;
        }
        
#line 817 
        struct rt2x00_field32 __constr_expr_336 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 817 
        tmp = __constr_expr_336;
      }
      {
        {
          
#line 817 
          bool __cond_0 = (_Bool)0;
          
#line 817 
          if ((int)__cond_0 != 0) 
#line 817 
                                  __compiletime_assert_817(); else ;
        }
        
#line 817 
        struct rt2x00_field32 __constr_expr_337 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 817 
        tmp_0 = __constr_expr_337;
      }
      
#line 817 
      ;
      
#line 817 
      tmp_1 = (tmp.bit_mask & word) >> tmp_0.bit_offset;
    }
    
#line 817 
    __retres = (_Bool)(tmp_1 != 0U);
    
#line 817 
    goto return_label;
  }
  else {
    int tmp_8;
    unsigned int tmp_4;
    
#line 819 
    rt2x00_desc_read(entry_priv->desc,(unsigned char)0,& word);
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 821 
          bool __cond_1 = (_Bool)0;
          
#line 821 
          if ((int)__cond_1 != 0) 
#line 821 
                                  __compiletime_assert_821(); else ;
        }
        
#line 821 
        struct rt2x00_field32 __constr_expr_338 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 821 
        tmp_2 = __constr_expr_338;
      }
      {
        {
          
#line 821 
          bool __cond_2 = (_Bool)0;
          
#line 821 
          if ((int)__cond_2 != 0) 
#line 821 
                                  __compiletime_assert_821(); else ;
        }
        
#line 821 
        struct rt2x00_field32 __constr_expr_339 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 821 
        tmp_3 = __constr_expr_339;
      }
      
#line 821 
      ;
      
#line 821 
      tmp_4 = (tmp_2.bit_mask & word) >> tmp_3.bit_offset;
    }
    
#line 821 
    if (tmp_4 != 0U) 
#line 821 
                     tmp_8 = 1;
    else {
      unsigned int tmp_7;
      {
        struct rt2x00_field32 tmp_5;
        struct rt2x00_field32 tmp_6;
        {
          struct rt2x00_field32 __dummy_1;
          struct rt2x00_field32 __dummy2_1;
          
        }
        {
          {
            
#line 822 
            bool __cond_3 = (_Bool)0;
            
#line 822 
            if ((int)__cond_3 != 0) 
#line 822 
                                    __compiletime_assert_822(); else ;
          }
          
#line 822 
          struct rt2x00_field32 __constr_expr_340 = {.bit_offset = 1U, .bit_mask = 2U};
          
#line 822 
          tmp_5 = __constr_expr_340;
        }
        {
          {
            
#line 822 
            bool __cond_4 = (_Bool)0;
            
#line 822 
            if ((int)__cond_4 != 0) 
#line 822 
                                    __compiletime_assert_822(); else ;
          }
          
#line 822 
          struct rt2x00_field32 __constr_expr_341 = {.bit_offset = 1U, .bit_mask = 2U};
          
#line 822 
          tmp_6 = __constr_expr_341;
        }
        
#line 822 
        ;
        
#line 822 
        tmp_7 = (tmp_5.bit_mask & word) >> tmp_6.bit_offset;
      }
      
#line 821 
      if (tmp_7 != 0U) 
#line 821 
                       tmp_8 = 1; else 
#line 821 
                                       tmp_8 = 0;
    }
    
#line 821 
    __retres = (_Bool)(tmp_8 != 0);
    
#line 821 
    goto return_label;
  }
  return_label: 
#line 814 
                return __retres;
}


#line 834 
void __compiletime_assert_834(void);


#line 838 
void __compiletime_assert_838(void);


#line 842 
void __compiletime_assert_842(void);


#line 843 
void __compiletime_assert_843(void);


#line 826  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_clear_entry(struct queue_entry *entry)
{
  u32 word;
  
#line 828 
  struct queue_entry_priv_mmio *entry_priv = (struct queue_entry_priv_mmio *)entry->priv_data;
  
#line 829 
  struct skb_frame_desc *skbdesc = get_skb_frame_desc(entry->skb);
  
#line 832 
  if ((entry->queue)->qid == (unsigned int)QID_RX) {
    
#line 833 
    rt2x00_desc_read(entry_priv->desc,(unsigned char)1,& word);
    {
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      struct rt2x00_field32 tmp_2;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 834 
          bool __cond = (_Bool)0;
          
#line 834 
          if ((int)__cond != 0) 
#line 834 
                                __compiletime_assert_834(); else ;
        }
        
#line 834 
        struct rt2x00_field32 __constr_expr_342 = {.bit_offset = 0U, .bit_mask = 4294967295U};
        
#line 834 
        tmp_0 = __constr_expr_342;
      }
      
#line 834 
      word = ~ tmp_0.bit_mask & word;
      {
        {
          
#line 834 
          bool __cond_0 = (_Bool)0;
          
#line 834 
          if ((int)__cond_0 != 0) 
#line 834 
                                  __compiletime_assert_834(); else ;
        }
        
#line 834 
        struct rt2x00_field32 __constr_expr_343 = {.bit_offset = 0U, .bit_mask = 4294967295U};
        
#line 834 
        tmp_1 = __constr_expr_343;
      }
      {
        {
          
#line 834 
          bool __cond_1 = (_Bool)0;
          
#line 834 
          if ((int)__cond_1 != 0) 
#line 834 
                                  __compiletime_assert_834(); else ;
        }
        
#line 834 
        struct rt2x00_field32 __constr_expr_344 = {.bit_offset = 0U, .bit_mask = 4294967295U};
        
#line 834 
        tmp_2 = __constr_expr_344;
      }
      
#line 834 
      word = (unsigned int)((skbdesc->skb_dma << tmp_1.bit_offset) & (unsigned long long)tmp_2.bit_mask) | word;
    }
    
#line 835 
    rt2x00_desc_write(entry_priv->desc,(unsigned char)1,word);
    
#line 837 
    rt2x00_desc_read(entry_priv->desc,(unsigned char)0,& word);
    {
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      struct rt2x00_field32 tmp_5;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 838 
          bool __cond_2 = (_Bool)0;
          
#line 838 
          if ((int)__cond_2 != 0) 
#line 838 
                                  __compiletime_assert_838(); else ;
        }
        
#line 838 
        struct rt2x00_field32 __constr_expr_345 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 838 
        tmp_3 = __constr_expr_345;
      }
      
#line 838 
      word = ~ tmp_3.bit_mask & word;
      {
        {
          
#line 838 
          bool __cond_3 = (_Bool)0;
          
#line 838 
          if ((int)__cond_3 != 0) 
#line 838 
                                  __compiletime_assert_838(); else ;
        }
        
#line 838 
        struct rt2x00_field32 __constr_expr_346 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 838 
        tmp_4 = __constr_expr_346;
      }
      {
        {
          
#line 838 
          bool __cond_4 = (_Bool)0;
          
#line 838 
          if ((int)__cond_4 != 0) 
#line 838 
                                  __compiletime_assert_838(); else ;
        }
        
#line 838 
        struct rt2x00_field32 __constr_expr_347 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 838 
        tmp_5 = __constr_expr_347;
      }
      
#line 838 
      word = ((unsigned int)(1 << tmp_4.bit_offset) & tmp_5.bit_mask) | word;
    }
    
#line 839 
    rt2x00_desc_write(entry_priv->desc,(unsigned char)0,word);
  }
  else {
    
#line 841 
    rt2x00_desc_read(entry_priv->desc,(unsigned char)0,& word);
    {
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      struct rt2x00_field32 tmp_8;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 842 
          bool __cond_5 = (_Bool)0;
          
#line 842 
          if ((int)__cond_5 != 0) 
#line 842 
                                  __compiletime_assert_842(); else ;
        }
        
#line 842 
        struct rt2x00_field32 __constr_expr_348 = {.bit_offset = 1U, .bit_mask = 2U};
        
#line 842 
        tmp_6 = __constr_expr_348;
      }
      
#line 842 
      word = ~ tmp_6.bit_mask & word;
      {
        {
          
#line 842 
          bool __cond_6 = (_Bool)0;
          
#line 842 
          if ((int)__cond_6 != 0) 
#line 842 
                                  __compiletime_assert_842(); else ;
        }
        
#line 842 
        struct rt2x00_field32 __constr_expr_349 = {.bit_offset = 1U, .bit_mask = 2U};
        
#line 842 
        tmp_7 = __constr_expr_349;
      }
      {
        {
          
#line 842 
          bool __cond_7 = (_Bool)0;
          
#line 842 
          if ((int)__cond_7 != 0) 
#line 842 
                                  __compiletime_assert_842(); else ;
        }
        
#line 842 
        struct rt2x00_field32 __constr_expr_350 = {.bit_offset = 1U, .bit_mask = 2U};
        
#line 842 
        tmp_8 = __constr_expr_350;
      }
      
#line 842 
      word = 0U | word;
    }
    {
      struct rt2x00_field32 tmp_9;
      struct rt2x00_field32 tmp_10;
      struct rt2x00_field32 tmp_11;
      {
        struct rt2x00_field32 __dummy_2;
        struct rt2x00_field32 __dummy2_2;
        
      }
      {
        {
          
#line 843 
          bool __cond_8 = (_Bool)0;
          
#line 843 
          if ((int)__cond_8 != 0) 
#line 843 
                                  __compiletime_assert_843(); else ;
        }
        
#line 843 
        struct rt2x00_field32 __constr_expr_351 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 843 
        tmp_9 = __constr_expr_351;
      }
      
#line 843 
      word = ~ tmp_9.bit_mask & word;
      {
        {
          
#line 843 
          bool __cond_9 = (_Bool)0;
          
#line 843 
          if ((int)__cond_9 != 0) 
#line 843 
                                  __compiletime_assert_843(); else ;
        }
        
#line 843 
        struct rt2x00_field32 __constr_expr_352 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 843 
        tmp_10 = __constr_expr_352;
      }
      {
        {
          
#line 843 
          bool __cond_10 = (_Bool)0;
          
#line 843 
          if ((int)__cond_10 != 0) 
#line 843 
                                   __compiletime_assert_843(); else ;
        }
        
#line 843 
        struct rt2x00_field32 __constr_expr_353 = {.bit_offset = 0U, .bit_mask = 1U};
        
#line 843 
        tmp_11 = __constr_expr_353;
      }
      
#line 843 
      word = 0U | word;
    }
    
#line 844 
    rt2x00_desc_write(entry_priv->desc,(unsigned char)0,word);
  }
  
#line 846 
  return;
}


#line 857 
void __compiletime_assert_857(void);


#line 858 
void __compiletime_assert_858(void);


#line 859 
void __compiletime_assert_859(void);


#line 860 
void __compiletime_assert_860(void);


#line 865 
void __compiletime_assert_866(void);


#line 871 
void __compiletime_assert_872(void);


#line 877 
void __compiletime_assert_878(void);


#line 883 
void __compiletime_assert_884(void);


#line 888 
void __compiletime_assert_888(void);


#line 889 
void __compiletime_assert_889(void);


#line 894 
void __compiletime_assert_895(void);


#line 848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_init_queues(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  struct queue_entry_priv_mmio *entry_priv;
  u32 reg;
  
#line 856 
  rt2x00mmio_register_read(rt2x00dev,104U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 857 
        bool __cond = (_Bool)0;
        
#line 857 
        if ((int)__cond != 0) 
#line 857 
                              __compiletime_assert_857(); else ;
      }
      
#line 857 
      struct rt2x00_field32 __constr_expr_354 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 857 
      tmp = __constr_expr_354;
    }
    
#line 857 
    reg = ~ tmp.bit_mask & reg;
    {
      {
        
#line 857 
        bool __cond_0 = (_Bool)0;
        
#line 857 
        if ((int)__cond_0 != 0) 
#line 857 
                                __compiletime_assert_857(); else ;
      }
      
#line 857 
      struct rt2x00_field32 __constr_expr_355 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 857 
      tmp_0 = __constr_expr_355;
    }
    {
      {
        
#line 857 
        bool __cond_1 = (_Bool)0;
        
#line 857 
        if ((int)__cond_1 != 0) 
#line 857 
                                __compiletime_assert_857(); else ;
      }
      
#line 857 
      struct rt2x00_field32 __constr_expr_356 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 857 
      tmp_1 = __constr_expr_356;
    }
    
#line 857 
    reg = ((unsigned int)((int)(rt2x00dev->tx)->desc_size << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 858 
        bool __cond_2 = (_Bool)0;
        
#line 858 
        if ((int)__cond_2 != 0) 
#line 858 
                                __compiletime_assert_858(); else ;
      }
      
#line 858 
      struct rt2x00_field32 __constr_expr_357 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 858 
      tmp_2 = __constr_expr_357;
    }
    
#line 858 
    reg = ~ tmp_2.bit_mask & reg;
    {
      {
        
#line 858 
        bool __cond_3 = (_Bool)0;
        
#line 858 
        if ((int)__cond_3 != 0) 
#line 858 
                                __compiletime_assert_858(); else ;
      }
      
#line 858 
      struct rt2x00_field32 __constr_expr_358 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 858 
      tmp_3 = __constr_expr_358;
    }
    {
      {
        
#line 858 
        bool __cond_4 = (_Bool)0;
        
#line 858 
        if ((int)__cond_4 != 0) 
#line 858 
                                __compiletime_assert_858(); else ;
      }
      
#line 858 
      struct rt2x00_field32 __constr_expr_359 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 858 
      tmp_4 = __constr_expr_359;
    }
    
#line 858 
    reg = ((unsigned int)((int)(rt2x00dev->tx + 1U)->limit << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_5;
    struct rt2x00_field32 tmp_6;
    struct rt2x00_field32 tmp_7;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 859 
        bool __cond_5 = (_Bool)0;
        
#line 859 
        if ((int)__cond_5 != 0) 
#line 859 
                                __compiletime_assert_859(); else ;
      }
      
#line 859 
      struct rt2x00_field32 __constr_expr_360 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 859 
      tmp_5 = __constr_expr_360;
    }
    
#line 859 
    reg = ~ tmp_5.bit_mask & reg;
    {
      {
        
#line 859 
        bool __cond_6 = (_Bool)0;
        
#line 859 
        if ((int)__cond_6 != 0) 
#line 859 
                                __compiletime_assert_859(); else ;
      }
      
#line 859 
      struct rt2x00_field32 __constr_expr_361 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 859 
      tmp_6 = __constr_expr_361;
    }
    {
      {
        
#line 859 
        bool __cond_7 = (_Bool)0;
        
#line 859 
        if ((int)__cond_7 != 0) 
#line 859 
                                __compiletime_assert_859(); else ;
      }
      
#line 859 
      struct rt2x00_field32 __constr_expr_362 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 859 
      tmp_7 = __constr_expr_362;
    }
    
#line 859 
    reg = ((unsigned int)((int)(rt2x00dev->atim)->limit << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_8;
    struct rt2x00_field32 tmp_9;
    struct rt2x00_field32 tmp_10;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 860 
        bool __cond_8 = (_Bool)0;
        
#line 860 
        if ((int)__cond_8 != 0) 
#line 860 
                                __compiletime_assert_860(); else ;
      }
      
#line 860 
      struct rt2x00_field32 __constr_expr_363 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 860 
      tmp_8 = __constr_expr_363;
    }
    
#line 860 
    reg = ~ tmp_8.bit_mask & reg;
    {
      {
        
#line 860 
        bool __cond_9 = (_Bool)0;
        
#line 860 
        if ((int)__cond_9 != 0) 
#line 860 
                                __compiletime_assert_860(); else ;
      }
      
#line 860 
      struct rt2x00_field32 __constr_expr_364 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 860 
      tmp_9 = __constr_expr_364;
    }
    {
      {
        
#line 860 
        bool __cond_10 = (_Bool)0;
        
#line 860 
        if ((int)__cond_10 != 0) 
#line 860 
                                 __compiletime_assert_860(); else ;
      }
      
#line 860 
      struct rt2x00_field32 __constr_expr_365 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 860 
      tmp_10 = __constr_expr_365;
    }
    
#line 860 
    reg = ((unsigned int)((int)(rt2x00dev->tx)->limit << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
  }
  
#line 861 
  rt2x00mmio_register_write(rt2x00dev,104U,reg);
  
#line 863 
  entry_priv = (struct queue_entry_priv_mmio *)((rt2x00dev->tx + 1U)->entries)->priv_data;
  
#line 864 
  rt2x00mmio_register_read(rt2x00dev,108U,& reg);
  {
    struct rt2x00_field32 tmp_11;
    struct rt2x00_field32 tmp_12;
    struct rt2x00_field32 tmp_13;
    {
      struct rt2x00_field32 __dummy_3;
      struct rt2x00_field32 __dummy2_3;
      
    }
    {
      {
        
#line 865 
        bool __cond_11 = (_Bool)0;
        
#line 865 
        if ((int)__cond_11 != 0) 
#line 865 
                                 __compiletime_assert_866(); else ;
      }
      
#line 865 
      struct rt2x00_field32 __constr_expr_366 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 865 
      tmp_11 = __constr_expr_366;
    }
    
#line 865 
    reg = ~ tmp_11.bit_mask & reg;
    {
      {
        
#line 865 
        bool __cond_12 = (_Bool)0;
        
#line 865 
        if ((int)__cond_12 != 0) 
#line 865 
                                 __compiletime_assert_866(); else ;
      }
      
#line 865 
      struct rt2x00_field32 __constr_expr_367 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 865 
      tmp_12 = __constr_expr_367;
    }
    {
      {
        
#line 865 
        bool __cond_13 = (_Bool)0;
        
#line 865 
        if ((int)__cond_13 != 0) 
#line 865 
                                 __compiletime_assert_866(); else ;
      }
      
#line 865 
      struct rt2x00_field32 __constr_expr_368 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 865 
      tmp_13 = __constr_expr_368;
    }
    
#line 865 
    reg = (unsigned int)((entry_priv->desc_dma << tmp_12.bit_offset) & (unsigned long long)tmp_13.bit_mask) | reg;
  }
  
#line 867 
  rt2x00mmio_register_write(rt2x00dev,108U,reg);
  
#line 869 
  entry_priv = (struct queue_entry_priv_mmio *)((rt2x00dev->tx)->entries)->priv_data;
  
#line 870 
  rt2x00mmio_register_read(rt2x00dev,116U,& reg);
  {
    struct rt2x00_field32 tmp_14;
    struct rt2x00_field32 tmp_15;
    struct rt2x00_field32 tmp_16;
    {
      struct rt2x00_field32 __dummy_4;
      struct rt2x00_field32 __dummy2_4;
      
    }
    {
      {
        
#line 871 
        bool __cond_14 = (_Bool)0;
        
#line 871 
        if ((int)__cond_14 != 0) 
#line 871 
                                 __compiletime_assert_872(); else ;
      }
      
#line 871 
      struct rt2x00_field32 __constr_expr_369 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 871 
      tmp_14 = __constr_expr_369;
    }
    
#line 871 
    reg = ~ tmp_14.bit_mask & reg;
    {
      {
        
#line 871 
        bool __cond_15 = (_Bool)0;
        
#line 871 
        if ((int)__cond_15 != 0) 
#line 871 
                                 __compiletime_assert_872(); else ;
      }
      
#line 871 
      struct rt2x00_field32 __constr_expr_370 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 871 
      tmp_15 = __constr_expr_370;
    }
    {
      {
        
#line 871 
        bool __cond_16 = (_Bool)0;
        
#line 871 
        if ((int)__cond_16 != 0) 
#line 871 
                                 __compiletime_assert_872(); else ;
      }
      
#line 871 
      struct rt2x00_field32 __constr_expr_371 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 871 
      tmp_16 = __constr_expr_371;
    }
    
#line 871 
    reg = (unsigned int)((entry_priv->desc_dma << tmp_15.bit_offset) & (unsigned long long)tmp_16.bit_mask) | reg;
  }
  
#line 873 
  rt2x00mmio_register_write(rt2x00dev,116U,reg);
  
#line 875 
  entry_priv = (struct queue_entry_priv_mmio *)((rt2x00dev->atim)->entries)->priv_data;
  
#line 876 
  rt2x00mmio_register_read(rt2x00dev,112U,& reg);
  {
    struct rt2x00_field32 tmp_17;
    struct rt2x00_field32 tmp_18;
    struct rt2x00_field32 tmp_19;
    {
      struct rt2x00_field32 __dummy_5;
      struct rt2x00_field32 __dummy2_5;
      
    }
    {
      {
        
#line 877 
        bool __cond_17 = (_Bool)0;
        
#line 877 
        if ((int)__cond_17 != 0) 
#line 877 
                                 __compiletime_assert_878(); else ;
      }
      
#line 877 
      struct rt2x00_field32 __constr_expr_372 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 877 
      tmp_17 = __constr_expr_372;
    }
    
#line 877 
    reg = ~ tmp_17.bit_mask & reg;
    {
      {
        
#line 877 
        bool __cond_18 = (_Bool)0;
        
#line 877 
        if ((int)__cond_18 != 0) 
#line 877 
                                 __compiletime_assert_878(); else ;
      }
      
#line 877 
      struct rt2x00_field32 __constr_expr_373 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 877 
      tmp_18 = __constr_expr_373;
    }
    {
      {
        
#line 877 
        bool __cond_19 = (_Bool)0;
        
#line 877 
        if ((int)__cond_19 != 0) 
#line 877 
                                 __compiletime_assert_878(); else ;
      }
      
#line 877 
      struct rt2x00_field32 __constr_expr_374 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 877 
      tmp_19 = __constr_expr_374;
    }
    
#line 877 
    reg = (unsigned int)((entry_priv->desc_dma << tmp_18.bit_offset) & (unsigned long long)tmp_19.bit_mask) | reg;
  }
  
#line 879 
  rt2x00mmio_register_write(rt2x00dev,112U,reg);
  
#line 881 
  entry_priv = (struct queue_entry_priv_mmio *)((rt2x00dev->bcn)->entries)->priv_data;
  
#line 882 
  rt2x00mmio_register_read(rt2x00dev,120U,& reg);
  {
    struct rt2x00_field32 tmp_20;
    struct rt2x00_field32 tmp_21;
    struct rt2x00_field32 tmp_22;
    {
      struct rt2x00_field32 __dummy_6;
      struct rt2x00_field32 __dummy2_6;
      
    }
    {
      {
        
#line 883 
        bool __cond_20 = (_Bool)0;
        
#line 883 
        if ((int)__cond_20 != 0) 
#line 883 
                                 __compiletime_assert_884(); else ;
      }
      
#line 883 
      struct rt2x00_field32 __constr_expr_375 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 883 
      tmp_20 = __constr_expr_375;
    }
    
#line 883 
    reg = ~ tmp_20.bit_mask & reg;
    {
      {
        
#line 883 
        bool __cond_21 = (_Bool)0;
        
#line 883 
        if ((int)__cond_21 != 0) 
#line 883 
                                 __compiletime_assert_884(); else ;
      }
      
#line 883 
      struct rt2x00_field32 __constr_expr_376 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 883 
      tmp_21 = __constr_expr_376;
    }
    {
      {
        
#line 883 
        bool __cond_22 = (_Bool)0;
        
#line 883 
        if ((int)__cond_22 != 0) 
#line 883 
                                 __compiletime_assert_884(); else ;
      }
      
#line 883 
      struct rt2x00_field32 __constr_expr_377 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 883 
      tmp_22 = __constr_expr_377;
    }
    
#line 883 
    reg = (unsigned int)((entry_priv->desc_dma << tmp_21.bit_offset) & (unsigned long long)tmp_22.bit_mask) | reg;
  }
  
#line 885 
  rt2x00mmio_register_write(rt2x00dev,120U,reg);
  
#line 887 
  rt2x00mmio_register_read(rt2x00dev,132U,& reg);
  {
    struct rt2x00_field32 tmp_23;
    struct rt2x00_field32 tmp_24;
    struct rt2x00_field32 tmp_25;
    {
      struct rt2x00_field32 __dummy_7;
      struct rt2x00_field32 __dummy2_7;
      
    }
    {
      {
        
#line 888 
        bool __cond_23 = (_Bool)0;
        
#line 888 
        if ((int)__cond_23 != 0) 
#line 888 
                                 __compiletime_assert_888(); else ;
      }
      
#line 888 
      struct rt2x00_field32 __constr_expr_378 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 888 
      tmp_23 = __constr_expr_378;
    }
    
#line 888 
    reg = ~ tmp_23.bit_mask & reg;
    {
      {
        
#line 888 
        bool __cond_24 = (_Bool)0;
        
#line 888 
        if ((int)__cond_24 != 0) 
#line 888 
                                 __compiletime_assert_888(); else ;
      }
      
#line 888 
      struct rt2x00_field32 __constr_expr_379 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 888 
      tmp_24 = __constr_expr_379;
    }
    {
      {
        
#line 888 
        bool __cond_25 = (_Bool)0;
        
#line 888 
        if ((int)__cond_25 != 0) 
#line 888 
                                 __compiletime_assert_888(); else ;
      }
      
#line 888 
      struct rt2x00_field32 __constr_expr_380 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 888 
      tmp_25 = __constr_expr_380;
    }
    
#line 888 
    reg = ((unsigned int)((int)(rt2x00dev->rx)->desc_size << tmp_24.bit_offset) & tmp_25.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_26;
    struct rt2x00_field32 tmp_27;
    struct rt2x00_field32 tmp_28;
    {
      struct rt2x00_field32 __dummy_8;
      struct rt2x00_field32 __dummy2_8;
      
    }
    {
      {
        
#line 889 
        bool __cond_26 = (_Bool)0;
        
#line 889 
        if ((int)__cond_26 != 0) 
#line 889 
                                 __compiletime_assert_889(); else ;
      }
      
#line 889 
      struct rt2x00_field32 __constr_expr_381 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 889 
      tmp_26 = __constr_expr_381;
    }
    
#line 889 
    reg = ~ tmp_26.bit_mask & reg;
    {
      {
        
#line 889 
        bool __cond_27 = (_Bool)0;
        
#line 889 
        if ((int)__cond_27 != 0) 
#line 889 
                                 __compiletime_assert_889(); else ;
      }
      
#line 889 
      struct rt2x00_field32 __constr_expr_382 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 889 
      tmp_27 = __constr_expr_382;
    }
    {
      {
        
#line 889 
        bool __cond_28 = (_Bool)0;
        
#line 889 
        if ((int)__cond_28 != 0) 
#line 889 
                                 __compiletime_assert_889(); else ;
      }
      
#line 889 
      struct rt2x00_field32 __constr_expr_383 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 889 
      tmp_28 = __constr_expr_383;
    }
    
#line 889 
    reg = ((unsigned int)((int)(rt2x00dev->rx)->limit << tmp_27.bit_offset) & tmp_28.bit_mask) | reg;
  }
  
#line 890 
  rt2x00mmio_register_write(rt2x00dev,132U,reg);
  
#line 892 
  entry_priv = (struct queue_entry_priv_mmio *)((rt2x00dev->rx)->entries)->priv_data;
  
#line 893 
  rt2x00mmio_register_read(rt2x00dev,136U,& reg);
  {
    struct rt2x00_field32 tmp_29;
    struct rt2x00_field32 tmp_30;
    struct rt2x00_field32 tmp_31;
    {
      struct rt2x00_field32 __dummy_9;
      struct rt2x00_field32 __dummy2_9;
      
    }
    {
      {
        
#line 894 
        bool __cond_29 = (_Bool)0;
        
#line 894 
        if ((int)__cond_29 != 0) 
#line 894 
                                 __compiletime_assert_895(); else ;
      }
      
#line 894 
      struct rt2x00_field32 __constr_expr_384 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 894 
      tmp_29 = __constr_expr_384;
    }
    
#line 894 
    reg = ~ tmp_29.bit_mask & reg;
    {
      {
        
#line 894 
        bool __cond_30 = (_Bool)0;
        
#line 894 
        if ((int)__cond_30 != 0) 
#line 894 
                                 __compiletime_assert_895(); else ;
      }
      
#line 894 
      struct rt2x00_field32 __constr_expr_385 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 894 
      tmp_30 = __constr_expr_385;
    }
    {
      {
        
#line 894 
        bool __cond_31 = (_Bool)0;
        
#line 894 
        if ((int)__cond_31 != 0) 
#line 894 
                                 __compiletime_assert_895(); else ;
      }
      
#line 894 
      struct rt2x00_field32 __constr_expr_386 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 894 
      tmp_31 = __constr_expr_386;
    }
    
#line 894 
    reg = (unsigned int)((entry_priv->desc_dma << tmp_30.bit_offset) & (unsigned long long)tmp_31.bit_mask) | reg;
  }
  
#line 896 
  rt2x00mmio_register_write(rt2x00dev,136U,reg);
  
#line 898 
  __retres = 0;
  
#line 898 
  return __retres;
}


#line 911 
void __compiletime_assert_911(void);


#line 912 
void __compiletime_assert_912(void);


#line 913 
void __compiletime_assert_913(void);


#line 917 
void __compiletime_assert_918(void);


#line 925 
void __compiletime_assert_925(void);


#line 929 
void __compiletime_assert_929(void);


#line 930 
void __compiletime_assert_930(void);


#line 931 
void __compiletime_assert_931(void);


#line 932 
void __compiletime_assert_932(void);


#line 933 
void __compiletime_assert_933(void);


#line 934 
void __compiletime_assert_934(void);


#line 935 
void __compiletime_assert_935(void);


#line 936 
void __compiletime_assert_936(void);


#line 942 
void __compiletime_assert_942(void);


#line 943 
void __compiletime_assert_943(void);


#line 944 
void __compiletime_assert_944(void);


#line 945 
void __compiletime_assert_945(void);


#line 946 
void __compiletime_assert_946(void);


#line 947 
void __compiletime_assert_947(void);


#line 949 
void __compiletime_assert_949(void);


#line 953 
void __compiletime_assert_953(void);


#line 954 
void __compiletime_assert_954(void);


#line 955 
void __compiletime_assert_955(void);


#line 956 
void __compiletime_assert_956(void);


#line 960 
void __compiletime_assert_960(void);


#line 961 
void __compiletime_assert_961(void);


#line 962 
void __compiletime_assert_962(void);


#line 963 
void __compiletime_assert_963(void);


#line 967 
void __compiletime_assert_967(void);


#line 968 
void __compiletime_assert_968(void);


#line 969 
void __compiletime_assert_969(void);


#line 970 
void __compiletime_assert_970(void);


#line 974 
void __compiletime_assert_974(void);


#line 975 
void __compiletime_assert_975(void);


#line 976 
void __compiletime_assert_976(void);


#line 977 
void __compiletime_assert_977(void);


#line 978 
void __compiletime_assert_978(void);


#line 979 
void __compiletime_assert_979(void);


#line 980 
void __compiletime_assert_980(void);


#line 981 
void __compiletime_assert_981(void);


#line 985 
void __compiletime_assert_985(void);


#line 986 
void __compiletime_assert_986(void);


#line 987 
void __compiletime_assert_987(void);


#line 988 
void __compiletime_assert_988(void);


#line 989 
void __compiletime_assert_989(void);


#line 990 
void __compiletime_assert_990(void);


#line 991 
void __compiletime_assert_991(void);


#line 1006 
void __compiletime_assert_1006(void);


#line 1010 
void __compiletime_assert_1010(void);


#line 1011 
void __compiletime_assert_1011(void);


#line 1012 
void __compiletime_assert_1012(void);


#line 1013 
void __compiletime_assert_1013(void);


#line 1014 
void __compiletime_assert_1014(void);


#line 1015 
void __compiletime_assert_1015(void);


#line 1023 
void __compiletime_assert_1023(void);


#line 1024 
void __compiletime_assert_1024(void);


#line 1025 
void __compiletime_assert_1025(void);


#line 1029 
void __compiletime_assert_1029(void);


#line 1030 
void __compiletime_assert_1030(void);


#line 901  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_init_registers(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  u32 reg;
  int tmp_143;
  
#line 905 
  rt2x00mmio_register_write(rt2x00dev,200U,131074U);
  
#line 906 
  rt2x00mmio_register_write(rt2x00dev,204U,2U);
  
#line 907 
  rt2x00mmio_register_write(rt2x00dev,208U,131074U);
  
#line 908 
  rt2x00mmio_register_write(rt2x00dev,212U,2U);
  
#line 910 
  rt2x00mmio_register_read(rt2x00dev,220U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 911 
        bool __cond = (_Bool)0;
        
#line 911 
        if ((int)__cond != 0) 
#line 911 
                              __compiletime_assert_911(); else ;
      }
      
#line 911 
      struct rt2x00_field32 __constr_expr_387 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 911 
      tmp = __constr_expr_387;
    }
    
#line 911 
    reg = ~ tmp.bit_mask & reg;
    {
      {
        
#line 911 
        bool __cond_0 = (_Bool)0;
        
#line 911 
        if ((int)__cond_0 != 0) 
#line 911 
                                __compiletime_assert_911(); else ;
      }
      
#line 911 
      struct rt2x00_field32 __constr_expr_388 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 911 
      tmp_0 = __constr_expr_388;
    }
    {
      {
        
#line 911 
        bool __cond_1 = (_Bool)0;
        
#line 911 
        if ((int)__cond_1 != 0) 
#line 911 
                                __compiletime_assert_911(); else ;
      }
      
#line 911 
      struct rt2x00_field32 __constr_expr_389 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 911 
      tmp_1 = __constr_expr_389;
    }
    
#line 911 
    reg = ((unsigned int)(33 << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 912 
        bool __cond_2 = (_Bool)0;
        
#line 912 
        if ((int)__cond_2 != 0) 
#line 912 
                                __compiletime_assert_912(); else ;
      }
      
#line 912 
      struct rt2x00_field32 __constr_expr_390 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 912 
      tmp_2 = __constr_expr_390;
    }
    
#line 912 
    reg = ~ tmp_2.bit_mask & reg;
    {
      {
        
#line 912 
        bool __cond_3 = (_Bool)0;
        
#line 912 
        if ((int)__cond_3 != 0) 
#line 912 
                                __compiletime_assert_912(); else ;
      }
      
#line 912 
      struct rt2x00_field32 __constr_expr_391 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 912 
      tmp_3 = __constr_expr_391;
    }
    {
      {
        
#line 912 
        bool __cond_4 = (_Bool)0;
        
#line 912 
        if ((int)__cond_4 != 0) 
#line 912 
                                __compiletime_assert_912(); else ;
      }
      
#line 912 
      struct rt2x00_field32 __constr_expr_392 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 912 
      tmp_4 = __constr_expr_392;
    }
    
#line 912 
    reg = ((unsigned int)(63 << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_5;
    struct rt2x00_field32 tmp_6;
    struct rt2x00_field32 tmp_7;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 913 
        bool __cond_5 = (_Bool)0;
        
#line 913 
        if ((int)__cond_5 != 0) 
#line 913 
                                __compiletime_assert_913(); else ;
      }
      
#line 913 
      struct rt2x00_field32 __constr_expr_393 = {.bit_offset = 16U, .bit_mask = 458752U};
      
#line 913 
      tmp_5 = __constr_expr_393;
    }
    
#line 913 
    reg = ~ tmp_5.bit_mask & reg;
    {
      {
        
#line 913 
        bool __cond_6 = (_Bool)0;
        
#line 913 
        if ((int)__cond_6 != 0) 
#line 913 
                                __compiletime_assert_913(); else ;
      }
      
#line 913 
      struct rt2x00_field32 __constr_expr_394 = {.bit_offset = 16U, .bit_mask = 458752U};
      
#line 913 
      tmp_6 = __constr_expr_394;
    }
    {
      {
        
#line 913 
        bool __cond_7 = (_Bool)0;
        
#line 913 
        if ((int)__cond_7 != 0) 
#line 913 
                                __compiletime_assert_913(); else ;
      }
      
#line 913 
      struct rt2x00_field32 __constr_expr_395 = {.bit_offset = 16U, .bit_mask = 458752U};
      
#line 913 
      tmp_7 = __constr_expr_395;
    }
    
#line 913 
    reg = 0U | reg;
  }
  
#line 914 
  rt2x00mmio_register_write(rt2x00dev,220U,reg);
  
#line 916 
  rt2x00mmio_register_read(rt2x00dev,36U,& reg);
  {
    struct rt2x00_field32 tmp_8;
    struct rt2x00_field32 tmp_9;
    struct rt2x00_field32 tmp_10;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 917 
        bool __cond_8 = (_Bool)0;
        
#line 917 
        if ((int)__cond_8 != 0) 
#line 917 
                                __compiletime_assert_918(); else ;
      }
      
#line 917 
      struct rt2x00_field32 __constr_expr_396 = {.bit_offset = 7U, .bit_mask = 3968U};
      
#line 917 
      tmp_8 = __constr_expr_396;
    }
    
#line 917 
    reg = ~ tmp_8.bit_mask & reg;
    {
      {
        
#line 917 
        bool __cond_9 = (_Bool)0;
        
#line 917 
        if ((int)__cond_9 != 0) 
#line 917 
                                __compiletime_assert_918(); else ;
      }
      
#line 917 
      struct rt2x00_field32 __constr_expr_397 = {.bit_offset = 7U, .bit_mask = 3968U};
      
#line 917 
      tmp_9 = __constr_expr_397;
    }
    {
      {
        
#line 917 
        bool __cond_10 = (_Bool)0;
        
#line 917 
        if ((int)__cond_10 != 0) 
#line 917 
                                 __compiletime_assert_918(); else ;
      }
      
#line 917 
      struct rt2x00_field32 __constr_expr_398 = {.bit_offset = 7U, .bit_mask = 3968U};
      
#line 917 
      tmp_10 = __constr_expr_398;
    }
    
#line 917 
    reg = ((unsigned int)((int)((unsigned int)(rt2x00dev->rx)->data_size / 128U) << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
  }
  
#line 919 
  rt2x00mmio_register_write(rt2x00dev,36U,reg);
  
#line 924 
  rt2x00mmio_register_read(rt2x00dev,44U,& reg);
  {
    struct rt2x00_field32 tmp_11;
    struct rt2x00_field32 tmp_12;
    struct rt2x00_field32 tmp_13;
    {
      struct rt2x00_field32 __dummy_3;
      struct rt2x00_field32 __dummy2_3;
      
    }
    {
      {
        
#line 925 
        bool __cond_11 = (_Bool)0;
        
#line 925 
        if ((int)__cond_11 != 0) 
#line 925 
                                 __compiletime_assert_925(); else ;
      }
      
#line 925 
      struct rt2x00_field32 __constr_expr_399 = {.bit_offset = 13U, .bit_mask = 8192U};
      
#line 925 
      tmp_11 = __constr_expr_399;
    }
    
#line 925 
    reg = ~ tmp_11.bit_mask & reg;
    {
      {
        
#line 925 
        bool __cond_12 = (_Bool)0;
        
#line 925 
        if ((int)__cond_12 != 0) 
#line 925 
                                 __compiletime_assert_925(); else ;
      }
      
#line 925 
      struct rt2x00_field32 __constr_expr_400 = {.bit_offset = 13U, .bit_mask = 8192U};
      
#line 925 
      tmp_12 = __constr_expr_400;
    }
    {
      {
        
#line 925 
        bool __cond_13 = (_Bool)0;
        
#line 925 
        if ((int)__cond_13 != 0) 
#line 925 
                                 __compiletime_assert_925(); else ;
      }
      
#line 925 
      struct rt2x00_field32 __constr_expr_401 = {.bit_offset = 13U, .bit_mask = 8192U};
      
#line 925 
      tmp_13 = __constr_expr_401;
    }
    
#line 925 
    reg = 0U | reg;
  }
  
#line 926 
  rt2x00mmio_register_write(rt2x00dev,44U,reg);
  
#line 928 
  rt2x00mmio_register_read(rt2x00dev,56U,& reg);
  {
    struct rt2x00_field32 tmp_14;
    struct rt2x00_field32 tmp_15;
    struct rt2x00_field32 tmp_16;
    {
      struct rt2x00_field32 __dummy_4;
      struct rt2x00_field32 __dummy2_4;
      
    }
    {
      {
        
#line 929 
        bool __cond_14 = (_Bool)0;
        
#line 929 
        if ((int)__cond_14 != 0) 
#line 929 
                                 __compiletime_assert_929(); else ;
      }
      
#line 929 
      struct rt2x00_field32 __constr_expr_402 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 929 
      tmp_14 = __constr_expr_402;
    }
    
#line 929 
    reg = ~ tmp_14.bit_mask & reg;
    {
      {
        
#line 929 
        bool __cond_15 = (_Bool)0;
        
#line 929 
        if ((int)__cond_15 != 0) 
#line 929 
                                 __compiletime_assert_929(); else ;
      }
      
#line 929 
      struct rt2x00_field32 __constr_expr_403 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 929 
      tmp_15 = __constr_expr_403;
    }
    {
      {
        
#line 929 
        bool __cond_16 = (_Bool)0;
        
#line 929 
        if ((int)__cond_16 != 0) 
#line 929 
                                 __compiletime_assert_929(); else ;
      }
      
#line 929 
      struct rt2x00_field32 __constr_expr_404 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 929 
      tmp_16 = __constr_expr_404;
    }
    
#line 929 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_17;
    struct rt2x00_field32 tmp_18;
    struct rt2x00_field32 tmp_19;
    {
      struct rt2x00_field32 __dummy_5;
      struct rt2x00_field32 __dummy2_5;
      
    }
    {
      {
        
#line 930 
        bool __cond_17 = (_Bool)0;
        
#line 930 
        if ((int)__cond_17 != 0) 
#line 930 
                                 __compiletime_assert_930(); else ;
      }
      
#line 930 
      struct rt2x00_field32 __constr_expr_405 = {.bit_offset = 1U, .bit_mask = 6U};
      
#line 930 
      tmp_17 = __constr_expr_405;
    }
    
#line 930 
    reg = ~ tmp_17.bit_mask & reg;
    {
      {
        
#line 930 
        bool __cond_18 = (_Bool)0;
        
#line 930 
        if ((int)__cond_18 != 0) 
#line 930 
                                 __compiletime_assert_930(); else ;
      }
      
#line 930 
      struct rt2x00_field32 __constr_expr_406 = {.bit_offset = 1U, .bit_mask = 6U};
      
#line 930 
      tmp_18 = __constr_expr_406;
    }
    {
      {
        
#line 930 
        bool __cond_19 = (_Bool)0;
        
#line 930 
        if ((int)__cond_19 != 0) 
#line 930 
                                 __compiletime_assert_930(); else ;
      }
      
#line 930 
      struct rt2x00_field32 __constr_expr_407 = {.bit_offset = 1U, .bit_mask = 6U};
      
#line 930 
      tmp_19 = __constr_expr_407;
    }
    
#line 930 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_20;
    struct rt2x00_field32 tmp_21;
    struct rt2x00_field32 tmp_22;
    {
      struct rt2x00_field32 __dummy_6;
      struct rt2x00_field32 __dummy2_6;
      
    }
    {
      {
        
#line 931 
        bool __cond_20 = (_Bool)0;
        
#line 931 
        if ((int)__cond_20 != 0) 
#line 931 
                                 __compiletime_assert_931(); else ;
      }
      
#line 931 
      struct rt2x00_field32 __constr_expr_408 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 931 
      tmp_20 = __constr_expr_408;
    }
    
#line 931 
    reg = ~ tmp_20.bit_mask & reg;
    {
      {
        
#line 931 
        bool __cond_21 = (_Bool)0;
        
#line 931 
        if ((int)__cond_21 != 0) 
#line 931 
                                 __compiletime_assert_931(); else ;
      }
      
#line 931 
      struct rt2x00_field32 __constr_expr_409 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 931 
      tmp_21 = __constr_expr_409;
    }
    {
      {
        
#line 931 
        bool __cond_22 = (_Bool)0;
        
#line 931 
        if ((int)__cond_22 != 0) 
#line 931 
                                 __compiletime_assert_931(); else ;
      }
      
#line 931 
      struct rt2x00_field32 __constr_expr_410 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 931 
      tmp_22 = __constr_expr_410;
    }
    
#line 931 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_23;
    struct rt2x00_field32 tmp_24;
    struct rt2x00_field32 tmp_25;
    {
      struct rt2x00_field32 __dummy_7;
      struct rt2x00_field32 __dummy2_7;
      
    }
    {
      {
        
#line 932 
        bool __cond_23 = (_Bool)0;
        
#line 932 
        if ((int)__cond_23 != 0) 
#line 932 
                                 __compiletime_assert_932(); else ;
      }
      
#line 932 
      struct rt2x00_field32 __constr_expr_411 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 932 
      tmp_23 = __constr_expr_411;
    }
    
#line 932 
    reg = ~ tmp_23.bit_mask & reg;
    {
      {
        
#line 932 
        bool __cond_24 = (_Bool)0;
        
#line 932 
        if ((int)__cond_24 != 0) 
#line 932 
                                 __compiletime_assert_932(); else ;
      }
      
#line 932 
      struct rt2x00_field32 __constr_expr_412 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 932 
      tmp_24 = __constr_expr_412;
    }
    {
      {
        
#line 932 
        bool __cond_25 = (_Bool)0;
        
#line 932 
        if ((int)__cond_25 != 0) 
#line 932 
                                 __compiletime_assert_932(); else ;
      }
      
#line 932 
      struct rt2x00_field32 __constr_expr_413 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 932 
      tmp_25 = __constr_expr_413;
    }
    
#line 932 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_26;
    struct rt2x00_field32 tmp_27;
    struct rt2x00_field32 tmp_28;
    {
      struct rt2x00_field32 __dummy_8;
      struct rt2x00_field32 __dummy2_8;
      
    }
    {
      {
        
#line 933 
        bool __cond_26 = (_Bool)0;
        
#line 933 
        if ((int)__cond_26 != 0) 
#line 933 
                                 __compiletime_assert_933(); else ;
      }
      
#line 933 
      struct rt2x00_field32 __constr_expr_414 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 933 
      tmp_26 = __constr_expr_414;
    }
    
#line 933 
    reg = ~ tmp_26.bit_mask & reg;
    {
      {
        
#line 933 
        bool __cond_27 = (_Bool)0;
        
#line 933 
        if ((int)__cond_27 != 0) 
#line 933 
                                 __compiletime_assert_933(); else ;
      }
      
#line 933 
      struct rt2x00_field32 __constr_expr_415 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 933 
      tmp_27 = __constr_expr_415;
    }
    {
      {
        
#line 933 
        bool __cond_28 = (_Bool)0;
        
#line 933 
        if ((int)__cond_28 != 0) 
#line 933 
                                 __compiletime_assert_933(); else ;
      }
      
#line 933 
      struct rt2x00_field32 __constr_expr_416 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 933 
      tmp_28 = __constr_expr_416;
    }
    
#line 933 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_29;
    struct rt2x00_field32 tmp_30;
    struct rt2x00_field32 tmp_31;
    {
      struct rt2x00_field32 __dummy_9;
      struct rt2x00_field32 __dummy2_9;
      
    }
    {
      {
        
#line 934 
        bool __cond_29 = (_Bool)0;
        
#line 934 
        if ((int)__cond_29 != 0) 
#line 934 
                                 __compiletime_assert_934(); else ;
      }
      
#line 934 
      struct rt2x00_field32 __constr_expr_417 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 934 
      tmp_29 = __constr_expr_417;
    }
    
#line 934 
    reg = ~ tmp_29.bit_mask & reg;
    {
      {
        
#line 934 
        bool __cond_30 = (_Bool)0;
        
#line 934 
        if ((int)__cond_30 != 0) 
#line 934 
                                 __compiletime_assert_934(); else ;
      }
      
#line 934 
      struct rt2x00_field32 __constr_expr_418 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 934 
      tmp_30 = __constr_expr_418;
    }
    {
      {
        
#line 934 
        bool __cond_31 = (_Bool)0;
        
#line 934 
        if ((int)__cond_31 != 0) 
#line 934 
                                 __compiletime_assert_934(); else ;
      }
      
#line 934 
      struct rt2x00_field32 __constr_expr_419 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 934 
      tmp_31 = __constr_expr_419;
    }
    
#line 934 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_32;
    struct rt2x00_field32 tmp_33;
    struct rt2x00_field32 tmp_34;
    {
      struct rt2x00_field32 __dummy_10;
      struct rt2x00_field32 __dummy2_10;
      
    }
    {
      {
        
#line 935 
        bool __cond_32 = (_Bool)0;
        
#line 935 
        if ((int)__cond_32 != 0) 
#line 935 
                                 __compiletime_assert_935(); else ;
      }
      
#line 935 
      struct rt2x00_field32 __constr_expr_420 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 935 
      tmp_32 = __constr_expr_420;
    }
    
#line 935 
    reg = ~ tmp_32.bit_mask & reg;
    {
      {
        
#line 935 
        bool __cond_33 = (_Bool)0;
        
#line 935 
        if ((int)__cond_33 != 0) 
#line 935 
                                 __compiletime_assert_935(); else ;
      }
      
#line 935 
      struct rt2x00_field32 __constr_expr_421 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 935 
      tmp_33 = __constr_expr_421;
    }
    {
      {
        
#line 935 
        bool __cond_34 = (_Bool)0;
        
#line 935 
        if ((int)__cond_34 != 0) 
#line 935 
                                 __compiletime_assert_935(); else ;
      }
      
#line 935 
      struct rt2x00_field32 __constr_expr_422 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 935 
      tmp_34 = __constr_expr_422;
    }
    
#line 935 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_35;
    struct rt2x00_field32 tmp_36;
    struct rt2x00_field32 tmp_37;
    {
      struct rt2x00_field32 __dummy_11;
      struct rt2x00_field32 __dummy2_11;
      
    }
    {
      {
        
#line 936 
        bool __cond_35 = (_Bool)0;
        
#line 936 
        if ((int)__cond_35 != 0) 
#line 936 
                                 __compiletime_assert_936(); else ;
      }
      
#line 936 
      struct rt2x00_field32 __constr_expr_423 = {.bit_offset = 16U, .bit_mask = 4294901760U};
      
#line 936 
      tmp_35 = __constr_expr_423;
    }
    
#line 936 
    reg = ~ tmp_35.bit_mask & reg;
    {
      {
        
#line 936 
        bool __cond_36 = (_Bool)0;
        
#line 936 
        if ((int)__cond_36 != 0) 
#line 936 
                                 __compiletime_assert_936(); else ;
      }
      
#line 936 
      struct rt2x00_field32 __constr_expr_424 = {.bit_offset = 16U, .bit_mask = 4294901760U};
      
#line 936 
      tmp_36 = __constr_expr_424;
    }
    {
      {
        
#line 936 
        bool __cond_37 = (_Bool)0;
        
#line 936 
        if ((int)__cond_37 != 0) 
#line 936 
                                 __compiletime_assert_936(); else ;
      }
      
#line 936 
      struct rt2x00_field32 __constr_expr_425 = {.bit_offset = 16U, .bit_mask = 4294901760U};
      
#line 936 
      tmp_37 = __constr_expr_425;
    }
    
#line 936 
    reg = 0U | reg;
  }
  
#line 937 
  rt2x00mmio_register_write(rt2x00dev,56U,reg);
  
#line 939 
  rt2x00mmio_register_write(rt2x00dev,184U,0U);
  
#line 941 
  rt2x00mmio_register_read(rt2x00dev,152U,& reg);
  {
    struct rt2x00_field32 tmp_38;
    struct rt2x00_field32 tmp_39;
    struct rt2x00_field32 tmp_40;
    {
      struct rt2x00_field32 __dummy_12;
      struct rt2x00_field32 __dummy2_12;
      
    }
    {
      {
        
#line 942 
        bool __cond_38 = (_Bool)0;
        
#line 942 
        if ((int)__cond_38 != 0) 
#line 942 
                                 __compiletime_assert_942(); else ;
      }
      
#line 942 
      struct rt2x00_field32 __constr_expr_426 = {.bit_offset = 0U, .bit_mask = 127U};
      
#line 942 
      tmp_38 = __constr_expr_426;
    }
    
#line 942 
    reg = ~ tmp_38.bit_mask & reg;
    {
      {
        
#line 942 
        bool __cond_39 = (_Bool)0;
        
#line 942 
        if ((int)__cond_39 != 0) 
#line 942 
                                 __compiletime_assert_942(); else ;
      }
      
#line 942 
      struct rt2x00_field32 __constr_expr_427 = {.bit_offset = 0U, .bit_mask = 127U};
      
#line 942 
      tmp_39 = __constr_expr_427;
    }
    {
      {
        
#line 942 
        bool __cond_40 = (_Bool)0;
        
#line 942 
        if ((int)__cond_40 != 0) 
#line 942 
                                 __compiletime_assert_942(); else ;
      }
      
#line 942 
      struct rt2x00_field32 __constr_expr_428 = {.bit_offset = 0U, .bit_mask = 127U};
      
#line 942 
      tmp_40 = __constr_expr_428;
    }
    
#line 942 
    reg = ((unsigned int)(10 << tmp_39.bit_offset) & tmp_40.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_41;
    struct rt2x00_field32 tmp_42;
    struct rt2x00_field32 tmp_43;
    {
      struct rt2x00_field32 __dummy_13;
      struct rt2x00_field32 __dummy2_13;
      
    }
    {
      {
        
#line 943 
        bool __cond_41 = (_Bool)0;
        
#line 943 
        if ((int)__cond_41 != 0) 
#line 943 
                                 __compiletime_assert_943(); else ;
      }
      
#line 943 
      struct rt2x00_field32 __constr_expr_429 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 943 
      tmp_41 = __constr_expr_429;
    }
    
#line 943 
    reg = ~ tmp_41.bit_mask & reg;
    {
      {
        
#line 943 
        bool __cond_42 = (_Bool)0;
        
#line 943 
        if ((int)__cond_42 != 0) 
#line 943 
                                 __compiletime_assert_943(); else ;
      }
      
#line 943 
      struct rt2x00_field32 __constr_expr_430 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 943 
      tmp_42 = __constr_expr_430;
    }
    {
      {
        
#line 943 
        bool __cond_43 = (_Bool)0;
        
#line 943 
        if ((int)__cond_43 != 0) 
#line 943 
                                 __compiletime_assert_943(); else ;
      }
      
#line 943 
      struct rt2x00_field32 __constr_expr_431 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 943 
      tmp_43 = __constr_expr_431;
    }
    
#line 943 
    reg = ((unsigned int)(1 << tmp_42.bit_offset) & tmp_43.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_44;
    struct rt2x00_field32 tmp_45;
    struct rt2x00_field32 tmp_46;
    {
      struct rt2x00_field32 __dummy_14;
      struct rt2x00_field32 __dummy2_14;
      
    }
    {
      {
        
#line 944 
        bool __cond_44 = (_Bool)0;
        
#line 944 
        if ((int)__cond_44 != 0) 
#line 944 
                                 __compiletime_assert_944(); else ;
      }
      
#line 944 
      struct rt2x00_field32 __constr_expr_432 = {.bit_offset = 8U, .bit_mask = 32512U};
      
#line 944 
      tmp_44 = __constr_expr_432;
    }
    
#line 944 
    reg = ~ tmp_44.bit_mask & reg;
    {
      {
        
#line 944 
        bool __cond_45 = (_Bool)0;
        
#line 944 
        if ((int)__cond_45 != 0) 
#line 944 
                                 __compiletime_assert_944(); else ;
      }
      
#line 944 
      struct rt2x00_field32 __constr_expr_433 = {.bit_offset = 8U, .bit_mask = 32512U};
      
#line 944 
      tmp_45 = __constr_expr_433;
    }
    {
      {
        
#line 944 
        bool __cond_46 = (_Bool)0;
        
#line 944 
        if ((int)__cond_46 != 0) 
#line 944 
                                 __compiletime_assert_944(); else ;
      }
      
#line 944 
      struct rt2x00_field32 __constr_expr_434 = {.bit_offset = 8U, .bit_mask = 32512U};
      
#line 944 
      tmp_46 = __constr_expr_434;
    }
    
#line 944 
    reg = ((unsigned int)(11 << tmp_45.bit_offset) & tmp_46.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_47;
    struct rt2x00_field32 tmp_48;
    struct rt2x00_field32 tmp_49;
    {
      struct rt2x00_field32 __dummy_15;
      struct rt2x00_field32 __dummy2_15;
      
    }
    {
      {
        
#line 945 
        bool __cond_47 = (_Bool)0;
        
#line 945 
        if ((int)__cond_47 != 0) 
#line 945 
                                 __compiletime_assert_945(); else ;
      }
      
#line 945 
      struct rt2x00_field32 __constr_expr_435 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 945 
      tmp_47 = __constr_expr_435;
    }
    
#line 945 
    reg = ~ tmp_47.bit_mask & reg;
    {
      {
        
#line 945 
        bool __cond_48 = (_Bool)0;
        
#line 945 
        if ((int)__cond_48 != 0) 
#line 945 
                                 __compiletime_assert_945(); else ;
      }
      
#line 945 
      struct rt2x00_field32 __constr_expr_436 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 945 
      tmp_48 = __constr_expr_436;
    }
    {
      {
        
#line 945 
        bool __cond_49 = (_Bool)0;
        
#line 945 
        if ((int)__cond_49 != 0) 
#line 945 
                                 __compiletime_assert_945(); else ;
      }
      
#line 945 
      struct rt2x00_field32 __constr_expr_437 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 945 
      tmp_49 = __constr_expr_437;
    }
    
#line 945 
    reg = ((unsigned int)(1 << tmp_48.bit_offset) & tmp_49.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_50;
    struct rt2x00_field32 tmp_51;
    struct rt2x00_field32 tmp_52;
    {
      struct rt2x00_field32 __dummy_16;
      struct rt2x00_field32 __dummy2_16;
      
    }
    {
      {
        
#line 946 
        bool __cond_50 = (_Bool)0;
        
#line 946 
        if ((int)__cond_50 != 0) 
#line 946 
                                 __compiletime_assert_946(); else ;
      }
      
#line 946 
      struct rt2x00_field32 __constr_expr_438 = {.bit_offset = 16U, .bit_mask = 8323072U};
      
#line 946 
      tmp_50 = __constr_expr_438;
    }
    
#line 946 
    reg = ~ tmp_50.bit_mask & reg;
    {
      {
        
#line 946 
        bool __cond_51 = (_Bool)0;
        
#line 946 
        if ((int)__cond_51 != 0) 
#line 946 
                                 __compiletime_assert_946(); else ;
      }
      
#line 946 
      struct rt2x00_field32 __constr_expr_439 = {.bit_offset = 16U, .bit_mask = 8323072U};
      
#line 946 
      tmp_51 = __constr_expr_439;
    }
    {
      {
        
#line 946 
        bool __cond_52 = (_Bool)0;
        
#line 946 
        if ((int)__cond_52 != 0) 
#line 946 
                                 __compiletime_assert_946(); else ;
      }
      
#line 946 
      struct rt2x00_field32 __constr_expr_440 = {.bit_offset = 16U, .bit_mask = 8323072U};
      
#line 946 
      tmp_52 = __constr_expr_440;
    }
    
#line 946 
    reg = ((unsigned int)(13 << tmp_51.bit_offset) & tmp_52.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_53;
    struct rt2x00_field32 tmp_54;
    struct rt2x00_field32 tmp_55;
    {
      struct rt2x00_field32 __dummy_17;
      struct rt2x00_field32 __dummy2_17;
      
    }
    {
      {
        
#line 947 
        bool __cond_53 = (_Bool)0;
        
#line 947 
        if ((int)__cond_53 != 0) 
#line 947 
                                 __compiletime_assert_947(); else ;
      }
      
#line 947 
      struct rt2x00_field32 __constr_expr_441 = {.bit_offset = 23U, .bit_mask = 8388608U};
      
#line 947 
      tmp_53 = __constr_expr_441;
    }
    
#line 947 
    reg = ~ tmp_53.bit_mask & reg;
    {
      {
        
#line 947 
        bool __cond_54 = (_Bool)0;
        
#line 947 
        if ((int)__cond_54 != 0) 
#line 947 
                                 __compiletime_assert_947(); else ;
      }
      
#line 947 
      struct rt2x00_field32 __constr_expr_442 = {.bit_offset = 23U, .bit_mask = 8388608U};
      
#line 947 
      tmp_54 = __constr_expr_442;
    }
    {
      {
        
#line 947 
        bool __cond_55 = (_Bool)0;
        
#line 947 
        if ((int)__cond_55 != 0) 
#line 947 
                                 __compiletime_assert_947(); else ;
      }
      
#line 947 
      struct rt2x00_field32 __constr_expr_443 = {.bit_offset = 23U, .bit_mask = 8388608U};
      
#line 947 
      tmp_55 = __constr_expr_443;
    }
    
#line 947 
    reg = ((unsigned int)(1 << tmp_54.bit_offset) & tmp_55.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_56;
    struct rt2x00_field32 tmp_57;
    struct rt2x00_field32 tmp_58;
    {
      struct rt2x00_field32 __dummy_18;
      struct rt2x00_field32 __dummy2_18;
      
    }
    {
      {
        
#line 948 
        bool __cond_56 = (_Bool)0;
        
#line 948 
        if ((int)__cond_56 != 0) 
#line 948 
                                 __compiletime_assert_948(); else ;
      }
      
#line 948 
      struct rt2x00_field32 __constr_expr_444 = {.bit_offset = 24U, .bit_mask = 2130706432U};
      
#line 948 
      tmp_56 = __constr_expr_444;
    }
    
#line 948 
    reg = ~ tmp_56.bit_mask & reg;
    {
      {
        
#line 948 
        bool __cond_57 = (_Bool)0;
        
#line 948 
        if ((int)__cond_57 != 0) 
#line 948 
                                 __compiletime_assert_948(); else ;
      }
      
#line 948 
      struct rt2x00_field32 __constr_expr_445 = {.bit_offset = 24U, .bit_mask = 2130706432U};
      
#line 948 
      tmp_57 = __constr_expr_445;
    }
    {
      {
        
#line 948 
        bool __cond_58 = (_Bool)0;
        
#line 948 
        if ((int)__cond_58 != 0) 
#line 948 
                                 __compiletime_assert_948(); else ;
      }
      
#line 948 
      struct rt2x00_field32 __constr_expr_446 = {.bit_offset = 24U, .bit_mask = 2130706432U};
      
#line 948 
      tmp_58 = __constr_expr_446;
    }
    
#line 948 
    reg = ((unsigned int)(12 << tmp_57.bit_offset) & tmp_58.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_59;
    struct rt2x00_field32 tmp_60;
    struct rt2x00_field32 tmp_61;
    {
      struct rt2x00_field32 __dummy_19;
      struct rt2x00_field32 __dummy2_19;
      
    }
    {
      {
        
#line 949 
        bool __cond_59 = (_Bool)0;
        
#line 949 
        if ((int)__cond_59 != 0) 
#line 949 
                                 __compiletime_assert_949(); else ;
      }
      
#line 949 
      struct rt2x00_field32 __constr_expr_447 = {.bit_offset = 31U, .bit_mask = 2147483648U};
      
#line 949 
      tmp_59 = __constr_expr_447;
    }
    
#line 949 
    reg = ~ tmp_59.bit_mask & reg;
    {
      {
        
#line 949 
        bool __cond_60 = (_Bool)0;
        
#line 949 
        if ((int)__cond_60 != 0) 
#line 949 
                                 __compiletime_assert_949(); else ;
      }
      
#line 949 
      struct rt2x00_field32 __constr_expr_448 = {.bit_offset = 31U, .bit_mask = 2147483648U};
      
#line 949 
      tmp_60 = __constr_expr_448;
    }
    {
      {
        
#line 949 
        bool __cond_61 = (_Bool)0;
        
#line 949 
        if ((int)__cond_61 != 0) 
#line 949 
                                 __compiletime_assert_949(); else ;
      }
      
#line 949 
      struct rt2x00_field32 __constr_expr_449 = {.bit_offset = 31U, .bit_mask = 2147483648U};
      
#line 949 
      tmp_61 = __constr_expr_449;
    }
    
#line 949 
    reg = ((unsigned int)(1 << tmp_60.bit_offset) & tmp_61.bit_mask) | reg;
  }
  
#line 950 
  rt2x00mmio_register_write(rt2x00dev,152U,reg);
  
#line 952 
  rt2x00mmio_register_read(rt2x00dev,332U,& reg);
  {
    struct rt2x00_field32 tmp_62;
    struct rt2x00_field32 tmp_63;
    struct rt2x00_field32 tmp_64;
    {
      struct rt2x00_field32 __dummy_20;
      struct rt2x00_field32 __dummy2_20;
      
    }
    {
      {
        
#line 953 
        bool __cond_62 = (_Bool)0;
        
#line 953 
        if ((int)__cond_62 != 0) 
#line 953 
                                 __compiletime_assert_953(); else ;
      }
      
#line 953 
      struct rt2x00_field32 __constr_expr_450 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 953 
      tmp_62 = __constr_expr_450;
    }
    
#line 953 
    reg = ~ tmp_62.bit_mask & reg;
    {
      {
        
#line 953 
        bool __cond_63 = (_Bool)0;
        
#line 953 
        if ((int)__cond_63 != 0) 
#line 953 
                                 __compiletime_assert_953(); else ;
      }
      
#line 953 
      struct rt2x00_field32 __constr_expr_451 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 953 
      tmp_63 = __constr_expr_451;
    }
    {
      {
        
#line 953 
        bool __cond_64 = (_Bool)0;
        
#line 953 
        if ((int)__cond_64 != 0) 
#line 953 
                                 __compiletime_assert_953(); else ;
      }
      
#line 953 
      struct rt2x00_field32 __constr_expr_452 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 953 
      tmp_64 = __constr_expr_452;
    }
    
#line 953 
    reg = ((unsigned int)(112 << tmp_63.bit_offset) & tmp_64.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_65;
    struct rt2x00_field32 tmp_66;
    struct rt2x00_field32 tmp_67;
    {
      struct rt2x00_field32 __dummy_21;
      struct rt2x00_field32 __dummy2_21;
      
    }
    {
      {
        
#line 954 
        bool __cond_65 = (_Bool)0;
        
#line 954 
        if ((int)__cond_65 != 0) 
#line 954 
                                 __compiletime_assert_954(); else ;
      }
      
#line 954 
      struct rt2x00_field32 __constr_expr_453 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 954 
      tmp_65 = __constr_expr_453;
    }
    
#line 954 
    reg = ~ tmp_65.bit_mask & reg;
    {
      {
        
#line 954 
        bool __cond_66 = (_Bool)0;
        
#line 954 
        if ((int)__cond_66 != 0) 
#line 954 
                                 __compiletime_assert_954(); else ;
      }
      
#line 954 
      struct rt2x00_field32 __constr_expr_454 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 954 
      tmp_66 = __constr_expr_454;
    }
    {
      {
        
#line 954 
        bool __cond_67 = (_Bool)0;
        
#line 954 
        if ((int)__cond_67 != 0) 
#line 954 
                                 __compiletime_assert_954(); else ;
      }
      
#line 954 
      struct rt2x00_field32 __constr_expr_455 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 954 
      tmp_67 = __constr_expr_455;
    }
    
#line 954 
    reg = ((unsigned int)(56 << tmp_66.bit_offset) & tmp_67.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_68;
    struct rt2x00_field32 tmp_69;
    struct rt2x00_field32 tmp_70;
    {
      struct rt2x00_field32 __dummy_22;
      struct rt2x00_field32 __dummy2_22;
      
    }
    {
      {
        
#line 955 
        bool __cond_68 = (_Bool)0;
        
#line 955 
        if ((int)__cond_68 != 0) 
#line 955 
                                 __compiletime_assert_955(); else ;
      }
      
#line 955 
      struct rt2x00_field32 __constr_expr_456 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 955 
      tmp_68 = __constr_expr_456;
    }
    
#line 955 
    reg = ~ tmp_68.bit_mask & reg;
    {
      {
        
#line 955 
        bool __cond_69 = (_Bool)0;
        
#line 955 
        if ((int)__cond_69 != 0) 
#line 955 
                                 __compiletime_assert_955(); else ;
      }
      
#line 955 
      struct rt2x00_field32 __constr_expr_457 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 955 
      tmp_69 = __constr_expr_457;
    }
    {
      {
        
#line 955 
        bool __cond_70 = (_Bool)0;
        
#line 955 
        if ((int)__cond_70 != 0) 
#line 955 
                                 __compiletime_assert_955(); else ;
      }
      
#line 955 
      struct rt2x00_field32 __constr_expr_458 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 955 
      tmp_70 = __constr_expr_458;
    }
    
#line 955 
    reg = ((unsigned int)(20 << tmp_69.bit_offset) & tmp_70.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_71;
    struct rt2x00_field32 tmp_72;
    struct rt2x00_field32 tmp_73;
    {
      struct rt2x00_field32 __dummy_23;
      struct rt2x00_field32 __dummy2_23;
      
    }
    {
      {
        
#line 956 
        bool __cond_71 = (_Bool)0;
        
#line 956 
        if ((int)__cond_71 != 0) 
#line 956 
                                 __compiletime_assert_956(); else ;
      }
      
#line 956 
      struct rt2x00_field32 __constr_expr_459 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 956 
      tmp_71 = __constr_expr_459;
    }
    
#line 956 
    reg = ~ tmp_71.bit_mask & reg;
    {
      {
        
#line 956 
        bool __cond_72 = (_Bool)0;
        
#line 956 
        if ((int)__cond_72 != 0) 
#line 956 
                                 __compiletime_assert_956(); else ;
      }
      
#line 956 
      struct rt2x00_field32 __constr_expr_460 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 956 
      tmp_72 = __constr_expr_460;
    }
    {
      {
        
#line 956 
        bool __cond_73 = (_Bool)0;
        
#line 956 
        if ((int)__cond_73 != 0) 
#line 956 
                                 __compiletime_assert_956(); else ;
      }
      
#line 956 
      struct rt2x00_field32 __constr_expr_461 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 956 
      tmp_73 = __constr_expr_461;
    }
    
#line 956 
    reg = ((unsigned int)(10 << tmp_72.bit_offset) & tmp_73.bit_mask) | reg;
  }
  
#line 957 
  rt2x00mmio_register_write(rt2x00dev,332U,reg);
  
#line 959 
  rt2x00mmio_register_read(rt2x00dev,336U,& reg);
  {
    struct rt2x00_field32 tmp_74;
    struct rt2x00_field32 tmp_75;
    struct rt2x00_field32 tmp_76;
    {
      struct rt2x00_field32 __dummy_24;
      struct rt2x00_field32 __dummy2_24;
      
    }
    {
      {
        
#line 960 
        bool __cond_74 = (_Bool)0;
        
#line 960 
        if ((int)__cond_74 != 0) 
#line 960 
                                 __compiletime_assert_960(); else ;
      }
      
#line 960 
      struct rt2x00_field32 __constr_expr_462 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 960 
      tmp_74 = __constr_expr_462;
    }
    
#line 960 
    reg = ~ tmp_74.bit_mask & reg;
    {
      {
        
#line 960 
        bool __cond_75 = (_Bool)0;
        
#line 960 
        if ((int)__cond_75 != 0) 
#line 960 
                                 __compiletime_assert_960(); else ;
      }
      
#line 960 
      struct rt2x00_field32 __constr_expr_463 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 960 
      tmp_75 = __constr_expr_463;
    }
    {
      {
        
#line 960 
        bool __cond_76 = (_Bool)0;
        
#line 960 
        if ((int)__cond_76 != 0) 
#line 960 
                                 __compiletime_assert_960(); else ;
      }
      
#line 960 
      struct rt2x00_field32 __constr_expr_464 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 960 
      tmp_76 = __constr_expr_464;
    }
    
#line 960 
    reg = ((unsigned int)(45 << tmp_75.bit_offset) & tmp_76.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_77;
    struct rt2x00_field32 tmp_78;
    struct rt2x00_field32 tmp_79;
    {
      struct rt2x00_field32 __dummy_25;
      struct rt2x00_field32 __dummy2_25;
      
    }
    {
      {
        
#line 961 
        bool __cond_77 = (_Bool)0;
        
#line 961 
        if ((int)__cond_77 != 0) 
#line 961 
                                 __compiletime_assert_961(); else ;
      }
      
#line 961 
      struct rt2x00_field32 __constr_expr_465 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 961 
      tmp_77 = __constr_expr_465;
    }
    
#line 961 
    reg = ~ tmp_77.bit_mask & reg;
    {
      {
        
#line 961 
        bool __cond_78 = (_Bool)0;
        
#line 961 
        if ((int)__cond_78 != 0) 
#line 961 
                                 __compiletime_assert_961(); else ;
      }
      
#line 961 
      struct rt2x00_field32 __constr_expr_466 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 961 
      tmp_78 = __constr_expr_466;
    }
    {
      {
        
#line 961 
        bool __cond_79 = (_Bool)0;
        
#line 961 
        if ((int)__cond_79 != 0) 
#line 961 
                                 __compiletime_assert_961(); else ;
      }
      
#line 961 
      struct rt2x00_field32 __constr_expr_467 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 961 
      tmp_79 = __constr_expr_467;
    }
    
#line 961 
    reg = ((unsigned int)(37 << tmp_78.bit_offset) & tmp_79.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_80;
    struct rt2x00_field32 tmp_81;
    struct rt2x00_field32 tmp_82;
    {
      struct rt2x00_field32 __dummy_26;
      struct rt2x00_field32 __dummy2_26;
      
    }
    {
      {
        
#line 962 
        bool __cond_80 = (_Bool)0;
        
#line 962 
        if ((int)__cond_80 != 0) 
#line 962 
                                 __compiletime_assert_962(); else ;
      }
      
#line 962 
      struct rt2x00_field32 __constr_expr_468 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 962 
      tmp_80 = __constr_expr_468;
    }
    
#line 962 
    reg = ~ tmp_80.bit_mask & reg;
    {
      {
        
#line 962 
        bool __cond_81 = (_Bool)0;
        
#line 962 
        if ((int)__cond_81 != 0) 
#line 962 
                                 __compiletime_assert_962(); else ;
      }
      
#line 962 
      struct rt2x00_field32 __constr_expr_469 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 962 
      tmp_81 = __constr_expr_469;
    }
    {
      {
        
#line 962 
        bool __cond_82 = (_Bool)0;
        
#line 962 
        if ((int)__cond_82 != 0) 
#line 962 
                                 __compiletime_assert_962(); else ;
      }
      
#line 962 
      struct rt2x00_field32 __constr_expr_470 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 962 
      tmp_82 = __constr_expr_470;
    }
    
#line 962 
    reg = ((unsigned int)(33 << tmp_81.bit_offset) & tmp_82.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_83;
    struct rt2x00_field32 tmp_84;
    struct rt2x00_field32 tmp_85;
    {
      struct rt2x00_field32 __dummy_27;
      struct rt2x00_field32 __dummy2_27;
      
    }
    {
      {
        
#line 963 
        bool __cond_83 = (_Bool)0;
        
#line 963 
        if ((int)__cond_83 != 0) 
#line 963 
                                 __compiletime_assert_963(); else ;
      }
      
#line 963 
      struct rt2x00_field32 __constr_expr_471 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 963 
      tmp_83 = __constr_expr_471;
    }
    
#line 963 
    reg = ~ tmp_83.bit_mask & reg;
    {
      {
        
#line 963 
        bool __cond_84 = (_Bool)0;
        
#line 963 
        if ((int)__cond_84 != 0) 
#line 963 
                                 __compiletime_assert_963(); else ;
      }
      
#line 963 
      struct rt2x00_field32 __constr_expr_472 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 963 
      tmp_84 = __constr_expr_472;
    }
    {
      {
        
#line 963 
        bool __cond_85 = (_Bool)0;
        
#line 963 
        if ((int)__cond_85 != 0) 
#line 963 
                                 __compiletime_assert_963(); else ;
      }
      
#line 963 
      struct rt2x00_field32 __constr_expr_473 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 963 
      tmp_85 = __constr_expr_473;
    }
    
#line 963 
    reg = ((unsigned int)(29 << tmp_84.bit_offset) & tmp_85.bit_mask) | reg;
  }
  
#line 964 
  rt2x00mmio_register_write(rt2x00dev,336U,reg);
  
#line 966 
  rt2x00mmio_register_read(rt2x00dev,340U,& reg);
  {
    struct rt2x00_field32 tmp_86;
    struct rt2x00_field32 tmp_87;
    struct rt2x00_field32 tmp_88;
    {
      struct rt2x00_field32 __dummy_28;
      struct rt2x00_field32 __dummy2_28;
      
    }
    {
      {
        
#line 967 
        bool __cond_86 = (_Bool)0;
        
#line 967 
        if ((int)__cond_86 != 0) 
#line 967 
                                 __compiletime_assert_967(); else ;
      }
      
#line 967 
      struct rt2x00_field32 __constr_expr_474 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 967 
      tmp_86 = __constr_expr_474;
    }
    
#line 967 
    reg = ~ tmp_86.bit_mask & reg;
    {
      {
        
#line 967 
        bool __cond_87 = (_Bool)0;
        
#line 967 
        if ((int)__cond_87 != 0) 
#line 967 
                                 __compiletime_assert_967(); else ;
      }
      
#line 967 
      struct rt2x00_field32 __constr_expr_475 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 967 
      tmp_87 = __constr_expr_475;
    }
    {
      {
        
#line 967 
        bool __cond_88 = (_Bool)0;
        
#line 967 
        if ((int)__cond_88 != 0) 
#line 967 
                                 __compiletime_assert_967(); else ;
      }
      
#line 967 
      struct rt2x00_field32 __constr_expr_476 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 967 
      tmp_88 = __constr_expr_476;
    }
    
#line 967 
    reg = ((unsigned int)(29 << tmp_87.bit_offset) & tmp_88.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_89;
    struct rt2x00_field32 tmp_90;
    struct rt2x00_field32 tmp_91;
    {
      struct rt2x00_field32 __dummy_29;
      struct rt2x00_field32 __dummy2_29;
      
    }
    {
      {
        
#line 968 
        bool __cond_89 = (_Bool)0;
        
#line 968 
        if ((int)__cond_89 != 0) 
#line 968 
                                 __compiletime_assert_968(); else ;
      }
      
#line 968 
      struct rt2x00_field32 __constr_expr_477 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 968 
      tmp_89 = __constr_expr_477;
    }
    
#line 968 
    reg = ~ tmp_89.bit_mask & reg;
    {
      {
        
#line 968 
        bool __cond_90 = (_Bool)0;
        
#line 968 
        if ((int)__cond_90 != 0) 
#line 968 
                                 __compiletime_assert_968(); else ;
      }
      
#line 968 
      struct rt2x00_field32 __constr_expr_478 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 968 
      tmp_90 = __constr_expr_478;
    }
    {
      {
        
#line 968 
        bool __cond_91 = (_Bool)0;
        
#line 968 
        if ((int)__cond_91 != 0) 
#line 968 
                                 __compiletime_assert_968(); else ;
      }
      
#line 968 
      struct rt2x00_field32 __constr_expr_479 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 968 
      tmp_91 = __constr_expr_479;
    }
    
#line 968 
    reg = ((unsigned int)(25 << tmp_90.bit_offset) & tmp_91.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_92;
    struct rt2x00_field32 tmp_93;
    struct rt2x00_field32 tmp_94;
    {
      struct rt2x00_field32 __dummy_30;
      struct rt2x00_field32 __dummy2_30;
      
    }
    {
      {
        
#line 969 
        bool __cond_92 = (_Bool)0;
        
#line 969 
        if ((int)__cond_92 != 0) 
#line 969 
                                 __compiletime_assert_969(); else ;
      }
      
#line 969 
      struct rt2x00_field32 __constr_expr_480 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 969 
      tmp_92 = __constr_expr_480;
    }
    
#line 969 
    reg = ~ tmp_92.bit_mask & reg;
    {
      {
        
#line 969 
        bool __cond_93 = (_Bool)0;
        
#line 969 
        if ((int)__cond_93 != 0) 
#line 969 
                                 __compiletime_assert_969(); else ;
      }
      
#line 969 
      struct rt2x00_field32 __constr_expr_481 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 969 
      tmp_93 = __constr_expr_481;
    }
    {
      {
        
#line 969 
        bool __cond_94 = (_Bool)0;
        
#line 969 
        if ((int)__cond_94 != 0) 
#line 969 
                                 __compiletime_assert_969(); else ;
      }
      
#line 969 
      struct rt2x00_field32 __constr_expr_482 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 969 
      tmp_94 = __constr_expr_482;
    }
    
#line 969 
    reg = ((unsigned int)(25 << tmp_93.bit_offset) & tmp_94.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_95;
    struct rt2x00_field32 tmp_96;
    struct rt2x00_field32 tmp_97;
    {
      struct rt2x00_field32 __dummy_31;
      struct rt2x00_field32 __dummy2_31;
      
    }
    {
      {
        
#line 970 
        bool __cond_95 = (_Bool)0;
        
#line 970 
        if ((int)__cond_95 != 0) 
#line 970 
                                 __compiletime_assert_970(); else ;
      }
      
#line 970 
      struct rt2x00_field32 __constr_expr_483 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 970 
      tmp_95 = __constr_expr_483;
    }
    
#line 970 
    reg = ~ tmp_95.bit_mask & reg;
    {
      {
        
#line 970 
        bool __cond_96 = (_Bool)0;
        
#line 970 
        if ((int)__cond_96 != 0) 
#line 970 
                                 __compiletime_assert_970(); else ;
      }
      
#line 970 
      struct rt2x00_field32 __constr_expr_484 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 970 
      tmp_96 = __constr_expr_484;
    }
    {
      {
        
#line 970 
        bool __cond_97 = (_Bool)0;
        
#line 970 
        if ((int)__cond_97 != 0) 
#line 970 
                                 __compiletime_assert_970(); else ;
      }
      
#line 970 
      struct rt2x00_field32 __constr_expr_485 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 970 
      tmp_97 = __constr_expr_485;
    }
    
#line 970 
    reg = ((unsigned int)(25 << tmp_96.bit_offset) & tmp_97.bit_mask) | reg;
  }
  
#line 971 
  rt2x00mmio_register_write(rt2x00dev,340U,reg);
  
#line 973 
  rt2x00mmio_register_read(rt2x00dev,144U,& reg);
  {
    struct rt2x00_field32 tmp_98;
    struct rt2x00_field32 tmp_99;
    struct rt2x00_field32 tmp_100;
    {
      struct rt2x00_field32 __dummy_32;
      struct rt2x00_field32 __dummy2_32;
      
    }
    {
      {
        
#line 974 
        bool __cond_98 = (_Bool)0;
        
#line 974 
        if ((int)__cond_98 != 0) 
#line 974 
                                 __compiletime_assert_974(); else ;
      }
      
#line 974 
      struct rt2x00_field32 __constr_expr_486 = {.bit_offset = 0U, .bit_mask = 127U};
      
#line 974 
      tmp_98 = __constr_expr_486;
    }
    
#line 974 
    reg = ~ tmp_98.bit_mask & reg;
    {
      {
        
#line 974 
        bool __cond_99 = (_Bool)0;
        
#line 974 
        if ((int)__cond_99 != 0) 
#line 974 
                                 __compiletime_assert_974(); else ;
      }
      
#line 974 
      struct rt2x00_field32 __constr_expr_487 = {.bit_offset = 0U, .bit_mask = 127U};
      
#line 974 
      tmp_99 = __constr_expr_487;
    }
    {
      {
        
#line 974 
        bool __cond_100 = (_Bool)0;
        
#line 974 
        if ((int)__cond_100 != 0) 
#line 974 
                                  __compiletime_assert_974(); else ;
      }
      
#line 974 
      struct rt2x00_field32 __constr_expr_488 = {.bit_offset = 0U, .bit_mask = 127U};
      
#line 974 
      tmp_100 = __constr_expr_488;
    }
    
#line 974 
    reg = ((unsigned int)(47 << tmp_99.bit_offset) & tmp_100.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_101;
    struct rt2x00_field32 tmp_102;
    struct rt2x00_field32 tmp_103;
    {
      struct rt2x00_field32 __dummy_33;
      struct rt2x00_field32 __dummy2_33;
      
    }
    {
      {
        
#line 975 
        bool __cond_101 = (_Bool)0;
        
#line 975 
        if ((int)__cond_101 != 0) 
#line 975 
                                  __compiletime_assert_975(); else ;
      }
      
#line 975 
      struct rt2x00_field32 __constr_expr_489 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 975 
      tmp_101 = __constr_expr_489;
    }
    
#line 975 
    reg = ~ tmp_101.bit_mask & reg;
    {
      {
        
#line 975 
        bool __cond_102 = (_Bool)0;
        
#line 975 
        if ((int)__cond_102 != 0) 
#line 975 
                                  __compiletime_assert_975(); else ;
      }
      
#line 975 
      struct rt2x00_field32 __constr_expr_490 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 975 
      tmp_102 = __constr_expr_490;
    }
    {
      {
        
#line 975 
        bool __cond_103 = (_Bool)0;
        
#line 975 
        if ((int)__cond_103 != 0) 
#line 975 
                                  __compiletime_assert_975(); else ;
      }
      
#line 975 
      struct rt2x00_field32 __constr_expr_491 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 975 
      tmp_103 = __constr_expr_491;
    }
    
#line 975 
    reg = ((unsigned int)(1 << tmp_102.bit_offset) & tmp_103.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_104;
    struct rt2x00_field32 tmp_105;
    struct rt2x00_field32 tmp_106;
    {
      struct rt2x00_field32 __dummy_34;
      struct rt2x00_field32 __dummy2_34;
      
    }
    {
      {
        
#line 976 
        bool __cond_104 = (_Bool)0;
        
#line 976 
        if ((int)__cond_104 != 0) 
#line 976 
                                  __compiletime_assert_976(); else ;
      }
      
#line 976 
      struct rt2x00_field32 __constr_expr_492 = {.bit_offset = 8U, .bit_mask = 32512U};
      
#line 976 
      tmp_104 = __constr_expr_492;
    }
    
#line 976 
    reg = ~ tmp_104.bit_mask & reg;
    {
      {
        
#line 976 
        bool __cond_105 = (_Bool)0;
        
#line 976 
        if ((int)__cond_105 != 0) 
#line 976 
                                  __compiletime_assert_976(); else ;
      }
      
#line 976 
      struct rt2x00_field32 __constr_expr_493 = {.bit_offset = 8U, .bit_mask = 32512U};
      
#line 976 
      tmp_105 = __constr_expr_493;
    }
    {
      {
        
#line 976 
        bool __cond_106 = (_Bool)0;
        
#line 976 
        if ((int)__cond_106 != 0) 
#line 976 
                                  __compiletime_assert_976(); else ;
      }
      
#line 976 
      struct rt2x00_field32 __constr_expr_494 = {.bit_offset = 8U, .bit_mask = 32512U};
      
#line 976 
      tmp_106 = __constr_expr_494;
    }
    
#line 976 
    reg = ((unsigned int)(51 << tmp_105.bit_offset) & tmp_106.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_107;
    struct rt2x00_field32 tmp_108;
    struct rt2x00_field32 tmp_109;
    {
      struct rt2x00_field32 __dummy_35;
      struct rt2x00_field32 __dummy2_35;
      
    }
    {
      {
        
#line 977 
        bool __cond_107 = (_Bool)0;
        
#line 977 
        if ((int)__cond_107 != 0) 
#line 977 
                                  __compiletime_assert_977(); else ;
      }
      
#line 977 
      struct rt2x00_field32 __constr_expr_495 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 977 
      tmp_107 = __constr_expr_495;
    }
    
#line 977 
    reg = ~ tmp_107.bit_mask & reg;
    {
      {
        
#line 977 
        bool __cond_108 = (_Bool)0;
        
#line 977 
        if ((int)__cond_108 != 0) 
#line 977 
                                  __compiletime_assert_977(); else ;
      }
      
#line 977 
      struct rt2x00_field32 __constr_expr_496 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 977 
      tmp_108 = __constr_expr_496;
    }
    {
      {
        
#line 977 
        bool __cond_109 = (_Bool)0;
        
#line 977 
        if ((int)__cond_109 != 0) 
#line 977 
                                  __compiletime_assert_977(); else ;
      }
      
#line 977 
      struct rt2x00_field32 __constr_expr_497 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 977 
      tmp_109 = __constr_expr_497;
    }
    
#line 977 
    reg = ((unsigned int)(1 << tmp_108.bit_offset) & tmp_109.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_110;
    struct rt2x00_field32 tmp_111;
    struct rt2x00_field32 tmp_112;
    {
      struct rt2x00_field32 __dummy_36;
      struct rt2x00_field32 __dummy2_36;
      
    }
    {
      {
        
#line 978 
        bool __cond_110 = (_Bool)0;
        
#line 978 
        if ((int)__cond_110 != 0) 
#line 978 
                                  __compiletime_assert_978(); else ;
      }
      
#line 978 
      struct rt2x00_field32 __constr_expr_498 = {.bit_offset = 16U, .bit_mask = 8323072U};
      
#line 978 
      tmp_110 = __constr_expr_498;
    }
    
#line 978 
    reg = ~ tmp_110.bit_mask & reg;
    {
      {
        
#line 978 
        bool __cond_111 = (_Bool)0;
        
#line 978 
        if ((int)__cond_111 != 0) 
#line 978 
                                  __compiletime_assert_978(); else ;
      }
      
#line 978 
      struct rt2x00_field32 __constr_expr_499 = {.bit_offset = 16U, .bit_mask = 8323072U};
      
#line 978 
      tmp_111 = __constr_expr_499;
    }
    {
      {
        
#line 978 
        bool __cond_112 = (_Bool)0;
        
#line 978 
        if ((int)__cond_112 != 0) 
#line 978 
                                  __compiletime_assert_978(); else ;
      }
      
#line 978 
      struct rt2x00_field32 __constr_expr_500 = {.bit_offset = 16U, .bit_mask = 8323072U};
      
#line 978 
      tmp_112 = __constr_expr_500;
    }
    
#line 978 
    reg = ((unsigned int)(42 << tmp_111.bit_offset) & tmp_112.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_113;
    struct rt2x00_field32 tmp_114;
    struct rt2x00_field32 tmp_115;
    {
      struct rt2x00_field32 __dummy_37;
      struct rt2x00_field32 __dummy2_37;
      
    }
    {
      {
        
#line 979 
        bool __cond_113 = (_Bool)0;
        
#line 979 
        if ((int)__cond_113 != 0) 
#line 979 
                                  __compiletime_assert_979(); else ;
      }
      
#line 979 
      struct rt2x00_field32 __constr_expr_501 = {.bit_offset = 23U, .bit_mask = 8388608U};
      
#line 979 
      tmp_113 = __constr_expr_501;
    }
    
#line 979 
    reg = ~ tmp_113.bit_mask & reg;
    {
      {
        
#line 979 
        bool __cond_114 = (_Bool)0;
        
#line 979 
        if ((int)__cond_114 != 0) 
#line 979 
                                  __compiletime_assert_979(); else ;
      }
      
#line 979 
      struct rt2x00_field32 __constr_expr_502 = {.bit_offset = 23U, .bit_mask = 8388608U};
      
#line 979 
      tmp_114 = __constr_expr_502;
    }
    {
      {
        
#line 979 
        bool __cond_115 = (_Bool)0;
        
#line 979 
        if ((int)__cond_115 != 0) 
#line 979 
                                  __compiletime_assert_979(); else ;
      }
      
#line 979 
      struct rt2x00_field32 __constr_expr_503 = {.bit_offset = 23U, .bit_mask = 8388608U};
      
#line 979 
      tmp_115 = __constr_expr_503;
    }
    
#line 979 
    reg = ((unsigned int)(1 << tmp_114.bit_offset) & tmp_115.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_116;
    struct rt2x00_field32 tmp_117;
    struct rt2x00_field32 tmp_118;
    {
      struct rt2x00_field32 __dummy_38;
      struct rt2x00_field32 __dummy2_38;
      
    }
    {
      {
        
#line 980 
        bool __cond_116 = (_Bool)0;
        
#line 980 
        if ((int)__cond_116 != 0) 
#line 980 
                                  __compiletime_assert_980(); else ;
      }
      
#line 980 
      struct rt2x00_field32 __constr_expr_504 = {.bit_offset = 24U, .bit_mask = 2130706432U};
      
#line 980 
      tmp_116 = __constr_expr_504;
    }
    
#line 980 
    reg = ~ tmp_116.bit_mask & reg;
    {
      {
        
#line 980 
        bool __cond_117 = (_Bool)0;
        
#line 980 
        if ((int)__cond_117 != 0) 
#line 980 
                                  __compiletime_assert_980(); else ;
      }
      
#line 980 
      struct rt2x00_field32 __constr_expr_505 = {.bit_offset = 24U, .bit_mask = 2130706432U};
      
#line 980 
      tmp_117 = __constr_expr_505;
    }
    {
      {
        
#line 980 
        bool __cond_118 = (_Bool)0;
        
#line 980 
        if ((int)__cond_118 != 0) 
#line 980 
                                  __compiletime_assert_980(); else ;
      }
      
#line 980 
      struct rt2x00_field32 __constr_expr_506 = {.bit_offset = 24U, .bit_mask = 2130706432U};
      
#line 980 
      tmp_118 = __constr_expr_506;
    }
    
#line 980 
    reg = ((unsigned int)(51 << tmp_117.bit_offset) & tmp_118.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_119;
    struct rt2x00_field32 tmp_120;
    struct rt2x00_field32 tmp_121;
    {
      struct rt2x00_field32 __dummy_39;
      struct rt2x00_field32 __dummy2_39;
      
    }
    {
      {
        
#line 981 
        bool __cond_119 = (_Bool)0;
        
#line 981 
        if ((int)__cond_119 != 0) 
#line 981 
                                  __compiletime_assert_981(); else ;
      }
      
#line 981 
      struct rt2x00_field32 __constr_expr_507 = {.bit_offset = 31U, .bit_mask = 2147483648U};
      
#line 981 
      tmp_119 = __constr_expr_507;
    }
    
#line 981 
    reg = ~ tmp_119.bit_mask & reg;
    {
      {
        
#line 981 
        bool __cond_120 = (_Bool)0;
        
#line 981 
        if ((int)__cond_120 != 0) 
#line 981 
                                  __compiletime_assert_981(); else ;
      }
      
#line 981 
      struct rt2x00_field32 __constr_expr_508 = {.bit_offset = 31U, .bit_mask = 2147483648U};
      
#line 981 
      tmp_120 = __constr_expr_508;
    }
    {
      {
        
#line 981 
        bool __cond_121 = (_Bool)0;
        
#line 981 
        if ((int)__cond_121 != 0) 
#line 981 
                                  __compiletime_assert_981(); else ;
      }
      
#line 981 
      struct rt2x00_field32 __constr_expr_509 = {.bit_offset = 31U, .bit_mask = 2147483648U};
      
#line 981 
      tmp_121 = __constr_expr_509;
    }
    
#line 981 
    reg = ((unsigned int)(1 << tmp_120.bit_offset) & tmp_121.bit_mask) | reg;
  }
  
#line 982 
  rt2x00mmio_register_write(rt2x00dev,144U,reg);
  
#line 984 
  rt2x00mmio_register_read(rt2x00dev,140U,& reg);
  {
    struct rt2x00_field32 tmp_122;
    struct rt2x00_field32 tmp_123;
    struct rt2x00_field32 tmp_124;
    {
      struct rt2x00_field32 __dummy_40;
      struct rt2x00_field32 __dummy2_40;
      
    }
    {
      {
        
#line 985 
        bool __cond_122 = (_Bool)0;
        
#line 985 
        if ((int)__cond_122 != 0) 
#line 985 
                                  __compiletime_assert_985(); else ;
      }
      
#line 985 
      struct rt2x00_field32 __constr_expr_510 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 985 
      tmp_122 = __constr_expr_510;
    }
    
#line 985 
    reg = ~ tmp_122.bit_mask & reg;
    {
      {
        
#line 985 
        bool __cond_123 = (_Bool)0;
        
#line 985 
        if ((int)__cond_123 != 0) 
#line 985 
                                  __compiletime_assert_985(); else ;
      }
      
#line 985 
      struct rt2x00_field32 __constr_expr_511 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 985 
      tmp_123 = __constr_expr_511;
    }
    {
      {
        
#line 985 
        bool __cond_124 = (_Bool)0;
        
#line 985 
        if ((int)__cond_124 != 0) 
#line 985 
                                  __compiletime_assert_985(); else ;
      }
      
#line 985 
      struct rt2x00_field32 __constr_expr_512 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 985 
      tmp_124 = __constr_expr_512;
    }
    
#line 985 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_125;
    struct rt2x00_field32 tmp_126;
    struct rt2x00_field32 tmp_127;
    {
      struct rt2x00_field32 __dummy_41;
      struct rt2x00_field32 __dummy2_41;
      
    }
    {
      {
        
#line 986 
        bool __cond_125 = (_Bool)0;
        
#line 986 
        if ((int)__cond_125 != 0) 
#line 986 
                                  __compiletime_assert_986(); else ;
      }
      
#line 986 
      struct rt2x00_field32 __constr_expr_513 = {.bit_offset = 1U, .bit_mask = 6U};
      
#line 986 
      tmp_125 = __constr_expr_513;
    }
    
#line 986 
    reg = ~ tmp_125.bit_mask & reg;
    {
      {
        
#line 986 
        bool __cond_126 = (_Bool)0;
        
#line 986 
        if ((int)__cond_126 != 0) 
#line 986 
                                  __compiletime_assert_986(); else ;
      }
      
#line 986 
      struct rt2x00_field32 __constr_expr_514 = {.bit_offset = 1U, .bit_mask = 6U};
      
#line 986 
      tmp_126 = __constr_expr_514;
    }
    {
      {
        
#line 986 
        bool __cond_127 = (_Bool)0;
        
#line 986 
        if ((int)__cond_127 != 0) 
#line 986 
                                  __compiletime_assert_986(); else ;
      }
      
#line 986 
      struct rt2x00_field32 __constr_expr_515 = {.bit_offset = 1U, .bit_mask = 6U};
      
#line 986 
      tmp_127 = __constr_expr_515;
    }
    
#line 986 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_128;
    struct rt2x00_field32 tmp_129;
    struct rt2x00_field32 tmp_130;
    {
      struct rt2x00_field32 __dummy_42;
      struct rt2x00_field32 __dummy2_42;
      
    }
    {
      {
        
#line 987 
        bool __cond_128 = (_Bool)0;
        
#line 987 
        if ((int)__cond_128 != 0) 
#line 987 
                                  __compiletime_assert_987(); else ;
      }
      
#line 987 
      struct rt2x00_field32 __constr_expr_516 = {.bit_offset = 3U, .bit_mask = 24U};
      
#line 987 
      tmp_128 = __constr_expr_516;
    }
    
#line 987 
    reg = ~ tmp_128.bit_mask & reg;
    {
      {
        
#line 987 
        bool __cond_129 = (_Bool)0;
        
#line 987 
        if ((int)__cond_129 != 0) 
#line 987 
                                  __compiletime_assert_987(); else ;
      }
      
#line 987 
      struct rt2x00_field32 __constr_expr_517 = {.bit_offset = 3U, .bit_mask = 24U};
      
#line 987 
      tmp_129 = __constr_expr_517;
    }
    {
      {
        
#line 987 
        bool __cond_130 = (_Bool)0;
        
#line 987 
        if ((int)__cond_130 != 0) 
#line 987 
                                  __compiletime_assert_987(); else ;
      }
      
#line 987 
      struct rt2x00_field32 __constr_expr_518 = {.bit_offset = 3U, .bit_mask = 24U};
      
#line 987 
      tmp_130 = __constr_expr_518;
    }
    
#line 987 
    reg = ((unsigned int)(3 << tmp_129.bit_offset) & tmp_130.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_131;
    struct rt2x00_field32 tmp_132;
    struct rt2x00_field32 tmp_133;
    {
      struct rt2x00_field32 __dummy_43;
      struct rt2x00_field32 __dummy2_43;
      
    }
    {
      {
        
#line 988 
        bool __cond_131 = (_Bool)0;
        
#line 988 
        if ((int)__cond_131 != 0) 
#line 988 
                                  __compiletime_assert_988(); else ;
      }
      
#line 988 
      struct rt2x00_field32 __constr_expr_519 = {.bit_offset = 5U, .bit_mask = 96U};
      
#line 988 
      tmp_131 = __constr_expr_519;
    }
    
#line 988 
    reg = ~ tmp_131.bit_mask & reg;
    {
      {
        
#line 988 
        bool __cond_132 = (_Bool)0;
        
#line 988 
        if ((int)__cond_132 != 0) 
#line 988 
                                  __compiletime_assert_988(); else ;
      }
      
#line 988 
      struct rt2x00_field32 __constr_expr_520 = {.bit_offset = 5U, .bit_mask = 96U};
      
#line 988 
      tmp_132 = __constr_expr_520;
    }
    {
      {
        
#line 988 
        bool __cond_133 = (_Bool)0;
        
#line 988 
        if ((int)__cond_133 != 0) 
#line 988 
                                  __compiletime_assert_988(); else ;
      }
      
#line 988 
      struct rt2x00_field32 __constr_expr_521 = {.bit_offset = 5U, .bit_mask = 96U};
      
#line 988 
      tmp_133 = __constr_expr_521;
    }
    
#line 988 
    reg = ((unsigned int)(1 << tmp_132.bit_offset) & tmp_133.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_134;
    struct rt2x00_field32 tmp_135;
    struct rt2x00_field32 tmp_136;
    {
      struct rt2x00_field32 __dummy_44;
      struct rt2x00_field32 __dummy2_44;
      
    }
    {
      {
        
#line 989 
        bool __cond_134 = (_Bool)0;
        
#line 989 
        if ((int)__cond_134 != 0) 
#line 989 
                                  __compiletime_assert_989(); else ;
      }
      
#line 989 
      struct rt2x00_field32 __constr_expr_522 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 989 
      tmp_134 = __constr_expr_522;
    }
    
#line 989 
    reg = ~ tmp_134.bit_mask & reg;
    {
      {
        
#line 989 
        bool __cond_135 = (_Bool)0;
        
#line 989 
        if ((int)__cond_135 != 0) 
#line 989 
                                  __compiletime_assert_989(); else ;
      }
      
#line 989 
      struct rt2x00_field32 __constr_expr_523 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 989 
      tmp_135 = __constr_expr_523;
    }
    {
      {
        
#line 989 
        bool __cond_136 = (_Bool)0;
        
#line 989 
        if ((int)__cond_136 != 0) 
#line 989 
                                  __compiletime_assert_989(); else ;
      }
      
#line 989 
      struct rt2x00_field32 __constr_expr_524 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 989 
      tmp_136 = __constr_expr_524;
    }
    
#line 989 
    reg = ((unsigned int)(1 << tmp_135.bit_offset) & tmp_136.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_137;
    struct rt2x00_field32 tmp_138;
    struct rt2x00_field32 tmp_139;
    {
      struct rt2x00_field32 __dummy_45;
      struct rt2x00_field32 __dummy2_45;
      
    }
    {
      {
        
#line 990 
        bool __cond_137 = (_Bool)0;
        
#line 990 
        if ((int)__cond_137 != 0) 
#line 990 
                                  __compiletime_assert_990(); else ;
      }
      
#line 990 
      struct rt2x00_field32 __constr_expr_525 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 990 
      tmp_137 = __constr_expr_525;
    }
    
#line 990 
    reg = ~ tmp_137.bit_mask & reg;
    {
      {
        
#line 990 
        bool __cond_138 = (_Bool)0;
        
#line 990 
        if ((int)__cond_138 != 0) 
#line 990 
                                  __compiletime_assert_990(); else ;
      }
      
#line 990 
      struct rt2x00_field32 __constr_expr_526 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 990 
      tmp_138 = __constr_expr_526;
    }
    {
      {
        
#line 990 
        bool __cond_139 = (_Bool)0;
        
#line 990 
        if ((int)__cond_139 != 0) 
#line 990 
                                  __compiletime_assert_990(); else ;
      }
      
#line 990 
      struct rt2x00_field32 __constr_expr_527 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 990 
      tmp_139 = __constr_expr_527;
    }
    
#line 990 
    reg = ((unsigned int)(1 << tmp_138.bit_offset) & tmp_139.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_140;
    struct rt2x00_field32 tmp_141;
    struct rt2x00_field32 tmp_142;
    {
      struct rt2x00_field32 __dummy_46;
      struct rt2x00_field32 __dummy2_46;
      
    }
    {
      {
        
#line 991 
        bool __cond_140 = (_Bool)0;
        
#line 991 
        if ((int)__cond_140 != 0) 
#line 991 
                                  __compiletime_assert_991(); else ;
      }
      
#line 991 
      struct rt2x00_field32 __constr_expr_528 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 991 
      tmp_140 = __constr_expr_528;
    }
    
#line 991 
    reg = ~ tmp_140.bit_mask & reg;
    {
      {
        
#line 991 
        bool __cond_141 = (_Bool)0;
        
#line 991 
        if ((int)__cond_141 != 0) 
#line 991 
                                  __compiletime_assert_991(); else ;
      }
      
#line 991 
      struct rt2x00_field32 __constr_expr_529 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 991 
      tmp_141 = __constr_expr_529;
    }
    {
      {
        
#line 991 
        bool __cond_142 = (_Bool)0;
        
#line 991 
        if ((int)__cond_142 != 0) 
#line 991 
                                  __compiletime_assert_991(); else ;
      }
      
#line 991 
      struct rt2x00_field32 __constr_expr_530 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 991 
      tmp_142 = __constr_expr_530;
    }
    
#line 991 
    reg = ((unsigned int)(1 << tmp_141.bit_offset) & tmp_142.bit_mask) | reg;
  }
  
#line 992 
  rt2x00mmio_register_write(rt2x00dev,140U,reg);
  
#line 994 
  rt2x00mmio_register_write(rt2x00dev,196U,1060843776U);
  
#line 996 
  rt2x00mmio_register_write(rt2x00dev,288U,65280U);
  
#line 997 
  rt2x00mmio_register_write(rt2x00dev,312U,240U);
  
#line 999 
  tmp_143 = (*(((rt2x00dev->ops)->lib)->set_device_state))(rt2x00dev,(enum dev_state)STATE_AWAKE);
  
#line 999 
  if (tmp_143 != 0) {
    
#line 1000 
    __retres = -16;
    
#line 1000 
    goto return_label;
  }
  else ;
  
#line 1002 
  rt2x00mmio_register_write(rt2x00dev,224U,2175523U);
  
#line 1003 
  rt2x00mmio_register_write(rt2x00dev,228U,2315544U);
  
#line 1005 
  rt2x00mmio_register_read(rt2x00dev,308U,& reg);
  {
    struct rt2x00_field32 tmp_144;
    struct rt2x00_field32 tmp_145;
    struct rt2x00_field32 tmp_146;
    {
      struct rt2x00_field32 __dummy_47;
      struct rt2x00_field32 __dummy2_47;
      
    }
    {
      {
        
#line 1006 
        bool __cond_143 = (_Bool)0;
        
#line 1006 
        if ((int)__cond_143 != 0) 
#line 1006 
                                  __compiletime_assert_1006(); else ;
      }
      
#line 1006 
      struct rt2x00_field32 __constr_expr_531 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1006 
      tmp_144 = __constr_expr_531;
    }
    
#line 1006 
    reg = ~ tmp_144.bit_mask & reg;
    {
      {
        
#line 1006 
        bool __cond_144 = (_Bool)0;
        
#line 1006 
        if ((int)__cond_144 != 0) 
#line 1006 
                                  __compiletime_assert_1006(); else ;
      }
      
#line 1006 
      struct rt2x00_field32 __constr_expr_532 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1006 
      tmp_145 = __constr_expr_532;
    }
    {
      {
        
#line 1006 
        bool __cond_145 = (_Bool)0;
        
#line 1006 
        if ((int)__cond_145 != 0) 
#line 1006 
                                  __compiletime_assert_1006(); else ;
      }
      
#line 1006 
      struct rt2x00_field32 __constr_expr_533 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1006 
      tmp_146 = __constr_expr_533;
    }
    
#line 1006 
    reg = ((unsigned int)(64 << tmp_145.bit_offset) & tmp_146.bit_mask) | reg;
  }
  
#line 1007 
  rt2x00mmio_register_write(rt2x00dev,308U,reg);
  
#line 1009 
  rt2x00mmio_register_read(rt2x00dev,232U,& reg);
  {
    struct rt2x00_field32 tmp_147;
    struct rt2x00_field32 tmp_148;
    struct rt2x00_field32 tmp_149;
    {
      struct rt2x00_field32 __dummy_48;
      struct rt2x00_field32 __dummy2_48;
      
    }
    {
      {
        
#line 1010 
        bool __cond_146 = (_Bool)0;
        
#line 1010 
        if ((int)__cond_146 != 0) 
#line 1010 
                                  __compiletime_assert_1010(); else ;
      }
      
#line 1010 
      struct rt2x00_field32 __constr_expr_534 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1010 
      tmp_147 = __constr_expr_534;
    }
    
#line 1010 
    reg = ~ tmp_147.bit_mask & reg;
    {
      {
        
#line 1010 
        bool __cond_147 = (_Bool)0;
        
#line 1010 
        if ((int)__cond_147 != 0) 
#line 1010 
                                  __compiletime_assert_1010(); else ;
      }
      
#line 1010 
      struct rt2x00_field32 __constr_expr_535 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1010 
      tmp_148 = __constr_expr_535;
    }
    {
      {
        
#line 1010 
        bool __cond_148 = (_Bool)0;
        
#line 1010 
        if ((int)__cond_148 != 0) 
#line 1010 
                                  __compiletime_assert_1010(); else ;
      }
      
#line 1010 
      struct rt2x00_field32 __constr_expr_536 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1010 
      tmp_149 = __constr_expr_536;
    }
    
#line 1010 
    reg = ((unsigned int)(17 << tmp_148.bit_offset) & tmp_149.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_150;
    struct rt2x00_field32 tmp_151;
    struct rt2x00_field32 tmp_152;
    {
      struct rt2x00_field32 __dummy_49;
      struct rt2x00_field32 __dummy2_49;
      
    }
    {
      {
        
#line 1011 
        bool __cond_149 = (_Bool)0;
        
#line 1011 
        if ((int)__cond_149 != 0) 
#line 1011 
                                  __compiletime_assert_1011(); else ;
      }
      
#line 1011 
      struct rt2x00_field32 __constr_expr_537 = {.bit_offset = 8U, .bit_mask = 32512U};
      
#line 1011 
      tmp_150 = __constr_expr_537;
    }
    
#line 1011 
    reg = ~ tmp_150.bit_mask & reg;
    {
      {
        
#line 1011 
        bool __cond_150 = (_Bool)0;
        
#line 1011 
        if ((int)__cond_150 != 0) 
#line 1011 
                                  __compiletime_assert_1011(); else ;
      }
      
#line 1011 
      struct rt2x00_field32 __constr_expr_538 = {.bit_offset = 8U, .bit_mask = 32512U};
      
#line 1011 
      tmp_151 = __constr_expr_538;
    }
    {
      {
        
#line 1011 
        bool __cond_151 = (_Bool)0;
        
#line 1011 
        if ((int)__cond_151 != 0) 
#line 1011 
                                  __compiletime_assert_1011(); else ;
      }
      
#line 1011 
      struct rt2x00_field32 __constr_expr_539 = {.bit_offset = 8U, .bit_mask = 32512U};
      
#line 1011 
      tmp_152 = __constr_expr_539;
    }
    
#line 1011 
    reg = ((unsigned int)(26 << tmp_151.bit_offset) & tmp_152.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_153;
    struct rt2x00_field32 tmp_154;
    struct rt2x00_field32 tmp_155;
    {
      struct rt2x00_field32 __dummy_50;
      struct rt2x00_field32 __dummy2_50;
      
    }
    {
      {
        
#line 1012 
        bool __cond_152 = (_Bool)0;
        
#line 1012 
        if ((int)__cond_152 != 0) 
#line 1012 
                                  __compiletime_assert_1012(); else ;
      }
      
#line 1012 
      struct rt2x00_field32 __constr_expr_540 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 1012 
      tmp_153 = __constr_expr_540;
    }
    
#line 1012 
    reg = ~ tmp_153.bit_mask & reg;
    {
      {
        
#line 1012 
        bool __cond_153 = (_Bool)0;
        
#line 1012 
        if ((int)__cond_153 != 0) 
#line 1012 
                                  __compiletime_assert_1012(); else ;
      }
      
#line 1012 
      struct rt2x00_field32 __constr_expr_541 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 1012 
      tmp_154 = __constr_expr_541;
    }
    {
      {
        
#line 1012 
        bool __cond_154 = (_Bool)0;
        
#line 1012 
        if ((int)__cond_154 != 0) 
#line 1012 
                                  __compiletime_assert_1012(); else ;
      }
      
#line 1012 
      struct rt2x00_field32 __constr_expr_542 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 1012 
      tmp_155 = __constr_expr_542;
    }
    
#line 1012 
    reg = ((unsigned int)(1 << tmp_154.bit_offset) & tmp_155.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_156;
    struct rt2x00_field32 tmp_157;
    struct rt2x00_field32 tmp_158;
    {
      struct rt2x00_field32 __dummy_51;
      struct rt2x00_field32 __dummy2_51;
      
    }
    {
      {
        
#line 1013 
        bool __cond_155 = (_Bool)0;
        
#line 1013 
        if ((int)__cond_155 != 0) 
#line 1013 
                                  __compiletime_assert_1013(); else ;
      }
      
#line 1013 
      struct rt2x00_field32 __constr_expr_543 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 1013 
      tmp_156 = __constr_expr_543;
    }
    
#line 1013 
    reg = ~ tmp_156.bit_mask & reg;
    {
      {
        
#line 1013 
        bool __cond_156 = (_Bool)0;
        
#line 1013 
        if ((int)__cond_156 != 0) 
#line 1013 
                                  __compiletime_assert_1013(); else ;
      }
      
#line 1013 
      struct rt2x00_field32 __constr_expr_544 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 1013 
      tmp_157 = __constr_expr_544;
    }
    {
      {
        
#line 1013 
        bool __cond_157 = (_Bool)0;
        
#line 1013 
        if ((int)__cond_157 != 0) 
#line 1013 
                                  __compiletime_assert_1013(); else ;
      }
      
#line 1013 
      struct rt2x00_field32 __constr_expr_545 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 1013 
      tmp_158 = __constr_expr_545;
    }
    
#line 1013 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_159;
    struct rt2x00_field32 tmp_160;
    struct rt2x00_field32 tmp_161;
    {
      struct rt2x00_field32 __dummy_52;
      struct rt2x00_field32 __dummy2_52;
      
    }
    {
      {
        
#line 1014 
        bool __cond_158 = (_Bool)0;
        
#line 1014 
        if ((int)__cond_158 != 0) 
#line 1014 
                                  __compiletime_assert_1014(); else ;
      }
      
#line 1014 
      struct rt2x00_field32 __constr_expr_546 = {.bit_offset = 24U, .bit_mask = 2130706432U};
      
#line 1014 
      tmp_159 = __constr_expr_546;
    }
    
#line 1014 
    reg = ~ tmp_159.bit_mask & reg;
    {
      {
        
#line 1014 
        bool __cond_159 = (_Bool)0;
        
#line 1014 
        if ((int)__cond_159 != 0) 
#line 1014 
                                  __compiletime_assert_1014(); else ;
      }
      
#line 1014 
      struct rt2x00_field32 __constr_expr_547 = {.bit_offset = 24U, .bit_mask = 2130706432U};
      
#line 1014 
      tmp_160 = __constr_expr_547;
    }
    {
      {
        
#line 1014 
        bool __cond_160 = (_Bool)0;
        
#line 1014 
        if ((int)__cond_160 != 0) 
#line 1014 
                                  __compiletime_assert_1014(); else ;
      }
      
#line 1014 
      struct rt2x00_field32 __constr_expr_548 = {.bit_offset = 24U, .bit_mask = 2130706432U};
      
#line 1014 
      tmp_161 = __constr_expr_548;
    }
    
#line 1014 
    reg = ((unsigned int)(26 << tmp_160.bit_offset) & tmp_161.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_162;
    struct rt2x00_field32 tmp_163;
    struct rt2x00_field32 tmp_164;
    {
      struct rt2x00_field32 __dummy_53;
      struct rt2x00_field32 __dummy2_53;
      
    }
    {
      {
        
#line 1015 
        bool __cond_161 = (_Bool)0;
        
#line 1015 
        if ((int)__cond_161 != 0) 
#line 1015 
                                  __compiletime_assert_1015(); else ;
      }
      
#line 1015 
      struct rt2x00_field32 __constr_expr_549 = {.bit_offset = 31U, .bit_mask = 2147483648U};
      
#line 1015 
      tmp_162 = __constr_expr_549;
    }
    
#line 1015 
    reg = ~ tmp_162.bit_mask & reg;
    {
      {
        
#line 1015 
        bool __cond_162 = (_Bool)0;
        
#line 1015 
        if ((int)__cond_162 != 0) 
#line 1015 
                                  __compiletime_assert_1015(); else ;
      }
      
#line 1015 
      struct rt2x00_field32 __constr_expr_550 = {.bit_offset = 31U, .bit_mask = 2147483648U};
      
#line 1015 
      tmp_163 = __constr_expr_550;
    }
    {
      {
        
#line 1015 
        bool __cond_163 = (_Bool)0;
        
#line 1015 
        if ((int)__cond_163 != 0) 
#line 1015 
                                  __compiletime_assert_1015(); else ;
      }
      
#line 1015 
      struct rt2x00_field32 __constr_expr_551 = {.bit_offset = 31U, .bit_mask = 2147483648U};
      
#line 1015 
      tmp_164 = __constr_expr_551;
    }
    
#line 1015 
    reg = ((unsigned int)(1 << tmp_163.bit_offset) & tmp_164.bit_mask) | reg;
  }
  
#line 1016 
  rt2x00mmio_register_write(rt2x00dev,232U,reg);
  
#line 1018 
  rt2x00mmio_register_write(rt2x00dev,348U,2182644224U);
  
#line 1020 
  rt2x00mmio_register_write(rt2x00dev,272U,32U);
  
#line 1022 
  rt2x00mmio_register_read(rt2x00dev,4U,& reg);
  {
    struct rt2x00_field32 tmp_165;
    struct rt2x00_field32 tmp_166;
    struct rt2x00_field32 tmp_167;
    {
      struct rt2x00_field32 __dummy_54;
      struct rt2x00_field32 __dummy2_54;
      
    }
    {
      {
        
#line 1023 
        bool __cond_164 = (_Bool)0;
        
#line 1023 
        if ((int)__cond_164 != 0) 
#line 1023 
                                  __compiletime_assert_1023(); else ;
      }
      
#line 1023 
      struct rt2x00_field32 __constr_expr_552 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1023 
      tmp_165 = __constr_expr_552;
    }
    
#line 1023 
    reg = ~ tmp_165.bit_mask & reg;
    {
      {
        
#line 1023 
        bool __cond_165 = (_Bool)0;
        
#line 1023 
        if ((int)__cond_165 != 0) 
#line 1023 
                                  __compiletime_assert_1023(); else ;
      }
      
#line 1023 
      struct rt2x00_field32 __constr_expr_553 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1023 
      tmp_166 = __constr_expr_553;
    }
    {
      {
        
#line 1023 
        bool __cond_166 = (_Bool)0;
        
#line 1023 
        if ((int)__cond_166 != 0) 
#line 1023 
                                  __compiletime_assert_1023(); else ;
      }
      
#line 1023 
      struct rt2x00_field32 __constr_expr_554 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1023 
      tmp_167 = __constr_expr_554;
    }
    
#line 1023 
    reg = ((unsigned int)(1 << tmp_166.bit_offset) & tmp_167.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_168;
    struct rt2x00_field32 tmp_169;
    struct rt2x00_field32 tmp_170;
    {
      struct rt2x00_field32 __dummy_55;
      struct rt2x00_field32 __dummy2_55;
      
    }
    {
      {
        
#line 1024 
        bool __cond_167 = (_Bool)0;
        
#line 1024 
        if ((int)__cond_167 != 0) 
#line 1024 
                                  __compiletime_assert_1024(); else ;
      }
      
#line 1024 
      struct rt2x00_field32 __constr_expr_555 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 1024 
      tmp_168 = __constr_expr_555;
    }
    
#line 1024 
    reg = ~ tmp_168.bit_mask & reg;
    {
      {
        
#line 1024 
        bool __cond_168 = (_Bool)0;
        
#line 1024 
        if ((int)__cond_168 != 0) 
#line 1024 
                                  __compiletime_assert_1024(); else ;
      }
      
#line 1024 
      struct rt2x00_field32 __constr_expr_556 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 1024 
      tmp_169 = __constr_expr_556;
    }
    {
      {
        
#line 1024 
        bool __cond_169 = (_Bool)0;
        
#line 1024 
        if ((int)__cond_169 != 0) 
#line 1024 
                                  __compiletime_assert_1024(); else ;
      }
      
#line 1024 
      struct rt2x00_field32 __constr_expr_557 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 1024 
      tmp_170 = __constr_expr_557;
    }
    
#line 1024 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_171;
    struct rt2x00_field32 tmp_172;
    struct rt2x00_field32 tmp_173;
    {
      struct rt2x00_field32 __dummy_56;
      struct rt2x00_field32 __dummy2_56;
      
    }
    {
      {
        
#line 1025 
        bool __cond_170 = (_Bool)0;
        
#line 1025 
        if ((int)__cond_170 != 0) 
#line 1025 
                                  __compiletime_assert_1025(); else ;
      }
      
#line 1025 
      struct rt2x00_field32 __constr_expr_558 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 1025 
      tmp_171 = __constr_expr_558;
    }
    
#line 1025 
    reg = ~ tmp_171.bit_mask & reg;
    {
      {
        
#line 1025 
        bool __cond_171 = (_Bool)0;
        
#line 1025 
        if ((int)__cond_171 != 0) 
#line 1025 
                                  __compiletime_assert_1025(); else ;
      }
      
#line 1025 
      struct rt2x00_field32 __constr_expr_559 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 1025 
      tmp_172 = __constr_expr_559;
    }
    {
      {
        
#line 1025 
        bool __cond_172 = (_Bool)0;
        
#line 1025 
        if ((int)__cond_172 != 0) 
#line 1025 
                                  __compiletime_assert_1025(); else ;
      }
      
#line 1025 
      struct rt2x00_field32 __constr_expr_560 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 1025 
      tmp_173 = __constr_expr_560;
    }
    
#line 1025 
    reg = 0U | reg;
  }
  
#line 1026 
  rt2x00mmio_register_write(rt2x00dev,4U,reg);
  
#line 1028 
  rt2x00mmio_register_read(rt2x00dev,4U,& reg);
  {
    struct rt2x00_field32 tmp_174;
    struct rt2x00_field32 tmp_175;
    struct rt2x00_field32 tmp_176;
    {
      struct rt2x00_field32 __dummy_57;
      struct rt2x00_field32 __dummy2_57;
      
    }
    {
      {
        
#line 1029 
        bool __cond_173 = (_Bool)0;
        
#line 1029 
        if ((int)__cond_173 != 0) 
#line 1029 
                                  __compiletime_assert_1029(); else ;
      }
      
#line 1029 
      struct rt2x00_field32 __constr_expr_561 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1029 
      tmp_174 = __constr_expr_561;
    }
    
#line 1029 
    reg = ~ tmp_174.bit_mask & reg;
    {
      {
        
#line 1029 
        bool __cond_174 = (_Bool)0;
        
#line 1029 
        if ((int)__cond_174 != 0) 
#line 1029 
                                  __compiletime_assert_1029(); else ;
      }
      
#line 1029 
      struct rt2x00_field32 __constr_expr_562 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1029 
      tmp_175 = __constr_expr_562;
    }
    {
      {
        
#line 1029 
        bool __cond_175 = (_Bool)0;
        
#line 1029 
        if ((int)__cond_175 != 0) 
#line 1029 
                                  __compiletime_assert_1029(); else ;
      }
      
#line 1029 
      struct rt2x00_field32 __constr_expr_563 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1029 
      tmp_176 = __constr_expr_563;
    }
    
#line 1029 
    reg = 0U | reg;
  }
  {
    struct rt2x00_field32 tmp_177;
    struct rt2x00_field32 tmp_178;
    struct rt2x00_field32 tmp_179;
    {
      struct rt2x00_field32 __dummy_58;
      struct rt2x00_field32 __dummy2_58;
      
    }
    {
      {
        
#line 1030 
        bool __cond_176 = (_Bool)0;
        
#line 1030 
        if ((int)__cond_176 != 0) 
#line 1030 
                                  __compiletime_assert_1030(); else ;
      }
      
#line 1030 
      struct rt2x00_field32 __constr_expr_564 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 1030 
      tmp_177 = __constr_expr_564;
    }
    
#line 1030 
    reg = ~ tmp_177.bit_mask & reg;
    {
      {
        
#line 1030 
        bool __cond_177 = (_Bool)0;
        
#line 1030 
        if ((int)__cond_177 != 0) 
#line 1030 
                                  __compiletime_assert_1030(); else ;
      }
      
#line 1030 
      struct rt2x00_field32 __constr_expr_565 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 1030 
      tmp_178 = __constr_expr_565;
    }
    {
      {
        
#line 1030 
        bool __cond_178 = (_Bool)0;
        
#line 1030 
        if ((int)__cond_178 != 0) 
#line 1030 
                                  __compiletime_assert_1030(); else ;
      }
      
#line 1030 
      struct rt2x00_field32 __constr_expr_566 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 1030 
      tmp_179 = __constr_expr_566;
    }
    
#line 1030 
    reg = ((unsigned int)(1 << tmp_178.bit_offset) & tmp_179.bit_mask) | reg;
  }
  
#line 1031 
  rt2x00mmio_register_write(rt2x00dev,4U,reg);
  
#line 1038 
  rt2x00mmio_register_read(rt2x00dev,160U,& reg);
  
#line 1039 
  rt2x00mmio_register_read(rt2x00dev,188U,& reg);
  
#line 1041 
  __retres = 0;
  return_label: 
#line 1041 
                return __retres;
}


#line 1044  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_wait_bbp_ready(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  unsigned int i;
  u8 value;
  
#line 1049 
  i = 0U;
  
#line 1049 
  goto ldv_58783;
  ldv_58782: 
#line 1050 
  ;
  
#line 1050 
  rt2500pci_bbp_read(rt2x00dev,0U,& value);
  
#line 1051 
  if ((unsigned int)value + 255U <= 253U) {
    
#line 1052 
    __retres = 0;
    
#line 1052 
    goto return_label;
  }
  else ;
  
#line 1053 
  __const_udelay(429500UL);
  
#line 1049 
  i += 1U;
  ldv_58783: 
#line 1050 
  ;
  
#line 1049 
  if (i <= 99U) 
#line 1051 
                goto ldv_58782; else 
#line 1054 
                                     goto ldv_58784;
  ldv_58784: 
#line 1055 
  ;
  
#line 1056 
  dev_err((struct device const *)(& ((rt2x00dev->hw)->wiphy)->dev),"%s: Error - ","rt2500pci_wait_bbp_ready");
  
#line 1057 
  __retres = -13;
  return_label: 
#line 1057 
                return __retres;
}


#line 1105 
void __compiletime_assert_1105(void);


#line 1106 
void __compiletime_assert_1106(void);


#line 1060  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_init_bbp(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  unsigned int i;
  u16 eeprom;
  u8 reg_id;
  u8 value;
  int tmp;
  
#line 1067 
  tmp = rt2500pci_wait_bbp_ready(rt2x00dev);
  
#line 1067 
  if ((long)(tmp != 0) != 0L) {
    
#line 1068 
    __retres = -13;
    
#line 1068 
    goto return_label;
  }
  else ;
  
#line 1070 
  rt2500pci_bbp_write(rt2x00dev,3U,(unsigned char)2);
  
#line 1071 
  rt2500pci_bbp_write(rt2x00dev,4U,(unsigned char)25);
  
#line 1072 
  rt2500pci_bbp_write(rt2x00dev,14U,(unsigned char)28);
  
#line 1073 
  rt2500pci_bbp_write(rt2x00dev,15U,(unsigned char)48);
  
#line 1074 
  rt2500pci_bbp_write(rt2x00dev,16U,(unsigned char)172);
  
#line 1075 
  rt2500pci_bbp_write(rt2x00dev,18U,(unsigned char)24);
  
#line 1076 
  rt2500pci_bbp_write(rt2x00dev,19U,(unsigned char)255);
  
#line 1077 
  rt2500pci_bbp_write(rt2x00dev,20U,(unsigned char)30);
  
#line 1078 
  rt2500pci_bbp_write(rt2x00dev,21U,(unsigned char)8);
  
#line 1079 
  rt2500pci_bbp_write(rt2x00dev,22U,(unsigned char)8);
  
#line 1080 
  rt2500pci_bbp_write(rt2x00dev,23U,(unsigned char)8);
  
#line 1081 
  rt2500pci_bbp_write(rt2x00dev,24U,(unsigned char)112);
  
#line 1082 
  rt2500pci_bbp_write(rt2x00dev,25U,(unsigned char)64);
  
#line 1083 
  rt2500pci_bbp_write(rt2x00dev,26U,(unsigned char)8);
  
#line 1084 
  rt2500pci_bbp_write(rt2x00dev,27U,(unsigned char)35);
  
#line 1085 
  rt2500pci_bbp_write(rt2x00dev,30U,(unsigned char)16);
  
#line 1086 
  rt2500pci_bbp_write(rt2x00dev,31U,(unsigned char)43);
  
#line 1087 
  rt2500pci_bbp_write(rt2x00dev,32U,(unsigned char)185);
  
#line 1088 
  rt2500pci_bbp_write(rt2x00dev,34U,(unsigned char)18);
  
#line 1089 
  rt2500pci_bbp_write(rt2x00dev,35U,(unsigned char)80);
  
#line 1090 
  rt2500pci_bbp_write(rt2x00dev,39U,(unsigned char)196);
  
#line 1091 
  rt2500pci_bbp_write(rt2x00dev,40U,(unsigned char)2);
  
#line 1092 
  rt2500pci_bbp_write(rt2x00dev,41U,(unsigned char)96);
  
#line 1093 
  rt2500pci_bbp_write(rt2x00dev,53U,(unsigned char)16);
  
#line 1094 
  rt2500pci_bbp_write(rt2x00dev,54U,(unsigned char)24);
  
#line 1095 
  rt2500pci_bbp_write(rt2x00dev,56U,(unsigned char)8);
  
#line 1096 
  rt2500pci_bbp_write(rt2x00dev,57U,(unsigned char)16);
  
#line 1097 
  rt2500pci_bbp_write(rt2x00dev,58U,(unsigned char)8);
  
#line 1098 
  rt2500pci_bbp_write(rt2x00dev,61U,(unsigned char)109);
  
#line 1099 
  rt2500pci_bbp_write(rt2x00dev,62U,(unsigned char)16);
  
#line 1101 
  i = 0U;
  
#line 1101 
  goto ldv_58838;
  ldv_58837: 
#line 1102 
  ;
  
#line 1102 
  rt2x00_eeprom_read(rt2x00dev,i + 19U,& eeprom);
  
#line 1104 
  if ((unsigned int)eeprom + 65535U <= 65533U) {
    int tmp_2;
    int tmp_5;
    {
      struct rt2x00_field16 tmp_0;
      struct rt2x00_field16 tmp_1;
      {
        struct rt2x00_field16 __dummy;
        struct rt2x00_field16 __dummy2;
        
      }
      {
        {
          
#line 1105 
          bool __cond = (_Bool)0;
          
#line 1105 
          if ((int)__cond != 0) 
#line 1105 
                                __compiletime_assert_1105(); else ;
        }
        
#line 1105 
        struct rt2x00_field16 __constr_expr_567 = {.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
        
#line 1105 
        tmp_0 = __constr_expr_567;
      }
      {
        {
          
#line 1105 
          bool __cond_0 = (_Bool)0;
          
#line 1105 
          if ((int)__cond_0 != 0) 
#line 1105 
                                  __compiletime_assert_1105(); else ;
        }
        
#line 1105 
        struct rt2x00_field16 __constr_expr_568 = {.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
        
#line 1105 
        tmp_1 = __constr_expr_568;
      }
      
#line 1105 
      ;
      
#line 1105 
      tmp_2 = ((int)tmp_0.bit_mask & (int)eeprom) >> (int)tmp_1.bit_offset;
    }
    
#line 1105 
    reg_id = (unsigned char)tmp_2;
    {
      struct rt2x00_field16 tmp_3;
      struct rt2x00_field16 tmp_4;
      {
        struct rt2x00_field16 __dummy_0;
        struct rt2x00_field16 __dummy2_0;
        
      }
      {
        {
          
#line 1106 
          bool __cond_1 = (_Bool)0;
          
#line 1106 
          if ((int)__cond_1 != 0) 
#line 1106 
                                  __compiletime_assert_1106(); else ;
        }
        
#line 1106 
        struct rt2x00_field16 __constr_expr_569 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
        
#line 1106 
        tmp_3 = __constr_expr_569;
      }
      {
        {
          
#line 1106 
          bool __cond_2 = (_Bool)0;
          
#line 1106 
          if ((int)__cond_2 != 0) 
#line 1106 
                                  __compiletime_assert_1106(); else ;
        }
        
#line 1106 
        struct rt2x00_field16 __constr_expr_570 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
        
#line 1106 
        tmp_4 = __constr_expr_570;
      }
      
#line 1106 
      ;
      
#line 1106 
      tmp_5 = ((int)tmp_3.bit_mask & (int)eeprom) >> (int)tmp_4.bit_offset;
    }
    
#line 1106 
    value = (unsigned char)tmp_5;
    
#line 1107 
    rt2500pci_bbp_write(rt2x00dev,(unsigned int)reg_id,(unsigned char)((int)value));
  }
  else ;
  
#line 1101 
  i += 1U;
  ldv_58838: 
#line 1102 
  ;
  
#line 1101 
  if (i <= 15U) 
#line 1103 
                goto ldv_58837; else 
#line 1106 
                                     goto ldv_58839;
  ldv_58839: 
#line 1107 
  ;
  
#line 1111 
  __retres = 0;
  return_label: 
#line 1111 
                return __retres;
}


#line 1140 
void __compiletime_assert_1140(void);


#line 1141 
void __compiletime_assert_1141(void);


#line 1142 
void __compiletime_assert_1142(void);


#line 1143 
void __compiletime_assert_1143(void);


#line 1144 
void __compiletime_assert_1144(void);


#line 1117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_toggle_irq(struct rt2x00_dev *rt2x00dev, enum dev_state state)
{
  u32 reg;
  unsigned long flags;
  
#line 1120 
  int mask = state == (unsigned int)STATE_RADIO_IRQ_OFF;
  
#line 1128 
  if (state == (unsigned int)STATE_RADIO_IRQ_ON) {
    
#line 1129 
    rt2x00mmio_register_read(rt2x00dev,28U,& reg);
    
#line 1130 
    rt2x00mmio_register_write(rt2x00dev,28U,reg);
  }
  else ;
  
#line 1137 
  ldv___ldv_spin_lock_78(& rt2x00dev->irqmask_lock);
  
#line 1139 
  rt2x00mmio_register_read(rt2x00dev,32U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1140 
        bool __cond = (_Bool)0;
        
#line 1140 
        if ((int)__cond != 0) 
#line 1140 
                              __compiletime_assert_1140(); else ;
      }
      
#line 1140 
      struct rt2x00_field32 __constr_expr_571 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1140 
      tmp = __constr_expr_571;
    }
    
#line 1140 
    reg = ~ tmp.bit_mask & reg;
    {
      {
        
#line 1140 
        bool __cond_0 = (_Bool)0;
        
#line 1140 
        if ((int)__cond_0 != 0) 
#line 1140 
                                __compiletime_assert_1140(); else ;
      }
      
#line 1140 
      struct rt2x00_field32 __constr_expr_572 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1140 
      tmp_0 = __constr_expr_572;
    }
    {
      {
        
#line 1140 
        bool __cond_1 = (_Bool)0;
        
#line 1140 
        if ((int)__cond_1 != 0) 
#line 1140 
                                __compiletime_assert_1140(); else ;
      }
      
#line 1140 
      struct rt2x00_field32 __constr_expr_573 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1140 
      tmp_1 = __constr_expr_573;
    }
    
#line 1140 
    reg = ((unsigned int)(mask << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 1141 
        bool __cond_2 = (_Bool)0;
        
#line 1141 
        if ((int)__cond_2 != 0) 
#line 1141 
                                __compiletime_assert_1141(); else ;
      }
      
#line 1141 
      struct rt2x00_field32 __constr_expr_574 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 1141 
      tmp_2 = __constr_expr_574;
    }
    
#line 1141 
    reg = ~ tmp_2.bit_mask & reg;
    {
      {
        
#line 1141 
        bool __cond_3 = (_Bool)0;
        
#line 1141 
        if ((int)__cond_3 != 0) 
#line 1141 
                                __compiletime_assert_1141(); else ;
      }
      
#line 1141 
      struct rt2x00_field32 __constr_expr_575 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 1141 
      tmp_3 = __constr_expr_575;
    }
    {
      {
        
#line 1141 
        bool __cond_4 = (_Bool)0;
        
#line 1141 
        if ((int)__cond_4 != 0) 
#line 1141 
                                __compiletime_assert_1141(); else ;
      }
      
#line 1141 
      struct rt2x00_field32 __constr_expr_576 = {.bit_offset = 3U, .bit_mask = 8U};
      
#line 1141 
      tmp_4 = __constr_expr_576;
    }
    
#line 1141 
    reg = ((unsigned int)(mask << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_5;
    struct rt2x00_field32 tmp_6;
    struct rt2x00_field32 tmp_7;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 1142 
        bool __cond_5 = (_Bool)0;
        
#line 1142 
        if ((int)__cond_5 != 0) 
#line 1142 
                                __compiletime_assert_1142(); else ;
      }
      
#line 1142 
      struct rt2x00_field32 __constr_expr_577 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 1142 
      tmp_5 = __constr_expr_577;
    }
    
#line 1142 
    reg = ~ tmp_5.bit_mask & reg;
    {
      {
        
#line 1142 
        bool __cond_6 = (_Bool)0;
        
#line 1142 
        if ((int)__cond_6 != 0) 
#line 1142 
                                __compiletime_assert_1142(); else ;
      }
      
#line 1142 
      struct rt2x00_field32 __constr_expr_578 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 1142 
      tmp_6 = __constr_expr_578;
    }
    {
      {
        
#line 1142 
        bool __cond_7 = (_Bool)0;
        
#line 1142 
        if ((int)__cond_7 != 0) 
#line 1142 
                                __compiletime_assert_1142(); else ;
      }
      
#line 1142 
      struct rt2x00_field32 __constr_expr_579 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 1142 
      tmp_7 = __constr_expr_579;
    }
    
#line 1142 
    reg = ((unsigned int)(mask << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_8;
    struct rt2x00_field32 tmp_9;
    struct rt2x00_field32 tmp_10;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 1143 
        bool __cond_8 = (_Bool)0;
        
#line 1143 
        if ((int)__cond_8 != 0) 
#line 1143 
                                __compiletime_assert_1143(); else ;
      }
      
#line 1143 
      struct rt2x00_field32 __constr_expr_580 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 1143 
      tmp_8 = __constr_expr_580;
    }
    
#line 1143 
    reg = ~ tmp_8.bit_mask & reg;
    {
      {
        
#line 1143 
        bool __cond_9 = (_Bool)0;
        
#line 1143 
        if ((int)__cond_9 != 0) 
#line 1143 
                                __compiletime_assert_1143(); else ;
      }
      
#line 1143 
      struct rt2x00_field32 __constr_expr_581 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 1143 
      tmp_9 = __constr_expr_581;
    }
    {
      {
        
#line 1143 
        bool __cond_10 = (_Bool)0;
        
#line 1143 
        if ((int)__cond_10 != 0) 
#line 1143 
                                 __compiletime_assert_1143(); else ;
      }
      
#line 1143 
      struct rt2x00_field32 __constr_expr_582 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 1143 
      tmp_10 = __constr_expr_582;
    }
    
#line 1143 
    reg = ((unsigned int)(mask << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_11;
    struct rt2x00_field32 tmp_12;
    struct rt2x00_field32 tmp_13;
    {
      struct rt2x00_field32 __dummy_3;
      struct rt2x00_field32 __dummy2_3;
      
    }
    {
      {
        
#line 1144 
        bool __cond_11 = (_Bool)0;
        
#line 1144 
        if ((int)__cond_11 != 0) 
#line 1144 
                                 __compiletime_assert_1144(); else ;
      }
      
#line 1144 
      struct rt2x00_field32 __constr_expr_583 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1144 
      tmp_11 = __constr_expr_583;
    }
    
#line 1144 
    reg = ~ tmp_11.bit_mask & reg;
    {
      {
        
#line 1144 
        bool __cond_12 = (_Bool)0;
        
#line 1144 
        if ((int)__cond_12 != 0) 
#line 1144 
                                 __compiletime_assert_1144(); else ;
      }
      
#line 1144 
      struct rt2x00_field32 __constr_expr_584 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1144 
      tmp_12 = __constr_expr_584;
    }
    {
      {
        
#line 1144 
        bool __cond_13 = (_Bool)0;
        
#line 1144 
        if ((int)__cond_13 != 0) 
#line 1144 
                                 __compiletime_assert_1144(); else ;
      }
      
#line 1144 
      struct rt2x00_field32 __constr_expr_585 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1144 
      tmp_13 = __constr_expr_585;
    }
    
#line 1144 
    reg = ((unsigned int)(mask << tmp_12.bit_offset) & tmp_13.bit_mask) | reg;
  }
  
#line 1145 
  rt2x00mmio_register_write(rt2x00dev,32U,reg);
  
#line 1147 
  ldv_spin_unlock_irqrestore_79(& rt2x00dev->irqmask_lock,flags);
  
#line 1149 
  if (state == (unsigned int)STATE_RADIO_IRQ_OFF) {
    
#line 1153 
    tasklet_kill(& rt2x00dev->txstatus_tasklet);
    
#line 1154 
    tasklet_kill(& rt2x00dev->rxdone_tasklet);
    
#line 1155 
    tasklet_kill(& rt2x00dev->tbtt_tasklet);
  }
  else ;
  
#line 1157 
  return;
}


#line 1159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_enable_radio(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  int tmp_1;
  int tmp;
  
#line 1164 
  tmp = rt2500pci_init_queues(rt2x00dev);
  
#line 1164 
  if ((long)(tmp != 0) != 0L) 
#line 1164 
                              tmp_1 = 1;
  else {
    int tmp_0;
    
#line 1164 
    tmp_0 = rt2500pci_init_registers(rt2x00dev);
    
#line 1164 
    if ((long)(tmp_0 != 0) != 0L) 
#line 1164 
                                  tmp_1 = 1; else 
#line 1164 
                                                  tmp_1 = 0;
  }
  
#line 1164 
  if (tmp_1 != 0) {
    
#line 1167 
    __retres = -5;
    
#line 1167 
    goto return_label;
  }
  else {
    int tmp_2;
    
#line 1164 
    tmp_2 = rt2500pci_init_bbp(rt2x00dev);
    
#line 1164 
    if ((long)(tmp_2 != 0) != 0L) {
      
#line 1167 
      __retres = -5;
      
#line 1167 
      goto return_label;
    }
    else ;
  }
  
#line 1169 
  __retres = 0;
  return_label: 
#line 1169 
                return __retres;
}


#line 1172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_disable_radio(struct rt2x00_dev *rt2x00dev)
{
  
#line 1177 
  rt2x00mmio_register_write(rt2x00dev,196U,0U);
  
#line 1178 
  return;
}


#line 1192 
void __compiletime_assert_1192(void);


#line 1193 
void __compiletime_assert_1193(void);


#line 1194 
void __compiletime_assert_1194(void);


#line 1195 
void __compiletime_assert_1195(void);


#line 1205 
void __compiletime_assert_1205(void);


#line 1206 
void __compiletime_assert_1206(void);


#line 1180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_set_state(struct rt2x00_dev *rt2x00dev, enum dev_state state)
{
  int __retres;
  u32 reg;
  u32 reg2;
  unsigned int i;
  char put_to_sleep;
  char bbp_state;
  char rf_state;
  unsigned int tmp_13;
  unsigned int tmp_16;
  
#line 1189 
  put_to_sleep = (char)(state != (unsigned int)STATE_AWAKE);
  
#line 1191 
  rt2x00mmio_register_read(rt2x00dev,216U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1192 
        bool __cond = (_Bool)0;
        
#line 1192 
        if ((int)__cond != 0) 
#line 1192 
                              __compiletime_assert_1192(); else ;
      }
      
#line 1192 
      struct rt2x00_field32 __constr_expr_586 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1192 
      tmp = __constr_expr_586;
    }
    
#line 1192 
    reg = ~ tmp.bit_mask & reg;
    {
      {
        
#line 1192 
        bool __cond_0 = (_Bool)0;
        
#line 1192 
        if ((int)__cond_0 != 0) 
#line 1192 
                                __compiletime_assert_1192(); else ;
      }
      
#line 1192 
      struct rt2x00_field32 __constr_expr_587 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1192 
      tmp_0 = __constr_expr_587;
    }
    {
      {
        
#line 1192 
        bool __cond_1 = (_Bool)0;
        
#line 1192 
        if ((int)__cond_1 != 0) 
#line 1192 
                                __compiletime_assert_1192(); else ;
      }
      
#line 1192 
      struct rt2x00_field32 __constr_expr_588 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1192 
      tmp_1 = __constr_expr_588;
    }
    
#line 1192 
    reg = ((unsigned int)(1 << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 1193 
        bool __cond_2 = (_Bool)0;
        
#line 1193 
        if ((int)__cond_2 != 0) 
#line 1193 
                                __compiletime_assert_1193(); else ;
      }
      
#line 1193 
      struct rt2x00_field32 __constr_expr_589 = {.bit_offset = 1U, .bit_mask = 6U};
      
#line 1193 
      tmp_2 = __constr_expr_589;
    }
    
#line 1193 
    reg = ~ tmp_2.bit_mask & reg;
    {
      {
        
#line 1193 
        bool __cond_3 = (_Bool)0;
        
#line 1193 
        if ((int)__cond_3 != 0) 
#line 1193 
                                __compiletime_assert_1193(); else ;
      }
      
#line 1193 
      struct rt2x00_field32 __constr_expr_590 = {.bit_offset = 1U, .bit_mask = 6U};
      
#line 1193 
      tmp_3 = __constr_expr_590;
    }
    {
      {
        
#line 1193 
        bool __cond_4 = (_Bool)0;
        
#line 1193 
        if ((int)__cond_4 != 0) 
#line 1193 
                                __compiletime_assert_1193(); else ;
      }
      
#line 1193 
      struct rt2x00_field32 __constr_expr_591 = {.bit_offset = 1U, .bit_mask = 6U};
      
#line 1193 
      tmp_4 = __constr_expr_591;
    }
    
#line 1193 
    reg = (((unsigned int)state << tmp_3.bit_offset) & tmp_4.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_5;
    struct rt2x00_field32 tmp_6;
    struct rt2x00_field32 tmp_7;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 1194 
        bool __cond_5 = (_Bool)0;
        
#line 1194 
        if ((int)__cond_5 != 0) 
#line 1194 
                                __compiletime_assert_1194(); else ;
      }
      
#line 1194 
      struct rt2x00_field32 __constr_expr_592 = {.bit_offset = 3U, .bit_mask = 24U};
      
#line 1194 
      tmp_5 = __constr_expr_592;
    }
    
#line 1194 
    reg = ~ tmp_5.bit_mask & reg;
    {
      {
        
#line 1194 
        bool __cond_6 = (_Bool)0;
        
#line 1194 
        if ((int)__cond_6 != 0) 
#line 1194 
                                __compiletime_assert_1194(); else ;
      }
      
#line 1194 
      struct rt2x00_field32 __constr_expr_593 = {.bit_offset = 3U, .bit_mask = 24U};
      
#line 1194 
      tmp_6 = __constr_expr_593;
    }
    {
      {
        
#line 1194 
        bool __cond_7 = (_Bool)0;
        
#line 1194 
        if ((int)__cond_7 != 0) 
#line 1194 
                                __compiletime_assert_1194(); else ;
      }
      
#line 1194 
      struct rt2x00_field32 __constr_expr_594 = {.bit_offset = 3U, .bit_mask = 24U};
      
#line 1194 
      tmp_7 = __constr_expr_594;
    }
    
#line 1194 
    reg = (((unsigned int)state << tmp_6.bit_offset) & tmp_7.bit_mask) | reg;
  }
  {
    struct rt2x00_field32 tmp_8;
    struct rt2x00_field32 tmp_9;
    struct rt2x00_field32 tmp_10;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 1195 
        bool __cond_8 = (_Bool)0;
        
#line 1195 
        if ((int)__cond_8 != 0) 
#line 1195 
                                __compiletime_assert_1195(); else ;
      }
      
#line 1195 
      struct rt2x00_field32 __constr_expr_595 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 1195 
      tmp_8 = __constr_expr_595;
    }
    
#line 1195 
    reg = ~ tmp_8.bit_mask & reg;
    {
      {
        
#line 1195 
        bool __cond_9 = (_Bool)0;
        
#line 1195 
        if ((int)__cond_9 != 0) 
#line 1195 
                                __compiletime_assert_1195(); else ;
      }
      
#line 1195 
      struct rt2x00_field32 __constr_expr_596 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 1195 
      tmp_9 = __constr_expr_596;
    }
    {
      {
        
#line 1195 
        bool __cond_10 = (_Bool)0;
        
#line 1195 
        if ((int)__cond_10 != 0) 
#line 1195 
                                 __compiletime_assert_1195(); else ;
      }
      
#line 1195 
      struct rt2x00_field32 __constr_expr_597 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 1195 
      tmp_10 = __constr_expr_597;
    }
    
#line 1195 
    reg = ((unsigned int)((int)put_to_sleep << tmp_9.bit_offset) & tmp_10.bit_mask) | reg;
  }
  
#line 1196 
  rt2x00mmio_register_write(rt2x00dev,216U,reg);
  
#line 1203 
  i = 0U;
  
#line 1203 
  goto ldv_59160;
  ldv_59159: 
#line 1204 
  ;
  
#line 1204 
  rt2x00mmio_register_read(rt2x00dev,216U,& reg2);
  {
    struct rt2x00_field32 tmp_11;
    struct rt2x00_field32 tmp_12;
    {
      struct rt2x00_field32 __dummy_3;
      struct rt2x00_field32 __dummy2_3;
      
    }
    {
      {
        
#line 1205 
        bool __cond_11 = (_Bool)0;
        
#line 1205 
        if ((int)__cond_11 != 0) 
#line 1205 
                                 __compiletime_assert_1205(); else ;
      }
      
#line 1205 
      struct rt2x00_field32 __constr_expr_598 = {.bit_offset = 5U, .bit_mask = 96U};
      
#line 1205 
      tmp_11 = __constr_expr_598;
    }
    {
      {
        
#line 1205 
        bool __cond_12 = (_Bool)0;
        
#line 1205 
        if ((int)__cond_12 != 0) 
#line 1205 
                                 __compiletime_assert_1205(); else ;
      }
      
#line 1205 
      struct rt2x00_field32 __constr_expr_599 = {.bit_offset = 5U, .bit_mask = 96U};
      
#line 1205 
      tmp_12 = __constr_expr_599;
    }
    
#line 1205 
    ;
    
#line 1205 
    tmp_13 = (tmp_11.bit_mask & reg2) >> tmp_12.bit_offset;
  }
  
#line 1205 
  bbp_state = (char)tmp_13;
  {
    struct rt2x00_field32 tmp_14;
    struct rt2x00_field32 tmp_15;
    {
      struct rt2x00_field32 __dummy_4;
      struct rt2x00_field32 __dummy2_4;
      
    }
    {
      {
        
#line 1206 
        bool __cond_13 = (_Bool)0;
        
#line 1206 
        if ((int)__cond_13 != 0) 
#line 1206 
                                 __compiletime_assert_1206(); else ;
      }
      
#line 1206 
      struct rt2x00_field32 __constr_expr_600 = {.bit_offset = 7U, .bit_mask = 384U};
      
#line 1206 
      tmp_14 = __constr_expr_600;
    }
    {
      {
        
#line 1206 
        bool __cond_14 = (_Bool)0;
        
#line 1206 
        if ((int)__cond_14 != 0) 
#line 1206 
                                 __compiletime_assert_1206(); else ;
      }
      
#line 1206 
      struct rt2x00_field32 __constr_expr_601 = {.bit_offset = 7U, .bit_mask = 384U};
      
#line 1206 
      tmp_15 = __constr_expr_601;
    }
    
#line 1206 
    ;
    
#line 1206 
    tmp_16 = (tmp_14.bit_mask & reg2) >> tmp_15.bit_offset;
  }
  
#line 1206 
  rf_state = (char)tmp_16;
  
#line 1207 
  if ((unsigned int)bbp_state == (unsigned int)state && (unsigned int)rf_state == (unsigned int)state) {
    
#line 1208 
    __retres = 0;
    
#line 1208 
    goto return_label;
  }
  else ;
  
#line 1209 
  rt2x00mmio_register_write(rt2x00dev,216U,reg);
  
#line 1210 
  msleep(10U);
  
#line 1203 
  i += 1U;
  ldv_59160: 
#line 1204 
  ;
  
#line 1203 
  if (i <= 99U) 
#line 1205 
                goto ldv_59159; else 
#line 1208 
                                     goto ldv_59161;
  ldv_59161: 
#line 1209 
  ;
  
#line 1213 
  __retres = -16;
  return_label: 
#line 1213 
                return __retres;
}


#line 1216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_set_device_state(struct rt2x00_dev *rt2x00dev, enum dev_state state)
{
  
#line 1219 
  int retval = 0;
  
#line 1221 
  switch ((unsigned int)state) {
    case (unsigned int)4: 
#line 1222 
    ;
    
#line 1223 
    retval = rt2500pci_enable_radio(rt2x00dev);
    
#line 1224 
    goto ldv_59168;
    case (unsigned int)5: 
#line 1225 
    ;
    
#line 1226 
    rt2500pci_disable_radio(rt2x00dev);
    
#line 1227 
    goto ldv_59168;
    case (unsigned int)6: 
#line 1228 
    ;
    case (unsigned int)7: 
#line 1229 
    ;
    
#line 1230 
    rt2500pci_toggle_irq(rt2x00dev,state);
    
#line 1231 
    goto ldv_59168;
    case (unsigned int)0: 
#line 1232 
    ;
    case (unsigned int)1: 
#line 1233 
    ;
    case (unsigned int)2: 
#line 1234 
    ;
    case (unsigned int)3: 
#line 1235 
    ;
    
#line 1236 
    retval = rt2500pci_set_state(rt2x00dev,state);
    
#line 1237 
    goto ldv_59168;
    default: 
#line 1238 
    ;
    
#line 1239 
    retval = -524;
    
#line 1240 
    goto ldv_59168;
  }
  ldv_59168: 
#line 1243 
  ;
  
#line 1243 
  if ((long)(retval != 0) != 0L) 
#line 1244 
                                 dev_err((struct device const *)(& ((rt2x00dev->hw)->wiphy)->dev),"%s: Error - ","rt2500pci_set_device_state",(unsigned int)state,retval); else ;
  
#line 1247 
  return retval;
}


#line 1265 
void __compiletime_assert_1265(void);


#line 1269 
void __compiletime_assert_1269(void);


#line 1270 
void __compiletime_assert_1270(void);


#line 1271 
void __compiletime_assert_1271(void);


#line 1272 
void __compiletime_assert_1272(void);


#line 1276 
void __compiletime_assert_1276(void);


#line 1277 
void __compiletime_assert_1277(void);


#line 1278 
void __compiletime_assert_1279(void);


#line 1280 
void __compiletime_assert_1281(void);


#line 1285 
void __compiletime_assert_1286(void);


#line 1295 
void __compiletime_assert_1295(void);


#line 1296 
void __compiletime_assert_1296(void);


#line 1297 
void __compiletime_assert_1298(void);


#line 1299 
void __compiletime_assert_1300(void);


#line 1301 
void __compiletime_assert_1302(void);


#line 1303 
void __compiletime_assert_1304(void);


#line 1305 
void __compiletime_assert_1305(void);


#line 1306 
void __compiletime_assert_1306(void);


#line 1307 
void __compiletime_assert_1308(void);


#line 1309 
void __compiletime_assert_1309(void);


#line 1310 
void __compiletime_assert_1310(void);


#line 1253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_write_tx_desc(struct queue_entry *entry, struct txentry_desc *txdesc)
{
  u32 word;
  
#line 1256 
  struct skb_frame_desc *skbdesc = get_skb_frame_desc(entry->skb);
  
#line 1257 
  struct queue_entry_priv_mmio *entry_priv = (struct queue_entry_priv_mmio *)entry->priv_data;
  
#line 1258 
  __le32 *txd = entry_priv->desc;
  
#line 1264 
  rt2x00_desc_read(txd,(unsigned char)1,& word);
  {
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    struct rt2x00_field32 tmp_2;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1265 
        bool __cond = (_Bool)0;
        
#line 1265 
        if ((int)__cond != 0) 
#line 1265 
                              __compiletime_assert_1265(); else ;
      }
      
#line 1265 
      struct rt2x00_field32 __constr_expr_602 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 1265 
      tmp_0 = __constr_expr_602;
    }
    
#line 1265 
    word = ~ tmp_0.bit_mask & word;
    {
      {
        
#line 1265 
        bool __cond_0 = (_Bool)0;
        
#line 1265 
        if ((int)__cond_0 != 0) 
#line 1265 
                                __compiletime_assert_1265(); else ;
      }
      
#line 1265 
      struct rt2x00_field32 __constr_expr_603 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 1265 
      tmp_1 = __constr_expr_603;
    }
    {
      {
        
#line 1265 
        bool __cond_1 = (_Bool)0;
        
#line 1265 
        if ((int)__cond_1 != 0) 
#line 1265 
                                __compiletime_assert_1265(); else ;
      }
      
#line 1265 
      struct rt2x00_field32 __constr_expr_604 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 1265 
      tmp_2 = __constr_expr_604;
    }
    
#line 1265 
    word = (unsigned int)((skbdesc->skb_dma << tmp_1.bit_offset) & (unsigned long long)tmp_2.bit_mask) | word;
  }
  
#line 1266 
  rt2x00_desc_write(txd,(unsigned char)1,word);
  
#line 1268 
  rt2x00_desc_read(txd,(unsigned char)2,& word);
  {
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    struct rt2x00_field32 tmp_5;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 1269 
        bool __cond_2 = (_Bool)0;
        
#line 1269 
        if ((int)__cond_2 != 0) 
#line 1269 
                                __compiletime_assert_1269(); else ;
      }
      
#line 1269 
      struct rt2x00_field32 __constr_expr_605 = {.bit_offset = 0U, .bit_mask = 63U};
      
#line 1269 
      tmp_3 = __constr_expr_605;
    }
    
#line 1269 
    word = ~ tmp_3.bit_mask & word;
    {
      {
        
#line 1269 
        bool __cond_3 = (_Bool)0;
        
#line 1269 
        if ((int)__cond_3 != 0) 
#line 1269 
                                __compiletime_assert_1269(); else ;
      }
      
#line 1269 
      struct rt2x00_field32 __constr_expr_606 = {.bit_offset = 0U, .bit_mask = 63U};
      
#line 1269 
      tmp_4 = __constr_expr_606;
    }
    {
      {
        
#line 1269 
        bool __cond_4 = (_Bool)0;
        
#line 1269 
        if ((int)__cond_4 != 0) 
#line 1269 
                                __compiletime_assert_1269(); else ;
      }
      
#line 1269 
      struct rt2x00_field32 __constr_expr_607 = {.bit_offset = 0U, .bit_mask = 63U};
      
#line 1269 
      tmp_5 = __constr_expr_607;
    }
    
#line 1269 
    word = ((unsigned int)(24 << tmp_4.bit_offset) & tmp_5.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_6;
    struct rt2x00_field32 tmp_7;
    struct rt2x00_field32 tmp_8;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 1270 
        bool __cond_5 = (_Bool)0;
        
#line 1270 
        if ((int)__cond_5 != 0) 
#line 1270 
                                __compiletime_assert_1270(); else ;
      }
      
#line 1270 
      struct rt2x00_field32 __constr_expr_608 = {.bit_offset = 6U, .bit_mask = 192U};
      
#line 1270 
      tmp_6 = __constr_expr_608;
    }
    
#line 1270 
    word = ~ tmp_6.bit_mask & word;
    {
      {
        
#line 1270 
        bool __cond_6 = (_Bool)0;
        
#line 1270 
        if ((int)__cond_6 != 0) 
#line 1270 
                                __compiletime_assert_1270(); else ;
      }
      
#line 1270 
      struct rt2x00_field32 __constr_expr_609 = {.bit_offset = 6U, .bit_mask = 192U};
      
#line 1270 
      tmp_7 = __constr_expr_609;
    }
    {
      {
        
#line 1270 
        bool __cond_7 = (_Bool)0;
        
#line 1270 
        if ((int)__cond_7 != 0) 
#line 1270 
                                __compiletime_assert_1270(); else ;
      }
      
#line 1270 
      struct rt2x00_field32 __constr_expr_610 = {.bit_offset = 6U, .bit_mask = 192U};
      
#line 1270 
      tmp_8 = __constr_expr_610;
    }
    
#line 1270 
    word = ((unsigned int)((int)(entry->queue)->aifs << tmp_7.bit_offset) & tmp_8.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_9;
    struct rt2x00_field32 tmp_10;
    struct rt2x00_field32 tmp_11;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 1271 
        bool __cond_8 = (_Bool)0;
        
#line 1271 
        if ((int)__cond_8 != 0) 
#line 1271 
                                __compiletime_assert_1271(); else ;
      }
      
#line 1271 
      struct rt2x00_field32 __constr_expr_611 = {.bit_offset = 8U, .bit_mask = 3840U};
      
#line 1271 
      tmp_9 = __constr_expr_611;
    }
    
#line 1271 
    word = ~ tmp_9.bit_mask & word;
    {
      {
        
#line 1271 
        bool __cond_9 = (_Bool)0;
        
#line 1271 
        if ((int)__cond_9 != 0) 
#line 1271 
                                __compiletime_assert_1271(); else ;
      }
      
#line 1271 
      struct rt2x00_field32 __constr_expr_612 = {.bit_offset = 8U, .bit_mask = 3840U};
      
#line 1271 
      tmp_10 = __constr_expr_612;
    }
    {
      {
        
#line 1271 
        bool __cond_10 = (_Bool)0;
        
#line 1271 
        if ((int)__cond_10 != 0) 
#line 1271 
                                 __compiletime_assert_1271(); else ;
      }
      
#line 1271 
      struct rt2x00_field32 __constr_expr_613 = {.bit_offset = 8U, .bit_mask = 3840U};
      
#line 1271 
      tmp_11 = __constr_expr_613;
    }
    
#line 1271 
    word = ((unsigned int)((int)(entry->queue)->cw_min << tmp_10.bit_offset) & tmp_11.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_12;
    struct rt2x00_field32 tmp_13;
    struct rt2x00_field32 tmp_14;
    {
      struct rt2x00_field32 __dummy_3;
      struct rt2x00_field32 __dummy2_3;
      
    }
    {
      {
        
#line 1272 
        bool __cond_11 = (_Bool)0;
        
#line 1272 
        if ((int)__cond_11 != 0) 
#line 1272 
                                 __compiletime_assert_1272(); else ;
      }
      
#line 1272 
      struct rt2x00_field32 __constr_expr_614 = {.bit_offset = 12U, .bit_mask = 61440U};
      
#line 1272 
      tmp_12 = __constr_expr_614;
    }
    
#line 1272 
    word = ~ tmp_12.bit_mask & word;
    {
      {
        
#line 1272 
        bool __cond_12 = (_Bool)0;
        
#line 1272 
        if ((int)__cond_12 != 0) 
#line 1272 
                                 __compiletime_assert_1272(); else ;
      }
      
#line 1272 
      struct rt2x00_field32 __constr_expr_615 = {.bit_offset = 12U, .bit_mask = 61440U};
      
#line 1272 
      tmp_13 = __constr_expr_615;
    }
    {
      {
        
#line 1272 
        bool __cond_13 = (_Bool)0;
        
#line 1272 
        if ((int)__cond_13 != 0) 
#line 1272 
                                 __compiletime_assert_1272(); else ;
      }
      
#line 1272 
      struct rt2x00_field32 __constr_expr_616 = {.bit_offset = 12U, .bit_mask = 61440U};
      
#line 1272 
      tmp_14 = __constr_expr_616;
    }
    
#line 1272 
    word = ((unsigned int)((int)(entry->queue)->cw_max << tmp_13.bit_offset) & tmp_14.bit_mask) | word;
  }
  
#line 1273 
  rt2x00_desc_write(txd,(unsigned char)2,word);
  
#line 1275 
  rt2x00_desc_read(txd,(unsigned char)3,& word);
  {
    struct rt2x00_field32 tmp_15;
    struct rt2x00_field32 tmp_16;
    struct rt2x00_field32 tmp_17;
    {
      struct rt2x00_field32 __dummy_4;
      struct rt2x00_field32 __dummy2_4;
      
    }
    {
      {
        
#line 1276 
        bool __cond_14 = (_Bool)0;
        
#line 1276 
        if ((int)__cond_14 != 0) 
#line 1276 
                                 __compiletime_assert_1276(); else ;
      }
      
#line 1276 
      struct rt2x00_field32 __constr_expr_617 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1276 
      tmp_15 = __constr_expr_617;
    }
    
#line 1276 
    word = ~ tmp_15.bit_mask & word;
    {
      {
        
#line 1276 
        bool __cond_15 = (_Bool)0;
        
#line 1276 
        if ((int)__cond_15 != 0) 
#line 1276 
                                 __compiletime_assert_1276(); else ;
      }
      
#line 1276 
      struct rt2x00_field32 __constr_expr_618 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1276 
      tmp_16 = __constr_expr_618;
    }
    {
      {
        
#line 1276 
        bool __cond_16 = (_Bool)0;
        
#line 1276 
        if ((int)__cond_16 != 0) 
#line 1276 
                                 __compiletime_assert_1276(); else ;
      }
      
#line 1276 
      struct rt2x00_field32 __constr_expr_619 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1276 
      tmp_17 = __constr_expr_619;
    }
    
#line 1276 
    word = ((unsigned int)((int)txdesc->u.plcp.signal << tmp_16.bit_offset) & tmp_17.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_18;
    struct rt2x00_field32 tmp_19;
    struct rt2x00_field32 tmp_20;
    {
      struct rt2x00_field32 __dummy_5;
      struct rt2x00_field32 __dummy2_5;
      
    }
    {
      {
        
#line 1277 
        bool __cond_17 = (_Bool)0;
        
#line 1277 
        if ((int)__cond_17 != 0) 
#line 1277 
                                 __compiletime_assert_1277(); else ;
      }
      
#line 1277 
      struct rt2x00_field32 __constr_expr_620 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 1277 
      tmp_18 = __constr_expr_620;
    }
    
#line 1277 
    word = ~ tmp_18.bit_mask & word;
    {
      {
        
#line 1277 
        bool __cond_18 = (_Bool)0;
        
#line 1277 
        if ((int)__cond_18 != 0) 
#line 1277 
                                 __compiletime_assert_1277(); else ;
      }
      
#line 1277 
      struct rt2x00_field32 __constr_expr_621 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 1277 
      tmp_19 = __constr_expr_621;
    }
    {
      {
        
#line 1277 
        bool __cond_19 = (_Bool)0;
        
#line 1277 
        if ((int)__cond_19 != 0) 
#line 1277 
                                 __compiletime_assert_1277(); else ;
      }
      
#line 1277 
      struct rt2x00_field32 __constr_expr_622 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 1277 
      tmp_20 = __constr_expr_622;
    }
    
#line 1277 
    word = ((unsigned int)((int)txdesc->u.plcp.service << tmp_19.bit_offset) & tmp_20.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_21;
    struct rt2x00_field32 tmp_22;
    struct rt2x00_field32 tmp_23;
    {
      struct rt2x00_field32 __dummy_6;
      struct rt2x00_field32 __dummy2_6;
      
    }
    {
      {
        
#line 1278 
        bool __cond_20 = (_Bool)0;
        
#line 1278 
        if ((int)__cond_20 != 0) 
#line 1278 
                                 __compiletime_assert_1279(); else ;
      }
      
#line 1278 
      struct rt2x00_field32 __constr_expr_623 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 1278 
      tmp_21 = __constr_expr_623;
    }
    
#line 1278 
    word = ~ tmp_21.bit_mask & word;
    {
      {
        
#line 1278 
        bool __cond_21 = (_Bool)0;
        
#line 1278 
        if ((int)__cond_21 != 0) 
#line 1278 
                                 __compiletime_assert_1279(); else ;
      }
      
#line 1278 
      struct rt2x00_field32 __constr_expr_624 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 1278 
      tmp_22 = __constr_expr_624;
    }
    {
      {
        
#line 1278 
        bool __cond_22 = (_Bool)0;
        
#line 1278 
        if ((int)__cond_22 != 0) 
#line 1278 
                                 __compiletime_assert_1279(); else ;
      }
      
#line 1278 
      struct rt2x00_field32 __constr_expr_625 = {.bit_offset = 16U, .bit_mask = 16711680U};
      
#line 1278 
      tmp_23 = __constr_expr_625;
    }
    
#line 1278 
    word = ((unsigned int)((int)txdesc->u.plcp.length_low << tmp_22.bit_offset) & tmp_23.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_24;
    struct rt2x00_field32 tmp_25;
    struct rt2x00_field32 tmp_26;
    {
      struct rt2x00_field32 __dummy_7;
      struct rt2x00_field32 __dummy2_7;
      
    }
    {
      {
        
#line 1280 
        bool __cond_23 = (_Bool)0;
        
#line 1280 
        if ((int)__cond_23 != 0) 
#line 1280 
                                 __compiletime_assert_1281(); else ;
      }
      
#line 1280 
      struct rt2x00_field32 __constr_expr_626 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 1280 
      tmp_24 = __constr_expr_626;
    }
    
#line 1280 
    word = ~ tmp_24.bit_mask & word;
    {
      {
        
#line 1280 
        bool __cond_24 = (_Bool)0;
        
#line 1280 
        if ((int)__cond_24 != 0) 
#line 1280 
                                 __compiletime_assert_1281(); else ;
      }
      
#line 1280 
      struct rt2x00_field32 __constr_expr_627 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 1280 
      tmp_25 = __constr_expr_627;
    }
    {
      {
        
#line 1280 
        bool __cond_25 = (_Bool)0;
        
#line 1280 
        if ((int)__cond_25 != 0) 
#line 1280 
                                 __compiletime_assert_1281(); else ;
      }
      
#line 1280 
      struct rt2x00_field32 __constr_expr_628 = {.bit_offset = 24U, .bit_mask = 4278190080U};
      
#line 1280 
      tmp_26 = __constr_expr_628;
    }
    
#line 1280 
    word = ((unsigned int)((int)txdesc->u.plcp.length_high << tmp_25.bit_offset) & tmp_26.bit_mask) | word;
  }
  
#line 1282 
  rt2x00_desc_write(txd,(unsigned char)3,word);
  
#line 1284 
  rt2x00_desc_read(txd,(unsigned char)10,& word);
  {
    struct rt2x00_field32 tmp_27;
    int tmp_28;
    struct rt2x00_field32 tmp_29;
    struct rt2x00_field32 tmp_30;
    {
      struct rt2x00_field32 __dummy_8;
      struct rt2x00_field32 __dummy2_8;
      
    }
    {
      {
        
#line 1285 
        bool __cond_26 = (_Bool)0;
        
#line 1285 
        if ((int)__cond_26 != 0) 
#line 1285 
                                 __compiletime_assert_1286(); else ;
      }
      
#line 1285 
      struct rt2x00_field32 __constr_expr_629 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1285 
      tmp_27 = __constr_expr_629;
    }
    
#line 1285 
    word = ~ tmp_27.bit_mask & word;
    
#line 1285 
    tmp_28 = constant_test_bit(0L,(unsigned long const volatile *)(& txdesc->flags));
    {
      {
        
#line 1285 
        bool __cond_27 = (_Bool)0;
        
#line 1285 
        if ((int)__cond_27 != 0) 
#line 1285 
                                 __compiletime_assert_1286(); else ;
      }
      
#line 1285 
      struct rt2x00_field32 __constr_expr_630 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1285 
      tmp_29 = __constr_expr_630;
    }
    {
      {
        
#line 1285 
        bool __cond_28 = (_Bool)0;
        
#line 1285 
        if ((int)__cond_28 != 0) 
#line 1285 
                                 __compiletime_assert_1286(); else ;
      }
      
#line 1285 
      struct rt2x00_field32 __constr_expr_631 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1285 
      tmp_30 = __constr_expr_631;
    }
    
#line 1285 
    word = ((unsigned int)(tmp_28 << tmp_29.bit_offset) & tmp_30.bit_mask) | word;
  }
  
#line 1287 
  rt2x00_desc_write(txd,(unsigned char)10,word);
  
#line 1294 
  rt2x00_desc_read(txd,(unsigned char)0,& word);
  {
    struct rt2x00_field32 tmp_31;
    struct rt2x00_field32 tmp_32;
    struct rt2x00_field32 tmp_33;
    {
      struct rt2x00_field32 __dummy_9;
      struct rt2x00_field32 __dummy2_9;
      
    }
    {
      {
        
#line 1295 
        bool __cond_29 = (_Bool)0;
        
#line 1295 
        if ((int)__cond_29 != 0) 
#line 1295 
                                 __compiletime_assert_1295(); else ;
      }
      
#line 1295 
      struct rt2x00_field32 __constr_expr_632 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1295 
      tmp_31 = __constr_expr_632;
    }
    
#line 1295 
    word = ~ tmp_31.bit_mask & word;
    {
      {
        
#line 1295 
        bool __cond_30 = (_Bool)0;
        
#line 1295 
        if ((int)__cond_30 != 0) 
#line 1295 
                                 __compiletime_assert_1295(); else ;
      }
      
#line 1295 
      struct rt2x00_field32 __constr_expr_633 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1295 
      tmp_32 = __constr_expr_633;
    }
    {
      {
        
#line 1295 
        bool __cond_31 = (_Bool)0;
        
#line 1295 
        if ((int)__cond_31 != 0) 
#line 1295 
                                 __compiletime_assert_1295(); else ;
      }
      
#line 1295 
      struct rt2x00_field32 __constr_expr_634 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1295 
      tmp_33 = __constr_expr_634;
    }
    
#line 1295 
    word = ((unsigned int)(1 << tmp_32.bit_offset) & tmp_33.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_34;
    struct rt2x00_field32 tmp_35;
    struct rt2x00_field32 tmp_36;
    {
      struct rt2x00_field32 __dummy_10;
      struct rt2x00_field32 __dummy2_10;
      
    }
    {
      {
        
#line 1296 
        bool __cond_32 = (_Bool)0;
        
#line 1296 
        if ((int)__cond_32 != 0) 
#line 1296 
                                 __compiletime_assert_1296(); else ;
      }
      
#line 1296 
      struct rt2x00_field32 __constr_expr_635 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 1296 
      tmp_34 = __constr_expr_635;
    }
    
#line 1296 
    word = ~ tmp_34.bit_mask & word;
    {
      {
        
#line 1296 
        bool __cond_33 = (_Bool)0;
        
#line 1296 
        if ((int)__cond_33 != 0) 
#line 1296 
                                 __compiletime_assert_1296(); else ;
      }
      
#line 1296 
      struct rt2x00_field32 __constr_expr_636 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 1296 
      tmp_35 = __constr_expr_636;
    }
    {
      {
        
#line 1296 
        bool __cond_34 = (_Bool)0;
        
#line 1296 
        if ((int)__cond_34 != 0) 
#line 1296 
                                 __compiletime_assert_1296(); else ;
      }
      
#line 1296 
      struct rt2x00_field32 __constr_expr_637 = {.bit_offset = 1U, .bit_mask = 2U};
      
#line 1296 
      tmp_36 = __constr_expr_637;
    }
    
#line 1296 
    word = ((unsigned int)(1 << tmp_35.bit_offset) & tmp_36.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_37;
    int tmp_38;
    struct rt2x00_field32 tmp_39;
    struct rt2x00_field32 tmp_40;
    {
      struct rt2x00_field32 __dummy_11;
      struct rt2x00_field32 __dummy2_11;
      
    }
    {
      {
        
#line 1297 
        bool __cond_35 = (_Bool)0;
        
#line 1297 
        if ((int)__cond_35 != 0) 
#line 1297 
                                 __compiletime_assert_1298(); else ;
      }
      
#line 1297 
      struct rt2x00_field32 __constr_expr_638 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 1297 
      tmp_37 = __constr_expr_638;
    }
    
#line 1297 
    word = ~ tmp_37.bit_mask & word;
    
#line 1297 
    tmp_38 = constant_test_bit(4L,(unsigned long const volatile *)(& txdesc->flags));
    {
      {
        
#line 1297 
        bool __cond_36 = (_Bool)0;
        
#line 1297 
        if ((int)__cond_36 != 0) 
#line 1297 
                                 __compiletime_assert_1298(); else ;
      }
      
#line 1297 
      struct rt2x00_field32 __constr_expr_639 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 1297 
      tmp_39 = __constr_expr_639;
    }
    {
      {
        
#line 1297 
        bool __cond_37 = (_Bool)0;
        
#line 1297 
        if ((int)__cond_37 != 0) 
#line 1297 
                                 __compiletime_assert_1298(); else ;
      }
      
#line 1297 
      struct rt2x00_field32 __constr_expr_640 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 1297 
      tmp_40 = __constr_expr_640;
    }
    
#line 1297 
    word = ((unsigned int)(tmp_38 << tmp_39.bit_offset) & tmp_40.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_41;
    int tmp_42;
    struct rt2x00_field32 tmp_43;
    struct rt2x00_field32 tmp_44;
    {
      struct rt2x00_field32 __dummy_12;
      struct rt2x00_field32 __dummy2_12;
      
    }
    {
      {
        
#line 1299 
        bool __cond_38 = (_Bool)0;
        
#line 1299 
        if ((int)__cond_38 != 0) 
#line 1299 
                                 __compiletime_assert_1300(); else ;
      }
      
#line 1299 
      struct rt2x00_field32 __constr_expr_641 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 1299 
      tmp_41 = __constr_expr_641;
    }
    
#line 1299 
    word = ~ tmp_41.bit_mask & word;
    
#line 1299 
    tmp_42 = constant_test_bit(7L,(unsigned long const volatile *)(& txdesc->flags));
    {
      {
        
#line 1299 
        bool __cond_39 = (_Bool)0;
        
#line 1299 
        if ((int)__cond_39 != 0) 
#line 1299 
                                 __compiletime_assert_1300(); else ;
      }
      
#line 1299 
      struct rt2x00_field32 __constr_expr_642 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 1299 
      tmp_43 = __constr_expr_642;
    }
    {
      {
        
#line 1299 
        bool __cond_40 = (_Bool)0;
        
#line 1299 
        if ((int)__cond_40 != 0) 
#line 1299 
                                 __compiletime_assert_1300(); else ;
      }
      
#line 1299 
      struct rt2x00_field32 __constr_expr_643 = {.bit_offset = 9U, .bit_mask = 512U};
      
#line 1299 
      tmp_44 = __constr_expr_643;
    }
    
#line 1299 
    word = ((unsigned int)(tmp_42 << tmp_43.bit_offset) & tmp_44.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_45;
    int tmp_46;
    struct rt2x00_field32 tmp_47;
    struct rt2x00_field32 tmp_48;
    {
      struct rt2x00_field32 __dummy_13;
      struct rt2x00_field32 __dummy2_13;
      
    }
    {
      {
        
#line 1301 
        bool __cond_41 = (_Bool)0;
        
#line 1301 
        if ((int)__cond_41 != 0) 
#line 1301 
                                 __compiletime_assert_1302(); else ;
      }
      
#line 1301 
      struct rt2x00_field32 __constr_expr_644 = {.bit_offset = 10U, .bit_mask = 1024U};
      
#line 1301 
      tmp_45 = __constr_expr_644;
    }
    
#line 1301 
    word = ~ tmp_45.bit_mask & word;
    
#line 1301 
    tmp_46 = constant_test_bit(5L,(unsigned long const volatile *)(& txdesc->flags));
    {
      {
        
#line 1301 
        bool __cond_42 = (_Bool)0;
        
#line 1301 
        if ((int)__cond_42 != 0) 
#line 1301 
                                 __compiletime_assert_1302(); else ;
      }
      
#line 1301 
      struct rt2x00_field32 __constr_expr_645 = {.bit_offset = 10U, .bit_mask = 1024U};
      
#line 1301 
      tmp_47 = __constr_expr_645;
    }
    {
      {
        
#line 1301 
        bool __cond_43 = (_Bool)0;
        
#line 1301 
        if ((int)__cond_43 != 0) 
#line 1301 
                                 __compiletime_assert_1302(); else ;
      }
      
#line 1301 
      struct rt2x00_field32 __constr_expr_646 = {.bit_offset = 10U, .bit_mask = 1024U};
      
#line 1301 
      tmp_48 = __constr_expr_646;
    }
    
#line 1301 
    word = ((unsigned int)(tmp_46 << tmp_47.bit_offset) & tmp_48.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_49;
    struct rt2x00_field32 tmp_50;
    struct rt2x00_field32 tmp_51;
    {
      struct rt2x00_field32 __dummy_14;
      struct rt2x00_field32 __dummy2_14;
      
    }
    {
      {
        
#line 1303 
        bool __cond_44 = (_Bool)0;
        
#line 1303 
        if ((int)__cond_44 != 0) 
#line 1303 
                                 __compiletime_assert_1304(); else ;
      }
      
#line 1303 
      struct rt2x00_field32 __constr_expr_647 = {.bit_offset = 11U, .bit_mask = 2048U};
      
#line 1303 
      tmp_49 = __constr_expr_647;
    }
    
#line 1303 
    word = ~ tmp_49.bit_mask & word;
    {
      {
        
#line 1303 
        bool __cond_45 = (_Bool)0;
        
#line 1303 
        if ((int)__cond_45 != 0) 
#line 1303 
                                 __compiletime_assert_1304(); else ;
      }
      
#line 1303 
      struct rt2x00_field32 __constr_expr_648 = {.bit_offset = 11U, .bit_mask = 2048U};
      
#line 1303 
      tmp_50 = __constr_expr_648;
    }
    {
      {
        
#line 1303 
        bool __cond_46 = (_Bool)0;
        
#line 1303 
        if ((int)__cond_46 != 0) 
#line 1303 
                                 __compiletime_assert_1304(); else ;
      }
      
#line 1303 
      struct rt2x00_field32 __constr_expr_649 = {.bit_offset = 11U, .bit_mask = 2048U};
      
#line 1303 
      tmp_51 = __constr_expr_649;
    }
    
#line 1303 
    word = ((unsigned int)((txdesc->rate_mode == (unsigned int)RATE_MODE_OFDM) << tmp_50.bit_offset) & tmp_51.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_52;
    struct rt2x00_field32 tmp_53;
    struct rt2x00_field32 tmp_54;
    {
      struct rt2x00_field32 __dummy_15;
      struct rt2x00_field32 __dummy2_15;
      
    }
    {
      {
        
#line 1305 
        bool __cond_47 = (_Bool)0;
        
#line 1305 
        if ((int)__cond_47 != 0) 
#line 1305 
                                 __compiletime_assert_1305(); else ;
      }
      
#line 1305 
      struct rt2x00_field32 __constr_expr_650 = {.bit_offset = 12U, .bit_mask = 4096U};
      
#line 1305 
      tmp_52 = __constr_expr_650;
    }
    
#line 1305 
    word = ~ tmp_52.bit_mask & word;
    {
      {
        
#line 1305 
        bool __cond_48 = (_Bool)0;
        
#line 1305 
        if ((int)__cond_48 != 0) 
#line 1305 
                                 __compiletime_assert_1305(); else ;
      }
      
#line 1305 
      struct rt2x00_field32 __constr_expr_651 = {.bit_offset = 12U, .bit_mask = 4096U};
      
#line 1305 
      tmp_53 = __constr_expr_651;
    }
    {
      {
        
#line 1305 
        bool __cond_49 = (_Bool)0;
        
#line 1305 
        if ((int)__cond_49 != 0) 
#line 1305 
                                 __compiletime_assert_1305(); else ;
      }
      
#line 1305 
      struct rt2x00_field32 __constr_expr_652 = {.bit_offset = 12U, .bit_mask = 4096U};
      
#line 1305 
      tmp_54 = __constr_expr_652;
    }
    
#line 1305 
    word = ((unsigned int)(1 << tmp_53.bit_offset) & tmp_54.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_55;
    struct rt2x00_field32 tmp_56;
    struct rt2x00_field32 tmp_57;
    {
      struct rt2x00_field32 __dummy_16;
      struct rt2x00_field32 __dummy2_16;
      
    }
    {
      {
        
#line 1306 
        bool __cond_50 = (_Bool)0;
        
#line 1306 
        if ((int)__cond_50 != 0) 
#line 1306 
                                 __compiletime_assert_1306(); else ;
      }
      
#line 1306 
      struct rt2x00_field32 __constr_expr_653 = {.bit_offset = 13U, .bit_mask = 24576U};
      
#line 1306 
      tmp_55 = __constr_expr_653;
    }
    
#line 1306 
    word = ~ tmp_55.bit_mask & word;
    {
      {
        
#line 1306 
        bool __cond_51 = (_Bool)0;
        
#line 1306 
        if ((int)__cond_51 != 0) 
#line 1306 
                                 __compiletime_assert_1306(); else ;
      }
      
#line 1306 
      struct rt2x00_field32 __constr_expr_654 = {.bit_offset = 13U, .bit_mask = 24576U};
      
#line 1306 
      tmp_56 = __constr_expr_654;
    }
    {
      {
        
#line 1306 
        bool __cond_52 = (_Bool)0;
        
#line 1306 
        if ((int)__cond_52 != 0) 
#line 1306 
                                 __compiletime_assert_1306(); else ;
      }
      
#line 1306 
      struct rt2x00_field32 __constr_expr_655 = {.bit_offset = 13U, .bit_mask = 24576U};
      
#line 1306 
      tmp_57 = __constr_expr_655;
    }
    
#line 1306 
    word = (((unsigned int)txdesc->u.plcp.ifs << tmp_56.bit_offset) & tmp_57.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_58;
    int tmp_59;
    struct rt2x00_field32 tmp_60;
    struct rt2x00_field32 tmp_61;
    {
      struct rt2x00_field32 __dummy_17;
      struct rt2x00_field32 __dummy2_17;
      
    }
    {
      {
        
#line 1307 
        bool __cond_53 = (_Bool)0;
        
#line 1307 
        if ((int)__cond_53 != 0) 
#line 1307 
                                 __compiletime_assert_1308(); else ;
      }
      
#line 1307 
      struct rt2x00_field32 __constr_expr_656 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 1307 
      tmp_58 = __constr_expr_656;
    }
    
#line 1307 
    word = ~ tmp_58.bit_mask & word;
    
#line 1307 
    tmp_59 = constant_test_bit(8L,(unsigned long const volatile *)(& txdesc->flags));
    {
      {
        
#line 1307 
        bool __cond_54 = (_Bool)0;
        
#line 1307 
        if ((int)__cond_54 != 0) 
#line 1307 
                                 __compiletime_assert_1308(); else ;
      }
      
#line 1307 
      struct rt2x00_field32 __constr_expr_657 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 1307 
      tmp_60 = __constr_expr_657;
    }
    {
      {
        
#line 1307 
        bool __cond_55 = (_Bool)0;
        
#line 1307 
        if ((int)__cond_55 != 0) 
#line 1307 
                                 __compiletime_assert_1308(); else ;
      }
      
#line 1307 
      struct rt2x00_field32 __constr_expr_658 = {.bit_offset = 15U, .bit_mask = 32768U};
      
#line 1307 
      tmp_61 = __constr_expr_658;
    }
    
#line 1307 
    word = ((unsigned int)(tmp_59 << tmp_60.bit_offset) & tmp_61.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_62;
    struct rt2x00_field32 tmp_63;
    struct rt2x00_field32 tmp_64;
    {
      struct rt2x00_field32 __dummy_18;
      struct rt2x00_field32 __dummy2_18;
      
    }
    {
      {
        
#line 1309 
        bool __cond_56 = (_Bool)0;
        
#line 1309 
        if ((int)__cond_56 != 0) 
#line 1309 
                                 __compiletime_assert_1309(); else ;
      }
      
#line 1309 
      struct rt2x00_field32 __constr_expr_659 = {.bit_offset = 16U, .bit_mask = 268369920U};
      
#line 1309 
      tmp_62 = __constr_expr_659;
    }
    
#line 1309 
    word = ~ tmp_62.bit_mask & word;
    {
      {
        
#line 1309 
        bool __cond_57 = (_Bool)0;
        
#line 1309 
        if ((int)__cond_57 != 0) 
#line 1309 
                                 __compiletime_assert_1309(); else ;
      }
      
#line 1309 
      struct rt2x00_field32 __constr_expr_660 = {.bit_offset = 16U, .bit_mask = 268369920U};
      
#line 1309 
      tmp_63 = __constr_expr_660;
    }
    {
      {
        
#line 1309 
        bool __cond_58 = (_Bool)0;
        
#line 1309 
        if ((int)__cond_58 != 0) 
#line 1309 
                                 __compiletime_assert_1309(); else ;
      }
      
#line 1309 
      struct rt2x00_field32 __constr_expr_661 = {.bit_offset = 16U, .bit_mask = 268369920U};
      
#line 1309 
      tmp_64 = __constr_expr_661;
    }
    
#line 1309 
    word = ((unsigned int)((int)txdesc->length << tmp_63.bit_offset) & tmp_64.bit_mask) | word;
  }
  {
    struct rt2x00_field32 tmp_65;
    struct rt2x00_field32 tmp_66;
    struct rt2x00_field32 tmp_67;
    {
      struct rt2x00_field32 __dummy_19;
      struct rt2x00_field32 __dummy2_19;
      
    }
    {
      {
        
#line 1310 
        bool __cond_59 = (_Bool)0;
        
#line 1310 
        if ((int)__cond_59 != 0) 
#line 1310 
                                 __compiletime_assert_1310(); else ;
      }
      
#line 1310 
      struct rt2x00_field32 __constr_expr_662 = {.bit_offset = 29U, .bit_mask = 3758096384U};
      
#line 1310 
      tmp_65 = __constr_expr_662;
    }
    
#line 1310 
    word = ~ tmp_65.bit_mask & word;
    {
      {
        
#line 1310 
        bool __cond_60 = (_Bool)0;
        
#line 1310 
        if ((int)__cond_60 != 0) 
#line 1310 
                                 __compiletime_assert_1310(); else ;
      }
      
#line 1310 
      struct rt2x00_field32 __constr_expr_663 = {.bit_offset = 29U, .bit_mask = 3758096384U};
      
#line 1310 
      tmp_66 = __constr_expr_663;
    }
    {
      {
        
#line 1310 
        bool __cond_61 = (_Bool)0;
        
#line 1310 
        if ((int)__cond_61 != 0) 
#line 1310 
                                 __compiletime_assert_1310(); else ;
      }
      
#line 1310 
      struct rt2x00_field32 __constr_expr_664 = {.bit_offset = 29U, .bit_mask = 3758096384U};
      
#line 1310 
      tmp_67 = __constr_expr_664;
    }
    
#line 1310 
    word = 0U | word;
  }
  
#line 1311 
  rt2x00_desc_write(txd,(unsigned char)0,word);
  
#line 1316 
  skbdesc->desc = (void *)txd;
  
#line 1317 
  skbdesc->desc_len = (unsigned char)44U;
  
#line 1318 
  return;
}


#line 1334 
void __compiletime_assert_1334(void);


#line 1355 
void __compiletime_assert_1355(void);


#line 1323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_write_beacon(struct queue_entry *entry, struct txentry_desc *txdesc)
{
  u32 reg;
  int tmp_2;
  
#line 1326 
  struct rt2x00_dev *rt2x00dev = (entry->queue)->rt2x00dev;
  
#line 1333 
  rt2x00mmio_register_read(rt2x00dev,56U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1334 
        bool __cond = (_Bool)0;
        
#line 1334 
        if ((int)__cond != 0) 
#line 1334 
                              __compiletime_assert_1334(); else ;
      }
      
#line 1334 
      struct rt2x00_field32 __constr_expr_665 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1334 
      tmp = __constr_expr_665;
    }
    
#line 1334 
    reg = ~ tmp.bit_mask & reg;
    {
      {
        
#line 1334 
        bool __cond_0 = (_Bool)0;
        
#line 1334 
        if ((int)__cond_0 != 0) 
#line 1334 
                                __compiletime_assert_1334(); else ;
      }
      
#line 1334 
      struct rt2x00_field32 __constr_expr_666 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1334 
      tmp_0 = __constr_expr_666;
    }
    {
      {
        
#line 1334 
        bool __cond_1 = (_Bool)0;
        
#line 1334 
        if ((int)__cond_1 != 0) 
#line 1334 
                                __compiletime_assert_1334(); else ;
      }
      
#line 1334 
      struct rt2x00_field32 __constr_expr_667 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1334 
      tmp_1 = __constr_expr_667;
    }
    
#line 1334 
    reg = 0U | reg;
  }
  
#line 1335 
  rt2x00mmio_register_write(rt2x00dev,56U,reg);
  
#line 1337 
  tmp_2 = rt2x00queue_map_txskb(entry);
  
#line 1337 
  if (tmp_2 != 0) {
    
#line 1338 
    dev_err((struct device const *)(& ((rt2x00dev->hw)->wiphy)->dev),"%s: Error - ","rt2500pci_write_beacon");
    
#line 1339 
    goto out;
  }
  else ;
  
#line 1345 
  rt2500pci_write_tx_desc(entry,txdesc);
  
#line 1350 
  rt2x00debug_dump_frame(rt2x00dev,(enum rt2x00_dump_type)DUMP_FRAME_BEACON,entry->skb);
  out: 
#line 1351 
  ;
  {
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    struct rt2x00_field32 tmp_5;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 1355 
        bool __cond_2 = (_Bool)0;
        
#line 1355 
        if ((int)__cond_2 != 0) 
#line 1355 
                                __compiletime_assert_1355(); else ;
      }
      
#line 1355 
      struct rt2x00_field32 __constr_expr_668 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1355 
      tmp_3 = __constr_expr_668;
    }
    
#line 1355 
    reg = ~ tmp_3.bit_mask & reg;
    {
      {
        
#line 1355 
        bool __cond_3 = (_Bool)0;
        
#line 1355 
        if ((int)__cond_3 != 0) 
#line 1355 
                                __compiletime_assert_1355(); else ;
      }
      
#line 1355 
      struct rt2x00_field32 __constr_expr_669 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1355 
      tmp_4 = __constr_expr_669;
    }
    {
      {
        
#line 1355 
        bool __cond_4 = (_Bool)0;
        
#line 1355 
        if ((int)__cond_4 != 0) 
#line 1355 
                                __compiletime_assert_1355(); else ;
      }
      
#line 1355 
      struct rt2x00_field32 __constr_expr_670 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1355 
      tmp_5 = __constr_expr_670;
    }
    
#line 1355 
    reg = ((unsigned int)(1 << tmp_4.bit_offset) & tmp_5.bit_mask) | reg;
  }
  
#line 1356 
  rt2x00mmio_register_write(rt2x00dev,56U,reg);
  
#line 1357 
  return;
}


#line 1372 
void __compiletime_assert_1372(void);


#line 1374 
void __compiletime_assert_1374(void);


#line 1383 
void __compiletime_assert_1383(void);


#line 1384 
void __compiletime_assert_1384(void);


#line 1386 
void __compiletime_assert_1386(void);


#line 1388 
void __compiletime_assert_1388(void);


#line 1392 
void __compiletime_assert_1392(void);


#line 1362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_fill_rxdone(struct queue_entry *entry, struct rxdone_entry_desc *rxdesc)
{
  u32 word0;
  u32 word2;
  unsigned int tmp_1;
  unsigned int tmp_4;
  unsigned int tmp_7;
  unsigned int tmp_10;
  unsigned int tmp_13;
  unsigned int tmp_16;
  unsigned int tmp_19;
  
#line 1365 
  struct queue_entry_priv_mmio *entry_priv = (struct queue_entry_priv_mmio *)entry->priv_data;
  
#line 1369 
  rt2x00_desc_read(entry_priv->desc,(unsigned char)0,& word0);
  
#line 1370 
  rt2x00_desc_read(entry_priv->desc,(unsigned char)2,& word2);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1372 
        bool __cond = (_Bool)0;
        
#line 1372 
        if ((int)__cond != 0) 
#line 1372 
                              __compiletime_assert_1372(); else ;
      }
      
#line 1372 
      struct rt2x00_field32 __constr_expr_671 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 1372 
      tmp = __constr_expr_671;
    }
    {
      {
        
#line 1372 
        bool __cond_0 = (_Bool)0;
        
#line 1372 
        if ((int)__cond_0 != 0) 
#line 1372 
                                __compiletime_assert_1372(); else ;
      }
      
#line 1372 
      struct rt2x00_field32 __constr_expr_672 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 1372 
      tmp_0 = __constr_expr_672;
    }
    
#line 1372 
    ;
    
#line 1372 
    tmp_1 = (tmp.bit_mask & word0) >> tmp_0.bit_offset;
  }
  
#line 1372 
  if (tmp_1 != 0U) 
#line 1373 
                   rxdesc->flags |= 32; else ;
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 1374 
        bool __cond_1 = (_Bool)0;
        
#line 1374 
        if ((int)__cond_1 != 0) 
#line 1374 
                                __compiletime_assert_1374(); else ;
      }
      
#line 1374 
      struct rt2x00_field32 __constr_expr_673 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 1374 
      tmp_2 = __constr_expr_673;
    }
    {
      {
        
#line 1374 
        bool __cond_2 = (_Bool)0;
        
#line 1374 
        if ((int)__cond_2 != 0) 
#line 1374 
                                __compiletime_assert_1374(); else ;
      }
      
#line 1374 
      struct rt2x00_field32 __constr_expr_674 = {.bit_offset = 7U, .bit_mask = 128U};
      
#line 1374 
      tmp_3 = __constr_expr_674;
    }
    
#line 1374 
    ;
    
#line 1374 
    tmp_4 = (tmp_2.bit_mask & word0) >> tmp_3.bit_offset;
  }
  
#line 1374 
  if (tmp_4 != 0U) 
#line 1375 
                   rxdesc->flags |= 64; else ;
  {
    struct rt2x00_field32 tmp_5;
    struct rt2x00_field32 tmp_6;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 1383 
        bool __cond_3 = (_Bool)0;
        
#line 1383 
        if ((int)__cond_3 != 0) 
#line 1383 
                                __compiletime_assert_1383(); else ;
      }
      
#line 1383 
      struct rt2x00_field32 __constr_expr_675 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1383 
      tmp_5 = __constr_expr_675;
    }
    {
      {
        
#line 1383 
        bool __cond_4 = (_Bool)0;
        
#line 1383 
        if ((int)__cond_4 != 0) 
#line 1383 
                                __compiletime_assert_1383(); else ;
      }
      
#line 1383 
      struct rt2x00_field32 __constr_expr_676 = {.bit_offset = 0U, .bit_mask = 255U};
      
#line 1383 
      tmp_6 = __constr_expr_676;
    }
    
#line 1383 
    ;
    
#line 1383 
    tmp_7 = (tmp_5.bit_mask & word2) >> tmp_6.bit_offset;
  }
  
#line 1383 
  rxdesc->signal = (int)tmp_7;
  {
    struct rt2x00_field32 tmp_8;
    struct rt2x00_field32 tmp_9;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 1384 
        bool __cond_5 = (_Bool)0;
        
#line 1384 
        if ((int)__cond_5 != 0) 
#line 1384 
                                __compiletime_assert_1384(); else ;
      }
      
#line 1384 
      struct rt2x00_field32 __constr_expr_677 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 1384 
      tmp_8 = __constr_expr_677;
    }
    {
      {
        
#line 1384 
        bool __cond_6 = (_Bool)0;
        
#line 1384 
        if ((int)__cond_6 != 0) 
#line 1384 
                                __compiletime_assert_1384(); else ;
      }
      
#line 1384 
      struct rt2x00_field32 __constr_expr_678 = {.bit_offset = 8U, .bit_mask = 65280U};
      
#line 1384 
      tmp_9 = __constr_expr_678;
    }
    
#line 1384 
    ;
    
#line 1384 
    tmp_10 = (tmp_8.bit_mask & word2) >> tmp_9.bit_offset;
  }
  
#line 1384 
  rxdesc->rssi = (int)(tmp_10 - (unsigned int)((entry->queue)->rt2x00dev)->rssi_offset);
  {
    struct rt2x00_field32 tmp_11;
    struct rt2x00_field32 tmp_12;
    {
      struct rt2x00_field32 __dummy_3;
      struct rt2x00_field32 __dummy2_3;
      
    }
    {
      {
        
#line 1386 
        bool __cond_7 = (_Bool)0;
        
#line 1386 
        if ((int)__cond_7 != 0) 
#line 1386 
                                __compiletime_assert_1386(); else ;
      }
      
#line 1386 
      struct rt2x00_field32 __constr_expr_679 = {.bit_offset = 16U, .bit_mask = 268369920U};
      
#line 1386 
      tmp_11 = __constr_expr_679;
    }
    {
      {
        
#line 1386 
        bool __cond_8 = (_Bool)0;
        
#line 1386 
        if ((int)__cond_8 != 0) 
#line 1386 
                                __compiletime_assert_1386(); else ;
      }
      
#line 1386 
      struct rt2x00_field32 __constr_expr_680 = {.bit_offset = 16U, .bit_mask = 268369920U};
      
#line 1386 
      tmp_12 = __constr_expr_680;
    }
    
#line 1386 
    ;
    
#line 1386 
    tmp_13 = (tmp_11.bit_mask & word0) >> tmp_12.bit_offset;
  }
  
#line 1386 
  rxdesc->size = (int)tmp_13;
  {
    struct rt2x00_field32 tmp_14;
    struct rt2x00_field32 tmp_15;
    {
      struct rt2x00_field32 __dummy_4;
      struct rt2x00_field32 __dummy2_4;
      
    }
    {
      {
        
#line 1388 
        bool __cond_9 = (_Bool)0;
        
#line 1388 
        if ((int)__cond_9 != 0) 
#line 1388 
                                __compiletime_assert_1388(); else ;
      }
      
#line 1388 
      struct rt2x00_field32 __constr_expr_681 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1388 
      tmp_14 = __constr_expr_681;
    }
    {
      {
        
#line 1388 
        bool __cond_10 = (_Bool)0;
        
#line 1388 
        if ((int)__cond_10 != 0) 
#line 1388 
                                 __compiletime_assert_1388(); else ;
      }
      
#line 1388 
      struct rt2x00_field32 __constr_expr_682 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1388 
      tmp_15 = __constr_expr_682;
    }
    
#line 1388 
    ;
    
#line 1388 
    tmp_16 = (tmp_14.bit_mask & word0) >> tmp_15.bit_offset;
  }
  
#line 1388 
  if (tmp_16 != 0U) 
#line 1389 
                    rxdesc->dev_flags |= 1; else 
#line 1391 
                                                 rxdesc->dev_flags |= 2;
  {
    struct rt2x00_field32 tmp_17;
    struct rt2x00_field32 tmp_18;
    {
      struct rt2x00_field32 __dummy_5;
      struct rt2x00_field32 __dummy2_5;
      
    }
    {
      {
        
#line 1392 
        bool __cond_11 = (_Bool)0;
        
#line 1392 
        if ((int)__cond_11 != 0) 
#line 1392 
                                 __compiletime_assert_1392(); else ;
      }
      
#line 1392 
      struct rt2x00_field32 __constr_expr_683 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 1392 
      tmp_17 = __constr_expr_683;
    }
    {
      {
        
#line 1392 
        bool __cond_12 = (_Bool)0;
        
#line 1392 
        if ((int)__cond_12 != 0) 
#line 1392 
                                 __compiletime_assert_1392(); else ;
      }
      
#line 1392 
      struct rt2x00_field32 __constr_expr_684 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 1392 
      tmp_18 = __constr_expr_684;
    }
    
#line 1392 
    ;
    
#line 1392 
    tmp_19 = (tmp_17.bit_mask & word0) >> tmp_18.bit_offset;
  }
  
#line 1392 
  if (tmp_19 != 0U) 
#line 1393 
                    rxdesc->dev_flags |= 8; else ;
  
#line 1394 
  return;
}


#line 1413 
void __compiletime_assert_1413(void);


#line 1414 
void __compiletime_assert_1414(void);


#line 1421 
void __compiletime_assert_1421(void);


#line 1432 
void __compiletime_assert_1432(void);


#line 1399  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_txdone(struct rt2x00_dev *rt2x00dev, enum data_queue_qid const queue_idx)
{
  struct queue_entry_priv_mmio *entry_priv;
  struct queue_entry *entry;
  struct txdone_entry_desc txdesc;
  u32 word;
  unsigned int tmp_2;
  unsigned int tmp_8;
  unsigned int tmp_11;
  int tmp_12;
  
#line 1402 
  struct data_queue *queue = rt2x00queue_get_tx_queue(rt2x00dev,queue_idx);
  
#line 1408 
  goto ldv_60103;
  ldv_60102: 
#line 1409 
  ;
  
#line 1409 
  entry = rt2x00queue_get_entry(queue,(enum queue_index)Q_INDEX_DONE);
  
#line 1410 
  entry_priv = (struct queue_entry_priv_mmio *)entry->priv_data;
  
#line 1411 
  rt2x00_desc_read(entry_priv->desc,(unsigned char)0,& word);
  {
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1413 
        bool __cond = (_Bool)0;
        
#line 1413 
        if ((int)__cond != 0) 
#line 1413 
                              __compiletime_assert_1413(); else ;
      }
      
#line 1413 
      struct rt2x00_field32 __constr_expr_685 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1413 
      tmp_0 = __constr_expr_685;
    }
    {
      {
        
#line 1413 
        bool __cond_0 = (_Bool)0;
        
#line 1413 
        if ((int)__cond_0 != 0) 
#line 1413 
                                __compiletime_assert_1413(); else ;
      }
      
#line 1413 
      struct rt2x00_field32 __constr_expr_686 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1413 
      tmp_1 = __constr_expr_686;
    }
    
#line 1413 
    ;
    
#line 1413 
    tmp_2 = (tmp_0.bit_mask & word) >> tmp_1.bit_offset;
  }
  
#line 1413 
  if (tmp_2 != 0U) 
#line 1415 
                   goto ldv_60052;
  else {
    unsigned int tmp_5;
    {
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 1414 
          bool __cond_1 = (_Bool)0;
          
#line 1414 
          if ((int)__cond_1 != 0) 
#line 1414 
                                  __compiletime_assert_1414(); else ;
        }
        
#line 1414 
        struct rt2x00_field32 __constr_expr_687 = {.bit_offset = 1U, .bit_mask = 2U};
        
#line 1414 
        tmp_3 = __constr_expr_687;
      }
      {
        {
          
#line 1414 
          bool __cond_2 = (_Bool)0;
          
#line 1414 
          if ((int)__cond_2 != 0) 
#line 1414 
                                  __compiletime_assert_1414(); else ;
        }
        
#line 1414 
        struct rt2x00_field32 __constr_expr_688 = {.bit_offset = 1U, .bit_mask = 2U};
        
#line 1414 
        tmp_4 = __constr_expr_688;
      }
      
#line 1414 
      ;
      
#line 1414 
      tmp_5 = (tmp_3.bit_mask & word) >> tmp_4.bit_offset;
    }
    
#line 1413 
    if (tmp_5 == 0U) 
#line 1415 
                     goto ldv_60052; else ;
  }
  
#line 1420 
  txdesc.flags = 0UL;
  {
    struct rt2x00_field32 tmp_6;
    struct rt2x00_field32 tmp_7;
    {
      struct rt2x00_field32 __dummy_1;
      struct rt2x00_field32 __dummy2_1;
      
    }
    {
      {
        
#line 1421 
        bool __cond_3 = (_Bool)0;
        
#line 1421 
        if ((int)__cond_3 != 0) 
#line 1421 
                                __compiletime_assert_1421(); else ;
      }
      
#line 1421 
      struct rt2x00_field32 __constr_expr_689 = {.bit_offset = 2U, .bit_mask = 28U};
      
#line 1421 
      tmp_6 = __constr_expr_689;
    }
    {
      {
        
#line 1421 
        bool __cond_4 = (_Bool)0;
        
#line 1421 
        if ((int)__cond_4 != 0) 
#line 1421 
                                __compiletime_assert_1421(); else ;
      }
      
#line 1421 
      struct rt2x00_field32 __constr_expr_690 = {.bit_offset = 2U, .bit_mask = 28U};
      
#line 1421 
      tmp_7 = __constr_expr_690;
    }
    
#line 1421 
    ;
    
#line 1421 
    tmp_8 = (tmp_6.bit_mask & word) >> tmp_7.bit_offset;
  }
  
#line 1421 
  switch (tmp_8) {
    case (unsigned int)0: 
#line 1422 
    ;
    case (unsigned int)1: 
#line 1423 
    ;
    
#line 1424 
    __set_bit(1L,(unsigned long volatile *)(& txdesc.flags));
    
#line 1425 
    goto ldv_60077;
    case (unsigned int)2: 
#line 1426 
    ;
    
#line 1427 
    __set_bit(4L,(unsigned long volatile *)(& txdesc.flags));
    default: 
#line 1429 
    ;
    
#line 1430 
    __set_bit(3L,(unsigned long volatile *)(& txdesc.flags));
  }
  ldv_60077: 
#line 1432 
  ;
  {
    struct rt2x00_field32 tmp_9;
    struct rt2x00_field32 tmp_10;
    {
      struct rt2x00_field32 __dummy_2;
      struct rt2x00_field32 __dummy2_2;
      
    }
    {
      {
        
#line 1432 
        bool __cond_5 = (_Bool)0;
        
#line 1432 
        if ((int)__cond_5 != 0) 
#line 1432 
                                __compiletime_assert_1432(); else ;
      }
      
#line 1432 
      struct rt2x00_field32 __constr_expr_691 = {.bit_offset = 5U, .bit_mask = 224U};
      
#line 1432 
      tmp_9 = __constr_expr_691;
    }
    {
      {
        
#line 1432 
        bool __cond_6 = (_Bool)0;
        
#line 1432 
        if ((int)__cond_6 != 0) 
#line 1432 
                                __compiletime_assert_1432(); else ;
      }
      
#line 1432 
      struct rt2x00_field32 __constr_expr_692 = {.bit_offset = 5U, .bit_mask = 224U};
      
#line 1432 
      tmp_10 = __constr_expr_692;
    }
    
#line 1432 
    ;
    
#line 1432 
    tmp_11 = (tmp_9.bit_mask & word) >> tmp_10.bit_offset;
  }
  
#line 1432 
  txdesc.retry = (int)tmp_11;
  
#line 1434 
  rt2x00lib_txdone(entry,& txdesc);
  ldv_60103: 
#line 1435 
  ;
  
#line 1408 
  tmp_12 = rt2x00queue_empty(queue);
  
#line 1408 
  if (tmp_12 == 0) 
#line 1410 
                   goto ldv_60102; else 
#line 1413 
                                        goto ldv_60052;
  ldv_60052: 
#line 1414 
  ;
  
#line 1415 
  return;
}


#line 1438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
__inline static void rt2500pci_enable_interrupt(struct rt2x00_dev *rt2x00dev, struct rt2x00_field32 irq_field)
{
  u32 reg;
  
#line 1447 
  ldv_spin_lock_irq_80(& rt2x00dev->irqmask_lock);
  
#line 1449 
  rt2x00mmio_register_read(rt2x00dev,32U,& reg);
  {
    struct rt2x00_field32 __dummy;
    struct rt2x00_field32 __dummy2;
    
  }
  
#line 1450 
  reg = ~ irq_field.bit_mask & reg;
  
#line 1450 
  reg = reg;
  
#line 1451 
  rt2x00mmio_register_write(rt2x00dev,32U,reg);
  
#line 1453 
  ldv_spin_unlock_irq_81(& rt2x00dev->irqmask_lock);
  
#line 1454 
  return;
}


#line 1475 
void __compiletime_assert_1475(void);


#line 1476 
void __compiletime_assert_1476(void);


#line 1477 
void __compiletime_assert_1477(void);


#line 1456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_txstatus_tasklet(unsigned long data)
{
  u32 reg;
  int tmp_8;
  
#line 1458 
  struct rt2x00_dev *rt2x00dev = (struct rt2x00_dev *)data;
  
#line 1464 
  rt2500pci_txdone(rt2x00dev,(enum data_queue_qid)QID_ATIM);
  
#line 1465 
  rt2500pci_txdone(rt2x00dev,(enum data_queue_qid)QID_AC_VO);
  
#line 1466 
  rt2500pci_txdone(rt2x00dev,(enum data_queue_qid)QID_AC_VI);
  
#line 1471 
  tmp_8 = constant_test_bit(4L,(unsigned long const volatile *)(& rt2x00dev->flags));
  
#line 1471 
  if (tmp_8 != 0) {
    
#line 1472 
    ldv_spin_lock_irq_82(& rt2x00dev->irqmask_lock);
    
#line 1474 
    rt2x00mmio_register_read(rt2x00dev,32U,& reg);
    {
      struct rt2x00_field32 tmp;
      struct rt2x00_field32 tmp_0;
      struct rt2x00_field32 tmp_1;
      {
        struct rt2x00_field32 __dummy;
        struct rt2x00_field32 __dummy2;
        
      }
      {
        {
          
#line 1475 
          bool __cond = (_Bool)0;
          
#line 1475 
          if ((int)__cond != 0) 
#line 1475 
                                __compiletime_assert_1475(); else ;
        }
        
#line 1475 
        struct rt2x00_field32 __constr_expr_693 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 1475 
        tmp = __constr_expr_693;
      }
      
#line 1475 
      reg = ~ tmp.bit_mask & reg;
      {
        {
          
#line 1475 
          bool __cond_0 = (_Bool)0;
          
#line 1475 
          if ((int)__cond_0 != 0) 
#line 1475 
                                  __compiletime_assert_1475(); else ;
        }
        
#line 1475 
        struct rt2x00_field32 __constr_expr_694 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 1475 
        tmp_0 = __constr_expr_694;
      }
      {
        {
          
#line 1475 
          bool __cond_1 = (_Bool)0;
          
#line 1475 
          if ((int)__cond_1 != 0) 
#line 1475 
                                  __compiletime_assert_1475(); else ;
        }
        
#line 1475 
        struct rt2x00_field32 __constr_expr_695 = {.bit_offset = 3U, .bit_mask = 8U};
        
#line 1475 
        tmp_1 = __constr_expr_695;
      }
      
#line 1475 
      reg = 0U | reg;
    }
    {
      struct rt2x00_field32 tmp_2;
      struct rt2x00_field32 tmp_3;
      struct rt2x00_field32 tmp_4;
      {
        struct rt2x00_field32 __dummy_0;
        struct rt2x00_field32 __dummy2_0;
        
      }
      {
        {
          
#line 1476 
          bool __cond_2 = (_Bool)0;
          
#line 1476 
          if ((int)__cond_2 != 0) 
#line 1476 
                                  __compiletime_assert_1476(); else ;
        }
        
#line 1476 
        struct rt2x00_field32 __constr_expr_696 = {.bit_offset = 4U, .bit_mask = 16U};
        
#line 1476 
        tmp_2 = __constr_expr_696;
      }
      
#line 1476 
      reg = ~ tmp_2.bit_mask & reg;
      {
        {
          
#line 1476 
          bool __cond_3 = (_Bool)0;
          
#line 1476 
          if ((int)__cond_3 != 0) 
#line 1476 
                                  __compiletime_assert_1476(); else ;
        }
        
#line 1476 
        struct rt2x00_field32 __constr_expr_697 = {.bit_offset = 4U, .bit_mask = 16U};
        
#line 1476 
        tmp_3 = __constr_expr_697;
      }
      {
        {
          
#line 1476 
          bool __cond_4 = (_Bool)0;
          
#line 1476 
          if ((int)__cond_4 != 0) 
#line 1476 
                                  __compiletime_assert_1476(); else ;
        }
        
#line 1476 
        struct rt2x00_field32 __constr_expr_698 = {.bit_offset = 4U, .bit_mask = 16U};
        
#line 1476 
        tmp_4 = __constr_expr_698;
      }
      
#line 1476 
      reg = 0U | reg;
    }
    {
      struct rt2x00_field32 tmp_5;
      struct rt2x00_field32 tmp_6;
      struct rt2x00_field32 tmp_7;
      {
        struct rt2x00_field32 __dummy_1;
        struct rt2x00_field32 __dummy2_1;
        
      }
      {
        {
          
#line 1477 
          bool __cond_5 = (_Bool)0;
          
#line 1477 
          if ((int)__cond_5 != 0) 
#line 1477 
                                  __compiletime_assert_1477(); else ;
        }
        
#line 1477 
        struct rt2x00_field32 __constr_expr_699 = {.bit_offset = 5U, .bit_mask = 32U};
        
#line 1477 
        tmp_5 = __constr_expr_699;
      }
      
#line 1477 
      reg = ~ tmp_5.bit_mask & reg;
      {
        {
          
#line 1477 
          bool __cond_6 = (_Bool)0;
          
#line 1477 
          if ((int)__cond_6 != 0) 
#line 1477 
                                  __compiletime_assert_1477(); else ;
        }
        
#line 1477 
        struct rt2x00_field32 __constr_expr_700 = {.bit_offset = 5U, .bit_mask = 32U};
        
#line 1477 
        tmp_6 = __constr_expr_700;
      }
      {
        {
          
#line 1477 
          bool __cond_7 = (_Bool)0;
          
#line 1477 
          if ((int)__cond_7 != 0) 
#line 1477 
                                  __compiletime_assert_1477(); else ;
        }
        
#line 1477 
        struct rt2x00_field32 __constr_expr_701 = {.bit_offset = 5U, .bit_mask = 32U};
        
#line 1477 
        tmp_7 = __constr_expr_701;
      }
      
#line 1477 
      reg = 0U | reg;
    }
    
#line 1478 
    rt2x00mmio_register_write(rt2x00dev,32U,reg);
    
#line 1480 
    ldv_spin_unlock_irq_83(& rt2x00dev->irqmask_lock);
  }
  else ;
  
#line 1482 
  return;
}


#line 1489 
void __compiletime_assert_1489(void);


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_tbtt_tasklet(unsigned long data)
{
  int tmp_0;
  
#line 1486 
  struct rt2x00_dev *rt2x00dev = (struct rt2x00_dev *)data;
  
#line 1487 
  rt2x00lib_beacondone(rt2x00dev);
  
#line 1488 
  tmp_0 = constant_test_bit(4L,(unsigned long const volatile *)(& rt2x00dev->flags));
  
#line 1488 
  if (tmp_0 != 0) {
    struct rt2x00_field32 tmp;
    {
      {
        
#line 1489 
        bool __cond = (_Bool)0;
        
#line 1489 
        if ((int)__cond != 0) 
#line 1489 
                              __compiletime_assert_1489(); else ;
      }
      
#line 1489 
      struct rt2x00_field32 __constr_expr_702 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1489 
      tmp = __constr_expr_702;
    }
    
#line 1489 
    ;
    
#line 1489 
    rt2500pci_enable_interrupt(rt2x00dev,tmp);
  }
  else ;
  
#line 1491 
  return;
}


#line 1498 
void __compiletime_assert_1498(void);


#line 1492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_rxdone_tasklet(unsigned long data)
{
  bool tmp_1;
  
#line 1494 
  struct rt2x00_dev *rt2x00dev = (struct rt2x00_dev *)data;
  
#line 1495 
  tmp_1 = rt2x00mmio_rxdone(rt2x00dev);
  
#line 1495 
  if ((int)tmp_1 != 0) 
#line 1496 
                       ldv_tasklet_schedule_84(& rt2x00dev->rxdone_tasklet);
  else {
    int tmp_0;
    
#line 1497 
    tmp_0 = constant_test_bit(4L,(unsigned long const volatile *)(& rt2x00dev->flags));
    
#line 1497 
    if (tmp_0 != 0) {
      struct rt2x00_field32 tmp;
      {
        {
          
#line 1498 
          bool __cond = (_Bool)0;
          
#line 1498 
          if ((int)__cond != 0) 
#line 1498 
                                __compiletime_assert_1498(); else ;
        }
        
#line 1498 
        struct rt2x00_field32 __constr_expr_703 = {.bit_offset = 6U, .bit_mask = 64U};
        
#line 1498 
        tmp = __constr_expr_703;
      }
      
#line 1498 
      ;
      
#line 1498 
      rt2500pci_enable_interrupt(rt2x00dev,tmp);
    }
    else ;
  }
  
#line 1500 
  return;
}


#line 1524 
void __compiletime_assert_1524(void);


#line 1527 
void __compiletime_assert_1527(void);


#line 1530 
void __compiletime_assert_1530(void);


#line 1531 
void __compiletime_assert_1531(void);


#line 1532 
void __compiletime_assert_1532(void);


#line 1537 
void __compiletime_assert_1537(void);


#line 1538 
void __compiletime_assert_1538(void);


#line 1539 
void __compiletime_assert_1539(void);


#line 1501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static irqreturn_t rt2500pci_interrupt(int irq, void *dev_instance)
{
  irqreturn_t __retres;
  u32 reg;
  u32 mask;
  int tmp;
  unsigned int tmp_2;
  unsigned int tmp_5;
  unsigned int tmp_17;
  
#line 1503 
  struct rt2x00_dev *rt2x00dev = (struct rt2x00_dev *)dev_instance;
  
#line 1510 
  rt2x00mmio_register_read(rt2x00dev,28U,& reg);
  
#line 1511 
  rt2x00mmio_register_write(rt2x00dev,28U,reg);
  
#line 1513 
  if (reg == 0U) {
    
#line 1514 
    __retres = IRQ_NONE;
    
#line 1514 
    goto return_label;
  }
  else ;
  
#line 1516 
  tmp = constant_test_bit(4L,(unsigned long const volatile *)(& rt2x00dev->flags));
  
#line 1516 
  if (tmp == 0) {
    
#line 1517 
    __retres = IRQ_HANDLED;
    
#line 1517 
    goto return_label;
  }
  else ;
  
#line 1519 
  mask = reg;
  {
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1524 
        bool __cond = (_Bool)0;
        
#line 1524 
        if ((int)__cond != 0) 
#line 1524 
                              __compiletime_assert_1524(); else ;
      }
      
#line 1524 
      struct rt2x00_field32 __constr_expr_704 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1524 
      tmp_0 = __constr_expr_704;
    }
    {
      {
        
#line 1524 
        bool __cond_0 = (_Bool)0;
        
#line 1524 
        if ((int)__cond_0 != 0) 
#line 1524 
                                __compiletime_assert_1524(); else ;
      }
      
#line 1524 
      struct rt2x00_field32 __constr_expr_705 = {.bit_offset = 0U, .bit_mask = 1U};
      
#line 1524 
      tmp_1 = __constr_expr_705;
    }
    
#line 1524 
    ;
    
#line 1524 
    tmp_2 = (tmp_0.bit_mask & reg) >> tmp_1.bit_offset;
  }
  
#line 1524 
  if (tmp_2 != 0U) 
#line 1525 
                   ldv_tasklet_hi_schedule_85(& rt2x00dev->tbtt_tasklet); else ;
  {
    struct rt2x00_field32 tmp_3;
    struct rt2x00_field32 tmp_4;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 1527 
        bool __cond_1 = (_Bool)0;
        
#line 1527 
        if ((int)__cond_1 != 0) 
#line 1527 
                                __compiletime_assert_1527(); else ;
      }
      
#line 1527 
      struct rt2x00_field32 __constr_expr_706 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1527 
      tmp_3 = __constr_expr_706;
    }
    {
      {
        
#line 1527 
        bool __cond_2 = (_Bool)0;
        
#line 1527 
        if ((int)__cond_2 != 0) 
#line 1527 
                                __compiletime_assert_1527(); else ;
      }
      
#line 1527 
      struct rt2x00_field32 __constr_expr_707 = {.bit_offset = 6U, .bit_mask = 64U};
      
#line 1527 
      tmp_4 = __constr_expr_707;
    }
    
#line 1527 
    ;
    
#line 1527 
    tmp_5 = (tmp_3.bit_mask & reg) >> tmp_4.bit_offset;
  }
  
#line 1527 
  if (tmp_5 != 0U) 
#line 1528 
                   ldv_tasklet_schedule_86(& rt2x00dev->rxdone_tasklet); else ;
  {
    struct rt2x00_field32 tmp_15;
    struct rt2x00_field32 tmp_16;
    {
      struct rt2x00_field32 __dummy_4;
      struct rt2x00_field32 __dummy2_4;
      
    }
    {
      {
        
#line 1530 
        bool __cond_12 = (_Bool)0;
        
#line 1530 
        if ((int)__cond_12 != 0) 
#line 1530 
                                 __compiletime_assert_1530(); else ;
      }
      
#line 1530 
      struct rt2x00_field32 __constr_expr_717 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 1530 
      tmp_15 = __constr_expr_717;
    }
    {
      {
        
#line 1530 
        bool __cond_13 = (_Bool)0;
        
#line 1530 
        if ((int)__cond_13 != 0) 
#line 1530 
                                 __compiletime_assert_1530(); else ;
      }
      
#line 1530 
      struct rt2x00_field32 __constr_expr_718 = {.bit_offset = 4U, .bit_mask = 16U};
      
#line 1530 
      tmp_16 = __constr_expr_718;
    }
    
#line 1530 
    ;
    
#line 1530 
    tmp_17 = (tmp_15.bit_mask & reg) >> tmp_16.bit_offset;
  }
  
#line 1530 
  if (tmp_17 != 0U) 
#line 1530 
                    goto _LOR;
  else {
    unsigned int tmp_20;
    {
      struct rt2x00_field32 tmp_18;
      struct rt2x00_field32 tmp_19;
      {
        struct rt2x00_field32 __dummy_5;
        struct rt2x00_field32 __dummy2_5;
        
      }
      {
        {
          
#line 1531 
          bool __cond_14 = (_Bool)0;
          
#line 1531 
          if ((int)__cond_14 != 0) 
#line 1531 
                                   __compiletime_assert_1531(); else ;
        }
        
#line 1531 
        struct rt2x00_field32 __constr_expr_719 = {.bit_offset = 5U, .bit_mask = 32U};
        
#line 1531 
        tmp_18 = __constr_expr_719;
      }
      {
        {
          
#line 1531 
          bool __cond_15 = (_Bool)0;
          
#line 1531 
          if ((int)__cond_15 != 0) 
#line 1531 
                                   __compiletime_assert_1531(); else ;
        }
        
#line 1531 
        struct rt2x00_field32 __constr_expr_720 = {.bit_offset = 5U, .bit_mask = 32U};
        
#line 1531 
        tmp_19 = __constr_expr_720;
      }
      
#line 1531 
      ;
      
#line 1531 
      tmp_20 = (tmp_18.bit_mask & reg) >> tmp_19.bit_offset;
    }
    
#line 1530 
    if (tmp_20 != 0U) 
#line 1530 
                      goto _LOR;
    else {
      unsigned int tmp_23;
      {
        struct rt2x00_field32 tmp_21;
        struct rt2x00_field32 tmp_22;
        {
          struct rt2x00_field32 __dummy_6;
          struct rt2x00_field32 __dummy2_6;
          
        }
        {
          {
            
#line 1532 
            bool __cond_16 = (_Bool)0;
            
#line 1532 
            if ((int)__cond_16 != 0) 
#line 1532 
                                     __compiletime_assert_1532(); else ;
          }
          
#line 1532 
          struct rt2x00_field32 __constr_expr_721 = {.bit_offset = 3U, .bit_mask = 8U};
          
#line 1532 
          tmp_21 = __constr_expr_721;
        }
        {
          {
            
#line 1532 
            bool __cond_17 = (_Bool)0;
            
#line 1532 
            if ((int)__cond_17 != 0) 
#line 1532 
                                     __compiletime_assert_1532(); else ;
          }
          
#line 1532 
          struct rt2x00_field32 __constr_expr_722 = {.bit_offset = 3U, .bit_mask = 8U};
          
#line 1532 
          tmp_22 = __constr_expr_722;
        }
        
#line 1532 
        ;
        
#line 1532 
        tmp_23 = (tmp_21.bit_mask & reg) >> tmp_22.bit_offset;
      }
      
#line 1531 
      if (tmp_23 != 0U) {
        _LOR: {
                
#line 1533 
                ldv_tasklet_schedule_87(& rt2x00dev->txstatus_tasklet);
                {
                  struct rt2x00_field32 tmp_6;
                  struct rt2x00_field32 tmp_7;
                  struct rt2x00_field32 tmp_8;
                  {
                    struct rt2x00_field32 __dummy_1;
                    struct rt2x00_field32 __dummy2_1;
                    
                  }
                  {
                    {
                      
#line 1537 
                      bool __cond_3 = (_Bool)0;
                      
#line 1537 
                      if ((int)__cond_3 != 0) 
#line 1537 
                                              __compiletime_assert_1537(); else ;
                    }
                    
#line 1537 
                    struct rt2x00_field32 __constr_expr_708 = {.bit_offset = 3U, .bit_mask = 8U};
                    
#line 1537 
                    tmp_6 = __constr_expr_708;
                  }
                  
#line 1537 
                  mask = ~ tmp_6.bit_mask & mask;
                  {
                    {
                      
#line 1537 
                      bool __cond_4 = (_Bool)0;
                      
#line 1537 
                      if ((int)__cond_4 != 0) 
#line 1537 
                                              __compiletime_assert_1537(); else ;
                    }
                    
#line 1537 
                    struct rt2x00_field32 __constr_expr_709 = {.bit_offset = 3U, .bit_mask = 8U};
                    
#line 1537 
                    tmp_7 = __constr_expr_709;
                  }
                  {
                    {
                      
#line 1537 
                      bool __cond_5 = (_Bool)0;
                      
#line 1537 
                      if ((int)__cond_5 != 0) 
#line 1537 
                                              __compiletime_assert_1537(); else ;
                    }
                    
#line 1537 
                    struct rt2x00_field32 __constr_expr_710 = {.bit_offset = 3U, .bit_mask = 8U};
                    
#line 1537 
                    tmp_8 = __constr_expr_710;
                  }
                  
#line 1537 
                  mask = ((unsigned int)(1 << tmp_7.bit_offset) & tmp_8.bit_mask) | mask;
                }
                {
                  struct rt2x00_field32 tmp_9;
                  struct rt2x00_field32 tmp_10;
                  struct rt2x00_field32 tmp_11;
                  {
                    struct rt2x00_field32 __dummy_2;
                    struct rt2x00_field32 __dummy2_2;
                    
                  }
                  {
                    {
                      
#line 1538 
                      bool __cond_6 = (_Bool)0;
                      
#line 1538 
                      if ((int)__cond_6 != 0) 
#line 1538 
                                              __compiletime_assert_1538(); else ;
                    }
                    
#line 1538 
                    struct rt2x00_field32 __constr_expr_711 = {.bit_offset = 4U, .bit_mask = 16U};
                    
#line 1538 
                    tmp_9 = __constr_expr_711;
                  }
                  
#line 1538 
                  mask = ~ tmp_9.bit_mask & mask;
                  {
                    {
                      
#line 1538 
                      bool __cond_7 = (_Bool)0;
                      
#line 1538 
                      if ((int)__cond_7 != 0) 
#line 1538 
                                              __compiletime_assert_1538(); else ;
                    }
                    
#line 1538 
                    struct rt2x00_field32 __constr_expr_712 = {.bit_offset = 4U, .bit_mask = 16U};
                    
#line 1538 
                    tmp_10 = __constr_expr_712;
                  }
                  {
                    {
                      
#line 1538 
                      bool __cond_8 = (_Bool)0;
                      
#line 1538 
                      if ((int)__cond_8 != 0) 
#line 1538 
                                              __compiletime_assert_1538(); else ;
                    }
                    
#line 1538 
                    struct rt2x00_field32 __constr_expr_713 = {.bit_offset = 4U, .bit_mask = 16U};
                    
#line 1538 
                    tmp_11 = __constr_expr_713;
                  }
                  
#line 1538 
                  mask = ((unsigned int)(1 << tmp_10.bit_offset) & tmp_11.bit_mask) | mask;
                }
                {
                  struct rt2x00_field32 tmp_12;
                  struct rt2x00_field32 tmp_13;
                  struct rt2x00_field32 tmp_14;
                  {
                    struct rt2x00_field32 __dummy_3;
                    struct rt2x00_field32 __dummy2_3;
                    
                  }
                  {
                    {
                      
#line 1539 
                      bool __cond_9 = (_Bool)0;
                      
#line 1539 
                      if ((int)__cond_9 != 0) 
#line 1539 
                                              __compiletime_assert_1539(); else ;
                    }
                    
#line 1539 
                    struct rt2x00_field32 __constr_expr_714 = {.bit_offset = 5U, .bit_mask = 32U};
                    
#line 1539 
                    tmp_12 = __constr_expr_714;
                  }
                  
#line 1539 
                  mask = ~ tmp_12.bit_mask & mask;
                  {
                    {
                      
#line 1539 
                      bool __cond_10 = (_Bool)0;
                      
#line 1539 
                      if ((int)__cond_10 != 0) 
#line 1539 
                                               __compiletime_assert_1539(); else ;
                    }
                    
#line 1539 
                    struct rt2x00_field32 __constr_expr_715 = {.bit_offset = 5U, .bit_mask = 32U};
                    
#line 1539 
                    tmp_13 = __constr_expr_715;
                  }
                  {
                    {
                      
#line 1539 
                      bool __cond_11 = (_Bool)0;
                      
#line 1539 
                      if ((int)__cond_11 != 0) 
#line 1539 
                                               __compiletime_assert_1539(); else ;
                    }
                    
#line 1539 
                    struct rt2x00_field32 __constr_expr_716 = {.bit_offset = 5U, .bit_mask = 32U};
                    
#line 1539 
                    tmp_14 = __constr_expr_716;
                  }
                  
#line 1539 
                  mask = ((unsigned int)(1 << tmp_13.bit_offset) & tmp_14.bit_mask) | mask;
                }
              }
      }
      else ;
    }
  }
  
#line 1546 
  ldv_spin_lock_88(& rt2x00dev->irqmask_lock);
  
#line 1548 
  rt2x00mmio_register_read(rt2x00dev,32U,& reg);
  
#line 1549 
  reg |= mask;
  
#line 1550 
  rt2x00mmio_register_write(rt2x00dev,32U,reg);
  
#line 1552 
  ldv_spin_unlock_89(& rt2x00dev->irqmask_lock);
  
#line 1554 
  __retres = IRQ_HANDLED;
  return_label: 
#line 1554 
                return __retres;
}


#line 1572 
void __compiletime_assert_1572(void);


#line 1593 
void __compiletime_assert_1593(void);


#line 1594 
void __compiletime_assert_1595(void);


#line 1596 
void __compiletime_assert_1597(void);


#line 1598 
void __compiletime_assert_1599(void);


#line 1600 
void __compiletime_assert_1600(void);


#line 1601 
void __compiletime_assert_1601(void);


#line 1602 
void __compiletime_assert_1602(void);


#line 1609 
void __compiletime_assert_1609(void);


#line 1610 
void __compiletime_assert_1610(void);


#line 1611 
void __compiletime_assert_1611(void);


#line 1618 
void __compiletime_assert_1619(void);


#line 1560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_validate_eeprom(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  struct eeprom_93cx6 eeprom;
  u32 reg;
  u16 word;
  u8 *mac;
  unsigned int tmp_1;
  int tmp_4;
  bool tmp_3;
  
#line 1567 
  rt2x00mmio_register_read(rt2x00dev,84U,& reg);
  
#line 1569 
  eeprom.data = (void *)rt2x00dev;
  
#line 1570 
  eeprom.register_read = & rt2500pci_eepromregister_read;
  
#line 1571 
  eeprom.register_write = & rt2500pci_eepromregister_write;
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1572 
        bool __cond = (_Bool)0;
        
#line 1572 
        if ((int)__cond != 0) 
#line 1572 
                              __compiletime_assert_1572(); else ;
      }
      
#line 1572 
      struct rt2x00_field32 __constr_expr_723 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 1572 
      tmp = __constr_expr_723;
    }
    {
      {
        
#line 1572 
        bool __cond_0 = (_Bool)0;
        
#line 1572 
        if ((int)__cond_0 != 0) 
#line 1572 
                                __compiletime_assert_1572(); else ;
      }
      
#line 1572 
      struct rt2x00_field32 __constr_expr_724 = {.bit_offset = 5U, .bit_mask = 32U};
      
#line 1572 
      tmp_0 = __constr_expr_724;
    }
    
#line 1572 
    ;
    
#line 1572 
    tmp_1 = (tmp.bit_mask & reg) >> tmp_0.bit_offset;
  }
  
#line 1572 
  if (tmp_1 != 0U) 
#line 1572 
                   eeprom.width = 6; else 
#line 1572 
                                          eeprom.width = 8;
  
#line 1574 
  eeprom.reg_data_in = (char)0;
  
#line 1575 
  eeprom.reg_data_out = (char)0;
  
#line 1576 
  eeprom.reg_data_clock = (char)0;
  
#line 1577 
  eeprom.reg_chip_select = (char)0;
  
#line 1579 
  eeprom_93cx6_multiread(& eeprom,(unsigned char)0,rt2x00dev->eeprom,(unsigned short)256);
  
#line 1585 
  mac = (u8 *)rt2x00_eeprom_addr(rt2x00dev,2U);
  
#line 1586 
  tmp_3 = is_valid_ether_addr((u8 const *)mac);
  
#line 1586 
  if (tmp_3) 
#line 1586 
             tmp_4 = 0; else 
#line 1586 
                             tmp_4 = 1;
  
#line 1586 
  if (tmp_4) {
    
#line 1587 
    eth_random_addr(mac);
    {
      
#line 1588 
      struct _ddebug descriptor = {.modname = "rt2500pci", .function = "rt2500pci_validate_eeprom", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c", .format = "%s: EEPROM recovery - ", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1588U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1588 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1588 
                                                          __dynamic_dev_dbg(& descriptor,(struct device const *)(& ((rt2x00dev->hw)->wiphy)->dev),"%s: EEPROM recovery - ","rt2500pci_validate_eeprom",mac); else ;
    }
  }
  else ;
  
#line 1591 
  rt2x00_eeprom_read(rt2x00dev,16U,& word);
  
#line 1592 
  if ((unsigned int)word == 65535U) {
    {
      struct rt2x00_field16 tmp_5;
      struct rt2x00_field16 tmp_6;
      struct rt2x00_field16 tmp_7;
      {
        struct rt2x00_field16 __dummy_0;
        struct rt2x00_field16 __dummy2_0;
        
      }
      {
        {
          
#line 1593 
          bool __cond_1 = (_Bool)0;
          
#line 1593 
          if ((int)__cond_1 != 0) 
#line 1593 
                                  __compiletime_assert_1593(); else ;
        }
        
#line 1593 
        struct rt2x00_field16 __constr_expr_725 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
        
#line 1593 
        tmp_5 = __constr_expr_725;
      }
      
#line 1593 
      word = (unsigned short)(~ ((int)tmp_5.bit_mask) & (int)word);
      {
        {
          
#line 1593 
          bool __cond_2 = (_Bool)0;
          
#line 1593 
          if ((int)__cond_2 != 0) 
#line 1593 
                                  __compiletime_assert_1593(); else ;
        }
        
#line 1593 
        struct rt2x00_field16 __constr_expr_726 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
        
#line 1593 
        tmp_6 = __constr_expr_726;
      }
      {
        {
          
#line 1593 
          bool __cond_3 = (_Bool)0;
          
#line 1593 
          if ((int)__cond_3 != 0) 
#line 1593 
                                  __compiletime_assert_1593(); else ;
        }
        
#line 1593 
        struct rt2x00_field16 __constr_expr_727 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
        
#line 1593 
        tmp_7 = __constr_expr_727;
      }
      
#line 1593 
      word = (unsigned short)(((2 << (int)tmp_6.bit_offset) & (int)tmp_7.bit_mask) | (int)word);
    }
    {
      struct rt2x00_field16 tmp_8;
      struct rt2x00_field16 tmp_9;
      struct rt2x00_field16 tmp_10;
      {
        struct rt2x00_field16 __dummy_1;
        struct rt2x00_field16 __dummy2_1;
        
      }
      {
        {
          
#line 1594 
          bool __cond_4 = (_Bool)0;
          
#line 1594 
          if ((int)__cond_4 != 0) 
#line 1594 
                                  __compiletime_assert_1595(); else ;
        }
        
#line 1594 
        struct rt2x00_field16 __constr_expr_728 = {.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
        
#line 1594 
        tmp_8 = __constr_expr_728;
      }
      
#line 1594 
      word = (unsigned short)(~ ((int)tmp_8.bit_mask) & (int)word);
      {
        {
          
#line 1594 
          bool __cond_5 = (_Bool)0;
          
#line 1594 
          if ((int)__cond_5 != 0) 
#line 1594 
                                  __compiletime_assert_1595(); else ;
        }
        
#line 1594 
        struct rt2x00_field16 __constr_expr_729 = {.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
        
#line 1594 
        tmp_9 = __constr_expr_729;
      }
      {
        {
          
#line 1594 
          bool __cond_6 = (_Bool)0;
          
#line 1594 
          if ((int)__cond_6 != 0) 
#line 1594 
                                  __compiletime_assert_1595(); else ;
        }
        
#line 1594 
        struct rt2x00_field16 __constr_expr_730 = {.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
        
#line 1594 
        tmp_10 = __constr_expr_730;
      }
      
#line 1594 
      word = (unsigned short)(0 | (int)word);
    }
    {
      struct rt2x00_field16 tmp_11;
      struct rt2x00_field16 tmp_12;
      struct rt2x00_field16 tmp_13;
      {
        struct rt2x00_field16 __dummy_2;
        struct rt2x00_field16 __dummy2_2;
        
      }
      {
        {
          
#line 1596 
          bool __cond_7 = (_Bool)0;
          
#line 1596 
          if ((int)__cond_7 != 0) 
#line 1596 
                                  __compiletime_assert_1597(); else ;
        }
        
#line 1596 
        struct rt2x00_field16 __constr_expr_731 = {.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
        
#line 1596 
        tmp_11 = __constr_expr_731;
      }
      
#line 1596 
      word = (unsigned short)(~ ((int)tmp_11.bit_mask) & (int)word);
      {
        {
          
#line 1596 
          bool __cond_8 = (_Bool)0;
          
#line 1596 
          if ((int)__cond_8 != 0) 
#line 1596 
                                  __compiletime_assert_1597(); else ;
        }
        
#line 1596 
        struct rt2x00_field16 __constr_expr_732 = {.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
        
#line 1596 
        tmp_12 = __constr_expr_732;
      }
      {
        {
          
#line 1596 
          bool __cond_9 = (_Bool)0;
          
#line 1596 
          if ((int)__cond_9 != 0) 
#line 1596 
                                  __compiletime_assert_1597(); else ;
        }
        
#line 1596 
        struct rt2x00_field16 __constr_expr_733 = {.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
        
#line 1596 
        tmp_13 = __constr_expr_733;
      }
      
#line 1596 
      word = (unsigned short)(0 | (int)word);
    }
    {
      struct rt2x00_field16 tmp_14;
      struct rt2x00_field16 tmp_15;
      struct rt2x00_field16 tmp_16;
      {
        struct rt2x00_field16 __dummy_3;
        struct rt2x00_field16 __dummy2_3;
        
      }
      {
        {
          
#line 1598 
          bool __cond_10 = (_Bool)0;
          
#line 1598 
          if ((int)__cond_10 != 0) 
#line 1598 
                                   __compiletime_assert_1599(); else ;
        }
        
#line 1598 
        struct rt2x00_field16 __constr_expr_734 = {.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
        
#line 1598 
        tmp_14 = __constr_expr_734;
      }
      
#line 1598 
      word = (unsigned short)(~ ((int)tmp_14.bit_mask) & (int)word);
      {
        {
          
#line 1598 
          bool __cond_11 = (_Bool)0;
          
#line 1598 
          if ((int)__cond_11 != 0) 
#line 1598 
                                   __compiletime_assert_1599(); else ;
        }
        
#line 1598 
        struct rt2x00_field16 __constr_expr_735 = {.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
        
#line 1598 
        tmp_15 = __constr_expr_735;
      }
      {
        {
          
#line 1598 
          bool __cond_12 = (_Bool)0;
          
#line 1598 
          if ((int)__cond_12 != 0) 
#line 1598 
                                   __compiletime_assert_1599(); else ;
        }
        
#line 1598 
        struct rt2x00_field16 __constr_expr_736 = {.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
        
#line 1598 
        tmp_16 = __constr_expr_736;
      }
      
#line 1598 
      word = (unsigned short)(0 | (int)word);
    }
    {
      struct rt2x00_field16 tmp_17;
      struct rt2x00_field16 tmp_18;
      struct rt2x00_field16 tmp_19;
      {
        struct rt2x00_field16 __dummy_4;
        struct rt2x00_field16 __dummy2_4;
        
      }
      {
        {
          
#line 1600 
          bool __cond_13 = (_Bool)0;
          
#line 1600 
          if ((int)__cond_13 != 0) 
#line 1600 
                                   __compiletime_assert_1600(); else ;
        }
        
#line 1600 
        struct rt2x00_field16 __constr_expr_737 = {.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
        
#line 1600 
        tmp_17 = __constr_expr_737;
      }
      
#line 1600 
      word = (unsigned short)(~ ((int)tmp_17.bit_mask) & (int)word);
      {
        {
          
#line 1600 
          bool __cond_14 = (_Bool)0;
          
#line 1600 
          if ((int)__cond_14 != 0) 
#line 1600 
                                   __compiletime_assert_1600(); else ;
        }
        
#line 1600 
        struct rt2x00_field16 __constr_expr_738 = {.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
        
#line 1600 
        tmp_18 = __constr_expr_738;
      }
      {
        {
          
#line 1600 
          bool __cond_15 = (_Bool)0;
          
#line 1600 
          if ((int)__cond_15 != 0) 
#line 1600 
                                   __compiletime_assert_1600(); else ;
        }
        
#line 1600 
        struct rt2x00_field16 __constr_expr_739 = {.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
        
#line 1600 
        tmp_19 = __constr_expr_739;
      }
      
#line 1600 
      word = (unsigned short)(0 | (int)word);
    }
    {
      struct rt2x00_field16 tmp_20;
      struct rt2x00_field16 tmp_21;
      struct rt2x00_field16 tmp_22;
      {
        struct rt2x00_field16 __dummy_5;
        struct rt2x00_field16 __dummy2_5;
        
      }
      {
        {
          
#line 1601 
          bool __cond_16 = (_Bool)0;
          
#line 1601 
          if ((int)__cond_16 != 0) 
#line 1601 
                                   __compiletime_assert_1601(); else ;
        }
        
#line 1601 
        struct rt2x00_field16 __constr_expr_740 = {.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
        
#line 1601 
        tmp_20 = __constr_expr_740;
      }
      
#line 1601 
      word = (unsigned short)(~ ((int)tmp_20.bit_mask) & (int)word);
      {
        {
          
#line 1601 
          bool __cond_17 = (_Bool)0;
          
#line 1601 
          if ((int)__cond_17 != 0) 
#line 1601 
                                   __compiletime_assert_1601(); else ;
        }
        
#line 1601 
        struct rt2x00_field16 __constr_expr_741 = {.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
        
#line 1601 
        tmp_21 = __constr_expr_741;
      }
      {
        {
          
#line 1601 
          bool __cond_18 = (_Bool)0;
          
#line 1601 
          if ((int)__cond_18 != 0) 
#line 1601 
                                   __compiletime_assert_1601(); else ;
        }
        
#line 1601 
        struct rt2x00_field16 __constr_expr_742 = {.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
        
#line 1601 
        tmp_22 = __constr_expr_742;
      }
      
#line 1601 
      word = (unsigned short)(0 | (int)word);
    }
    {
      struct rt2x00_field16 tmp_23;
      struct rt2x00_field16 tmp_24;
      struct rt2x00_field16 tmp_25;
      {
        struct rt2x00_field16 __dummy_6;
        struct rt2x00_field16 __dummy2_6;
        
      }
      {
        {
          
#line 1602 
          bool __cond_19 = (_Bool)0;
          
#line 1602 
          if ((int)__cond_19 != 0) 
#line 1602 
                                   __compiletime_assert_1602(); else ;
        }
        
#line 1602 
        struct rt2x00_field16 __constr_expr_743 = {.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
        
#line 1602 
        tmp_23 = __constr_expr_743;
      }
      
#line 1602 
      word = (unsigned short)(~ ((int)tmp_23.bit_mask) & (int)word);
      {
        {
          
#line 1602 
          bool __cond_20 = (_Bool)0;
          
#line 1602 
          if ((int)__cond_20 != 0) 
#line 1602 
                                   __compiletime_assert_1602(); else ;
        }
        
#line 1602 
        struct rt2x00_field16 __constr_expr_744 = {.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
        
#line 1602 
        tmp_24 = __constr_expr_744;
      }
      {
        {
          
#line 1602 
          bool __cond_21 = (_Bool)0;
          
#line 1602 
          if ((int)__cond_21 != 0) 
#line 1602 
                                   __compiletime_assert_1602(); else ;
        }
        
#line 1602 
        struct rt2x00_field16 __constr_expr_745 = {.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
        
#line 1602 
        tmp_25 = __constr_expr_745;
      }
      
#line 1602 
      word = (unsigned short)(0 | (int)word);
    }
    
#line 1603 
    rt2x00_eeprom_write(rt2x00dev,16U,(unsigned short)((int)word));
    {
      
#line 1604 
      struct _ddebug descriptor_0 = {.modname = "rt2500pci", .function = "rt2500pci_validate_eeprom", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c", .format = "%s: EEPROM recovery - ", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1604U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1604 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1604 
                                                            __dynamic_dev_dbg(& descriptor_0,(struct device const *)(& ((rt2x00dev->hw)->wiphy)->dev),"%s: EEPROM recovery - ","rt2500pci_validate_eeprom",(int)word); else ;
    }
  }
  else ;
  
#line 1607 
  rt2x00_eeprom_read(rt2x00dev,17U,& word);
  
#line 1608 
  if ((unsigned int)word == 65535U) {
    {
      struct rt2x00_field16 tmp_26;
      struct rt2x00_field16 tmp_27;
      struct rt2x00_field16 tmp_28;
      {
        struct rt2x00_field16 __dummy_7;
        struct rt2x00_field16 __dummy2_7;
        
      }
      {
        {
          
#line 1609 
          bool __cond_22 = (_Bool)0;
          
#line 1609 
          if ((int)__cond_22 != 0) 
#line 1609 
                                   __compiletime_assert_1609(); else ;
        }
        
#line 1609 
        struct rt2x00_field16 __constr_expr_746 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
        
#line 1609 
        tmp_26 = __constr_expr_746;
      }
      
#line 1609 
      word = (unsigned short)(~ ((int)tmp_26.bit_mask) & (int)word);
      {
        {
          
#line 1609 
          bool __cond_23 = (_Bool)0;
          
#line 1609 
          if ((int)__cond_23 != 0) 
#line 1609 
                                   __compiletime_assert_1609(); else ;
        }
        
#line 1609 
        struct rt2x00_field16 __constr_expr_747 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
        
#line 1609 
        tmp_27 = __constr_expr_747;
      }
      {
        {
          
#line 1609 
          bool __cond_24 = (_Bool)0;
          
#line 1609 
          if ((int)__cond_24 != 0) 
#line 1609 
                                   __compiletime_assert_1609(); else ;
        }
        
#line 1609 
        struct rt2x00_field16 __constr_expr_748 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
        
#line 1609 
        tmp_28 = __constr_expr_748;
      }
      
#line 1609 
      word = (unsigned short)(0 | (int)word);
    }
    {
      struct rt2x00_field16 tmp_29;
      struct rt2x00_field16 tmp_30;
      struct rt2x00_field16 tmp_31;
      {
        struct rt2x00_field16 __dummy_8;
        struct rt2x00_field16 __dummy2_8;
        
      }
      {
        {
          
#line 1610 
          bool __cond_25 = (_Bool)0;
          
#line 1610 
          if ((int)__cond_25 != 0) 
#line 1610 
                                   __compiletime_assert_1610(); else ;
        }
        
#line 1610 
        struct rt2x00_field16 __constr_expr_749 = {.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
        
#line 1610 
        tmp_29 = __constr_expr_749;
      }
      
#line 1610 
      word = (unsigned short)(~ ((int)tmp_29.bit_mask) & (int)word);
      {
        {
          
#line 1610 
          bool __cond_26 = (_Bool)0;
          
#line 1610 
          if ((int)__cond_26 != 0) 
#line 1610 
                                   __compiletime_assert_1610(); else ;
        }
        
#line 1610 
        struct rt2x00_field16 __constr_expr_750 = {.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
        
#line 1610 
        tmp_30 = __constr_expr_750;
      }
      {
        {
          
#line 1610 
          bool __cond_27 = (_Bool)0;
          
#line 1610 
          if ((int)__cond_27 != 0) 
#line 1610 
                                   __compiletime_assert_1610(); else ;
        }
        
#line 1610 
        struct rt2x00_field16 __constr_expr_751 = {.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
        
#line 1610 
        tmp_31 = __constr_expr_751;
      }
      
#line 1610 
      word = (unsigned short)(0 | (int)word);
    }
    {
      struct rt2x00_field16 tmp_32;
      struct rt2x00_field16 tmp_33;
      struct rt2x00_field16 tmp_34;
      {
        struct rt2x00_field16 __dummy_9;
        struct rt2x00_field16 __dummy2_9;
        
      }
      {
        {
          
#line 1611 
          bool __cond_28 = (_Bool)0;
          
#line 1611 
          if ((int)__cond_28 != 0) 
#line 1611 
                                   __compiletime_assert_1611(); else ;
        }
        
#line 1611 
        struct rt2x00_field16 __constr_expr_752 = {.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
        
#line 1611 
        tmp_32 = __constr_expr_752;
      }
      
#line 1611 
      word = (unsigned short)(~ ((int)tmp_32.bit_mask) & (int)word);
      {
        {
          
#line 1611 
          bool __cond_29 = (_Bool)0;
          
#line 1611 
          if ((int)__cond_29 != 0) 
#line 1611 
                                   __compiletime_assert_1611(); else ;
        }
        
#line 1611 
        struct rt2x00_field16 __constr_expr_753 = {.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
        
#line 1611 
        tmp_33 = __constr_expr_753;
      }
      {
        {
          
#line 1611 
          bool __cond_30 = (_Bool)0;
          
#line 1611 
          if ((int)__cond_30 != 0) 
#line 1611 
                                   __compiletime_assert_1611(); else ;
        }
        
#line 1611 
        struct rt2x00_field16 __constr_expr_754 = {.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
        
#line 1611 
        tmp_34 = __constr_expr_754;
      }
      
#line 1611 
      word = (unsigned short)(0 | (int)word);
    }
    
#line 1612 
    rt2x00_eeprom_write(rt2x00dev,17U,(unsigned short)((int)word));
    {
      
#line 1613 
      struct _ddebug descriptor_1 = {.modname = "rt2500pci", .function = "rt2500pci_validate_eeprom", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c", .format = "%s: EEPROM recovery - ", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1613U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1613 
      if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 1613 
                                                            __dynamic_dev_dbg(& descriptor_1,(struct device const *)(& ((rt2x00dev->hw)->wiphy)->dev),"%s: EEPROM recovery - ","rt2500pci_validate_eeprom",(int)word); else ;
    }
  }
  else ;
  
#line 1616 
  rt2x00_eeprom_read(rt2x00dev,62U,& word);
  
#line 1617 
  if ((unsigned int)word == 65535U) {
    {
      struct rt2x00_field16 tmp_35;
      struct rt2x00_field16 tmp_36;
      struct rt2x00_field16 tmp_37;
      {
        struct rt2x00_field16 __dummy_10;
        struct rt2x00_field16 __dummy2_10;
        
      }
      {
        {
          
#line 1618 
          bool __cond_31 = (_Bool)0;
          
#line 1618 
          if ((int)__cond_31 != 0) 
#line 1618 
                                   __compiletime_assert_1619(); else ;
        }
        
#line 1618 
        struct rt2x00_field16 __constr_expr_755 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
        
#line 1618 
        tmp_35 = __constr_expr_755;
      }
      
#line 1618 
      word = (unsigned short)(~ ((int)tmp_35.bit_mask) & (int)word);
      {
        {
          
#line 1618 
          bool __cond_32 = (_Bool)0;
          
#line 1618 
          if ((int)__cond_32 != 0) 
#line 1618 
                                   __compiletime_assert_1619(); else ;
        }
        
#line 1618 
        struct rt2x00_field16 __constr_expr_756 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
        
#line 1618 
        tmp_36 = __constr_expr_756;
      }
      {
        {
          
#line 1618 
          bool __cond_33 = (_Bool)0;
          
#line 1618 
          if ((int)__cond_33 != 0) 
#line 1618 
                                   __compiletime_assert_1619(); else ;
        }
        
#line 1618 
        struct rt2x00_field16 __constr_expr_757 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
        
#line 1618 
        tmp_37 = __constr_expr_757;
      }
      
#line 1618 
      word = (unsigned short)(((121 << (int)tmp_36.bit_offset) & (int)tmp_37.bit_mask) | (int)word);
    }
    
#line 1620 
    rt2x00_eeprom_write(rt2x00dev,62U,(unsigned short)((int)word));
    {
      
#line 1621 
      struct _ddebug descriptor_2 = {.modname = "rt2500pci", .function = "rt2500pci_validate_eeprom", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c", .format = "%s: EEPROM recovery - ", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1622U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1621 
      if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 1621 
                                                            __dynamic_dev_dbg(& descriptor_2,(struct device const *)(& ((rt2x00dev->hw)->wiphy)->dev),"%s: EEPROM recovery - ","rt2500pci_validate_eeprom",(int)word); else ;
    }
  }
  else ;
  
#line 1625 
  __retres = 0;
  
#line 1625 
  return __retres;
}


#line 1642 
void __compiletime_assert_1642(void);


#line 1645 
void __compiletime_assert_1645(void);


#line 1661 
void __compiletime_assert_1661(void);


#line 1663 
void __compiletime_assert_1663(void);


#line 1669 
void __compiletime_assert_1669(void);


#line 1682 
void __compiletime_assert_1682(void);


#line 1694 
void __compiletime_assert_1694(void);


#line 1702 
void __compiletime_assert_1702(void);


#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_init_eeprom(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  u32 reg;
  u16 value;
  u16 eeprom;
  int tmp_1;
  unsigned int tmp_4;
  int tmp_6;
  bool tmp_5;
  int tmp_19;
  int tmp_22;
  int tmp_25;
  int tmp_28;
  int tmp_31;
  int tmp_34;
  
#line 1637 
  rt2x00_eeprom_read(rt2x00dev,16U,& eeprom);
  {
    struct rt2x00_field16 tmp;
    struct rt2x00_field16 tmp_0;
    {
      struct rt2x00_field16 __dummy;
      struct rt2x00_field16 __dummy2;
      
    }
    {
      {
        
#line 1642 
        bool __cond = (_Bool)0;
        
#line 1642 
        if ((int)__cond != 0) 
#line 1642 
                              __compiletime_assert_1642(); else ;
      }
      
#line 1642 
      struct rt2x00_field16 __constr_expr_758 = {.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
      
#line 1642 
      tmp = __constr_expr_758;
    }
    {
      {
        
#line 1642 
        bool __cond_0 = (_Bool)0;
        
#line 1642 
        if ((int)__cond_0 != 0) 
#line 1642 
                                __compiletime_assert_1642(); else ;
      }
      
#line 1642 
      struct rt2x00_field16 __constr_expr_759 = {.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
      
#line 1642 
      tmp_0 = __constr_expr_759;
    }
    
#line 1642 
    ;
    
#line 1642 
    tmp_1 = ((int)tmp.bit_mask & (int)eeprom) >> (int)tmp_0.bit_offset;
  }
  
#line 1642 
  value = (unsigned short)tmp_1;
  
#line 1643 
  rt2x00mmio_register_read(rt2x00dev,0U,& reg);
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 1645 
        bool __cond_1 = (_Bool)0;
        
#line 1645 
        if ((int)__cond_1 != 0) 
#line 1645 
                                __compiletime_assert_1645(); else ;
      }
      
#line 1645 
      struct rt2x00_field32 __constr_expr_760 = {.bit_offset = 0U, .bit_mask = 65535U};
      
#line 1645 
      tmp_2 = __constr_expr_760;
    }
    {
      {
        
#line 1645 
        bool __cond_2 = (_Bool)0;
        
#line 1645 
        if ((int)__cond_2 != 0) 
#line 1645 
                                __compiletime_assert_1645(); else ;
      }
      
#line 1645 
      struct rt2x00_field32 __constr_expr_761 = {.bit_offset = 0U, .bit_mask = 65535U};
      
#line 1645 
      tmp_3 = __constr_expr_761;
    }
    
#line 1645 
    ;
    
#line 1645 
    tmp_4 = (tmp_2.bit_mask & reg) >> tmp_3.bit_offset;
  }
  
#line 1644 
  ;
  
#line 1644 
  ;
  
#line 1644 
  rt2x00_set_chip(rt2x00dev,(unsigned short)9568,(unsigned short)((int)value),(unsigned short)((int)((unsigned short)tmp_4)));
  
#line 1647 
  tmp_5 = rt2x00_rf(rt2x00dev,(unsigned short)0);
  
#line 1647 
  if (tmp_5) 
#line 1647 
             tmp_6 = 0; else 
#line 1647 
                             tmp_6 = 1;
  
#line 1647 
  if (tmp_6) {
    int tmp_8;
    bool tmp_7;
    
#line 1648 
    tmp_7 = rt2x00_rf(rt2x00dev,(unsigned short)1);
    
#line 1648 
    if (tmp_7) 
#line 1648 
               tmp_8 = 0; else 
#line 1648 
                               tmp_8 = 1;
    
#line 1648 
    if (tmp_8) {
      int tmp_10;
      bool tmp_9;
      
#line 1649 
      tmp_9 = rt2x00_rf(rt2x00dev,(unsigned short)2);
      
#line 1649 
      if (tmp_9) 
#line 1649 
                 tmp_10 = 0; else 
#line 1649 
                                  tmp_10 = 1;
      
#line 1649 
      if (tmp_10) {
        int tmp_12;
        bool tmp_11;
        
#line 1650 
        tmp_11 = rt2x00_rf(rt2x00dev,(unsigned short)3);
        
#line 1650 
        if (tmp_11) 
#line 1650 
                    tmp_12 = 0; else 
#line 1650 
                                     tmp_12 = 1;
        
#line 1650 
        if (tmp_12) {
          int tmp_14;
          bool tmp_13;
          
#line 1651 
          tmp_13 = rt2x00_rf(rt2x00dev,(unsigned short)4);
          
#line 1651 
          if (tmp_13) 
#line 1651 
                      tmp_14 = 0; else 
#line 1651 
                                       tmp_14 = 1;
          
#line 1651 
          if (tmp_14) {
            int tmp_16;
            bool tmp_15;
            
#line 1652 
            tmp_15 = rt2x00_rf(rt2x00dev,(unsigned short)16);
            
#line 1652 
            if (tmp_15) 
#line 1652 
                        tmp_16 = 0; else 
#line 1652 
                                         tmp_16 = 1;
            
#line 1652 
            if (tmp_16) {
              
#line 1653 
              dev_err((struct device const *)(& ((rt2x00dev->hw)->wiphy)->dev),"%s: Error - ","rt2500pci_init_eeprom");
              
#line 1654 
              __retres = -19;
              
#line 1654 
              goto return_label;
            }
            else ;
          }
          else ;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  {
    struct rt2x00_field16 tmp_17;
    struct rt2x00_field16 tmp_18;
    {
      struct rt2x00_field16 __dummy_1;
      struct rt2x00_field16 __dummy2_1;
      
    }
    {
      {
        
#line 1661 
        bool __cond_3 = (_Bool)0;
        
#line 1661 
        if ((int)__cond_3 != 0) 
#line 1661 
                                __compiletime_assert_1661(); else ;
      }
      
#line 1661 
      struct rt2x00_field16 __constr_expr_762 = {.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
      
#line 1661 
      tmp_17 = __constr_expr_762;
    }
    {
      {
        
#line 1661 
        bool __cond_4 = (_Bool)0;
        
#line 1661 
        if ((int)__cond_4 != 0) 
#line 1661 
                                __compiletime_assert_1661(); else ;
      }
      
#line 1661 
      struct rt2x00_field16 __constr_expr_763 = {.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
      
#line 1661 
      tmp_18 = __constr_expr_763;
    }
    
#line 1661 
    ;
    
#line 1661 
    tmp_19 = ((int)tmp_17.bit_mask & (int)eeprom) >> (int)tmp_18.bit_offset;
  }
  
#line 1660 
  rt2x00dev->default_ant.tx = (enum antenna)tmp_19;
  {
    struct rt2x00_field16 tmp_20;
    struct rt2x00_field16 tmp_21;
    {
      struct rt2x00_field16 __dummy_2;
      struct rt2x00_field16 __dummy2_2;
      
    }
    {
      {
        
#line 1663 
        bool __cond_5 = (_Bool)0;
        
#line 1663 
        if ((int)__cond_5 != 0) 
#line 1663 
                                __compiletime_assert_1663(); else ;
      }
      
#line 1663 
      struct rt2x00_field16 __constr_expr_764 = {.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
      
#line 1663 
      tmp_20 = __constr_expr_764;
    }
    {
      {
        
#line 1663 
        bool __cond_6 = (_Bool)0;
        
#line 1663 
        if ((int)__cond_6 != 0) 
#line 1663 
                                __compiletime_assert_1663(); else ;
      }
      
#line 1663 
      struct rt2x00_field16 __constr_expr_765 = {.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
      
#line 1663 
      tmp_21 = __constr_expr_765;
    }
    
#line 1663 
    ;
    
#line 1663 
    tmp_22 = ((int)tmp_20.bit_mask & (int)eeprom) >> (int)tmp_21.bit_offset;
  }
  
#line 1662 
  rt2x00dev->default_ant.rx = (enum antenna)tmp_22;
  {
    struct rt2x00_field16 tmp_23;
    struct rt2x00_field16 tmp_24;
    {
      struct rt2x00_field16 __dummy_3;
      struct rt2x00_field16 __dummy2_3;
      
    }
    {
      {
        
#line 1669 
        bool __cond_7 = (_Bool)0;
        
#line 1669 
        if ((int)__cond_7 != 0) 
#line 1669 
                                __compiletime_assert_1669(); else ;
      }
      
#line 1669 
      struct rt2x00_field16 __constr_expr_766 = {.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
      
#line 1669 
      tmp_23 = __constr_expr_766;
    }
    {
      {
        
#line 1669 
        bool __cond_8 = (_Bool)0;
        
#line 1669 
        if ((int)__cond_8 != 0) 
#line 1669 
                                __compiletime_assert_1669(); else ;
      }
      
#line 1669 
      struct rt2x00_field16 __constr_expr_767 = {.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
      
#line 1669 
      tmp_24 = __constr_expr_767;
    }
    
#line 1669 
    ;
    
#line 1669 
    tmp_25 = ((int)tmp_23.bit_mask & (int)eeprom) >> (int)tmp_24.bit_offset;
  }
  
#line 1669 
  value = (unsigned short)tmp_25;
  
#line 1671 
  rt2500pci_init_led(rt2x00dev,& rt2x00dev->led_radio,(enum led_type)LED_TYPE_RADIO);
  
#line 1672 
  if ((unsigned int)value <= 1U || (unsigned int)value == 3U) 
#line 1675 
                                                              rt2500pci_init_led(rt2x00dev,& rt2x00dev->led_qual,(enum led_type)LED_TYPE_ACTIVITY); else ;
  {
    struct rt2x00_field16 tmp_26;
    struct rt2x00_field16 tmp_27;
    {
      struct rt2x00_field16 __dummy_4;
      struct rt2x00_field16 __dummy2_4;
      
    }
    {
      {
        
#line 1682 
        bool __cond_9 = (_Bool)0;
        
#line 1682 
        if ((int)__cond_9 != 0) 
#line 1682 
                                __compiletime_assert_1682(); else ;
      }
      
#line 1682 
      struct rt2x00_field16 __constr_expr_768 = {.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
      
#line 1682 
      tmp_26 = __constr_expr_768;
    }
    {
      {
        
#line 1682 
        bool __cond_10 = (_Bool)0;
        
#line 1682 
        if ((int)__cond_10 != 0) 
#line 1682 
                                 __compiletime_assert_1682(); else ;
      }
      
#line 1682 
      struct rt2x00_field16 __constr_expr_769 = {.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
      
#line 1682 
      tmp_27 = __constr_expr_769;
    }
    
#line 1682 
    ;
    
#line 1682 
    tmp_28 = ((int)tmp_26.bit_mask & (int)eeprom) >> (int)tmp_27.bit_offset;
  }
  
#line 1682 
  if (tmp_28 != 0) {
    
#line 1683 
    __set_bit(12L,(unsigned long volatile *)(& rt2x00dev->cap_flags));
    
#line 1687 
    __set_bit(11L,(unsigned long volatile *)(& rt2x00dev->cap_flags));
  }
  else ;
  
#line 1693 
  rt2x00_eeprom_read(rt2x00dev,17U,& eeprom);
  {
    struct rt2x00_field16 tmp_29;
    struct rt2x00_field16 tmp_30;
    {
      struct rt2x00_field16 __dummy_5;
      struct rt2x00_field16 __dummy2_5;
      
    }
    {
      {
        
#line 1694 
        bool __cond_11 = (_Bool)0;
        
#line 1694 
        if ((int)__cond_11 != 0) 
#line 1694 
                                 __compiletime_assert_1694(); else ;
      }
      
#line 1694 
      struct rt2x00_field16 __constr_expr_770 = {.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      
#line 1694 
      tmp_29 = __constr_expr_770;
    }
    {
      {
        
#line 1694 
        bool __cond_12 = (_Bool)0;
        
#line 1694 
        if ((int)__cond_12 != 0) 
#line 1694 
                                 __compiletime_assert_1694(); else ;
      }
      
#line 1694 
      struct rt2x00_field16 __constr_expr_771 = {.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      
#line 1694 
      tmp_30 = __constr_expr_771;
    }
    
#line 1694 
    ;
    
#line 1694 
    tmp_31 = ((int)tmp_29.bit_mask & (int)eeprom) >> (int)tmp_30.bit_offset;
  }
  
#line 1694 
  if (tmp_31 == 0) 
#line 1695 
                   __set_bit(18L,(unsigned long volatile *)(& rt2x00dev->cap_flags)); else ;
  
#line 1700 
  rt2x00_eeprom_read(rt2x00dev,62U,& eeprom);
  {
    struct rt2x00_field16 tmp_32;
    struct rt2x00_field16 tmp_33;
    {
      struct rt2x00_field16 __dummy_6;
      struct rt2x00_field16 __dummy2_6;
      
    }
    {
      {
        
#line 1702 
        bool __cond_13 = (_Bool)0;
        
#line 1702 
        if ((int)__cond_13 != 0) 
#line 1702 
                                 __compiletime_assert_1702(); else ;
      }
      
#line 1702 
      struct rt2x00_field16 __constr_expr_772 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      
#line 1702 
      tmp_32 = __constr_expr_772;
    }
    {
      {
        
#line 1702 
        bool __cond_14 = (_Bool)0;
        
#line 1702 
        if ((int)__cond_14 != 0) 
#line 1702 
                                 __compiletime_assert_1702(); else ;
      }
      
#line 1702 
      struct rt2x00_field16 __constr_expr_773 = {.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      
#line 1702 
      tmp_33 = __constr_expr_773;
    }
    
#line 1702 
    ;
    
#line 1702 
    tmp_34 = ((int)tmp_32.bit_mask & (int)eeprom) >> (int)tmp_33.bit_offset;
  }
  
#line 1701 
  rt2x00dev->rssi_offset = (unsigned char)tmp_34;
  
#line 1704 
  __retres = 0;
  return_label: 
#line 1704 
                return __retres;
}


#line 1711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct rf_channel const rf_vals_bg_2522[14U] = {{.channel = 1, .rf1 = 8272U, .rf2 = 794586U, .rf3 = 257U, .rf4 = 0U}, {.channel = 2, .rf1 = 8272U, .rf2 = 794606U, .rf3 = 257U, .rf4 = 0U}, {.channel = 3, .rf1 = 8272U, .rf2 = 794626U, .rf3 = 257U, .rf4 = 0U}, {.channel = 4, .rf1 = 8272U, .rf2 = 794646U, .rf3 = 257U, .rf4 = 0U}, {.channel = 5, .rf1 = 8272U, .rf2 = 794666U, .rf3 = 257U, .rf4 = 0U}, {.channel = 6, .rf1 = 8272U, .rf2 = 794686U, .rf3 = 257U, .rf4 = 0U}, {.channel = 7, .rf1 = 8272U, .rf2 = 794706U, .rf3 = 257U, .rf4 = 0U}, {.channel = 8, .rf1 = 8272U, .rf2 = 794726U, .rf3 = 257U, .rf4 = 0U}, {.channel = 9, .rf1 = 8272U, .rf2 = 794746U, .rf3 = 257U, .rf4 = 0U}, {.channel = 10, .rf1 = 8272U, .rf2 = 794766U, .rf3 = 257U, .rf4 = 0U}, {.channel = 11, .rf1 = 8272U, .rf2 = 794786U, .rf3 = 257U, .rf4 = 0U}, {.channel = 12, .rf1 = 8272U, .rf2 = 794806U, .rf3 = 257U, .rf4 = 0U}, {.channel = 13, .rf1 = 8272U, .rf2 = 794826U, .rf3 = 257U, .rf4 = 0U}, {.channel = 14, .rf1 = 8272U, .rf2 = 794874U, .rf3 = 257U, .rf4 = 0U}};

#line 1732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct rf_channel const rf_vals_bg_2523[14U] = {{.channel = 1, .rf1 = 139280U, .rf2 = 3230U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 2, .rf1 = 139280U, .rf2 = 3234U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 3, .rf1 = 139280U, .rf2 = 3238U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 4, .rf1 = 139280U, .rf2 = 3242U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 5, .rf1 = 139280U, .rf2 = 3246U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 6, .rf1 = 139280U, .rf2 = 3250U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 7, .rf1 = 139280U, .rf2 = 3254U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 8, .rf1 = 139280U, .rf2 = 3258U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 9, .rf1 = 139280U, .rf2 = 3262U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 10, .rf1 = 139280U, .rf2 = 3330U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 11, .rf1 = 139280U, .rf2 = 3334U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 12, .rf1 = 139280U, .rf2 = 3338U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 13, .rf1 = 139280U, .rf2 = 3342U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 14, .rf1 = 139280U, .rf2 = 3354U, .rf3 = 917777U, .rf4 = 2563U}};

#line 1753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct rf_channel const rf_vals_bg_2524[14U] = {{.channel = 1, .rf1 = 204832U, .rf2 = 3230U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 2, .rf1 = 204832U, .rf2 = 3234U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 3, .rf1 = 204832U, .rf2 = 3238U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 4, .rf1 = 204832U, .rf2 = 3242U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 5, .rf1 = 204832U, .rf2 = 3246U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 6, .rf1 = 204832U, .rf2 = 3250U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 7, .rf1 = 204832U, .rf2 = 3254U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 8, .rf1 = 204832U, .rf2 = 3258U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 9, .rf1 = 204832U, .rf2 = 3262U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 10, .rf1 = 204832U, .rf2 = 3330U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 11, .rf1 = 204832U, .rf2 = 3334U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 12, .rf1 = 204832U, .rf2 = 3338U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 13, .rf1 = 204832U, .rf2 = 3342U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 14, .rf1 = 204832U, .rf2 = 3354U, .rf3 = 257U, .rf4 = 2563U}};

#line 1774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct rf_channel const rf_vals_bg_2525[14U] = {{.channel = 1, .rf1 = 139296U, .rf2 = 527518U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 2, .rf1 = 139296U, .rf2 = 527522U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 3, .rf1 = 139296U, .rf2 = 527526U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 4, .rf1 = 139296U, .rf2 = 527530U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 5, .rf1 = 139296U, .rf2 = 527534U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 6, .rf1 = 139296U, .rf2 = 527538U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 7, .rf1 = 139296U, .rf2 = 527542U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 8, .rf1 = 139296U, .rf2 = 527546U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 9, .rf1 = 139296U, .rf2 = 527550U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 10, .rf1 = 139296U, .rf2 = 527618U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 11, .rf1 = 139296U, .rf2 = 527622U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 12, .rf1 = 139296U, .rf2 = 527626U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 13, .rf1 = 139296U, .rf2 = 527630U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 14, .rf1 = 139296U, .rf2 = 527642U, .rf3 = 393489U, .rf4 = 2563U}};

#line 1795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct rf_channel const rf_vals_bg_2525e[14U] = {{.channel = 1, .rf1 = 139296U, .rf2 = 528694U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 2, .rf1 = 139296U, .rf2 = 528698U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 3, .rf1 = 139296U, .rf2 = 528702U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 4, .rf1 = 139296U, .rf2 = 528770U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 5, .rf1 = 139296U, .rf2 = 528774U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 6, .rf1 = 139296U, .rf2 = 528778U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 7, .rf1 = 139296U, .rf2 = 528782U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 8, .rf1 = 139296U, .rf2 = 528786U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 9, .rf1 = 139296U, .rf2 = 528790U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 10, .rf1 = 139296U, .rf2 = 528794U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 11, .rf1 = 139296U, .rf2 = 528798U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 12, .rf1 = 139296U, .rf2 = 528802U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 13, .rf1 = 139296U, .rf2 = 528806U, .rf3 = 393489U, .rf4 = 2571U}, {.channel = 14, .rf1 = 139296U, .rf2 = 528814U, .rf3 = 393489U, .rf4 = 2587U}};

#line 1816  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct rf_channel const rf_vals_5222[37U] = {{.channel = 1, .rf1 = 139296U, .rf2 = 4406U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 2, .rf1 = 139296U, .rf2 = 4410U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 3, .rf1 = 139296U, .rf2 = 4414U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 4, .rf1 = 139296U, .rf2 = 4482U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 5, .rf1 = 139296U, .rf2 = 4486U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 6, .rf1 = 139296U, .rf2 = 4490U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 7, .rf1 = 139296U, .rf2 = 4494U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 8, .rf1 = 139296U, .rf2 = 4498U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 9, .rf1 = 139296U, .rf2 = 4502U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 10, .rf1 = 139296U, .rf2 = 4506U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 11, .rf1 = 139296U, .rf2 = 4510U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 12, .rf1 = 139296U, .rf2 = 4514U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 13, .rf1 = 139296U, .rf2 = 4518U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 14, .rf1 = 139296U, .rf2 = 4526U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 36, .rf1 = 139280U, .rf2 = 100502U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 40, .rf1 = 139280U, .rf2 = 100506U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 44, .rf1 = 139280U, .rf2 = 100510U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 48, .rf1 = 139280U, .rf2 = 100514U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 52, .rf1 = 139280U, .rf2 = 100518U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 66, .rf1 = 139280U, .rf2 = 100522U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 60, .rf1 = 139280U, .rf2 = 100526U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 64, .rf1 = 139280U, .rf2 = 100530U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 100, .rf1 = 139280U, .rf2 = 34818U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 104, .rf1 = 139280U, .rf2 = 34822U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 108, .rf1 = 139280U, .rf2 = 34826U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 112, .rf1 = 139280U, .rf2 = 34830U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 116, .rf1 = 139280U, .rf2 = 34834U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 120, .rf1 = 139280U, .rf2 = 34838U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 124, .rf1 = 139280U, .rf2 = 34842U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 128, .rf1 = 139280U, .rf2 = 34846U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 132, .rf1 = 139280U, .rf2 = 34850U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 136, .rf1 = 139280U, .rf2 = 34854U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 140, .rf1 = 139280U, .rf2 = 34858U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 149, .rf1 = 139296U, .rf2 = 37030U, .rf3 = 257U, .rf4 = 2567U}, {.channel = 153, .rf1 = 139296U, .rf2 = 37038U, .rf3 = 257U, .rf4 = 2567U}, {.channel = 157, .rf1 = 139296U, .rf2 = 37046U, .rf3 = 257U, .rf4 = 2567U}, {.channel = 161, .rf1 = 139296U, .rf2 = 37054U, .rf3 = 257U, .rf4 = 2567U}};

#line 1862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_probe_hw_mode(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  struct channel_info *info;
  char *tx_power;
  unsigned int i;
  void *tmp;
  bool tmp_5;
  
#line 1864 
  struct hw_mode_spec *spec = & rt2x00dev->spec;
  
#line 1872 
  _ieee80211_hw_set(rt2x00dev->hw,(enum ieee80211_hw_flags)IEEE80211_HW_PS_NULLFUNC_STACK);
  
#line 1873 
  _ieee80211_hw_set(rt2x00dev->hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_PS);
  
#line 1874 
  _ieee80211_hw_set(rt2x00dev->hw,(enum ieee80211_hw_flags)IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING);
  
#line 1875 
  _ieee80211_hw_set(rt2x00dev->hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_DBM);
  
#line 1877 
  SET_IEEE80211_DEV(rt2x00dev->hw,rt2x00dev->dev);
  
#line 1879 
  tmp = rt2x00_eeprom_addr(rt2x00dev,2U);
  
#line 1878 
  ;
  
#line 1878 
  SET_IEEE80211_PERM_ADDR(rt2x00dev->hw,(u8 *)tmp);
  
#line 1885 
  ((rt2x00dev->hw)->wiphy)->flags &= 4294967279U;
  
#line 1890 
  spec->supported_bands = 1U;
  
#line 1891 
  spec->supported_rates = 3U;
  
#line 1893 
  tmp_5 = rt2x00_rf(rt2x00dev,(unsigned short)0);
  
#line 1893 
  if ((int)tmp_5 != 0) {
    
#line 1894 
    spec->num_channels = 14U;
    
#line 1895 
    spec->channels = (struct rf_channel const *)(& rf_vals_bg_2522);
  }
  else {
    bool tmp_4;
    
#line 1896 
    tmp_4 = rt2x00_rf(rt2x00dev,(unsigned short)1);
    
#line 1896 
    if ((int)tmp_4 != 0) {
      
#line 1897 
      spec->num_channels = 14U;
      
#line 1898 
      spec->channels = (struct rf_channel const *)(& rf_vals_bg_2523);
    }
    else {
      bool tmp_3;
      
#line 1899 
      tmp_3 = rt2x00_rf(rt2x00dev,(unsigned short)2);
      
#line 1899 
      if ((int)tmp_3 != 0) {
        
#line 1900 
        spec->num_channels = 14U;
        
#line 1901 
        spec->channels = (struct rf_channel const *)(& rf_vals_bg_2524);
      }
      else {
        bool tmp_2;
        
#line 1902 
        tmp_2 = rt2x00_rf(rt2x00dev,(unsigned short)3);
        
#line 1902 
        if ((int)tmp_2 != 0) {
          
#line 1903 
          spec->num_channels = 14U;
          
#line 1904 
          spec->channels = (struct rf_channel const *)(& rf_vals_bg_2525);
        }
        else {
          bool tmp_1;
          
#line 1905 
          tmp_1 = rt2x00_rf(rt2x00dev,(unsigned short)4);
          
#line 1905 
          if ((int)tmp_1 != 0) {
            
#line 1906 
            spec->num_channels = 14U;
            
#line 1907 
            spec->channels = (struct rf_channel const *)(& rf_vals_bg_2525e);
          }
          else {
            bool tmp_0;
            
#line 1908 
            tmp_0 = rt2x00_rf(rt2x00dev,(unsigned short)16);
            
#line 1908 
            if ((int)tmp_0 != 0) {
              
#line 1909 
              spec->supported_bands |= 2U;
              
#line 1910 
              spec->num_channels = 37U;
              
#line 1911 
              spec->channels = (struct rf_channel const *)(& rf_vals_5222);
            }
            else ;
          }
        }
      }
    }
  }
  
#line 1917 
  info = (struct channel_info *)kcalloc((unsigned long)spec->num_channels,12UL,208U);
  
#line 1918 
  if (info == (struct channel_info *)0) {
    
#line 1919 
    __retres = -12;
    
#line 1919 
    goto return_label;
  }
  else ;
  
#line 1921 
  spec->channels_info = (struct channel_info const *)info;
  
#line 1923 
  tx_power = (char *)rt2x00_eeprom_addr(rt2x00dev,35U);
  
#line 1924 
  i = 0U;
  
#line 1924 
  goto ldv_60980;
  ldv_60979: 
#line 1925 
  ;
  
#line 1925 
  (info + i)->max_power = (short)31;
  
#line 1926 
  if ((unsigned int)((unsigned char)*(tx_power + i)) <= 31U) 
#line 1926 
                                                             (info + i)->default_power1 = (short)*(tx_power + i); else 
                                                                    
#line 1926 
                                                                    (info + i)->default_power1 = (short)24;
  
#line 1924 
  i += 1U;
  ldv_60980: 
#line 1925 
  ;
  
#line 1924 
  if (i <= 13U) 
#line 1926 
                goto ldv_60979; else 
#line 1929 
                                     goto ldv_60981;
  ldv_60981: 
#line 1930 
  ;
  
#line 1929 
  if (spec->num_channels > 14U) {
    
#line 1930 
    i = 14U;
    
#line 1930 
    goto ldv_60983;
    ldv_60982: 
#line 1931 
    ;
    
#line 1931 
    (info + i)->max_power = (short)31;
    
#line 1932 
    (info + i)->default_power1 = (short)24;
    
#line 1930 
    i += 1U;
    ldv_60983: 
#line 1931 
    ;
    
#line 1930 
    if (spec->num_channels > i) 
#line 1932 
                                goto ldv_60982; else 
#line 1935 
                                                     goto ldv_60984;
    ldv_60984: 
#line 1936 
    ;
  }
  else ;
  
#line 1936 
  __retres = 0;
  return_label: 
#line 1936 
                return __retres;
}


#line 1960 
void __compiletime_assert_1960(void);


#line 1939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_probe_hw(struct rt2x00_dev *rt2x00dev)
{
  int __retres;
  int retval;
  u32 reg;
  
#line 1947 
  retval = rt2500pci_validate_eeprom(rt2x00dev);
  
#line 1948 
  if (retval != 0) {
    
#line 1949 
    __retres = retval;
    
#line 1949 
    goto return_label;
  }
  else ;
  
#line 1951 
  retval = rt2500pci_init_eeprom(rt2x00dev);
  
#line 1952 
  if (retval != 0) {
    
#line 1953 
    __retres = retval;
    
#line 1953 
    goto return_label;
  }
  else ;
  
#line 1959 
  rt2x00mmio_register_read(rt2x00dev,288U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    struct rt2x00_field32 tmp_1;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1960 
        bool __cond = (_Bool)0;
        
#line 1960 
        if ((int)__cond != 0) 
#line 1960 
                              __compiletime_assert_1960(); else ;
      }
      
#line 1960 
      struct rt2x00_field32 __constr_expr_774 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 1960 
      tmp = __constr_expr_774;
    }
    
#line 1960 
    reg = ~ tmp.bit_mask & reg;
    {
      {
        
#line 1960 
        bool __cond_0 = (_Bool)0;
        
#line 1960 
        if ((int)__cond_0 != 0) 
#line 1960 
                                __compiletime_assert_1960(); else ;
      }
      
#line 1960 
      struct rt2x00_field32 __constr_expr_775 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 1960 
      tmp_0 = __constr_expr_775;
    }
    {
      {
        
#line 1960 
        bool __cond_1 = (_Bool)0;
        
#line 1960 
        if ((int)__cond_1 != 0) 
#line 1960 
                                __compiletime_assert_1960(); else ;
      }
      
#line 1960 
      struct rt2x00_field32 __constr_expr_776 = {.bit_offset = 8U, .bit_mask = 256U};
      
#line 1960 
      tmp_1 = __constr_expr_776;
    }
    
#line 1960 
    reg = ((unsigned int)(1 << tmp_0.bit_offset) & tmp_1.bit_mask) | reg;
  }
  
#line 1961 
  rt2x00mmio_register_write(rt2x00dev,288U,reg);
  
#line 1966 
  retval = rt2500pci_probe_hw_mode(rt2x00dev);
  
#line 1967 
  if (retval != 0) {
    
#line 1968 
    __retres = retval;
    
#line 1968 
    goto return_label;
  }
  else ;
  
#line 1973 
  __set_bit(2L,(unsigned long volatile *)(& rt2x00dev->cap_flags));
  
#line 1974 
  __set_bit(3L,(unsigned long volatile *)(& rt2x00dev->cap_flags));
  
#line 1975 
  __set_bit(8L,(unsigned long volatile *)(& rt2x00dev->cap_flags));
  
#line 1980 
  rt2x00dev->rssi_offset = (unsigned char)121U;
  
#line 1982 
  __retres = 0;
  return_label: 
#line 1982 
                return __retres;
}


#line 1996 
void __compiletime_assert_1996(void);


#line 1998 
void __compiletime_assert_1998(void);


#line 1988  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static u64 rt2500pci_get_tsf(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  u64 tsf;
  u32 reg;
  unsigned int tmp_1;
  unsigned int tmp_4;
  
#line 1991 
  struct rt2x00_dev *rt2x00dev = (struct rt2x00_dev *)hw->priv;
  
#line 1995 
  rt2x00mmio_register_read(rt2x00dev,68U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 1996 
        bool __cond = (_Bool)0;
        
#line 1996 
        if ((int)__cond != 0) 
#line 1996 
                              __compiletime_assert_1996(); else ;
      }
      
#line 1996 
      struct rt2x00_field32 __constr_expr_777 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 1996 
      tmp = __constr_expr_777;
    }
    {
      {
        
#line 1996 
        bool __cond_0 = (_Bool)0;
        
#line 1996 
        if ((int)__cond_0 != 0) 
#line 1996 
                                __compiletime_assert_1996(); else ;
      }
      
#line 1996 
      struct rt2x00_field32 __constr_expr_778 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 1996 
      tmp_0 = __constr_expr_778;
    }
    
#line 1996 
    ;
    
#line 1996 
    tmp_1 = (tmp.bit_mask & reg) >> tmp_0.bit_offset;
  }
  
#line 1996 
  tsf = (unsigned long long)tmp_1 << 32;
  
#line 1997 
  rt2x00mmio_register_read(rt2x00dev,64U,& reg);
  {
    struct rt2x00_field32 tmp_2;
    struct rt2x00_field32 tmp_3;
    {
      struct rt2x00_field32 __dummy_0;
      struct rt2x00_field32 __dummy2_0;
      
    }
    {
      {
        
#line 1998 
        bool __cond_1 = (_Bool)0;
        
#line 1998 
        if ((int)__cond_1 != 0) 
#line 1998 
                                __compiletime_assert_1998(); else ;
      }
      
#line 1998 
      struct rt2x00_field32 __constr_expr_779 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 1998 
      tmp_2 = __constr_expr_779;
    }
    {
      {
        
#line 1998 
        bool __cond_2 = (_Bool)0;
        
#line 1998 
        if ((int)__cond_2 != 0) 
#line 1998 
                                __compiletime_assert_1998(); else ;
      }
      
#line 1998 
      struct rt2x00_field32 __constr_expr_780 = {.bit_offset = 0U, .bit_mask = 4294967295U};
      
#line 1998 
      tmp_3 = __constr_expr_780;
    }
    
#line 1998 
    ;
    
#line 1998 
    tmp_4 = (tmp_2.bit_mask & reg) >> tmp_3.bit_offset;
  }
  
#line 1998 
  tsf = (unsigned long long)tmp_4 | tsf;
  
#line 2000 
  return tsf;
}


#line 2009 
void __compiletime_assert_2009(void);


#line 2003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_tx_last_beacon(struct ieee80211_hw *hw)
{
  int __retres;
  u32 reg;
  unsigned int tmp_1;
  
#line 2005 
  struct rt2x00_dev *rt2x00dev = (struct rt2x00_dev *)hw->priv;
  
#line 2008 
  rt2x00mmio_register_read(rt2x00dev,60U,& reg);
  {
    struct rt2x00_field32 tmp;
    struct rt2x00_field32 tmp_0;
    {
      struct rt2x00_field32 __dummy;
      struct rt2x00_field32 __dummy2;
      
    }
    {
      {
        
#line 2009 
        bool __cond = (_Bool)0;
        
#line 2009 
        if ((int)__cond != 0) 
#line 2009 
                              __compiletime_assert_2009(); else ;
      }
      
#line 2009 
      struct rt2x00_field32 __constr_expr_781 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 2009 
      tmp = __constr_expr_781;
    }
    {
      {
        
#line 2009 
        bool __cond_0 = (_Bool)0;
        
#line 2009 
        if ((int)__cond_0 != 0) 
#line 2009 
                                __compiletime_assert_2009(); else ;
      }
      
#line 2009 
      struct rt2x00_field32 __constr_expr_782 = {.bit_offset = 2U, .bit_mask = 4U};
      
#line 2009 
      tmp_0 = __constr_expr_782;
    }
    
#line 2009 
    ;
    
#line 2009 
    tmp_1 = (tmp.bit_mask & reg) >> tmp_0.bit_offset;
  }
  
#line 2009 
  __retres = (int)tmp_1;
  
#line 2009 
  return __retres;
}


#line 2012  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct ieee80211_ops const rt2500pci_mac80211_ops = {.tx = & rt2x00mac_tx, .start = & rt2x00mac_start, .stop = & rt2x00mac_stop, .suspend = (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0, .resume = (int (*)(struct ieee80211_hw *))0, .set_wakeup = (void (*)(struct ieee80211_hw *, bool ))0, .add_interface = & rt2x00mac_add_interface, .change_interface = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ))0, .remove_interface = & rt2x00mac_remove_interface, .config = & rt2x00mac_config, .bss_info_changed = & rt2x00mac_bss_info_changed, .start_ap = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .stop_ap = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .prepare_multicast = (u64 (*)(struct ieee80211_hw *, struct netdev_hw_addr_list *))0, .configure_filter = & rt2x00mac_configure_filter, .set_tim = (int (*)(struct ieee80211_hw *, struct ieee80211_sta *, bool ))0, .set_key = (int (*)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *))0, .update_tkip_key = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *))0, .set_rekey_data = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *))0, .set_default_unicast_key = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, int ))0, .hw_scan = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *))0, .cancel_hw_scan = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .sched_scan_start = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *))0, .sched_scan_stop = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .sw_scan_start = & rt2x00mac_sw_scan_start, .sw_scan_complete = & rt2x00mac_sw_scan_complete, .get_stats = & rt2x00mac_get_stats, .get_key_seq = (void (*)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *))0, .set_frag_threshold = (int (*)(struct ieee80211_hw *, u32 ))0, .set_rts_threshold = (int (*)(struct ieee80211_hw *, u32 ))0, .sta_add = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_remove = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_add_debugfs = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *))0, .sta_remove_debugfs = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *))0, .sta_notify = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *))0, .sta_state = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ))0, .sta_pre_rcu_remove = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_rc_update = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ))0, .sta_rate_tbl_update = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_statistics = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *))0, .conf_tx = & rt2x00mac_conf_tx, .get_tsf = & rt2500pci_get_tsf, .set_tsf = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ))0, .reset_tsf = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .tx_last_beacon = & rt2500pci_tx_last_beacon, .ampdu_action = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, enum ieee80211_ampdu_mlme_action , struct ieee80211_sta *, u16 , u16 *, u8 ))0, .get_survey = (int (*)(struct ieee80211_hw *, int , struct survey_info *))0, .rfkill_poll = & rt2x00mac_rfkill_poll, .set_coverage_class = (void (*)(struct ieee80211_hw *, s16 ))0, .testmode_cmd = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ))0, .testmode_dump = (int (*)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ))0, .flush = & rt2x00mac_flush, .channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *))0, .set_antenna = & rt2x00mac_set_antenna, .get_antenna = & rt2x00mac_get_antenna, .remain_on_channel = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ))0, .cancel_remain_on_channel = (int (*)(struct ieee80211_hw *))0, .set_ringparam = (int (*)(struct ieee80211_hw *, u32 , u32 ))0, .get_ringparam = & rt2x00mac_get_ringparam, .tx_frames_pending = & rt2x00mac_tx_frames_pending, .set_bitrate_mask = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask const *))0, .event_callback = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event const *))0, .allow_buffered_frames = (void (*)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ))0, .release_buffered_frames = (void (*)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ))0, .get_et_sset_count = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, int ))0, .get_et_stats = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *))0, .get_et_strings = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *))0, .mgd_prepare_tx = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .mgd_protect_tdls_discover = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .add_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *))0, .remove_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *))0, .change_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ))0, .assign_vif_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *))0, .unassign_vif_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *))0, .switch_vif_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ))0, .reconfig_complete = (void (*)(struct ieee80211_hw *, enum ieee80211_reconfig_type ))0, .ipv6_addr_change = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *))0, .channel_switch_beacon = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *))0, .pre_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *))0, .post_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .join_ibss = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .leave_ibss = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .get_expected_throughput = (u32 (*)(struct ieee80211_sta *))0, .get_txpower = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, int *))0, .tdls_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ))0, .tdls_cancel_channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .tdls_recv_channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *))0, .wake_tx_queue = (void (*)(struct ieee80211_hw *, struct ieee80211_txq *))0};

#line 2035  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct rt2x00lib_ops const rt2500pci_rt2x00_ops = {.irq_handler = & rt2500pci_interrupt, .txstatus_tasklet = & rt2500pci_txstatus_tasklet, .pretbtt_tasklet = (void (*)(unsigned long ))0, .tbtt_tasklet = & rt2500pci_tbtt_tasklet, .rxdone_tasklet = & rt2500pci_rxdone_tasklet, .autowake_tasklet = (void (*)(unsigned long ))0, .probe_hw = & rt2500pci_probe_hw, .get_firmware_name = (char *(*)(struct rt2x00_dev *))0, .check_firmware = (int (*)(struct rt2x00_dev *, u8 const *, size_t const ))0, .load_firmware = (int (*)(struct rt2x00_dev *, u8 const *, size_t const ))0, .initialize = & rt2x00mmio_initialize, .uninitialize = & rt2x00mmio_uninitialize, .get_entry_state = & rt2500pci_get_entry_state, .clear_entry = & rt2500pci_clear_entry, .set_device_state = & rt2500pci_set_device_state, .rfkill_poll = & rt2500pci_rfkill_poll, .link_stats = & rt2500pci_link_stats, .reset_tuner = & rt2500pci_reset_tuner, .link_tuner = & rt2500pci_link_tuner, .gain_calibration = (void (*)(struct rt2x00_dev *))0, .vco_calibration = (void (*)(struct rt2x00_dev *))0, .watchdog = (void (*)(struct rt2x00_dev *))0, .start_queue = & rt2500pci_start_queue, .kick_queue = & rt2500pci_kick_queue, .stop_queue = & rt2500pci_stop_queue, .flush_queue = & rt2x00mmio_flush_queue, .tx_dma_done = (void (*)(struct queue_entry *))0, .write_tx_desc = & rt2500pci_write_tx_desc, .write_tx_data = (void (*)(struct queue_entry *, struct txentry_desc *))0, .write_beacon = & rt2500pci_write_beacon, .clear_beacon = (void (*)(struct queue_entry *))0, .get_tx_data_len = (int (*)(struct queue_entry *))0, .fill_rxdone = & rt2500pci_fill_rxdone, .config_shared_key = (int (*)(struct rt2x00_dev *, struct rt2x00lib_crypto *, struct ieee80211_key_conf *))0, .config_pairwise_key = (int (*)(struct rt2x00_dev *, struct rt2x00lib_crypto *, struct ieee80211_key_conf *))0, .config_filter = & rt2500pci_config_filter, .config_intf = & rt2500pci_config_intf, .config_erp = & rt2500pci_config_erp, .config_ant = & rt2500pci_config_ant, .config = & rt2500pci_config, .sta_add = (int (*)(struct rt2x00_dev *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_remove = (int (*)(struct rt2x00_dev *, int ))0};

#line 2064  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_queue_init(struct data_queue *queue)
{
  
#line 2066 
  switch ((unsigned int)queue->qid) {
    case (unsigned int)14: 
#line 2067 
    ;
    
#line 2068 
    queue->limit = (unsigned short)32U;
    
#line 2069 
    queue->data_size = (unsigned short)2432U;
    
#line 2070 
    queue->desc_size = (unsigned char)44U;
    
#line 2071 
    queue->priv_size = (unsigned short)16U;
    
#line 2072 
    goto ldv_61102;
    case (unsigned int)0: 
#line 2074 
    ;
    case (unsigned int)1: 
#line 2075 
    ;
    case (unsigned int)2: 
#line 2076 
    ;
    case (unsigned int)3: 
#line 2077 
    ;
    
#line 2078 
    queue->limit = (unsigned short)32U;
    
#line 2079 
    queue->data_size = (unsigned short)2432U;
    
#line 2080 
    queue->desc_size = (unsigned char)44U;
    
#line 2081 
    queue->priv_size = (unsigned short)16U;
    
#line 2082 
    goto ldv_61102;
    case (unsigned int)16: 
#line 2084 
    ;
    
#line 2085 
    queue->limit = (unsigned short)1U;
    
#line 2086 
    queue->data_size = (unsigned short)256U;
    
#line 2087 
    queue->desc_size = (unsigned char)44U;
    
#line 2088 
    queue->priv_size = (unsigned short)16U;
    
#line 2089 
    goto ldv_61102;
    case (unsigned int)17: 
#line 2091 
    ;
    
#line 2092 
    queue->limit = (unsigned short)8U;
    
#line 2093 
    queue->data_size = (unsigned short)2432U;
    
#line 2094 
    queue->desc_size = (unsigned char)44U;
    
#line 2095 
    queue->priv_size = (unsigned short)16U;
    
#line 2096 
    goto ldv_61102;
    default: 
#line 2098 
    ;
    
#line 2099 
    ldv_inline_asm();
    
#line 2099 
    ;
  }
  ldv_61102: 
#line 2102 
  ;
  
#line 2103 
  return;
}


#line 2104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct rt2x00_ops const rt2500pci_ops = {.name = "rt2500pci", .drv_data_size = 0U, .max_ap_intf = 1U, .eeprom_size = 512U, .rf_size = 16U, .tx_queues = 2U, .queue_init = & rt2500pci_queue_init, .lib = & rt2500pci_rt2x00_ops, .drv = (void const *)0, .hw = & rt2500pci_mac80211_ops, .debugfs = & rt2500pci_rt2x00debug};

#line 2121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct pci_device_id const rt2500pci_device_table[2U] = {{.vendor = 6164U, .device = 513U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 2130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
struct pci_device_id const __mod_pci__rt2500pci_device_table_device_table[2U];

#line 2133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_probe(struct pci_dev *pci_dev, struct pci_device_id const *id)
{
  int tmp;
  
#line 2136 
  tmp = rt2x00pci_probe(pci_dev,& rt2500pci_ops);
  
#line 2136 
  return tmp;
}


#line 2139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static struct pci_driver rt2500pci_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "rt2500pci", .id_table = (struct pci_device_id const *)(& rt2500pci_device_table), .probe = & rt2500pci_probe, .remove = & rt2x00pci_remove, .suspend = & rt2x00pci_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & rt2x00pci_resume, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 2148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static int rt2500pci_driver_init(void)
{
  int tmp;
  
#line 2148 
  tmp = ldv___pci_register_driver_90(& rt2500pci_driver,& __this_module,"rt2500pci");
  
#line 2148 
  return tmp;
}


#line 2148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rt2x00/rt2500pci.c"
static void rt2500pci_driver_exit(void)
{
  
#line 2148 
  ldv_pci_unregister_driver_91(& rt2500pci_driver);
  
#line 2149 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
struct pci_driver *ldv_emg_alias_rt2500pci_driver_2 = & rt2500pci_driver;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
int (*ldv_emg_alias_rt2x00pci_suspend_3)(struct pci_dev *, struct pm_message ) = & rt2x00pci_suspend;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
int (*ldv_emg_alias_rt2x00pci_resume_5)(struct pci_dev *) = & rt2x00pci_resume;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
void (*ldv_emg_alias_rt2x00pci_remove_4)(struct pci_dev *) = & rt2x00pci_remove;

#line 62 
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0);


#line 63 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 64 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 65 
void ldv_emg_tasklet_hi_schedule(struct tasklet_struct *arg0);


#line 69  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
int ldv_emg_wrapper_rt2500pci_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 70 
  tmp = rt2500pci_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 70 
  return tmp;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
int ldv_emg_rt2500pci_driver_init(void)
{
  int tmp;
  
#line 75 
  tmp = rt2500pci_driver_init();
  
#line 75 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
void ldv_emg_rt2500pci_driver_exit(void)
{
  
#line 79 
  rt2500pci_driver_exit();
  
#line 80 
  return;
}


#line 429  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 432 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 432 
  return tmp;
}


#line 753  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_mutex_lock_72(struct mutex *ldv_func_arg1)
{
  
#line 757 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"csr_mutex_of_rt2x00_dev");
  
#line 758 
  return;
}


#line 761  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1)
{
  
#line 765 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"csr_mutex_of_rt2x00_dev");
  
#line 766 
  return;
}


#line 769  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1)
{
  
#line 773 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"csr_mutex_of_rt2x00_dev");
  
#line 774 
  return;
}


#line 777  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1)
{
  
#line 781 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"csr_mutex_of_rt2x00_dev");
  
#line 782 
  return;
}


#line 785  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1)
{
  
#line 789 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"csr_mutex_of_rt2x00_dev");
  
#line 790 
  return;
}


#line 793  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1)
{
  
#line 797 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"csr_mutex_of_rt2x00_dev");
  
#line 798 
  return;
}


#line 801  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1)
{
  
#line 805 
  ldv_spin_model_lock((char *)"irqmask_lock_of_rt2x00_dev");
  
#line 807 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 808 
  return;
}


#line 811  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags)
{
  
#line 815 
  ldv_spin_model_unlock((char *)"irqmask_lock_of_rt2x00_dev");
  
#line 817 
  spin_unlock_irqrestore(lock,flags);
  
#line 818 
  return;
}


#line 821  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_spin_lock_irq_80(spinlock_t *lock)
{
  
#line 825 
  ldv_spin_model_lock((char *)"irqmask_lock_of_rt2x00_dev");
  
#line 827 
  spin_lock_irq(lock);
  
#line 828 
  return;
}


#line 831  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_spin_unlock_irq_81(spinlock_t *lock)
{
  
#line 835 
  ldv_spin_model_unlock((char *)"irqmask_lock_of_rt2x00_dev");
  
#line 837 
  spin_unlock_irq(lock);
  
#line 838 
  return;
}


#line 841  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_spin_lock_irq_82(spinlock_t *lock)
{
  
#line 845 
  ldv_spin_model_lock((char *)"irqmask_lock_of_rt2x00_dev");
  
#line 847 
  spin_lock_irq(lock);
  
#line 848 
  return;
}


#line 851  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_spin_unlock_irq_83(spinlock_t *lock)
{
  
#line 855 
  ldv_spin_model_unlock((char *)"irqmask_lock_of_rt2x00_dev");
  
#line 857 
  spin_unlock_irq(lock);
  
#line 858 
  return;
}


#line 861  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_tasklet_schedule_84(struct tasklet_struct *t)
{
  
#line 865 
  ldv_emg_tasklet_schedule(t);
  
#line 866 
  return;
}


#line 869  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_tasklet_hi_schedule_85(struct tasklet_struct *t)
{
  
#line 873 
  ldv_emg_tasklet_hi_schedule(t);
  
#line 874 
  return;
}


#line 877  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_tasklet_schedule_86(struct tasklet_struct *t)
{
  
#line 881 
  ldv_emg_tasklet_schedule(t);
  
#line 882 
  return;
}


#line 885  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_tasklet_schedule_87(struct tasklet_struct *t)
{
  
#line 889 
  ldv_emg_tasklet_schedule(t);
  
#line 890 
  return;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_spin_lock_88(spinlock_t *lock)
{
  
#line 897 
  ldv_spin_model_lock((char *)"irqmask_lock_of_rt2x00_dev");
  
#line 899 
  spin_lock(lock);
  
#line 900 
  return;
}


#line 903  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_spin_unlock_89(spinlock_t *lock)
{
  
#line 907 
  ldv_spin_model_unlock((char *)"irqmask_lock_of_rt2x00_dev");
  
#line 909 
  spin_unlock(lock);
  
#line 910 
  return;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static int ldv___pci_register_driver_90(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 917 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 917 
  return tmp;
}


#line 921  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/weaver/.tmp_rt2500pci.c.aux"
static void ldv_pci_unregister_driver_91(struct pci_driver *ldv_func_arg1)
{
  
#line 925 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 926 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 31 
void *memset(void *, int, size_t);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
int main(void);


#line 29 
void ldv_dispatch_deregister_3_1(struct pci_driver *arg0);


#line 31 
void *ldv_pci_scenario_6(void *arg0);


#line 33 
void ldv_dispatch_register_2_3(struct pci_driver *arg0);


#line 35 
void *ldv_initialization_1(void *arg0);


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_6;

#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 46 
  ldv_initialize();
  
#line 49 
  ldv_initialization_1((void *)0);
  
#line 51 
  __retres = 0;
  
#line 51 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_3_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_6 *cf_arg_6;
  int tmp;
  
#line 59 
  tmp = ldv_undef_int();
  
#line 59 
  switch (tmp) {
    case 0: 
#line 60 
    ;
    
#line 61 
    ret = pthread_join(ldv_thread_6,(void **)0);
    
#line 62 
    __VERIFIER_assume(ret == 0);
    
#line 63 
    goto ldv_28002;
    default: 
#line 65 
    ;
    
#line 65 
    __VERIFIER_assume(0);
  }
  ldv_28002: 
#line 66 
  ;
  
#line 67 
  return;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 74 
  struct pci_driver *ldv_2_pci_driver = ldv_emg_alias_rt2500pci_driver_2;
  
#line 78 
  tmp_0 = ldv_undef_int();
  
#line 78 
  if (tmp_0 != 0) {
    
#line 80 
    ldv_2_pci_driver = arg0;
    
#line 84 
    ldv_dispatch_register_2_3(ldv_2_pci_driver);
    
#line 88 
    __retres = 0;
    
#line 88 
    goto return_label;
  }
  else {
    int tmp;
    
#line 95 
    tmp = ldv_undef_int_negative();
    
#line 95 
    __retres = tmp;
    
#line 95 
    goto return_label;
  }
  return_label: 
#line 78 
                return __retres;
}


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_6(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_6_resource_1;
  struct pci_device_id *ldv_6_ldv_param_1_2;
  struct pm_message ldv_6_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 110 
  struct pci_driver *ldv_6_container = ldv_emg_alias_rt2500pci_driver_2;
  
#line 111 
  int ldv_6_ret = ldv_undef_int();
  
#line 114 
  struct ldv_struct_pci_scenario_6 *data = (struct ldv_struct_pci_scenario_6 *)arg0;
  
#line 118 
  ldv_6_ret = ldv_undef_int();
  
#line 121 
  if (data != (struct ldv_struct_pci_scenario_6 *)0) {
    
#line 122 
    ldv_6_container = data->arg0;
    
#line 123 
    ldv_free((void *)data);
  }
  else ;
  
#line 134 
  goto ldv_main_6;
  
#line 136 
  __retres = (void *)0;
  
#line 136 
  goto return_label;
  ldv_main_6: 
#line 139 
  ;
  
#line 142 
  tmp_2 = ldv_undef_int();
  
#line 142 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 144 
    ldv_6_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 149 
    ldv_pre_probe();
    
#line 151 
    ldv_6_ret = ldv_emg_wrapper_rt2500pci_probe_2(ldv_6_resource_1,ldv_6_ldv_param_1_2);
    
#line 153 
    ldv_6_ret = ldv_post_probe(ldv_6_ret);
    
#line 157 
    ldv_free((void *)ldv_6_ldv_param_1_2);
    
#line 160 
    tmp_1 = ldv_undef_int();
    
#line 160 
    if (tmp_1 != 0) {
      
#line 162 
      __VERIFIER_assume(ldv_6_ret == 0);
      
#line 169 
      goto ldv_call_6;
    }
    else {
      
#line 173 
      __VERIFIER_assume(ldv_6_ret != 0);
      
#line 180 
      goto ldv_main_6;
    }
  }
  else {
    
#line 192 
    __retres = (void *)0;
    
#line 192 
    goto return_label;
  }
  
#line 195 
  __retres = (void *)0;
  
#line 195 
  goto return_label;
  ldv_call_6: 
#line 198 
  ;
  
#line 201 
  tmp_3 = ldv_undef_int();
  
#line 201 
  switch (tmp_3) {
    case 1: 
#line 202 
    ;
    
#line 211 
    goto ldv_call_6;
    case 2: 
#line 214 
    ;
    
#line 217 
    ldv_6_ret = (*ldv_emg_alias_rt2x00pci_suspend_3)(ldv_6_resource_1,ldv_6_resource_0);
    
#line 219 
    ldv_6_ret = ldv_filter_err_code(ldv_6_ret);
    
#line 223 
    if (ldv_6_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 225 
      ldv_6_ret = (*(ldv_6_container->suspend_late))(ldv_6_resource_1,ldv_6_resource_0);
      
#line 227 
      ldv_6_ret = ldv_filter_err_code(ldv_6_ret);
    }
    else 
#line 229 
         ldv_6_ret = ldv_undef_int();
    
#line 234 
    if (ldv_6_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 236 
      (*(ldv_6_container->resume_early))(ldv_6_resource_1); else ;
    
#line 242 
    (*ldv_emg_alias_rt2x00pci_resume_5)(ldv_6_resource_1);
    
#line 249 
    goto ldv_call_6;
    case 3: 
#line 252 
    ;
    
#line 254 
    if (ldv_6_container->shutdown != (void (*)(struct pci_dev *))0) 
#line 256 
                                                                    (*(ldv_6_container->shutdown))(ldv_6_resource_1); else ;
    
#line 262 
    (*ldv_emg_alias_rt2x00pci_remove_4)(ldv_6_resource_1);
    
#line 269 
    goto ldv_main_6;
    default: 
#line 272 
    ;
    
#line 272 
    __VERIFIER_assume(0);
  }
  
#line 275 
  __retres = (void *)0;
  return_label: 
#line 275 
                return __retres;
}


#line 280  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_5_ldv_param_0_2;
  struct tasklet_struct *ldv_5_tasklet_struct;
  
#line 287 
  ldv_5_tasklet_struct = arg0;
  
#line 294 
  if (ldv_5_tasklet_struct->count.counter == 0) {
    
#line 295 
    if (ldv_5_tasklet_struct->func != (void (*)(unsigned long ))0) 
#line 297 
                                                                   (*(ldv_5_tasklet_struct->func))(ldv_5_ldv_param_0_2); else ;
  }
  else ;
  
#line 306 
  goto return_label;
  return_label: 
#line 308 
                return;
}


#line 313  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_2_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_6 *cf_arg_6;
  int tmp;
  
#line 316 
  tmp = ldv_undef_int();
  
#line 316 
  switch (tmp) {
    case 0: 
#line 317 
    ;
    
#line 318 
    cf_arg_6 = (struct ldv_struct_pci_scenario_6 *)ldv_xmalloc(16UL);
    
#line 319 
    cf_arg_6->arg0 = arg0;
    
#line 320 
    ret = pthread_create(& ldv_thread_6,(pthread_attr_t const *)0,& ldv_pci_scenario_6,(void *)cf_arg_6);
    
#line 321 
    __VERIFIER_assume(ret == 0);
    
#line 322 
    goto ldv_28036;
    default: 
#line 324 
    ;
    
#line 324 
    __VERIFIER_assume(0);
  }
  ldv_28036: 
#line 325 
  ;
  
#line 326 
  return;
}


#line 330  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 333 
  struct pci_driver *ldv_3_pci_driver = ldv_emg_alias_rt2500pci_driver_2;
  
#line 336 
  ldv_3_pci_driver = arg0;
  
#line 340 
  ldv_dispatch_deregister_3_1(ldv_3_pci_driver);
  
#line 344 
  goto return_label;
  return_label: 
#line 346 
                return;
}


#line 351  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 358 
  ldv_1_ret = ldv_emg_rt2500pci_driver_init();
  
#line 359 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 362 
  tmp = ldv_undef_int();
  
#line 362 
  if (tmp != 0) {
    
#line 364 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 368 
    __retres = (void *)0;
    
#line 368 
    goto return_label;
  }
  else {
    
#line 372 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 377 
    ldv_emg_rt2500pci_driver_exit();
    
#line 381 
    __retres = (void *)0;
    
#line 381 
    goto return_label;
  }
  
#line 384 
  __retres = (void *)0;
  return_label: 
#line 384 
                return __retres;
}


#line 389  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rt2x00/rt2500pci.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_hi_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_4_ldv_param_0_2;
  struct tasklet_struct *ldv_4_tasklet_struct;
  
#line 396 
  ldv_4_tasklet_struct = arg0;
  
#line 403 
  if (ldv_4_tasklet_struct->count.counter == 0) {
    
#line 404 
    if (ldv_4_tasklet_struct->func != (void (*)(unsigned long ))0) 
#line 406 
                                                                   (*(ldv_4_tasklet_struct->func))(ldv_4_ldv_param_0_2); else ;
  }
  else ;
  
#line 415 
  goto return_label;
  return_label: 
#line 417 
                return;
}


