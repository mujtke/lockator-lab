/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_led.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct paravirt_callee_save {
   void *func ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
   void (*adjust_exception_frame)(void) ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
struct static_key;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 59 
struct static_key_mod;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_179 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_179 __anonCompField_iov_iter_50 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_15465 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_15465 socket_state;

#line 55 
struct pipe_inode_info;

#line 56 
struct net;

#line 73 
struct fasync_struct;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_181 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_181 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_183 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_184 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_186 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_188 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_187 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_188 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_189 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_190 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_182 {
   int _pad[28U] ;
   struct __anonstruct__kill_183 _kill ;
   struct __anonstruct__timer_184 _timer ;
   struct __anonstruct__rt_185 _rt ;
   struct __anonstruct__sigchld_186 _sigchld ;
   struct __anonstruct__sigfault_187 _sigfault ;
   struct __anonstruct__sigpoll_189 _sigpoll ;
   struct __anonstruct__sigsys_190 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_182 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_197 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_198 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_200 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_199 {
   struct keyring_index_key index_key ;
   struct __anonstruct_200 __anonCompField___anonunion_199_53 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_201 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_203 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_202 {
   union __anonunion_payload_203 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_197 __anonCompField_key_51 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_198 __anonCompField_key_52 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_199 __anonCompField_key_54 ;
   union __anonunion_type_data_201 type_data ;
   union __anonunion_202 __anonCompField_key_55 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_218 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_218 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_22795 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_22795 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_223 __anonCompField_nf_bridge_info_62 ;
   union __anonunion_224 __anonCompField_nf_bridge_info_63 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_227 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_226 {
   u64 v64 ;
   struct __anonstruct_227 __anonCompField___anonunion_226_64 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_226 __anonCompField_skb_mstamp_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_230 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_229 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_230 __anonCompField___anonstruct_229_66 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_228 {
   struct __anonstruct_229 __anonCompField___anonunion_228_67 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_232 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_231 {
   __wsum csum ;
   struct __anonstruct_232 __anonCompField___anonunion_231_69 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_233 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_234 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_235 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_228 __anonCompField_sk_buff_68 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_231 __anonCompField_sk_buff_70 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_233 __anonCompField_sk_buff_71 ;
   __u32 secmark ;
   union __anonunion_234 __anonCompField_sk_buff_72 ;
   union __anonunion_235 __anonCompField_sk_buff_73 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_237 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_237 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_238 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_238 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_239 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_239 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_240 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_240 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_241 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_241 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_242 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_242 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_243 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_243 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_244 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_244 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_245 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_246 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_245 ifr_ifrn ;
   union __anonunion_ifr_ifru_246 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_251 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_250 {
   struct __anonstruct_251 __anonCompField___anonunion_250_74 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_250 __anonCompField_lockref_75 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_253 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_252 {
   struct __anonstruct_253 __anonCompField___anonunion_252_76 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_252 __anonCompField_qstr_77 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_254 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_254 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_258 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_257 {
   struct __anonstruct_258 __anonCompField___anonunion_257_78 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_257 __anonCompField_radix_tree_node_79 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_262 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_262 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_263 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_263 __anonCompField_kqid_81 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_266 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_267 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_268 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_266 __anonCompField_inode_82 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_267 __anonCompField_inode_83 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_268 __anonCompField_inode_84 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_269 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_269 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_271 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_270 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_271 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_270 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_302 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_302 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28348 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28348 phy_interface_t;

#line 126 
enum ldv_28401 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28401 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30111 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30112 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_315 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_317 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_315 adj_list ;
   struct __anonstruct_all_adj_list_316 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30111 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30112 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_317 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 1161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
};

#line 1180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
};

#line 1204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
};

#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
};

#line 1354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
};

#line 1435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
};

#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NUM_NL80211_IFTYPES = 12,
    NL80211_IFTYPE_MAX = 11
};

#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};

#line 2484 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};

#line 2491 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};

#line 2607 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};

#line 2618 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};

#line 2650 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    __NL80211_AUTHTYPE_NUM = 5,
    NL80211_AUTHTYPE_MAX = 4,
    NL80211_AUTHTYPE_AUTOMATIC = 5
};

#line 2668 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1
};

#line 3596 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};

#line 3734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};

#line 3871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};

#line 3883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};

#line 4131 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};

#line 4153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};

#line 4581 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};

#line 4587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[2U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};

#line 205 
struct wiphy;

#line 206 
enum ieee80211_band {
    IEEE80211_BAND_2GHZ = 0,
    IEEE80211_BAND_5GHZ = 1,
    IEEE80211_BAND_60GHZ = 2,
    IEEE80211_NUM_BANDS = 3
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_channel {
   enum ieee80211_band band ;
   u16 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};

#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum ieee80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
};

#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
};

#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};

#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};

#line 1428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   u32 rates[3U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   bool aborted ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   s32 rssi_thold ;
};

#line 1499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u32 interval ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1561 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};

#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 const *ssid ;
   u8 const *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 const *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool userspace_handles_dfs ;
   int mcast_rate[3U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
};

#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 const *bssid ;
   u8 const *bssid_hint ;
   u8 const *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 const *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 const *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
};

#line 1916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 const *mask ;
   u8 const *pattern ;
   int pattern_len ;
   int pkt_offset ;
};

#line 1933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 const *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 const *wake_data ;
   u8 const *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};

#line 1968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};

#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};

#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit const *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
};

#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};

#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature const *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};

#line 2910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support const *tcp ;
};

#line 2935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};

#line 2960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void const *, int ) ;
};

#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes const *mgmt_stypes ;
   struct ieee80211_iface_combination const *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[1U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   int n_cipher_suites ;
   u32 const *cipher_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support const *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 const *extended_capabilities ;
   u8 const *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   void const *privid ;
   struct ieee80211_supported_band *bands[3U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain const *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap const *ht_capa_mod_mask ;
   struct ieee80211_vht_cap const *vht_capa_mod_mask ;
   possible_net_t _net ;
   struct iw_handler_def const *wext ;
   struct wiphy_coalesce_support const *coalesce ;
   struct wiphy_vendor_command const *vendor_commands ;
   struct nl80211_vendor_cmd_info const *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   char priv[0U] ;
};

#line 3369 
struct cfg80211_conn;

#line 3370 
struct cfg80211_internal_bss;

#line 3371 
struct cfg80211_cached_keys;

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_wext_362 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 const *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool p2p_started ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   u32 owner_nlportid ;
   struct __anonstruct_wext_362 wext ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};

#line 229 
struct ieee80211_vif;

#line 407 
struct ieee80211_sta;

#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 const *bssid ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[3U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   struct cfg80211_chan_def chandef ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
};

#line 1174 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   int max_sleep_period ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};

#line 1285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
};

#line 1316 
struct ieee80211_txq;

#line 1316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   u8 drv_priv[0U] ;
};

#line 1547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};

#line 1590 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_rate_378 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_378 rate[4U] ;
};

#line 1645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[3U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   struct ieee80211_txq *txq[16U] ;
   u8 drv_priv[0U] ;
};

#line 1726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};

#line 1781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char const *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u8 max_rx_aggregation_subframes ;
   u8 max_tx_aggregation_subframes ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme const *cipher_schemes ;
   int txq_ac_max_pending ;
};

#line 3518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tpt_blink {
   int throughput ;
   int blink_time ;
};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-modparams.h"
struct iwl_mod_params;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-modparams.h"
struct iwl_mod_params {
   int sw_crypto ;
   unsigned int disable_11n ;
   int amsdu_size_8K ;
   bool restart_fw ;
   bool bt_coex_active ;
   int led_mode ;
   bool power_save ;
   int power_level ;
   u32 debug_level ;
   int ant_coupling ;
   char *nvm_file ;
   bool uapsd_disable ;
   bool d0i3_disable ;
   bool lar_disable ;
   bool fw_monitor ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-debug.h"
enum iwl_device_family {
    IWL_DEVICE_FAMILY_UNDEFINED = 0,
    IWL_DEVICE_FAMILY_1000 = 1,
    IWL_DEVICE_FAMILY_100 = 2,
    IWL_DEVICE_FAMILY_2000 = 3,
    IWL_DEVICE_FAMILY_2030 = 4,
    IWL_DEVICE_FAMILY_105 = 5,
    IWL_DEVICE_FAMILY_135 = 6,
    IWL_DEVICE_FAMILY_5000 = 7,
    IWL_DEVICE_FAMILY_5150 = 8,
    IWL_DEVICE_FAMILY_6000 = 9,
    IWL_DEVICE_FAMILY_6000i = 10,
    IWL_DEVICE_FAMILY_6005 = 11,
    IWL_DEVICE_FAMILY_6030 = 12,
    IWL_DEVICE_FAMILY_6050 = 13,
    IWL_DEVICE_FAMILY_6150 = 14,
    IWL_DEVICE_FAMILY_7000 = 15,
    IWL_DEVICE_FAMILY_8000 = 16
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-config.h"
enum iwl_led_mode {
    IWL_LED_DEFAULT = 0,
    IWL_LED_RF_STATE = 1,
    IWL_LED_BLINK = 2,
    IWL_LED_DISABLE = 3
};

#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-config.h"
struct iwl_base_params {
   int eeprom_size ;
   int num_of_queues ;
   u32 pll_cfg_val ;
   u16 const max_ll_items ;
   bool const shadow_ram_support ;
   u16 led_compensation ;
   unsigned int wd_timeout ;
   u32 max_event_log_size ;
   bool const shadow_reg_enable ;
   bool const pcie_l1_allowed ;
   bool const apmg_wake_up_wa ;
   bool const scd_chain_ext_wa ;
};

#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-config.h"
struct iwl_ht_params {
   enum ieee80211_smps_mode smps_mode ;
   bool const ht_greenfield_support ;
   bool const stbc ;
   bool const ldpc ;
   bool use_rts_for_aggregation ;
   u8 ht40_bands ;
};

#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-config.h"
struct iwl_tt_tx_backoff {
   s32 temperature ;
   u32 backoff ;
};

#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-config.h"
struct iwl_tt_params {
   s32 ct_kill_entry ;
   s32 ct_kill_exit ;
   u32 ct_kill_duration ;
   s32 dynamic_smps_entry ;
   s32 dynamic_smps_exit ;
   s32 tx_protection_entry ;
   s32 tx_protection_exit ;
   struct iwl_tt_tx_backoff tx_backoff[6U] ;
   bool support_ct_kill ;
   bool support_dynamic_smps ;
   bool support_tx_protection ;
   bool support_tx_backoff ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-config.h"
struct iwl_eeprom_params {
   u8 const regulatory_bands[7U] ;
   bool enhanced_txpower ;
};

#line 262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-config.h"
struct iwl_pwr_tx_backoff {
   u32 pwr ;
   u32 backoff ;
};

#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-config.h"
struct iwl_cfg {
   char const *name ;
   char const *fw_name_pre ;
   unsigned int const ucode_api_max ;
   unsigned int const ucode_api_ok ;
   unsigned int const ucode_api_min ;
   enum iwl_device_family const device_family ;
   u32 const max_data_size ;
   u32 const max_inst_size ;
   u8 valid_tx_ant ;
   u8 valid_rx_ant ;
   u8 non_shared_ant ;
   bool bt_shared_single_ant ;
   u16 nvm_ver ;
   u16 nvm_calib_ver ;
   struct iwl_base_params const *base_params ;
   struct iwl_ht_params const *ht_params ;
   struct iwl_eeprom_params const *eeprom_params ;
   enum iwl_led_mode led_mode ;
   bool const rx_with_siso_diversity ;
   bool const internal_wimax_coex ;
   bool const host_interrupt_operation_mode ;
   bool high_temp ;
   bool d0i3 ;
   u8 nvm_hw_section_num ;
   bool lp_xtal_workaround ;
   struct iwl_pwr_tx_backoff const *pwr_tx_backoffs ;
   bool no_power_up_nic_in_init ;
   char const *default_nvm_file_B_step ;
   char const *default_nvm_file_C_step ;
   unsigned int max_rx_agg_size ;
   bool disable_dummy_notification ;
   unsigned int max_tx_agg_size ;
   unsigned int max_ht_ampdu_exponent ;
   unsigned int max_vht_ampdu_exponent ;
   u32 const dccm_offset ;
   u32 const dccm_len ;
   u32 const dccm2_offset ;
   u32 const dccm2_len ;
   u32 const smem_offset ;
   u32 const smem_len ;
   struct iwl_tt_params const *thermal_params ;
   bool apmg_not_supported ;
};

#line 300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw-file.h"
struct iwl_tlv_calib_ctrl {
   __le32 flow_trigger ;
   __le32 event_trigger ;
};

#line 415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw-file.h"
struct iwl_fw_dbg_reg_op {
   u8 op ;
   u8 reserved[3U] ;
   __le32 addr ;
   __le32 val ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw-file.h"
struct iwl_fw_dbg_dest_tlv {
   u8 version ;
   u8 monitor_mode ;
   u8 size_power ;
   u8 reserved ;
   __le32 base_reg ;
   __le32 end_reg ;
   __le32 write_ptr_reg ;
   __le32 wrap_count ;
   u8 base_shift ;
   u8 end_shift ;
   struct iwl_fw_dbg_reg_op reg_ops[0U] ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw-file.h"
struct iwl_fw_dbg_conf_hcmd {
   u8 id ;
   u8 reserved ;
   __le16 len ;
   u8 data[0U] ;
};

#line 497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw-file.h"
struct iwl_fw_dbg_trigger_tlv {
   __le32 id ;
   __le32 vif_type ;
   __le32 stop_conf_ids ;
   __le32 stop_delay ;
   u8 mode ;
   u8 start_conf_id ;
   __le16 occurrences ;
   __le32 reserved[2U] ;
   u8 data[0U] ;
};

#line 701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw-file.h"
struct iwl_fw_dbg_conf_tlv {
   u8 id ;
   u8 usniffer ;
   u8 reserved ;
   u8 num_of_hcmds ;
   struct iwl_fw_dbg_conf_hcmd hcmd ;
};

#line 286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw-error-dump.h"
enum iwl_ucode_type {
    IWL_UCODE_REGULAR = 0,
    IWL_UCODE_INIT = 1,
    IWL_UCODE_WOWLAN = 2,
    IWL_UCODE_REGULAR_USNIFFER = 3,
    IWL_UCODE_TYPE_MAX = 4
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw-error-dump.h"
struct iwl_ucode_capabilities {
   u32 max_probe_length ;
   u32 n_scan_channels ;
   u32 standard_phy_calibration_size ;
   u32 flags ;
   unsigned long _api[1U] ;
   unsigned long _capa[1U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw.h"
struct fw_desc {
   void const *data ;
   u32 len ;
   u32 offset ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw.h"
struct fw_img {
   struct fw_desc sec[12U] ;
   bool is_dual_cpus ;
};

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw.h"
struct iwl_sf_region {
   u32 addr ;
   u32 size ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw.h"
struct iwl_fw {
   u32 ucode_ver ;
   char fw_version[32U] ;
   struct fw_img img[4U] ;
   struct iwl_ucode_capabilities ucode_capa ;
   bool enhance_sensitivity_table ;
   u32 init_evtlog_ptr ;
   u32 init_evtlog_size ;
   u32 init_errlog_ptr ;
   u32 inst_evtlog_ptr ;
   u32 inst_evtlog_size ;
   u32 inst_errlog_ptr ;
   struct iwl_tlv_calib_ctrl default_calib[4U] ;
   u32 phy_config ;
   u8 valid_tx_ant ;
   u8 valid_rx_ant ;
   bool mvm_fw ;
   struct ieee80211_cipher_scheme cs[1U] ;
   u8 human_readable[64U] ;
   u32 sdio_adma_addr ;
   struct iwl_fw_dbg_dest_tlv *dbg_dest_tlv ;
   struct iwl_fw_dbg_conf_tlv *dbg_conf_tlv[32U] ;
   size_t dbg_conf_tlv_len[32U] ;
   struct iwl_fw_dbg_trigger_tlv *dbg_trigger_tlv[12U] ;
   size_t dbg_trigger_tlv_len[12U] ;
   u8 dbg_dest_reg_num ;
};

#line 253 
struct iwl_op_mode;

#line 254 
struct iwl_trans;

#line 255 
struct iwl_device_cmd;

#line 256 
struct iwl_rx_cmd_buffer;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-fw.h"
struct iwl_op_mode_ops {
   struct iwl_op_mode *(*start)(struct iwl_trans *, struct iwl_cfg const *, struct iwl_fw const *, struct dentry *) ;
   void (*stop)(struct iwl_op_mode *) ;
   int (*rx)(struct iwl_op_mode *, struct iwl_rx_cmd_buffer *, struct iwl_device_cmd *) ;
   void (*napi_add)(struct iwl_op_mode *, struct napi_struct *, struct net_device *, int (*)(struct napi_struct *, int ), int ) ;
   void (*queue_full)(struct iwl_op_mode *, int ) ;
   void (*queue_not_full)(struct iwl_op_mode *, int ) ;
   bool (*hw_rf_kill)(struct iwl_op_mode *, bool ) ;
   void (*free_skb)(struct iwl_op_mode *, struct sk_buff *) ;
   void (*nic_error)(struct iwl_op_mode *) ;
   void (*cmd_queue_full)(struct iwl_op_mode *) ;
   void (*nic_config)(struct iwl_op_mode *) ;
   void (*wimax_active)(struct iwl_op_mode *) ;
   int (*enter_d0i3)(struct iwl_op_mode *) ;
   int (*exit_d0i3)(struct iwl_op_mode *) ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-op-mode.h"
struct iwl_op_mode {
   struct iwl_op_mode_ops const *ops ;
   char op_mode_specific[0U] ;
};

#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-op-mode.h"
struct iwl_cmd_header {
   u8 cmd ;
   u8 flags ;
   __le16 sequence ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
struct iwl_rx_packet {
   __le32 len_n_flags ;
   struct iwl_cmd_header hdr ;
   u8 data[] ;
};

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
struct iwl_device_cmd {
   struct iwl_cmd_header hdr ;
   u8 payload[320U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
struct iwl_host_cmd {
   void const *data[2U] ;
   struct iwl_rx_packet *resp_pkt ;
   unsigned long _rx_page_addr ;
   u32 _rx_page_order ;
   int handler_status ;
   u32 flags ;
   u16 len[2U] ;
   u8 dataflags[2U] ;
   u8 id ;
};

#line 288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
struct iwl_rx_cmd_buffer {
   struct page *_page ;
   int _offset ;
   bool _page_stolen ;
   u32 _rx_page_order ;
   unsigned int truesize ;
};

#line 318 
enum iwl_d3_status {
    IWL_D3_STATUS_ALIVE = 0,
    IWL_D3_STATUS_RESET = 1
};

#line 334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
struct iwl_trans_config {
   struct iwl_op_mode *op_mode ;
   u8 cmd_queue ;
   u8 cmd_fifo ;
   unsigned int cmd_q_wdg_timeout ;
   u8 const *no_reclaim_cmds ;
   unsigned int n_no_reclaim_cmds ;
   bool rx_buf_size_8k ;
   bool bc_table_dword ;
   bool scd_set_active ;
   char const * const *command_names ;
   u32 sdio_adma_addr ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
struct iwl_trans_dump_data {
   u32 len ;
   u8 data[] ;
};

#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
struct iwl_trans_txq_scd_cfg {
   u8 fifo ;
   s8 sta_id ;
   u8 tid ;
   bool aggregate ;
   int frame_limit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
struct iwl_trans_ops {
   int (*start_hw)(struct iwl_trans *, bool ) ;
   void (*op_mode_leave)(struct iwl_trans *) ;
   int (*start_fw)(struct iwl_trans *, struct fw_img const *, bool ) ;
   int (*update_sf)(struct iwl_trans *, struct iwl_sf_region *) ;
   void (*fw_alive)(struct iwl_trans *, u32 ) ;
   void (*stop_device)(struct iwl_trans *, bool ) ;
   void (*d3_suspend)(struct iwl_trans *, bool ) ;
   int (*d3_resume)(struct iwl_trans *, enum iwl_d3_status *, bool ) ;
   int (*send_cmd)(struct iwl_trans *, struct iwl_host_cmd *) ;
   int (*tx)(struct iwl_trans *, struct sk_buff *, struct iwl_device_cmd *, int ) ;
   void (*reclaim)(struct iwl_trans *, int , int , struct sk_buff_head *) ;
   void (*txq_enable)(struct iwl_trans *, int , u16 , struct iwl_trans_txq_scd_cfg const *, unsigned int ) ;
   void (*txq_disable)(struct iwl_trans *, int , bool ) ;
   int (*dbgfs_register)(struct iwl_trans *, struct dentry *) ;
   int (*wait_tx_queue_empty)(struct iwl_trans *, u32 ) ;
   void (*freeze_txq_timer)(struct iwl_trans *, unsigned long , bool ) ;
   void (*write8)(struct iwl_trans *, u32 , u8 ) ;
   void (*write32)(struct iwl_trans *, u32 , u32 ) ;
   u32 (*read32)(struct iwl_trans *, u32 ) ;
   u32 (*read_prph)(struct iwl_trans *, u32 ) ;
   void (*write_prph)(struct iwl_trans *, u32 , u32 ) ;
   int (*read_mem)(struct iwl_trans *, u32 , void *, int ) ;
   int (*write_mem)(struct iwl_trans *, u32 , void const *, int ) ;
   void (*configure)(struct iwl_trans *, struct iwl_trans_config const *) ;
   void (*set_pmi)(struct iwl_trans *, bool ) ;
   bool (*grab_nic_access)(struct iwl_trans *, bool , unsigned long *) ;
   void (*release_nic_access)(struct iwl_trans *, unsigned long *) ;
   void (*set_bits_mask)(struct iwl_trans *, u32 , u32 , u32 ) ;
   void (*ref)(struct iwl_trans *) ;
   void (*unref)(struct iwl_trans *) ;
   void (*suspend)(struct iwl_trans *) ;
   void (*resume)(struct iwl_trans *) ;
   struct iwl_trans_dump_data *(*dump_data)(struct iwl_trans *) ;
};

#line 552 
enum iwl_trans_state {
    IWL_TRANS_NO_FW = 0,
    IWL_TRANS_FW_ALIVE = 1
};

#line 557 
enum iwl_d0i3_mode {
    IWL_D0I3_MODE_OFF = 0,
    IWL_D0I3_MODE_ON_IDLE = 1,
    IWL_D0I3_MODE_ON_SUSPEND = 2
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
struct iwl_trans {
   struct iwl_trans_ops const *ops ;
   struct iwl_op_mode *op_mode ;
   struct iwl_cfg const *cfg ;
   enum iwl_trans_state state ;
   unsigned long status ;
   struct device *dev ;
   u32 hw_rev ;
   u32 hw_id ;
   char hw_id_str[52U] ;
   u8 rx_mpdu_cmd ;
   u8 rx_mpdu_cmd_hdr_size ;
   bool pm_support ;
   bool ltr_enabled ;
   struct kmem_cache *dev_cmd_pool ;
   size_t dev_cmd_headroom ;
   char dev_cmd_pool_name[50U] ;
   struct dentry *dbgfs_dir ;
   struct lockdep_map sync_cmd_lockdep_map ;
   u64 dflt_pwr_limit ;
   struct iwl_fw_dbg_dest_tlv const *dbg_dest_tlv ;
   struct iwl_fw_dbg_conf_tlv const *dbg_conf_tlv[32U] ;
   struct iwl_fw_dbg_trigger_tlv * const *dbg_trigger_tlv ;
   u8 dbg_dest_reg_num ;
   enum iwl_d0i3_mode d0i3_mode ;
   bool wowlan_d0i3 ;
   char trans_specific[0U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace.h"
struct tracepoint_func {
   void *func ;
   void *data ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tracepoint.h"
struct tracepoint {
   char const *name ;
   struct static_key key ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tracepoint.h"
struct trace_enum_map {
   char const *system ;
   char const *enum_string ;
   unsigned long enum_value ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_390 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_392 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_398 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_400 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
enum led_brightness {
    LED_OFF = 0,
    LED_HALF = 127,
    LED_FULL = 255
};

#line 93 
struct led_trigger;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
struct led_classdev {
   char const *name ;
   enum led_brightness brightness ;
   enum led_brightness max_brightness ;
   int flags ;
   void (*brightness_set)(struct led_classdev *, enum led_brightness ) ;
   int (*brightness_set_sync)(struct led_classdev *, enum led_brightness ) ;
   enum led_brightness (*brightness_get)(struct led_classdev *) ;
   int (*blink_set)(struct led_classdev *, unsigned long *, unsigned long *) ;
   struct device *dev ;
   struct attribute_group const **groups ;
   struct list_head node ;
   char const *default_trigger ;
   unsigned long blink_delay_on ;
   unsigned long blink_delay_off ;
   struct timer_list blink_timer ;
   int blink_brightness ;
   void (*flash_resume)(struct led_classdev *) ;
   struct work_struct set_brightness_work ;
   int delayed_set_value ;
   struct rw_semaphore trigger_lock ;
   struct led_trigger *trigger ;
   struct list_head trig_list ;
   void *trigger_data ;
   bool activated ;
   struct mutex led_access ;
};

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/leds.h"
struct led_trigger {
   char const *name ;
   void (*activate)(struct led_classdev *) ;
   void (*deactivate)(struct led_classdev *) ;
   rwlock_t leddev_list_lock ;
   struct list_head led_cdevs ;
   struct list_head next_trig ;
};

#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/leds.h"
struct iwl_nvm_data {
   int n_hw_addrs ;
   u8 hw_addr[6U] ;
   u8 calib_version ;
   __le16 calib_voltage ;
   __le16 raw_temperature ;
   __le16 kelvin_temperature ;
   __le16 kelvin_voltage ;
   __le16 xtal_calib[2U] ;
   bool sku_cap_band_24GHz_enable ;
   bool sku_cap_band_52GHz_enable ;
   bool sku_cap_11n_enable ;
   bool sku_cap_11ac_enable ;
   bool sku_cap_amt_enable ;
   bool sku_cap_ipan_enable ;
   bool sku_cap_mimo_disabled ;
   u16 radio_cfg_type ;
   u8 radio_cfg_step ;
   u8 radio_cfg_dash ;
   u8 radio_cfg_pnum ;
   u8 valid_tx_ant ;
   u8 valid_rx_ant ;
   u32 nvm_version ;
   s8 max_tx_pwr_half_dbm ;
   bool lar_enabled ;
   struct ieee80211_supported_band bands[3U] ;
   struct ieee80211_channel channels[] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-eeprom-parse.h"
struct iwl_notif_wait_data {
   struct list_head notif_waits ;
   spinlock_t notif_wait_lock ;
   wait_queue_head_t notif_waitq ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-notif-wait.h"
struct iwl_priv;

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_rxon_cmd {
   u8 node_addr[6U] ;
   __le16 reserved1 ;
   u8 bssid_addr[6U] ;
   __le16 reserved2 ;
   u8 wlap_bssid_addr[6U] ;
   __le16 reserved3 ;
   u8 dev_type ;
   u8 air_propagation ;
   __le16 rx_chain ;
   u8 ofdm_basic_rates ;
   u8 cck_basic_rates ;
   __le16 assoc_id ;
   __le32 flags ;
   __le32 filter_flags ;
   __le16 channel ;
   u8 ofdm_ht_single_stream_basic_rates ;
   u8 ofdm_ht_dual_stream_basic_rates ;
   u8 ofdm_ht_triple_stream_basic_rates ;
   u8 reserved5 ;
   __le16 acquisition_data ;
   __le16 reserved6 ;
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_rxon_time_cmd {
   __le64 timestamp ;
   __le16 beacon_interval ;
   __le16 atim_window ;
   __le32 beacon_init_val ;
   __le16 listen_interval ;
   u8 dtim_period ;
   u8 delta_cp_bss_tbtts ;
};

#line 729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_ac_qos {
   __le16 cw_min ;
   __le16 cw_max ;
   u8 aifsn ;
   u8 reserved1 ;
   __le16 edca_txop ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_qosparam_cmd {
   __le32 qos_flags ;
   struct iwl_ac_qos ac[4U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_keyinfo {
   __le16 key_flags ;
   u8 tkip_rx_tsc_byte2 ;
   u8 reserved1 ;
   __le16 tkip_rx_ttak[5U] ;
   u8 key_offset ;
   u8 reserved2 ;
   u8 key[16U] ;
   __le64 tx_secur_seq_cnt ;
   __le64 hw_tkip_mic_rx_key ;
   __le64 hw_tkip_mic_tx_key ;
};

#line 854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct sta_id_modify {
   u8 addr[6U] ;
   __le16 reserved1 ;
   u8 sta_id ;
   u8 modify_mask ;
   __le16 reserved2 ;
};

#line 874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_addsta_cmd {
   u8 mode ;
   u8 reserved[3U] ;
   struct sta_id_modify sta ;
   struct iwl_keyinfo key ;
   __le32 station_flags ;
   __le32 station_flags_msk ;
   __le16 tid_disable_tx ;
   __le16 legacy_reserved ;
   u8 add_immediate_ba_tid ;
   u8 remove_immediate_ba_tid ;
   __le16 add_immediate_ba_ssn ;
   __le16 sleep_tx_count ;
   __le16 reserved2 ;
};

#line 1018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_wep_key {
   u8 key_index ;
   u8 key_offset ;
   u8 reserved1[2U] ;
   u8 key_size ;
   u8 reserved2[3U] ;
   u8 key[16U] ;
};

#line 1103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_rx_phy_res {
   u8 non_cfg_phy_cnt ;
   u8 cfg_phy_cnt ;
   u8 stat_id ;
   u8 reserved1 ;
   __le64 timestamp ;
   __le32 beacon_time_stamp ;
   __le16 phy_flags ;
   __le16 channel ;
   u8 non_cfg_phy_buf[32U] ;
   __le32 rate_n_flags ;
   __le16 byte_count ;
   __le16 frame_time ;
};

#line 1524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_link_qual_general_params {
   u8 flags ;
   u8 mimo_delimiter ;
   u8 single_stream_ant_msk ;
   u8 dual_stream_ant_msk ;
   u8 start_rate_index[4U] ;
};

#line 1575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_link_qual_agg_params {
   __le16 agg_time_limit ;
   u8 agg_dis_start_th ;
   u8 agg_frame_cnt_limit ;
   __le32 reserved ;
};

#line 1618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct __anonstruct_rs_table_475 {
   __le32 rate_n_flags ;
};

#line 1618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_link_quality_cmd {
   u8 sta_id ;
   u8 reserved1 ;
   __le16 control ;
   struct iwl_link_qual_general_params general_params ;
   struct iwl_link_qual_agg_params agg_params ;
   struct __anonstruct_rs_table_475 rs_table[16U] ;
   __le32 reserved2 ;
};

#line 2062  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_measurement_histogram {
   __le32 ofdm[8U] ;
   __le32 cck[8U] ;
};

#line 2087  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_spectrum_notification {
   u8 id ;
   u8 token ;
   u8 channel_index ;
   u8 state ;
   __le32 start_time ;
   u8 band ;
   u8 channel ;
   u8 type ;
   u8 reserved1 ;
   __le32 cca_ofdm ;
   __le32 cca_cck ;
   __le32 cca_time ;
   u8 basic_type ;
   u8 reserved2[3U] ;
   struct iwl_measurement_histogram histogram ;
   __le32 stop_time ;
   __le32 status ;
};

#line 2114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_powertable_cmd {
   __le16 flags ;
   u8 keep_alive_seconds ;
   u8 debug_flags ;
   __le32 rx_data_timeout ;
   __le32 tx_data_timeout ;
   __le32 sleep_interval[5U] ;
   __le32 keep_alive_beacons ;
};

#line 2533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_dbg {
   __le32 burst_check ;
   __le32 burst_count ;
   __le32 wait_for_silence_timeout_cnt ;
   __le32 reserved[3U] ;
};

#line 2542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_rx_phy {
   __le32 ina_cnt ;
   __le32 fina_cnt ;
   __le32 plcp_err ;
   __le32 crc32_err ;
   __le32 overrun_err ;
   __le32 early_overrun_err ;
   __le32 crc32_good ;
   __le32 false_alarm_cnt ;
   __le32 fina_sync_err_cnt ;
   __le32 sfd_timeout ;
   __le32 fina_timeout ;
   __le32 unresponded_rts ;
   __le32 rxe_frame_limit_overrun ;
   __le32 sent_ack_cnt ;
   __le32 sent_cts_cnt ;
   __le32 sent_ba_rsp_cnt ;
   __le32 dsp_self_kill ;
   __le32 mh_format_err ;
   __le32 re_acq_main_rssi_sum ;
   __le32 reserved3 ;
};

#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_rx_ht_phy {
   __le32 plcp_err ;
   __le32 overrun_err ;
   __le32 early_overrun_err ;
   __le32 crc32_good ;
   __le32 crc32_err ;
   __le32 mh_format_err ;
   __le32 agg_crc32_good ;
   __le32 agg_mpdu_cnt ;
   __le32 agg_cnt ;
   __le32 unsupport_mcs ;
};

#line 2578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_rx_non_phy {
   __le32 bogus_cts ;
   __le32 bogus_ack ;
   __le32 non_bssid_frames ;
   __le32 filtered_frames ;
   __le32 non_channel_beacons ;
   __le32 channel_beacons ;
   __le32 num_missed_bcon ;
   __le32 adc_rx_saturation_time ;
   __le32 ina_detection_search_time ;
   __le32 beacon_silence_rssi_a ;
   __le32 beacon_silence_rssi_b ;
   __le32 beacon_silence_rssi_c ;
   __le32 interference_data_flag ;
   __le32 channel_load ;
   __le32 dsp_false_alarms ;
   __le32 beacon_rssi_a ;
   __le32 beacon_rssi_b ;
   __le32 beacon_rssi_c ;
   __le32 beacon_energy_a ;
   __le32 beacon_energy_b ;
   __le32 beacon_energy_c ;
};

#line 2634  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_tx_power {
   u8 ant_a ;
   u8 ant_b ;
   u8 ant_c ;
   u8 reserved ;
};

#line 2648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_tx_non_phy_agg {
   __le32 ba_timeout ;
   __le32 ba_reschedule_frames ;
   __le32 scd_query_agg_frame_cnt ;
   __le32 scd_query_no_agg ;
   __le32 scd_query_agg ;
   __le32 scd_query_mismatch ;
   __le32 frame_not_ready ;
   __le32 underrun ;
   __le32 bt_prio_kill ;
   __le32 rx_ba_rsp_cnt ;
};

#line 2661  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_tx {
   __le32 preamble_cnt ;
   __le32 rx_detected_cnt ;
   __le32 bt_prio_defer_cnt ;
   __le32 bt_prio_kill_cnt ;
   __le32 few_bytes_cnt ;
   __le32 cts_timeout ;
   __le32 ack_timeout ;
   __le32 expected_ack_cnt ;
   __le32 actual_ack_cnt ;
   __le32 dump_msdu_cnt ;
   __le32 burst_abort_next_frame_mismatch_cnt ;
   __le32 burst_abort_missing_next_frame_cnt ;
   __le32 cts_timeout_collision ;
   __le32 ack_or_ba_timeout_collision ;
   struct statistics_tx_non_phy_agg agg ;
   struct statistics_tx_power tx_power ;
   __le32 reserved1 ;
};

#line 2686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_div {
   __le32 tx_on_a ;
   __le32 tx_on_b ;
   __le32 exec_time ;
   __le32 probe_time ;
   __le32 reserved1 ;
   __le32 reserved2 ;
};

#line 2696  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_general_common {
   __le32 temperature ;
   __le32 temperature_m ;
   struct statistics_dbg dbg ;
   __le32 sleep_time ;
   __le32 slots_out ;
   __le32 slots_idle ;
   __le32 ttl_timestamp ;
   struct statistics_div div ;
   __le32 rx_enable_counter ;
   __le32 num_of_sos_states ;
};

#line 2714  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_bt_activity {
   __le32 hi_priority_tx_req_cnt ;
   __le32 hi_priority_tx_denied_cnt ;
   __le32 lo_priority_tx_req_cnt ;
   __le32 lo_priority_tx_denied_cnt ;
   __le32 hi_priority_rx_req_cnt ;
   __le32 hi_priority_rx_denied_cnt ;
   __le32 lo_priority_rx_req_cnt ;
   __le32 lo_priority_rx_denied_cnt ;
};

#line 3256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_led_cmd {
   __le32 interval ;
   u8 id ;
   u8 off ;
   u8 on ;
   u8 reserved ;
};

#line 4007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_power_mgr {
   struct iwl_powertable_cmd sleep_cmd ;
   struct iwl_powertable_cmd sleep_cmd_next ;
   int debug_sleep_level_override ;
   bool bus_pm ;
};

#line 425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
enum iwl_antenna_ok {
    IWL_ANT_OK_NONE = 0,
    IWL_ANT_OK_SINGLE = 1,
    IWL_ANT_OK_MULTI = 2
};

#line 431 
enum iwl_tt_state {
    IWL_TI_0 = 0,
    IWL_TI_1 = 1,
    IWL_TI_2 = 2,
    IWL_TI_CT_KILL = 3,
    IWL_TI_STATE_MAX = 4
};

#line 439  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
struct iwl_tt_restriction {
   enum iwl_antenna_ok tx_stream ;
   enum iwl_antenna_ok rx_stream ;
   bool is_ht ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.h"
struct iwl_tt_trans {
   enum iwl_tt_state next_state ;
   u32 tt_low ;
   u32 tt_high ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.h"
struct iwl_tt_mgmt {
   enum iwl_tt_state state ;
   bool advanced_tt ;
   u8 tt_power_mode ;
   bool ct_kill_toggle ;
   s32 tt_previous_temp ;
   struct iwl_tt_restriction *restriction ;
   struct iwl_tt_trans *transaction ;
   struct timer_list ct_kill_exit_tm ;
   struct timer_list ct_kill_waiting_tm ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_ht_config {
   bool single_chain_sufficient ;
   enum ieee80211_smps_mode smps ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_qos_info {
   int qos_active ;
   struct iwl_qosparam_cmd def_qos_parm ;
};

#line 124 
enum iwl_agg_state {
    IWL_AGG_OFF = 0,
    IWL_AGG_STARTING = 1,
    IWL_AGG_ON = 2,
    IWL_EMPTYING_HW_QUEUE_ADDBA = 3,
    IWL_EMPTYING_HW_QUEUE_DELBA = 4
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_ht_agg {
   u32 rate_n_flags ;
   enum iwl_agg_state state ;
   u16 txq_id ;
   u16 ssn ;
   bool wait_for_ba ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_tid_data {
   u16 seq_number ;
   u16 next_reclaimed ;
   struct iwl_ht_agg agg ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_station_entry {
   struct iwl_addsta_cmd sta ;
   u8 used ;
   u8 ctxid ;
   struct iwl_link_quality_cmd *lq ;
};

#line 200 
struct iwl_rxon_context;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_sensitivity_ranges {
   u16 min_nrg_cck ;
   u16 nrg_th_cck ;
   u16 nrg_th_ofdm ;
   u16 auto_corr_min_ofdm ;
   u16 auto_corr_min_ofdm_mrc ;
   u16 auto_corr_min_ofdm_x1 ;
   u16 auto_corr_min_ofdm_mrc_x1 ;
   u16 auto_corr_max_ofdm ;
   u16 auto_corr_max_ofdm_mrc ;
   u16 auto_corr_max_ofdm_x1 ;
   u16 auto_corr_max_ofdm_mrc_x1 ;
   u16 auto_corr_max_cck ;
   u16 auto_corr_max_cck_mrc ;
   u16 auto_corr_min_cck ;
   u16 auto_corr_min_cck_mrc ;
   u16 barker_corr_th_min ;
   u16 barker_corr_th_min_mrc ;
   u16 nrg_th_cca ;
};

#line 288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_sensitivity_data {
   u32 auto_corr_ofdm ;
   u32 auto_corr_ofdm_mrc ;
   u32 auto_corr_ofdm_x1 ;
   u32 auto_corr_ofdm_mrc_x1 ;
   u32 auto_corr_cck ;
   u32 auto_corr_cck_mrc ;
   u32 last_bad_plcp_cnt_ofdm ;
   u32 last_fa_cnt_ofdm ;
   u32 last_bad_plcp_cnt_cck ;
   u32 last_fa_cnt_cck ;
   u32 nrg_curr_state ;
   u32 nrg_prev_state ;
   u32 nrg_value[10U] ;
   u8 nrg_silence_rssi[20U] ;
   u32 nrg_silence_ref ;
   u32 nrg_energy_idx ;
   u32 nrg_silence_idx ;
   u32 nrg_th_cck ;
   s32 nrg_auto_corr_silence_diff ;
   u32 num_in_cck_no_fa ;
   u32 nrg_th_ofdm ;
   u16 barker_corr_th_min ;
   u16 barker_corr_th_min_mrc ;
   u16 nrg_th_cca ;
};

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_chain_noise_data {
   u32 active_chains ;
   u32 chain_noise_a ;
   u32 chain_noise_b ;
   u32 chain_noise_c ;
   u32 chain_signal_a ;
   u32 chain_signal_b ;
   u32 chain_signal_c ;
   u16 beacon_count ;
   u8 disconn_array[3U] ;
   u8 delta_gain_code[3U] ;
   u8 radio_write ;
   u8 state ;
};

#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct reply_tx_error_statistics {
   u32 pp_delay ;
   u32 pp_few_bytes ;
   u32 pp_bt_prio ;
   u32 pp_quiet_period ;
   u32 pp_calc_ttak ;
   u32 int_crossed_retry ;
   u32 short_limit ;
   u32 long_limit ;
   u32 fifo_underrun ;
   u32 drain_flow ;
   u32 rfkill_flush ;
   u32 life_expire ;
   u32 dest_ps ;
   u32 host_abort ;
   u32 bt_retry ;
   u32 sta_invalid ;
   u32 frag_drop ;
   u32 tid_disable ;
   u32 fifo_flush ;
   u32 insuff_cf_poll ;
   u32 fail_hw_drop ;
   u32 sta_color_mismatch ;
   u32 unknown ;
};

#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct reply_agg_tx_error_statistics {
   u32 underrun ;
   u32 bt_prio ;
   u32 few_bytes ;
   u32 abort ;
   u32 last_sent_ttl ;
   u32 last_sent_try ;
   u32 last_sent_bt_kill ;
   u32 scd_query ;
   u32 bad_crc32 ;
   u32 response ;
   u32 dump_tx ;
   u32 delay_tx ;
   u32 unknown ;
};

#line 426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_event_log {
   bool ucode_trace ;
   u32 num_wraps ;
   u32 next_entry ;
   int non_wraps_count ;
   int wraps_once_count ;
   int wraps_more_count ;
};

#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_rf_reset {
   int reset_request_count ;
   int reset_success_count ;
   int reset_reject_count ;
   unsigned long last_reset_jiffies ;
};

#line 469 
enum iwl_rxon_context_id {
    IWL_RXON_CTX_BSS = 0,
    IWL_RXON_CTX_PAN = 1,
    NUM_IWL_RXON_CTX = 2
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct __anonstruct_ht_479 {
   bool non_gf_sta_present ;
   u8 protection ;
   bool enabled ;
   bool is_40mhz ;
   u8 extension_chan_offset ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_rxon_context {
   struct ieee80211_vif *vif ;
   u8 mcast_queue ;
   u8 ac_to_queue[4U] ;
   u8 ac_to_fifo[4U] ;
   bool always_active ;
   bool is_active ;
   bool ht_need_multiple_chains ;
   enum iwl_rxon_context_id ctxid ;
   u32 interface_modes ;
   u32 exclusive_interface_modes ;
   u8 unused_devtype ;
   u8 ap_devtype ;
   u8 ibss_devtype ;
   u8 station_devtype ;
   struct iwl_rxon_cmd const active ;
   struct iwl_rxon_cmd staging ;
   struct iwl_rxon_time_cmd timing ;
   struct iwl_qos_info qos_data ;
   u8 bcast_sta_id ;
   u8 ap_sta_id ;
   u8 rxon_cmd ;
   u8 rxon_assoc_cmd ;
   u8 rxon_timing_cmd ;
   u8 qos_cmd ;
   u8 wep_key_cmd ;
   struct iwl_wep_key wep_keys[4U] ;
   u8 key_mapping_keys ;
   __le32 station_flags ;
   int beacon_int ;
   struct __anonstruct_ht_479 ht ;
};

#line 539 
enum iwl_scan_type {
    IWL_SCAN_NORMAL = 0,
    IWL_SCAN_RADIO_RESET = 1
};

#line 544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_hw_params {
   u8 tx_chains_num ;
   u8 rx_chains_num ;
   bool use_rts_for_aggregation ;
   u32 ct_kill_threshold ;
   u32 ct_kill_exit_threshold ;
   struct iwl_sensitivity_ranges const *sens ;
};

#line 567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_dvm_bt_params {
   bool advanced_bt_coexist ;
   u8 bt_init_traffic_load ;
   u32 bt_prio_boost ;
   u16 agg_time_limit ;
   bool bt_sco_disable ;
   bool bt_session_2 ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_dvm_cfg {
   void (*set_hw_params)(struct iwl_priv *) ;
   int (*set_channel_switch)(struct iwl_priv *, struct ieee80211_channel_switch *) ;
   void (*nic_config)(struct iwl_priv *) ;
   void (*temperature)(struct iwl_priv *) ;
   struct iwl_dvm_bt_params const *bt_params ;
   s32 chain_noise_scale ;
   u8 plcp_delta_threshold ;
   bool adv_thermal_throttle ;
   bool support_ct_kill_exit ;
   bool hd_v2 ;
   bool no_idle_support ;
   bool need_temp_offset_calib ;
   bool no_xtal_calib ;
   bool temp_offset_v2 ;
   bool adv_pm ;
};

#line 624  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_wipan_noa_data {
   struct callback_head callback_head ;
   u32 length ;
   u8 data[] ;
};

#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct __anonstruct_statistics_480 {
   __le32 flag ;
   struct statistics_general_common common ;
   struct statistics_rx_non_phy rx_non_phy ;
   struct statistics_rx_phy rx_ofdm ;
   struct statistics_rx_ht_phy rx_ofdm_ht ;
   struct statistics_rx_phy rx_cck ;
   struct statistics_tx tx ;
   struct statistics_bt_activity bt_activity ;
   __le32 num_bt_kills ;
   __le32 accum_num_bt_kills ;
   spinlock_t lock ;
};

#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct __anonstruct_accum_stats_481 {
   struct statistics_general_common common ;
   struct statistics_rx_non_phy rx_non_phy ;
   struct statistics_rx_phy rx_ofdm ;
   struct statistics_rx_ht_phy rx_ofdm_ht ;
   struct statistics_rx_phy rx_cck ;
   struct statistics_tx tx ;
   struct statistics_bt_activity bt_activity ;
};

#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct __anonstruct_delta_stats_482 {
   struct statistics_general_common common ;
   struct statistics_rx_non_phy rx_non_phy ;
   struct statistics_rx_phy rx_ofdm ;
   struct statistics_rx_ht_phy rx_ofdm_ht ;
   struct statistics_rx_phy rx_cck ;
   struct statistics_tx tx ;
   struct statistics_bt_activity bt_activity ;
};

#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct __anonstruct_max_delta_stats_483 {
   struct statistics_general_common common ;
   struct statistics_rx_non_phy rx_non_phy ;
   struct statistics_rx_phy rx_ofdm ;
   struct statistics_rx_ht_phy rx_ofdm_ht ;
   struct statistics_rx_phy rx_cck ;
   struct statistics_tx tx ;
   struct statistics_bt_activity bt_activity ;
};

#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct __anonstruct_device_pointers_484 {
   u32 error_event_table ;
   u32 log_event_table ;
};

#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_priv {
   struct iwl_trans *trans ;
   struct device *dev ;
   struct iwl_cfg const *cfg ;
   struct iwl_fw const *fw ;
   struct iwl_dvm_cfg const *lib ;
   unsigned long status ;
   spinlock_t sta_lock ;
   struct mutex mutex ;
   unsigned long transport_queue_stop ;
   bool passive_no_rx ;
   u8 queue_to_mac80211[32U] ;
   atomic_t queue_stop_count[32U] ;
   unsigned long agg_q_alloc[1U] ;
   struct ieee80211_hw *hw ;
   struct list_head calib_results ;
   struct workqueue_struct *workqueue ;
   struct iwl_hw_params hw_params ;
   enum ieee80211_band band ;
   u8 valid_contexts ;
   int (*rx_handlers[255U])(struct iwl_priv *, struct iwl_rx_cmd_buffer *, struct iwl_device_cmd *) ;
   struct iwl_notif_wait_data notif_wait ;
   struct iwl_spectrum_notification measure_report ;
   u8 measurement_status ;
   u32 ucode_beacon_time ;
   int missed_beacon_threshold ;
   u32 ibss_manager ;
   unsigned long rx_statistics_jiffies ;
   u32 rx_handlers_stats[255U] ;
   struct iwl_rf_reset rf_reset ;
   unsigned long reload_jiffies ;
   int reload_count ;
   bool ucode_loaded ;
   u8 plcp_delta_threshold ;
   s32 temperature ;
   s32 last_temperature ;
   struct iwl_wipan_noa_data *noa_data ;
   unsigned long scan_start ;
   unsigned long scan_start_tsf ;
   void *scan_cmd ;
   enum ieee80211_band scan_band ;
   struct cfg80211_scan_request *scan_request ;
   struct ieee80211_vif *scan_vif ;
   enum iwl_scan_type scan_type ;
   u8 scan_tx_ant[3U] ;
   u8 mgmt_tx_ant ;
   u8 sta_key_max_num ;
   bool new_scan_threshold_behaviour ;
   bool wowlan ;
   struct mac_address addresses[2U] ;
   struct iwl_rxon_context contexts[2U] ;
   __le16 switch_channel ;
   u8 start_calib ;
   struct iwl_sensitivity_data sensitivity_data ;
   struct iwl_chain_noise_data chain_noise_data ;
   __le16 sensitivity_tbl[11U] ;
   __le16 enhance_sensitivity_tbl[12U] ;
   struct iwl_ht_config current_ht_config ;
   u8 retry_rate ;
   int activity_timer_active ;
   struct iwl_power_mgr power_data ;
   struct iwl_tt_mgmt thermal_throttle ;
   int num_stations ;
   struct iwl_station_entry stations[16U] ;
   unsigned long ucode_key_table ;
   struct iwl_tid_data tid_data[16U][8U] ;
   atomic_t num_aux_in_flight ;
   u8 mac80211_registered ;
   u8 is_open ;
   enum nl80211_iftype iw_mode ;
   u64 timestamp ;
   struct __anonstruct_statistics_480 statistics ;
   struct __anonstruct_accum_stats_481 accum_stats ;
   struct __anonstruct_delta_stats_482 delta_stats ;
   struct __anonstruct_max_delta_stats_483 max_delta_stats ;
   u8 agg_tids_count ;
   struct iwl_rx_phy_res last_phy_res ;
   u32 ampdu_ref ;
   bool last_phy_res_valid ;
   u8 phy_calib_chain_noise_reset_cmd ;
   u8 phy_calib_chain_noise_gain_cmd ;
   struct reply_tx_error_statistics reply_tx_stats ;
   struct reply_agg_tx_error_statistics reply_agg_tx_stats ;
   u8 bt_enable_flag ;
   u8 bt_status ;
   u8 bt_traffic_load ;
   u8 last_bt_traffic_load ;
   bool bt_ch_announce ;
   bool bt_full_concurrent ;
   bool bt_ant_couple_ok ;
   __le32 kill_ack_mask ;
   __le32 kill_cts_mask ;
   __le16 bt_valid ;
   bool reduced_txpower ;
   u16 bt_on_thresh ;
   u16 bt_duration ;
   u16 dynamic_frag_thresh ;
   u8 bt_ci_compliance ;
   struct work_struct bt_traffic_change_work ;
   bool bt_enable_pspoll ;
   struct iwl_rxon_context *cur_rssi_ctx ;
   bool bt_is_sco ;
   struct work_struct restart ;
   struct work_struct scan_completed ;
   struct work_struct abort_scan ;
   struct work_struct beacon_update ;
   struct iwl_rxon_context *beacon_ctx ;
   struct sk_buff *beacon_skb ;
   void *beacon_cmd ;
   struct work_struct tt_work ;
   struct work_struct ct_enter ;
   struct work_struct ct_exit ;
   struct work_struct start_internal_scan ;
   struct work_struct tx_flush ;
   struct work_struct bt_full_concurrency ;
   struct work_struct bt_runtime_config ;
   struct delayed_work scan_check ;
   s8 tx_power_user_lmt ;
   s8 tx_power_next ;
   struct dentry *debugfs_dir ;
   u32 dbgfs_sram_offset ;
   u32 dbgfs_sram_len ;
   bool disable_ht40 ;
   void *wowlan_sram ;
   struct iwl_nvm_data *nvm_data ;
   u8 *eeprom_blob ;
   size_t eeprom_blob_size ;
   struct work_struct txpower_work ;
   u32 calib_disabled ;
   struct work_struct run_time_calib_work ;
   struct timer_list statistics_periodic ;
   struct timer_list ucode_trace ;
   struct iwl_event_log event_log ;
   struct led_classdev led ;
   unsigned long blink_on ;
   unsigned long blink_off ;
   bool led_registered ;
   u8 kck[16U] ;
   u8 kek[16U] ;
   __le64 replay_ctr ;
   __le16 last_seq_ctl ;
   bool have_rekey_data ;
   struct wiphy_wowlan_support wowlan_support ;
   struct __anonstruct_device_pointers_484 device_pointers ;
   enum iwl_ucode_type cur_ucode ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11752 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
};

#line 677  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_msrment_ie {
   u8 token ;
   u8 mode ;
   u8 type ;
   u8 request[0U] ;
};

#line 700  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ext_chansw_ie {
   u8 mode ;
   u8 new_operating_class ;
   u8 new_ch_num ;
   u8 count ;
};

#line 831  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_tpc_report_ie {
   u8 tx_power ;
   u8 link_margin ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_auth_812 {
   __le16 auth_alg ;
   __le16 auth_transaction ;
   __le16 status_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_deauth_813 {
   __le16 reason_code ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_assoc_req_814 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_assoc_resp_815 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_reassoc_resp_816 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_reassoc_req_817 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_disassoc_818 {
   __le16 reason_code ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_beacon_819 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_probe_req_820 {
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_probe_resp_821 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_wme_action_824 {
   u8 action_code ;
   u8 dialog_token ;
   u8 status_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_chan_switch_825 {
   u8 action_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_ext_chan_switch_826 {
   u8 action_code ;
   struct ieee80211_ext_chansw_ie data ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_measurement_827 {
   u8 action_code ;
   u8 dialog_token ;
   u8 element_id ;
   u8 length ;
   struct ieee80211_msrment_ie msr_elem ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_addba_req_828 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capab ;
   __le16 timeout ;
   __le16 start_seq_num ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_addba_resp_829 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 status ;
   __le16 capab ;
   __le16 timeout ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_delba_830 {
   u8 action_code ;
   __le16 params ;
   __le16 reason_code ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_self_prot_831 {
   u8 action_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_mesh_action_832 {
   u8 action_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_sa_query_833 {
   u8 action ;
   u8 trans_id[2U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_ht_smps_834 {
   u8 action ;
   u8 smps_control ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_ht_notify_cw_835 {
   u8 action_code ;
   u8 chanwidth ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_tdls_discover_resp_836 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capability ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_vht_opmode_notif_837 {
   u8 action_code ;
   u8 operating_mode ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_tpc_report_838 {
   u8 action_code ;
   u8 dialog_token ;
   u8 tpc_elem_id ;
   u8 tpc_elem_length ;
   struct ieee80211_tpc_report_ie tpc ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
union __anonunion_u_823 {
   struct __anonstruct_wme_action_824 wme_action ;
   struct __anonstruct_chan_switch_825 chan_switch ;
   struct __anonstruct_ext_chan_switch_826 ext_chan_switch ;
   struct __anonstruct_measurement_827 measurement ;
   struct __anonstruct_addba_req_828 addba_req ;
   struct __anonstruct_addba_resp_829 addba_resp ;
   struct __anonstruct_delba_830 delba ;
   struct __anonstruct_self_prot_831 self_prot ;
   struct __anonstruct_mesh_action_832 mesh_action ;
   struct __anonstruct_sa_query_833 sa_query ;
   struct __anonstruct_ht_smps_834 ht_smps ;
   struct __anonstruct_ht_notify_cw_835 ht_notify_cw ;
   struct __anonstruct_tdls_discover_resp_836 tdls_discover_resp ;
   struct __anonstruct_vht_opmode_notif_837 vht_opmode_notif ;
   struct __anonstruct_tpc_report_838 tpc_report ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_action_822 {
   u8 category ;
   union __anonunion_u_823 u ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
union __anonunion_u_811 {
   struct __anonstruct_auth_812 auth ;
   struct __anonstruct_deauth_813 deauth ;
   struct __anonstruct_assoc_req_814 assoc_req ;
   struct __anonstruct_assoc_resp_815 assoc_resp ;
   struct __anonstruct_reassoc_resp_816 reassoc_resp ;
   struct __anonstruct_reassoc_req_817 reassoc_req ;
   struct __anonstruct_disassoc_818 disassoc ;
   struct __anonstruct_beacon_819 beacon ;
   struct __anonstruct_probe_req_820 probe_req ;
   struct __anonstruct_probe_resp_821 probe_resp ;
   struct __anonstruct_action_822 action ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mgmt {
   __le16 frame_control ;
   __le16 duration ;
   u8 da[6U] ;
   u8 sa[6U] ;
   u8 bssid[6U] ;
   __le16 seq_ctrl ;
   union __anonunion_u_811 u ;
};

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) count : 5 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) flags : 11 ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_856 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_rts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_cts_prot : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) short_preamble : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skip_table : 1 ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_855 {
   struct __anonstruct_856 __anonCompField___anonunion_855_96 ;
   unsigned long jiffies ;
};

#line 819 
struct ieee80211_key_conf;

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_control_854 {
   union __anonunion_855 __anonCompField___anonstruct_control_854_97 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_ack_857 {
   u64 cookie ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_status_858 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   void *status_driver_data[2U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_859 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_853 {
   struct __anonstruct_control_854 control ;
   struct __anonstruct_ack_857 ack ;
   struct __anonstruct_status_858 status ;
   struct __anonstruct_859 __anonCompField___anonunion_853_98 ;
   void *driver_data[5U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id ;
   union __anonunion_853 __anonCompField_ieee80211_tx_info_99 ;
};

#line 1432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   u8 flags ;
   s8 keyidx ;
   u8 keylen ;
   u8 key[0U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_875 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_877 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_883 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_885 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-ucode.h"
union __anonunion___u_903 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-ucode.h"
union __anonunion___u_905 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-ucode.h"
union __anonunion___u_907 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-ucode.h"
union __anonunion___u_909 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-iwlwifi.h"
union __anonunion___u_951 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-iwlwifi.h"
union __anonunion___u_953 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-iwlwifi.h"
union __anonunion___u_955 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-iwlwifi.h"
union __anonunion___u_957 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_tx_ant_config_cmd {
   __le32 valid ;
};

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_error_event_table {
   u32 valid ;
   u32 error_id ;
   u32 pc ;
   u32 blink1 ;
   u32 blink2 ;
   u32 ilink1 ;
   u32 ilink2 ;
   u32 data1 ;
   u32 data2 ;
   u32 line ;
   u32 bcon_time ;
   u32 tsf_low ;
   u32 tsf_hi ;
   u32 gp1 ;
   u32 gp2 ;
   u32 gp3 ;
   u32 ucode_ver ;
   u32 hw_ver ;
   u32 brd_ver ;
   u32 log_pc ;
   u32 frame_ptr ;
   u32 stack_ptr ;
   u32 hcmd ;
   u32 isr0 ;
   u32 isr1 ;
   u32 isr2 ;
   u32 isr3 ;
   u32 isr4 ;
   u32 isr_pref ;
   u32 wait_event ;
   u32 l2p_control ;
   u32 l2p_duration ;
   u32 l2p_mhvalid ;
   u32 l2p_addr_match ;
   u32 lmpm_pmg_sel ;
   u32 u_timestamp ;
   u32 flow_handler ;
};

#line 1128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_dram_scratch {
   u8 try_cnt ;
   u8 bt_kill_cnt ;
   __le16 reserved ;
};

#line 1242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
union __anonunion_stop_time_958 {
   __le32 life_time ;
   __le32 attempt ;
};

#line 1242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
union __anonunion_timeout_959 {
   __le16 pm_frame_timeout ;
   __le16 attempt_duration ;
};

#line 1242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_tx_cmd {
   __le16 len ;
   __le16 next_frame_len ;
   __le32 tx_flags ;
   struct iwl_dram_scratch scratch ;
   __le32 rate_n_flags ;
   u8 sta_id ;
   u8 sec_ctl ;
   u8 initial_rate_index ;
   u8 reserved ;
   u8 key[16U] ;
   __le16 next_frame_flags ;
   __le16 reserved2 ;
   union __anonunion_stop_time_958 stop_time ;
   __le32 dram_lsb_ptr ;
   u8 dram_msb_ptr ;
   u8 rts_retry_limit ;
   u8 data_retry_limit ;
   u8 tid_tspec ;
   union __anonunion_timeout_959 timeout ;
   __le16 driver_txop ;
   u8 payload[0U] ;
   struct ieee80211_hdr hdr[0U] ;
};

#line 1826  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_bt_cmd {
   u8 flags ;
   u8 lead_time ;
   u8 max_kill ;
   u8 reserved ;
   __le32 kill_ack_mask ;
   __le32 kill_cts_mask ;
};

#line 2224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_ct_kill_config {
   __le32 reserved ;
   __le32 critical_temperature_M ;
   __le32 critical_temperature_R ;
};

#line 2235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_ct_kill_throttling_config {
   __le32 critical_temperature_exit ;
   __le32 reserved ;
   __le32 critical_temperature_enter ;
};

#line 2495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_tx_beacon_cmd {
   struct iwl_tx_cmd tx ;
   __le16 tim_idx ;
   u8 tim_size ;
   u8 reserved1 ;
   struct ieee80211_hdr frame[0U] ;
};

#line 2740  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_statistics_cmd {
   __le32 configuration_flags ;
};

#line 3109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_calib_cfg_elmnt_s {
   __le32 is_enable ;
   __le32 start ;
   __le32 send_res ;
   __le32 apply_res ;
   __le32 reserved ;
};

#line 3196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_calib_cfg_status_s {
   struct iwl_calib_cfg_elmnt_s once ;
   struct iwl_calib_cfg_elmnt_s perd ;
   __le32 flags ;
};

#line 3202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_calib_cfg_cmd {
   struct iwl_calib_cfg_status_s ucd_calib_cfg ;
   struct iwl_calib_cfg_status_s drv_calib_cfg ;
   __le32 reserved1 ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
struct __anonstruct_read_971 {
   u32 capacity ;
   u32 mode ;
   u32 wrap_counter ;
   u32 write_counter ;
};

#line 1066  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
union __anonunion___u_973 {
   struct iwl_wipan_noa_data *__val ;
   char __c[1U] ;
};

#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
struct __anonstruct_advanced_lookup_975 {
   char *name ;
   u8 num ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_rx_status;

#line 997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 vht_flag ;
   u8 rate_idx ;
   u8 vht_nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_1364 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_1366 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_error_resp {
   __le32 error_type ;
   u8 cmd_id ;
   u8 reserved1 ;
   __le16 bad_cmd_seq_num ;
   __le32 error_info ;
   __le64 timestamp ;
};

#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_csa_notification {
   __le16 band ;
   __le16 channel ;
   __le32 status ;
};

#line 1038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_non_cfg_phy {
   __le32 non_cfg_phy[8U] ;
};

#line 1123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_rx_mpdu_res_start {
   __le16 byte_count ;
   __le16 reserved ;
};

#line 1379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct agg_tx_status {
   __le16 status ;
   __le16 sequence ;
};

#line 1439  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_tx_resp {
   u8 frame_count ;
   u8 bt_kill_count ;
   u8 failure_rts ;
   u8 failure_frame ;
   __le32 rate_n_flags ;
   __le16 wireless_media_time ;
   u8 pa_status ;
   u8 pa_integ_res_a[3U] ;
   u8 pa_integ_res_b[3U] ;
   u8 pa_integ_res_C[3U] ;
   __le32 tfd_info ;
   __le16 seq_ctl ;
   __le16 byte_cnt ;
   u8 tlc_info ;
   u8 ra_tid ;
   __le16 frame_ctrl ;
   struct agg_tx_status status ;
};

#line 2179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_sleep_notification {
   u8 pm_sleep_mode ;
   u8 pm_wakeup_src ;
   __le16 reserved ;
   __le32 sleep_time ;
   __le32 tsf_low ;
   __le32 bcon_timer ;
};

#line 2217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_card_state_notif {
   __le32 flags ;
};

#line 2477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_beacon_notif {
   struct iwlagn_tx_resp beacon_notify_hdr ;
   __le32 low_tsf ;
   __le32 high_tsf ;
   __le32 ibss_mgr_status ;
};

#line 2613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_rx_non_phy_bt {
   struct statistics_rx_non_phy common ;
   __le32 num_bt_kills ;
   __le32 reserved[2U] ;
};

#line 2620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_rx {
   struct statistics_rx_phy ofdm ;
   struct statistics_rx_phy cck ;
   struct statistics_rx_non_phy general ;
   struct statistics_rx_ht_phy ofdm_ht ;
};

#line 2627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_rx_bt {
   struct statistics_rx_phy ofdm ;
   struct statistics_rx_phy cck ;
   struct statistics_rx_non_phy_bt general ;
   struct statistics_rx_ht_phy ofdm_ht ;
};

#line 2727  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_general {
   struct statistics_general_common common ;
   __le32 reserved2 ;
   __le32 reserved3 ;
};

#line 2733  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct statistics_general_bt {
   struct statistics_general_common common ;
   struct statistics_bt_activity activity ;
   __le32 reserved2 ;
   __le32 reserved3 ;
};

#line 2765  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_notif_statistics {
   __le32 flag ;
   struct statistics_rx rx ;
   struct statistics_tx tx ;
   struct statistics_general general ;
};

#line 2790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_bt_notif_statistics {
   __le32 flag ;
   struct statistics_rx_bt rx ;
   struct statistics_tx tx ;
   struct statistics_general_bt general ;
};

#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_missed_beacon_notif {
   __le32 consecutive_missed_beacons ;
   __le32 total_missed_becons ;
   __le32 num_expected_beacons ;
   __le32 num_recvd_beacons ;
};

#line 3975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_wipan_noa_descriptor {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 starttime ;
};

#line 3993  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_wipan_noa_attribute {
   u8 id ;
   __le16 length ;
   u8 index ;
   u8 ct_window ;
   struct iwl_wipan_noa_descriptor descr0 ;
   struct iwl_wipan_noa_descriptor descr1 ;
   u8 reserved ;
};

#line 4002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_wipan_noa_notification {
   u32 noa_active ;
   struct iwl_wipan_noa_attribute noa_attribute ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __be64;

#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
};

#line 2524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};

#line 2600 
enum nl80211_channel_type {
    NL80211_CHAN_NO_HT = 0,
    NL80211_CHAN_HT20 = 1,
    NL80211_CHAN_HT40MINUS = 2,
    NL80211_CHAN_HT40PLUS = 3
};

#line 3559 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u32 filled ;
   s8 noise ;
};

#line 914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
};

#line 964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};

#line 989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct station_info {
   u32 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 const *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   struct cfg80211_tid_stats pertid[17U] ;
};

#line 1882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_control_1815 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};

#line 1882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_1815 control[3U] ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_nd_match {
   struct cfg80211_ssid ssid ;
   int n_channels ;
   u32 channels[] ;
};

#line 2040  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_nd_info {
   int n_matches ;
   struct cfg80211_wowlan_nd_match *matches[] ;
};

#line 2054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_wakeup {
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   bool packet_80211 ;
   bool tcp_match ;
   bool tcp_connlost ;
   bool tcp_nomoretokens ;
   s32 pattern_idx ;
   u32 packet_present_len ;
   u32 packet_len ;
   void const *packet ;
   struct cfg80211_wowlan_nd_info *net_detect ;
};

#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 const *kek ;
   u8 const *kck ;
   u8 const *replay_ctr ;
};

#line 5244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};

#line 224 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};

#line 287 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};

#line 294 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};

#line 369 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};

#line 376 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};

#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};

#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};

#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_u_1817 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};

#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_1817 u ;
};

#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 const *ies[3U] ;
   size_t len[3U] ;
   u8 const *common_ies ;
   size_t common_ie_len ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_tkip_1826 {
   u32 iv32 ;
   u16 iv16 ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_ccmp_1827 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_aes_cmac_1828 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_aes_gmac_1829 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_gcmp_1830 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_hw_1831 {
   u8 seq[16U] ;
   u8 seq_len ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_1825 {
   struct __anonstruct_tkip_1826 tkip ;
   struct __anonstruct_ccmp_1827 ccmp ;
   struct __anonstruct_aes_cmac_1828 aes_cmac ;
   struct __anonstruct_aes_gmac_1829 aes_gmac ;
   struct __anonstruct_gcmp_1830 gcmp ;
   struct __anonstruct_hw_1831 hw ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_1825 __anonCompField_ieee80211_key_seq_100 ;
};

#line 1577 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};

#line 1582 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};

#line 1703 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};

#line 1708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};

#line 1748 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    NUM_IEEE80211_HW_FLAGS = 29
};

#line 2070  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};

#line 2084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};

#line 2194 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};

#line 2204 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};

#line 2216 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};

#line 2221 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};

#line 2226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 const *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_remove_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params const *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, enum ieee80211_ampdu_mlme_action , struct ieee80211_sta *, u16 , u16 *, u8 ) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask const *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event const *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_1848 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_1850 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-notif-wait.h"
struct iwl_notification_wait {
   struct list_head list ;
   bool (*fn)(struct iwl_notif_wait_data *, struct iwl_rx_packet *, void *) ;
   void *fn_data ;
   u8 cmds[5U] ;
   u8 n_cmds ;
   bool triggered ;
   bool aborted ;
};

#line 3819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct tkip_sc {
   __le16 iv16 ;
   __le16 pad ;
   __le32 iv32 ;
};

#line 3830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_tkip_rsc_tsc {
   struct tkip_sc unicast_rsc[16U] ;
   struct tkip_sc multicast_rsc[16U] ;
   struct tkip_sc tsc ;
};

#line 3836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct aes_sc {
   __le64 pn ;
};

#line 3840  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_aes_rsc_tsc {
   struct aes_sc unicast_rsc[16U] ;
   struct aes_sc multicast_rsc[16U] ;
   struct aes_sc tsc ;
};

#line 3846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
union iwlagn_all_tsc_rsc {
   struct iwlagn_tkip_rsc_tsc tkip ;
   struct iwlagn_aes_rsc_tsc aes ;
};

#line 3894  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_wowlan_status {
   __le64 replay_ctr ;
   __le32 rekey_status ;
   __le32 wakeup_reason ;
   u8 pattern_number ;
   u8 reserved1 ;
   __le16 qos_seq_ctr[8U] ;
   __le16 non_qos_seq_ctr ;
   __le16 reserved2 ;
   union iwlagn_all_tsc_rsc tsc_rsc ;
   __le16 reserved3 ;
};

#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
enum iwl_table_type {
    LQ_NONE = 0,
    LQ_G = 1,
    LQ_A = 2,
    LQ_SISO = 3,
    LQ_MIMO2 = 4,
    LQ_MIMO3 = 5,
    LQ_MAX = 6
};

#line 291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
struct iwl_rate_scale_data {
   u64 data ;
   s32 success_counter ;
   s32 success_ratio ;
   s32 counter ;
   s32 average_tpt ;
   unsigned long stamp ;
};

#line 303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
struct iwl_scale_tbl_info {
   enum iwl_table_type lq_type ;
   u8 ant_type ;
   u8 is_SGI ;
   u8 is_ht40 ;
   u8 is_dup ;
   u8 action ;
   u8 max_search ;
   u16 const *expected_tpt ;
   u32 current_rate ;
   struct iwl_rate_scale_data win[13U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
struct iwl_traffic_load {
   unsigned long time_stamp ;
   u32 packet_count[20U] ;
   u32 total ;
   u8 queue_count ;
   u8 head ;
};

#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
struct iwl_lq_sta {
   u8 active_tbl ;
   u8 enable_counter ;
   u8 stay_in_tbl ;
   u8 search_better_tbl ;
   s32 last_tpt ;
   u32 table_count_limit ;
   u32 max_failure_limit ;
   u32 max_success_limit ;
   u32 table_count ;
   u32 total_failed ;
   u32 total_success ;
   u64 flush_timer ;
   u8 action_counter ;
   u8 is_green ;
   u8 is_dup ;
   enum ieee80211_band band ;
   u32 supp_rates ;
   u16 active_legacy_rate ;
   u16 active_siso_rate ;
   u16 active_mimo2_rate ;
   u16 active_mimo3_rate ;
   s8 max_rate_idx ;
   u8 missed_rate_counter ;
   struct iwl_link_quality_cmd lq ;
   struct iwl_scale_tbl_info lq_info[2U] ;
   struct iwl_traffic_load load[8U] ;
   u8 tx_agg_tid_en ;
   struct dentry *rs_sta_dbgfs_scale_table_file ;
   struct dentry *rs_sta_dbgfs_stats_table_file ;
   struct dentry *rs_sta_dbgfs_rate_scale_data_file ;
   struct dentry *rs_sta_dbgfs_tx_agg_tid_en_file ;
   u32 dbg_fixed_rate ;
   struct iwl_priv *drv ;
   int last_txrate_idx ;
   u32 last_rate_n_flags ;
   u8 is_agg ;
   u8 last_bt_traffic ;
};

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_station_priv {
   struct iwl_rxon_context *ctx ;
   struct iwl_lq_sta lq_sta ;
   atomic_t pending_frames ;
   bool client ;
   bool asleep ;
   u8 max_agg_bufsize ;
   u8 sta_id ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
struct iwl_vif_priv {
   struct iwl_rxon_context *ctx ;
   u8 ibss_bssid_sta_id ;
};

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
struct iwl_resume_data {
   struct iwl_priv *priv ;
   struct iwlagn_wowlan_status *cmd ;
   bool valid ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
struct error_table_start {
   u32 valid ;
   u32 error_id ;
};

#line 857 
enum ldv_36868 {
    NONE = 0,
    ADD = 1,
    REMOVE = 2,
    HT_RATE_INIT = 3,
    ADD_RATE_INIT = 4
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11668 {
    WORK_STRUCT_PENDING_BIT_0 = 0,
    WORK_STRUCT_DELAYED_BIT_0 = 1,
    WORK_STRUCT_PWQ_BIT_0 = 2,
    WORK_STRUCT_LINKED_BIT_0 = 3,
    WORK_STRUCT_STATIC_BIT_0 = 4,
    WORK_STRUCT_COLOR_SHIFT_0 = 5,
    WORK_STRUCT_COLOR_BITS_0 = 4,
    WORK_STRUCT_PENDING_0 = 1,
    WORK_STRUCT_DELAYED_0 = 2,
    WORK_STRUCT_PWQ_0 = 4,
    WORK_STRUCT_LINKED_0 = 8,
    WORK_STRUCT_STATIC_0 = 16,
    WORK_NR_COLORS_0 = 15,
    WORK_NO_COLOR_0 = 15,
    WORK_CPU_UNBOUND_0 = 8192,
    WORK_STRUCT_FLAG_BITS_0 = 9,
    WORK_OFFQ_FLAG_BASE_0 = 5,
    __WORK_OFFQ_CANCELING_0 = 5,
    WORK_OFFQ_CANCELING_0 = 32,
    WORK_OFFQ_FLAG_BITS_0 = 1,
    WORK_OFFQ_POOL_SHIFT_0 = 6,
    WORK_OFFQ_LEFT_0 = 58,
    WORK_OFFQ_POOL_BITS_0 = 31,
    WORK_OFFQ_POOL_NONE_0 = 2147483647,
    WORK_STRUCT_FLAG_MASK_0 = 511,
    WORK_STRUCT_WQ_DATA_MASK_0 = -512,
    WORK_STRUCT_NO_POOL_0 = 137438953408,
    WORK_BUSY_PENDING_0 = 1,
    WORK_BUSY_RUNNING_0 = 2,
    WORKER_DESC_LEN_0 = 24
};

#line 2242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_scan_channel {
   __le32 type ;
   __le16 channel ;
   u8 tx_gain ;
   u8 dsp_atten ;
   __le16 active_dwell ;
   __le16 passive_dwell ;
};

#line 2287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_ssid_ie {
   u8 id ;
   u8 len ;
   u8 ssid[32U] ;
};

#line 2308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_scan_cmd {
   __le16 len ;
   u8 scan_flags ;
   u8 channel_count ;
   __le16 quiet_time ;
   __le16 quiet_plcp_th ;
   __le16 good_CRC_th ;
   __le16 rx_chain ;
   __le32 max_out_time ;
   __le32 suspend_time ;
   __le32 flags ;
   __le32 filter_flags ;
   struct iwl_tx_cmd tx_cmd ;
   struct iwl_ssid_ie direct_scan[20U] ;
   u8 data[0U] ;
};

#line 2412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_scanreq_notification {
   __le32 status ;
};

#line 2424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_scanstart_notification {
   __le32 tsf_low ;
   __le32 tsf_high ;
   __le32 beacon_timer ;
   u8 channel ;
   u8 band ;
   u8 reserved[2U] ;
   __le32 status ;
};

#line 2437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_scanresults_notification {
   u8 channel ;
   u8 band ;
   u8 probe_status ;
   u8 num_probe_not_sent ;
   __le32 tsf_low ;
   __le32 tsf_high ;
   __le32 statistics[1U] ;
};

#line 2460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_scancomplete_notification {
   u8 scanned_channels ;
   u8 status ;
   u8 bt_status ;
   u8 last_channel ;
   __le32 tsf_low ;
   __le32 tsf_high ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11478 {
    WORK_STRUCT_PENDING_BIT_1 = 0,
    WORK_STRUCT_DELAYED_BIT_1 = 1,
    WORK_STRUCT_PWQ_BIT_1 = 2,
    WORK_STRUCT_LINKED_BIT_1 = 3,
    WORK_STRUCT_STATIC_BIT_1 = 4,
    WORK_STRUCT_COLOR_SHIFT_1 = 5,
    WORK_STRUCT_COLOR_BITS_1 = 4,
    WORK_STRUCT_PENDING_1 = 1,
    WORK_STRUCT_DELAYED_1 = 2,
    WORK_STRUCT_PWQ_1 = 4,
    WORK_STRUCT_LINKED_1 = 8,
    WORK_STRUCT_STATIC_1 = 16,
    WORK_NR_COLORS_1 = 15,
    WORK_NO_COLOR_1 = 15,
    WORK_CPU_UNBOUND_1 = 8192,
    WORK_STRUCT_FLAG_BITS_1 = 9,
    WORK_OFFQ_FLAG_BASE_1 = 5,
    __WORK_OFFQ_CANCELING_1 = 5,
    WORK_OFFQ_CANCELING_1 = 32,
    WORK_OFFQ_FLAG_BITS_1 = 1,
    WORK_OFFQ_POOL_SHIFT_1 = 6,
    WORK_OFFQ_LEFT_1 = 58,
    WORK_OFFQ_POOL_BITS_1 = 31,
    WORK_OFFQ_POOL_NONE_1 = 2147483647,
    WORK_STRUCT_FLAG_MASK_1 = 511,
    WORK_STRUCT_WQ_DATA_MASK_1 = -512,
    WORK_STRUCT_NO_POOL_1 = 137438953408,
    WORK_BUSY_PENDING_1 = 1,
    WORK_BUSY_RUNNING_1 = 2,
    WORKER_DESC_LEN_1 = 24
};

#line 346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_tx_power_dbm_cmd {
   s8 global_lmt ;
   u8 flags ;
   s8 srv_chan_lmt ;
   u8 reserved ;
};

#line 966  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_txfifo_flush_cmd_v3 {
   __le32 queue_control ;
   __le16 flush_control ;
   __le16 reserved ;
};

#line 1013  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_txfifo_flush_cmd_v2 {
   __le16 queue_control ;
   __le16 flush_control ;
};

#line 1889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_basic_bt_cmd {
   u8 flags ;
   u8 ledtime ;
   u8 max_kill ;
   u8 bt3_timer_t7_value ;
   __le32 kill_ack_mask ;
   __le32 kill_cts_mask ;
   u8 bt3_prio_sample_time ;
   u8 bt3_timer_t2_value ;
   __le16 bt4_reaction_time ;
   __le32 bt3_lookup_table[12U] ;
   u8 reduce_txpower ;
   u8 reserved ;
   __le16 valid ;
};

#line 1965  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_bt_cmd_v1 {
   struct iwl_basic_bt_cmd basic ;
   u8 prio_boost ;
   u8 tx_prio_boost ;
   __le16 rx_prio_boost ;
};

#line 1976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_bt_cmd_v2 {
   struct iwl_basic_bt_cmd basic ;
   __le32 prio_boost ;
   u8 reserved ;
   u8 tx_prio_boost ;
   __le16 rx_prio_boost ;
};

#line 3487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_bt_uart_msg {
   u8 header ;
   u8 frame1 ;
   u8 frame2 ;
   u8 frame3 ;
   u8 frame4 ;
   u8 frame5 ;
   u8 frame6 ;
   u8 frame7 ;
};

#line 3694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_bt_coex_profile_notif {
   struct iwl_bt_uart_msg last_bt_uart_msg ;
   u8 bt_status ;
   u8 bt_traffic_load ;
   u8 bt_ci_compliance ;
   u8 reserved ;
};

#line 3768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_d3_config_cmd {
   __le32 min_sleep_time ;
   __le32 wakeup_flags ;
};

#line 3776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_wowlan_pattern {
   u8 mask[16U] ;
   u8 pattern[128U] ;
   u8 mask_size ;
   u8 pattern_size ;
   __le16 reserved ;
};

#line 3790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_wowlan_patterns_cmd {
   __le32 n_patterns ;
   struct iwlagn_wowlan_pattern patterns[] ;
};

#line 3809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_wowlan_wakeup_filter_cmd {
   __le32 enabled ;
   __le16 non_qos_seq ;
   __le16 reserved ;
   __le16 qos_seq[8U] ;
};

#line 3851  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_wowlan_rsc_tsc_params_cmd {
   union iwlagn_all_tsc_rsc all_tsc_rsc ;
};

#line 3855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_mic_keys {
   u8 tx[8U] ;
   u8 rx_unicast[8U] ;
   u8 rx_mcast[8U] ;
};

#line 3866  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_p1k_cache {
   __le16 p1k[5U] ;
};

#line 3870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_wowlan_tkip_params_cmd {
   struct iwlagn_mic_keys mic_keys ;
   struct iwlagn_p1k_cache tx ;
   struct iwlagn_p1k_cache rx_uni[2U] ;
   struct iwlagn_p1k_cache rx_multi[2U] ;
};

#line 3879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwlagn_wowlan_kek_kck_material_cmd {
   u8 kck[32U] ;
   u8 kek[32U] ;
   __le16 kck_len ;
   __le16 kek_len ;
   __le64 replay_ctr ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.h"
struct iwl_rate_info {
   u8 plcp ;
   u8 plcp_siso ;
   u8 plcp_mimo2 ;
   u8 plcp_mimo3 ;
   u8 ieee ;
   u8 prev_ieee ;
   u8 next_ieee ;
   u8 prev_rs ;
   u8 next_rs ;
   u8 prev_rs_tgg ;
   u8 next_rs_tgg ;
};

#line 908  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
struct wowlan_key_data {
   struct iwl_rxon_context *ctx ;
   struct iwlagn_wowlan_rsc_tsc_params_cmd *rsc_tsc ;
   struct iwlagn_wowlan_tkip_params_cmd *tkip ;
   u8 const *bssid ;
   bool error ;
   bool use_rsc_tsc ;
   bool use_tkip ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11738 {
    WORK_STRUCT_PENDING_BIT_2 = 0,
    WORK_STRUCT_DELAYED_BIT_2 = 1,
    WORK_STRUCT_PWQ_BIT_2 = 2,
    WORK_STRUCT_LINKED_BIT_2 = 3,
    WORK_STRUCT_STATIC_BIT_2 = 4,
    WORK_STRUCT_COLOR_SHIFT_2 = 5,
    WORK_STRUCT_COLOR_BITS_2 = 4,
    WORK_STRUCT_PENDING_2 = 1,
    WORK_STRUCT_DELAYED_2 = 2,
    WORK_STRUCT_PWQ_2 = 4,
    WORK_STRUCT_LINKED_2 = 8,
    WORK_STRUCT_STATIC_2 = 16,
    WORK_NR_COLORS_2 = 15,
    WORK_NO_COLOR_2 = 15,
    WORK_CPU_UNBOUND_2 = 8192,
    WORK_STRUCT_FLAG_BITS_2 = 9,
    WORK_OFFQ_FLAG_BASE_2 = 5,
    __WORK_OFFQ_CANCELING_2 = 5,
    WORK_OFFQ_CANCELING_2 = 32,
    WORK_OFFQ_FLAG_BITS_2 = 1,
    WORK_OFFQ_POOL_SHIFT_2 = 6,
    WORK_OFFQ_LEFT_2 = 58,
    WORK_OFFQ_POOL_BITS_2 = 31,
    WORK_OFFQ_POOL_NONE_2 = 2147483647,
    WORK_STRUCT_FLAG_MASK_2 = 511,
    WORK_STRUCT_WQ_DATA_MASK_2 = -512,
    WORK_STRUCT_NO_POOL_2 = 137438953408,
    WORK_BUSY_PENDING_2 = 1,
    WORK_BUSY_RUNNING_2 = 2,
    WORKER_DESC_LEN_2 = 24
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_3195 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_3197 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_3203 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_3205 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_alive_resp {
   u8 ucode_minor ;
   u8 ucode_major ;
   __le16 reserved1 ;
   u8 sw_rev[8U] ;
   u8 ver_type ;
   u8 ver_subtype ;
   __le16 reserved2 ;
   __le32 log_event_table_ptr ;
   __le32 error_event_table_ptr ;
   __le32 timestamp ;
   __le32 is_valid ;
};

#line 3208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_calib_hdr {
   u8 op_code ;
   u8 first_group ;
   u8 groups_num ;
   u8 data_valid ;
};

#line 3220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_calib_xtal_freq_cmd {
   struct iwl_calib_hdr hdr ;
   u8 cap_pin1 ;
   u8 cap_pin2 ;
   u8 pad[2U] ;
};

#line 3227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_calib_temperature_offset_cmd {
   struct iwl_calib_hdr hdr ;
   __le16 radio_sensor_offset ;
   __le16 reserved ;
};

#line 3234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_calib_temperature_offset_v2_cmd {
   struct iwl_calib_hdr hdr ;
   __le16 radio_sensor_offset_high ;
   __le16 radio_sensor_offset_low ;
   __le16 burntVoltageRef ;
   __le16 reserved ;
};

#line 3299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_wimax_coex_event_entry {
   u8 request_prio ;
   u8 win_medium_prio ;
   u8 reserved ;
   u8 flags ;
};

#line 3415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_wimax_coex_cmd {
   u8 flags ;
   u8 reserved[3U] ;
   struct iwl_wimax_coex_event_entry sta_prio[16U] ;
};

#line 3734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_bt_coex_prio_table_cmd {
   u8 prio_tbl[16U] ;
};

#line 3751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_bt_coex_prot_env_cmd {
   u8 action ;
   u8 type ;
   u8 reserved[2U] ;
};

#line 287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
struct iwl_alive_data {
   bool valid ;
   u8 subtype ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_4145 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_4147 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl5000_channel_switch_cmd {
   u8 band ;
   u8 expect_beacon ;
   __le16 channel ;
   __le32 rxon_flags ;
   __le32 rxon_filter_flags ;
   __le32 switch_time ;
   __le32 reserved[2U][26U] ;
};

#line 699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl6000_channel_switch_cmd {
   u8 band ;
   u8 expect_beacon ;
   __le16 channel ;
   __le32 rxon_flags ;
   __le32 rxon_filter_flags ;
   __le32 switch_time ;
   __le32 reserved[3U][26U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_4617 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
union __anonunion___u_4619 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
enum mac80211_rate_control_flags {
    IEEE80211_TX_RC_USE_RTS_CTS = 1,
    IEEE80211_TX_RC_USE_CTS_PROTECT = 2,
    IEEE80211_TX_RC_USE_SHORT_PREAMBLE = 4,
    IEEE80211_TX_RC_MCS = 8,
    IEEE80211_TX_RC_GREEN_FIELD = 16,
    IEEE80211_TX_RC_40_MHZ_WIDTH = 32,
    IEEE80211_TX_RC_DUP_DATA = 64,
    IEEE80211_TX_RC_SHORT_GI = 128,
    IEEE80211_TX_RC_VHT_MCS = 256,
    IEEE80211_TX_RC_80_MHZ_WIDTH = 512,
    IEEE80211_TX_RC_160_MHZ_WIDTH = 1024
};

#line 5076  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_rate_control {
   struct ieee80211_hw *hw ;
   struct ieee80211_supported_band *sband ;
   struct ieee80211_bss_conf *bss_conf ;
   struct sk_buff *skb ;
   struct ieee80211_tx_rate reported_rate ;
   bool rts ;
   bool short_preamble ;
   u8 max_rate_idx ;
   u32 rate_idx_mask ;
   u8 *rate_idx_mcs_mask ;
   bool bss ;
};

#line 5114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct rate_control_ops {
   char const *name ;
   void *(*alloc)(struct ieee80211_hw *, struct dentry *) ;
   void (*free)(void *) ;
   void *(*alloc_sta)(void *, struct ieee80211_sta *, gfp_t ) ;
   void (*rate_init)(void *, struct ieee80211_supported_band *, struct cfg80211_chan_def *, struct ieee80211_sta *, void *) ;
   void (*rate_update)(void *, struct ieee80211_supported_band *, struct cfg80211_chan_def *, struct ieee80211_sta *, void *, u32 ) ;
   void (*free_sta)(void *, struct ieee80211_sta *, void *) ;
   void (*tx_status_noskb)(void *, struct ieee80211_supported_band *, struct ieee80211_sta *, void *, struct ieee80211_tx_info *) ;
   void (*tx_status)(void *, struct ieee80211_supported_band *, struct ieee80211_sta *, void *, struct sk_buff *) ;
   void (*get_rate)(void *, struct ieee80211_sta *, void *, struct ieee80211_tx_rate_control *) ;
   void (*add_sta_debugfs)(void *, void *, struct dentry *) ;
   void (*remove_sta_debugfs)(void *, void *) ;
   u32 (*get_expected_throughput)(void *) ;
};

#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
struct iwl_rate_mcs_info {
   char mbps[12U] ;
   char mcs[12U] ;
};

#line 936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_add_sta_resp {
   u8 status ;
};

#line 948  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_rem_sta_resp {
   u8 status ;
};

#line 956  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_rem_sta_cmd {
   u8 num_sta ;
   u8 reserved[3U] ;
   u8 addr[6U] ;
   u8 reserved2[2U] ;
};

#line 1030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_wep_cmd {
   u8 num_keys ;
   u8 global_key_type ;
   u8 flags ;
   u8 reserved ;
   struct iwl_wep_key key[0U] ;
};

#line 2828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_sensitivity_cmd {
   __le16 control ;
   __le16 table[11U] ;
};

#line 3077  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_enhance_sensitivity_cmd {
   __le16 control ;
   __le16 enhance_table[23U] ;
};

#line 3248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_calib_chain_noise_gain_cmd {
   struct iwl_calib_hdr hdr ;
   u8 delta_gain_1 ;
   u8 delta_gain_2 ;
   u8 pad[2U] ;
};

#line 492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
struct iwl_calib_result {
   struct list_head list ;
   size_t cmd_len ;
   struct iwl_calib_hdr hdr ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
struct statistics_general_data {
   u32 beacon_silence_rssi_a ;
   u32 beacon_silence_rssi_b ;
   u32 beacon_silence_rssi_c ;
   u32 beacon_energy_a ;
   u32 beacon_energy_b ;
   u32 beacon_energy_c ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-modparams.h"
enum iwl_power_level {
    IWL_POWER_INDEX_1 = 0,
    IWL_POWER_INDEX_2 = 1,
    IWL_POWER_INDEX_3 = 2,
    IWL_POWER_INDEX_4 = 3,
    IWL_POWER_INDEX_5 = 4,
    IWL_POWER_NUM = 5
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
struct iwl_power_vec_entry {
   struct iwl_powertable_cmd cmd ;
   u8 no_dtim ;
};

#line 641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_rxon_assoc_cmd {
   __le32 flags ;
   __le32 filter_flags ;
   u8 ofdm_basic_rates ;
   u8 cck_basic_rates ;
   __le16 reserved1 ;
   u8 ofdm_ht_single_stream_basic_rates ;
   u8 ofdm_ht_dual_stream_basic_rates ;
   u8 ofdm_ht_triple_stream_basic_rates ;
   u8 reserved2 ;
   __le16 rx_chain_select_flags ;
   __le16 acquisition_data ;
   __le32 reserved3 ;
};

#line 3242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_calib_chain_noise_reset_cmd {
   struct iwl_calib_hdr hdr ;
   u8 data[0U] ;
};

#line 3912  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_wipan_slot {
   __le16 width ;
   u8 type ;
   u8 reserved ;
};

#line 3934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_wipan_params_cmd {
   __le16 flags ;
   u8 reserved ;
   u8 num_slots ;
   struct iwl_wipan_slot slots[10U] ;
};

#line 1502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/commands.h"
struct iwl_compressed_ba_resp {
   __le32 sta_addr_lo32 ;
   __le16 sta_addr_hi16 ;
   __le16 reserved ;
   u8 sta_id ;
   u8 tid ;
   __le16 seq_ctl ;
   __le64 bitmap ;
   __le16 scd_flow ;
   __le16 scd_ssn ;
   u8 txed ;
   u8 txed_2_done ;
   __le16 reserved1 ;
};

#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
union __anonunion___u_7227 {
   struct iwl_wipan_noa_data *__val ;
   char __c[1U] ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pagemap.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 5433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ldv_struct_character_driver_scenario_10 {
   struct file_operations *arg0 ;
   int signal_pending ;
};

#line 20  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_ieee80211_scenario_30 {
   struct ieee80211_hw *arg0 ;
   int signal_pending ;
};

#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_25 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
void *__builtin_memcpy(void *, void const *, unsigned long);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/fvtp/.tmp_led.c"
void ldv_inline_asm(void);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
extern struct pv_irq_ops pv_irq_ops;


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
char *kasprintf(gfp_t, char const * , ...);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void)
{
  unsigned long tmp;
  {
    unsigned long __ret;
    
#line 831 
    unsigned long __edi = __edi;
    
#line 831 
    unsigned long __esi = __esi;
    
#line 831 
    unsigned long __edx = __edx;
    
#line 831 
    unsigned long __ecx = __ecx;
    
#line 831 
    unsigned long __eax = __eax;
    
#line 831 
    if ((long)(pv_irq_ops.save_fl.func == (void *)0) != 0L) {
      
#line 833 
      ldv_inline_asm();
      
#line 831 
      ;
    }
    else ;
    
#line 835 
    ldv_inline_asm();
    
#line 831 
    __ret = __eax;
    
#line 831 
    tmp = __ret;
  }
  
#line 831 
  return tmp;
}


#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags)
{
  int __retres;
  
#line 153 
  __retres = (flags & 512UL) == 0UL;
  
#line 153 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
extern int debug_locks;


#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
int lock_is_held(struct lockdep_map *);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key)
{
  bool __retres;
  
#line 21 
  ldv_inline_asm();
  
#line 22 
  ldv_inline_asm();
  
#line 28 
  __retres = (_Bool)0;
  
#line 28 
  goto return_label;
  l_yes: 
#line 29 
  ;
  
#line 30 
  __retres = (_Bool)1;
  return_label: 
#line 30 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
static bool static_key_false(struct static_key *key)
{
  bool tmp;
  
#line 125 
  tmp = arch_static_branch(key);
  
#line 125 
  return tmp;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
bool rcu_lockdep_current_cpu_online(void);


#line 459 
extern struct lockdep_map rcu_sched_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static int rcu_read_lock_sched_held(void)
{
  int __retres;
  int tmp;
  int tmp_1;
  bool tmp_0;
  int tmp_3;
  bool tmp_2;
  int tmp_8;
  
#line 500 
  int lockdep_opinion = 0;
  
#line 502 
  tmp = debug_lockdep_rcu_enabled();
  
#line 502 
  if (tmp == 0) {
    
#line 503 
    __retres = 1;
    
#line 503 
    goto return_label;
  }
  else ;
  
#line 504 
  tmp_0 = rcu_is_watching();
  
#line 504 
  if (tmp_0) 
#line 504 
             tmp_1 = 0; else 
#line 504 
                             tmp_1 = 1;
  
#line 504 
  if (tmp_1) {
    
#line 505 
    __retres = 0;
    
#line 505 
    goto return_label;
  }
  else ;
  
#line 506 
  tmp_2 = rcu_lockdep_current_cpu_online();
  
#line 506 
  if (tmp_2) 
#line 506 
             tmp_3 = 0; else 
#line 506 
                             tmp_3 = 1;
  
#line 506 
  if (tmp_3) {
    
#line 507 
    __retres = 0;
    
#line 507 
    goto return_label;
  }
  else ;
  
#line 508 
  if (debug_locks != 0) 
#line 509 
                        lockdep_opinion = lock_is_held(& rcu_sched_lock_map); else ;
  
#line 510 
  if (lockdep_opinion != 0) 
#line 510 
                            tmp_8 = 1;
  else {
    int tmp_4;
    
#line 510 
    tmp_4 = preempt_count();
    
#line 510 
    if (tmp_4 != 0) 
#line 510 
                    tmp_8 = 1;
    else {
      int tmp_7;
      {
        unsigned long _flags;
        int tmp_6;
        {
          unsigned long __dummy;
          unsigned long __dummy2;
          
        }
        
#line 510 
        _flags = arch_local_save_flags();
        {
          unsigned long __dummy_0;
          unsigned long __dummy2_0;
          
        }
        
#line 510 
        tmp_6 = arch_irqs_disabled_flags(_flags);
        
#line 510 
        tmp_7 = tmp_6;
      }
      
#line 510 
      if (tmp_7 != 0) 
#line 510 
                      tmp_8 = 1; else 
#line 510 
                                      tmp_8 = 0;
    }
  }
  
#line 510 
  __retres = tmp_8;
  return_label: 
#line 510 
                return __retres;
}


#line 969  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock_sched_notrace(void)
{
  
#line 971 
  __preempt_count_add(1);
  
#line 972 
  ldv_inline_asm();
  
#line 973 
  return;
}


#line 990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock_sched_notrace(void)
{
  
#line 993 
  ldv_inline_asm();
  
#line 993 
  __preempt_count_sub(1);
  
#line 994 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 3303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static char const *wiphy_name(struct wiphy const *wiphy)
{
  char const *tmp;
  
#line 3305 
  tmp = dev_name(& wiphy->dev);
  
#line 3305 
  return tmp;
}


#line 3547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
char const *__ieee80211_get_radio_led_name(struct ieee80211_hw *);


#line 3549 
char const *__ieee80211_create_tpt_led_trigger(struct ieee80211_hw *, unsigned int, struct ieee80211_tpt_blink const *, unsigned int);


#line 3629  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static char const *ieee80211_get_radio_led_name(struct ieee80211_hw *hw)
{
  char const *tmp;
  
#line 3632 
  tmp = __ieee80211_get_radio_led_name(hw);
  
#line 3632 
  return tmp;
}


#line 3651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static char const *ieee80211_create_tpt_led_trigger(struct ieee80211_hw *hw, unsigned int flags, struct ieee80211_tpt_blink const *blink_table, unsigned int blink_table_len)
{
  char const *tmp;
  
#line 3656 
  tmp = __ieee80211_create_tpt_led_trigger(hw,flags,blink_table,blink_table_len);
  
#line 3656 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-modparams.h"
extern struct iwl_mod_params iwlwifi_mod_params;


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-debug.h"
void __iwl_err(struct device *, bool, bool, char const * , ...);


#line 47 
void __iwl_info(struct device *, char const * , ...);


#line 78 
void __iwl_dbg(struct device *, u32, bool, char const *, char const * , ...);


#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_write32(struct iwl_trans *trans, u32 ofs, u32 val)
{
  
#line 928 
  (*((trans->ops)->write32))(trans,ofs,val);
  
#line 929 
  return;
}


#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static u32 iwl_trans_read32(struct iwl_trans *trans, u32 ofs)
{
  u32 tmp;
  
#line 933 
  tmp = (*((trans->ops)->read32))(trans,ofs);
  
#line 933 
  return tmp;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
extern struct tracepoint __tracepoint_iwlwifi_dev_ioread32;


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_ioread32(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 35 
  tmp_4 = static_key_false(& __tracepoint_iwlwifi_dev_ioread32.key);
  
#line 35 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 35 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_390 __u;
          
#line 35 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ioread32.funcs),(void *)(& __u.__c),8);
          
#line 35 
          tmp = __u.__val;
        }
        
#line 35 
        struct tracepoint_func *_________p1 = tmp;
        
#line 35 
        tmp_0 = _________p1;
      }
      
#line 35 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 35 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 35 
        if (tmp_1 != 0) {
          
#line 35 
          if (! __warned) {
            int tmp_2;
            
#line 35 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 35 
            if (tmp_2 == 0) {
              
#line 35 
              __warned = (_Bool)1;
              
#line 35 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",50,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 35 
      tmp_3 = ________p1;
    }
    
#line 35 
    it_func_ptr = tmp_3;
    
#line 35 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51344: 
#line 37 
      ;
      
#line 35 
      it_func = it_func_ptr->func;
      
#line 35 
      __data = it_func_ptr->data;
      
#line 35 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 35 
      it_func_ptr += 1;
      
#line 35 
      ;
      
#line 35 
      if (it_func_ptr->func != (void *)0) 
#line 37 
                                          goto ldv_51344; else 
#line 40 
                                                               goto ldv_51345;
      ldv_51345: 
#line 41 
      ;
    }
    else ;
    
#line 35 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 35 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_392 __u_0;
        
#line 35 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ioread32.funcs),(void *)(& __u_0.__c),8);
        
#line 35 
        tmp_5 = __u_0.__val;
      }
      
#line 35 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 35 
      tmp_6 = _________p1_0;
    }
    
#line 35 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 35 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 35 
      if (tmp_7 != 0) {
        
#line 35 
        if (! __warned_0) {
          int tmp_8;
          
#line 35 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 35 
          if (tmp_8 == 0) {
            
#line 35 
            __warned_0 = (_Bool)1;
            
#line 35 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",50,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 35 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 35 
  rcu_read_unlock_sched_notrace();
  
#line 37 
  return;
}


#line 69 
extern struct tracepoint __tracepoint_iwlwifi_dev_iowrite32;


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_iowrite32(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 69 
  tmp_4 = static_key_false(& __tracepoint_iwlwifi_dev_iowrite32.key);
  
#line 69 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 69 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_398 __u;
          
#line 69 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u.__c),8);
          
#line 69 
          tmp = __u.__val;
        }
        
#line 69 
        struct tracepoint_func *_________p1 = tmp;
        
#line 69 
        tmp_0 = _________p1;
      }
      
#line 69 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 69 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 69 
        if (tmp_1 != 0) {
          
#line 69 
          if (! __warned) {
            int tmp_2;
            
#line 69 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 69 
            if (tmp_2 == 0) {
              
#line 69 
              __warned = (_Bool)1;
              
#line 69 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 69 
      tmp_3 = ________p1;
    }
    
#line 69 
    it_func_ptr = tmp_3;
    
#line 69 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51466: 
#line 71 
      ;
      
#line 69 
      it_func = it_func_ptr->func;
      
#line 69 
      __data = it_func_ptr->data;
      
#line 69 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 69 
      it_func_ptr += 1;
      
#line 69 
      ;
      
#line 69 
      if (it_func_ptr->func != (void *)0) 
#line 71 
                                          goto ldv_51466; else 
#line 74 
                                                               goto ldv_51467;
      ldv_51467: 
#line 75 
      ;
    }
    else ;
    
#line 69 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 69 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_400 __u_0;
        
#line 69 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u_0.__c),8);
        
#line 69 
        tmp_5 = __u_0.__val;
      }
      
#line 69 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 69 
      tmp_6 = _________p1_0;
    }
    
#line 69 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 69 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 69 
      if (tmp_7 != 0) {
        
#line 69 
        if (! __warned_0) {
          int tmp_8;
          
#line 69 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 69 
          if (tmp_8 == 0) {
            
#line 69 
            __warned_0 = (_Bool)1;
            
#line 69 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 69 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 69 
  rcu_read_unlock_sched_notrace();
  
#line 71 
  return;
}


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static void iwl_write32(struct iwl_trans *trans, u32 ofs, u32 val)
{
  
#line 43 
  trace_iwlwifi_dev_iowrite32((struct device const *)trans->dev,ofs,val);
  
#line 44 
  iwl_trans_write32(trans,ofs,val);
  
#line 45 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static u32 iwl_read32(struct iwl_trans *trans, u32 ofs)
{
  
#line 49 
  u32 val = iwl_trans_read32(trans,ofs);
  
#line 50 
  trace_iwlwifi_dev_ioread32((struct device const *)trans->dev,ofs,val);
  
#line 51 
  return val;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/leds.h"
int led_classdev_register(struct device *, struct led_classdev *);


#line 110 
void led_classdev_unregister(struct led_classdev *);


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.h"
void iwlagn_led_enable(struct iwl_priv *priv);


#line 41 
void iwl_leds_init(struct iwl_priv *priv);


#line 42 
void iwl_leds_exit(struct iwl_priv *priv);


#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
int iwl_dvm_send_cmd(struct iwl_priv *priv, struct iwl_host_cmd *cmd);


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c"
static struct ieee80211_tpt_blink const iwl_blink[10U] = {{.throughput = 0, .blink_time = 334}, {.throughput = 1023, .blink_time = 260}, {.throughput = 5119, .blink_time = 220}, {.throughput = 10239, .blink_time = 190}, {.throughput = 20479, .blink_time = 170}, {.throughput = 51199, .blink_time = 150}, {.throughput = 71679, .blink_time = 130}, {.throughput = 102399, .blink_time = 110}, {.throughput = 204799, .blink_time = 80}, {.throughput = 307199, .blink_time = 50}};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c"
void iwlagn_led_enable(struct iwl_priv *priv)
{
  
#line 71 
  iwl_write32(priv->trans,148U,96U);
  
#line 72 
  return;
}


#line 89 
void __compiletime_assert_90(void);


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c"
__inline static u8 iwl_blink_compensation(struct iwl_priv *priv, u8 time, u16 compensation)
{
  u8 __retres;
  
#line 88 
  if ((unsigned int)compensation == 0U) {
    {
      
#line 89 
      bool __cond = (_Bool)((int)*("undefined blink compensation: " + 59UL) != 10);
      
#line 89 
      if ((int)__cond != 0) 
#line 89 
                            __compiletime_assert_90(); else ;
    }
    
#line 89 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"undefined blink compensation: ");
    
#line 91 
    __retres = time;
    
#line 91 
    goto return_label;
  }
  else ;
  
#line 94 
  __retres = (unsigned char)((int)time * (int)compensation >> 6);
  return_label: 
#line 94 
                return __retres;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c"
static int iwl_send_led_cmd(struct iwl_priv *priv, struct iwl_led_cmd *led_cmd)
{
  u32 reg;
  int tmp;
  
#line 99 
  struct iwl_host_cmd cmd = {.data = {(void const *)led_cmd}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 1U, .len = {(unsigned short)8U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)72U};
  
#line 107 
  reg = iwl_read32(priv->trans,148U);
  
#line 108 
  if ((reg & 4294967263U) != reg) 
#line 109 
                                  iwl_write32(priv->trans,148U,reg & 4294967263U); else ;
  
#line 112 
  tmp = iwl_dvm_send_cmd(priv,& cmd);
  
#line 112 
  return tmp;
}


#line 137 
void __compiletime_assert_138(void);


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c"
static int iwl_led_cmd(struct iwl_priv *priv, unsigned long on, unsigned long off)
{
  int __retres;
  int ret;
  int tmp;
  
#line 120 
  struct iwl_led_cmd led_cmd = {.interval = 1000U, .id = (unsigned char)2U, .off = (unsigned char)0, .on = (unsigned char)0, .reserved = (unsigned char)0};
  
#line 126 
  tmp = constant_test_bit(3L,(unsigned long const volatile *)(& priv->status));
  
#line 126 
  if (tmp == 0) {
    
#line 127 
    __retres = -16;
    
#line 127 
    goto return_label;
  }
  else ;
  
#line 129 
  if (priv->blink_on == on && priv->blink_off == off) {
    
#line 130 
    __retres = 0;
    
#line 130 
    goto return_label;
  }
  else ;
  
#line 132 
  if (off == 0UL) 
#line 134 
                  on = 11UL; else ;
  {
    
#line 137 
    bool __cond = (_Bool)((int)*("Led blink time compensation=%u\n" + 30UL) != 10);
    
#line 137 
    if ((int)__cond != 0) 
#line 137 
                          __compiletime_assert_138(); else ;
  }
  
#line 137 
  __iwl_dbg(priv->dev,524288U,(_Bool)0,"iwl_led_cmd","Led blink time compensation=%u\n",(int)((priv->cfg)->base_params)->led_compensation);
  
#line 139 
  led_cmd.on = iwl_blink_compensation(priv,(unsigned char)((int)((unsigned char)on)),(unsigned short)((int)((priv->cfg)->base_params)->led_compensation));
  
#line 141 
  led_cmd.off = iwl_blink_compensation(priv,(unsigned char)((int)((unsigned char)off)),(unsigned short)((int)((priv->cfg)->base_params)->led_compensation));
  
#line 144 
  ret = iwl_send_led_cmd(priv,& led_cmd);
  
#line 145 
  if (ret == 0) {
    
#line 146 
    priv->blink_on = on;
    
#line 147 
    priv->blink_off = off;
  }
  else ;
  
#line 149 
  __retres = ret;
  return_label: 
#line 149 
                return __retres;
}


#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c"
static void iwl_led_brightness_set(struct led_classdev *led_cdev, enum led_brightness brightness)
{
  struct iwl_priv *tmp;
  {
    
#line 155 
    struct led_classdev const *__mptr = (struct led_classdev const *)led_cdev;
    
#line 155 
    tmp = (struct iwl_priv *)__mptr + 18446744073709537992U;
  }
  
#line 155 
  struct iwl_priv *priv = tmp;
  
#line 156 
  unsigned long on = 0UL;
  
#line 158 
  if (brightness != (unsigned int)LED_OFF) 
#line 159 
                                           on = 11UL; else ;
  
#line 161 
  iwl_led_cmd(priv,on,0UL);
  
#line 162 
  return;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c"
static int iwl_led_blink_set(struct led_classdev *led_cdev, unsigned long *delay_on, unsigned long *delay_off)
{
  struct iwl_priv *tmp;
  int tmp_0;
  {
    
#line 168 
    struct led_classdev const *__mptr = (struct led_classdev const *)led_cdev;
    
#line 168 
    tmp = (struct iwl_priv *)__mptr + 18446744073709537992U;
  }
  
#line 168 
  struct iwl_priv *priv = tmp;
  
#line 170 
  tmp_0 = iwl_led_cmd(priv,*delay_on,*delay_off);
  
#line 170 
  return tmp_0;
}


#line 179 
void __compiletime_assert_179(void);


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c"
void iwl_leds_init(struct iwl_priv *priv)
{
  int ret;
  char *tmp_0;
  char const *tmp;
  
#line 175 
  int mode = iwlwifi_mod_params.led_mode;
  
#line 178 
  if (mode == 3) {
    {
      
#line 179 
      bool __cond = (_Bool)((int)*("Led disabled\n" + 12UL) != 10);
      
#line 179 
      if ((int)__cond != 0) 
#line 179 
                            __compiletime_assert_179(); else ;
    }
    
#line 179 
    __iwl_info(priv->dev,"Led disabled\n");
    
#line 180 
    goto return_label;
  }
  else ;
  
#line 182 
  if (mode == 0) 
#line 183 
                 mode = (int)(priv->cfg)->led_mode; else ;
  
#line 185 
  tmp = wiphy_name((struct wiphy const *)(priv->hw)->wiphy);
  
#line 185 
  tmp_0 = kasprintf(208U,"%s-led",tmp);
  
#line 185 
  priv->led.name = (char const *)tmp_0;
  
#line 187 
  priv->led.brightness_set = & iwl_led_brightness_set;
  
#line 188 
  priv->led.blink_set = & iwl_led_blink_set;
  
#line 189 
  priv->led.max_brightness = (enum led_brightness)1;
  
#line 191 
  switch (mode) {
    case 0: 
#line 192 
    ;
    {
      
#line 193 
      int __ret_warn_on = 1;
      
#line 193 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 193 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c",193); else ;
      
#line 193 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 194 
    goto ldv_55306;
    case 2: 
#line 195 
    ;
    
#line 196 
    priv->led.default_trigger = ieee80211_create_tpt_led_trigger(priv->hw,4U,(struct ieee80211_tpt_blink const *)(& iwl_blink),10U);
    
#line 200 
    goto ldv_55306;
    case 1: 
#line 201 
    ;
    
#line 202 
    priv->led.default_trigger = ieee80211_get_radio_led_name(priv->hw);
    
#line 204 
    goto ldv_55306;
  }
  ldv_55306: 
#line 207 
  ;
  
#line 207 
  ret = led_classdev_register((priv->trans)->dev,& priv->led);
  
#line 208 
  if (ret != 0) {
    
#line 209 
    kfree((void const *)priv->led.name);
    
#line 210 
    goto return_label;
  }
  else ;
  
#line 213 
  priv->led_registered = (_Bool)1;
  return_label: 
#line 214 
                return;
}


#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/led.c"
void iwl_leds_exit(struct iwl_priv *priv)
{
  
#line 218 
  if (! priv->led_registered) 
#line 219 
                              goto return_label; else ;
  
#line 221 
  led_classdev_unregister(& priv->led);
  
#line 222 
  kfree((void const *)priv->led.name);
  return_label: 
#line 223 
                return;
}


#line 11  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
int ldv_atomic_add_return(int i, atomic_t *v);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 409 
int scnprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  
#line 39 
  v->counter = i;
  
#line 40 
  return;
}


#line 159 
static int atomic_add_return(int i, atomic_t *v);


#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_sub_return(int i, atomic_t *v)
{
  int tmp;
  
#line 173 
  tmp = atomic_add_return(- i,v);
  
#line 173 
  return tmp;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
static bool static_key_false_0(struct static_key *key)
{
  bool tmp;
  
#line 125 
  tmp = arch_static_branch(key);
  
#line 125 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_82(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_83(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_84(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_87(struct mutex *ldv_func_arg1);


#line 59 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 61 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 94 
void ldv_spin_model_lock(char *);


#line 95 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_79(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_86(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_88(struct mutex *ldv_func_arg1);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 284 
unsigned int jiffies_to_msecs(unsigned long const);


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_80(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_81(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_89(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_90(struct timer_list *ldv_func_arg1);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 361 
struct workqueue_struct *__alloc_workqueue_key(char const *, unsigned int, int, struct lock_class_key *, char const * , ...);


#line 421 
void destroy_workqueue(struct workqueue_struct *);


#line 436 
void flush_workqueue(struct workqueue_struct *);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 490 
static bool ldv_queue_work_93(struct workqueue_struct *wq, struct work_struct *work);


#line 291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kmem_cache_free(struct kmem_cache *, void *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void consume_skb(struct sk_buff *);


#line 3281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  
#line 3283 
  wiphy->dev.parent = dev;
  
#line 3284 
  return;
}


#line 4257 
void wiphy_rfkill_set_hw_state(struct wiphy *, bool);


#line 918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  struct ieee80211_tx_info *__retres;
  
#line 920 
  __retres = (struct ieee80211_tx_info *)(& skb->cb);
  
#line 920 
  return __retres;
}


#line 2131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  
#line 2133 
  set_wiphy_dev(hw->wiphy,dev);
  
#line 2134 
  return;
}


#line 2182 
void ieee80211_free_txskb(struct ieee80211_hw *, struct sk_buff *);


#line 3685 
static void ldv_ieee80211_free_hw_91(struct ieee80211_hw *ldv_func_arg1);


#line 3689 
static void ldv_ieee80211_free_hw_92(struct ieee80211_hw *ldv_func_arg1);


#line 3696 
void ieee80211_restart_hw(struct ieee80211_hw *);


#line 3709 
void ieee80211_napi_add(struct ieee80211_hw *, struct napi_struct *, struct net_device *, int (*)(struct napi_struct *, int ), int);


#line 4020 
struct sk_buff *ieee80211_beacon_get_tim(struct ieee80211_hw *, struct ieee80211_vif *, u16 *, u16 *);


#line 4033  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct sk_buff *ieee80211_beacon_get(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  struct sk_buff *tmp;
  
#line 4036 
  tmp = ieee80211_beacon_get_tim(hw,vif,(u16 *)0U,(u16 *)0U);
  
#line 4036 
  return tmp;
}


#line 4466 
void ieee80211_wake_queue(struct ieee80211_hw *, int);


#line 4475 
void ieee80211_stop_queue(struct ieee80211_hw *, int);


#line 4495 
void ieee80211_stop_queues(struct ieee80211_hw *);


#line 4503 
void ieee80211_wake_queues(struct ieee80211_hw *);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-debug.h"
__inline static bool iwl_have_debug_level(u32 level)
{
  bool __retres;
  
#line 38 
  __retres = (_Bool)((iwlwifi_mod_params.debug_level & level) != 0U);
  
#line 38 
  return __retres;
}


#line 46 
void __iwl_warn(struct device *, char const * , ...);


#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-config.h"
__inline static u8 num_of_ant(u8 mask)
{
  u8 __retres;
  
#line 148 
  __retres = (unsigned char)(((((unsigned long)mask & 1UL) != 0UL) + (((unsigned long)mask & 2UL) != 0UL)) + (((unsigned long)mask & 4UL) != 0UL));
  
#line 148 
  return __retres;
}


#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-op-mode.h"
int iwl_opmode_register(char const *, struct iwl_op_mode_ops const *);


#line 171 
void iwl_opmode_deregister(char const *);


#line 651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_configure(struct iwl_trans *trans, struct iwl_trans_config const *trans_cfg)
{
  
#line 654 
  trans->op_mode = trans_cfg->op_mode;
  
#line 656 
  (*((trans->ops)->configure))(trans,trans_cfg);
  
#line 657 
  return;
}


#line 666  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static int iwl_trans_start_hw(struct iwl_trans *trans)
{
  int tmp;
  
#line 668 
  tmp = (*((trans->ops)->start_hw))(trans,(_Bool)1);
  
#line 668 
  return tmp;
}


#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_op_mode_leave(struct iwl_trans *trans)
{
  
#line 673 
  __might_sleep("drivers/net/wireless/iwlwifi/dvm/../iwl-trans.h",673,0);
  
#line 675 
  if ((trans->ops)->op_mode_leave != (void (*)(struct iwl_trans *))0) 
    
#line 676 
    (*((trans->ops)->op_mode_leave))(trans); else ;
  
#line 678 
  trans->op_mode = (struct iwl_op_mode *)0;
  
#line 680 
  trans->state = IWL_TRANS_NO_FW;
  
#line 681 
  return;
}


#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void _iwl_trans_stop_device(struct iwl_trans *trans, bool low_power)
{
  
#line 718 
  __might_sleep("drivers/net/wireless/iwlwifi/dvm/../iwl-trans.h",718,0);
  
#line 720 
  (*((trans->ops)->stop_device))(trans,(_Bool)((bool)((int)low_power) != 0));
  
#line 722 
  trans->state = IWL_TRANS_NO_FW;
  
#line 723 
  return;
}


#line 725  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_stop_device(struct iwl_trans *trans)
{
  
#line 727 
  _iwl_trans_stop_device(trans,(_Bool)1);
  
#line 728 
  return;
}


#line 789 
void __compiletime_assert_789(void);


#line 816  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_free_tx_cmd(struct iwl_trans *trans, struct iwl_device_cmd *dev_cmd)
{
  
#line 819 
  u8 *dev_cmd_ptr = (u8 *)dev_cmd + - trans->dev_cmd_headroom;
  
#line 821 
  kmem_cache_free(trans->dev_cmd_pool,(void *)dev_cmd_ptr);
  
#line 822 
  return;
}


#line 947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static int iwl_trans_read_mem(struct iwl_trans *trans, u32 addr, void *buf, int dwords)
{
  int tmp;
  
#line 950 
  tmp = (*((trans->ops)->read_mem))(trans,addr,buf,dwords);
  
#line 950 
  return tmp;
}


#line 960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static u32 iwl_trans_read_mem32(struct iwl_trans *trans, u32 addr)
{
  u32 __retres;
  u32 value;
  int tmp_0;
  {
    int tmp;
    
#line 964 
    tmp = iwl_trans_read_mem(trans,addr,(void *)(& value),1);
    
#line 964 
    int __ret_warn_on = tmp != 0;
    
#line 964 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 964 
                                          warn_slowpath_null("drivers/net/wireless/iwlwifi/dvm/../iwl-trans.h",964); else ;
    
#line 964 
    tmp_0 = (long)(__ret_warn_on != 0);
  }
  
#line 964 
  if ((long)tmp_0 != 0L) {
    
#line 965 
    __retres = 2779096485U;
    
#line 965 
    goto return_label;
  }
  else ;
  
#line 967 
  __retres = value;
  return_label: 
#line 967 
                return __retres;
}


#line 989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_set_bits_mask(struct iwl_trans *trans, u32 reg, u32 mask, u32 value)
{
  
#line 991 
  (*((trans->ops)->set_bits_mask))(trans,reg,mask,value);
  
#line 992 
  return;
}


#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_release_nic_access(struct iwl_trans *trans, unsigned long *flags)
{
  
#line 1001 
  (*((trans->ops)->release_nic_access))(trans,flags);
  
#line 1003 
  return;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-eeprom-read.h"
int iwl_read_eeprom(struct iwl_trans *, u8 **, size_t *);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-eeprom-parse.h"
struct iwl_nvm_data *iwl_parse_eeprom_data(struct device *, struct iwl_cfg const *, u8 const *, size_t);


#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-eeprom-parse.h"
__inline static void iwl_free_nvm_data(struct iwl_nvm_data *data)
{
  
#line 128 
  kfree((void const *)data);
  
#line 129 
  return;
}


#line 131 
int iwl_nvm_check_version(struct iwl_nvm_data *, struct iwl_trans *);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_ioread32_0(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 35 
  tmp_4 = static_key_false_0(& __tracepoint_iwlwifi_dev_ioread32.key);
  
#line 35 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 35 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_875 __u;
          
#line 35 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ioread32.funcs),(void *)(& __u.__c),8);
          
#line 35 
          tmp = __u.__val;
        }
        
#line 35 
        struct tracepoint_func *_________p1 = tmp;
        
#line 35 
        tmp_0 = _________p1;
      }
      
#line 35 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 35 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 35 
        if (tmp_1 != 0) {
          
#line 35 
          if (! __warned) {
            int tmp_2;
            
#line 35 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 35 
            if (tmp_2 == 0) {
              
#line 35 
              __warned = (_Bool)1;
              
#line 35 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",50,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 35 
      tmp_3 = ________p1;
    }
    
#line 35 
    it_func_ptr = tmp_3;
    
#line 35 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51513: 
#line 37 
      ;
      
#line 35 
      it_func = it_func_ptr->func;
      
#line 35 
      __data = it_func_ptr->data;
      
#line 35 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 35 
      it_func_ptr += 1;
      
#line 35 
      ;
      
#line 35 
      if (it_func_ptr->func != (void *)0) 
#line 37 
                                          goto ldv_51513; else 
#line 40 
                                                               goto ldv_51514;
      ldv_51514: 
#line 41 
      ;
    }
    else ;
    
#line 35 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 35 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_877 __u_0;
        
#line 35 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ioread32.funcs),(void *)(& __u_0.__c),8);
        
#line 35 
        tmp_5 = __u_0.__val;
      }
      
#line 35 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 35 
      tmp_6 = _________p1_0;
    }
    
#line 35 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 35 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 35 
      if (tmp_7 != 0) {
        
#line 35 
        if (! __warned_0) {
          int tmp_8;
          
#line 35 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 35 
          if (tmp_8 == 0) {
            
#line 35 
            __warned_0 = (_Bool)1;
            
#line 35 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",50,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 35 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 35 
  rcu_read_unlock_sched_notrace();
  
#line 37 
  return;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_iowrite32_0(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 69 
  tmp_4 = static_key_false_0(& __tracepoint_iwlwifi_dev_iowrite32.key);
  
#line 69 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 69 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_883 __u;
          
#line 69 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u.__c),8);
          
#line 69 
          tmp = __u.__val;
        }
        
#line 69 
        struct tracepoint_func *_________p1 = tmp;
        
#line 69 
        tmp_0 = _________p1;
      }
      
#line 69 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 69 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 69 
        if (tmp_1 != 0) {
          
#line 69 
          if (! __warned) {
            int tmp_2;
            
#line 69 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 69 
            if (tmp_2 == 0) {
              
#line 69 
              __warned = (_Bool)1;
              
#line 69 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 69 
      tmp_3 = ________p1;
    }
    
#line 69 
    it_func_ptr = tmp_3;
    
#line 69 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51635: 
#line 71 
      ;
      
#line 69 
      it_func = it_func_ptr->func;
      
#line 69 
      __data = it_func_ptr->data;
      
#line 69 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 69 
      it_func_ptr += 1;
      
#line 69 
      ;
      
#line 69 
      if (it_func_ptr->func != (void *)0) 
#line 71 
                                          goto ldv_51635; else 
#line 74 
                                                               goto ldv_51636;
      ldv_51636: 
#line 75 
      ;
    }
    else ;
    
#line 69 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 69 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_885 __u_0;
        
#line 69 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u_0.__c),8);
        
#line 69 
        tmp_5 = __u_0.__val;
      }
      
#line 69 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 69 
      tmp_6 = _________p1_0;
    }
    
#line 69 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 69 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 69 
      if (tmp_7 != 0) {
        
#line 69 
        if (! __warned_0) {
          int tmp_8;
          
#line 69 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 69 
          if (tmp_8 == 0) {
            
#line 69 
            __warned_0 = (_Bool)1;
            
#line 69 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 69 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 69 
  rcu_read_unlock_sched_notrace();
  
#line 71 
  return;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-ucode.h"
extern struct tracepoint __tracepoint_iwlwifi_dev_ucode_cont_event;


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-ucode.h"
__inline static void trace_iwlwifi_dev_ucode_cont_event(struct device const *dev, u32 time, u32 data, u32 ev)
{
  bool tmp_4;
  
#line 35 
  tmp_4 = static_key_false_0(& __tracepoint_iwlwifi_dev_ucode_cont_event.key);
  
#line 35 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 35 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_903 __u;
          
#line 35 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ucode_cont_event.funcs),(void *)(& __u.__c),8);
          
#line 35 
          tmp = __u.__val;
        }
        
#line 35 
        struct tracepoint_func *_________p1 = tmp;
        
#line 35 
        tmp_0 = _________p1;
      }
      
#line 35 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 35 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 35 
        if (tmp_1 != 0) {
          
#line 35 
          if (! __warned) {
            int tmp_2;
            
#line 35 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 35 
            if (tmp_2 == 0) {
              
#line 35 
              __warned = (_Bool)1;
              
#line 35 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-ucode.h",53,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 35 
      tmp_3 = ________p1;
    }
    
#line 35 
    it_func_ptr = tmp_3;
    
#line 35 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51932: 
#line 37 
      ;
      
#line 35 
      it_func = it_func_ptr->func;
      
#line 35 
      __data = it_func_ptr->data;
      
#line 35 
      (*((void (*)(void *, struct device const *, u32 , u32 , u32 ))it_func))(__data,dev,time,data,ev);
      
#line 35 
      it_func_ptr += 1;
      
#line 35 
      ;
      
#line 35 
      if (it_func_ptr->func != (void *)0) 
#line 37 
                                          goto ldv_51932; else 
#line 40 
                                                               goto ldv_51933;
      ldv_51933: 
#line 41 
      ;
    }
    else ;
    
#line 35 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 35 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_905 __u_0;
        
#line 35 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ucode_cont_event.funcs),(void *)(& __u_0.__c),8);
        
#line 35 
        tmp_5 = __u_0.__val;
      }
      
#line 35 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 35 
      tmp_6 = _________p1_0;
    }
    
#line 35 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 35 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 35 
      if (tmp_7 != 0) {
        
#line 35 
        if (! __warned_0) {
          int tmp_8;
          
#line 35 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 35 
          if (tmp_8 == 0) {
            
#line 35 
            __warned_0 = (_Bool)1;
            
#line 35 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-ucode.h",53,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 35 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 35 
  rcu_read_unlock_sched_notrace();
  
#line 37 
  return;
}


#line 55 
extern struct tracepoint __tracepoint_iwlwifi_dev_ucode_wrap_event;


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-ucode.h"
__inline static void trace_iwlwifi_dev_ucode_wrap_event(struct device const *dev, u32 wraps, u32 n_entry, u32 p_entry)
{
  bool tmp_4;
  
#line 55 
  tmp_4 = static_key_false_0(& __tracepoint_iwlwifi_dev_ucode_wrap_event.key);
  
#line 55 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 55 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_907 __u;
          
#line 55 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ucode_wrap_event.funcs),(void *)(& __u.__c),8);
          
#line 55 
          tmp = __u.__val;
        }
        
#line 55 
        struct tracepoint_func *_________p1 = tmp;
        
#line 55 
        tmp_0 = _________p1;
      }
      
#line 55 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 55 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 55 
        if (tmp_1 != 0) {
          
#line 55 
          if (! __warned) {
            int tmp_2;
            
#line 55 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 55 
            if (tmp_2 == 0) {
              
#line 55 
              __warned = (_Bool)1;
              
#line 55 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-ucode.h",74,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 55 
      tmp_3 = ________p1;
    }
    
#line 55 
    it_func_ptr = tmp_3;
    
#line 55 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51998: 
#line 57 
      ;
      
#line 55 
      it_func = it_func_ptr->func;
      
#line 55 
      __data = it_func_ptr->data;
      
#line 55 
      (*((void (*)(void *, struct device const *, u32 , u32 , u32 ))it_func))(__data,dev,wraps,n_entry,p_entry);
      
#line 55 
      it_func_ptr += 1;
      
#line 55 
      ;
      
#line 55 
      if (it_func_ptr->func != (void *)0) 
#line 57 
                                          goto ldv_51998; else 
#line 60 
                                                               goto ldv_51999;
      ldv_51999: 
#line 61 
      ;
    }
    else ;
    
#line 55 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 55 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_909 __u_0;
        
#line 55 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ucode_wrap_event.funcs),(void *)(& __u_0.__c),8);
        
#line 55 
        tmp_5 = __u_0.__val;
      }
      
#line 55 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 55 
      tmp_6 = _________p1_0;
    }
    
#line 55 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 55 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 55 
      if (tmp_7 != 0) {
        
#line 55 
        if (! __warned_0) {
          int tmp_8;
          
#line 55 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 55 
          if (tmp_8 == 0) {
            
#line 55 
            __warned_0 = (_Bool)1;
            
#line 55 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-ucode.h",74,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 55 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 55 
  rcu_read_unlock_sched_notrace();
  
#line 57 
  return;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-iwlwifi.h"
extern struct tracepoint __tracepoint_iwlwifi_dev_ucode_error;


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-iwlwifi.h"
__inline static void trace_iwlwifi_dev_ucode_error(struct device const *dev, u32 desc, u32 tsf_low, u32 data1, u32 data2, u32 line, u32 blink1, u32 blink2, u32 ilink1, u32 ilink2, u32 bcon_time, u32 gp1, u32 gp2, u32 gp3, u32 major, u32 minor, u32 hw_ver, u32 brd_ver)
{
  bool tmp_4;
  
#line 118 
  tmp_4 = static_key_false_0(& __tracepoint_iwlwifi_dev_ucode_error.key);
  
#line 118 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 118 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_951 __u;
          
#line 118 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ucode_error.funcs),(void *)(& __u.__c),8);
          
#line 118 
          tmp = __u.__val;
        }
        
#line 118 
        struct tracepoint_func *_________p1 = tmp;
        
#line 118 
        tmp_0 = _________p1;
      }
      
#line 118 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 118 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 118 
        if (tmp_1 != 0) {
          
#line 118 
          if (! __warned) {
            int tmp_2;
            
#line 118 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 118 
            if (tmp_2 == 0) {
              
#line 118 
              __warned = (_Bool)1;
              
#line 118 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-iwlwifi.h",178,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 118 
      tmp_3 = ________p1;
    }
    
#line 118 
    it_func_ptr = tmp_3;
    
#line 118 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_52712: 
#line 120 
      ;
      
#line 118 
      it_func = it_func_ptr->func;
      
#line 118 
      __data = it_func_ptr->data;
      
#line 118 
      (*((void (*)(void *, struct device const *, u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 , u32 ))it_func))(__data,dev,desc,tsf_low,data1,data2,line,blink1,blink2,ilink1,ilink2,bcon_time,gp1,gp2,gp3,major,minor,hw_ver,brd_ver);
      
#line 118 
      it_func_ptr += 1;
      
#line 118 
      ;
      
#line 118 
      if (it_func_ptr->func != (void *)0) 
#line 120 
                                          goto ldv_52712; else 
#line 123 
                                                               goto ldv_52713;
      ldv_52713: 
#line 124 
      ;
    }
    else ;
    
#line 118 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 118 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_953 __u_0;
        
#line 118 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ucode_error.funcs),(void *)(& __u_0.__c),8);
        
#line 118 
        tmp_5 = __u_0.__val;
      }
      
#line 118 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 118 
      tmp_6 = _________p1_0;
    }
    
#line 118 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 118 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 118 
      if (tmp_7 != 0) {
        
#line 118 
        if (! __warned_0) {
          int tmp_8;
          
#line 118 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 118 
          if (tmp_8 == 0) {
            
#line 118 
            __warned_0 = (_Bool)1;
            
#line 118 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-iwlwifi.h",178,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 118 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 118 
  rcu_read_unlock_sched_notrace();
  
#line 120 
  return;
}


#line 180 
extern struct tracepoint __tracepoint_iwlwifi_dev_ucode_event;


#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-iwlwifi.h"
__inline static void trace_iwlwifi_dev_ucode_event(struct device const *dev, u32 time, u32 data, u32 ev)
{
  bool tmp_4;
  
#line 180 
  tmp_4 = static_key_false_0(& __tracepoint_iwlwifi_dev_ucode_event.key);
  
#line 180 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 180 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_955 __u;
          
#line 180 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ucode_event.funcs),(void *)(& __u.__c),8);
          
#line 180 
          tmp = __u.__val;
        }
        
#line 180 
        struct tracepoint_func *_________p1 = tmp;
        
#line 180 
        tmp_0 = _________p1;
      }
      
#line 180 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 180 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 180 
        if (tmp_1 != 0) {
          
#line 180 
          if (! __warned) {
            int tmp_2;
            
#line 180 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 180 
            if (tmp_2 == 0) {
              
#line 180 
              __warned = (_Bool)1;
              
#line 180 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-iwlwifi.h",198,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 180 
      tmp_3 = ________p1;
    }
    
#line 180 
    it_func_ptr = tmp_3;
    
#line 180 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_52820: 
#line 182 
      ;
      
#line 180 
      it_func = it_func_ptr->func;
      
#line 180 
      __data = it_func_ptr->data;
      
#line 180 
      (*((void (*)(void *, struct device const *, u32 , u32 , u32 ))it_func))(__data,dev,time,data,ev);
      
#line 180 
      it_func_ptr += 1;
      
#line 180 
      ;
      
#line 180 
      if (it_func_ptr->func != (void *)0) 
#line 182 
                                          goto ldv_52820; else 
#line 185 
                                                               goto ldv_52821;
      ldv_52821: 
#line 186 
      ;
    }
    else ;
    
#line 180 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 180 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_957 __u_0;
        
#line 180 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ucode_event.funcs),(void *)(& __u_0.__c),8);
        
#line 180 
        tmp_5 = __u_0.__val;
      }
      
#line 180 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 180 
      tmp_6 = _________p1_0;
    }
    
#line 180 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 180 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 180 
      if (tmp_7 != 0) {
        
#line 180 
        if (! __warned_0) {
          int tmp_8;
          
#line 180 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 180 
          if (tmp_8 == 0) {
            
#line 180 
            __warned_0 = (_Bool)1;
            
#line 180 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-iwlwifi.h",198,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 180 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 180 
  rcu_read_unlock_sched_notrace();
  
#line 182 
  return;
}


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static void iwl_write32_0(struct iwl_trans *trans, u32 ofs, u32 val)
{
  
#line 43 
  trace_iwlwifi_dev_iowrite32_0((struct device const *)trans->dev,ofs,val);
  
#line 44 
  iwl_trans_write32(trans,ofs,val);
  
#line 45 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static u32 iwl_read32_0(struct iwl_trans *trans, u32 ofs)
{
  
#line 49 
  u32 val = iwl_trans_read32(trans,ofs);
  
#line 50 
  trace_iwlwifi_dev_ioread32_0((struct device const *)trans->dev,ofs,val);
  
#line 51 
  return val;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static void iwl_set_bit(struct iwl_trans *trans, u32 reg, u32 mask)
{
  
#line 56 
  iwl_trans_set_bits_mask(trans,reg,mask,mask);
  
#line 57 
  return;
}


#line 80 
void iwl_set_bits_mask_prph(struct iwl_trans *, u32, u32, u32);


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-notif-wait.h"
void iwl_abort_notification_waits(struct iwl_notif_wait_data *);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.h"
int iwl_power_update_mode(struct iwl_priv *priv, bool force);


#line 43 
void iwl_power_initialize(struct iwl_priv *priv);


#line 416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
int iwlagn_rate_control_register(void);


#line 424 
void iwlagn_rate_control_unregister(void);


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.h"
void iwl_tt_initialize(struct iwl_priv *priv);


#line 126 
void iwl_tt_exit(struct iwl_priv *priv);


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
void iwl_update_chain_flags(struct iwl_priv *priv);


#line 928  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
__inline static int iwl_is_associated_ctx(struct iwl_rxon_context *ctx)
{
  int __retres;
  
#line 930 
  __retres = (int)(ctx->active.filter_flags >> 5) & 1;
  
#line 930 
  return __retres;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.h"
void iwl_chain_noise_calibration(struct iwl_priv *priv);


#line 69 
void iwl_sensitivity_calibration(struct iwl_priv *priv);


#line 72 
void iwl_reset_run_time_calib(struct iwl_priv *priv);


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
struct iwl_dvm_cfg const iwl_dvm_1000_cfg;


#line 80 
struct iwl_dvm_cfg const iwl_dvm_2000_cfg;


#line 81 
struct iwl_dvm_cfg const iwl_dvm_105_cfg;


#line 82 
struct iwl_dvm_cfg const iwl_dvm_2030_cfg;


#line 83 
struct iwl_dvm_cfg const iwl_dvm_5000_cfg;


#line 84 
struct iwl_dvm_cfg const iwl_dvm_5150_cfg;


#line 85 
struct iwl_dvm_cfg const iwl_dvm_6000_cfg;


#line 86 
struct iwl_dvm_cfg const iwl_dvm_6005_cfg;


#line 87 
struct iwl_dvm_cfg const iwl_dvm_6050_cfg;


#line 88 
struct iwl_dvm_cfg const iwl_dvm_6030_cfg;


#line 122 
void iwl_down(struct iwl_priv *priv);


#line 123 
void iwl_cancel_deferred_work(struct iwl_priv *priv);


#line 124 
void iwlagn_prepare_restart(struct iwl_priv *priv);


#line 125 
int iwl_rx_dispatch(struct iwl_op_mode *op_mode, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd);


#line 129 
bool iwl_check_for_ct_kill(struct iwl_priv *priv);


#line 131 
void iwlagn_lift_passive_no_rx(struct iwl_priv *priv);


#line 134 
struct ieee80211_hw *iwl_alloc_all(void);


#line 135 
int iwlagn_mac_setup_register(struct iwl_priv *priv, struct iwl_ucode_capabilities const *capa);


#line 137 
void iwlagn_mac_unregister(struct iwl_priv *priv);


#line 141 
int iwl_dvm_send_cmd_pdu(struct iwl_priv *priv, u8 id, u32 flags, u16 len, void const *data);


#line 145 
void iwl_connection_init_rx_config(struct iwl_priv *priv, struct iwl_rxon_context *ctx);


#line 148 
int iwlagn_commit_rxon(struct iwl_priv *priv, struct iwl_rxon_context *ctx);


#line 149 
void iwlagn_set_rxon_chain(struct iwl_priv *priv, struct iwl_rxon_context *ctx);


#line 166 
int iwl_send_bt_env(struct iwl_priv *priv, u8 action, u8 type);


#line 167 
void iwl_send_prio_tbl(struct iwl_priv *priv);


#line 175 
void iwl_calib_free_results(struct iwl_priv *priv);


#line 176 
int iwl_dump_nic_event_log(struct iwl_priv *priv, bool full_log, char **buf);


#line 178 
int iwlagn_hw_valid_rtc_data_addr(u32 addr);


#line 184 
void iwlagn_dev_txfifo_flush(struct iwl_priv *priv);


#line 185 
int iwlagn_send_beacon_cmd(struct iwl_priv *priv);


#line 186 
int iwl_send_statistics_request(struct iwl_priv *priv, u8 flags, bool clear);


#line 203 
void iwl_setup_rx_handlers(struct iwl_priv *priv);


#line 248 
u8 iwl_toggle_tx_ant(struct iwl_priv *priv, u8 ant, u8 valid);


#line 253 
void iwl_init_scan_params(struct iwl_priv *priv);


#line 255 
void iwl_scan_cancel_timeout(struct iwl_priv *priv, unsigned long ms);


#line 259 
void iwl_setup_scan_deferred_work(struct iwl_priv *priv);


#line 260 
void iwl_cancel_scan_deferred_work(struct iwl_priv *priv);


#line 279 
void iwlagn_send_advance_bt_config(struct iwl_priv *priv);


#line 284 
void iwlagn_bt_setup_deferred_work(struct iwl_priv *priv);


#line 285 
void iwlagn_bt_cancel_deferred_work(struct iwl_priv *priv);


#line 317 
void iwl_clear_ucode_stations(struct iwl_priv *priv, struct iwl_rxon_context *ctx);


#line 319 
void iwl_dealloc_bcast_stations(struct iwl_priv *priv);


#line 385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static u32 iwl_ant_idx_to_flags(u8 ant_idx)
{
  u32 __retres;
  
#line 387 
  __retres = (unsigned int)(1UL << (int)ant_idx) << 14U;
  
#line 387 
  return __retres;
}


#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static __le32 iwl_hw_set_rate_n_flags(u8 rate, u32 flags)
{
  __le32 __retres;
  
#line 397 
  __retres = (unsigned int)rate | flags;
  
#line 397 
  return __retres;
}


#line 400 
int iwl_alive_start(struct iwl_priv *priv);


#line 403 
void iwl_print_rx_config_cmd(struct iwl_priv *priv, enum iwl_rxon_context_id ctxid);


#line 414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static int iwl_is_ready(struct iwl_priv *priv)
{
  int tmp_1;
  int tmp;
  
#line 417 
  tmp = constant_test_bit(3L,(unsigned long const volatile *)(& priv->status));
  
#line 417 
  if (tmp != 0) {
    int tmp_0;
    
#line 417 
    tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
    
#line 417 
    if (tmp_0 == 0) 
#line 417 
                    tmp_1 = 1; else 
#line 417 
                                    tmp_1 = 0;
  }
  else 
#line 417 
       tmp_1 = 0;
  
#line 417 
  return tmp_1;
}


#line 426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static int iwl_is_rfkill(struct iwl_priv *priv)
{
  int tmp;
  
#line 428 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& priv->status));
  
#line 428 
  return tmp;
}


#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static int iwl_is_ready_rf(struct iwl_priv *priv)
{
  int __retres;
  int tmp;
  int tmp_0;
  
#line 438 
  tmp = iwl_is_rfkill(priv);
  
#line 438 
  if (tmp != 0) {
    
#line 439 
    __retres = 0;
    
#line 439 
    goto return_label;
  }
  else ;
  
#line 441 
  tmp_0 = iwl_is_ready(priv);
  
#line 441 
  __retres = tmp_0;
  return_label: 
#line 441 
                return __retres;
}


#line 454 
int iwl_dbgfs_register(struct iwl_priv *priv, struct dentry *dbgfs_dir);


#line 483 
char const * const iwl_dvm_cmd_strings[255U];


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static struct iwl_op_mode_ops const iwl_dvm_ops;


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
void iwl_update_chain_flags(struct iwl_priv *priv)
{
  struct iwl_rxon_context *ctx;
  
#line 78 
  ctx = & priv->contexts[0];
  
#line 78 
  goto ldv_55404;
  ldv_55403: 
#line 79 
  ;
  
#line 78 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    
#line 79 
    iwlagn_set_rxon_chain(priv,ctx);
    
#line 80 
    if ((int)ctx->active.rx_chain != (int)ctx->staging.rx_chain) 
#line 81 
                                                                 iwlagn_commit_rxon(priv,ctx); else ;
  }
  else ;
  
#line 78 
  ctx += 1;
  ldv_55404: 
#line 79 
  ;
  
#line 78 
  if (& priv->contexts[2] > ctx) 
#line 80 
                                 goto ldv_55403; else 
#line 83 
                                                      goto ldv_55405;
  ldv_55405: 
#line 84 
  ;
  
#line 85 
  return;
}


#line 109 
void __compiletime_assert_109(void);


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_set_beacon_tim(struct iwl_priv *priv, struct iwl_tx_beacon_cmd *tx_beacon_cmd, u8 *beacon, u32 frame_size)
{
  u16 tim_idx;
  
#line 91 
  struct ieee80211_mgmt *mgmt = (struct ieee80211_mgmt *)beacon;
  
#line 97 
  tim_idx = (unsigned short)((long)(& mgmt->u.beacon.variable) - (long)beacon);
  
#line 100 
  goto ldv_55415;
  ldv_55414: 
#line 101 
  ;
  
#line 102 
  tim_idx = (unsigned short)((unsigned int)((int)((unsigned short)*(beacon + ((unsigned int)tim_idx + 1U))) + (int)tim_idx) + 2U);
  ldv_55415: 
#line 103 
  ;
  
#line 100 
  if ((unsigned int)tim_idx < frame_size + 4294967294U && (unsigned int)*(beacon + (int)tim_idx) != 5U) 
    
#line 103 
    goto ldv_55414; else 
#line 106 
                         goto ldv_55416;
  ldv_55416: 
#line 107 
  ;
  
#line 105 
  if ((unsigned int)tim_idx < frame_size + 4294967295U && (unsigned int)*(beacon + (int)tim_idx) == 5U) {
    
#line 106 
    tx_beacon_cmd->tim_idx = tim_idx;
    
#line 107 
    tx_beacon_cmd->tim_size = *(beacon + ((unsigned int)tim_idx + 1U));
  }
  else {
    {
      
#line 109 
      bool __cond = (_Bool)((int)*("Unable to find TIM Element in beacon\n" + 36UL) != 10);
      
#line 109 
      if ((int)__cond != 0) 
#line 109 
                            __compiletime_assert_109(); else ;
    }
    
#line 109 
    __iwl_warn(priv->dev,"Unable to find TIM Element in beacon\n");
  }
  
#line 111 
  return;
}


#line 131 
void __compiletime_assert_131(void);


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
int iwlagn_send_beacon_cmd(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_tx_beacon_cmd *tx_beacon_cmd;
  struct ieee80211_tx_info *info;
  u32 frame_size;
  u32 rate_flags;
  u32 rate;
  int tmp_1;
  int tmp_2_0;
  
#line 115 
  struct iwl_host_cmd cmd = {.data = {(void const *)0, (void const *)0}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)0, (unsigned short)0}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)145U};
  {
    int tmp_0;
    
#line 128 
    if (debug_locks != 0) {
      int tmp;
      
#line 128 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 128 
      if (tmp == 0) 
#line 128 
                    tmp_0 = 1; else 
#line 128 
                                    tmp_0 = 0;
    }
    else 
#line 128 
         tmp_0 = 0;
    
#line 128 
    int __ret_warn_on = tmp_0;
    
#line 128 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 128 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",128); else ;
    
#line 128 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 130 
  if (priv->beacon_ctx == (struct iwl_rxon_context *)0) {
    {
      
#line 131 
      bool __cond = (_Bool)((int)*("trying to build beacon w/o beacon context!\n" + 42UL) != 10);
      
#line 131 
      if ((int)__cond != 0) 
#line 131 
                            __compiletime_assert_131(); else ;
    }
    
#line 131 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"trying to build beacon w/o beacon context!\n");
    
#line 132 
    __retres = 0;
    
#line 132 
    goto return_label;
  }
  else ;
  {
    
#line 135 
    int __ret_warn_on_0 = priv->beacon_skb == (struct sk_buff *)0;
    
#line 135 
    if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 135 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",135); else ;
    
#line 135 
    tmp_1 = (long)(__ret_warn_on_0 != 0);
  }
  
#line 135 
  if ((long)tmp_1 != 0L) {
    
#line 136 
    __retres = -22;
    
#line 136 
    goto return_label;
  }
  else ;
  
#line 139 
  if (priv->beacon_cmd == (void *)0) 
#line 140 
                                     priv->beacon_cmd = kzalloc(60UL,208U); else ;
  
#line 141 
  tx_beacon_cmd = (struct iwl_tx_beacon_cmd *)priv->beacon_cmd;
  
#line 142 
  if (tx_beacon_cmd == (struct iwl_tx_beacon_cmd *)0) {
    
#line 143 
    __retres = -12;
    
#line 143 
    goto return_label;
  }
  else ;
  
#line 145 
  frame_size = (priv->beacon_skb)->len;
  
#line 148 
  tx_beacon_cmd->tx.len = (unsigned short)frame_size;
  
#line 149 
  tx_beacon_cmd->tx.sta_id = (priv->beacon_ctx)->bcast_sta_id;
  
#line 150 
  tx_beacon_cmd->tx.stop_time.life_time = 4294967295U;
  
#line 151 
  tx_beacon_cmd->tx.tx_flags = 73744U;
  
#line 155 
  iwl_set_beacon_tim(priv,tx_beacon_cmd,(priv->beacon_skb)->data,frame_size);
  
#line 159 
  info = IEEE80211_SKB_CB(priv->beacon_skb);
  
#line 166 
  if ((int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].idx < 0 || ((int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags & 8) != 0) 
    
#line 168 
    rate = 0U; else 
#line 170 
                    rate = (unsigned int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].idx;
  
#line 172 
  priv->mgmt_tx_ant = iwl_toggle_tx_ant(priv,(unsigned char)((int)priv->mgmt_tx_ant),(unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
  
#line 174 
  rate_flags = iwl_ant_idx_to_flags((unsigned char)((int)priv->mgmt_tx_ant));
  
#line 177 
  if ((unsigned int)info->band == 1U) 
#line 178 
                                      rate += 4U;
  else 
    
#line 179 
    if (rate <= 3U) 
#line 180 
                    rate_flags |= 512U; else ;
  
#line 182 
  tx_beacon_cmd->tx.rate_n_flags = iwl_hw_set_rate_n_flags((unsigned char)((int)((unsigned char)rate)),rate_flags);
  
#line 186 
  cmd.len[0] = (unsigned short)60U;
  
#line 187 
  cmd.data[0] = (void const *)tx_beacon_cmd;
  
#line 188 
  cmd.dataflags[0] = (unsigned char)1U;
  
#line 189 
  cmd.len[1] = (unsigned short)frame_size;
  
#line 190 
  cmd.data[1] = (void const *)(priv->beacon_skb)->data;
  
#line 191 
  cmd.dataflags[1] = (unsigned char)1U;
  
#line 193 
  tmp_2_0 = iwl_dvm_send_cmd(priv,& cmd);
  
#line 193 
  __retres = tmp_2_0;
  return_label: 
#line 193 
                return __retres;
}


#line 204 
void __compiletime_assert_204(void);


#line 221 
void __compiletime_assert_221(void);


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_bg_beacon_update(struct work_struct *work)
{
  struct iwl_priv *tmp;
  struct sk_buff *beacon;
  {
    
#line 199 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 199 
    tmp = (struct iwl_priv *)__mptr + 18446744073709539392U;
  }
  
#line 198 
  struct iwl_priv *priv = tmp;
  
#line 202 
  ldv_mutex_lock_74(& priv->mutex);
  
#line 203 
  if (priv->beacon_ctx == (struct iwl_rxon_context *)0) {
    {
      
#line 204 
      bool __cond = (_Bool)((int)*("updating beacon w/o beacon context!\n" + 35UL) != 10);
      
#line 204 
      if ((int)__cond != 0) 
#line 204 
                            __compiletime_assert_204(); else ;
    }
    
#line 204 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"updating beacon w/o beacon context!\n");
    
#line 205 
    goto out;
  }
  else ;
  
#line 208 
  if (((priv->beacon_ctx)->vif)->type != (unsigned int)NL80211_IFTYPE_AP) 
    
#line 215 
    goto out; else ;
  
#line 219 
  beacon = ieee80211_beacon_get(priv->hw,(priv->beacon_ctx)->vif);
  
#line 220 
  if (beacon == (struct sk_buff *)0) {
    {
      
#line 221 
      bool __cond_0 = (_Bool)((int)*("update beacon failed -- keeping old\n" + 35UL) != 10);
      
#line 221 
      if ((int)__cond_0 != 0) 
#line 221 
                              __compiletime_assert_221(); else ;
    }
    
#line 221 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"update beacon failed -- keeping old\n");
    
#line 222 
    goto out;
  }
  else ;
  
#line 226 
  consume_skb(priv->beacon_skb);
  
#line 228 
  priv->beacon_skb = beacon;
  
#line 230 
  iwlagn_send_beacon_cmd(priv);
  out: 
#line 231 
  ;
  
#line 232 
  ldv_mutex_unlock_75(& priv->mutex);
  
#line 233 
  return;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_bg_bt_runtime_config(struct work_struct *work)
{
  struct iwl_priv *tmp;
  int tmp_0;
  int tmp_1;
  {
    
#line 238 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 238 
    tmp = (struct iwl_priv *)__mptr + 18446744073709538808U;
  }
  
#line 237 
  struct iwl_priv *priv = tmp;
  
#line 240 
  ldv_mutex_lock_76(& priv->mutex);
  
#line 241 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 241 
  if (tmp_0 != 0) 
#line 242 
                  goto out; else ;
  
#line 245 
  tmp_1 = iwl_is_ready_rf(priv);
  
#line 245 
  if (tmp_1 == 0) 
#line 246 
                  goto out; else ;
  
#line 248 
  iwlagn_send_advance_bt_config(priv);
  out: 
#line 249 
  ;
  
#line 250 
  ldv_mutex_unlock_77(& priv->mutex);
  
#line 251 
  return;
}


#line 268 
void __compiletime_assert_270(void);


#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_bg_bt_full_concurrency(struct work_struct *work)
{
  struct iwl_priv *tmp;
  struct iwl_rxon_context *ctx;
  int tmp_0;
  int tmp_1;
  char *tmp_2;
  {
    
#line 256 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 256 
    tmp = (struct iwl_priv *)__mptr + 18446744073709538888U;
  }
  
#line 255 
  struct iwl_priv *priv = tmp;
  
#line 259 
  ldv_mutex_lock_78(& priv->mutex);
  
#line 261 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 261 
  if (tmp_0 != 0) 
#line 262 
                  goto out; else ;
  
#line 265 
  tmp_1 = iwl_is_ready_rf(priv);
  
#line 265 
  if (tmp_1 == 0) 
#line 266 
                  goto out; else ;
  {
    
#line 268 
    bool __cond = (_Bool)((int)*("BT coex in %s mode\n" + 18UL) != 10);
    
#line 268 
    if ((int)__cond != 0) 
#line 268 
                          __compiletime_assert_270(); else ;
  }
  
#line 268 
  if ((int)priv->bt_full_concurrent != 0) 
#line 268 
                                          tmp_2 = (char *)"full concurrency"; else 
                                                                    
#line 268 
                                                                    tmp_2 = (char *)"3-wire";
  
#line 268 
  ;
  
#line 268 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_bg_bt_full_concurrency","BT coex in %s mode\n",tmp_2);
  
#line 276 
  ctx = & priv->contexts[0];
  
#line 276 
  goto ldv_55475;
  ldv_55474: 
#line 277 
  ;
  
#line 276 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    
#line 277 
    iwlagn_set_rxon_chain(priv,ctx);
    
#line 278 
    iwlagn_commit_rxon(priv,ctx);
  }
  else ;
  
#line 276 
  ctx += 1;
  ldv_55475: 
#line 277 
  ;
  
#line 276 
  if (& priv->contexts[2] > ctx) 
#line 278 
                                 goto ldv_55474; else 
#line 281 
                                                      goto ldv_55476;
  ldv_55476: 
#line 282 
  ;
  
#line 281 
  iwlagn_send_advance_bt_config(priv);
  out: 
#line 282 
  ;
  
#line 283 
  ldv_mutex_unlock_79(& priv->mutex);
  
#line 284 
  return;
}


#line 286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
int iwl_send_statistics_request(struct iwl_priv *priv, u8 flags, bool clear)
{
  int __retres;
  unsigned int tmp;
  
#line 288 
  if ((int)clear != 0) 
#line 288 
                       tmp = 1U; else 
#line 288 
                                      tmp = 0U;
  
#line 288 
  struct iwl_statistics_cmd statistics_cmd = {.configuration_flags = tmp};
  
#line 293 
  if (((int)flags & 1) != 0) {
    int tmp_0;
    
#line 294 
    tmp_0 = iwl_dvm_send_cmd_pdu(priv,(unsigned char)156,1U,(unsigned short)4,(void const *)(& statistics_cmd));
    
#line 294 
    __retres = tmp_0;
    
#line 294 
    goto return_label;
  }
  else {
    int tmp_1;
    
#line 299 
    tmp_1 = iwl_dvm_send_cmd_pdu(priv,(unsigned char)156,0U,(unsigned short)4,(void const *)(& statistics_cmd));
    
#line 299 
    __retres = tmp_1;
    
#line 299 
    goto return_label;
  }
  return_label: 
#line 293 
                return __retres;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_bg_statistics_periodic(unsigned long data)
{
  int tmp;
  int tmp_0;
  
#line 316 
  struct iwl_priv *priv = (struct iwl_priv *)data;
  
#line 318 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 318 
  if (tmp != 0) 
#line 319 
                goto return_label; else ;
  
#line 322 
  tmp_0 = iwl_is_ready_rf(priv);
  
#line 322 
  if (tmp_0 == 0) 
#line 323 
                  goto return_label; else ;
  
#line 325 
  iwl_send_statistics_request(priv,(unsigned char)1,(_Bool)0);
  return_label: 
#line 326 
                return;
}


#line 329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_print_cont_event_trace(struct iwl_priv *priv, u32 base, u32 start_idx, u32 num_events, u32 capacity, u32 mode)
{
  u32 i;
  u32 ptr;
  u32 ev;
  u32 time;
  u32 data;
  unsigned long reg_flags;
  bool tmp;
  int tmp_0;
  
#line 338 
  if (mode == 0U) 
#line 339 
                  ptr = (start_idx * 8U + base) + 16U; else 
#line 341 
                                                            ptr = (start_idx * 12U + base) + 16U;
  
#line 344 
  tmp = (*(((priv->trans)->ops)->grab_nic_access))(priv->trans,(_Bool)0,& reg_flags);
  
#line 344 
  if ((long)((int)tmp != 0) == 0L) 
#line 345 
                                   goto return_label; else ;
  
#line 348 
  iwl_write32_0(priv->trans,1036U,ptr);
  {
    
#line 356 
    int __ret_warn_on = capacity - start_idx < num_events;
    
#line 356 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 356 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",356); else ;
    
#line 356 
    tmp_0 = (long)(__ret_warn_on != 0);
  }
  
#line 356 
  if ((long)tmp_0 != 0L) 
#line 357 
                         num_events = capacity - start_idx; else ;
  
#line 363 
  i = 0U;
  
#line 363 
  goto ldv_55504;
  ldv_55503: 
#line 364 
  ;
  
#line 364 
  ev = iwl_read32_0(priv->trans,1052U);
  
#line 365 
  time = iwl_read32_0(priv->trans,1052U);
  
#line 366 
  if (mode == 0U) 
#line 367 
                  trace_iwlwifi_dev_ucode_cont_event((struct device const *)(priv->trans)->dev,0U,time,ev);
  else {
    
#line 370 
    data = iwl_read32_0(priv->trans,1052U);
    
#line 371 
    trace_iwlwifi_dev_ucode_cont_event((struct device const *)(priv->trans)->dev,time,data,ev);
  }
  
#line 363 
  i += 1U;
  ldv_55504: 
#line 364 
  ;
  
#line 363 
  if (i < num_events) 
#line 365 
                      goto ldv_55503; else 
#line 368 
                                           goto ldv_55505;
  ldv_55505: 
#line 369 
  ;
  
#line 376 
  iwl_trans_release_nic_access(priv->trans,& reg_flags);
  return_label: 
#line 377 
                return;
}


#line 395 
void __compiletime_assert_396(void);


#line 379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_continuous_event_trace(struct iwl_priv *priv)
{
  u32 capacity;
  struct __anonstruct_read_971 read;
  u32 base;
  u32 mode;
  u32 num_wraps;
  u32 next_entry;
  int tmp;
  
#line 393 
  base = priv->device_pointers.log_event_table;
  
#line 394 
  tmp = iwlagn_hw_valid_rtc_data_addr(base);
  
#line 394 
  if (tmp != 0) {
    {
      
#line 395 
      bool __cond = (_Bool)0;
      
#line 395 
      if ((int)__cond != 0) 
#line 395 
                            __compiletime_assert_396(); else ;
    }
    
#line 395 
    iwl_trans_read_mem(priv->trans,base,(void *)(& read),4);
    
#line 397 
    capacity = read.capacity;
    
#line 398 
    mode = read.mode;
    
#line 399 
    num_wraps = read.wrap_counter;
    
#line 400 
    next_entry = read.write_counter;
  }
  else 
#line 402 
       goto return_label;
  
#line 409 
  if ((long)(next_entry == capacity) != 0L) 
#line 410 
                                            next_entry = 0U; else ;
  
#line 419 
  if ((long)(priv->event_log.next_entry > next_entry) != 0L && (long)(priv->event_log.num_wraps == num_wraps) != 0L) 
    
#line 421 
    num_wraps += 1U; else ;
  
#line 423 
  if (priv->event_log.num_wraps == num_wraps) {
    
#line 424 
    iwl_print_cont_event_trace(priv,base,priv->event_log.next_entry,next_entry - priv->event_log.next_entry,capacity,mode);
    
#line 429 
    priv->event_log.non_wraps_count += 1;
  }
  else {
    
#line 431 
    if (num_wraps - priv->event_log.num_wraps > 1U) 
#line 432 
                                                    priv->event_log.wraps_more_count += 1; else 
                                                                    
#line 434 
                                                                    priv->event_log.wraps_once_count += 1;
    
#line 436 
    trace_iwlwifi_dev_ucode_wrap_event((struct device const *)(priv->trans)->dev,num_wraps - priv->event_log.num_wraps,next_entry,priv->event_log.next_entry);
    
#line 440 
    if (priv->event_log.next_entry > next_entry) {
      
#line 441 
      iwl_print_cont_event_trace(priv,base,priv->event_log.next_entry,capacity - priv->event_log.next_entry,capacity,mode);
      
#line 446 
      iwl_print_cont_event_trace(priv,base,0U,next_entry,capacity,mode);
    }
    else {
      
#line 449 
      iwl_print_cont_event_trace(priv,base,next_entry,capacity - next_entry,capacity,mode);
      
#line 454 
      iwl_print_cont_event_trace(priv,base,0U,next_entry,capacity,mode);
    }
  }
  
#line 459 
  priv->event_log.num_wraps = num_wraps;
  
#line 460 
  priv->event_log.next_entry = next_entry;
  return_label: 
#line 461 
                return;
}


#line 471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_bg_ucode_trace(unsigned long data)
{
  int tmp;
  
#line 473 
  struct iwl_priv *priv = (struct iwl_priv *)data;
  
#line 475 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 475 
  if (tmp != 0) 
#line 476 
                goto return_label; else ;
  
#line 478 
  if ((int)priv->event_log.ucode_trace != 0) {
    unsigned long tmp_0;
    
#line 479 
    iwl_continuous_event_trace(priv);
    
#line 481 
    tmp_0 = msecs_to_jiffies(10U);
    
#line 481 
    ;
    
#line 481 
    ;
    
#line 481 
    ldv_mod_timer_80(& priv->ucode_trace,tmp_0 + jiffies);
  }
  else ;
  return_label: 
#line 484 
                return;
}


#line 498 
void __compiletime_assert_498(void);


#line 486  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_bg_tx_flush(struct work_struct *work)
{
  struct iwl_priv *tmp;
  int tmp_0;
  int tmp_1;
  {
    
#line 489 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 489 
    tmp = (struct iwl_priv *)__mptr + 18446744073709538968U;
  }
  
#line 488 
  struct iwl_priv *priv = tmp;
  
#line 491 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 491 
  if (tmp_0 != 0) 
#line 492 
                  goto return_label; else ;
  
#line 495 
  tmp_1 = iwl_is_ready_rf(priv);
  
#line 495 
  if (tmp_1 == 0) 
#line 496 
                  goto return_label; else ;
  {
    
#line 498 
    bool __cond = (_Bool)((int)*("device request: flush all tx frames\n" + 35UL) != 10);
    
#line 498 
    if ((int)__cond != 0) 
#line 498 
                          __compiletime_assert_498(); else ;
  }
  
#line 498 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_bg_tx_flush","device request: flush all tx frames\n");
  
#line 499 
  iwlagn_dev_txfifo_flush(priv);
  return_label: 
#line 500 
                return;
}


#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static u8 const iwlagn_bss_ac_to_fifo[4U] = {(unsigned char)3U, (unsigned char)2U, (unsigned char)1U, (unsigned char)0U};

#line 513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static u8 const iwlagn_bss_ac_to_queue[4U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U};

#line 517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static u8 const iwlagn_pan_ac_to_fifo[4U] = {(unsigned char)5U, (unsigned char)2U, (unsigned char)4U, (unsigned char)0U};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static u8 const iwlagn_pan_ac_to_queue[4U] = {(unsigned char)7U, (unsigned char)6U, (unsigned char)5U, (unsigned char)4U};

#line 587 
void __compiletime_assert_587(void);


#line 528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_init_context(struct iwl_priv *priv, u32 ucode_flags)
{
  int i;
  
#line 536 
  priv->valid_contexts = (unsigned char)1U;
  
#line 537 
  if ((ucode_flags & 1U) != 0U) 
#line 538 
                                priv->valid_contexts = (unsigned char)((unsigned int)priv->valid_contexts | 2U); else ;
  
#line 540 
  i = 0;
  
#line 540 
  goto ldv_55549;
  ldv_55548: 
#line 541 
  ;
  
#line 541 
  priv->contexts[i].ctxid = (enum iwl_rxon_context_id)i;
  
#line 540 
  i += 1;
  ldv_55549: 
#line 541 
  ;
  
#line 540 
  if (i <= 1) 
#line 542 
              goto ldv_55548; else 
#line 545 
                                   goto ldv_55550;
  ldv_55550: 
#line 546 
  ;
  
#line 543 
  priv->contexts[0].always_active = (_Bool)1;
  
#line 544 
  priv->contexts[0].is_active = (_Bool)1;
  
#line 545 
  priv->contexts[0].rxon_cmd = (unsigned char)16U;
  
#line 546 
  priv->contexts[0].rxon_timing_cmd = (unsigned char)20U;
  
#line 547 
  priv->contexts[0].rxon_assoc_cmd = (unsigned char)17U;
  
#line 548 
  priv->contexts[0].qos_cmd = (unsigned char)19U;
  
#line 549 
  priv->contexts[0].ap_sta_id = (unsigned char)0U;
  
#line 550 
  priv->contexts[0].wep_key_cmd = (unsigned char)32U;
  
#line 551 
  priv->contexts[0].bcast_sta_id = (unsigned char)15U;
  
#line 552 
  priv->contexts[0].exclusive_interface_modes = 66U;
  
#line 554 
  priv->contexts[0].interface_modes = 4U;
  
#line 556 
  priv->contexts[0].ap_devtype = (unsigned char)1U;
  
#line 557 
  priv->contexts[0].ibss_devtype = (unsigned char)4U;
  
#line 558 
  priv->contexts[0].station_devtype = (unsigned char)3U;
  
#line 559 
  priv->contexts[0].unused_devtype = (unsigned char)3U;
  
#line 560 
  memcpy((void *)(& priv->contexts[0].ac_to_queue),(void const *)(& iwlagn_bss_ac_to_queue),4UL);
  
#line 562 
  memcpy((void *)(& priv->contexts[0].ac_to_fifo),(void const *)(& iwlagn_bss_ac_to_fifo),4UL);
  
#line 565 
  priv->contexts[1].rxon_cmd = (unsigned char)179U;
  
#line 566 
  priv->contexts[1].rxon_timing_cmd = (unsigned char)180U;
  
#line 568 
  priv->contexts[1].rxon_assoc_cmd = (unsigned char)182U;
  
#line 570 
  priv->contexts[1].qos_cmd = (unsigned char)183U;
  
#line 571 
  priv->contexts[1].ap_sta_id = (unsigned char)1U;
  
#line 572 
  priv->contexts[1].wep_key_cmd = (unsigned char)184U;
  
#line 573 
  priv->contexts[1].bcast_sta_id = (unsigned char)14U;
  
#line 574 
  priv->contexts[1].station_flags = 8192U;
  
#line 575 
  priv->contexts[1].interface_modes = 12U;
  
#line 578 
  priv->contexts[1].ap_devtype = (unsigned char)7U;
  
#line 579 
  priv->contexts[1].station_devtype = (unsigned char)8U;
  
#line 580 
  priv->contexts[1].unused_devtype = (unsigned char)9U;
  
#line 581 
  memcpy((void *)(& priv->contexts[1].ac_to_queue),(void const *)(& iwlagn_pan_ac_to_queue),4UL);
  
#line 583 
  memcpy((void *)(& priv->contexts[1].ac_to_fifo),(void const *)(& iwlagn_pan_ac_to_fifo),4UL);
  
#line 585 
  priv->contexts[1].mcast_queue = (unsigned char)8U;
  {
    
#line 587 
    bool __cond = (_Bool)0;
    
#line 587 
    if ((int)__cond != 0) 
#line 587 
                          __compiletime_assert_587(); else ;
  }
  
#line 589 
  return;
}


#line 611 
void __compiletime_assert_611(void);


#line 613 
void __compiletime_assert_617(void);


#line 626 
void __compiletime_assert_626(void);


#line 628 
void __compiletime_assert_631(void);


#line 590  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_rf_kill_ct_config(struct iwl_priv *priv)
{
  struct iwl_ct_kill_config cmd;
  struct iwl_ct_kill_throttling_config adv_cmd;
  
#line 594 
  int ret = 0;
  
#line 596 
  iwl_write32_0(priv->trans,92U,8U);
  
#line 599 
  priv->thermal_throttle.ct_kill_toggle = (_Bool)0;
  
#line 601 
  if ((int)(priv->lib)->support_ct_kill_exit != 0) {
    
#line 602 
    adv_cmd.critical_temperature_enter = priv->hw_params.ct_kill_threshold;
    
#line 604 
    adv_cmd.critical_temperature_exit = priv->hw_params.ct_kill_exit_threshold;
    
#line 607 
    ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)164,0U,(unsigned short)12,(void const *)(& adv_cmd));
    
#line 610 
    if (ret != 0) {
      {
        
#line 611 
        bool __cond = (_Bool)((int)*("REPLY_CT_KILL_CONFIG_CMD failed\n" + 31UL) != 10);
        
#line 611 
        if ((int)__cond != 0) 
#line 611 
                              __compiletime_assert_611(); else ;
      }
      
#line 611 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"REPLY_CT_KILL_CONFIG_CMD failed\n");
    }
    else {
      {
        
#line 613 
        bool __cond_0 = (_Bool)((int)*("REPLY_CT_KILL_CONFIG_CMD " + 79UL) != 10);
        
#line 613 
        if ((int)__cond_0 != 0) 
#line 613 
                                __compiletime_assert_617(); else ;
      }
      
#line 613 
      __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_rf_kill_ct_config","REPLY_CT_KILL_CONFIG_CMD ",priv->hw_params.ct_kill_threshold,priv->hw_params.ct_kill_exit_threshold);
    }
  }
  else {
    
#line 619 
    cmd.critical_temperature_R = priv->hw_params.ct_kill_threshold;
    
#line 622 
    ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)164,0U,(unsigned short)12,(void const *)(& cmd));
    
#line 625 
    if (ret != 0) {
      {
        
#line 626 
        bool __cond_1 = (_Bool)((int)*("REPLY_CT_KILL_CONFIG_CMD failed\n" + 31UL) != 10);
        
#line 626 
        if ((int)__cond_1 != 0) 
#line 626 
                                __compiletime_assert_626(); else ;
      }
      
#line 626 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"REPLY_CT_KILL_CONFIG_CMD failed\n");
    }
    else {
      {
        
#line 628 
        bool __cond_2 = (_Bool)((int)*("REPLY_CT_KILL_CONFIG_CMD " + 62UL) != 10);
        
#line 628 
        if ((int)__cond_2 != 0) 
#line 628 
                                __compiletime_assert_631(); else ;
      }
      
#line 628 
      __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_rf_kill_ct_config","REPLY_CT_KILL_CONFIG_CMD ",priv->hw_params.ct_kill_threshold);
    }
  }
  
#line 631 
  return;
}


#line 635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static int iwlagn_send_calib_cfg_rt(struct iwl_priv *priv, u32 cfg)
{
  struct iwl_calib_cfg_cmd calib_cfg_cmd;
  int tmp;
  
#line 638 
  struct iwl_host_cmd cmd = {.data = {(void const *)(& calib_cfg_cmd)}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)92U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)101U};
  
#line 644 
  memset((void *)(& calib_cfg_cmd),0,92UL);
  
#line 645 
  calib_cfg_cmd.ucd_calib_cfg.once.is_enable = 1503U;
  
#line 646 
  calib_cfg_cmd.ucd_calib_cfg.once.start = cfg;
  
#line 648 
  tmp = iwl_dvm_send_cmd(priv,& cmd);
  
#line 648 
  return tmp;
}


#line 659 
void __compiletime_assert_659(void);


#line 664 
void __compiletime_assert_664(void);


#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static int iwlagn_send_tx_ant_config(struct iwl_priv *priv, u8 valid_tx_ant)
{
  int __retres;
  
#line 654 
  struct iwl_tx_ant_config_cmd tx_ant_cmd = {.valid = (unsigned int)valid_tx_ant};
  
#line 658 
  if ((((priv->fw)->ucode_ver >> 8) & 255U) > 1U) {
    int tmp;
    {
      
#line 659 
      bool __cond = (_Bool)((int)*("select valid tx ant: %u\n" + 23UL) != 10);
      
#line 659 
      if ((int)__cond != 0) 
#line 659 
                            __compiletime_assert_659(); else ;
    }
    
#line 659 
    __iwl_dbg(priv->dev,4U,(_Bool)0,"iwlagn_send_tx_ant_config","select valid tx ant: %u\n",(int)valid_tx_ant);
    
#line 660 
    tmp = iwl_dvm_send_cmd_pdu(priv,(unsigned char)152,0U,(unsigned short)4,(void const *)(& tx_ant_cmd));
    
#line 660 
    __retres = tmp;
    
#line 660 
    goto return_label;
  }
  else {
    {
      
#line 664 
      bool __cond_0 = (_Bool)((int)*("TX_ANT_CONFIGURATION_CMD not supported\n" + 38UL) != 10);
      
#line 664 
      if ((int)__cond_0 != 0) 
#line 664 
                              __compiletime_assert_664(); else ;
    }
    
#line 664 
    __iwl_dbg(priv->dev,4U,(_Bool)0,"iwlagn_send_tx_ant_config","TX_ANT_CONFIGURATION_CMD not supported\n");
    
#line 665 
    __retres = -95;
    
#line 665 
    goto return_label;
  }
  return_label: 
#line 658 
                return __retres;
}


#line 684 
void __compiletime_assert_685(void);


#line 689 
void __compiletime_assert_689(void);


#line 669  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_send_bt_config(struct iwl_priv *priv)
{
  char *tmp;
  int tmp_0;
  
#line 671 
  struct iwl_bt_cmd bt_cmd = {.flags = (unsigned char)0, .lead_time = (unsigned char)30U, .max_kill = (unsigned char)5U, .reserved = (unsigned char)0, .kill_ack_mask = 0U, .kill_cts_mask = 0U};
  
#line 678 
  if (! iwlwifi_mod_params.bt_coex_active) 
#line 679 
                                           bt_cmd.flags = (unsigned char)0U; else 
                                                                    
#line 681 
                                                                    bt_cmd.flags = (unsigned char)3U;
  
#line 683 
  priv->bt_enable_flag = bt_cmd.flags;
  {
    
#line 684 
    bool __cond = (_Bool)((int)*("BT coex %s\n" + 10UL) != 10);
    
#line 684 
    if ((int)__cond != 0) 
#line 684 
                          __compiletime_assert_685(); else ;
  }
  
#line 684 
  if ((unsigned int)bt_cmd.flags == 0U) 
#line 684 
                                        tmp = (char *)"disable"; else 
                                                                   
#line 684 
                                                                   tmp = (char *)"active";
  
#line 684 
  ;
  
#line 684 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_send_bt_config","BT coex %s\n",tmp);
  
#line 687 
  tmp_0 = iwl_dvm_send_cmd_pdu(priv,(unsigned char)155,0U,(unsigned short)12,(void const *)(& bt_cmd));
  
#line 687 
  if (tmp_0 != 0) {
    {
      
#line 689 
      bool __cond_0 = (_Bool)((int)*("failed to send BT Coex Config\n" + 29UL) != 10);
      
#line 689 
      if ((int)__cond_0 != 0) 
#line 689 
                              __compiletime_assert_689(); else ;
    }
    
#line 689 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"failed to send BT Coex Config\n");
  }
  else ;
  
#line 691 
  return;
}


#line 702 
void __compiletime_assert_702(void);


#line 697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
int iwl_alive_start(struct iwl_priv *priv)
{
  int __retres;
  int tmp;
  int tmp_1;
  int tmp_2;
  
#line 699 
  int ret = 0;
  
#line 700 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  {
    
#line 702 
    bool __cond = (_Bool)((int)*("Runtime Alive received.\n" + 23UL) != 10);
    
#line 702 
    if ((int)__cond != 0) 
#line 702 
                          __compiletime_assert_702(); else ;
  }
  
#line 702 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_alive_start","Runtime Alive received.\n");
  
#line 705 
  set_bit(2L,(unsigned long volatile *)(& priv->status));
  
#line 707 
  tmp = iwl_is_rfkill(priv);
  
#line 707 
  if (tmp != 0) {
    
#line 708 
    __retres = -132;
    
#line 708 
    goto return_label;
  }
  else ;
  
#line 710 
  if ((int)priv->event_log.ucode_trace != 0) 
#line 712 
                                             ldv_mod_timer_81(& priv->ucode_trace,jiffies); else ;
  
#line 716 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) {
    
#line 719 
    if ((int)((priv->lib)->bt_params)->bt_sco_disable != 0) 
#line 720 
                                                            priv->bt_enable_pspoll = (_Bool)0; else 
                                                                    
#line 722 
                                                                    priv->bt_enable_pspoll = (_Bool)1;
    
#line 724 
    priv->bt_valid = (unsigned short)255U;
    
#line 725 
    priv->kill_ack_mask = 4294901760U;
    
#line 726 
    priv->kill_cts_mask = 4294901760U;
    
#line 727 
    iwlagn_send_advance_bt_config(priv);
    
#line 728 
    priv->bt_valid = (unsigned short)1U;
    
#line 729 
    priv->cur_rssi_ctx = (struct iwl_rxon_context *)0;
    
#line 731 
    iwl_send_prio_tbl(priv);
    
#line 734 
    ret = iwl_send_bt_env(priv,(unsigned char)1,(unsigned char)1);
    
#line 736 
    if (ret != 0) {
      
#line 737 
      __retres = ret;
      
#line 737 
      goto return_label;
    }
    else ;
    
#line 738 
    ret = iwl_send_bt_env(priv,(unsigned char)0,(unsigned char)1);
    
#line 740 
    if (ret != 0) {
      
#line 741 
      __retres = ret;
      
#line 741 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 742 
    if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) 
      
#line 746 
      iwl_send_bt_config(priv); else ;
  
#line 752 
  iwlagn_send_calib_cfg_rt(priv,2U);
  
#line 754 
  ieee80211_wake_queues(priv->hw);
  
#line 757 
  iwlagn_send_tx_ant_config(priv,(unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
  
#line 759 
  tmp_1 = iwl_is_associated_ctx(ctx);
  
#line 759 
  if (tmp_1 != 0) {
    
#line 759 
    if (! priv->wowlan) {
      
#line 760 
      struct iwl_rxon_cmd *active_rxon = (struct iwl_rxon_cmd *)(& ctx->active);
      
#line 763 
      ctx->staging.filter_flags |= 32U;
      
#line 764 
      active_rxon->filter_flags &= 4294967263U;
    }
    else 
#line 759 
         goto _LAND;
  }
  else {
    _LAND: {
             struct iwl_rxon_context *tmp_0;
             
#line 768 
             tmp_0 = & priv->contexts[0];
             
#line 768 
             goto ldv_55624;
             ldv_55623: 
#line 769 
             ;
             
#line 768 
             if ((((unsigned long)priv->valid_contexts >> (unsigned int)tmp_0->ctxid) & 1UL) != 0UL) 
               
#line 769 
               iwl_connection_init_rx_config(priv,tmp_0); else ;
             
#line 768 
             tmp_0 += 1;
             ldv_55624: 
#line 769 
             ;
             
#line 768 
             if (& priv->contexts[2] > tmp_0) 
#line 770 
                                              goto ldv_55623; else 
#line 773 
                                                                   goto ldv_55625;
             ldv_55625: 
#line 774 
             ;
             
#line 771 
             iwlagn_set_rxon_chain(priv,ctx);
           }
  }
  
#line 774 
  if (! priv->wowlan) 
#line 776 
                      iwl_reset_run_time_calib(priv); else ;
  
#line 779 
  set_bit(3L,(unsigned long volatile *)(& priv->status));
  
#line 782 
  ret = iwlagn_commit_rxon(priv,ctx);
  
#line 783 
  if (ret != 0) {
    
#line 784 
    __retres = ret;
    
#line 784 
    goto return_label;
  }
  else ;
  
#line 787 
  iwl_rf_kill_ct_config(priv);
  {
    
#line 789 
    bool __cond_0 = (_Bool)((int)*("ALIVE processing complete.\n" + 26UL) != 10);
    
#line 789 
    if ((int)__cond_0 != 0) 
#line 789 
                            __compiletime_assert_789(); else ;
  }
  
#line 789 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_alive_start","ALIVE processing complete.\n");
  
#line 791 
  tmp_2 = iwl_power_update_mode(priv,(_Bool)1);
  
#line 791 
  __retres = tmp_2;
  return_label: 
#line 791 
                return __retres;
}


#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_clear_driver_stations(struct iwl_priv *priv)
{
  struct iwl_rxon_context *ctx;
  
#line 807 
  ldv_spin_lock_bh_82(& priv->sta_lock);
  
#line 808 
  memset((void *)(& priv->stations),0,1664UL);
  
#line 809 
  priv->num_stations = 0;
  
#line 811 
  priv->ucode_key_table = 0UL;
  
#line 813 
  ctx = & priv->contexts[0];
  
#line 813 
  goto ldv_55635;
  ldv_55634: 
#line 814 
  ;
  
#line 813 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    
#line 821 
    memset((void *)(& ctx->wep_keys),0,96UL);
    
#line 822 
    ctx->key_mapping_keys = (unsigned char)0U;
  }
  else ;
  
#line 813 
  ctx += 1;
  ldv_55635: 
#line 814 
  ;
  
#line 813 
  if (& priv->contexts[2] > ctx) 
#line 815 
                                 goto ldv_55634; else 
#line 818 
                                                      goto ldv_55636;
  ldv_55636: 
#line 819 
  ;
  
#line 825 
  ldv_spin_unlock_bh_83(& priv->sta_lock);
  
#line 826 
  return;
}


#line 832 
void __compiletime_assert_832(void);


#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
void iwl_down(struct iwl_priv *priv)
{
  int exit_pending;
  int tmp_1;
  int tmp_2_0;
  int tmp_3;
  {
    
#line 832 
    bool __cond = (_Bool)((int)*("iwlwifi" + 21UL) != 10);
    
#line 832 
    if ((int)__cond != 0) 
#line 832 
                          __compiletime_assert_832(); else ;
  }
  
#line 832 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_down","iwlwifi");
  {
    int tmp_0;
    
#line 834 
    if (debug_locks != 0) {
      int tmp;
      
#line 834 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 834 
      if (tmp == 0) 
#line 834 
                    tmp_0 = 1; else 
#line 834 
                                    tmp_0 = 0;
    }
    else 
#line 834 
         tmp_0 = 0;
    
#line 834 
    int __ret_warn_on = tmp_0;
    
#line 834 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 834 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",834); else ;
    
#line 834 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 836 
  iwl_scan_cancel_timeout(priv,200UL);
  
#line 838 
  exit_pending = test_and_set_bit(5L,(unsigned long volatile *)(& priv->status));
  
#line 841 
  iwl_clear_ucode_stations(priv,(struct iwl_rxon_context *)0);
  
#line 842 
  iwl_dealloc_bcast_stations(priv);
  
#line 843 
  iwl_clear_driver_stations(priv);
  
#line 846 
  priv->bt_status = (unsigned char)0U;
  
#line 847 
  priv->cur_rssi_ctx = (struct iwl_rxon_context *)0;
  
#line 848 
  priv->bt_is_sco = (_Bool)0;
  
#line 849 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) 
    
#line 850 
    priv->bt_traffic_load = ((priv->lib)->bt_params)->bt_init_traffic_load; else 
                                                                    
#line 853 
                                                                    priv->bt_traffic_load = (unsigned char)0U;
  
#line 854 
  priv->bt_full_concurrent = (_Bool)0;
  
#line 855 
  priv->bt_ci_compliance = (unsigned char)0U;
  
#line 859 
  if (exit_pending == 0) 
#line 860 
                         set_bit(5L,(unsigned long volatile *)(& priv->status)); else ;
  
#line 862 
  if ((unsigned int)priv->mac80211_registered != 0U) 
#line 863 
                                                     ieee80211_stop_queues(priv->hw); else ;
  
#line 865 
  priv->ucode_loaded = (_Bool)0;
  
#line 866 
  iwl_trans_stop_device(priv->trans);
  
#line 869 
  atomic_set(& priv->num_aux_in_flight,0);
  
#line 875 
  tmp_1 = constant_test_bit(0L,(unsigned long const volatile *)(& priv->status));
  
#line 873 
  tmp_2_0 = constant_test_bit(10L,(unsigned long const volatile *)(& priv->status));
  
#line 875 
  tmp_3 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 877 
  priv->status &= (unsigned long)((tmp_1 | (tmp_2_0 << 10)) | (tmp_3 << 5));
  
#line 879 
  consume_skb(priv->beacon_skb);
  
#line 880 
  priv->beacon_skb = (struct sk_buff *)0;
  
#line 881 
  return;
}


#line 889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_bg_run_time_calib_work(struct work_struct *work)
{
  struct iwl_priv *tmp;
  int tmp_0;
  {
    
#line 891 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 891 
    tmp = (struct iwl_priv *)__mptr + 18446744073709538352U;
  }
  
#line 891 
  struct iwl_priv *priv = tmp;
  
#line 894 
  ldv_mutex_lock_84(& priv->mutex);
  
#line 896 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 896 
  if (tmp_0 != 0) 
#line 896 
                  goto _LOR;
  else {
    int tmp_1;
    
#line 896 
    tmp_1 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
    
#line 896 
    if (tmp_1 != 0) {
      _LOR: {
              
#line 898 
              ldv_mutex_unlock_85(& priv->mutex);
              
#line 899 
              goto return_label;
            }
    }
    else ;
  }
  
#line 902 
  if ((unsigned int)priv->start_calib != 0U) {
    
#line 903 
    iwl_chain_noise_calibration(priv);
    
#line 904 
    iwl_sensitivity_calibration(priv);
  }
  else ;
  
#line 907 
  ldv_mutex_unlock_86(& priv->mutex);
  return_label: 
#line 908 
                return;
}


#line 910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
void iwlagn_prepare_restart(struct iwl_priv *priv)
{
  bool bt_full_concurrent;
  u8 bt_ci_compliance;
  u8 bt_load;
  u8 bt_status;
  bool bt_is_sco;
  int i;
  {
    int tmp_0;
    
#line 919 
    if (debug_locks != 0) {
      int tmp;
      
#line 919 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 919 
      if (tmp == 0) 
#line 919 
                    tmp_0 = 1; else 
#line 919 
                                    tmp_0 = 0;
    }
    else 
#line 919 
         tmp_0 = 0;
    
#line 919 
    int __ret_warn_on = tmp_0;
    
#line 919 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 919 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",919); else ;
    
#line 919 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 921 
  priv->is_open = (unsigned char)0U;
  
#line 932 
  bt_full_concurrent = priv->bt_full_concurrent;
  
#line 933 
  bt_ci_compliance = priv->bt_ci_compliance;
  
#line 934 
  bt_load = priv->bt_traffic_load;
  
#line 935 
  bt_status = priv->bt_status;
  
#line 936 
  bt_is_sco = priv->bt_is_sco;
  
#line 938 
  iwl_down(priv);
  
#line 940 
  priv->bt_full_concurrent = bt_full_concurrent;
  
#line 941 
  priv->bt_ci_compliance = bt_ci_compliance;
  
#line 942 
  priv->bt_traffic_load = bt_load;
  
#line 943 
  priv->bt_status = bt_status;
  
#line 944 
  priv->bt_is_sco = bt_is_sco;
  
#line 947 
  i = 11;
  
#line 947 
  goto ldv_55666;
  ldv_55665: 
#line 948 
  ;
  
#line 948 
  priv->queue_to_mac80211[i] = (unsigned char)255U;
  
#line 947 
  i += 1;
  ldv_55666: 
#line 948 
  ;
  
#line 947 
  if (i <= 31) 
#line 949 
               goto ldv_55665; else 
#line 952 
                                    goto ldv_55667;
  ldv_55667: 
#line 953 
  ;
  
#line 950 
  i = 0;
  
#line 950 
  goto ldv_55669;
  ldv_55668: 
#line 951 
  ;
  
#line 951 
  atomic_set(& priv->queue_stop_count[i],0);
  
#line 950 
  i += 1;
  ldv_55669: 
#line 951 
  ;
  
#line 950 
  if (i <= 31) 
#line 952 
               goto ldv_55668; else 
#line 955 
                                    goto ldv_55670;
  ldv_55670: 
#line 956 
  ;
  
#line 953 
  memset((void *)(& priv->agg_q_alloc),0,8UL);
  
#line 954 
  return;
}


#line 971 
void __compiletime_assert_972(void);


#line 956  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_bg_restart(struct work_struct *data)
{
  struct iwl_priv *tmp;
  int tmp_0;
  int tmp_1;
  {
    
#line 958 
    struct work_struct const *__mptr = (struct work_struct const *)data;
    
#line 958 
    tmp = (struct iwl_priv *)__mptr + 18446744073709539632U;
  }
  
#line 958 
  struct iwl_priv *priv = tmp;
  
#line 960 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 960 
  if (tmp_0 != 0) 
#line 961 
                  goto return_label; else ;
  
#line 963 
  tmp_1 = test_and_set_bit(10L,(unsigned long volatile *)(& priv->status));
  
#line 963 
  if (tmp_1 != 0) {
    
#line 964 
    ldv_mutex_lock_87(& priv->mutex);
    
#line 965 
    iwlagn_prepare_restart(priv);
    
#line 966 
    ldv_mutex_unlock_88(& priv->mutex);
    
#line 967 
    iwl_cancel_deferred_work(priv);
    
#line 968 
    if ((unsigned int)priv->mac80211_registered != 0U) 
#line 969 
                                                       ieee80211_restart_hw(priv->hw);
    else {
      {
        
#line 971 
        bool __cond = (_Bool)((int)*("Cannot request restart before registrating with mac80211\n" + 56UL) != 10);
        
#line 971 
        if ((int)__cond != 0) 
#line 971 
                              __compiletime_assert_972(); else ;
      }
      
#line 971 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Cannot request restart before registrating with mac80211\n");
    }
  }
  else {
    
#line 974 
    int __ret_warn_on = 1;
    
#line 974 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 974 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",974); else ;
    
#line 974 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  return_label: 
#line 976 
                return;
}


#line 984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_setup_deferred_work(struct iwl_priv *priv)
{
  struct workqueue_struct *tmp_0;
  {
    struct lock_class_key __key;
    char const *__lock_name;
    
#line 986 
    __lock_name = "\"%s\"";
    
#line 986 
    tmp_0 = __alloc_workqueue_key("%s",131082U,1,& __key,__lock_name,(char *)"iwlwifi");
  }
  
#line 986 
  priv->workqueue = tmp_0;
  {
    struct lock_class_key __key_0;
    
#line 988 
    __init_work(& priv->restart,0);
    
#line 988 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 988 
    priv->restart.data = __constr_expr_37;
    
#line 988 
    lockdep_init_map(& priv->restart.lockdep_map,"(&priv->restart)",& __key_0,0);
    
#line 988 
    INIT_LIST_HEAD(& priv->restart.entry);
    
#line 988 
    priv->restart.func = & iwl_bg_restart;
  }
  {
    struct lock_class_key __key_1;
    
#line 989 
    __init_work(& priv->beacon_update,0);
    
#line 989 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 989 
    priv->beacon_update.data = __constr_expr_38;
    
#line 989 
    lockdep_init_map(& priv->beacon_update.lockdep_map,"(&priv->beacon_update)",& __key_1,0);
    
#line 989 
    INIT_LIST_HEAD(& priv->beacon_update.entry);
    
#line 989 
    priv->beacon_update.func = & iwl_bg_beacon_update;
  }
  {
    struct lock_class_key __key_2;
    
#line 990 
    __init_work(& priv->run_time_calib_work,0);
    
#line 990 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 990 
    priv->run_time_calib_work.data = __constr_expr_39;
    
#line 990 
    lockdep_init_map(& priv->run_time_calib_work.lockdep_map,"(&priv->run_time_calib_work)",& __key_2,0);
    
#line 990 
    INIT_LIST_HEAD(& priv->run_time_calib_work.entry);
    
#line 990 
    priv->run_time_calib_work.func = & iwl_bg_run_time_calib_work;
  }
  {
    struct lock_class_key __key_3;
    
#line 991 
    __init_work(& priv->tx_flush,0);
    
#line 991 
    atomic_long_t __constr_expr_40 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 991 
    priv->tx_flush.data = __constr_expr_40;
    
#line 991 
    lockdep_init_map(& priv->tx_flush.lockdep_map,"(&priv->tx_flush)",& __key_3,0);
    
#line 991 
    INIT_LIST_HEAD(& priv->tx_flush.entry);
    
#line 991 
    priv->tx_flush.func = & iwl_bg_tx_flush;
  }
  {
    struct lock_class_key __key_4;
    
#line 992 
    __init_work(& priv->bt_full_concurrency,0);
    
#line 992 
    atomic_long_t __constr_expr_41 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 992 
    priv->bt_full_concurrency.data = __constr_expr_41;
    
#line 992 
    lockdep_init_map(& priv->bt_full_concurrency.lockdep_map,"(&priv->bt_full_concurrency)",& __key_4,0);
    
#line 992 
    INIT_LIST_HEAD(& priv->bt_full_concurrency.entry);
    
#line 992 
    priv->bt_full_concurrency.func = & iwl_bg_bt_full_concurrency;
  }
  {
    struct lock_class_key __key_5;
    
#line 993 
    __init_work(& priv->bt_runtime_config,0);
    
#line 993 
    atomic_long_t __constr_expr_42 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 993 
    priv->bt_runtime_config.data = __constr_expr_42;
    
#line 993 
    lockdep_init_map(& priv->bt_runtime_config.lockdep_map,"(&priv->bt_runtime_config)",& __key_5,0);
    
#line 993 
    INIT_LIST_HEAD(& priv->bt_runtime_config.entry);
    
#line 993 
    priv->bt_runtime_config.func = & iwl_bg_bt_runtime_config;
  }
  
#line 995 
  iwl_setup_scan_deferred_work(priv);
  
#line 997 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) 
    
#line 998 
    iwlagn_bt_setup_deferred_work(priv); else ;
  {
    struct lock_class_key __key_6;
    
#line 1000 
    init_timer_key(& priv->statistics_periodic,0U,"((&priv->statistics_periodic))",& __key_6);
  }
  
#line 1000 
  priv->statistics_periodic.function = & iwl_bg_statistics_periodic;
  
#line 1000 
  priv->statistics_periodic.data = (unsigned long)priv;
  {
    struct lock_class_key __key_7;
    
#line 1003 
    init_timer_key(& priv->ucode_trace,0U,"((&priv->ucode_trace))",& __key_7);
  }
  
#line 1003 
  priv->ucode_trace.function = & iwl_bg_ucode_trace;
  
#line 1003 
  priv->ucode_trace.data = (unsigned long)priv;
  
#line 1004 
  return;
}


#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
void iwl_cancel_deferred_work(struct iwl_priv *priv)
{
  
#line 1009 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) 
    
#line 1010 
    iwlagn_bt_cancel_deferred_work(priv); else ;
  
#line 1012 
  cancel_work_sync(& priv->run_time_calib_work);
  
#line 1013 
  cancel_work_sync(& priv->beacon_update);
  
#line 1015 
  iwl_cancel_scan_deferred_work(priv);
  
#line 1017 
  cancel_work_sync(& priv->bt_full_concurrency);
  
#line 1018 
  cancel_work_sync(& priv->bt_runtime_config);
  
#line 1020 
  ldv_del_timer_sync_89(& priv->statistics_periodic);
  
#line 1021 
  ldv_del_timer_sync_90(& priv->ucode_trace);
  
#line 1022 
  return;
}


#line 1024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static int iwl_init_drv(struct iwl_priv *priv)
{
  int __retres;
  
#line 1026 
  spinlock_check(& priv->sta_lock);
  {
    struct lock_class_key __key;
    
#line 1026 
    __raw_spin_lock_init(& priv->sta_lock.__anonCompField_spinlock_18.rlock,"&(&priv->sta_lock)->rlock",& __key);
  }
  {
    struct lock_class_key __key_0;
    
#line 1028 
    __mutex_init(& priv->mutex,"&priv->mutex",& __key_0);
  }
  
#line 1030 
  INIT_LIST_HEAD(& priv->calib_results);
  
#line 1032 
  priv->band = IEEE80211_BAND_2GHZ;
  
#line 1034 
  priv->plcp_delta_threshold = (priv->lib)->plcp_delta_threshold;
  
#line 1036 
  priv->iw_mode = NL80211_IFTYPE_STATION;
  
#line 1037 
  priv->current_ht_config.smps = IEEE80211_SMPS_STATIC;
  
#line 1038 
  priv->missed_beacon_threshold = 5;
  
#line 1039 
  priv->agg_tids_count = (unsigned char)0U;
  
#line 1041 
  priv->rx_statistics_jiffies = jiffies;
  
#line 1044 
  iwlagn_set_rxon_chain(priv,& priv->contexts[0]);
  
#line 1046 
  iwl_init_scan_params(priv);
  
#line 1049 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) {
    
#line 1051 
    priv->kill_ack_mask = 4294901760U;
    
#line 1052 
    priv->kill_cts_mask = 4294901760U;
    
#line 1053 
    priv->bt_valid = (unsigned short)255U;
    
#line 1054 
    priv->bt_on_thresh = (unsigned short)4U;
    
#line 1055 
    priv->bt_duration = (unsigned short)625U;
    
#line 1056 
    priv->dynamic_frag_thresh = (unsigned short)0U;
  }
  else ;
  
#line 1059 
  __retres = 0;
  
#line 1059 
  return __retres;
}


#line 1062  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_uninit_drv(struct iwl_priv *priv)
{
  struct iwl_wipan_noa_data *tmp_3;
  
#line 1064 
  kfree((void const *)priv->scan_cmd);
  
#line 1065 
  kfree((void const *)priv->beacon_cmd);
  {
    struct iwl_wipan_noa_data *tmp_0;
    {
      struct iwl_wipan_noa_data *tmp;
      {
        union __anonunion___u_973 __u;
        
#line 1066 
        __read_once_size((void const volatile *)(& priv->noa_data),(void *)(& __u.__c),8);
        
#line 1066 
        tmp = __u.__val;
      }
      
#line 1066 
      struct iwl_wipan_noa_data *_________p1 = tmp;
      
#line 1066 
      tmp_0 = _________p1;
    }
    
#line 1066 
    struct iwl_wipan_noa_data *________p1 = tmp_0;
    {
      bool __warned;
      int tmp_2;
      int tmp_1;
      
#line 1066 
      tmp_1 = debug_lockdep_rcu_enabled();
      
#line 1066 
      if (tmp_1 != 0) 
        
#line 1066 
        if (! __warned) 
#line 1066 
                        tmp_2 = 1; else 
#line 1066 
                                        tmp_2 = 0;
      else 
#line 1066 
           tmp_2 = 0;
    }
    
#line 1066 
    tmp_3 = ________p1;
  }
  
#line 1066 
  kfree((void const *)tmp_3);
  
#line 1067 
  iwl_calib_free_results(priv);
  
#line 1069 
  kfree((void const *)priv->wowlan_sram);
  
#line 1070 
  return;
}


#line 1073  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_set_hw_params(struct iwl_priv *priv)
{
  
#line 1075 
  if ((priv->cfg)->ht_params != (struct iwl_ht_params const *)0) 
#line 1076 
                                                                 priv->hw_params.use_rts_for_aggregation = ((priv->cfg)->ht_params)->use_rts_for_aggregation; else ;
  
#line 1080 
  (*((priv->lib)->set_hw_params))(priv);
  
#line 1081 
  return;
}


#line 1089 
void __compiletime_assert_1089(void);


#line 1095 
void __compiletime_assert_1095(void);


#line 1101 
void __compiletime_assert_1101(void);


#line 1086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_option_config(struct iwl_priv *priv)
{
  {
    
#line 1089 
    bool __cond = (_Bool)((int)*("CONFIG_IWLWIFI_DEBUG enabled\n" + 28UL) != 10);
    
#line 1089 
    if ((int)__cond != 0) 
#line 1089 
                          __compiletime_assert_1089(); else ;
  }
  
#line 1089 
  __iwl_info(priv->dev,"CONFIG_IWLWIFI_DEBUG enabled\n");
  {
    
#line 1095 
    bool __cond_0 = (_Bool)((int)*("CONFIG_IWLWIFI_DEBUGFS enabled\n" + 30UL) != 10);
    
#line 1095 
    if ((int)__cond_0 != 0) 
#line 1095 
                            __compiletime_assert_1095(); else ;
  }
  
#line 1095 
  __iwl_info(priv->dev,"CONFIG_IWLWIFI_DEBUGFS enabled\n");
  {
    
#line 1101 
    bool __cond_1 = (_Bool)((int)*("CONFIG_IWLWIFI_DEVICE_TRACING enabled\n" + 37UL) != 10);
    
#line 1101 
    if ((int)__cond_1 != 0) 
#line 1101 
                            __compiletime_assert_1101(); else ;
  }
  
#line 1101 
  __iwl_info(priv->dev,"CONFIG_IWLWIFI_DEVICE_TRACING enabled\n");
  
#line 1102 
  return;
}


#line 1113 
void __compiletime_assert_1113(void);


#line 1119 
void __compiletime_assert_1119(void);


#line 1123 
void __compiletime_assert_1127(void);


#line 1137 
void __compiletime_assert_1139(void);


#line 1107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static int iwl_eeprom_init_hw_params(struct iwl_priv *priv)
{
  int __retres;
  char *tmp;
  char *tmp_0;
  char *tmp_1;
  
#line 1109 
  struct iwl_nvm_data *data = priv->nvm_data;
  
#line 1111 
  if ((int)data->sku_cap_11n_enable != 0 && (priv->cfg)->ht_params == (struct iwl_ht_params const *)0) {
    {
      
#line 1113 
      bool __cond = (_Bool)((int)*("Invalid 11n configuration\n" + 25UL) != 10);
      
#line 1113 
      if ((int)__cond != 0) 
#line 1113 
                            __compiletime_assert_1113(); else ;
    }
    
#line 1113 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid 11n configuration\n");
    
#line 1114 
    __retres = -22;
    
#line 1114 
    goto return_label;
  }
  else ;
  
#line 1117 
  if ((! data->sku_cap_11n_enable && ! data->sku_cap_band_24GHz_enable) && ! data->sku_cap_band_52GHz_enable) {
    {
      
#line 1119 
      bool __cond_0 = (_Bool)((int)*("Invalid device sku\n" + 18UL) != 10);
      
#line 1119 
      if ((int)__cond_0 != 0) 
#line 1119 
                              __compiletime_assert_1119(); else ;
    }
    
#line 1119 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid device sku\n");
    
#line 1120 
    __retres = -22;
    
#line 1120 
    goto return_label;
  }
  else ;
  {
    
#line 1123 
    bool __cond_1 = (_Bool)((int)*("Device SKU: 24GHz %s %s, 52GHz %s %s, 11.n %s %s\n" + 48UL) != 10);
    
#line 1123 
    if ((int)__cond_1 != 0) 
#line 1123 
                            __compiletime_assert_1127(); else ;
  }
  
#line 1123 
  if ((int)data->sku_cap_11n_enable != 0) 
#line 1123 
                                          tmp = (char *)""; else 
#line 1123 
                                                                 tmp = (char *)"NOT";
  
#line 1123 
  if ((int)data->sku_cap_band_52GHz_enable != 0) 
#line 1123 
                                                 tmp_0 = (char *)""; else 
                                                                    
#line 1123 
                                                                    tmp_0 = (char *)"NOT";
  
#line 1123 
  if ((int)data->sku_cap_band_24GHz_enable != 0) 
#line 1123 
                                                 tmp_1 = (char *)""; else 
                                                                    
#line 1123 
                                                                    tmp_1 = (char *)"NOT";
  
#line 1123 
  ;
  
#line 1123 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_eeprom_init_hw_params","Device SKU: 24GHz %s %s, 52GHz %s %s, 11.n %s %s\n",tmp_1,(char *)"enabled",tmp_0,(char *)"enabled",tmp,(char *)"enabled");
  
#line 1129 
  priv->hw_params.tx_chains_num = num_of_ant((unsigned char)((int)data->valid_tx_ant));
  
#line 1131 
  if ((int)(priv->cfg)->rx_with_siso_diversity != 0) 
#line 1132 
                                                     priv->hw_params.rx_chains_num = (unsigned char)1U; else 
                                                                    
#line 1134 
                                                                    priv->hw_params.rx_chains_num = num_of_ant((unsigned char)((int)data->valid_rx_ant));
  {
    
#line 1137 
    bool __cond_2 = (_Bool)((int)*("Valid Tx ant: 0x%X, Valid Rx ant: 0x%X\n" + 38UL) != 10);
    
#line 1137 
    if ((int)__cond_2 != 0) 
#line 1137 
                            __compiletime_assert_1139(); else ;
  }
  
#line 1137 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_eeprom_init_hw_params","Valid Tx ant: 0x%X, Valid Rx ant: 0x%X\n",(int)data->valid_tx_ant,(int)data->valid_rx_ant);
  
#line 1141 
  __retres = 0;
  return_label: 
#line 1141 
                return __retres;
}


#line 1261 
void __compiletime_assert_1261(void);


#line 1271 
void __compiletime_assert_1272(void);


#line 1282 
void __compiletime_assert_1283(void);


#line 1291 
void __compiletime_assert_1291(void);


#line 1312 
void __compiletime_assert_1312(void);


#line 1329 
void __compiletime_assert_1329(void);


#line 1144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static struct iwl_op_mode *iwl_op_mode_dvm_start(struct iwl_trans *trans, struct iwl_cfg const *cfg, struct iwl_fw const *fw, struct dentry *dbgfs_dir)
{
  struct iwl_op_mode *__retres;
  struct iwl_priv *priv;
  struct ieee80211_hw *hw;
  struct iwl_op_mode *op_mode;
  u16 num_mac;
  u32 ucode_flags;
  int i;
  int tmp;
  char *tmp_0;
  int tmp_1;
  int tmp_2_0;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  
#line 1154 
  struct iwl_trans_config trans_cfg = {.op_mode = (struct iwl_op_mode *)0, .cmd_queue = (unsigned char)0, .cmd_fifo = (unsigned char)0, .cmd_q_wdg_timeout = 0U, .no_reclaim_cmds = (u8 const *)0, .n_no_reclaim_cmds = 0U, .rx_buf_size_8k = (_Bool)0, .bc_table_dword = (_Bool)0, .scd_set_active = (_Bool)0, .command_names = (char const * const *)0, .sdio_adma_addr = 0U};
  
#line 1155 
  u8 const no_reclaim_cmds[5U] = {(unsigned char)192U, (unsigned char)193U, (unsigned char)197U, (unsigned char)157U, (unsigned char)28U};
  
#line 1167 
  hw = iwl_alloc_all();
  
#line 1168 
  if (hw == (struct ieee80211_hw *)0) {
    
#line 1169 
    printk("\001",cfg->name);
    
#line 1170 
    goto out;
  }
  else ;
  
#line 1173 
  op_mode = (struct iwl_op_mode *)hw->priv;
  
#line 1174 
  op_mode->ops = & iwl_dvm_ops;
  
#line 1175 
  priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 1176 
  priv->trans = trans;
  
#line 1177 
  priv->dev = trans->dev;
  
#line 1178 
  priv->cfg = cfg;
  
#line 1179 
  priv->fw = fw;
  
#line 1181 
  switch ((unsigned int)(priv->cfg)->device_family) {
    case (unsigned int)1: 
#line 1182 
    ;
    case (unsigned int)2: 
#line 1183 
    ;
    
#line 1184 
    priv->lib = & iwl_dvm_1000_cfg;
    
#line 1185 
    goto ldv_55780;
    case (unsigned int)3: 
#line 1186 
    ;
    
#line 1187 
    priv->lib = & iwl_dvm_2000_cfg;
    
#line 1188 
    goto ldv_55780;
    case (unsigned int)5: 
#line 1189 
    ;
    
#line 1190 
    priv->lib = & iwl_dvm_105_cfg;
    
#line 1191 
    goto ldv_55780;
    case (unsigned int)4: 
#line 1192 
    ;
    case (unsigned int)6: 
#line 1193 
    ;
    
#line 1194 
    priv->lib = & iwl_dvm_2030_cfg;
    
#line 1195 
    goto ldv_55780;
    case (unsigned int)7: 
#line 1196 
    ;
    
#line 1197 
    priv->lib = & iwl_dvm_5000_cfg;
    
#line 1198 
    goto ldv_55780;
    case (unsigned int)8: 
#line 1199 
    ;
    
#line 1200 
    priv->lib = & iwl_dvm_5150_cfg;
    
#line 1201 
    goto ldv_55780;
    case (unsigned int)9: 
#line 1202 
    ;
    case (unsigned int)10: 
#line 1203 
    ;
    
#line 1204 
    priv->lib = & iwl_dvm_6000_cfg;
    
#line 1205 
    goto ldv_55780;
    case (unsigned int)11: 
#line 1206 
    ;
    
#line 1207 
    priv->lib = & iwl_dvm_6005_cfg;
    
#line 1208 
    goto ldv_55780;
    case (unsigned int)13: 
#line 1209 
    ;
    case (unsigned int)14: 
#line 1210 
    ;
    
#line 1211 
    priv->lib = & iwl_dvm_6050_cfg;
    
#line 1212 
    goto ldv_55780;
    case (unsigned int)12: 
#line 1213 
    ;
    
#line 1214 
    priv->lib = & iwl_dvm_6030_cfg;
    
#line 1215 
    goto ldv_55780;
    default: 
#line 1216 
    ;
    
#line 1217 
    goto ldv_55780;
  }
  ldv_55780: 
#line 1220 
  ;
  {
    
#line 1220 
    int __ret_warn_on = priv->lib == (struct iwl_dvm_cfg const *)0;
    
#line 1220 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1220 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",1220); else ;
    
#line 1220 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 1220 
  if ((long)tmp != 0L) 
#line 1221 
                       goto out_free_hw; else ;
  
#line 1227 
  trans_cfg.op_mode = op_mode;
  
#line 1228 
  trans_cfg.no_reclaim_cmds = (u8 const *)(& no_reclaim_cmds);
  
#line 1229 
  trans_cfg.n_no_reclaim_cmds = 5U;
  
#line 1230 
  trans_cfg.rx_buf_size_8k = (_Bool)(iwlwifi_mod_params.amsdu_size_8K != 0);
  
#line 1231 
  trans_cfg.cmd_q_wdg_timeout = 0U;
  
#line 1233 
  trans_cfg.command_names = (char const * const *)(& iwl_dvm_cmd_strings);
  
#line 1234 
  trans_cfg.cmd_fifo = (unsigned char)7U;
  {
    
#line 1236 
    int __ret_warn_on_0 = (unsigned int)((priv->cfg)->base_params)->num_of_queues > 64U;
    
#line 1236 
    if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 1236 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",1237); else ;
    
#line 1236 
    long tmp_2 = (long)(__ret_warn_on_0 != 0);
  }
  
#line 1239 
  ucode_flags = fw->ucode_capa.flags;
  
#line 1241 
  if ((ucode_flags & 1U) != 0U) {
    
#line 1242 
    priv->sta_key_max_num = (unsigned char)16U;
    
#line 1243 
    trans_cfg.cmd_queue = (unsigned char)9U;
  }
  else {
    
#line 1245 
    priv->sta_key_max_num = (unsigned char)8U;
    
#line 1246 
    trans_cfg.cmd_queue = (unsigned char)4U;
  }
  
#line 1250 
  iwl_trans_configure(priv->trans,(struct iwl_trans_config const *)(& trans_cfg));
  
#line 1252 
  trans->rx_mpdu_cmd = (unsigned char)193U;
  
#line 1253 
  trans->rx_mpdu_cmd_hdr_size = (unsigned char)4U;
  
#line 1257 
  SET_IEEE80211_DEV(priv->hw,(priv->trans)->dev);
  
#line 1259 
  iwl_option_config(priv);
  {
    
#line 1261 
    bool __cond = (_Bool)((int)*("*** LOAD DRIVER ***\n" + 19UL) != 10);
    
#line 1261 
    if ((int)__cond != 0) 
#line 1261 
                          __compiletime_assert_1261(); else ;
  }
  
#line 1261 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_op_mode_dvm_start","*** LOAD DRIVER ***\n");
  
#line 1264 
  priv->bt_ant_couple_ok = (_Bool)(iwlwifi_mod_params.ant_coupling > 35);
  
#line 1270 
  priv->bt_ch_announce = (_Bool)1;
  {
    
#line 1271 
    bool __cond_0 = (_Bool)((int)*("BT channel inhibition is %s\n" + 27UL) != 10);
    
#line 1271 
    if ((int)__cond_0 != 0) 
#line 1271 
                            __compiletime_assert_1272(); else ;
  }
  
#line 1271 
  if ((int)priv->bt_ch_announce != 0) 
#line 1271 
                                      tmp_0 = (char *)"On"; else 
#line 1271 
                                                                 tmp_0 = (char *)"Off";
  
#line 1271 
  ;
  
#line 1271 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_op_mode_dvm_start","BT channel inhibition is %s\n",tmp_0);
  
#line 1277 
  spinlock_check(& priv->statistics.lock);
  {
    struct lock_class_key __key;
    
#line 1277 
    __raw_spin_lock_init(& priv->statistics.lock.__anonCompField_spinlock_18.rlock,"&(&priv->statistics.lock)->rlock",& __key);
  }
  {
    
#line 1282 
    bool __cond_1 = (_Bool)((int)*("Detected %s, REV=0x%X\n" + 21UL) != 10);
    
#line 1282 
    if ((int)__cond_1 != 0) 
#line 1282 
                            __compiletime_assert_1283(); else ;
  }
  
#line 1282 
  __iwl_info(priv->dev,"Detected %s, REV=0x%X\n",(priv->cfg)->name,(priv->trans)->hw_rev);
  
#line 1285 
  tmp_1 = iwl_trans_start_hw(priv->trans);
  
#line 1285 
  if (tmp_1 != 0) 
#line 1286 
                  goto out_free_hw; else ;
  
#line 1289 
  tmp_2_0 = iwl_read_eeprom(priv->trans,& priv->eeprom_blob,& priv->eeprom_blob_size);
  
#line 1289 
  if (tmp_2_0 != 0) {
    {
      
#line 1291 
      bool __cond_2 = (_Bool)((int)*("Unable to init EEPROM\n" + 21UL) != 10);
      
#line 1291 
      if ((int)__cond_2 != 0) 
#line 1291 
                              __compiletime_assert_1291(); else ;
    }
    
#line 1291 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to init EEPROM\n");
    
#line 1292 
    goto out_free_hw;
  }
  else ;
  
#line 1296 
  iwl_trans_stop_device(priv->trans);
  
#line 1298 
  priv->nvm_data = iwl_parse_eeprom_data((priv->trans)->dev,priv->cfg,(u8 const *)priv->eeprom_blob,priv->eeprom_blob_size);
  
#line 1301 
  if (priv->nvm_data == (struct iwl_nvm_data *)0) 
#line 1302 
                                                  goto out_free_eeprom_blob; else ;
  
#line 1304 
  tmp_3 = iwl_nvm_check_version(priv->nvm_data,priv->trans);
  
#line 1304 
  if (tmp_3 != 0) 
#line 1305 
                  goto out_free_eeprom; else ;
  
#line 1307 
  tmp_4 = iwl_eeprom_init_hw_params(priv);
  
#line 1307 
  if (tmp_4 != 0) 
#line 1308 
                  goto out_free_eeprom; else ;
  
#line 1311 
  memcpy((void *)(& priv->addresses[0].addr),(void const *)(& (priv->nvm_data)->hw_addr),6UL);
  {
    
#line 1312 
    bool __cond_3 = (_Bool)((int)*("MAC address: %pM\n" + 16UL) != 10);
    
#line 1312 
    if ((int)__cond_3 != 0) 
#line 1312 
                            __compiletime_assert_1312(); else ;
  }
  
#line 1312 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_op_mode_dvm_start","MAC address: %pM\n",(u8 *)(& priv->addresses[0].addr));
  
#line 1313 
  ((priv->hw)->wiphy)->addresses = (struct mac_address *)(& priv->addresses);
  
#line 1314 
  ((priv->hw)->wiphy)->n_addresses = (unsigned short)1U;
  
#line 1315 
  num_mac = (unsigned short)(priv->nvm_data)->n_hw_addrs;
  
#line 1316 
  if ((unsigned int)num_mac > 1U) {
    
#line 1317 
    memcpy((void *)(& priv->addresses[1].addr),(void const *)(& priv->addresses[0].addr),6UL);
    
#line 1319 
    priv->addresses[1].addr[5] = (u8)((int)priv->addresses[1].addr[5] + 1);
    
#line 1320 
    ((priv->hw)->wiphy)->n_addresses = (u16)((int)((priv->hw)->wiphy)->n_addresses + 1);
  }
  else ;
  
#line 1326 
  iwl_set_hw_params(priv);
  
#line 1328 
  if (! (priv->nvm_data)->sku_cap_ipan_enable) {
    {
      
#line 1329 
      bool __cond_4 = (_Bool)((int)*("Your EEPROM disabled PAN\n" + 24UL) != 10);
      
#line 1329 
      if ((int)__cond_4 != 0) 
#line 1329 
                              __compiletime_assert_1329(); else ;
    }
    
#line 1329 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_op_mode_dvm_start","Your EEPROM disabled PAN\n");
    
#line 1330 
    ucode_flags &= 4294967294U;
    
#line 1335 
    priv->sta_key_max_num = (unsigned char)8U;
    
#line 1336 
    trans_cfg.cmd_queue = (unsigned char)4U;
    
#line 1339 
    iwl_trans_configure(priv->trans,(struct iwl_trans_config const *)(& trans_cfg));
  }
  else ;
  
#line 1345 
  i = 0;
  
#line 1345 
  goto ldv_55831;
  ldv_55830: 
#line 1346 
  ;
  
#line 1346 
  priv->queue_to_mac80211[i] = (unsigned char)255U;
  
#line 1347 
  if ((i <= 10 && i != 4) && i != 9) 
#line 1350 
                                     priv->queue_to_mac80211[i] = (unsigned char)i; else ;
  
#line 1351 
  atomic_set(& priv->queue_stop_count[i],0);
  
#line 1345 
  i += 1;
  ldv_55831: 
#line 1346 
  ;
  
#line 1345 
  if (i <= 31) 
#line 1347 
               goto ldv_55830; else 
#line 1350 
                                    goto ldv_55832;
  ldv_55832: 
#line 1351 
  ;
  
#line 1354 
  tmp_5 = iwl_init_drv(priv);
  
#line 1354 
  if (tmp_5 != 0) 
#line 1355 
                  goto out_free_eeprom; else ;
  
#line 1362 
  iwl_setup_deferred_work(priv);
  
#line 1363 
  iwl_setup_rx_handlers(priv);
  
#line 1365 
  iwl_power_initialize(priv);
  
#line 1366 
  iwl_tt_initialize(priv);
  
#line 1368 
  snprintf((char *)(& ((priv->hw)->wiphy)->fw_version),32UL,"%s",(char const *)(& fw->fw_version));
  
#line 1372 
  priv->new_scan_threshold_behaviour = (_Bool)((ucode_flags & 2U) != 0U);
  
#line 1375 
  priv->phy_calib_chain_noise_reset_cmd = (unsigned char)fw->ucode_capa.standard_phy_calibration_size;
  
#line 1377 
  priv->phy_calib_chain_noise_gain_cmd = (unsigned char)((unsigned int)((unsigned char)fw->ucode_capa.standard_phy_calibration_size) + 1U);
  
#line 1381 
  iwl_init_context(priv,ucode_flags);
  
#line 1388 
  tmp_6 = iwlagn_mac_setup_register(priv,& fw->ucode_capa);
  
#line 1388 
  if (tmp_6 != 0) 
#line 1389 
                  goto out_destroy_workqueue; else ;
  
#line 1391 
  tmp_7 = iwl_dbgfs_register(priv,dbgfs_dir);
  
#line 1391 
  if (tmp_7 != 0) 
#line 1392 
                  goto out_mac80211_unregister; else ;
  
#line 1394 
  __retres = op_mode;
  
#line 1394 
  goto return_label;
  out_mac80211_unregister: 
#line 1396 
  ;
  
#line 1397 
  iwlagn_mac_unregister(priv);
  out_destroy_workqueue: 
#line 1398 
  ;
  
#line 1399 
  iwl_tt_exit(priv);
  
#line 1400 
  iwl_cancel_deferred_work(priv);
  
#line 1401 
  destroy_workqueue(priv->workqueue);
  
#line 1402 
  priv->workqueue = (struct workqueue_struct *)0;
  
#line 1403 
  iwl_uninit_drv(priv);
  out_free_eeprom_blob: 
#line 1404 
  ;
  
#line 1405 
  kfree((void const *)priv->eeprom_blob);
  out_free_eeprom: 
#line 1406 
  ;
  
#line 1407 
  iwl_free_nvm_data(priv->nvm_data);
  out_free_hw: 
#line 1408 
  ;
  
#line 1409 
  ldv_ieee80211_free_hw_91(priv->hw);
  out: 
#line 1410 
  ;
  
#line 1411 
  op_mode = (struct iwl_op_mode *)0;
  
#line 1412 
  __retres = op_mode;
  return_label: 
#line 1412 
                return __retres;
}


#line 1419 
void __compiletime_assert_1419(void);


#line 1415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_op_mode_dvm_stop(struct iwl_op_mode *op_mode)
{
  
#line 1417 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  {
    
#line 1419 
    bool __cond = (_Bool)((int)*("*** UNLOAD DRIVER ***\n" + 21UL) != 10);
    
#line 1419 
    if ((int)__cond != 0) 
#line 1419 
                          __compiletime_assert_1419(); else ;
  }
  
#line 1419 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_op_mode_dvm_stop","*** UNLOAD DRIVER ***\n");
  
#line 1421 
  iwlagn_mac_unregister(priv);
  
#line 1423 
  iwl_tt_exit(priv);
  
#line 1425 
  kfree((void const *)priv->eeprom_blob);
  
#line 1426 
  iwl_free_nvm_data(priv->nvm_data);
  
#line 1429 
  flush_workqueue(priv->workqueue);
  
#line 1434 
  destroy_workqueue(priv->workqueue);
  
#line 1435 
  priv->workqueue = (struct workqueue_struct *)0;
  
#line 1437 
  iwl_uninit_drv(priv);
  
#line 1439 
  consume_skb(priv->beacon_skb);
  
#line 1441 
  iwl_trans_op_mode_leave(priv->trans);
  
#line 1442 
  ldv_ieee80211_free_hw_92(priv->hw);
  
#line 1443 
  return;
}


#line 1445  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static char const * const desc_lookup_text[28U] = {"OK", "FAIL", "BAD_PARAM", "BAD_CHECKSUM", "NMI_INTERRUPT_WDG", "SYSASSERT", "FATAL_ERROR", "BAD_COMMAND", "HW_ERROR_TUNE_LOCK", "HW_ERROR_TEMPERATURE", "ILLEGAL_CHAN_FREQ", "VCC_NOT_STABLE", "FH_ERROR", "NMI_INTERRUPT_HOST", "NMI_INTERRUPT_ACTION_PT", "NMI_INTERRUPT_UNKNOWN", "UCODE_VERSION_MISMATCH", "HW_ERROR_ABS_LOCK", "HW_ERROR_CAL_LOCK_FAIL", "NMI_INTERRUPT_INST_ACTION_PT", "NMI_INTERRUPT_DATA_ACTION_PT", "NMI_TRM_HW_ER", "NMI_INTERRUPT_TRM", "NMI_INTERRUPT_BREAK_POINT", "DEBUG_0", "DEBUG_1", "DEBUG_2", "DEBUG_3"};

#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static struct __anonstruct_advanced_lookup_975 advanced_lookup[16U] = {{.name = (char *)"NMI_INTERRUPT_WDG", .num = (unsigned char)52U}, {.name = (char *)"SYSASSERT", .num = (unsigned char)53U}, {.name = (char *)"UCODE_VERSION_MISMATCH", .num = (unsigned char)55U}, {.name = (char *)"BAD_COMMAND", .num = (unsigned char)56U}, {.name = (char *)"NMI_INTERRUPT_DATA_ACTION_PT", .num = (unsigned char)60U}, {.name = (char *)"FATAL_ERROR", .num = (unsigned char)61U}, {.name = (char *)"NMI_TRM_HW_ERR", .num = (unsigned char)70U}, {.name = (char *)"NMI_INTERRUPT_TRM", .num = (unsigned char)76U}, {.name = (char *)"NMI_INTERRUPT_BREAK_POINT", .num = (unsigned char)84U}, {.name = (char *)"NMI_INTERRUPT_WDG_RXF_FULL", .num = (unsigned char)92U}, {.name = (char *)"NMI_INTERRUPT_WDG_NO_RBD_RXF_FULL", .num = (unsigned char)100U}, {.name = (char *)"NMI_INTERRUPT_HOST", .num = (unsigned char)102U}, {.name = (char *)"NMI_INTERRUPT_ACTION_PT", .num = (unsigned char)124U}, {.name = (char *)"NMI_INTERRUPT_UNKNOWN", .num = (unsigned char)132U}, {.name = (char *)"NMI_INTERRUPT_INST_ACTION_PT", .num = (unsigned char)134U}, {.name = (char *)"ADVANCED_SYSASSERT", .num = (unsigned char)0U}};

#line 1495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static char const *desc_lookup(u32 num)
{
  char const *__retres;
  int i;
  
#line 1498 
  int max = 28;
  
#line 1500 
  if (num < (unsigned int)max) {
    
#line 1501 
    __retres = desc_lookup_text[num];
    
#line 1501 
    goto return_label;
  }
  else ;
  
#line 1503 
  max = 15;
  
#line 1504 
  i = 0;
  
#line 1504 
  goto ldv_55862;
  ldv_55861: 
#line 1505 
  ;
  
#line 1505 
  if ((unsigned int)advanced_lookup[i].num == num) 
#line 1506 
                                                   goto ldv_55860; else ;
  
#line 1504 
  i += 1;
  ldv_55862: 
#line 1505 
  ;
  
#line 1504 
  if (i < max) 
#line 1506 
               goto ldv_55861; else 
#line 1509 
                                    goto ldv_55860;
  ldv_55860: 
#line 1510 
  ;
  
#line 1508 
  __retres = (char const *)advanced_lookup[i].name;
  return_label: 
#line 1508 
                return __retres;
}


#line 1530 
void __compiletime_assert_1534(void);


#line 1539 
void __compiletime_assert_1539(void);


#line 1542 
void __compiletime_assert_1542(void);


#line 1543 
void __compiletime_assert_1544(void);


#line 1553 
void __compiletime_assert_1554(void);


#line 1555 
void __compiletime_assert_1555(void);


#line 1556 
void __compiletime_assert_1556(void);


#line 1557 
void __compiletime_assert_1557(void);


#line 1558 
void __compiletime_assert_1558(void);


#line 1559 
void __compiletime_assert_1559(void);


#line 1560 
void __compiletime_assert_1560(void);


#line 1561 
void __compiletime_assert_1561(void);


#line 1562 
void __compiletime_assert_1562(void);


#line 1563 
void __compiletime_assert_1563(void);


#line 1564 
void __compiletime_assert_1564(void);


#line 1565 
void __compiletime_assert_1565(void);


#line 1566 
void __compiletime_assert_1566(void);


#line 1567 
void __compiletime_assert_1567(void);


#line 1568 
void __compiletime_assert_1568(void);


#line 1569 
void __compiletime_assert_1569(void);


#line 1570 
void __compiletime_assert_1570(void);


#line 1571 
void __compiletime_assert_1571(void);


#line 1572 
void __compiletime_assert_1572(void);


#line 1573 
void __compiletime_assert_1573(void);


#line 1574 
void __compiletime_assert_1574(void);


#line 1575 
void __compiletime_assert_1575(void);


#line 1576 
void __compiletime_assert_1576(void);


#line 1577 
void __compiletime_assert_1577(void);


#line 1578 
void __compiletime_assert_1578(void);


#line 1579 
void __compiletime_assert_1579(void);


#line 1580 
void __compiletime_assert_1580(void);


#line 1581 
void __compiletime_assert_1581(void);


#line 1582 
void __compiletime_assert_1582(void);


#line 1583 
void __compiletime_assert_1583(void);


#line 1584 
void __compiletime_assert_1584(void);


#line 1585 
void __compiletime_assert_1585(void);


#line 1586 
void __compiletime_assert_1586(void);


#line 1514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_dump_nic_error_log(struct iwl_priv *priv)
{
  u32 base;
  struct iwl_error_event_table table;
  int tmp_0;
  char const *tmp_1;
  
#line 1516 
  struct iwl_trans *trans = priv->trans;
  
#line 1520 
  base = priv->device_pointers.error_event_table;
  
#line 1521 
  if (priv->cur_ucode == (unsigned int)IWL_UCODE_INIT) {
    
#line 1522 
    if (base == 0U) 
#line 1523 
                    base = (priv->fw)->init_errlog_ptr; else ;
  }
  else 
    
#line 1525 
    if (base == 0U) 
#line 1526 
                    base = (priv->fw)->inst_errlog_ptr; else ;
  
#line 1529 
  tmp_0 = iwlagn_hw_valid_rtc_data_addr(base);
  
#line 1529 
  if (tmp_0 == 0) {
    char *tmp;
    {
      
#line 1530 
      bool __cond = (_Bool)((int)*("Not valid error log pointer 0x%08X for %s uCode\n" + 47UL) != 10);
      
#line 1530 
      if ((int)__cond != 0) 
#line 1530 
                            __compiletime_assert_1534(); else ;
    }
    
#line 1530 
    if (priv->cur_ucode == (unsigned int)IWL_UCODE_INIT) 
#line 1530 
                                                         tmp = (char *)"Init"; else 
                                                                    
#line 1530 
                                                                    tmp = (char *)"RT";
    
#line 1530 
    ;
    
#line 1530 
    ;
    
#line 1530 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Not valid error log pointer 0x%08X for %s uCode\n",base,tmp);
    
#line 1535 
    goto return_label;
  }
  else ;
  {
    
#line 1539 
    bool __cond_0 = (_Bool)0;
    
#line 1539 
    if ((int)__cond_0 != 0) 
#line 1539 
                            __compiletime_assert_1539(); else ;
  }
  
#line 1539 
  iwl_trans_read_mem(trans,base,(void *)(& table),37);
  
#line 1541 
  if ((unsigned long)table.valid * 28UL > 3UL) {
    {
      
#line 1542 
      bool __cond_1 = (_Bool)((int)*("Start IWL Error Log Dump:\n" + 25UL) != 10);
      
#line 1542 
      if ((int)__cond_1 != 0) 
#line 1542 
                              __compiletime_assert_1542(); else ;
    }
    
#line 1542 
    __iwl_err(trans->dev,(_Bool)0,(_Bool)0,"Start IWL Error Log Dump:\n");
    {
      
#line 1543 
      bool __cond_2 = (_Bool)((int)*("Status: 0x%08lX, count: %d\n" + 26UL) != 10);
      
#line 1543 
      if ((int)__cond_2 != 0) 
#line 1543 
                              __compiletime_assert_1544(); else ;
    }
    
#line 1543 
    __iwl_err(trans->dev,(_Bool)0,(_Bool)0,"Status: 0x%08lX, count: %d\n",priv->status,table.valid);
  }
  else ;
  
#line 1547 
  trace_iwlwifi_dev_ucode_error((struct device const *)trans->dev,table.error_id,table.tsf_low,table.data1,table.data2,table.line,table.blink1,table.blink2,table.ilink1,table.ilink2,table.bcon_time,table.gp1,table.gp2,table.gp3,table.ucode_ver,table.hw_ver,0U,table.brd_ver);
  {
    
#line 1553 
    bool __cond_3 = (_Bool)((int)*("0x%08X | %-28s\n" + 14UL) != 10);
    
#line 1553 
    if ((int)__cond_3 != 0) 
#line 1553 
                            __compiletime_assert_1554(); else ;
  }
  
#line 1553 
  tmp_1 = desc_lookup(table.error_id);
  
#line 1553 
  ;
  
#line 1553 
  ;
  
#line 1553 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | %-28s\n",table.error_id,tmp_1);
  {
    
#line 1555 
    bool __cond_4 = (_Bool)((int)*("0x%08X | uPc\n" + 12UL) != 10);
    
#line 1555 
    if ((int)__cond_4 != 0) 
#line 1555 
                            __compiletime_assert_1555(); else ;
  }
  
#line 1555 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | uPc\n",table.pc);
  {
    
#line 1556 
    bool __cond_5 = (_Bool)((int)*("0x%08X | branchlink1\n" + 20UL) != 10);
    
#line 1556 
    if ((int)__cond_5 != 0) 
#line 1556 
                            __compiletime_assert_1556(); else ;
  }
  
#line 1556 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | branchlink1\n",table.blink1);
  {
    
#line 1557 
    bool __cond_6 = (_Bool)((int)*("0x%08X | branchlink2\n" + 20UL) != 10);
    
#line 1557 
    if ((int)__cond_6 != 0) 
#line 1557 
                            __compiletime_assert_1557(); else ;
  }
  
#line 1557 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | branchlink2\n",table.blink2);
  {
    
#line 1558 
    bool __cond_7 = (_Bool)((int)*("0x%08X | interruptlink1\n" + 23UL) != 10);
    
#line 1558 
    if ((int)__cond_7 != 0) 
#line 1558 
                            __compiletime_assert_1558(); else ;
  }
  
#line 1558 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | interruptlink1\n",table.ilink1);
  {
    
#line 1559 
    bool __cond_8 = (_Bool)((int)*("0x%08X | interruptlink2\n" + 23UL) != 10);
    
#line 1559 
    if ((int)__cond_8 != 0) 
#line 1559 
                            __compiletime_assert_1559(); else ;
  }
  
#line 1559 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | interruptlink2\n",table.ilink2);
  {
    
#line 1560 
    bool __cond_9 = (_Bool)((int)*("0x%08X | data1\n" + 14UL) != 10);
    
#line 1560 
    if ((int)__cond_9 != 0) 
#line 1560 
                            __compiletime_assert_1560(); else ;
  }
  
#line 1560 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | data1\n",table.data1);
  {
    
#line 1561 
    bool __cond_10 = (_Bool)((int)*("0x%08X | data2\n" + 14UL) != 10);
    
#line 1561 
    if ((int)__cond_10 != 0) 
#line 1561 
                             __compiletime_assert_1561(); else ;
  }
  
#line 1561 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | data2\n",table.data2);
  {
    
#line 1562 
    bool __cond_11 = (_Bool)((int)*("0x%08X | line\n" + 13UL) != 10);
    
#line 1562 
    if ((int)__cond_11 != 0) 
#line 1562 
                             __compiletime_assert_1562(); else ;
  }
  
#line 1562 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | line\n",table.line);
  {
    
#line 1563 
    bool __cond_12 = (_Bool)((int)*("0x%08X | beacon time\n" + 20UL) != 10);
    
#line 1563 
    if ((int)__cond_12 != 0) 
#line 1563 
                             __compiletime_assert_1563(); else ;
  }
  
#line 1563 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | beacon time\n",table.bcon_time);
  {
    
#line 1564 
    bool __cond_13 = (_Bool)((int)*("0x%08X | tsf low\n" + 16UL) != 10);
    
#line 1564 
    if ((int)__cond_13 != 0) 
#line 1564 
                             __compiletime_assert_1564(); else ;
  }
  
#line 1564 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | tsf low\n",table.tsf_low);
  {
    
#line 1565 
    bool __cond_14 = (_Bool)((int)*("0x%08X | tsf hi\n" + 15UL) != 10);
    
#line 1565 
    if ((int)__cond_14 != 0) 
#line 1565 
                             __compiletime_assert_1565(); else ;
  }
  
#line 1565 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | tsf hi\n",table.tsf_hi);
  {
    
#line 1566 
    bool __cond_15 = (_Bool)((int)*("0x%08X | time gp1\n" + 17UL) != 10);
    
#line 1566 
    if ((int)__cond_15 != 0) 
#line 1566 
                             __compiletime_assert_1566(); else ;
  }
  
#line 1566 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | time gp1\n",table.gp1);
  {
    
#line 1567 
    bool __cond_16 = (_Bool)((int)*("0x%08X | time gp2\n" + 17UL) != 10);
    
#line 1567 
    if ((int)__cond_16 != 0) 
#line 1567 
                             __compiletime_assert_1567(); else ;
  }
  
#line 1567 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | time gp2\n",table.gp2);
  {
    
#line 1568 
    bool __cond_17 = (_Bool)((int)*("0x%08X | time gp3\n" + 17UL) != 10);
    
#line 1568 
    if ((int)__cond_17 != 0) 
#line 1568 
                             __compiletime_assert_1568(); else ;
  }
  
#line 1568 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | time gp3\n",table.gp3);
  {
    
#line 1569 
    bool __cond_18 = (_Bool)((int)*("0x%08X | uCode version\n" + 22UL) != 10);
    
#line 1569 
    if ((int)__cond_18 != 0) 
#line 1569 
                             __compiletime_assert_1569(); else ;
  }
  
#line 1569 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | uCode version\n",table.ucode_ver);
  {
    
#line 1570 
    bool __cond_19 = (_Bool)((int)*("0x%08X | hw version\n" + 19UL) != 10);
    
#line 1570 
    if ((int)__cond_19 != 0) 
#line 1570 
                             __compiletime_assert_1570(); else ;
  }
  
#line 1570 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | hw version\n",table.hw_ver);
  {
    
#line 1571 
    bool __cond_20 = (_Bool)((int)*("0x%08X | board version\n" + 22UL) != 10);
    
#line 1571 
    if ((int)__cond_20 != 0) 
#line 1571 
                             __compiletime_assert_1571(); else ;
  }
  
#line 1571 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | board version\n",table.brd_ver);
  {
    
#line 1572 
    bool __cond_21 = (_Bool)((int)*("0x%08X | hcmd\n" + 13UL) != 10);
    
#line 1572 
    if ((int)__cond_21 != 0) 
#line 1572 
                             __compiletime_assert_1572(); else ;
  }
  
#line 1572 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | hcmd\n",table.hcmd);
  {
    
#line 1573 
    bool __cond_22 = (_Bool)((int)*("0x%08X | isr0\n" + 13UL) != 10);
    
#line 1573 
    if ((int)__cond_22 != 0) 
#line 1573 
                             __compiletime_assert_1573(); else ;
  }
  
#line 1573 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | isr0\n",table.isr0);
  {
    
#line 1574 
    bool __cond_23 = (_Bool)((int)*("0x%08X | isr1\n" + 13UL) != 10);
    
#line 1574 
    if ((int)__cond_23 != 0) 
#line 1574 
                             __compiletime_assert_1574(); else ;
  }
  
#line 1574 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | isr1\n",table.isr1);
  {
    
#line 1575 
    bool __cond_24 = (_Bool)((int)*("0x%08X | isr2\n" + 13UL) != 10);
    
#line 1575 
    if ((int)__cond_24 != 0) 
#line 1575 
                             __compiletime_assert_1575(); else ;
  }
  
#line 1575 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | isr2\n",table.isr2);
  {
    
#line 1576 
    bool __cond_25 = (_Bool)((int)*("0x%08X | isr3\n" + 13UL) != 10);
    
#line 1576 
    if ((int)__cond_25 != 0) 
#line 1576 
                             __compiletime_assert_1576(); else ;
  }
  
#line 1576 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | isr3\n",table.isr3);
  {
    
#line 1577 
    bool __cond_26 = (_Bool)((int)*("0x%08X | isr4\n" + 13UL) != 10);
    
#line 1577 
    if ((int)__cond_26 != 0) 
#line 1577 
                             __compiletime_assert_1577(); else ;
  }
  
#line 1577 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | isr4\n",table.isr4);
  {
    
#line 1578 
    bool __cond_27 = (_Bool)((int)*("0x%08X | isr_pref\n" + 17UL) != 10);
    
#line 1578 
    if ((int)__cond_27 != 0) 
#line 1578 
                             __compiletime_assert_1578(); else ;
  }
  
#line 1578 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | isr_pref\n",table.isr_pref);
  {
    
#line 1579 
    bool __cond_28 = (_Bool)((int)*("0x%08X | wait_event\n" + 19UL) != 10);
    
#line 1579 
    if ((int)__cond_28 != 0) 
#line 1579 
                             __compiletime_assert_1579(); else ;
  }
  
#line 1579 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | wait_event\n",table.wait_event);
  {
    
#line 1580 
    bool __cond_29 = (_Bool)((int)*("0x%08X | l2p_control\n" + 20UL) != 10);
    
#line 1580 
    if ((int)__cond_29 != 0) 
#line 1580 
                             __compiletime_assert_1580(); else ;
  }
  
#line 1580 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | l2p_control\n",table.l2p_control);
  {
    
#line 1581 
    bool __cond_30 = (_Bool)((int)*("0x%08X | l2p_duration\n" + 21UL) != 10);
    
#line 1581 
    if ((int)__cond_30 != 0) 
#line 1581 
                             __compiletime_assert_1581(); else ;
  }
  
#line 1581 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | l2p_duration\n",table.l2p_duration);
  {
    
#line 1582 
    bool __cond_31 = (_Bool)((int)*("0x%08X | l2p_mhvalid\n" + 20UL) != 10);
    
#line 1582 
    if ((int)__cond_31 != 0) 
#line 1582 
                             __compiletime_assert_1582(); else ;
  }
  
#line 1582 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | l2p_mhvalid\n",table.l2p_mhvalid);
  {
    
#line 1583 
    bool __cond_32 = (_Bool)((int)*("0x%08X | l2p_addr_match\n" + 23UL) != 10);
    
#line 1583 
    if ((int)__cond_32 != 0) 
#line 1583 
                             __compiletime_assert_1583(); else ;
  }
  
#line 1583 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | l2p_addr_match\n",table.l2p_addr_match);
  {
    
#line 1584 
    bool __cond_33 = (_Bool)((int)*("0x%08X | lmpm_pmg_sel\n" + 21UL) != 10);
    
#line 1584 
    if ((int)__cond_33 != 0) 
#line 1584 
                             __compiletime_assert_1584(); else ;
  }
  
#line 1584 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | lmpm_pmg_sel\n",table.lmpm_pmg_sel);
  {
    
#line 1585 
    bool __cond_34 = (_Bool)((int)*("0x%08X | timestamp\n" + 18UL) != 10);
    
#line 1585 
    if ((int)__cond_34 != 0) 
#line 1585 
                             __compiletime_assert_1585(); else ;
  }
  
#line 1585 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | timestamp\n",table.u_timestamp);
  {
    
#line 1586 
    bool __cond_35 = (_Bool)((int)*("0x%08X | flow_handler\n" + 21UL) != 10);
    
#line 1586 
    if ((int)__cond_35 != 0) 
#line 1586 
                             __compiletime_assert_1586(); else ;
  }
  
#line 1586 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"0x%08X | flow_handler\n",table.flow_handler);
  return_label: 
#line 1587 
                return;
}


#line 1648 
void __compiletime_assert_1649(void);


#line 1658 
void __compiletime_assert_1659(void);


#line 1595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static int iwl_print_event_log(struct iwl_priv *priv, u32 start_idx, u32 num_events, u32 mode, int pos, char **buf, size_t bufsz)
{
  int __retres;
  u32 i;
  u32 base;
  u32 event_size;
  u32 ptr;
  u32 ev;
  u32 time;
  u32 data;
  unsigned long reg_flags;
  bool tmp;
  
#line 1606 
  struct iwl_trans *trans = priv->trans;
  
#line 1608 
  if (num_events == 0U) {
    
#line 1609 
    __retres = pos;
    
#line 1609 
    goto return_label;
  }
  else ;
  
#line 1611 
  base = priv->device_pointers.log_event_table;
  
#line 1612 
  if (priv->cur_ucode == (unsigned int)IWL_UCODE_INIT) {
    
#line 1613 
    if (base == 0U) 
#line 1614 
                    base = (priv->fw)->init_evtlog_ptr; else ;
  }
  else 
    
#line 1616 
    if (base == 0U) 
#line 1617 
                    base = (priv->fw)->inst_evtlog_ptr; else ;
  
#line 1620 
  if (mode == 0U) 
#line 1621 
                  event_size = 8U; else 
#line 1623 
                                        event_size = 12U;
  
#line 1625 
  ptr = (start_idx * event_size + base) + 16U;
  
#line 1628 
  tmp = (*((trans->ops)->grab_nic_access))(trans,(_Bool)0,& reg_flags);
  
#line 1628 
  if ((long)((int)tmp != 0) == 0L) {
    
#line 1629 
    __retres = pos;
    
#line 1629 
    goto return_label;
  }
  else ;
  
#line 1632 
  iwl_write32_0(trans,1036U,ptr);
  
#line 1636 
  i = 0U;
  
#line 1636 
  goto ldv_56044;
  ldv_56043: 
#line 1637 
  ;
  
#line 1637 
  ev = iwl_read32_0(trans,1052U);
  
#line 1638 
  time = iwl_read32_0(trans,1052U);
  
#line 1639 
  if (mode == 0U) 
    
#line 1641 
    if (bufsz != 0UL) {
      int tmp_0;
      
#line 1642 
      tmp_0 = scnprintf(*buf + pos,bufsz - (unsigned long)pos,"EVT_LOG:0x%08x:%04u\n",time,ev);
      
#line 1644 
      pos = tmp_0 + pos;
    }
    else {
      
#line 1646 
      trace_iwlwifi_dev_ucode_event((struct device const *)trans->dev,0U,time,ev);
      {
        
#line 1648 
        bool __cond = (_Bool)((int)*("EVT_LOG:0x%08x:%04u\n" + 19UL) != 10);
        
#line 1648 
        if ((int)__cond != 0) 
#line 1648 
                              __compiletime_assert_1649(); else ;
      }
      
#line 1648 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"EVT_LOG:0x%08x:%04u\n",time,ev);
    }
  else {
    
#line 1652 
    data = iwl_read32_0(trans,1052U);
    
#line 1653 
    if (bufsz != 0UL) {
      int tmp_1;
      
#line 1654 
      tmp_1 = scnprintf(*buf + pos,bufsz - (unsigned long)pos,"EVT_LOGT:%010u:0x%08x:%04u\n",time,data,ev);
      
#line 1656 
      pos = tmp_1 + pos;
    }
    else {
      {
        
#line 1658 
        bool __cond_0 = (_Bool)((int)*("EVT_LOGT:%010u:0x%08x:%04u\n" + 26UL) != 10);
        
#line 1658 
        if ((int)__cond_0 != 0) 
#line 1658 
                                __compiletime_assert_1659(); else ;
      }
      
#line 1658 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"EVT_LOGT:%010u:0x%08x:%04u\n",time,data,ev);
      
#line 1660 
      trace_iwlwifi_dev_ucode_event((struct device const *)trans->dev,time,data,ev);
    }
  }
  
#line 1636 
  i += 1U;
  ldv_56044: 
#line 1637 
  ;
  
#line 1636 
  if (i < num_events) 
#line 1638 
                      goto ldv_56043; else 
#line 1641 
                                           goto ldv_56045;
  ldv_56045: 
#line 1642 
  ;
  
#line 1667 
  iwl_trans_release_nic_access(trans,& reg_flags);
  
#line 1668 
  __retres = pos;
  return_label: 
#line 1668 
                return __retres;
}


#line 1674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static int iwl_print_last_event_logs(struct iwl_priv *priv, u32 capacity, u32 num_wraps, u32 next_entry, u32 size, u32 mode, int pos, char **buf, size_t bufsz)
{
  
#line 1683 
  if (num_wraps != 0U) 
    
#line 1684 
    if (next_entry < size) {
      
#line 1685 
      pos = iwl_print_event_log(priv,(next_entry - size) + capacity,size - next_entry,mode,pos,buf,bufsz);
      
#line 1689 
      pos = iwl_print_event_log(priv,0U,next_entry,mode,pos,buf,bufsz);
    }
    else 
#line 1693 
         pos = iwl_print_event_log(priv,next_entry - size,size,mode,pos,buf,bufsz);
  else 
    
#line 1696 
    if (next_entry < size) 
#line 1697 
                           pos = iwl_print_event_log(priv,0U,next_entry,mode,pos,buf,bufsz); else 
                                                                    
#line 1700 
                                                                    pos = iwl_print_event_log(priv,next_entry - size,size,mode,pos,buf,bufsz);
  
#line 1704 
  return pos;
}


#line 1735 
void __compiletime_assert_1739(void);


#line 1750 
void __compiletime_assert_1751(void);


#line 1756 
void __compiletime_assert_1757(void);


#line 1765 
void __compiletime_assert_1765(void);


#line 1772 
void __compiletime_assert_1773(void);


#line 1709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
int iwl_dump_nic_event_log(struct iwl_priv *priv, bool full_log, char **buf)
{
  int __retres;
  u32 base;
  u32 capacity;
  u32 mode;
  u32 num_wraps;
  u32 next_entry;
  u32 size;
  u32 logsize;
  int tmp_0;
  int tmp_2;
  bool tmp_1;
  bool tmp_4;
  
#line 1719 
  int pos = 0;
  
#line 1720 
  size_t bufsz = 0UL;
  
#line 1721 
  struct iwl_trans *trans = priv->trans;
  
#line 1723 
  base = priv->device_pointers.log_event_table;
  
#line 1724 
  if (priv->cur_ucode == (unsigned int)IWL_UCODE_INIT) {
    
#line 1725 
    logsize = (priv->fw)->init_evtlog_size;
    
#line 1726 
    if (base == 0U) 
#line 1727 
                    base = (priv->fw)->init_evtlog_ptr; else ;
  }
  else {
    
#line 1729 
    logsize = (priv->fw)->inst_evtlog_size;
    
#line 1730 
    if (base == 0U) 
#line 1731 
                    base = (priv->fw)->inst_evtlog_ptr; else ;
  }
  
#line 1734 
  tmp_0 = iwlagn_hw_valid_rtc_data_addr(base);
  
#line 1734 
  if (tmp_0 == 0) {
    char *tmp;
    {
      
#line 1735 
      bool __cond = (_Bool)((int)*("Invalid event log pointer 0x%08X for %s uCode\n" + 45UL) != 10);
      
#line 1735 
      if ((int)__cond != 0) 
#line 1735 
                            __compiletime_assert_1739(); else ;
    }
    
#line 1735 
    if (priv->cur_ucode == (unsigned int)IWL_UCODE_INIT) 
#line 1735 
                                                         tmp = (char *)"Init"; else 
                                                                    
#line 1735 
                                                                    tmp = (char *)"RT";
    
#line 1735 
    ;
    
#line 1735 
    ;
    
#line 1735 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid event log pointer 0x%08X for %s uCode\n",base,tmp);
    
#line 1740 
    __retres = -22;
    
#line 1740 
    goto return_label;
  }
  else ;
  
#line 1744 
  capacity = iwl_trans_read_mem32(trans,base);
  
#line 1745 
  mode = iwl_trans_read_mem32(trans,base + 4U);
  
#line 1746 
  num_wraps = iwl_trans_read_mem32(trans,base + 8U);
  
#line 1747 
  next_entry = iwl_trans_read_mem32(trans,base + 12U);
  
#line 1749 
  if (capacity > logsize) {
    {
      
#line 1750 
      bool __cond_0 = (_Bool)((int)*("Log capacity %d is bogus, limit to %d " + 45UL) != 10);
      
#line 1750 
      if ((int)__cond_0 != 0) 
#line 1750 
                              __compiletime_assert_1751(); else ;
    }
    
#line 1750 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Log capacity %d is bogus, limit to %d ",capacity,logsize);
    
#line 1752 
    capacity = logsize;
  }
  else ;
  
#line 1755 
  if (next_entry > logsize) {
    {
      
#line 1756 
      bool __cond_1 = (_Bool)((int)*("Log write index %d is bogus, limit to %d\n" + 40UL) != 10);
      
#line 1756 
      if ((int)__cond_1 != 0) 
#line 1756 
                              __compiletime_assert_1757(); else ;
    }
    
#line 1756 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Log write index %d is bogus, limit to %d\n",next_entry,logsize);
    
#line 1758 
    next_entry = logsize;
  }
  else ;
  
#line 1761 
  if (num_wraps != 0U) 
#line 1761 
                       size = capacity; else 
#line 1761 
                                             size = next_entry;
  
#line 1764 
  if (size == 0U) {
    {
      
#line 1765 
      bool __cond_2 = (_Bool)((int)*("Start IWL Event Log Dump: nothing in log\n" + 40UL) != 10);
      
#line 1765 
      if ((int)__cond_2 != 0) 
#line 1765 
                              __compiletime_assert_1765(); else ;
    }
    
#line 1765 
    __iwl_err(trans->dev,(_Bool)0,(_Bool)0,"Start IWL Event Log Dump: nothing in log\n");
    
#line 1766 
    __retres = pos;
    
#line 1766 
    goto return_label;
  }
  else ;
  
#line 1769 
  tmp_1 = iwl_have_debug_level(262144U);
  
#line 1769 
  if (tmp_1) 
#line 1769 
             tmp_2 = 0; else 
#line 1769 
                             tmp_2 = 1;
  
#line 1769 
  if (tmp_2) {
    
#line 1769 
    if (! full_log) 
      
#line 1770 
      if (20U < size) 
#line 1770 
                      size = 20U; else 
#line 1770 
                                       size = size;
    else ;
  }
  else ;
  {
    
#line 1772 
    bool __cond_3 = (_Bool)((int)*("Start IWL Event Log Dump: display last %u entries\n" + 49UL) != 10);
    
#line 1772 
    if ((int)__cond_3 != 0) 
#line 1772 
                            __compiletime_assert_1773(); else ;
  }
  
#line 1772 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Start IWL Event Log Dump: display last %u entries\n",size);
  
#line 1776 
  if (buf != (char **)0) {
    
#line 1777 
    if ((int)full_log != 0) 
#line 1778 
                            bufsz = (unsigned long)(capacity * 48U); else 
                                                                    
#line 1780 
                                                                    bufsz = (unsigned long)(size * 48U);
    
#line 1781 
    *buf = (char *)kmalloc(bufsz,208U);
    
#line 1782 
    if (*buf == (char *)0) {
      
#line 1783 
      __retres = -12;
      
#line 1783 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1785 
  tmp_4 = iwl_have_debug_level(262144U);
  
#line 1785 
  if ((int)tmp_4 != 0) 
#line 1785 
                       goto _LOR;
  else 
    
#line 1785 
    if ((int)full_log != 0) {
      _LOR: {
              
#line 1791 
              if (num_wraps != 0U) 
#line 1792 
                                   pos = iwl_print_event_log(priv,next_entry,capacity - next_entry,mode,pos,buf,bufsz); else ;
              
#line 1796 
              pos = iwl_print_event_log(priv,0U,next_entry,mode,pos,buf,bufsz);
            }
    }
    else 
#line 1799 
         pos = iwl_print_last_event_logs(priv,capacity,num_wraps,next_entry,size,mode,pos,buf,bufsz);
  
#line 1807 
  __retres = pos;
  return_label: 
#line 1807 
                return __retres;
}


#line 1844 
void __compiletime_assert_1844(void);


#line 1853 
void __compiletime_assert_1854(void);


#line 1857 
void __compiletime_assert_1858(void);


#line 1810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwlagn_fw_error(struct iwl_priv *priv, bool ondemand)
{
  unsigned int reload_msec;
  unsigned long reload_jiffies;
  bool tmp;
  int tmp_0;
  
#line 1815 
  tmp = iwl_have_debug_level(262144U);
  
#line 1815 
  if ((int)tmp != 0) 
#line 1816 
                     iwl_print_rx_config_cmd(priv,(enum iwl_rxon_context_id)IWL_RXON_CTX_BSS); else ;
  
#line 1819 
  priv->ucode_loaded = (_Bool)0;
  
#line 1822 
  set_bit(10L,(unsigned long volatile *)(& priv->status));
  
#line 1824 
  iwl_abort_notification_waits(& priv->notif_wait);
  
#line 1828 
  set_bit(3L,(unsigned long volatile *)(& priv->status));
  
#line 1830 
  if (! ondemand) {
    
#line 1837 
    reload_jiffies = jiffies;
    
#line 1838 
    reload_msec = jiffies_to_msecs((unsigned long)((long)reload_jiffies - (long)priv->reload_jiffies));
    
#line 1840 
    priv->reload_jiffies = reload_jiffies;
    
#line 1841 
    if (reload_msec <= 1000U) {
      
#line 1842 
      priv->reload_count += 1;
      
#line 1843 
      if (priv->reload_count > 3) {
        {
          
#line 1844 
          bool __cond = (_Bool)((int)*("BUG_ON, Stop restarting\n" + 23UL) != 10);
          
#line 1844 
          if ((int)__cond != 0) 
#line 1844 
                                __compiletime_assert_1844(); else ;
        }
        
#line 1844 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"BUG_ON, Stop restarting\n");
        
#line 1845 
        goto return_label;
      }
      else ;
    }
    else 
#line 1848 
         priv->reload_count = 0;
  }
  else ;
  
#line 1851 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 1851 
  if (tmp_0 == 0) 
    
#line 1852 
    if ((int)iwlwifi_mod_params.restart_fw != 0) {
      {
        
#line 1853 
        bool __cond_0 = (_Bool)((int)*("Restarting adapter due to uCode error.\n" + 38UL) != 10);
        
#line 1853 
        if ((int)__cond_0 != 0) 
#line 1853 
                                __compiletime_assert_1854(); else ;
      }
      
#line 1853 
      __iwl_dbg(priv->dev,262144U,(_Bool)0,"iwlagn_fw_error","Restarting adapter due to uCode error.\n");
      
#line 1855 
      ldv_queue_work_93(priv->workqueue,& priv->restart);
    }
    else {
      {
        
#line 1857 
        bool __cond_1 = (_Bool)((int)*("Detected FW error, but not restarting\n" + 37UL) != 10);
        
#line 1857 
        if ((int)__cond_1 != 0) 
#line 1857 
                                __compiletime_assert_1858(); else ;
      }
      
#line 1857 
      __iwl_dbg(priv->dev,262144U,(_Bool)0,"iwlagn_fw_error","Detected FW error, but not restarting\n");
    }
  else ;
  return_label: 
#line 1859 
                return;
}


#line 1866 
void __compiletime_assert_1867(void);


#line 1862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_nic_error(struct iwl_op_mode *op_mode)
{
  
#line 1864 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  {
    
#line 1866 
    bool __cond = (_Bool)((int)*("Loaded firmware version: %s\n" + 27UL) != 10);
    
#line 1866 
    if ((int)__cond != 0) 
#line 1866 
                          __compiletime_assert_1867(); else ;
  }
  
#line 1866 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Loaded firmware version: %s\n",(char const *)(& (priv->fw)->fw_version));
  
#line 1869 
  iwl_dump_nic_error_log(priv);
  
#line 1870 
  iwl_dump_nic_event_log(priv,(_Bool)0,(char **)0);
  
#line 1872 
  iwlagn_fw_error(priv,(_Bool)0);
  
#line 1873 
  return;
}


#line 1880 
void __compiletime_assert_1880(void);


#line 1875  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_cmd_queue_full(struct iwl_op_mode *op_mode)
{
  int tmp_0;
  bool tmp;
  
#line 1877 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 1879 
  tmp = iwl_check_for_ct_kill(priv);
  
#line 1879 
  if (tmp) 
#line 1879 
           tmp_0 = 0; else 
#line 1879 
                           tmp_0 = 1;
  
#line 1879 
  if (tmp_0) {
    {
      
#line 1880 
      bool __cond = (_Bool)((int)*("Restarting adapter queue is full\n" + 32UL) != 10);
      
#line 1880 
      if ((int)__cond != 0) 
#line 1880 
                            __compiletime_assert_1880(); else ;
    }
    
#line 1880 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Restarting adapter queue is full\n");
    
#line 1881 
    iwlagn_fw_error(priv,(_Bool)0);
  }
  else ;
  
#line 1883 
  return;
}


#line 1916 
void __compiletime_assert_1919(void);


#line 1887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_nic_config(struct iwl_op_mode *op_mode)
{
  
#line 1889 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 1892 
  iwl_trans_set_bits_mask(priv->trans,0U,15U,(priv->trans)->hw_rev & 15U);
  
#line 1901 
  if ((unsigned int)(priv->nvm_data)->radio_cfg_type <= 3U) {
    
#line 1902 
    u32 reg_val = (unsigned int)((((int)(priv->nvm_data)->radio_cfg_type << 10) | ((int)(priv->nvm_data)->radio_cfg_step << 14)) | ((int)(priv->nvm_data)->radio_cfg_dash << 12));
    
#line 1910 
    iwl_trans_set_bits_mask(priv->trans,0U,64512U,reg_val);
    {
      
#line 1916 
      bool __cond = (_Bool)((int)*("Radio type=0x%x-0x%x-0x%x\n" + 25UL) != 10);
      
#line 1916 
      if ((int)__cond != 0) 
#line 1916 
                            __compiletime_assert_1919(); else ;
    }
    
#line 1916 
    __iwl_info(priv->dev,"Radio type=0x%x-0x%x-0x%x\n",(int)(priv->nvm_data)->radio_cfg_type,(int)(priv->nvm_data)->radio_cfg_step,(int)(priv->nvm_data)->radio_cfg_dash);
  }
  else {
    
#line 1921 
    int __ret_warn_on = 1;
    
#line 1921 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1921 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",1921); else ;
    
#line 1921 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 1925 
  iwl_set_bit(priv->trans,0U,768U);
  
#line 1933 
  iwl_set_bits_mask_prph(priv->trans,12300U,4194304U,4290772991U);
  
#line 1937 
  if ((priv->lib)->nic_config != (void (*)(struct iwl_priv *))0) 
#line 1938 
                                                                 (*((priv->lib)->nic_config))(priv); else ;
  
#line 1939 
  return;
}


#line 1946 
void __compiletime_assert_1946(void);


#line 1941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_wimax_active(struct iwl_op_mode *op_mode)
{
  
#line 1943 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 1945 
  set_bit(3L,(unsigned long volatile *)(& priv->status));
  {
    
#line 1946 
    bool __cond = (_Bool)((int)*("RF is used by WiMAX\n" + 19UL) != 10);
    
#line 1946 
    if ((int)__cond != 0) 
#line 1946 
                          __compiletime_assert_1946(); else ;
  }
  
#line 1946 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"RF is used by WiMAX\n");
  
#line 1947 
  return;
}


#line 1958 
void __compiletime_assert_1960(void);


#line 1949  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_stop_sw_queue(struct iwl_op_mode *op_mode, int queue)
{
  int tmp_0;
  int tmp_1;
  
#line 1951 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 1952 
  int mq = (int)priv->queue_to_mac80211[queue];
  {
    bool __warned;
    
#line 1954 
    int __ret_warn_once = mq == 255;
    
#line 1954 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp;
      {
        
#line 1954 
        int __ret_warn_on = ! __warned;
        
#line 1954 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 1954 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",1954); else ;
        
#line 1954 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 1954 
      if ((long)tmp != 0L) 
#line 1954 
                           __warned = (_Bool)1; else ;
    }
    else ;
    
#line 1954 
    tmp_0 = (long)(__ret_warn_once != 0);
  }
  
#line 1954 
  if ((long)tmp_0 != 0L) 
#line 1955 
                         goto return_label; else ;
  
#line 1957 
  tmp_1 = atomic_add_return(1,& priv->queue_stop_count[mq]);
  
#line 1957 
  if (tmp_1 > 1) {
    {
      
#line 1958 
      bool __cond = (_Bool)((int)*("queue %d (mac80211 %d) already stopped\n" + 38UL) != 10);
      
#line 1958 
      if ((int)__cond != 0) 
#line 1958 
                            __compiletime_assert_1960(); else ;
    }
    
#line 1958 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwl_stop_sw_queue","queue %d (mac80211 %d) already stopped\n",queue,mq);
    
#line 1961 
    goto return_label;
  }
  else ;
  
#line 1964 
  set_bit((long)mq,(unsigned long volatile *)(& priv->transport_queue_stop));
  
#line 1965 
  ieee80211_stop_queue(priv->hw,mq);
  return_label: 
#line 1966 
                return;
}


#line 1977 
void __compiletime_assert_1979(void);


#line 1968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_wake_sw_queue(struct iwl_op_mode *op_mode, int queue)
{
  int tmp_0;
  int tmp_1;
  
#line 1970 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 1971 
  int mq = (int)priv->queue_to_mac80211[queue];
  {
    bool __warned;
    
#line 1973 
    int __ret_warn_once = mq == 255;
    
#line 1973 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp;
      {
        
#line 1973 
        int __ret_warn_on = ! __warned;
        
#line 1973 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 1973 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c",1973); else ;
        
#line 1973 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 1973 
      if ((long)tmp != 0L) 
#line 1973 
                           __warned = (_Bool)1; else ;
    }
    else ;
    
#line 1973 
    tmp_0 = (long)(__ret_warn_once != 0);
  }
  
#line 1973 
  if ((long)tmp_0 != 0L) 
#line 1974 
                         goto return_label; else ;
  
#line 1976 
  tmp_1 = atomic_sub_return(1,& priv->queue_stop_count[mq]);
  
#line 1976 
  if (tmp_1 > 0) {
    {
      
#line 1977 
      bool __cond = (_Bool)((int)*("queue %d (mac80211 %d) already awake\n" + 36UL) != 10);
      
#line 1977 
      if ((int)__cond != 0) 
#line 1977 
                            __compiletime_assert_1979(); else ;
    }
    
#line 1977 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwl_wake_sw_queue","queue %d (mac80211 %d) already awake\n",queue,mq);
    
#line 1980 
    goto return_label;
  }
  else ;
  
#line 1983 
  set_bit((long)mq,(unsigned long volatile *)(& priv->transport_queue_stop));
  
#line 1985 
  if (! priv->passive_no_rx) 
#line 1986 
                             ieee80211_wake_queue(priv->hw,mq); else ;
  return_label: 
#line 1987 
                return;
}


#line 1998 
void __compiletime_assert_1998(void);


#line 2001 
void __compiletime_assert_2001(void);


#line 1989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
void iwlagn_lift_passive_no_rx(struct iwl_priv *priv)
{
  int mq;
  int tmp_1;
  
#line 1993 
  if (! priv->passive_no_rx) 
#line 1994 
                             goto return_label; else ;
  
#line 1996 
  mq = 0;
  
#line 1996 
  goto ldv_56192;
  ldv_56191: 
#line 1997 
  ;
  
#line 1997 
  if (0 != 0) {
    int tmp;
    
#line 1997 
    tmp = constant_test_bit((long)mq,(unsigned long const volatile *)(& priv->transport_queue_stop));
    
#line 1997 
    tmp_1 = tmp == 0;
  }
  else {
    int tmp_0;
    
#line 1997 
    tmp_0 = variable_test_bit((long)mq,(unsigned long const volatile *)(& priv->transport_queue_stop));
    
#line 1997 
    tmp_1 = tmp_0 == 0;
  }
  
#line 1997 
  if (tmp_1) {
    {
      
#line 1998 
      bool __cond = (_Bool)((int)*("Wake queue %d\n" + 13UL) != 10);
      
#line 1998 
      if ((int)__cond != 0) 
#line 1998 
                            __compiletime_assert_1998(); else ;
    }
    
#line 1998 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_lift_passive_no_rx","Wake queue %d\n",mq);
    
#line 1999 
    ieee80211_wake_queue(priv->hw,mq);
  }
  else {
    {
      
#line 2001 
      bool __cond_0 = (_Bool)((int)*("Don\'t wake queue %d\n" + 19UL) != 10);
      
#line 2001 
      if ((int)__cond_0 != 0) 
#line 2001 
                              __compiletime_assert_2001(); else ;
    }
    
#line 2001 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_lift_passive_no_rx","Don\'t wake queue %d\n",mq);
  }
  
#line 1996 
  mq += 1;
  ldv_56192: 
#line 1997 
  ;
  
#line 1996 
  if (mq <= 10) 
#line 1998 
                goto ldv_56191; else 
#line 2001 
                                     goto ldv_56193;
  ldv_56193: 
#line 2002 
  ;
  
#line 2005 
  priv->passive_no_rx = (_Bool)0;
  return_label: 
#line 2006 
                return;
}


#line 2008  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_free_skb(struct iwl_op_mode *op_mode, struct sk_buff *skb)
{
  struct ieee80211_tx_info *info;
  
#line 2010 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 2013 
  info = IEEE80211_SKB_CB(skb);
  
#line 2014 
  iwl_trans_free_tx_cmd(priv->trans,(struct iwl_device_cmd *)info->__anonCompField_ieee80211_tx_info_99.driver_data[1]);
  
#line 2015 
  ieee80211_free_txskb(priv->hw,skb);
  
#line 2016 
  return;
}


#line 2018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static bool iwl_set_hw_rfkill_state(struct iwl_op_mode *op_mode, bool state)
{
  bool __retres;
  
#line 2020 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 2022 
  if ((int)state != 0) 
#line 2023 
                       set_bit(0L,(unsigned long volatile *)(& priv->status)); else 
                                                                    
#line 2025 
                                                                    set_bit(0L,(unsigned long volatile *)(& priv->status));
  
#line 2027 
  wiphy_rfkill_set_hw_state((priv->hw)->wiphy,(_Bool)((bool)((int)state) != 0));
  
#line 2029 
  __retres = (_Bool)0;
  
#line 2029 
  return __retres;
}


#line 2032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_napi_add(struct iwl_op_mode *op_mode, struct napi_struct *napi, struct net_device *napi_dev, int (*poll)(struct napi_struct *, int ), int weight)
{
  
#line 2038 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 2040 
  ieee80211_napi_add(priv->hw,napi,napi_dev,poll,weight);
  
#line 2041 
  return;
}


#line 2043  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static struct iwl_op_mode_ops const iwl_dvm_ops = {.start = & iwl_op_mode_dvm_start, .stop = & iwl_op_mode_dvm_stop, .rx = & iwl_rx_dispatch, .napi_add = & iwl_napi_add, .queue_full = & iwl_stop_sw_queue, .queue_not_full = & iwl_wake_sw_queue, .hw_rf_kill = & iwl_set_hw_rfkill_state, .free_skb = & iwl_free_skb, .nic_error = & iwl_nic_error, .cmd_queue_full = & iwl_cmd_queue_full, .nic_config = & iwl_nic_config, .wimax_active = & iwl_wimax_active, .enter_d0i3 = (int (*)(struct iwl_op_mode *))0, .exit_d0i3 = (int (*)(struct iwl_op_mode *))0};

#line 2063  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static int iwl_init(void)
{
  int __retres;
  int ret;
  
#line 2068 
  ret = iwlagn_rate_control_register();
  
#line 2069 
  if (ret != 0) {
    
#line 2070 
    printk("\001",ret);
    
#line 2071 
    __retres = ret;
    
#line 2071 
    goto return_label;
  }
  else ;
  
#line 2074 
  ret = iwl_opmode_register("iwldvm",& iwl_dvm_ops);
  
#line 2075 
  if (ret != 0) {
    
#line 2076 
    printk("\001",ret);
    
#line 2077 
    iwlagn_rate_control_unregister();
  }
  else ;
  
#line 2080 
  __retres = ret;
  return_label: 
#line 2080 
                return __retres;
}


#line 2084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/main.c"
static void iwl_exit(void)
{
  
#line 2086 
  iwl_opmode_deregister("iwldvm");
  
#line 2087 
  iwlagn_rate_control_unregister();
  
#line 2088 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 58 
void ldv_emg_ieee80211_free_hw(struct ieee80211_hw *arg0);


#line 62 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 63 
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1);


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
void ldv_emg_iwl_exit(void)
{
  
#line 68 
  iwl_exit();
  
#line 69 
  return;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
int ldv_emg_iwl_init(void)
{
  int tmp;
  
#line 72 
  tmp = iwl_init();
  
#line 72 
  return tmp;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static int atomic_add_return(int i, atomic_t *v)
{
  int tmp;
  
#line 167 
  tmp = ldv_atomic_add_return(i,v);
  
#line 167 
  return tmp;
}


#line 460  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 463 
  tmp = ldv_kmalloc(size,flags);
  
#line 463 
  return tmp;
}


#line 481  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 484 
  tmp = ldv_kzalloc(size,flags);
  
#line 484 
  return tmp;
}


#line 762  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1)
{
  
#line 766 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 767 
  return;
}


#line 770  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1)
{
  
#line 774 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 775 
  return;
}


#line 778  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1)
{
  
#line 782 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 783 
  return;
}


#line 786  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1)
{
  
#line 790 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 791 
  return;
}


#line 794  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1)
{
  
#line 798 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 799 
  return;
}


#line 802  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_unlock_79(struct mutex *ldv_func_arg1)
{
  
#line 806 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 807 
  return;
}


#line 810  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static int ldv_mod_timer_80(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 814 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 814 
  return tmp;
}


#line 818  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static int ldv_mod_timer_81(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 822 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 822 
  return tmp;
}


#line 826  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_spin_lock_bh_82(spinlock_t *lock)
{
  
#line 830 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 832 
  spin_lock_bh(lock);
  
#line 833 
  return;
}


#line 836  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_spin_unlock_bh_83(spinlock_t *lock)
{
  
#line 840 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 842 
  spin_unlock_bh(lock);
  
#line 843 
  return;
}


#line 846  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_lock_84(struct mutex *ldv_func_arg1)
{
  
#line 850 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 851 
  return;
}


#line 854  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1)
{
  
#line 858 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 859 
  return;
}


#line 862  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_unlock_86(struct mutex *ldv_func_arg1)
{
  
#line 866 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 867 
  return;
}


#line 870  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_lock_87(struct mutex *ldv_func_arg1)
{
  
#line 874 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 875 
  return;
}


#line 878  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_mutex_unlock_88(struct mutex *ldv_func_arg1)
{
  
#line 882 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 883 
  return;
}


#line 886  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static int ldv_del_timer_sync_89(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 890 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 890 
  return tmp;
}


#line 894  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static int ldv_del_timer_sync_90(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 898 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 898 
  return tmp;
}


#line 902  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_ieee80211_free_hw_91(struct ieee80211_hw *ldv_func_arg1)
{
  
#line 906 
  ldv_emg_ieee80211_free_hw(ldv_func_arg1);
  
#line 907 
  return;
}


#line 910  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static void ldv_ieee80211_free_hw_92(struct ieee80211_hw *ldv_func_arg1)
{
  
#line 914 
  ldv_emg_ieee80211_free_hw(ldv_func_arg1);
  
#line 915 
  return;
}


#line 918  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_main.c.aux"
static bool ldv_queue_work_93(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 922 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 922 
  __retres = tmp != 0;
  
#line 922 
  return __retres;
}


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rx.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/byteorder/generic.h"
__inline static void le32_add_cpu(__le32 *var, u32 val)
{
  
#line 150 
  *var += val;
  
#line 151 
  return;
}


#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
void print_hex_dump(char const *, char const *, int, int, int, void const *, size_t, bool);


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_fmt(char const *, int const, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
static bool static_key_false_1(struct static_key *key)
{
  bool tmp;
  
#line 125 
  tmp = arch_static_branch(key);
  
#line 125 
  return tmp;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_74(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_75(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_78(spinlock_t *lock);


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
void kfree_call_rcu(struct callback_head *, void (*)(struct callback_head *));


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
static int ldv_mod_timer_76(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
static bool ldv_queue_work_77(struct workqueue_struct *wq, struct work_struct *work);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
void dump_page(struct page *, char const *);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_0(size_t size, gfp_t flags);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
bool __get_page_tail(struct page *);


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void get_page(struct page *page)
{
  int tmp_0;
  int tmp_1;
  
#line 536 
  tmp_0 = PageTail((struct page const *)page);
  
#line 536 
  if ((long)(tmp_0 != 0) != 0L) {
    bool tmp;
    
#line 537 
    tmp = __get_page_tail(page);
    
#line 537 
    if ((long)((int)tmp != 0) != 0L) 
#line 538 
                                     goto return_label; else ;
  }
  else ;
  
#line 543 
  tmp_1 = atomic_read((atomic_t const *)(& page->__anonCompField_page_42.__anonCompField___anonstruct_151_41.__anonCompField___anonunion_153_40._count));
  
#line 543 
  if ((long)(tmp_1 <= 0) != 0L) {
    
#line 543 
    dump_page(page,"VM_BUG_ON_PAGE(");
    
#line 544 
    ldv_inline_asm();
    
#line 543 
    ;
  }
  else ;
  
#line 544 
  atomic_inc(& page->__anonCompField_page_42.__anonCompField___anonstruct_151_41.__anonCompField___anonunion_153_40._count);
  return_label: 
#line 545 
                return;
}


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 783  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff *__alloc_skb(unsigned int, gfp_t, int, int);


#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *alloc_skb(unsigned int size, gfp_t priority)
{
  struct sk_buff *tmp;
  
#line 790 
  tmp = __alloc_skb(size,priority,0,-1);
  
#line 790 
  return tmp;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1639 
void skb_add_rx_frag(struct sk_buff *, int, struct page *, int, int, unsigned int);


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_tailroom(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp_0;
  bool tmp;
  
#line 1763 
  tmp = skb_is_nonlinear(skb);
  
#line 1763 
  if ((int)tmp == 0) 
#line 1763 
                     tmp_0 = skb->end - skb->tail; else 
#line 1763 
                                                        tmp_0 = 0U;
  
#line 1763 
  __retres = (int)tmp_0;
  
#line 1763 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_beacon(__le16 fc)
{
  int __retres;
  
#line 455 
  __retres = ((int)fc & 252) == 128;
  
#line 455 
  return __retres;
}


#line 3528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
int ieee80211_channel_to_frequency(int, enum ieee80211_band);


#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct ieee80211_rx_status *IEEE80211_SKB_RXCB(struct sk_buff *skb)
{
  struct ieee80211_rx_status *__retres;
  
#line 925 
  __retres = (struct ieee80211_rx_status *)(& skb->cb);
  
#line 925 
  return __retres;
}


#line 3734 
void ieee80211_rx(struct ieee80211_hw *, struct sk_buff *);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static u32 iwl_rx_packet_len(struct iwl_rx_packet const *pkt)
{
  u32 __retres;
  
#line 183 
  __retres = pkt->len_n_flags & 16383U;
  
#line 183 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static u32 iwl_rx_packet_payload_len(struct iwl_rx_packet const *pkt)
{
  u32 __retres;
  u32 tmp;
  
#line 188 
  tmp = iwl_rx_packet_len(pkt);
  
#line 188 
  __retres = tmp + 4294967292U;
  
#line 188 
  return __retres;
}


#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void *rxb_addr(struct iwl_rx_cmd_buffer *r)
{
  void *__retres;
  void *tmp;
  
#line 299 
  tmp = lowmem_page_address((struct page const *)r->_page);
  
#line 299 
  ;
  
#line 299 
  __retres = (void *)((unsigned long)tmp + (unsigned long)r->_offset);
  
#line 299 
  return __retres;
}


#line 302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static int rxb_offset(struct iwl_rx_cmd_buffer *r)
{
  int __retres;
  
#line 304 
  __retres = r->_offset;
  
#line 304 
  return __retres;
}


#line 307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static struct page *rxb_steal_page(struct iwl_rx_cmd_buffer *r)
{
  struct page *__retres;
  
#line 309 
  r->_page_stolen = (_Bool)1;
  
#line 310 
  get_page(r->_page);
  
#line 311 
  __retres = r->_page;
  
#line 311 
  return __retres;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_iowrite32_1(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 69 
  tmp_4 = static_key_false_1(& __tracepoint_iwlwifi_dev_iowrite32.key);
  
#line 69 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 69 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_1364 __u;
          
#line 69 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u.__c),8);
          
#line 69 
          tmp = __u.__val;
        }
        
#line 69 
        struct tracepoint_func *_________p1 = tmp;
        
#line 69 
        tmp_0 = _________p1;
      }
      
#line 69 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 69 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 69 
        if (tmp_1 != 0) {
          
#line 69 
          if (! __warned) {
            int tmp_2;
            
#line 69 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 69 
            if (tmp_2 == 0) {
              
#line 69 
              __warned = (_Bool)1;
              
#line 69 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 69 
      tmp_3 = ________p1;
    }
    
#line 69 
    it_func_ptr = tmp_3;
    
#line 69 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_50598: 
#line 71 
      ;
      
#line 69 
      it_func = it_func_ptr->func;
      
#line 69 
      __data = it_func_ptr->data;
      
#line 69 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 69 
      it_func_ptr += 1;
      
#line 69 
      ;
      
#line 69 
      if (it_func_ptr->func != (void *)0) 
#line 71 
                                          goto ldv_50598; else 
#line 74 
                                                               goto ldv_50599;
      ldv_50599: 
#line 75 
      ;
    }
    else ;
    
#line 69 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 69 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_1366 __u_0;
        
#line 69 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u_0.__c),8);
        
#line 69 
        tmp_5 = __u_0.__val;
      }
      
#line 69 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 69 
      tmp_6 = _________p1_0;
    }
    
#line 69 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 69 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 69 
      if (tmp_7 != 0) {
        
#line 69 
        if (! __warned_0) {
          int tmp_8;
          
#line 69 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 69 
          if (tmp_8 == 0) {
            
#line 69 
            __warned_0 = (_Bool)1;
            
#line 69 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 69 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 69 
  rcu_read_unlock_sched_notrace();
  
#line 71 
  return;
}


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static void iwl_write32_1(struct iwl_trans *trans, u32 ofs, u32 val)
{
  
#line 43 
  trace_iwlwifi_dev_iowrite32_1((struct device const *)trans->dev,ofs,val);
  
#line 44 
  iwl_trans_write32(trans,ofs,val);
  
#line 45 
  return;
}


#line 70 
void iwl_write_direct32(struct iwl_trans *, u32, u32);


#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-notif-wait.h"
void iwl_notification_wait_init(struct iwl_notif_wait_data *);


#line 116 
void iwl_notification_wait_notify(struct iwl_notif_wait_data *, struct iwl_rx_packet *);


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.h"
void iwl_tt_enter_ct_kill(struct iwl_priv *priv);


#line 123 
void iwl_tt_exit_ct_kill(struct iwl_priv *priv);


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
__inline static int iwl_is_any_associated(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_rxon_context *ctx;
  
#line 942 
  ctx = & priv->contexts[0];
  
#line 942 
  goto ldv_53976;
  ldv_53975: 
#line 943 
  ;
  
#line 942 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    int tmp;
    
#line 943 
    tmp = iwl_is_associated_ctx(ctx);
    
#line 943 
    if (tmp != 0) {
      
#line 944 
      __retres = 1;
      
#line 944 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 942 
  ctx += 1;
  ldv_53976: 
#line 943 
  ;
  
#line 942 
  if (& priv->contexts[2] > ctx) 
#line 944 
                                 goto ldv_53975; else 
#line 947 
                                                      goto ldv_53977;
  ldv_53977: 
#line 948 
  ;
  
#line 945 
  __retres = 0;
  return_label: 
#line 945 
                return __retres;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.h"
void iwl_init_sensitivity(struct iwl_priv *priv);


#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
int iwlagn_hwrate_to_mac80211_idx(u32 rate_n_flags, enum ieee80211_band band);


#line 204 
void iwl_chswitch_done(struct iwl_priv *priv, bool is_success);


#line 219 
int iwlagn_rx_reply_compressed_ba(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd);


#line 222 
int iwlagn_rx_reply_tx(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd);


#line 252 
int iwl_force_rf_reset(struct iwl_priv *priv, bool external);


#line 254 
int iwl_scan_cancel(struct iwl_priv *priv);


#line 257 
void iwl_internal_short_hw_scan(struct iwl_priv *priv);


#line 258 
void iwl_setup_rx_scan_handlers(struct iwl_priv *priv);


#line 283 
void iwlagn_bt_rx_handler_setup(struct iwl_priv *priv);


#line 335 
int iwl_add_sta_callback(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd);


#line 390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static u8 iwl_hw_get_rate(__le32 rate_n_flags)
{
  u8 __retres;
  
#line 392 
  __retres = (unsigned char)rate_n_flags;
  
#line 392 
  return __retres;
}


#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static char const *iwl_dvm_get_cmd_string(u8 cmd)
{
  char const *__retres;
  
#line 487 
  char const *s = iwl_dvm_cmd_strings[(int)cmd];
  
#line 488 
  if (s != (char const *)0) {
    
#line 489 
    __retres = s;
    
#line 489 
    goto return_label;
  }
  else ;
  
#line 490 
  __retres = "UNKNOWN";
  return_label: 
#line 490 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
char const * const iwl_dvm_cmd_strings[255U] = {[1] = "REPLY_ALIVE", "REPLY_ERROR", "REPLY_ECHO", [16] = "REPLY_RXON", "REPLY_RXON_ASSOC", [19] = "REPLY_QOS_PARAM", "REPLY_RXON_TIMING", [24] = "REPLY_ADD_STA", "REPLY_REMOVE_STA", "REPLY_REMOVE_ALL_STA", [28] = "REPLY_TX", [30] = "REPLY_TXFIFO_FLUSH", [32] = "REPLY_WEPKEY", [72] = "REPLY_LEDS_CMD", [78] = "REPLY_TX_LINK_QUALITY_CMD", [90] = "COEX_PRIORITY_TABLE_CMD", "COEX_MEDIUM_NOTIFICATION", "COEX_EVENT_CMD", [98] = "TEMPERATURE_NOTIFICATION", [101] = "CALIBRATION_CFG_CMD", "CALIBRATION_RES_NOTIFICATION", "CALIBRATION_COMPLETE_NOTIFICATION", [113] = "REPLY_QUIET_CMD", "REPLY_CHANNEL_SWITCH", "CHANNEL_SWITCH_NOTIFICATION", "REPLY_SPECTRUM_MEASUREMENT_CMD", "SPECTRUM_MEASURE_NOTIFICATION", [119] = "POWER_TABLE_CMD", [122] = "PM_SLEEP_NOTIFICATION", "PM_DEBUG_STATISTIC_NOTIFIC", [128] = "REPLY_SCAN_CMD", "REPLY_SCAN_ABORT_CMD", "SCAN_START_NOTIFICATION", "SCAN_RESULTS_NOTIFICATION", "SCAN_COMPLETE_NOTIFICATION", [144] = "BEACON_NOTIFICATION", "REPLY_TX_BEACON", [148] = "WHO_IS_AWAKE_NOTIFICATION", "REPLY_TX_POWER_DBM_CMD", "QUIET_NOTIFICATION", "REPLY_TX_PWR_TABLE_CMD", "TX_ANT_CONFIGURATION_CMD", "MEASURE_ABORT_NOTIFICATION", [155] = "REPLY_BT_CONFIG", "REPLY_STATISTICS_CMD", "STATISTICS_NOTIFICATION", [160] = "REPLY_CARD_STATE_CMD", "CARD_STATE_NOTIFICATION", "MISSED_BEACONS_NOTIFICATION", [164] = "REPLY_CT_KILL_CONFIG_CMD", [168] = "SENSITIVITY_CMD", [176] = "REPLY_PHY_CALIBRATION_CMD", [178] = "REPLY_WIPAN_PARAMS", "REPLY_WIPAN_RXON", "REPLY_WIPAN_RXON_TIMING", [182] = "REPLY_WIPAN_RXON_ASSOC", "REPLY_WIPAN_QOS_PARAM", "REPLY_WIPAN_WEPKEY", "REPLY_WIPAN_P2P_CHANNEL_SWITCH", [188] = "REPLY_WIPAN_NOA_NOTIFICATION", "REPLY_WIPAN_DEACTIVATION_COMPLETE", [192] = "REPLY_RX_PHY_CMD", "REPLY_RX_MPDU_CMD", [197] = "REPLY_COMPRESSED_BA", [204] = "REPLY_BT_COEX_PRIO_TABLE", "REPLY_BT_COEX_PROT_ENV", "REPLY_BT_COEX_PROFILE_NOTIF", [211] = "REPLY_D3_CONFIG", [224] = "REPLY_WOWLAN_PATTERNS", "REPLY_WOWLAN_WAKEUP_FILTER", "REPLY_WOWLAN_TSC_RSC_PARAMS", "REPLY_WOWLAN_TKIP_PARAMS", "REPLY_WOWLAN_KEK_KCK_MATERIAL", "REPLY_WOWLAN_GET_STATUS"};

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_reply_error(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  
#line 130 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 131 
  struct iwl_error_resp *err_resp = (struct iwl_error_resp *)(& pkt->data);
  {
    
#line 133 
    bool __cond = (_Bool)((int)*("Error Reply type 0x%08X cmd REPLY_ERROR (0x%02X) " + 70UL) != 10);
    
#line 133 
    if ((int)__cond != 0) 
#line 133 
                          __compiletime_assert_138(); else ;
  }
  
#line 133 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error Reply type 0x%08X cmd REPLY_ERROR (0x%02X) ",err_resp->error_type,(int)err_resp->cmd_id,(int)err_resp->bad_cmd_seq_num,err_resp->error_info);
  
#line 139 
  __retres = 0;
  
#line 139 
  return __retres;
}


#line 160 
void __compiletime_assert_161(void);


#line 164 
void __compiletime_assert_165(void);


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_csa(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  int tmp_0;
  
#line 145 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 146 
  struct iwl_csa_notification *csa = (struct iwl_csa_notification *)(& pkt->data);
  
#line 151 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 152 
  struct iwl_rxon_cmd *rxon = (struct iwl_rxon_cmd *)(& ctx->active);
  
#line 154 
  tmp_0 = constant_test_bit(11L,(unsigned long const volatile *)(& priv->status));
  
#line 154 
  if (tmp_0 == 0) {
    
#line 155 
    __retres = 0;
    
#line 155 
    goto return_label;
  }
  else ;
  
#line 157 
  if (csa->status == 0U && (int)csa->channel == (int)priv->switch_channel) {
    
#line 158 
    rxon->channel = csa->channel;
    
#line 159 
    ctx->staging.channel = csa->channel;
    {
      
#line 160 
      bool __cond = (_Bool)((int)*("CSA notif: channel %d\n" + 21UL) != 10);
      
#line 160 
      if ((int)__cond != 0) 
#line 160 
                            __compiletime_assert_161(); else ;
    }
    
#line 160 
    __iwl_dbg(priv->dev,268435456U,(_Bool)0,"iwlagn_rx_csa","CSA notif: channel %d\n",(int)csa->channel);
    
#line 162 
    iwl_chswitch_done(priv,(_Bool)1);
  }
  else {
    {
      
#line 164 
      bool __cond_0 = (_Bool)((int)*("CSA notif (fail) : channel %d\n" + 29UL) != 10);
      
#line 164 
      if ((int)__cond_0 != 0) 
#line 164 
                              __compiletime_assert_165(); else ;
    }
    
#line 164 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"CSA notif (fail) : channel %d\n",(int)csa->channel);
    
#line 166 
    iwl_chswitch_done(priv,(_Bool)0);
  }
  
#line 168 
  __retres = 0;
  return_label: 
#line 168 
                return __retres;
}


#line 180 
void __compiletime_assert_181(void);


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_spectrum_measure_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  
#line 176 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 177 
  struct iwl_spectrum_notification *report = (struct iwl_spectrum_notification *)(& pkt->data);
  
#line 179 
  if ((unsigned int)report->state == 0U) {
    {
      
#line 180 
      bool __cond = (_Bool)((int)*("Spectrum Measure Notification: Start\n" + 36UL) != 10);
      
#line 180 
      if ((int)__cond != 0) 
#line 180 
                            __compiletime_assert_181(); else ;
    }
    
#line 180 
    __iwl_dbg(priv->dev,268435456U,(_Bool)0,"iwlagn_rx_spectrum_measure_notif","Spectrum Measure Notification: Start\n");
    
#line 182 
    __retres = 0;
    
#line 182 
    goto return_label;
  }
  else ;
  
#line 185 
  memcpy((void *)(& priv->measure_report),(void const *)report,100UL);
  
#line 186 
  priv->measurement_status = (unsigned char)((unsigned int)priv->measurement_status | 1U);
  
#line 187 
  __retres = 0;
  return_label: 
#line 187 
                return __retres;
}


#line 197 
void __compiletime_assert_198(void);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_pm_sleep_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  
#line 195 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 196 
  struct iwl_sleep_notification *sleep = (struct iwl_sleep_notification *)(& pkt->data);
  {
    
#line 197 
    bool __cond = (_Bool)((int)*("sleep mode: %d, src: %d\n" + 23UL) != 10);
    
#line 197 
    if ((int)__cond != 0) 
#line 197 
                          __compiletime_assert_198(); else ;
  }
  
#line 197 
  __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwlagn_rx_pm_sleep_notif","sleep mode: %d, src: %d\n",(int)sleep->pm_sleep_mode,(int)sleep->pm_wakeup_src);
  
#line 200 
  __retres = 0;
  
#line 200 
  return __retres;
}


#line 209 
void __compiletime_assert_210(void);


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_pm_debug_statistics_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  bool tmp_1;
  
#line 207 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 208 
  u32 len = iwl_rx_packet_len((struct iwl_rx_packet const *)pkt);
  {
    
#line 209 
    bool __cond = (_Bool)((int)*("Dumping %d bytes of unhandled " + 74UL) != 10);
    
#line 209 
    if ((int)__cond != 0) 
#line 209 
                          __compiletime_assert_210(); else ;
  }
  
#line 209 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwlagn_rx_pm_debug_statistics_notif","Dumping %d bytes of unhandled ",len);
  
#line 211 
  tmp_1 = iwl_have_debug_level(128U);
  
#line 211 
  if ((int)tmp_1 != 0) 
#line 211 
                       print_hex_dump("\001","iwl data: ",2,16,1,(void const *)(& pkt->data),(unsigned long)len,(_Bool)1); else ;
  
#line 212 
  __retres = 0;
  
#line 212 
  return __retres;
}


#line 225 
void __compiletime_assert_231(void);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_beacon_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  
#line 219 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 220 
  struct iwlagn_beacon_notif *beacon = (struct iwlagn_beacon_notif *)(& pkt->data);
  
#line 222 
  u16 status = beacon->beacon_notify_hdr.status.status;
  
#line 223 
  u8 rate = iwl_hw_get_rate(beacon->beacon_notify_hdr.rate_n_flags);
  {
    
#line 225 
    bool __cond = (_Bool)((int)*("beacon status %#x, retries:%d ibssmgr:%d " + 63UL) != 10);
    
#line 225 
    if ((int)__cond != 0) 
#line 225 
                          __compiletime_assert_231(); else ;
  }
  
#line 225 
  __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwlagn_rx_beacon_notif","beacon status %#x, retries:%d ibssmgr:%d ",(int)status & 255,(int)beacon->beacon_notify_hdr.failure_frame,beacon->ibss_mgr_status,beacon->high_tsf,beacon->low_tsf,(int)rate);
  
#line 234 
  priv->ibss_manager = beacon->ibss_mgr_status;
  
#line 236 
  __retres = 0;
  
#line 236 
  return __retres;
}


#line 254 
void __compiletime_assert_254(void);


#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static bool iwlagn_good_plcp_health(struct iwl_priv *priv, struct statistics_rx_phy *cur_ofdm, struct statistics_rx_ht_phy *cur_ofdm_ht, unsigned int msecs)
{
  bool __retres;
  int delta;
  
#line 251 
  int threshold = (int)priv->plcp_delta_threshold;
  
#line 253 
  if (threshold == 0) {
    {
      
#line 254 
      bool __cond = (_Bool)((int)*("plcp_err check disabled\n" + 23UL) != 10);
      
#line 254 
      if ((int)__cond != 0) 
#line 254 
                            __compiletime_assert_254(); else ;
    }
    
#line 254 
    __iwl_dbg(priv->dev,128U,(_Bool)0,"iwlagn_good_plcp_health","plcp_err check disabled\n");
    
#line 255 
    __retres = (_Bool)1;
    
#line 255 
    goto return_label;
  }
  else ;
  
#line 258 
  delta = (int)(((cur_ofdm->plcp_err - priv->statistics.rx_ofdm.plcp_err) + cur_ofdm_ht->plcp_err) - priv->statistics.rx_ofdm_ht.plcp_err);
  
#line 264 
  if (delta <= 0) {
    
#line 265 
    __retres = (_Bool)1;
    
#line 265 
    goto return_label;
  }
  else ;
  
#line 267 
  if ((unsigned int)(delta * 100) / msecs > (unsigned int)threshold) {
    {
      
#line 268 
      bool __cond_0 = (_Bool)((int)*("plcp health threshold %u delta %d msecs %u\n" + 42UL) != 10);
      
#line 268 
      if ((int)__cond_0 != 0) 
#line 268 
                              __compiletime_assert_270(); else ;
    }
    
#line 268 
    __iwl_dbg(priv->dev,128U,(_Bool)0,"iwlagn_good_plcp_health","plcp health threshold %u delta %d msecs %u\n",threshold,delta,msecs);
    
#line 271 
    __retres = (_Bool)0;
    
#line 271 
    goto return_label;
  }
  else ;
  
#line 274 
  __retres = (_Bool)1;
  return_label: 
#line 274 
                return __retres;
}


#line 285 
void __compiletime_assert_285(void);


#line 294 
void __compiletime_assert_294(void);


#line 310 
void __compiletime_assert_310(void);


#line 277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
int iwl_force_rf_reset(struct iwl_priv *priv, bool external)
{
  int __retres;
  struct iwl_rf_reset *rf_reset;
  int tmp;
  int tmp_0;
  
#line 281 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 281 
  if (tmp != 0) {
    
#line 282 
    __retres = -11;
    
#line 282 
    goto return_label;
  }
  else ;
  
#line 284 
  tmp_0 = iwl_is_any_associated(priv);
  
#line 284 
  if (tmp_0 == 0) {
    {
      
#line 285 
      bool __cond = (_Bool)((int)*("force reset rejected: not associated\n" + 36UL) != 10);
      
#line 285 
      if ((int)__cond != 0) 
#line 285 
                            __compiletime_assert_285(); else ;
    }
    
#line 285 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_force_rf_reset","force reset rejected: not associated\n");
    
#line 286 
    __retres = -67;
    
#line 286 
    goto return_label;
  }
  else ;
  
#line 289 
  rf_reset = & priv->rf_reset;
  
#line 290 
  rf_reset->reset_request_count += 1;
  
#line 291 
  if (! external && rf_reset->last_reset_jiffies != 0UL) {
    int tmp_1;
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
#line 292 
      tmp_1 = 1;
    }
    
#line 291 
    if (tmp_1 != 0) {
      int tmp_2;
      {
        unsigned long __dummy_0;
        unsigned long volatile __dummy2_0;
        
#line 292 
        tmp_2 = 1;
      }
      
#line 292 
      if (tmp_2 != 0) {
        
#line 292 
        if ((long)((jiffies - rf_reset->last_reset_jiffies) + 18446744073709550866UL) < 0L) {
          {
            
#line 294 
            bool __cond_0 = (_Bool)((int)*("RF reset rejected\n" + 17UL) != 10);
            
#line 294 
            if ((int)__cond_0 != 0) 
#line 294 
                                    __compiletime_assert_294(); else ;
          }
          
#line 294 
          __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_force_rf_reset","RF reset rejected\n");
          
#line 295 
          rf_reset->reset_reject_count += 1;
          
#line 296 
          __retres = -11;
          
#line 296 
          goto return_label;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 298 
  rf_reset->reset_success_count += 1;
  
#line 299 
  rf_reset->last_reset_jiffies = jiffies;
  {
    
#line 310 
    bool __cond_1 = (_Bool)((int)*("perform radio reset.\n" + 20UL) != 10);
    
#line 310 
    if ((int)__cond_1 != 0) 
#line 310 
                            __compiletime_assert_310(); else ;
  }
  
#line 310 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_force_rf_reset","perform radio reset.\n");
  
#line 311 
  iwl_internal_short_hw_scan(priv);
  
#line 312 
  __retres = 0;
  return_label: 
#line 312 
                return __retres;
}


#line 316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static void iwlagn_recover_from_statistics(struct iwl_priv *priv, struct statistics_rx_phy *cur_ofdm, struct statistics_rx_ht_phy *cur_ofdm_ht, struct statistics_tx *tx, unsigned long stamp)
{
  unsigned int msecs;
  int tmp;
  int tmp_0;
  int tmp_2;
  bool tmp_1;
  
#line 324 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 324 
  if (tmp != 0) 
#line 325 
                goto return_label; else ;
  
#line 327 
  msecs = jiffies_to_msecs(stamp - priv->rx_statistics_jiffies);
  
#line 330 
  tmp_0 = iwl_is_any_associated(priv);
  
#line 330 
  if (tmp_0 == 0) 
#line 331 
                  goto return_label; else ;
  
#line 334 
  if (msecs <= 98U) 
#line 335 
                    goto return_label; else ;
  
#line 337 
  tmp_1 = iwlagn_good_plcp_health(priv,cur_ofdm,cur_ofdm_ht,msecs);
  
#line 337 
  if (tmp_1) 
#line 337 
             tmp_2 = 0; else 
#line 337 
                             tmp_2 = 1;
  
#line 337 
  if (tmp_2) 
#line 338 
             iwl_force_rf_reset(priv,(_Bool)0); else ;
  return_label: 
#line 339 
                return;
}


#line 380 
void __compiletime_assert_382(void);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static void iwlagn_rx_calc_noise(struct iwl_priv *priv)
{
  struct statistics_rx_non_phy *rx_info;
  int bcn_silence_a;
  int bcn_silence_b;
  int bcn_silence_c;
  int last_rx_noise;
  
#line 347 
  int num_active_rx = 0;
  
#line 348 
  int total_silence = 0;
  
#line 352 
  rx_info = & priv->statistics.rx_non_phy;
  
#line 354 
  bcn_silence_a = (int)rx_info->beacon_silence_rssi_a & 255;
  
#line 356 
  bcn_silence_b = (int)rx_info->beacon_silence_rssi_b & 255;
  
#line 358 
  bcn_silence_c = (int)rx_info->beacon_silence_rssi_c & 255;
  
#line 361 
  if (bcn_silence_a != 0) {
    
#line 362 
    total_silence += bcn_silence_a;
    
#line 363 
    num_active_rx += 1;
  }
  else ;
  
#line 365 
  if (bcn_silence_b != 0) {
    
#line 366 
    total_silence += bcn_silence_b;
    
#line 367 
    num_active_rx += 1;
  }
  else ;
  
#line 369 
  if (bcn_silence_c != 0) {
    
#line 370 
    total_silence += bcn_silence_c;
    
#line 371 
    num_active_rx += 1;
  }
  else ;
  
#line 375 
  if (num_active_rx != 0) 
#line 376 
                          last_rx_noise = total_silence / num_active_rx + -107; else 
                                                                    
#line 378 
                                                                    last_rx_noise = -127;
  {
    
#line 380 
    bool __cond = (_Bool)((int)*("inband silence a %u, b %u, c %u, dBm %d\n" + 39UL) != 10);
    
#line 380 
    if ((int)__cond != 0) 
#line 380 
                          __compiletime_assert_382(); else ;
  }
  
#line 380 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwlagn_rx_calc_noise","inband silence a %u, b %u, c %u, dBm %d\n",bcn_silence_a,bcn_silence_b,bcn_silence_c,last_rx_noise);
  
#line 381 
  return;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static void accum_stats(__le32 *prev, __le32 *cur, __le32 *delta, __le32 *max_delta, __le32 *accum, int size)
{
  int i;
  
#line 396 
  i = 0;
  
#line 396 
  goto ldv_54541;
  ldv_54540: 
#line 397 
  ;
  
#line 399 
  if (*cur > *prev) {
    
#line 400 
    *delta = *cur - *prev;
    
#line 402 
    le32_add_cpu(accum,*delta);
    
#line 403 
    if (*delta > *max_delta) 
#line 404 
                             *max_delta = *delta; else ;
  }
  else ;
  
#line 398 
  i += 1;
  
#line 398 
  prev += 1;
  
#line 398 
  cur += 1;
  
#line 398 
  delta += 1;
  
#line 398 
  max_delta += 1;
  
#line 398 
  accum += 1;
  ldv_54541: 
#line 399 
  ;
  
#line 396 
  if ((unsigned long)i < (unsigned long)size / 4UL) 
#line 399 
                                                    goto ldv_54540; else 
                                                                    
#line 402 
                                                                    goto ldv_54542;
  ldv_54542: 
#line 403 
  ;
  
#line 404 
  return;
}


#line 410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static void iwlagn_accumulative_statistics(struct iwl_priv *priv, struct statistics_general_common *common, struct statistics_rx_non_phy *rx_non_phy, struct statistics_rx_phy *rx_ofdm, struct statistics_rx_ht_phy *rx_ofdm_ht, struct statistics_rx_phy *rx_cck, struct statistics_tx *tx, struct statistics_bt_activity *bt_activity)
{
  
#line 427 
  accum_stats((__le32 *)(& priv->statistics.common),(__le32 *)common,(__le32 *)(& priv->delta_stats.common),(__le32 *)(& priv->max_delta_stats.common),(__le32 *)(& priv->accum_stats.common),80);
  
#line 428 
  accum_stats((__le32 *)(& priv->statistics.rx_non_phy),(__le32 *)rx_non_phy,(__le32 *)(& priv->delta_stats.rx_non_phy),(__le32 *)(& priv->max_delta_stats.rx_non_phy),(__le32 *)(& priv->accum_stats.rx_non_phy),84);
  
#line 429 
  accum_stats((__le32 *)(& priv->statistics.rx_ofdm),(__le32 *)rx_ofdm,(__le32 *)(& priv->delta_stats.rx_ofdm),(__le32 *)(& priv->max_delta_stats.rx_ofdm),(__le32 *)(& priv->accum_stats.rx_ofdm),80);
  
#line 430 
  accum_stats((__le32 *)(& priv->statistics.rx_ofdm_ht),(__le32 *)rx_ofdm_ht,(__le32 *)(& priv->delta_stats.rx_ofdm_ht),(__le32 *)(& priv->max_delta_stats.rx_ofdm_ht),(__le32 *)(& priv->accum_stats.rx_ofdm_ht),40);
  
#line 431 
  accum_stats((__le32 *)(& priv->statistics.rx_cck),(__le32 *)rx_cck,(__le32 *)(& priv->delta_stats.rx_cck),(__le32 *)(& priv->max_delta_stats.rx_cck),(__le32 *)(& priv->accum_stats.rx_cck),80);
  
#line 432 
  accum_stats((__le32 *)(& priv->statistics.tx),(__le32 *)tx,(__le32 *)(& priv->delta_stats.tx),(__le32 *)(& priv->max_delta_stats.tx),(__le32 *)(& priv->accum_stats.tx),104);
  
#line 433 
  if (bt_activity != (struct statistics_bt_activity *)0) 
#line 434 
                                                         accum_stats((__le32 *)(& priv->statistics.bt_activity),(__le32 *)bt_activity,(__le32 *)(& priv->delta_stats.bt_activity),(__le32 *)(& priv->max_delta_stats.bt_activity),(__le32 *)(& priv->accum_stats.bt_activity),32); else ;
  
#line 435 
  return;
}


#line 469 
void __compiletime_assert_470(void);


#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_statistics(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  int change;
  __le32 *flag;
  struct statistics_general_common *common;
  struct statistics_rx_non_phy *rx_non_phy;
  struct statistics_rx_phy *rx_ofdm;
  struct statistics_rx_ht_phy *rx_ofdm_ht;
  struct statistics_rx_phy *rx_cck;
  struct statistics_tx *tx;
  struct statistics_bt_activity *bt_activity;
  unsigned long tmp_2_0;
  int tmp_3;
  
#line 455 
  unsigned long stamp = jiffies;
  
#line 456 
  int const reg_recalib_period = 60;
  
#line 458 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 459 
  u32 len = iwl_rx_packet_payload_len((struct iwl_rx_packet const *)pkt);
  {
    
#line 469 
    bool __cond = (_Bool)((int)*("Statistics notification received (%d bytes).\n" + 44UL) != 10);
    
#line 469 
    if ((int)__cond != 0) 
#line 469 
                          __compiletime_assert_470(); else ;
  }
  
#line 469 
  __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwlagn_rx_statistics","Statistics notification received (%d bytes).\n",len);
  
#line 472 
  ldv_spin_lock_74(& priv->statistics.lock);
  
#line 474 
  if (len == 524U) {
    struct iwl_bt_notif_statistics *stats;
    
#line 476 
    stats = (struct iwl_bt_notif_statistics *)(& pkt->data);
    
#line 477 
    flag = & stats->flag;
    
#line 478 
    common = & stats->general.common;
    
#line 479 
    rx_non_phy = & stats->rx.general.common;
    
#line 480 
    rx_ofdm = & stats->rx.ofdm;
    
#line 481 
    rx_ofdm_ht = & stats->rx.ofdm_ht;
    
#line 482 
    rx_cck = & stats->rx.cck;
    
#line 483 
    tx = & stats->tx;
    
#line 484 
    bt_activity = & stats->general.activity;
    
#line 488 
    priv->statistics.num_bt_kills = stats->rx.general.num_bt_kills;
    
#line 489 
    le32_add_cpu(& priv->statistics.accum_num_bt_kills,stats->rx.general.num_bt_kills);
  }
  else 
    
#line 492 
    if (len == 480U) {
      struct iwl_notif_statistics *stats_0;
      
#line 494 
      stats_0 = (struct iwl_notif_statistics *)(& pkt->data);
      
#line 495 
      flag = & stats_0->flag;
      
#line 496 
      common = & stats_0->general.common;
      
#line 497 
      rx_non_phy = & stats_0->rx.general;
      
#line 498 
      rx_ofdm = & stats_0->rx.ofdm;
      
#line 499 
      rx_ofdm_ht = & stats_0->rx.ofdm_ht;
      
#line 500 
      rx_cck = & stats_0->rx.cck;
      
#line 501 
      tx = & stats_0->tx;
      
#line 502 
      bt_activity = (struct statistics_bt_activity *)0;
    }
    else {
      {
        bool __warned;
        
#line 504 
        int __ret_warn_once = 1;
        
#line 504 
        if ((long)(__ret_warn_once != 0) != 0L) {
          int tmp_1;
          {
            
#line 504 
            int __ret_warn_on = ! __warned;
            
#line 504 
            if ((long)(__ret_warn_on != 0) != 0L) 
#line 504 
                                                  warn_slowpath_fmt("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c",506,"len %d doesn\'t match BT (%zu) or normal (%zu)\n",len,524UL,480UL); else ;
            
#line 504 
            tmp_1 = (long)(__ret_warn_on != 0);
          }
          
#line 504 
          if ((long)tmp_1 != 0L) 
#line 504 
                                 __warned = (_Bool)1; else ;
        }
        else ;
        
#line 504 
        long tmp_2 = (long)(__ret_warn_once != 0);
      }
      
#line 507 
      ldv_spin_unlock_75(& priv->statistics.lock);
      
#line 508 
      __retres = 0;
      
#line 508 
      goto return_label;
    }
  
#line 511 
  change = (common->temperature != priv->statistics.common.temperature || ((*flag ^ priv->statistics.flag) & 8U) != 0U) != 0;
  
#line 515 
  iwlagn_accumulative_statistics(priv,common,rx_non_phy,rx_ofdm,rx_ofdm_ht,rx_cck,tx,bt_activity);
  
#line 518 
  iwlagn_recover_from_statistics(priv,rx_ofdm,rx_ofdm_ht,tx,stamp);
  
#line 520 
  priv->statistics.flag = *flag;
  
#line 521 
  memcpy((void *)(& priv->statistics.common),(void const *)common,80UL);
  
#line 522 
  memcpy((void *)(& priv->statistics.rx_non_phy),(void const *)rx_non_phy,84UL);
  
#line 523 
  memcpy((void *)(& priv->statistics.rx_ofdm),(void const *)rx_ofdm,80UL);
  
#line 524 
  memcpy((void *)(& priv->statistics.rx_ofdm_ht),(void const *)rx_ofdm_ht,40UL);
  
#line 525 
  memcpy((void *)(& priv->statistics.rx_cck),(void const *)rx_cck,80UL);
  
#line 526 
  memcpy((void *)(& priv->statistics.tx),(void const *)tx,104UL);
  
#line 528 
  if (bt_activity != (struct statistics_bt_activity *)0) 
#line 529 
                                                         memcpy((void *)(& priv->statistics.bt_activity),(void const *)bt_activity,32UL); else ;
  
#line 533 
  priv->rx_statistics_jiffies = stamp;
  
#line 535 
  set_bit(6L,(unsigned long volatile *)(& priv->status));
  
#line 541 
  tmp_2_0 = msecs_to_jiffies(60000U);
  
#line 541 
  ;
  
#line 541 
  ;
  
#line 541 
  ldv_mod_timer_76(& priv->statistics_periodic,tmp_2_0 + jiffies);
  
#line 544 
  tmp_3 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
  
#line 544 
  if ((long)(tmp_3 == 0) != 0L) {
    
#line 544 
    if ((unsigned int)pkt->hdr.cmd == 157U) {
      
#line 546 
      iwlagn_rx_calc_noise(priv);
      
#line 547 
      ldv_queue_work_77(priv->workqueue,& priv->run_time_calib_work);
    }
    else ;
  }
  else ;
  
#line 549 
  if ((priv->lib)->temperature != (void (*)(struct iwl_priv *))0 && change != 0) 
    
#line 550 
    (*((priv->lib)->temperature))(priv); else ;
  
#line 552 
  ldv_spin_unlock_78(& priv->statistics.lock);
  
#line 554 
  __retres = 0;
  return_label: 
#line 554 
                return __retres;
}


#line 573 
void __compiletime_assert_573(void);


#line 557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_reply_statistics(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  
#line 561 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 562 
  struct iwl_notif_statistics *stats = (struct iwl_notif_statistics *)(& pkt->data);
  
#line 564 
  if ((stats->flag & 1U) != 0U) {
    
#line 566 
    memset((void *)(& priv->accum_stats),0,500UL);
    
#line 568 
    memset((void *)(& priv->delta_stats),0,500UL);
    
#line 570 
    memset((void *)(& priv->max_delta_stats),0,500UL);
    {
      
#line 573 
      bool __cond = (_Bool)((int)*("Statistics have been cleared\n" + 28UL) != 10);
      
#line 573 
      if ((int)__cond != 0) 
#line 573 
                            __compiletime_assert_573(); else ;
    }
    
#line 573 
    __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwlagn_rx_reply_statistics","Statistics have been cleared\n");
  }
  else ;
  
#line 575 
  iwlagn_rx_statistics(priv,rxb,cmd);
  
#line 576 
  __retres = 0;
  
#line 576 
  return __retres;
}


#line 590 
void __compiletime_assert_594(void);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_card_state_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  char *tmp_0;
  char *tmp_1;
  char *tmp_2;
  int tmp_4;
  int tmp_5;
  
#line 585 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 586 
  struct iwl_card_state_notif *card_state_notif = (struct iwl_card_state_notif *)(& pkt->data);
  
#line 587 
  u32 flags = card_state_notif->flags;
  
#line 588 
  unsigned long status = priv->status;
  {
    
#line 590 
    bool __cond = (_Bool)((int)*("Card state received: HW:%s SW:%s CT:%s\n" + 38UL) != 10);
    
#line 590 
    if ((int)__cond != 0) 
#line 590 
                          __compiletime_assert_594(); else ;
  }
  
#line 590 
  if ((flags & 4U) != 0U) 
#line 590 
                          tmp_0 = (char *)"Reached"; else 
#line 590 
                                                          tmp_0 = (char *)"Not reached";
  
#line 590 
  if ((flags & 2U) != 0U) 
#line 590 
                          tmp_1 = (char *)"Kill"; else 
#line 590 
                                                       tmp_1 = (char *)"On";
  
#line 590 
  if ((flags & 1U) != 0U) 
#line 590 
                          tmp_2 = (char *)"Kill"; else 
#line 590 
                                                       tmp_2 = (char *)"On";
  
#line 590 
  ;
  
#line 590 
  __iwl_dbg(priv->dev,131072U,(_Bool)0,"iwlagn_rx_card_state_notif","Card state received: HW:%s SW:%s CT:%s\n",tmp_2,tmp_1,tmp_0);
  
#line 596 
  if ((flags & 7U) != 0U) {
    
#line 599 
    iwl_write32_1(priv->trans,88U,4U);
    
#line 602 
    iwl_write_direct32(priv->trans,1072U,4U);
    
#line 605 
    if ((flags & 16U) == 0U) {
      
#line 606 
      iwl_write32_1(priv->trans,92U,4U);
      
#line 608 
      iwl_write_direct32(priv->trans,1072U,4U);
    }
    else ;
    
#line 611 
    if ((flags & 4U) != 0U) 
#line 612 
                            iwl_tt_enter_ct_kill(priv); else ;
  }
  else ;
  
#line 614 
  if ((flags & 4U) == 0U) 
#line 615 
                          iwl_tt_exit_ct_kill(priv); else ;
  
#line 617 
  if ((flags & 1U) != 0U) 
#line 618 
                          set_bit(0L,(unsigned long volatile *)(& priv->status)); else 
                                                                    
#line 620 
                                                                    set_bit(0L,(unsigned long volatile *)(& priv->status));
  
#line 623 
  if ((flags & 16U) == 0U) 
#line 624 
                           iwl_scan_cancel(priv); else ;
  
#line 626 
  tmp_4 = constant_test_bit(0L,(unsigned long const volatile *)(& status));
  
#line 626 
  tmp_5 = constant_test_bit(0L,(unsigned long const volatile *)(& priv->status));
  
#line 626 
  if (tmp_4 != tmp_5) {
    int tmp_3;
    
#line 628 
    tmp_3 = constant_test_bit(0L,(unsigned long const volatile *)(& priv->status));
    
#line 628 
    ;
    
#line 628 
    wiphy_rfkill_set_hw_state((priv->hw)->wiphy,(_Bool)(tmp_3 != 0));
  }
  else ;
  
#line 630 
  __retres = 0;
  
#line 630 
  return __retres;
}


#line 643 
void __compiletime_assert_648(void);


#line 633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_missed_beacon_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  
#line 638 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 639 
  struct iwl_missed_beacon_notif *missed_beacon = (struct iwl_missed_beacon_notif *)(& pkt->data);
  
#line 641 
  if (missed_beacon->consecutive_missed_beacons > (unsigned int)priv->missed_beacon_threshold) {
    int tmp_0;
    {
      
#line 643 
      bool __cond = (_Bool)((int)*("missed bcn cnsq %d totl %d rcd %d expctd %d\n" + 43UL) != 10);
      
#line 643 
      if ((int)__cond != 0) 
#line 643 
                            __compiletime_assert_648(); else ;
    }
    
#line 643 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwlagn_rx_missed_beacon_notif","missed bcn cnsq %d totl %d rcd %d expctd %d\n",missed_beacon->consecutive_missed_beacons,missed_beacon->total_missed_becons,missed_beacon->num_recvd_beacons,missed_beacon->num_expected_beacons);
    
#line 649 
    tmp_0 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
    
#line 649 
    if (tmp_0 == 0) 
#line 650 
                    iwl_init_sensitivity(priv); else ;
  }
  else ;
  
#line 652 
  __retres = 0;
  
#line 652 
  return __retres;
}


#line 657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_reply_rx_phy(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  
#line 661 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 663 
  priv->last_phy_res_valid = (_Bool)1;
  
#line 664 
  priv->ampdu_ref += 1U;
  
#line 665 
  memcpy((void *)(& priv->last_phy_res),(void const *)(& pkt->data),60UL);
  
#line 667 
  __retres = 0;
  
#line 667 
  return __retres;
}


#line 691 
void __compiletime_assert_691(void);


#line 705 
void __compiletime_assert_705(void);


#line 711 
void __compiletime_assert_711(void);


#line 673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_set_decrypted_flag(struct iwl_priv *priv, struct ieee80211_hdr *hdr, u32 decrypt_res, struct ieee80211_rx_status *stats)
{
  int __retres;
  
#line 678 
  u16 fc = hdr->frame_control;
  
#line 684 
  if ((priv->contexts[0].active.filter_flags & 8U) != 0U) {
    
#line 686 
    __retres = 0;
    
#line 686 
    goto return_label;
  }
  else ;
  
#line 688 
  if (((int)fc & 16384) == 0) {
    
#line 689 
    __retres = 0;
    
#line 689 
    goto return_label;
  }
  else ;
  {
    
#line 691 
    bool __cond = (_Bool)((int)*("decrypt_res:0x%x\n" + 16UL) != 10);
    
#line 691 
    if ((int)__cond != 0) 
#line 691 
                          __compiletime_assert_691(); else ;
  }
  
#line 691 
  __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwlagn_set_decrypted_flag","decrypt_res:0x%x\n",decrypt_res);
  
#line 692 
  switch (decrypt_res & 1792U) {
    case (unsigned int)768: 
#line 693 
    ;
    
#line 696 
    if ((decrypt_res & 6144U) == 4096U) 
#line 698 
                                        goto ldv_54640; else ;
    case (unsigned int)256: 
#line 700 
    ;
    
#line 701 
    if ((decrypt_res & 6144U) == 2048U) {
      {
        
#line 705 
        bool __cond_0 = (_Bool)((int)*("Packet destroyed\n" + 16UL) != 10);
        
#line 705 
        if ((int)__cond_0 != 0) 
#line 705 
                                __compiletime_assert_705(); else ;
      }
      
#line 705 
      __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwlagn_set_decrypted_flag","Packet destroyed\n");
      
#line 706 
      __retres = -1;
      
#line 706 
      goto return_label;
    }
    else ;
    case (unsigned int)512: 
#line 708 
    ;
    
#line 709 
    if ((decrypt_res & 6144U) == 6144U) {
      {
        
#line 711 
        bool __cond_1 = (_Bool)((int)*("hw decrypt successfully!!!\n" + 26UL) != 10);
        
#line 711 
        if ((int)__cond_1 != 0) 
#line 711 
                                __compiletime_assert_711(); else ;
      }
      
#line 711 
      __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwlagn_set_decrypted_flag","hw decrypt successfully!!!\n");
      
#line 712 
      stats->flag |= 2U;
    }
    else ;
    
#line 714 
    goto ldv_54640;
    default: 
#line 716 
    ;
    
#line 717 
    goto ldv_54640;
  }
  ldv_54640: 
#line 719 
  ;
  
#line 719 
  __retres = 0;
  return_label: 
#line 719 
                return __retres;
}


#line 736 
void __compiletime_assert_737(void);


#line 751 
void __compiletime_assert_751(void);


#line 722  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static void iwlagn_pass_packet_to_mac80211(struct iwl_priv *priv, struct ieee80211_hdr *hdr, u16 len, u32 ampdu_status, struct iwl_rx_cmd_buffer *rxb, struct ieee80211_rx_status *stats)
{
  struct sk_buff *skb;
  struct iwl_rxon_context *ctx;
  unsigned int hdrlen;
  unsigned int fraglen;
  int tmp_0;
  unsigned char *tmp_1;
  int tmp_7;
  struct ieee80211_rx_status *tmp_8;
  
#line 730 
  __le16 fc = hdr->frame_control;
  
#line 735 
  if ((long)((unsigned int)priv->is_open == 0U) != 0L) {
    {
      
#line 736 
      bool __cond = (_Bool)((int)*("Dropping packet while interface is not open.\n" + 44UL) != 10);
      
#line 736 
      if ((int)__cond != 0) 
#line 736 
                            __compiletime_assert_737(); else ;
    }
    
#line 736 
    __iwl_dbg(priv->dev,8192U,(_Bool)1,"iwlagn_pass_packet_to_mac80211","Dropping packet while interface is not open.\n");
    
#line 738 
    goto return_label;
  }
  else ;
  
#line 742 
  if (iwlwifi_mod_params.sw_crypto == 0) {
    int tmp;
    
#line 742 
    tmp = iwlagn_set_decrypted_flag(priv,hdr,ampdu_status,stats);
    
#line 742 
    if (tmp != 0) 
#line 744 
                  goto return_label; else ;
  }
  else ;
  
#line 749 
  skb = alloc_skb(128U,32U);
  
#line 750 
  if (skb == (struct sk_buff *)0) {
    {
      
#line 751 
      bool __cond_0 = (_Bool)((int)*("alloc_skb failed\n" + 16UL) != 10);
      
#line 751 
      if ((int)__cond_0 != 0) 
#line 751 
                              __compiletime_assert_751(); else ;
    }
    
#line 751 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"alloc_skb failed\n");
    
#line 752 
    goto return_label;
  }
  else ;
  
#line 758 
  tmp_0 = skb_tailroom((struct sk_buff const *)skb);
  
#line 758 
  ;
  
#line 758 
  if ((int)len <= tmp_0) 
#line 758 
                         hdrlen = (unsigned int)len; else 
#line 758 
                                                          hdrlen = 30U;
  
#line 760 
  ;
  
#line 760 
  ;
  
#line 760 
  tmp_1 = skb_put(skb,hdrlen);
  
#line 760 
  memcpy((void *)tmp_1,(void const *)hdr,(unsigned long)hdrlen);
  
#line 761 
  fraglen = (unsigned int)len - hdrlen;
  
#line 763 
  if (fraglen != 0U) {
    void *tmp_2;
    int tmp_3;
    struct page *tmp_4;
    
#line 764 
    tmp_2 = rxb_addr(rxb);
    
#line 765 
    tmp_3 = rxb_offset(rxb);
    
#line 764 
    int offset = (int)(((long)((void *)hdr + hdrlen) - (long)tmp_2) + (long)tmp_3);
    
#line 767 
    ;
    
#line 767 
    ;
    
#line 767 
    ;
    
#line 767 
    tmp_4 = rxb_steal_page(rxb);
    
#line 767 
    ;
    
#line 767 
    skb_add_rx_frag(skb,0,tmp_4,offset,(int)fraglen,rxb->truesize);
  }
  else ;
  
#line 778 
  tmp_7 = ieee80211_is_beacon((unsigned short)((int)fc));
  
#line 778 
  if ((long)(tmp_7 != 0) != 0L) {
    
#line 778 
    if ((long)((int)priv->passive_no_rx != 0) != 0L) {
      
#line 779 
      ctx = & priv->contexts[0];
      
#line 779 
      goto ldv_54677;
      ldv_54676: 
#line 780 
      ;
      
#line 779 
      if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
        int tmp_6;
        bool tmp_5;
        
#line 780 
        tmp_5 = ether_addr_equal((u8 const *)(& hdr->addr3),(u8 const *)(& ctx->active.bssid_addr));
        
#line 780 
        if (tmp_5) 
#line 780 
                   tmp_6 = 0; else 
#line 780 
                                   tmp_6 = 1;
        
#line 780 
        if (tmp_6) 
#line 782 
                   goto ldv_54675; else ;
        
#line 783 
        iwlagn_lift_passive_no_rx(priv);
      }
      else ;
      ldv_54675: 
#line 785 
      ;
      
#line 779 
      ctx += 1;
      ldv_54677: 
#line 780 
      ;
      
#line 779 
      if (& priv->contexts[2] > ctx) 
#line 781 
                                     goto ldv_54676; else 
#line 784 
                                                          goto ldv_54678;
      ldv_54678: 
#line 785 
      ;
    }
    else ;
  }
  else ;
  
#line 787 
  ;
  
#line 787 
  tmp_8 = IEEE80211_SKB_RXCB(skb);
  
#line 787 
  memcpy((void *)tmp_8,(void const *)stats,40UL);
  
#line 789 
  ieee80211_rx(priv->hw,skb);
  return_label: 
#line 790 
                return;
}


#line 845 
void __compiletime_assert_846(void);


#line 792  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static u32 iwlagn_translate_rx_status(struct iwl_priv *priv, u32 decrypt_in)
{
  u32 __retres;
  
#line 794 
  u32 decrypt_out = 0U;
  
#line 796 
  if ((decrypt_in & 64U) != 0U) 
#line 798 
                                decrypt_out |= 192U; else ;
  
#line 801 
  decrypt_out = (decrypt_in & 1792U) | decrypt_out;
  
#line 804 
  if ((decrypt_in & 1792U) == 0U) {
    
#line 806 
    __retres = decrypt_out;
    
#line 806 
    goto return_label;
  }
  else ;
  
#line 809 
  if ((decrypt_in & 1792U) == 1792U) {
    
#line 811 
    __retres = decrypt_out;
    
#line 811 
    goto return_label;
  }
  else ;
  
#line 814 
  if ((decrypt_in & 2048U) == 0U) {
    
#line 816 
    __retres = decrypt_out;
    
#line 816 
    goto return_label;
  }
  else ;
  
#line 818 
  switch (decrypt_in & 1792U) {
    case (unsigned int)512: 
#line 820 
    ;
    
#line 822 
    if ((decrypt_in & 64U) == 0U) 
#line 824 
                                  decrypt_out |= 2048U; else 
#line 826 
                                                             decrypt_out |= 6144U;
    
#line 828 
    goto ldv_54685;
    case (unsigned int)768: 
#line 830 
    ;
    
#line 831 
    if ((decrypt_in & 128U) == 0U) {
      
#line 833 
      decrypt_out |= 4096U;
      
#line 834 
      goto ldv_54685;
    }
    else ;
    default: 
#line 837 
    ;
    
#line 838 
    if ((decrypt_in & 32U) == 0U) 
#line 839 
                                  decrypt_out |= 2048U; else 
#line 841 
                                                             decrypt_out |= 6144U;
    
#line 842 
    goto ldv_54685;
  }
  ldv_54685: 
#line 845 
  ;
  {
    
#line 845 
    bool __cond = (_Bool)((int)*("decrypt_in:0x%x  decrypt_out = 0x%x\n" + 35UL) != 10);
    
#line 845 
    if ((int)__cond != 0) 
#line 845 
                          __compiletime_assert_846(); else ;
  }
  
#line 845 
  __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwlagn_translate_rx_status","decrypt_in:0x%x  decrypt_out = 0x%x\n",decrypt_in,decrypt_out);
  
#line 848 
  __retres = decrypt_out;
  return_label: 
#line 848 
                return __retres;
}


#line 884 
void __compiletime_assert_885(void);


#line 852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_calc_rssi(struct iwl_priv *priv, struct iwl_rx_phy_res *rx_resp)
{
  int __retres;
  u32 val;
  u32 rssi_a;
  u32 rssi_b;
  u32 rssi_c;
  u32 max_rssi;
  u8 agc;
  u32 tmp_0;
  u32 tmp_2;
  
#line 858 
  struct iwlagn_non_cfg_phy *ncphy = (struct iwlagn_non_cfg_phy *)(& rx_resp->non_cfg_phy_buf);
  
#line 863 
  val = ncphy->non_cfg_phy[1];
  
#line 864 
  agc = (unsigned char)((unsigned int)((unsigned char)(val >> 9)) & 127U);
  
#line 872 
  val = ncphy->non_cfg_phy[2];
  
#line 873 
  rssi_a = val & 255U;
  
#line 875 
  rssi_b = (val >> 16) & 255U;
  
#line 877 
  val = ncphy->non_cfg_phy[3];
  
#line 878 
  rssi_c = val & 255U;
  {
    u32 tmp;
    
#line 881 
    u32 __max1 = rssi_a;
    
#line 881 
    u32 __max2 = rssi_b;
    
#line 881 
    if (__max1 > __max2) 
#line 881 
                         tmp = __max1; else 
#line 881 
                                            tmp = __max2;
    
#line 881 
    tmp_0 = tmp;
  }
  
#line 881 
  max_rssi = tmp_0;
  {
    u32 tmp_1;
    
#line 882 
    u32 __max1_0 = max_rssi;
    
#line 882 
    u32 __max2_0 = rssi_c;
    
#line 882 
    if (__max1_0 > __max2_0) 
#line 882 
                             tmp_1 = __max1_0; else 
#line 882 
                                                    tmp_1 = __max2_0;
    
#line 882 
    tmp_2 = tmp_1;
  }
  
#line 882 
  max_rssi = tmp_2;
  {
    
#line 884 
    bool __cond = (_Bool)((int)*("Rssi In A %d B %d C %d Max %d AGC dB %d\n" + 39UL) != 10);
    
#line 884 
    if ((int)__cond != 0) 
#line 884 
                          __compiletime_assert_885(); else ;
  }
  
#line 884 
  __iwl_dbg(priv->dev,536870912U,(_Bool)0,"iwlagn_calc_rssi","Rssi In A %d B %d C %d Max %d AGC dB %d\n",rssi_a,rssi_b,rssi_c,max_rssi,(int)agc);
  
#line 889 
  __retres = (int)((max_rssi - (unsigned int)agc) + 4294967252U);
  
#line 889 
  return __retres;
}


#line 908 
void __compiletime_assert_908(void);


#line 920 
void __compiletime_assert_921(void);


#line 927 
void __compiletime_assert_928(void);


#line 955 
void __compiletime_assert_956(void);


#line 893  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_reply_rx(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  struct ieee80211_hdr *header;
  struct iwl_rx_phy_res *phy_res;
  __le32 rx_pkt_status;
  struct iwl_rx_mpdu_res_start *amsdu;
  u32 len;
  u32 ampdu_status;
  u32 rate_n_flags;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 898 
  struct ieee80211_rx_status rx_status = {.mactime = 0ULL, .device_timestamp = 0U, .ampdu_reference = 0U, .flag = 0U, .freq = (unsigned short)0, .vht_flag = (unsigned char)0, .rate_idx = (unsigned char)0, .vht_nss = (unsigned char)0, .rx_flags = (unsigned char)0, .band = (unsigned char)0, .antenna = (unsigned char)0, .signal = (signed char)0, .chains = (unsigned char)0, .chain_signal = {(signed char)0, (signed char)0, (signed char)0, (signed char)0}, .ampdu_delimiter_crc = (unsigned char)0};
  
#line 899 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 907 
  if (! priv->last_phy_res_valid) {
    {
      
#line 908 
      bool __cond = (_Bool)((int)*("MPDU frame without cached PHY data\n" + 34UL) != 10);
      
#line 908 
      if ((int)__cond != 0) 
#line 908 
                            __compiletime_assert_908(); else ;
    }
    
#line 908 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"MPDU frame without cached PHY data\n");
    
#line 909 
    __retres = 0;
    
#line 909 
    goto return_label;
  }
  else ;
  
#line 911 
  phy_res = & priv->last_phy_res;
  
#line 912 
  amsdu = (struct iwl_rx_mpdu_res_start *)(& pkt->data);
  
#line 913 
  header = (struct ieee80211_hdr *)(& pkt->data) + 4U;
  
#line 914 
  len = (unsigned int)amsdu->byte_count;
  
#line 915 
  rx_pkt_status = *((__le32 *)(& pkt->data) + (len + 4U));
  
#line 916 
  ampdu_status = iwlagn_translate_rx_status(priv,rx_pkt_status);
  
#line 919 
  if ((long)((unsigned int)phy_res->cfg_phy_cnt > 20U) != 0L) {
    {
      
#line 920 
      bool __cond_0 = (_Bool)((int)*("dsp size out of range [0,20]: %d\n" + 32UL) != 10);
      
#line 920 
      if ((int)__cond_0 != 0) 
#line 920 
                              __compiletime_assert_921(); else ;
    }
    
#line 920 
    __iwl_dbg(priv->dev,8192U,(_Bool)0,"iwlagn_rx_reply_rx","dsp size out of range [0,20]: %d\n",(int)phy_res->cfg_phy_cnt);
    
#line 922 
    __retres = 0;
    
#line 922 
    goto return_label;
  }
  else ;
  
#line 925 
  if ((rx_pkt_status & 1U) == 0U || (rx_pkt_status & 2U) == 0U) {
    {
      
#line 927 
      bool __cond_1 = (_Bool)((int)*("Bad CRC or FIFO: 0x%08X.\n" + 24UL) != 10);
      
#line 927 
      if ((int)__cond_1 != 0) 
#line 927 
                              __compiletime_assert_928(); else ;
    }
    
#line 927 
    __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwlagn_rx_reply_rx","Bad CRC or FIFO: 0x%08X.\n",rx_pkt_status);
    
#line 929 
    __retres = 0;
    
#line 929 
    goto return_label;
  }
  else ;
  
#line 933 
  rate_n_flags = phy_res->rate_n_flags;
  
#line 936 
  rx_status.mactime = phy_res->timestamp;
  
#line 937 
  rx_status.band = (unsigned char)(((int)phy_res->phy_flags & 1) == 0);
  
#line 939 
  tmp_0 = ieee80211_channel_to_frequency((int)phy_res->channel,(enum ieee80211_band)rx_status.band);
  
#line 939 
  rx_status.freq = (unsigned short)tmp_0;
  
#line 942 
  tmp_1 = iwlagn_hwrate_to_mac80211_idx(rate_n_flags,(enum ieee80211_band)rx_status.band);
  
#line 942 
  rx_status.rate_idx = (unsigned char)tmp_1;
  
#line 944 
  rx_status.flag = 0U;
  
#line 950 
  priv->ucode_beacon_time = phy_res->beacon_time_stamp;
  
#line 953 
  tmp_2 = iwlagn_calc_rssi(priv,phy_res);
  
#line 953 
  rx_status.signal = (signed char)tmp_2;
  {
    
#line 955 
    bool __cond_2 = (_Bool)((int)*("Rssi %d, TSF %llu\n" + 17UL) != 10);
    
#line 955 
    if ((int)__cond_2 != 0) 
#line 955 
                            __compiletime_assert_956(); else ;
  }
  
#line 955 
  __iwl_dbg(priv->dev,536870912U,(_Bool)1,"iwlagn_rx_reply_rx","Rssi %d, TSF %llu\n",(int)rx_status.signal,rx_status.mactime);
  
#line 971 
  rx_status.antenna = (unsigned char)((unsigned int)((unsigned char)((int)phy_res->phy_flags >> 4)) & 7U);
  
#line 976 
  if (((int)phy_res->phy_flags & 4) != 0) 
#line 977 
                                          rx_status.flag |= 256U; else ;
  
#line 979 
  if (((int)phy_res->phy_flags & 128) != 0) {
    
#line 985 
    rx_status.flag |= 16384U;
    
#line 986 
    rx_status.ampdu_reference = priv->ampdu_ref;
  }
  else ;
  
#line 990 
  if ((rate_n_flags & 256U) != 0U) 
#line 991 
                                   rx_status.flag |= 512U; else ;
  
#line 992 
  if ((rate_n_flags & 2048U) != 0U) 
#line 993 
                                    rx_status.flag |= 1024U; else ;
  
#line 994 
  if ((rate_n_flags & 8192U) != 0U) 
#line 995 
                                    rx_status.flag |= 2048U; else ;
  
#line 996 
  if ((rate_n_flags & 1024U) != 0U) 
#line 997 
                                    rx_status.flag |= 8192U; else ;
  
#line 999 
  iwlagn_pass_packet_to_mac80211(priv,header,(unsigned short)((int)((unsigned short)len)),ampdu_status,rxb,& rx_status);
  
#line 1001 
  __retres = 0;
  return_label: 
#line 1001 
                return __retres;
}


#line 1040 
void __compiletime_assert_1040(void);


#line 1043 
void __compiletime_assert_1043(void);


#line 1004  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
static int iwlagn_rx_noa_notification(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  struct iwl_wipan_noa_data *new_data;
  struct iwl_wipan_noa_data *old_data;
  struct iwl_wipan_noa_data * volatile *tmp_3;
  
#line 1009 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 1010 
  struct iwl_wipan_noa_notification *noa_notif = (struct iwl_wipan_noa_notification *)(& pkt->data);
  {
    bool __warned;
    int tmp_1;
    int tmp_0;
    
#line 1013 
    tmp_0 = debug_lockdep_rcu_enabled();
    
#line 1013 
    if (tmp_0 != 0) 
      
#line 1013 
      if (! __warned) 
#line 1013 
                      tmp_1 = 1; else 
#line 1013 
                                      tmp_1 = 0;
    else 
#line 1013 
         tmp_1 = 0;
  }
  
#line 1013 
  old_data = priv->noa_data;
  
#line 1015 
  if (noa_notif->noa_active != 0U) {
    
#line 1016 
    u32 len = (unsigned int)noa_notif->noa_attribute.length;
    
#line 1017 
    u32 copylen = len;
    
#line 1020 
    len += 6U;
    
#line 1022 
    len += 3U;
    
#line 1023 
    copylen += 3U;
    
#line 1025 
    new_data = (struct iwl_wipan_noa_data *)kmalloc_0((unsigned long)len + 24UL,32U);
    
#line 1026 
    if (new_data != (struct iwl_wipan_noa_data *)0) {
      
#line 1027 
      new_data->length = len;
      
#line 1028 
      new_data->data[0] = (unsigned char)221U;
      
#line 1029 
      new_data->data[1] = (unsigned char)((unsigned int)((unsigned char)len) + 254U);
      
#line 1030 
      new_data->data[2] = (unsigned char)80U;
      
#line 1031 
      new_data->data[3] = (unsigned char)111U;
      
#line 1032 
      new_data->data[4] = (unsigned char)154U;
      
#line 1033 
      new_data->data[5] = (unsigned char)9U;
      
#line 1034 
      memcpy((void *)(& new_data->data[6]),(void const *)(& noa_notif->noa_attribute),(unsigned long)copylen);
    }
    else ;
  }
  else 
#line 1038 
       new_data = (struct iwl_wipan_noa_data *)0;
  {
    
#line 1040 
    bool __cond = (_Bool)0;
    
#line 1040 
    if ((int)__cond != 0) 
#line 1040 
                          __compiletime_assert_1040(); else ;
  }
  
#line 1042 
  ldv_inline_asm();
  {
    
#line 1040 
    struct iwl_wipan_noa_data *__var = (struct iwl_wipan_noa_data *)0;
    
#line 1040 
    tmp_3 = (struct iwl_wipan_noa_data * volatile *)(& priv->noa_data);
  }
  
#line 1040 
  *tmp_3 = new_data;
  
#line 1042 
  if (old_data != (struct iwl_wipan_noa_data *)0) {
    {
      
#line 1043 
      bool __cond_0 = (_Bool)0;
      
#line 1043 
      if ((int)__cond_0 != 0) 
#line 1043 
                              __compiletime_assert_1043(); else ;
    }
    
#line 1043 
    kfree_call_rcu(& old_data->callback_head,(void (*)(struct callback_head *))0);
  }
  else ;
  
#line 1045 
  __retres = 0;
  
#line 1045 
  return __retres;
}


#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
void iwl_setup_rx_handlers(struct iwl_priv *priv)
{
  int (**handlers)(struct iwl_priv *, struct iwl_rx_cmd_buffer *, struct iwl_device_cmd *);
  
#line 1059 
  handlers = (int (**)(struct iwl_priv *, struct iwl_rx_cmd_buffer *, struct iwl_device_cmd *))(& priv->rx_handlers);
  
#line 1061 
  *(handlers + 2U) = & iwlagn_rx_reply_error;
  
#line 1062 
  *(handlers + 115U) = & iwlagn_rx_csa;
  
#line 1063 
  *(handlers + 117U) = & iwlagn_rx_spectrum_measure_notif;
  
#line 1065 
  *(handlers + 122U) = & iwlagn_rx_pm_sleep_notif;
  
#line 1066 
  *(handlers + 123U) = & iwlagn_rx_pm_debug_statistics_notif;
  
#line 1068 
  *(handlers + 144U) = & iwlagn_rx_beacon_notif;
  
#line 1069 
  *(handlers + 24U) = & iwl_add_sta_callback;
  
#line 1071 
  *(handlers + 188U) = & iwlagn_rx_noa_notification;
  
#line 1078 
  *(handlers + 156U) = & iwlagn_rx_reply_statistics;
  
#line 1079 
  *(handlers + 157U) = & iwlagn_rx_statistics;
  
#line 1081 
  iwl_setup_rx_scan_handlers(priv);
  
#line 1083 
  *(handlers + 161U) = & iwlagn_rx_card_state_notif;
  
#line 1084 
  *(handlers + 162U) = & iwlagn_rx_missed_beacon_notif;
  
#line 1088 
  *(handlers + 192U) = & iwlagn_rx_reply_rx_phy;
  
#line 1089 
  *(handlers + 193U) = & iwlagn_rx_reply_rx;
  
#line 1092 
  *(handlers + 197U) = & iwlagn_rx_reply_compressed_ba;
  
#line 1095 
  priv->rx_handlers[28] = & iwlagn_rx_reply_tx;
  
#line 1098 
  iwl_notification_wait_init(& priv->notif_wait);
  
#line 1101 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) 
    
#line 1102 
    iwlagn_bt_rx_handler_setup(priv); else ;
  
#line 1103 
  return;
}


#line 1127 
void __compiletime_assert_1129(void);


#line 1105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rx.c"
int iwl_rx_dispatch(struct iwl_op_mode *op_mode, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  
#line 1108 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 1109 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 1110 
  int err = 0;
  
#line 1117 
  iwl_notification_wait_notify(& priv->notif_wait,pkt);
  
#line 1122 
  if (priv->rx_handlers[(int)pkt->hdr.cmd] != (int (*)(struct iwl_priv *, struct iwl_rx_cmd_buffer *, struct iwl_device_cmd *))0) {
    
#line 1123 
    priv->rx_handlers_stats[(int)pkt->hdr.cmd] += 1U;
    
#line 1124 
    err = (*(priv->rx_handlers[(int)pkt->hdr.cmd]))(priv,rxb,cmd);
  }
  else {
    char const *tmp_0;
    {
      
#line 1127 
      bool __cond = (_Bool)((int)*("No handler needed for %s, 0x%02x\n" + 32UL) != 10);
      
#line 1127 
      if ((int)__cond != 0) 
#line 1127 
                            __compiletime_assert_1129(); else ;
    }
    
#line 1127 
    ;
    
#line 1127 
    tmp_0 = iwl_dvm_get_cmd_string((unsigned char)((int)pkt->hdr.cmd));
    
#line 1127 
    ;
    
#line 1127 
    __iwl_dbg(priv->dev,16777216U,(_Bool)0,"iwl_rx_dispatch","No handler needed for %s, 0x%02x\n",tmp_0,(int)pkt->hdr.cmd);
  }
  
#line 1131 
  return err;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rx.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 122 
  ldv_atomic_inc(v);
  
#line 123 
  return;
}


#line 414  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rx.c.aux"
static void *kmalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 417 
  tmp = ldv_kmalloc(size,flags);
  
#line 417 
  return tmp;
}


#line 752  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rx.c.aux"
static void ldv_spin_lock_74(spinlock_t *lock)
{
  
#line 756 
  ldv_spin_model_lock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 758 
  spin_lock(lock);
  
#line 759 
  return;
}


#line 762  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rx.c.aux"
static void ldv_spin_unlock_75(spinlock_t *lock)
{
  
#line 766 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 768 
  spin_unlock(lock);
  
#line 769 
  return;
}


#line 772  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rx.c.aux"
static int ldv_mod_timer_76(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 776 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 776 
  return tmp;
}


#line 780  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rx.c.aux"
static bool ldv_queue_work_77(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 784 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 784 
  __retres = tmp != 0;
  
#line 784 
  return __retres;
}


#line 788  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rx.c.aux"
static void ldv_spin_unlock_78(spinlock_t *lock)
{
  
#line 792 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 794 
  spin_unlock(lock);
  
#line 795 
  return;
}

unsigned long __builtin_bswap64(unsigned long);


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void __set_bit(long nr, unsigned long volatile *addr)
{
  
#line 96 
  ldv_inline_asm();
  
#line 97 
  return;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u64 __fswab64(__u64 val)
{
  __u64 tmp;
  
#line 71 
  tmp = (__u64)__builtin_bswap64((unsigned long)val);
  
#line 71 
  return tmp;
}


#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u64 __swab64p(__u64 const *p)
{
  unsigned long long tmp_0;
  
#line 185 
  if (0 != 0) 
#line 185 
              tmp_0 = (((((((*p << 56) | ((*p << 40) & 71776119061217280ULL)) | ((*p << 24) & 280375465082880ULL)) | ((*p << 8) & 1095216660480ULL)) | ((*p >> 8) & 4278190080ULL)) | ((*p >> 24) & 16711680ULL)) | ((*p >> 40) & 65280ULL)) | (*p >> 56); else 
                                                                    
#line 185 
                                                                    tmp_0 = __fswab64(*p);
  
#line 185 
  return tmp_0;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/byteorder/little_endian.h"
__inline static __u64 __be64_to_cpup(__be64 const *p)
{
  __u64 tmp;
  
#line 73 
  tmp = __swab64p(p);
  
#line 73 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
static bool static_key_false_2(struct static_key *key)
{
  bool tmp;
  
#line 125 
  tmp = arch_static_branch(key);
  
#line 125 
  return tmp;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_89(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_90(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_74_0(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_76_0(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_78_0(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_80(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_82(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_84_0(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_86(struct mutex *ldv_func_arg1);


#line 65 
static void ldv_mutex_lock_88(struct mutex *ldv_func_arg1);


#line 69 
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1);


#line 73 
static void ldv_mutex_lock_94(struct mutex *ldv_func_arg1);


#line 77 
static void ldv_mutex_lock_96(struct mutex *ldv_func_arg1);


#line 81 
static void ldv_mutex_lock_100(struct mutex *ldv_func_arg1);


#line 85 
static void ldv_mutex_lock_102(struct mutex *ldv_func_arg1);


#line 89 
static void ldv_mutex_lock_104(struct mutex *ldv_func_arg1);


#line 93 
static void ldv_mutex_lock_106(struct mutex *ldv_func_arg1);


#line 97 
static void ldv_mutex_lock_108(struct mutex *ldv_func_arg1);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_75_0(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_77_0(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_79_0(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_81(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_83(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_85_0(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_87(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1);


#line 225 
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1);


#line 229 
static void ldv_mutex_unlock_95(struct mutex *ldv_func_arg1);


#line 233 
static void ldv_mutex_unlock_97(struct mutex *ldv_func_arg1);


#line 237 
static void ldv_mutex_unlock_101(struct mutex *ldv_func_arg1);


#line 241 
static void ldv_mutex_unlock_103(struct mutex *ldv_func_arg1);


#line 245 
static void ldv_mutex_unlock_105(struct mutex *ldv_func_arg1);


#line 249 
static void ldv_mutex_unlock_107(struct mutex *ldv_func_arg1);


#line 253 
static void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1);


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
static bool ldv_queue_work_98(struct workqueue_struct *wq, struct work_struct *work);


#line 494 
static bool ldv_queue_work_99(struct workqueue_struct *wq, struct work_struct *work);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_0(size_t size, gfp_t flags);


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_wakeup.h"
__inline static bool device_can_wakeup(struct device *dev)
{
  bool __retres;
  
#line 83 
  __retres = (_Bool)((int)dev->power.can_wakeup != 0);
  
#line 83 
  return __retres;
}


#line 104 
int device_set_wakeup_enable(struct device *, bool);


#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static enum nl80211_channel_type cfg80211_get_chandef_type(struct cfg80211_chan_def const *chandef)
{
  enum nl80211_channel_type __retres;
  
#line 413 
  switch ((unsigned int)chandef->width) {
    case (unsigned int)0: 
#line 414 
    ;
    
#line 415 
    __retres = NL80211_CHAN_NO_HT;
    
#line 415 
    goto return_label;
    case (unsigned int)1: 
#line 416 
    ;
    
#line 417 
    __retres = NL80211_CHAN_HT20;
    
#line 417 
    goto return_label;
    case (unsigned int)2: 
#line 418 
    ;
    
#line 419 
    if (chandef->center_freq1 > (unsigned int)(chandef->chan)->center_freq) {
      
#line 420 
      __retres = NL80211_CHAN_HT40PLUS;
      
#line 420 
      goto return_label;
    }
    else ;
    
#line 421 
    __retres = NL80211_CHAN_HT40MINUS;
    
#line 421 
    goto return_label;
    default: 
#line 422 
    ;
    {
      
#line 423 
      int __ret_warn_on = 1;
      
#line 423 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 423 
                                            warn_slowpath_null("include/net/cfg80211.h",423); else ;
      
#line 423 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 424 
    __retres = NL80211_CHAN_NO_HT;
    
#line 424 
    goto return_label;
  }
  return_label: 
#line 413 
                return __retres;
}


#line 2065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  
#line 2068 
  __set_bit((long)flg,(unsigned long volatile *)(& hw->flags));
  
#line 2069 
  return;
}


#line 3520 
static struct ieee80211_hw *ldv_ieee80211_alloc_hw_110(size_t priv_data_len, struct ieee80211_ops const *ops);


#line 3521 
int ieee80211_register_hw(struct ieee80211_hw *);


#line 3671 
void ieee80211_unregister_hw(struct ieee80211_hw *);


#line 4805 
void ieee80211_sta_block_awake(struct ieee80211_hw *, struct ieee80211_sta *, bool);


#line 4947 
void ieee80211_resume_disconnect(struct ieee80211_vif *);


#line 4988 
void ieee80211_chswitch_done(struct ieee80211_vif *, bool);


#line 5261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static enum nl80211_iftype ieee80211_iftype_p2p(enum nl80211_iftype type, bool p2p)
{
  enum nl80211_iftype __retres;
  
#line 5263 
  if ((int)p2p != 0) {
    
#line 5264 
    switch ((unsigned int)type) {
      case (unsigned int)2: 
#line 5265 
      ;
      
#line 5266 
      __retres = NL80211_IFTYPE_P2P_CLIENT;
      
#line 5266 
      goto return_label;
      case (unsigned int)3: 
#line 5267 
      ;
      
#line 5268 
      __retres = NL80211_IFTYPE_P2P_GO;
      
#line 5268 
      goto return_label;
      default: 
#line 5269 
      ;
      
#line 5270 
      goto ldv_50175;
    }
    ldv_50175: 
#line 5272 
    ;
  }
  else ;
  
#line 5273 
  __retres = type;
  return_label: 
#line 5273 
                return __retres;
}


#line 5277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static enum nl80211_iftype ieee80211_vif_type_p2p(struct ieee80211_vif *vif)
{
  enum nl80211_iftype tmp;
  
#line 5279 
  tmp = ieee80211_iftype_p2p(vif->type,(_Bool)((bool)((int)vif->p2p) != 0));
  
#line 5279 
  return tmp;
}


#line 5308 
void ieee80211_report_wowlan_wakeup(struct ieee80211_vif *, struct cfg80211_wowlan_wakeup *, gfp_t);


#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_d3_suspend(struct iwl_trans *trans, bool test)
{
  
#line 732 
  __might_sleep("drivers/net/wireless/iwlwifi/dvm/../iwl-trans.h",732,0);
  
#line 733 
  (*((trans->ops)->d3_suspend))(trans,(_Bool)((bool)((int)test) != 0));
  
#line 734 
  return;
}


#line 736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static int iwl_trans_d3_resume(struct iwl_trans *trans, enum iwl_d3_status *status, bool test)
{
  int tmp;
  
#line 740 
  __might_sleep("drivers/net/wireless/iwlwifi/dvm/../iwl-trans.h",740,0);
  
#line 741 
  tmp = (*((trans->ops)->d3_resume))(trans,status,(_Bool)((bool)((int)test) != 0));
  
#line 741 
  return tmp;
}


#line 910 
void __compiletime_assert_910(void);


#line 906  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static int iwl_trans_wait_tx_queue_empty(struct iwl_trans *trans, u32 txqs)
{
  int tmp;
  
#line 909 
  if ((long)(trans->state != (unsigned int)IWL_TRANS_FW_ALIVE) != 0L) {
    {
      
#line 910 
      bool __cond = (_Bool)((int)*("%s bad state = %d\n" + 17UL) != 10);
      
#line 910 
      if ((int)__cond != 0) 
#line 910 
                            __compiletime_assert_910(); else ;
    }
    
#line 910 
    __iwl_err(trans->dev,(_Bool)0,(_Bool)0,"%s bad state = %d\n","iwl_trans_wait_tx_queue_empty",(unsigned int)trans->state);
  }
  else ;
  
#line 912 
  tmp = (*((trans->ops)->wait_tx_queue_empty))(trans,txqs);
  
#line 912 
  return tmp;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_iowrite32_2(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 69 
  tmp_4 = static_key_false_2(& __tracepoint_iwlwifi_dev_iowrite32.key);
  
#line 69 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 69 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_1848 __u;
          
#line 69 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u.__c),8);
          
#line 69 
          tmp = __u.__val;
        }
        
#line 69 
        struct tracepoint_func *_________p1 = tmp;
        
#line 69 
        tmp_0 = _________p1;
      }
      
#line 69 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 69 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 69 
        if (tmp_1 != 0) {
          
#line 69 
          if (! __warned) {
            int tmp_2;
            
#line 69 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 69 
            if (tmp_2 == 0) {
              
#line 69 
              __warned = (_Bool)1;
              
#line 69 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 69 
      tmp_3 = ________p1;
    }
    
#line 69 
    it_func_ptr = tmp_3;
    
#line 69 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51686: 
#line 71 
      ;
      
#line 69 
      it_func = it_func_ptr->func;
      
#line 69 
      __data = it_func_ptr->data;
      
#line 69 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 69 
      it_func_ptr += 1;
      
#line 69 
      ;
      
#line 69 
      if (it_func_ptr->func != (void *)0) 
#line 71 
                                          goto ldv_51686; else 
#line 74 
                                                               goto ldv_51687;
      ldv_51687: 
#line 75 
      ;
    }
    else ;
    
#line 69 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 69 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_1850 __u_0;
        
#line 69 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u_0.__c),8);
        
#line 69 
        tmp_5 = __u_0.__val;
      }
      
#line 69 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 69 
      tmp_6 = _________p1_0;
    }
    
#line 69 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 69 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 69 
      if (tmp_7 != 0) {
        
#line 69 
        if (! __warned_0) {
          int tmp_8;
          
#line 69 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 69 
          if (tmp_8 == 0) {
            
#line 69 
            __warned_0 = (_Bool)1;
            
#line 69 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 69 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 69 
  rcu_read_unlock_sched_notrace();
  
#line 71 
  return;
}


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static void iwl_write32_2(struct iwl_trans *trans, u32 ofs, u32 val)
{
  
#line 43 
  trace_iwlwifi_dev_iowrite32_2((struct device const *)trans->dev,ofs,val);
  
#line 44 
  iwl_trans_write32(trans,ofs,val);
  
#line 45 
  return;
}


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-notif-wait.h"
void iwl_init_notification_wait(struct iwl_notif_wait_data *, struct iwl_notification_wait *, u8 const *, int, bool (*)(struct iwl_notif_wait_data *, struct iwl_rx_packet *, void *), void *);


#line 130 
int iwl_wait_notification(struct iwl_notif_wait_data *, struct iwl_notification_wait *, unsigned long);


#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
void iwl_rs_rate_init(struct iwl_priv *priv, struct ieee80211_sta *sta, u8 sta_id);


#line 916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
__inline static struct iwl_rxon_context *iwl_rxon_ctx_from_vif(struct ieee80211_vif *vif)
{
  struct iwl_rxon_context *__retres;
  
#line 918 
  struct iwl_vif_priv *vif_priv = (struct iwl_vif_priv *)(& vif->drv_priv);
  
#line 920 
  __retres = vif_priv->ctx;
  
#line 920 
  return __retres;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
struct ieee80211_ops const iwlagn_hw_ops;


#line 150 
int iwlagn_mac_config(struct ieee80211_hw *hw, u32 changed);


#line 151 
void iwlagn_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *bss_conf, u32 changes);


#line 157 
void iwl_set_rxon_ht(struct iwl_priv *priv, struct iwl_ht_config *ht_conf);


#line 158 
void iwl_set_rxon_channel(struct iwl_priv *priv, struct ieee80211_channel *ch, struct iwl_rxon_context *ctx);


#line 160 
void iwl_set_flags_for_band(struct iwl_priv *priv, struct iwl_rxon_context *ctx, enum ieee80211_band band, struct ieee80211_vif *vif);


#line 169 
int iwl_run_init_ucode(struct iwl_priv *priv);


#line 170 
int iwl_load_ucode_wait_alive(struct iwl_priv *priv, enum iwl_ucode_type ucode_type);


#line 183 
int iwlagn_txfifo_flush(struct iwl_priv *priv, u32 scd_q_msk);


#line 198 
int iwlagn_suspend(struct iwl_priv *priv, struct cfg80211_wowlan *wowlan);


#line 208 
int iwlagn_tx_skb(struct iwl_priv *priv, struct ieee80211_sta *sta, struct sk_buff *skb);


#line 211 
int iwlagn_tx_agg_start(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta, u16 tid, u16 *ssn);


#line 213 
int iwlagn_tx_agg_oper(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta, u16 tid, u8 buf_size);


#line 215 
int iwlagn_tx_agg_stop(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta, u16 tid);


#line 217 
int iwlagn_tx_agg_flush(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta, u16 tid);


#line 256 
void iwl_force_scan_end(struct iwl_priv *priv);


#line 261 
int iwl_scan_initiate(struct iwl_priv *priv, struct ieee80211_vif *vif, enum iwl_scan_type scan_type, enum ieee80211_band band);


#line 321 
int iwl_send_add_sta(struct iwl_priv *priv, struct iwl_addsta_cmd *sta, u8 flags);


#line 323 
int iwl_add_station_common(struct iwl_priv *priv, struct iwl_rxon_context *ctx, u8 const *addr, bool is_ap, struct ieee80211_sta *sta, u8 *sta_id_r);


#line 326 
int iwl_remove_station(struct iwl_priv *priv, u8 const sta_id, u8 const *addr);


#line 328 
void iwl_deactivate_station(struct iwl_priv *priv, u8 const sta_id, u8 const *addr);


#line 333 
int iwl_send_lq_cmd(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct iwl_link_quality_cmd *lq, u8 flags, bool init);


#line 337 
int iwl_sta_update_ht(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_sta *sta);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static int iwl_sta_id(struct ieee80211_sta *sta)
{
  int __retres;
  int tmp;
  {
    
#line 346 
    int __ret_warn_on = sta == (struct ieee80211_sta *)0;
    
#line 346 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 346 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h",346); else ;
    
#line 346 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 346 
  if ((long)tmp != 0L) {
    
#line 347 
    __retres = 255;
    
#line 347 
    goto return_label;
  }
  else ;
  
#line 349 
  __retres = (int)((struct iwl_station_priv *)(& sta->drv_priv))->sta_id;
  return_label: 
#line 349 
                return __retres;
}


#line 352 
int iwlagn_alloc_bcast_station(struct iwl_priv *priv, struct iwl_rxon_context *ctx);


#line 356 
int iwl_remove_default_wep_key(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_key_conf *keyconf);


#line 359 
int iwl_set_default_wep_key(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_key_conf *keyconf);


#line 364 
int iwl_set_dynamic_key(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_key_conf *keyconf, struct ieee80211_sta *sta);


#line 367 
int iwl_remove_dynamic_key(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_key_conf *keyconf, struct ieee80211_sta *sta);


#line 370 
void iwl_update_tkip_key(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_key_conf *keyconf, struct ieee80211_sta *sta, u32 iv32, u16 *phase1key);


#line 375 
int iwl_sta_rx_agg_start(struct iwl_priv *priv, struct ieee80211_sta *sta, int tid, u16 ssn);


#line 377 
int iwl_sta_rx_agg_stop(struct iwl_priv *priv, struct ieee80211_sta *sta, int tid);


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static struct ieee80211_iface_limit const iwlagn_sta_ap_limits[2U] = {{.max = (unsigned short)1U, .types = (unsigned short)4U}, {.max = (unsigned short)1U, .types = (unsigned short)8U}};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static struct ieee80211_iface_limit const iwlagn_2sta_limits[1U] = {{.max = (unsigned short)2U, .types = (unsigned short)4U}};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static struct ieee80211_iface_combination const iwlagn_iface_combinations_dualmode[2U] = {{.limits = (struct ieee80211_iface_limit const *)(& iwlagn_sta_ap_limits), .num_different_channels = 1U, .max_interfaces = (unsigned short)2U, .n_limits = (unsigned char)2U, .beacon_int_infra_match = (_Bool)1, .radar_detect_widths = (unsigned char)0, .radar_detect_regions = (unsigned char)0}, {.limits = (struct ieee80211_iface_limit const *)(& iwlagn_2sta_limits), .num_different_channels = 1U, .max_interfaces = (unsigned short)2U, .n_limits = (unsigned char)1U, .beacon_int_infra_match = (_Bool)0, .radar_detect_widths = (unsigned char)0, .radar_detect_regions = (unsigned char)0}};

#line 149 
void __compiletime_assert_149(void);


#line 215 
void __compiletime_assert_215(void);


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
int iwlagn_mac_setup_register(struct iwl_priv *priv, struct iwl_ucode_capabilities const *capa)
{
  int __retres;
  int ret;
  struct iwl_rxon_context *ctx;
  
#line 101 
  struct ieee80211_hw *hw = priv->hw;
  
#line 104 
  hw->rate_control_algorithm = "iwl-agn-rs";
  
#line 107 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_DBM);
  
#line 108 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_AMPDU_AGGREGATION);
  
#line 109 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC);
  
#line 110 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SPECTRUM_MGMT);
  
#line 111 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_REPORTS_TX_ACK_STATUS);
  
#line 112 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_QUEUE_CONTROL);
  
#line 113 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_PS);
  
#line 114 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_DYNAMIC_PS);
  
#line 115 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORT_FAST_XMIT);
  
#line 116 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_WANT_MONITOR_VIF);
  
#line 118 
  hw->offchannel_tx_hw_queue = (unsigned char)10U;
  
#line 119 
  hw->radiotap_mcs_details = (unsigned char)((unsigned int)hw->radiotap_mcs_details | 8U);
  
#line 128 
  if ((int)(priv->nvm_data)->sku_cap_11n_enable != 0) 
#line 129 
                                                      (hw->wiphy)->features |= 50331648U; else ;
  
#line 137 
  if (((priv->fw)->ucode_capa.flags & 4U) != 0U && iwlwifi_mod_params.sw_crypto == 0) 
    
#line 139 
    _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_MFP_CAPABLE); else ;
  
#line 141 
  hw->sta_data_size = 1904;
  
#line 142 
  hw->vif_data_size = 16;
  
#line 144 
  ctx = & priv->contexts[0];
  
#line 144 
  goto ldv_55492;
  ldv_55491: 
#line 145 
  ;
  
#line 144 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    
#line 145 
    (hw->wiphy)->interface_modes = (unsigned short)((int)(hw->wiphy)->interface_modes | (int)((unsigned short)ctx->interface_modes));
    
#line 146 
    (hw->wiphy)->interface_modes = (unsigned short)((int)(hw->wiphy)->interface_modes | (int)((unsigned short)ctx->exclusive_interface_modes));
  }
  else ;
  
#line 144 
  ctx += 1;
  ldv_55492: 
#line 145 
  ;
  
#line 144 
  if (& priv->contexts[2] > ctx) 
#line 146 
                                 goto ldv_55491; else 
#line 149 
                                                      goto ldv_55493;
  ldv_55493: 
#line 150 
  ;
  {
    
#line 149 
    bool __cond = (_Bool)0;
    
#line 149 
    if ((int)__cond != 0) 
#line 149 
                          __compiletime_assert_149(); else ;
  }
  
#line 151 
  if (((unsigned long)(hw->wiphy)->interface_modes & 8UL) != 0UL) {
    
#line 152 
    (hw->wiphy)->iface_combinations = (struct ieee80211_iface_combination const *)(& iwlagn_iface_combinations_dualmode);
    
#line 154 
    (hw->wiphy)->n_iface_combinations = 2;
  }
  else ;
  
#line 158 
  (hw->wiphy)->flags |= 256U;
  
#line 159 
  (hw->wiphy)->regulatory_flags |= 5U;
  
#line 163 
  if (((priv->fw)->img[2].sec[0].len != 0U && ((priv->trans)->ops)->d3_suspend != (void (*)(struct iwl_trans *, bool ))0) && ((priv->trans)->ops)->d3_resume != (int (*)(struct iwl_trans *, enum iwl_d3_status *, bool ))0) {
    bool tmp;
    
#line 165 
    tmp = device_can_wakeup((priv->trans)->dev);
    
#line 165 
    if ((int)tmp != 0) {
      
#line 167 
      priv->wowlan_support.flags = 166U;
      
#line 171 
      if (iwlwifi_mod_params.sw_crypto == 0) 
#line 172 
                                             priv->wowlan_support.flags |= 24U; else ;
      
#line 176 
      priv->wowlan_support.n_patterns = 20;
      
#line 177 
      priv->wowlan_support.pattern_min_len = 16;
      
#line 179 
      priv->wowlan_support.pattern_max_len = 128;
      
#line 181 
      (hw->wiphy)->wowlan = (struct wiphy_wowlan_support const *)(& priv->wowlan_support);
    }
    else ;
  }
  else ;
  
#line 185 
  if ((int)iwlwifi_mod_params.power_save != 0) 
#line 186 
                                               (hw->wiphy)->flags |= 16U; else 
                                                                    
#line 188 
                                                                    (hw->wiphy)->flags &= 4294967279U;
  
#line 190 
  (hw->wiphy)->max_scan_ssids = (unsigned char)20U;
  
#line 192 
  (hw->wiphy)->max_scan_ie_len = (unsigned short)((unsigned int)((unsigned short)capa->max_probe_length) + 65478U);
  
#line 198 
  hw->queues = (unsigned short)11U;
  
#line 200 
  hw->max_listen_interval = (unsigned short)10U;
  
#line 202 
  if ((priv->nvm_data)->bands[0].n_channels != 0) 
#line 203 
                                                  ((priv->hw)->wiphy)->bands[0] = & (priv->nvm_data)->bands[0]; else ;
  
#line 205 
  if ((priv->nvm_data)->bands[1].n_channels != 0) 
#line 206 
                                                  ((priv->hw)->wiphy)->bands[1] = & (priv->nvm_data)->bands[1]; else ;
  
#line 209 
  (hw->wiphy)->hw_version = (priv->trans)->hw_id;
  
#line 211 
  iwl_leds_init(priv);
  
#line 213 
  ret = ieee80211_register_hw(priv->hw);
  
#line 214 
  if (ret != 0) {
    {
      
#line 215 
      bool __cond_0 = (_Bool)((int)*("Failed to register hw (error %d)\n" + 32UL) != 10);
      
#line 215 
      if ((int)__cond_0 != 0) 
#line 215 
                              __compiletime_assert_215(); else ;
    }
    
#line 215 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Failed to register hw (error %d)\n",ret);
    
#line 216 
    iwl_leds_exit(priv);
    
#line 217 
    __retres = ret;
    
#line 217 
    goto return_label;
  }
  else ;
  
#line 219 
  priv->mac80211_registered = (unsigned char)1U;
  
#line 221 
  __retres = 0;
  return_label: 
#line 221 
                return __retres;
}


#line 224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
void iwlagn_mac_unregister(struct iwl_priv *priv)
{
  
#line 226 
  if ((unsigned int)priv->mac80211_registered == 0U) 
#line 227 
                                                     goto return_label; else ;
  
#line 228 
  iwl_leds_exit(priv);
  
#line 229 
  ieee80211_unregister_hw(priv->hw);
  
#line 230 
  priv->mac80211_registered = (unsigned char)0U;
  return_label: 
#line 231 
                return;
}


#line 241 
void __compiletime_assert_241(void);


#line 255 
void __compiletime_assert_255(void);


#line 261 
void __compiletime_assert_261(void);


#line 275 
void __compiletime_assert_275(void);


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int __iwl_up(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_rxon_context *ctx;
  int ret;
  int tmp_1;
  {
    int tmp_0;
    
#line 238 
    if (debug_locks != 0) {
      int tmp;
      
#line 238 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 238 
      if (tmp == 0) 
#line 238 
                    tmp_0 = 1; else 
#line 238 
                                    tmp_0 = 0;
    }
    else 
#line 238 
         tmp_0 = 0;
    
#line 238 
    int __ret_warn_on = tmp_0;
    
#line 238 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 238 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",238); else ;
    
#line 238 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 240 
  tmp_1 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 240 
  if (tmp_1 != 0) {
    {
      
#line 241 
      bool __cond = (_Bool)((int)*("Exit pending; will not bring the NIC up\n" + 39UL) != 10);
      
#line 241 
      if ((int)__cond != 0) 
#line 241 
                            __compiletime_assert_241(); else ;
    }
    
#line 241 
    __iwl_warn(priv->dev,"Exit pending; will not bring the NIC up\n");
    
#line 242 
    __retres = -5;
    
#line 242 
    goto return_label;
  }
  else ;
  
#line 245 
  ctx = & priv->contexts[0];
  
#line 245 
  goto ldv_55520;
  ldv_55519: 
#line 246 
  ;
  
#line 245 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    
#line 246 
    ret = iwlagn_alloc_bcast_station(priv,ctx);
    
#line 247 
    if (ret != 0) {
      
#line 248 
      iwl_dealloc_bcast_stations(priv);
      
#line 249 
      __retres = ret;
      
#line 249 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 245 
  ctx += 1;
  ldv_55520: 
#line 246 
  ;
  
#line 245 
  if (& priv->contexts[2] > ctx) 
#line 247 
                                 goto ldv_55519; else 
#line 250 
                                                      goto ldv_55521;
  ldv_55521: 
#line 251 
  ;
  
#line 253 
  ret = iwl_run_init_ucode(priv);
  
#line 254 
  if (ret != 0) {
    {
      
#line 255 
      bool __cond_0 = (_Bool)((int)*("Failed to run INIT ucode: %d\n" + 28UL) != 10);
      
#line 255 
      if ((int)__cond_0 != 0) 
#line 255 
                              __compiletime_assert_255(); else ;
    }
    
#line 255 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Failed to run INIT ucode: %d\n",ret);
    
#line 256 
    goto error;
  }
  else ;
  
#line 259 
  ret = iwl_load_ucode_wait_alive(priv,(enum iwl_ucode_type)IWL_UCODE_REGULAR);
  
#line 260 
  if (ret != 0) {
    {
      
#line 261 
      bool __cond_1 = (_Bool)((int)*("Failed to start RT ucode: %d\n" + 28UL) != 10);
      
#line 261 
      if ((int)__cond_1 != 0) 
#line 261 
                              __compiletime_assert_261(); else ;
    }
    
#line 261 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Failed to start RT ucode: %d\n",ret);
    
#line 262 
    goto error;
  }
  else ;
  
#line 265 
  ret = iwl_alive_start(priv);
  
#line 266 
  if (ret != 0) 
#line 267 
                goto error; else ;
  
#line 268 
  __retres = 0;
  
#line 268 
  goto return_label;
  error: 
#line 270 
  ;
  
#line 271 
  set_bit(5L,(unsigned long volatile *)(& priv->status));
  
#line 272 
  iwl_down(priv);
  
#line 273 
  set_bit(5L,(unsigned long volatile *)(& priv->status));
  {
    
#line 275 
    bool __cond_2 = (_Bool)((int)*("Unable to initialize device.\n" + 28UL) != 10);
    
#line 275 
    if ((int)__cond_2 != 0) 
#line 275 
                            __compiletime_assert_275(); else ;
  }
  
#line 275 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to initialize device.\n");
  
#line 276 
  __retres = ret;
  return_label: 
#line 276 
                return __retres;
}


#line 284 
void __compiletime_assert_284(void);


#line 293 
void __compiletime_assert_293(void);


#line 302 
void __compiletime_assert_302(void);


#line 279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_start(struct ieee80211_hw *hw)
{
  int __retres;
  int ret;
  int tmp_0;
  
#line 281 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  {
    
#line 284 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 284 
    if ((int)__cond != 0) 
#line 284 
                          __compiletime_assert_284(); else ;
  }
  
#line 284 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_start","enter\n");
  
#line 287 
  ldv_mutex_lock_74_0(& priv->mutex);
  
#line 288 
  ret = __iwl_up(priv);
  
#line 289 
  ldv_mutex_unlock_75_0(& priv->mutex);
  
#line 290 
  if (ret != 0) {
    
#line 291 
    __retres = ret;
    
#line 291 
    goto return_label;
  }
  else ;
  {
    
#line 293 
    bool __cond_0 = (_Bool)((int)*("Start UP work done.\n" + 19UL) != 10);
    
#line 293 
    if ((int)__cond_0 != 0) 
#line 293 
                            __compiletime_assert_293(); else ;
  }
  
#line 293 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_mac_start","Start UP work done.\n");
  {
    int tmp;
    
#line 296 
    tmp = constant_test_bit(3L,(unsigned long const volatile *)(& priv->status));
    
#line 296 
    int __ret_warn_on = tmp == 0;
    
#line 296 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 296 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",296); else ;
    
#line 296 
    tmp_0 = (long)(__ret_warn_on != 0);
  }
  
#line 296 
  if ((long)tmp_0 != 0L) 
#line 297 
                         ret = -5; else ;
  
#line 299 
  iwlagn_led_enable(priv);
  
#line 301 
  priv->is_open = (unsigned char)1U;
  {
    
#line 302 
    bool __cond_1 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 302 
    if ((int)__cond_1 != 0) 
#line 302 
                            __compiletime_assert_302(); else ;
  }
  
#line 302 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_start","leave\n");
  
#line 303 
  __retres = 0;
  return_label: 
#line 303 
                return __retres;
}


#line 325 
void __compiletime_assert_325(void);


#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_stop(struct ieee80211_hw *hw)
{
  
#line 308 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  {
    
#line 310 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 310 
    if ((int)__cond != 0) 
#line 310 
                          __compiletime_assert_310(); else ;
  }
  
#line 310 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_stop","enter\n");
  
#line 312 
  if ((unsigned int)priv->is_open == 0U) 
#line 313 
                                         goto return_label; else ;
  
#line 315 
  priv->is_open = (unsigned char)0U;
  
#line 317 
  ldv_mutex_lock_76_0(& priv->mutex);
  
#line 318 
  iwl_down(priv);
  
#line 319 
  ldv_mutex_unlock_77_0(& priv->mutex);
  
#line 321 
  iwl_cancel_deferred_work(priv);
  
#line 323 
  flush_workqueue(priv->workqueue);
  {
    
#line 325 
    bool __cond_0 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 325 
    if ((int)__cond_0 != 0) 
#line 325 
                            __compiletime_assert_325(); else ;
  }
  
#line 325 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_stop","leave\n");
  return_label: 
#line 326 
                return;
}


#line 337 
void __compiletime_assert_337(void);


#line 351 
void __compiletime_assert_351(void);


#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_set_rekey_data(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct cfg80211_gtk_rekey_data *data)
{
  
#line 332 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 334 
  if (iwlwifi_mod_params.sw_crypto != 0) 
#line 335 
                                         goto return_label; else ;
  {
    
#line 337 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 337 
    if ((int)__cond != 0) 
#line 337 
                          __compiletime_assert_337(); else ;
  }
  
#line 337 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_set_rekey_data","enter\n");
  
#line 338 
  ldv_mutex_lock_78_0(& priv->mutex);
  
#line 340 
  if (priv->contexts[0].vif != vif) 
#line 341 
                                    goto out; else ;
  
#line 343 
  memcpy((void *)(& priv->kek),(void const *)data->kek,16UL);
  
#line 344 
  memcpy((void *)(& priv->kck),(void const *)data->kck,16UL);
  
#line 346 
  priv->replay_ctr = __be64_to_cpup((__be64 const *)(& data->replay_ctr));
  
#line 347 
  priv->have_rekey_data = (_Bool)1;
  out: 
#line 349 
  ;
  
#line 350 
  ldv_mutex_unlock_79_0(& priv->mutex);
  {
    
#line 351 
    bool __cond_0 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 351 
    if ((int)__cond_0 != 0) 
#line 351 
                            __compiletime_assert_351(); else ;
  }
  
#line 351 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_set_rekey_data","leave\n");
  return_label: 
#line 352 
                return;
}


#line 366 
void __compiletime_assert_366(void);


#line 394 
void __compiletime_assert_394(void);


#line 356  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_suspend(struct ieee80211_hw *hw, struct cfg80211_wowlan *wowlan)
{
  int __retres;
  int ret;
  int tmp;
  
#line 359 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 360 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  {
    
#line 363 
    int __ret_warn_on = wowlan == (struct cfg80211_wowlan *)0;
    
#line 363 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 363 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",363); else ;
    
#line 363 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 363 
  if ((long)tmp != 0L) {
    
#line 364 
    __retres = -22;
    
#line 364 
    goto return_label;
  }
  else ;
  {
    
#line 366 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 366 
    if ((int)__cond != 0) 
#line 366 
                          __compiletime_assert_366(); else ;
  }
  
#line 366 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_suspend","enter\n");
  
#line 367 
  ldv_mutex_lock_80(& priv->mutex);
  
#line 370 
  if (ctx->vif == (struct ieee80211_vif *)0 || (ctx->vif)->type != (unsigned int)NL80211_IFTYPE_STATION) 
    
#line 370 
    goto _LOR;
  else {
    int tmp_0;
    
#line 370 
    tmp_0 = iwl_is_associated_ctx(ctx);
    
#line 370 
    if (tmp_0 == 0) {
      _LOR: {
              
#line 372 
              ret = 1;
              
#line 373 
              goto out;
            }
    }
    else ;
  }
  
#line 376 
  ret = iwlagn_suspend(priv,wowlan);
  
#line 377 
  if (ret != 0) 
#line 378 
                goto error; else ;
  
#line 381 
  iwl_write32_2(priv->trans,88U,32U);
  
#line 384 
  iwl_trans_d3_suspend(priv->trans,(_Bool)0);
  
#line 386 
  goto out;
  error: 
#line 388 
  ;
  
#line 389 
  priv->wowlan = (_Bool)0;
  
#line 390 
  iwlagn_prepare_restart(priv);
  
#line 391 
  ieee80211_restart_hw(priv->hw);
  out: 
#line 392 
  ;
  
#line 393 
  ldv_mutex_unlock_81(& priv->mutex);
  {
    
#line 394 
    bool __cond_0 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 394 
    if ((int)__cond_0 != 0) 
#line 394 
                            __compiletime_assert_394(); else ;
  }
  
#line 394 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_suspend","leave\n");
  
#line 396 
  __retres = ret;
  return_label: 
#line 396 
                return __retres;
}


#line 412 
void __compiletime_assert_412(void);


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static bool iwl_resume_status_fn(struct iwl_notif_wait_data *notif_wait, struct iwl_rx_packet *pkt, void *data)
{
  bool __retres;
  u32 tmp;
  
#line 408 
  struct iwl_resume_data *resume_data = (struct iwl_resume_data *)data;
  
#line 409 
  struct iwl_priv *priv = resume_data->priv;
  
#line 411 
  tmp = iwl_rx_packet_payload_len((struct iwl_rx_packet const *)pkt);
  
#line 411 
  if (tmp != 304U) {
    {
      
#line 412 
      bool __cond = (_Bool)((int)*("rx wrong size data\n" + 18UL) != 10);
      
#line 412 
      if ((int)__cond != 0) 
#line 412 
                            __compiletime_assert_412(); else ;
    }
    
#line 412 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"rx wrong size data\n");
    
#line 413 
    __retres = (_Bool)1;
    
#line 413 
    goto return_label;
  }
  else ;
  
#line 415 
  memcpy((void *)resume_data->cmd,(void const *)(& pkt->data),304UL);
  
#line 416 
  resume_data->valid = (_Bool)1;
  
#line 418 
  __retres = (_Bool)1;
  return_label: 
#line 418 
                return __retres;
}


#line 451 
void __compiletime_assert_451(void);


#line 462 
void __compiletime_assert_462(void);


#line 472 
void __compiletime_assert_472(void);


#line 476 
void __compiletime_assert_477(void);


#line 480 
void __compiletime_assert_481(void);


#line 527 
void __compiletime_assert_527(void);


#line 561 
void __compiletime_assert_561(void);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_resume(struct ieee80211_hw *hw)
{
  int __retres;
  struct ieee80211_vif *vif;
  u32 base;
  int ret;
  enum iwl_d3_status d3_status;
  struct error_table_start err_info;
  struct iwl_notification_wait status_wait;
  struct fw_img const *img;
  int tmp;
  
#line 423 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 424 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 435 
  u8 const status_cmd[1U] = {(unsigned char)229U};
  
#line 438 
  struct iwlagn_wowlan_status status_data = {.replay_ctr = 0ULL, .rekey_status = 0U, .wakeup_reason = 0U, .pattern_number = (unsigned char)0, .reserved1 = (unsigned char)0, .qos_seq_ctr = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}, .non_qos_seq_ctr = (unsigned short)0, .reserved2 = (unsigned short)0, .tsc_rsc = {.tkip = {.unicast_rsc = {{.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}}, .multicast_rsc = {{.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}, {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}}, .tsc = {.iv16 = (unsigned short)0, .pad = (unsigned short)0, .iv32 = 0U}}}, .reserved3 = (unsigned short)0};
  
#line 439 
  struct iwl_resume_data resume_data = {.priv = priv, .cmd = & status_data, .valid = (_Bool)0};
  
#line 444 
  struct cfg80211_wowlan_wakeup wakeup = {.disconnect = (_Bool)0, .magic_pkt = (_Bool)0, .gtk_rekey_failure = (_Bool)0, .eap_identity_req = (_Bool)0, .four_way_handshake = (_Bool)0, .rfkill_release = (_Bool)0, .packet_80211 = (_Bool)0, .tcp_match = (_Bool)0, .tcp_connlost = (_Bool)0, .tcp_nomoretokens = (_Bool)0, .pattern_idx = -1, .packet_present_len = 0U, .packet_len = 0U, .packet = (void const *)0, .net_detect = (struct cfg80211_wowlan_nd_info *)0};
  {
    
#line 451 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 451 
    if ((int)__cond != 0) 
#line 451 
                          __compiletime_assert_451(); else ;
  }
  
#line 451 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_resume","enter\n");
  
#line 452 
  ldv_mutex_lock_82(& priv->mutex);
  
#line 455 
  vif = ctx->vif;
  
#line 457 
  ret = iwl_trans_d3_resume(priv->trans,& d3_status,(_Bool)0);
  
#line 458 
  if (ret != 0) 
#line 459 
                goto out_unlock; else ;
  
#line 461 
  if (d3_status != (unsigned int)IWL_D3_STATUS_ALIVE) {
    {
      
#line 462 
      bool __cond_0 = (_Bool)((int)*("Device was reset during suspend\n" + 31UL) != 10);
      
#line 462 
      if ((int)__cond_0 != 0) 
#line 462 
                              __compiletime_assert_462(); else ;
    }
    
#line 462 
    __iwl_info(priv->dev,"Device was reset during suspend\n");
    
#line 463 
    goto out_unlock;
  }
  else ;
  
#line 467 
  iwl_write32_2(priv->trans,92U,32U);
  
#line 470 
  base = priv->device_pointers.error_event_table;
  
#line 471 
  tmp = iwlagn_hw_valid_rtc_data_addr(base);
  
#line 471 
  if (tmp == 0) {
    {
      
#line 472 
      bool __cond_1 = (_Bool)((int)*("Invalid error table during resume!\n" + 34UL) != 10);
      
#line 472 
      if ((int)__cond_1 != 0) 
#line 472 
                              __compiletime_assert_472(); else ;
    }
    
#line 472 
    __iwl_warn(priv->dev,"Invalid error table during resume!\n");
    
#line 473 
    goto out_unlock;
  }
  else ;
  {
    
#line 476 
    bool __cond_2 = (_Bool)0;
    
#line 476 
    if ((int)__cond_2 != 0) 
#line 476 
                            __compiletime_assert_477(); else ;
  }
  
#line 476 
  iwl_trans_read_mem(priv->trans,base,(void *)(& err_info),2);
  
#line 479 
  if (err_info.valid != 0U) {
    {
      
#line 480 
      bool __cond_3 = (_Bool)((int)*("error table is valid (%d, 0x%x)\n" + 31UL) != 10);
      
#line 480 
      if ((int)__cond_3 != 0) 
#line 480 
                              __compiletime_assert_481(); else ;
    }
    
#line 480 
    __iwl_info(priv->dev,"error table is valid (%d, 0x%x)\n",err_info.valid,err_info.error_id);
    
#line 482 
    if (err_info.error_id == 135U) {
      
#line 483 
      wakeup.rfkill_release = (_Bool)1;
      
#line 484 
      ieee80211_report_wowlan_wakeup(vif,& wakeup,208U);
    }
    else ;
    
#line 487 
    goto out_unlock;
  }
  else ;
  
#line 491 
  img = & (priv->fw)->img[2];
  
#line 492 
  if (priv->wowlan_sram == (void *)0) 
#line 493 
                                      priv->wowlan_sram = kzalloc_0((unsigned long)img->sec[0].len,208U); else ;
  
#line 497 
  if (priv->wowlan_sram != (void *)0) 
#line 498 
                                      iwl_trans_read_mem(priv->trans,8388608U,priv->wowlan_sram,(int)(img->sec[0].len / 4U)); else ;
  
#line 511 
  iwl_init_notification_wait(& priv->notif_wait,& status_wait,(u8 const *)(& status_cmd),1,& iwl_resume_status_fn,(void *)(& resume_data));
  
#line 515 
  iwl_dvm_send_cmd_pdu(priv,(unsigned char)229,1U,(unsigned short)0,(void const *)0);
  
#line 516 
  iwl_dvm_send_cmd_pdu(priv,(unsigned char)3,1U,(unsigned short)0,(void const *)0);
  
#line 519 
  ret = iwl_wait_notification(& priv->notif_wait,& status_wait,50UL);
  
#line 520 
  if (ret != 0) 
#line 521 
                goto out_unlock; else ;
  
#line 523 
  if ((int)resume_data.valid != 0 && priv->contexts[0].vif != (struct ieee80211_vif *)0) {
    struct cfg80211_wowlan_wakeup *wakeup_report;
    
#line 524 
    u32 reasons = status_data.wakeup_reason;
    {
      
#line 527 
      bool __cond_4 = (_Bool)((int)*("WoWLAN wakeup reason(s): 0x%.8x\n" + 31UL) != 10);
      
#line 527 
      if ((int)__cond_4 != 0) 
#line 527 
                              __compiletime_assert_527(); else ;
    }
    
#line 527 
    __iwl_info(priv->dev,"WoWLAN wakeup reason(s): 0x%.8x\n",reasons);
    
#line 529 
    if (reasons != 0U) {
      
#line 530 
      if ((reasons & 1U) != 0U) 
#line 531 
                                wakeup.magic_pkt = (_Bool)1; else ;
      
#line 532 
      if ((reasons & 2U) != 0U) 
#line 533 
                                wakeup.pattern_idx = (int)status_data.pattern_number; else ;
      
#line 534 
      if ((reasons & 12U) != 0U) 
#line 536 
                                 wakeup.disconnect = (_Bool)1; else ;
      
#line 537 
      if ((reasons & 16U) != 0U) 
#line 538 
                                 wakeup.gtk_rekey_failure = (_Bool)1; else ;
      
#line 539 
      if ((reasons & 32U) != 0U) 
#line 540 
                                 wakeup.eap_identity_req = (_Bool)1; else ;
      
#line 541 
      if ((reasons & 64U) != 0U) 
#line 542 
                                 wakeup.four_way_handshake = (_Bool)1; else ;
      
#line 543 
      wakeup_report = & wakeup;
    }
    else 
#line 545 
         wakeup_report = (struct cfg80211_wowlan_wakeup *)0;
    
#line 548 
    ieee80211_report_wowlan_wakeup(vif,wakeup_report,208U);
  }
  else ;
  
#line 551 
  priv->wowlan = (_Bool)0;
  
#line 553 
  iwlagn_prepare_restart(priv);
  
#line 555 
  memset((void *)(& ctx->active),0,50UL);
  
#line 556 
  iwl_connection_init_rx_config(priv,ctx);
  
#line 557 
  iwlagn_set_rxon_chain(priv,ctx);
  out_unlock: 
#line 559 
  ;
  
#line 560 
  ldv_mutex_unlock_83(& priv->mutex);
  {
    
#line 561 
    bool __cond_5 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 561 
    if ((int)__cond_5 != 0) 
#line 561 
                            __compiletime_assert_561(); else ;
  }
  
#line 561 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_resume","leave\n");
  
#line 563 
  ieee80211_resume_disconnect(vif);
  
#line 565 
  __retres = 1;
  
#line 565 
  return __retres;
}


#line 568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_set_wakeup(struct ieee80211_hw *hw, bool enabled)
{
  
#line 570 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 572 
  device_set_wakeup_enable((priv->trans)->dev,(_Bool)((bool)((int)enabled) != 0));
  
#line 573 
  return;
}


#line 576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control, struct sk_buff *skb)
{
  int tmp;
  
#line 580 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 582 
  tmp = iwlagn_tx_skb(priv,control->sta,skb);
  
#line 582 
  if (tmp != 0) 
#line 583 
                ieee80211_free_txskb(hw,skb); else ;
  
#line 584 
  return;
}


#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_update_tkip_key(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_key_conf *keyconf, struct ieee80211_sta *sta, u32 iv32, u16 *phase1key)
{
  
#line 592 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 594 
  iwl_update_tkip_key(priv,vif,keyconf,sta,iv32,phase1key);
  
#line 595 
  return;
}


#line 608 
void __compiletime_assert_608(void);


#line 646 
void __compiletime_assert_646(void);


#line 680 
void __compiletime_assert_680(void);


#line 688 
void __compiletime_assert_688(void);


#line 695 
void __compiletime_assert_695(void);


#line 597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd, struct ieee80211_vif *vif, struct ieee80211_sta *sta, struct ieee80211_key_conf *key)
{
  int __retres;
  int ret;
  
#line 602 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 603 
  struct iwl_vif_priv *vif_priv = (struct iwl_vif_priv *)(& vif->drv_priv);
  
#line 604 
  struct iwl_rxon_context *ctx = vif_priv->ctx;
  
#line 606 
  bool is_default_wep_key = (_Bool)0;
  {
    
#line 608 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 608 
    if ((int)__cond != 0) 
#line 608 
                          __compiletime_assert_608(); else ;
  }
  
#line 608 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_set_key","enter\n");
  
#line 610 
  if (iwlwifi_mod_params.sw_crypto != 0) {
    {
      
#line 611 
      bool __cond_0 = (_Bool)((int)*("leave - hwcrypto disabled\n" + 25UL) != 10);
      
#line 611 
      if ((int)__cond_0 != 0) 
#line 611 
                              __compiletime_assert_611(); else ;
    }
    
#line 611 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_set_key","leave - hwcrypto disabled\n");
    
#line 612 
    __retres = -95;
    
#line 612 
    goto return_label;
  }
  else ;
  
#line 615 
  switch (key->cipher) {
    case (u32)1027074: 
#line 616 
    ;
    
#line 617 
    key->flags = (unsigned char)((unsigned int)key->flags | 4U);
    case (u32)1027076: 
#line 619 
    ;
    
#line 620 
    key->flags = (unsigned char)((unsigned int)key->flags | 2U);
    
#line 621 
    goto ldv_55716;
    default: 
#line 622 
    ;
    
#line 623 
    goto ldv_55716;
  }
  ldv_55716: 
#line 633 
  ;
  
#line 633 
  if (vif->type == (unsigned int)NL80211_IFTYPE_ADHOC && ((int)key->flags & 8) == 0) {
    
#line 635 
    key->hw_key_idx = (unsigned char)255U;
    
#line 636 
    __retres = 0;
    
#line 636 
    goto return_label;
  }
  else ;
  
#line 640 
  if (cmd == (unsigned int)DISABLE_KEY && (unsigned int)key->hw_key_idx == 255U) {
    
#line 641 
    __retres = 0;
    
#line 641 
    goto return_label;
  }
  else ;
  
#line 643 
  ldv_mutex_lock_84_0(& priv->mutex);
  
#line 644 
  iwl_scan_cancel_timeout(priv,100UL);
  {
    
#line 646 
    bool __cond_1 = (_Bool)0;
    
#line 646 
    if ((int)__cond_1 != 0) 
#line 646 
                            __compiletime_assert_646(); else ;
  }
  
#line 654 
  if ((key->cipher == 1027073U || key->cipher == 1027077U) && sta == (struct ieee80211_sta *)0) 
    
#line 656 
    if (cmd == (unsigned int)SET_KEY) 
#line 657 
                                      is_default_wep_key = (_Bool)((unsigned int)ctx->key_mapping_keys == 0U); else 
                                                                    
#line 659 
                                                                    is_default_wep_key = (_Bool)((unsigned int)key->hw_key_idx == 254U);
  else ;
  
#line 664 
  switch ((unsigned int)cmd) {
    case (unsigned int)0: 
#line 665 
    ;
    
#line 666 
    if ((int)is_default_wep_key != 0) {
      
#line 667 
      ret = iwl_set_default_wep_key(priv,vif_priv->ctx,key);
      
#line 668 
      goto ldv_55723;
    }
    else ;
    
#line 670 
    ret = iwl_set_dynamic_key(priv,vif_priv->ctx,key,sta);
    
#line 671 
    if (ret != 0) {
      
#line 676 
      ret = 0;
      
#line 677 
      key->hw_key_idx = (unsigned char)255U;
    }
    else ;
    {
      
#line 680 
      bool __cond_2 = (_Bool)((int)*("enable hwcrypto key\n" + 19UL) != 10);
      
#line 680 
      if ((int)__cond_2 != 0) 
#line 680 
                              __compiletime_assert_680(); else ;
    }
    
#line 680 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_set_key","enable hwcrypto key\n");
    
#line 681 
    goto ldv_55723;
    case (unsigned int)1: 
#line 682 
    ;
    
#line 683 
    if ((int)is_default_wep_key != 0) 
#line 684 
                                      ret = iwl_remove_default_wep_key(priv,ctx,key); else 
                                                                    
#line 686 
                                                                    ret = iwl_remove_dynamic_key(priv,ctx,key,sta);
    {
      
#line 688 
      bool __cond_3 = (_Bool)((int)*("disable hwcrypto key\n" + 20UL) != 10);
      
#line 688 
      if ((int)__cond_3 != 0) 
#line 688 
                              __compiletime_assert_688(); else ;
    }
    
#line 688 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_set_key","disable hwcrypto key\n");
    
#line 689 
    goto ldv_55723;
    default: 
#line 690 
    ;
    
#line 691 
    ret = -22;
  }
  ldv_55723: 
#line 694 
  ;
  
#line 694 
  ldv_mutex_unlock_85_0(& priv->mutex);
  {
    
#line 695 
    bool __cond_4 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 695 
    if ((int)__cond_4 != 0) 
#line 695 
                            __compiletime_assert_695(); else ;
  }
  
#line 695 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_set_key","leave\n");
  
#line 697 
  __retres = ret;
  return_label: 
#line 697 
                return __retres;
}


#line 700  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
__inline static bool iwl_enable_rx_ampdu(struct iwl_cfg const *cfg)
{
  bool __retres;
  
#line 702 
  if ((iwlwifi_mod_params.disable_11n & 4U) != 0U) {
    
#line 703 
    __retres = (_Bool)0;
    
#line 703 
    goto return_label;
  }
  else ;
  
#line 704 
  __retres = (_Bool)1;
  return_label: 
#line 704 
                return __retres;
}


#line 707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
__inline static bool iwl_enable_tx_ampdu(struct iwl_cfg const *cfg)
{
  bool __retres;
  
#line 709 
  if ((iwlwifi_mod_params.disable_11n & 2U) != 0U) {
    
#line 710 
    __retres = (_Bool)0;
    
#line 710 
    goto return_label;
  }
  else ;
  
#line 711 
  if ((iwlwifi_mod_params.disable_11n & 8U) != 0U) {
    
#line 712 
    __retres = (_Bool)1;
    
#line 712 
    goto return_label;
  }
  else ;
  
#line 715 
  __retres = (_Bool)0;
  return_label: 
#line 715 
                return __retres;
}


#line 728 
void __compiletime_assert_729(void);


#line 734 
void __compiletime_assert_734(void);


#line 741 
void __compiletime_assert_741(void);


#line 745 
void __compiletime_assert_745(void);


#line 753 
void __compiletime_assert_753(void);


#line 758 
void __compiletime_assert_758(void);


#line 762 
void __compiletime_assert_762(void);


#line 766 
void __compiletime_assert_767(void);


#line 785 
void __compiletime_assert_785(void);


#line 718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_ampdu_action(struct ieee80211_hw *hw, struct ieee80211_vif *vif, enum ieee80211_ampdu_mlme_action action, struct ieee80211_sta *sta, u16 tid, u16 *ssn, u8 buf_size)
{
  int __retres;
  
#line 724 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 725 
  int ret = -22;
  
#line 726 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  {
    
#line 728 
    bool __cond = (_Bool)((int)*("A-MPDU action on addr %pM tid %d\n" + 32UL) != 10);
    
#line 728 
    if ((int)__cond != 0) 
#line 728 
                          __compiletime_assert_729(); else ;
  }
  
#line 728 
  __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_mac_ampdu_action","A-MPDU action on addr %pM tid %d\n",(u8 *)(& sta->addr),(int)tid);
  
#line 731 
  if (! (priv->nvm_data)->sku_cap_11n_enable) {
    
#line 732 
    __retres = -13;
    
#line 732 
    goto return_label;
  }
  else ;
  {
    
#line 734 
    bool __cond_0 = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 734 
    if ((int)__cond_0 != 0) 
#line 734 
                            __compiletime_assert_734(); else ;
  }
  
#line 734 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_ampdu_action","enter\n");
  
#line 735 
  ldv_mutex_lock_86(& priv->mutex);
  
#line 737 
  switch ((unsigned int)action) {
    int tmp_0;
    bool tmp;
    int tmp_2;
    bool tmp_1;
    case (unsigned int)0: 
#line 738 
    ;
    
#line 739 
    tmp = iwl_enable_rx_ampdu(priv->cfg);
    
#line 739 
    if (tmp) 
#line 739 
             tmp_0 = 0; else 
#line 739 
                             tmp_0 = 1;
    
#line 739 
    if (tmp_0) 
#line 740 
               goto ldv_55766; else ;
    {
      
#line 741 
      bool __cond_1 = (_Bool)((int)*("start Rx\n" + 8UL) != 10);
      
#line 741 
      if ((int)__cond_1 != 0) 
#line 741 
                              __compiletime_assert_741(); else ;
    }
    
#line 741 
    __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_mac_ampdu_action","start Rx\n");
    
#line 742 
    ret = iwl_sta_rx_agg_start(priv,sta,(int)tid,(unsigned short)((int)*ssn));
    
#line 743 
    goto ldv_55766;
    case (unsigned int)1: 
#line 744 
    ;
    {
      
#line 745 
      bool __cond_2 = (_Bool)((int)*("stop Rx\n" + 7UL) != 10);
      
#line 745 
      if ((int)__cond_2 != 0) 
#line 745 
                              __compiletime_assert_745(); else ;
    }
    
#line 745 
    __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_mac_ampdu_action","stop Rx\n");
    
#line 746 
    ret = iwl_sta_rx_agg_stop(priv,sta,(int)tid);
    
#line 747 
    goto ldv_55766;
    case (unsigned int)2: 
#line 748 
    ;
    
#line 749 
    if (((priv->trans)->ops)->txq_enable == (void (*)(struct iwl_trans *, int , u16 , struct iwl_trans_txq_scd_cfg const *, unsigned int ))0) 
      
#line 750 
      goto ldv_55766; else ;
    
#line 751 
    tmp_1 = iwl_enable_tx_ampdu(priv->cfg);
    
#line 751 
    if (tmp_1) 
#line 751 
               tmp_2 = 0; else 
#line 751 
                               tmp_2 = 1;
    
#line 751 
    if (tmp_2) 
#line 752 
               goto ldv_55766; else ;
    {
      
#line 753 
      bool __cond_3 = (_Bool)((int)*("start Tx\n" + 8UL) != 10);
      
#line 753 
      if ((int)__cond_3 != 0) 
#line 753 
                              __compiletime_assert_753(); else ;
    }
    
#line 753 
    __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_mac_ampdu_action","start Tx\n");
    
#line 754 
    ret = iwlagn_tx_agg_start(priv,vif,sta,(unsigned short)((int)tid),ssn);
    
#line 755 
    goto ldv_55766;
    case (unsigned int)4: 
#line 756 
    ;
    case (unsigned int)5: 
#line 757 
    ;
    {
      
#line 758 
      bool __cond_4 = (_Bool)((int)*("Flush Tx\n" + 8UL) != 10);
      
#line 758 
      if ((int)__cond_4 != 0) 
#line 758 
                              __compiletime_assert_758(); else ;
    }
    
#line 758 
    __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_mac_ampdu_action","Flush Tx\n");
    
#line 759 
    ret = iwlagn_tx_agg_flush(priv,vif,sta,(unsigned short)((int)tid));
    
#line 760 
    goto ldv_55766;
    case (unsigned int)3: 
#line 761 
    ;
    {
      
#line 762 
      bool __cond_5 = (_Bool)((int)*("stop Tx\n" + 7UL) != 10);
      
#line 762 
      if ((int)__cond_5 != 0) 
#line 762 
                              __compiletime_assert_762(); else ;
    }
    
#line 762 
    __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_mac_ampdu_action","stop Tx\n");
    
#line 763 
    ret = iwlagn_tx_agg_stop(priv,vif,sta,(unsigned short)((int)tid));
    
#line 764 
    if (ret == 0 && (unsigned int)priv->agg_tids_count != 0U) {
      
#line 765 
      priv->agg_tids_count = (u8)((int)priv->agg_tids_count - 1);
      {
        
#line 766 
        bool __cond_6 = (_Bool)((int)*("priv->agg_tids_count = %u\n" + 25UL) != 10);
        
#line 766 
        if ((int)__cond_6 != 0) 
#line 766 
                                __compiletime_assert_767(); else ;
      }
      
#line 766 
      __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_mac_ampdu_action","priv->agg_tids_count = %u\n",(int)priv->agg_tids_count);
    }
    else ;
    
#line 769 
    if ((unsigned int)priv->agg_tids_count == 0U && (int)priv->hw_params.use_rts_for_aggregation != 0) {
      struct iwl_rxon_context *tmp_3;
      
#line 774 
      sta_priv->lq_sta.lq.general_params.flags = (unsigned char)((unsigned int)sta_priv->lq_sta.lq.general_params.flags & 254U);
      
#line 776 
      ;
      
#line 776 
      tmp_3 = iwl_rxon_ctx_from_vif(vif);
      
#line 776 
      ;
      
#line 776 
      iwl_send_lq_cmd(priv,tmp_3,& sta_priv->lq_sta.lq,(unsigned char)1,(_Bool)0);
    }
    else ;
    
#line 779 
    goto ldv_55766;
    case (unsigned int)6: 
#line 780 
    ;
    
#line 781 
    ret = iwlagn_tx_agg_oper(priv,vif,sta,(unsigned short)((int)tid),(unsigned char)((int)buf_size));
    
#line 782 
    goto ldv_55766;
  }
  ldv_55766: 
#line 784 
  ;
  
#line 784 
  ldv_mutex_unlock_87(& priv->mutex);
  {
    
#line 785 
    bool __cond_7 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 785 
    if ((int)__cond_7 != 0) 
#line 785 
                            __compiletime_assert_785(); else ;
  }
  
#line 785 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_ampdu_action","leave\n");
  
#line 786 
  __retres = ret;
  return_label: 
#line 786 
                return __retres;
}


#line 800 
void __compiletime_assert_801(void);


#line 811 
void __compiletime_assert_812(void);


#line 789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_sta_add(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  int __retres;
  int ret;
  u8 sta_id;
  
#line 793 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 794 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 795 
  struct iwl_vif_priv *vif_priv = (struct iwl_vif_priv *)(& vif->drv_priv);
  
#line 796 
  bool is_ap = (_Bool)(vif->type == (unsigned int)NL80211_IFTYPE_STATION);
  {
    
#line 800 
    bool __cond = (_Bool)((int)*("proceeding to add station %pM\n" + 29UL) != 10);
    
#line 800 
    if ((int)__cond != 0) 
#line 800 
                          __compiletime_assert_801(); else ;
  }
  
#line 800 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_mac_sta_add","proceeding to add station %pM\n",(u8 *)(& sta->addr));
  
#line 802 
  sta_priv->sta_id = (unsigned char)255U;
  
#line 804 
  atomic_set(& sta_priv->pending_frames,0);
  
#line 805 
  if (vif->type == (unsigned int)NL80211_IFTYPE_AP) 
#line 806 
                                                    sta_priv->client = (_Bool)1; else ;
  
#line 808 
  ret = iwl_add_station_common(priv,vif_priv->ctx,(u8 const *)(& sta->addr),(_Bool)((bool)((int)is_ap) != 0),sta,& sta_id);
  
#line 810 
  if (ret != 0) {
    {
      
#line 811 
      bool __cond_0 = (_Bool)((int)*("Unable to add station %pM (%d)\n" + 30UL) != 10);
      
#line 811 
      if ((int)__cond_0 != 0) 
#line 811 
                              __compiletime_assert_812(); else ;
    }
    
#line 811 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to add station %pM (%d)\n",(u8 *)(& sta->addr),ret);
    
#line 814 
    __retres = ret;
    
#line 814 
    goto return_label;
  }
  else ;
  
#line 817 
  sta_priv->sta_id = sta_id;
  
#line 819 
  __retres = 0;
  return_label: 
#line 819 
                return __retres;
}


#line 830 
void __compiletime_assert_830(void);


#line 843 
void __compiletime_assert_844(void);


#line 822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_sta_remove(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  int ret;
  
#line 826 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 827 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  {
    
#line 830 
    bool __cond = (_Bool)((int)*("proceeding to remove station %pM\n" + 32UL) != 10);
    
#line 830 
    if ((int)__cond != 0) 
#line 830 
                          __compiletime_assert_830(); else ;
  }
  
#line 830 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_mac_sta_remove","proceeding to remove station %pM\n",(u8 *)(& sta->addr));
  
#line 832 
  if (vif->type == (unsigned int)NL80211_IFTYPE_STATION) {
    
#line 838 
    ret = 0;
    
#line 839 
    iwl_deactivate_station(priv,(unsigned char)((int)sta_priv->sta_id),(u8 const *)(& sta->addr));
  }
  else {
    
#line 841 
    ret = iwl_remove_station(priv,(unsigned char)((int)sta_priv->sta_id),(u8 const *)(& sta->addr));
    
#line 842 
    if (ret != 0) {
      int tmp_1;
      
#line 843 
      tmp_1 = iwl_is_rfkill(priv);
      
#line 843 
      if (tmp_1 == 0) {
        {
          
#line 843 
          bool __cond_0 = (_Bool)((int)*("Error removing station %pM\n" + 26UL) != 10);
          
#line 843 
          if ((int)__cond_0 != 0) 
#line 843 
                                  __compiletime_assert_844(); else ;
        }
        
#line 843 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error removing station %pM\n",(u8 *)(& sta->addr));
      }
      else {
        int tmp_0;
        bool tmp;
        
#line 843 
        ;
        
#line 843 
        tmp = iwl_have_debug_level(128U);
        
#line 843 
        if ((int)tmp != 0) 
#line 843 
                           tmp_0 = 0; else 
#line 843 
                                           tmp_0 = 1;
        
#line 843 
        ;
        
#line 843 
        __iwl_err(priv->dev,(_Bool)1,(_Bool)((int)((_Bool)(tmp_0 != 0))),"Error removing station %pM\n",(u8 *)(& sta->addr));
      }
    }
    else ;
  }
  
#line 846 
  return ret;
}


#line 862 
void __compiletime_assert_863(void);


#line 909 
void __compiletime_assert_911(void);


#line 920 
void __compiletime_assert_922(void);


#line 939 
void __compiletime_assert_939(void);


#line 849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_sta_state(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta, enum ieee80211_sta_state old_state, enum ieee80211_sta_state new_state)
{
  int ret;
  int tmp_2;
  
#line 855 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 856 
  struct iwl_vif_priv *vif_priv = (struct iwl_vif_priv *)(& vif->drv_priv);
  
#line 859 
  enum ldv_36868 op = NONE;
  {
    
#line 862 
    bool __cond = (_Bool)((int)*("station %pM state change %d->%d\n" + 31UL) != 10);
    
#line 862 
    if ((int)__cond != 0) 
#line 862 
                          __compiletime_assert_863(); else ;
  }
  
#line 862 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_sta_state","station %pM state change %d->%d\n",(u8 *)(& sta->addr),(unsigned int)old_state,(unsigned int)new_state);
  
#line 865 
  ldv_mutex_lock_88(& priv->mutex);
  
#line 866 
  if (vif->type == (unsigned int)NL80211_IFTYPE_STATION) {
    
#line 867 
    if (old_state == (unsigned int)IEEE80211_STA_NOTEXIST && new_state == (unsigned int)IEEE80211_STA_NONE) 
      
#line 869 
      op = ADD;
    else 
      
#line 870 
      if (old_state == (unsigned int)IEEE80211_STA_NONE && new_state == (unsigned int)IEEE80211_STA_NOTEXIST) 
        
#line 872 
        op = REMOVE;
      else 
        
#line 873 
        if (old_state == (unsigned int)IEEE80211_STA_AUTH && new_state == (unsigned int)IEEE80211_STA_ASSOC) 
          
#line 875 
          op = HT_RATE_INIT; else ;
  }
  else 
    
#line 877 
    if (old_state == (unsigned int)IEEE80211_STA_AUTH && new_state == (unsigned int)IEEE80211_STA_ASSOC) 
      
#line 879 
      op = ADD_RATE_INIT;
    else 
      
#line 880 
      if (old_state == (unsigned int)IEEE80211_STA_ASSOC && new_state == (unsigned int)IEEE80211_STA_AUTH) 
        
#line 882 
        op = REMOVE; else ;
  
#line 885 
  switch ((unsigned int)op) {
    int tmp;
    int tmp_0;
    int tmp_1;
    case (unsigned int)1: 
#line 886 
    ;
    
#line 887 
    ret = iwlagn_mac_sta_add(hw,vif,sta);
    
#line 888 
    if (ret != 0) 
#line 889 
                  goto ldv_55861; else ;
    
#line 896 
    ldv_spin_lock_bh_89(& priv->sta_lock);
    
#line 897 
    tmp = iwl_sta_id(sta);
    
#line 897 
    priv->stations[tmp].used = (unsigned char)((unsigned int)priv->stations[tmp].used & 251U);
    
#line 899 
    ldv_spin_unlock_bh_90(& priv->sta_lock);
    
#line 900 
    goto ldv_55861;
    case (unsigned int)2: 
#line 901 
    ;
    
#line 902 
    ret = iwlagn_mac_sta_remove(hw,vif,sta);
    
#line 903 
    goto ldv_55861;
    case (unsigned int)4: 
#line 904 
    ;
    
#line 905 
    ret = iwlagn_mac_sta_add(hw,vif,sta);
    
#line 906 
    if (ret != 0) 
#line 907 
                  goto ldv_55861; else ;
    {
      
#line 909 
      bool __cond_0 = (_Bool)((int)*("Initializing rate scaling for station %pM\n" + 41UL) != 10);
      
#line 909 
      if ((int)__cond_0 != 0) 
#line 909 
                              __compiletime_assert_911(); else ;
    }
    
#line 909 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_mac_sta_state","Initializing rate scaling for station %pM\n",(u8 *)(& sta->addr));
    
#line 912 
    tmp_0 = iwl_sta_id(sta);
    
#line 912 
    ;
    
#line 912 
    ;
    
#line 912 
    iwl_rs_rate_init(priv,sta,(unsigned char)((int)((unsigned char)tmp_0)));
    
#line 913 
    ret = 0;
    
#line 914 
    goto ldv_55861;
    case (unsigned int)3: 
#line 915 
    ;
    
#line 917 
    ret = iwl_sta_update_ht(priv,vif_priv->ctx,sta);
    
#line 918 
    if (ret != 0) 
#line 919 
                  goto ldv_55861; else ;
    {
      
#line 920 
      bool __cond_1 = (_Bool)((int)*("Initializing rate scaling for station %pM\n" + 41UL) != 10);
      
#line 920 
      if ((int)__cond_1 != 0) 
#line 920 
                              __compiletime_assert_922(); else ;
    }
    
#line 920 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_mac_sta_state","Initializing rate scaling for station %pM\n",(u8 *)(& sta->addr));
    
#line 923 
    tmp_1 = iwl_sta_id(sta);
    
#line 923 
    ;
    
#line 923 
    ;
    
#line 923 
    iwl_rs_rate_init(priv,sta,(unsigned char)((int)((unsigned char)tmp_1)));
    
#line 924 
    ret = 0;
    
#line 925 
    goto ldv_55861;
    default: 
#line 926 
    ;
    
#line 927 
    ret = 0;
    
#line 928 
    goto ldv_55861;
  }
  ldv_55861: 
#line 935 
  ;
  
#line 935 
  tmp_2 = iwl_is_rfkill(priv);
  
#line 935 
  if (tmp_2 != 0) 
#line 936 
                  ret = 0; else ;
  
#line 938 
  ldv_mutex_unlock_91(& priv->mutex);
  {
    
#line 939 
    bool __cond_2 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 939 
    if ((int)__cond_2 != 0) 
#line 939 
                            __compiletime_assert_939(); else ;
  }
  
#line 939 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_sta_state","leave\n");
  
#line 941 
  return ret;
}


#line 963 
void __compiletime_assert_963(void);


#line 1025 
void __compiletime_assert_1025(void);


#line 944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_channel_switch(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_channel_switch *ch_switch)
{
  u16 ch;
  int tmp;
  int tmp_0;
  int tmp_3;
  enum nl80211_channel_type tmp_4;
  int tmp_5;
  
#line 948 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 949 
  struct ieee80211_conf *conf = & hw->conf;
  
#line 950 
  struct ieee80211_channel *channel = ch_switch->chandef.chan;
  
#line 951 
  struct iwl_ht_config *ht_conf = & priv->current_ht_config;
  
#line 960 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  {
    
#line 963 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 963 
    if ((int)__cond != 0) 
#line 963 
                          __compiletime_assert_963(); else ;
  }
  
#line 963 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_channel_switch","enter\n");
  
#line 965 
  ldv_mutex_lock_92(& priv->mutex);
  
#line 967 
  tmp = iwl_is_rfkill(priv);
  
#line 967 
  if (tmp != 0) 
#line 968 
                goto out; else ;
  
#line 970 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 970 
  if (tmp_0 != 0) 
#line 973 
                  goto out;
  else {
    int tmp_1;
    
#line 970 
    tmp_1 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
    
#line 970 
    if (tmp_1 != 0) 
#line 973 
                    goto out;
    else {
      int tmp_2;
      
#line 971 
      tmp_2 = constant_test_bit(11L,(unsigned long const volatile *)(& priv->status));
      
#line 971 
      if (tmp_2 != 0) 
#line 973 
                      goto out; else ;
    }
  }
  
#line 975 
  tmp_3 = iwl_is_associated_ctx(ctx);
  
#line 975 
  if (tmp_3 == 0) 
#line 976 
                  goto out; else ;
  
#line 978 
  if ((priv->lib)->set_channel_switch == (int (*)(struct iwl_priv *, struct ieee80211_channel_switch *))0) 
    
#line 979 
    goto out; else ;
  
#line 981 
  ch = channel->hw_value;
  
#line 982 
  if ((int)ctx->active.channel == (int)ch) 
#line 983 
                                           goto out; else ;
  
#line 985 
  priv->current_ht_config.smps = conf->smps_mode;
  
#line 988 
  tmp_4 = cfg80211_get_chandef_type((struct cfg80211_chan_def const *)(& ch_switch->chandef));
  
#line 988 
  switch ((unsigned int)tmp_4) {
    case (unsigned int)0: 
#line 989 
    ;
    case (unsigned int)1: 
#line 990 
    ;
    
#line 991 
    ctx->ht.is_40mhz = (_Bool)0;
    
#line 992 
    ctx->ht.extension_chan_offset = (unsigned char)0U;
    
#line 993 
    goto ldv_55897;
    case (unsigned int)2: 
#line 994 
    ;
    
#line 995 
    ctx->ht.extension_chan_offset = (unsigned char)3U;
    
#line 996 
    ctx->ht.is_40mhz = (_Bool)1;
    
#line 997 
    goto ldv_55897;
    case (unsigned int)3: 
#line 998 
    ;
    
#line 999 
    ctx->ht.extension_chan_offset = (unsigned char)1U;
    
#line 1000 
    ctx->ht.is_40mhz = (_Bool)1;
    
#line 1001 
    goto ldv_55897;
  }
  ldv_55897: 
#line 1004 
  ;
  
#line 1004 
  if ((int)ctx->staging.channel != (int)ch) 
#line 1005 
                                            ctx->staging.flags = 0U; else ;
  
#line 1007 
  iwl_set_rxon_channel(priv,channel,ctx);
  
#line 1008 
  iwl_set_rxon_ht(priv,ht_conf);
  
#line 1009 
  iwl_set_flags_for_band(priv,ctx,channel->band,ctx->vif);
  
#line 1015 
  set_bit(11L,(unsigned long volatile *)(& priv->status));
  
#line 1016 
  priv->switch_channel = ch;
  
#line 1017 
  tmp_5 = (*((priv->lib)->set_channel_switch))(priv,ch_switch);
  
#line 1017 
  if (tmp_5 != 0) {
    
#line 1018 
    set_bit(11L,(unsigned long volatile *)(& priv->status));
    
#line 1019 
    priv->switch_channel = (unsigned short)0U;
    
#line 1020 
    ieee80211_chswitch_done(ctx->vif,(_Bool)0);
  }
  else ;
  out: 
#line 1023 
  ;
  
#line 1024 
  ldv_mutex_unlock_93(& priv->mutex);
  {
    
#line 1025 
    bool __cond_0 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1025 
    if ((int)__cond_0 != 0) 
#line 1025 
                            __compiletime_assert_1025(); else ;
  }
  
#line 1025 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_channel_switch","leave\n");
  
#line 1026 
  return;
}


#line 1028  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
void iwl_chswitch_done(struct iwl_priv *priv, bool is_success)
{
  int tmp;
  int tmp_0;
  
#line 1034 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 1036 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 1036 
  if (tmp != 0) 
#line 1037 
                goto return_label; else ;
  
#line 1039 
  tmp_0 = test_and_set_bit(11L,(unsigned long volatile *)(& priv->status));
  
#line 1039 
  if (tmp_0 == 0) 
#line 1040 
                  goto return_label; else ;
  
#line 1042 
  if (ctx->vif != (struct ieee80211_vif *)0) 
#line 1043 
                                             ieee80211_chswitch_done(ctx->vif,(_Bool)((bool)((int)is_success) != 0)); else ;
  return_label: 
#line 1044 
                return;
}


#line 1062 
void __compiletime_assert_1063(void);


#line 1046  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_configure_filter(struct ieee80211_hw *hw, unsigned int changed_flags, unsigned int *total_flags, u64 multicast)
{
  struct iwl_rxon_context *ctx;
  
#line 1051 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1052 
  __le32 filter_or = 0U;
  
#line 1052 
  __le32 filter_nand = 0U;
  {
    
#line 1062 
    bool __cond = (_Bool)((int)*("Enter: changed: 0x%x, total: 0x%x\n" + 33UL) != 10);
    
#line 1062 
    if ((int)__cond != 0) 
#line 1062 
                          __compiletime_assert_1063(); else ;
  }
  
#line 1062 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_configure_filter","Enter: changed: 0x%x, total: 0x%x\n",changed_flags,*total_flags);
  
#line 1065 
  if ((*total_flags & 64U) != 0U) 
#line 1065 
                                  filter_or |= 1U; else 
#line 1065 
                                                        filter_nand |= 1U;
  
#line 1067 
  if ((*total_flags & 32U) != 0U) 
#line 1067 
                                  filter_or |= 3U; else 
#line 1067 
                                                        filter_nand |= 3U;
  
#line 1068 
  if ((*total_flags & 16U) != 0U) 
#line 1068 
                                  filter_or |= 64U; else 
#line 1068 
                                                         filter_nand |= 64U;
  
#line 1072 
  ldv_mutex_lock_94(& priv->mutex);
  
#line 1074 
  ctx = & priv->contexts[0];
  
#line 1074 
  goto ldv_55925;
  ldv_55924: 
#line 1075 
  ;
  
#line 1074 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    
#line 1075 
    ctx->staging.filter_flags &= ~ filter_nand;
    
#line 1076 
    ctx->staging.filter_flags |= filter_or;
  }
  else ;
  
#line 1074 
  ctx += 1;
  ldv_55925: 
#line 1075 
  ;
  
#line 1074 
  if (& priv->contexts[2] > ctx) 
#line 1076 
                                 goto ldv_55924; else 
#line 1079 
                                                      goto ldv_55926;
  ldv_55926: 
#line 1080 
  ;
  
#line 1084 
  ldv_mutex_unlock_95(& priv->mutex);
  
#line 1092 
  *total_flags &= 114U;
  
#line 1093 
  return;
}


#line 1103 
void __compiletime_assert_1103(void);


#line 1106 
void __compiletime_assert_1106(void);


#line 1110 
void __compiletime_assert_1110(void);


#line 1119 
void __compiletime_assert_1120(void);


#line 1122 
void __compiletime_assert_1122(void);


#line 1131 
void __compiletime_assert_1131(void);


#line 1096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_flush(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u32 queues, bool drop)
{
  u32 scd_queues;
  int tmp;
  int tmp_0;
  
#line 1099 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1102 
  ldv_mutex_lock_96(& priv->mutex);
  {
    
#line 1103 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 1103 
    if ((int)__cond != 0) 
#line 1103 
                          __compiletime_assert_1103(); else ;
  }
  
#line 1103 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_flush","enter\n");
  
#line 1105 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 1105 
  if (tmp != 0) {
    {
      
#line 1106 
      bool __cond_0 = (_Bool)((int)*("Aborting flush due to device shutdown\n" + 37UL) != 10);
      
#line 1106 
      if ((int)__cond_0 != 0) 
#line 1106 
                              __compiletime_assert_1106(); else ;
    }
    
#line 1106 
    __iwl_dbg(priv->dev,8388608U,(_Bool)0,"iwlagn_mac_flush","Aborting flush due to device shutdown\n");
    
#line 1107 
    goto done;
  }
  else ;
  
#line 1109 
  tmp_0 = iwl_is_rfkill(priv);
  
#line 1109 
  if (tmp_0 != 0) {
    {
      
#line 1110 
      bool __cond_1 = (_Bool)((int)*("Aborting flush due to RF Kill\n" + 29UL) != 10);
      
#line 1110 
      if ((int)__cond_1 != 0) 
#line 1110 
                              __compiletime_assert_1110(); else ;
    }
    
#line 1110 
    __iwl_dbg(priv->dev,8388608U,(_Bool)0,"iwlagn_mac_flush","Aborting flush due to RF Kill\n");
    
#line 1111 
    goto done;
  }
  else ;
  
#line 1114 
  scd_queues = (unsigned int)(1UL << ((priv->cfg)->base_params)->num_of_queues) + 4294967295U;
  
#line 1115 
  scd_queues &= 4294966767U;
  
#line 1118 
  if ((int)drop != 0) {
    int tmp_1;
    {
      
#line 1119 
      bool __cond_2 = (_Bool)((int)*("Flushing SCD queues: 0x%x\n" + 25UL) != 10);
      
#line 1119 
      if ((int)__cond_2 != 0) 
#line 1119 
                              __compiletime_assert_1120(); else ;
    }
    
#line 1119 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_mac_flush","Flushing SCD queues: 0x%x\n",scd_queues);
    
#line 1121 
    tmp_1 = iwlagn_txfifo_flush(priv,scd_queues);
    
#line 1121 
    if (tmp_1 != 0) {
      {
        
#line 1122 
        bool __cond_3 = (_Bool)((int)*("flush request fail\n" + 18UL) != 10);
        
#line 1122 
        if ((int)__cond_3 != 0) 
#line 1122 
                                __compiletime_assert_1122(); else ;
      }
      
#line 1122 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"flush request fail\n");
      
#line 1123 
      goto done;
    }
    else ;
  }
  else ;
  {
    
#line 1127 
    bool __cond_4 = (_Bool)((int)*("wait transmit/flush all frames\n" + 30UL) != 10);
    
#line 1127 
    if ((int)__cond_4 != 0) 
#line 1127 
                            __compiletime_assert_1127(); else ;
  }
  
#line 1127 
  __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_mac_flush","wait transmit/flush all frames\n");
  
#line 1128 
  iwl_trans_wait_tx_queue_empty(priv->trans,scd_queues);
  done: 
#line 1129 
  ;
  
#line 1130 
  ldv_mutex_unlock_97(& priv->mutex);
  {
    
#line 1131 
    bool __cond_5 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1131 
    if ((int)__cond_5 != 0) 
#line 1131 
                            __compiletime_assert_1131(); else ;
  }
  
#line 1131 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_flush","leave\n");
  
#line 1132 
  return;
}


#line 1143 
void __compiletime_assert_1143(void);


#line 1154 
void __compiletime_assert_1155(void);


#line 1158 
void __compiletime_assert_1158(void);


#line 1134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_event_callback(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_event const *event)
{
  
#line 1138 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1140 
  if (event->type != (unsigned int)RSSI_EVENT) 
#line 1141 
                                               goto return_label; else ;
  {
    
#line 1143 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 1143 
    if ((int)__cond != 0) 
#line 1143 
                          __compiletime_assert_1143(); else ;
  }
  
#line 1143 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_event_callback","enter\n");
  
#line 1145 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) {
    
#line 1147 
    if (event->u.rssi.data == (unsigned int)RSSI_EVENT_LOW) 
#line 1148 
                                                            priv->bt_enable_pspoll = (_Bool)1;
    else 
      
#line 1149 
      if (event->u.rssi.data == (unsigned int)RSSI_EVENT_HIGH) 
#line 1150 
                                                               priv->bt_enable_pspoll = (_Bool)0; else ;
    
#line 1152 
    ldv_queue_work_98(priv->workqueue,& priv->bt_runtime_config);
  }
  else {
    {
      
#line 1154 
      bool __cond_0 = (_Bool)((int)*("Advanced BT coex disabled," + 48UL) != 10);
      
#line 1154 
      if ((int)__cond_0 != 0) 
#line 1154 
                              __compiletime_assert_1155(); else ;
    }
    
#line 1154 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_event_callback","Advanced BT coex disabled,");
  }
  {
    
#line 1158 
    bool __cond_1 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1158 
    if ((int)__cond_1 != 0) 
#line 1158 
                            __compiletime_assert_1158(); else ;
  }
  
#line 1158 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_event_callback","leave\n");
  return_label: 
#line 1159 
                return;
}


#line 1161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_set_tim(struct ieee80211_hw *hw, struct ieee80211_sta *sta, bool set)
{
  int __retres;
  
#line 1164 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1166 
  ldv_queue_work_99(priv->workqueue,& priv->beacon_update);
  
#line 1168 
  __retres = 0;
  
#line 1168 
  return __retres;
}


#line 1183 
void __compiletime_assert_1183(void);


#line 1186 
void __compiletime_assert_1186(void);


#line 1191 
void __compiletime_assert_1191(void);


#line 1211 
void __compiletime_assert_1211(void);


#line 1171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_conf_tx(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u16 queue, struct ieee80211_tx_queue_params const *params)
{
  int __retres;
  int q;
  int tmp;
  int tmp_0;
  
#line 1175 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1176 
  struct iwl_vif_priv *vif_priv = (struct iwl_vif_priv *)(& vif->drv_priv);
  
#line 1177 
  struct iwl_rxon_context *ctx = vif_priv->ctx;
  {
    
#line 1180 
    int __ret_warn_on = ctx == (struct iwl_rxon_context *)0;
    
#line 1180 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1180 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",1180); else ;
    
#line 1180 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 1180 
  if ((long)tmp != 0L) {
    
#line 1181 
    __retres = -22;
    
#line 1181 
    goto return_label;
  }
  else ;
  {
    
#line 1183 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 1183 
    if ((int)__cond != 0) 
#line 1183 
                          __compiletime_assert_1183(); else ;
  }
  
#line 1183 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_conf_tx","enter\n");
  
#line 1185 
  tmp_0 = iwl_is_ready_rf(priv);
  
#line 1185 
  if (tmp_0 == 0) {
    {
      
#line 1186 
      bool __cond_0 = (_Bool)((int)*("leave - RF not ready\n" + 20UL) != 10);
      
#line 1186 
      if ((int)__cond_0 != 0) 
#line 1186 
                              __compiletime_assert_1186(); else ;
    }
    
#line 1186 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_conf_tx","leave - RF not ready\n");
    
#line 1187 
    __retres = -5;
    
#line 1187 
    goto return_label;
  }
  else ;
  
#line 1190 
  if ((unsigned int)queue > 3U) {
    {
      
#line 1191 
      bool __cond_1 = (_Bool)((int)*("leave - queue >= AC_NUM %d\n" + 26UL) != 10);
      
#line 1191 
      if ((int)__cond_1 != 0) 
#line 1191 
                              __compiletime_assert_1191(); else ;
    }
    
#line 1191 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_conf_tx","leave - queue >= AC_NUM %d\n",(int)queue);
    
#line 1192 
    __retres = 0;
    
#line 1192 
    goto return_label;
  }
  else ;
  
#line 1195 
  q = 3 - (int)queue;
  
#line 1197 
  ldv_mutex_lock_100(& priv->mutex);
  
#line 1199 
  ctx->qos_data.def_qos_parm.ac[q].cw_min = params->cw_min;
  
#line 1201 
  ctx->qos_data.def_qos_parm.ac[q].cw_max = params->cw_max;
  
#line 1203 
  ctx->qos_data.def_qos_parm.ac[q].aifsn = params->aifs;
  
#line 1204 
  ctx->qos_data.def_qos_parm.ac[q].edca_txop = (unsigned short)((unsigned int)params->txop * 32U);
  
#line 1207 
  ctx->qos_data.def_qos_parm.ac[q].reserved1 = (unsigned char)0U;
  
#line 1209 
  ldv_mutex_unlock_101(& priv->mutex);
  {
    
#line 1211 
    bool __cond_2 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1211 
    if ((int)__cond_2 != 0) 
#line 1211 
                            __compiletime_assert_1211(); else ;
  }
  
#line 1211 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_conf_tx","leave\n");
  
#line 1212 
  __retres = 0;
  return_label: 
#line 1212 
                return __retres;
}


#line 1215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_tx_last_beacon(struct ieee80211_hw *hw)
{
  int __retres;
  
#line 1217 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1219 
  __retres = priv->ibss_manager == 1U;
  
#line 1219 
  return __retres;
}


#line 1222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwl_set_mode(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int tmp;
  
#line 1224 
  iwl_connection_init_rx_config(priv,ctx);
  
#line 1226 
  iwlagn_set_rxon_chain(priv,ctx);
  
#line 1228 
  tmp = iwlagn_commit_rxon(priv,ctx);
  
#line 1228 
  return tmp;
}


#line 1231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwl_setup_interface(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int __retres;
  int err;
  int ac;
  
#line 1234 
  struct ieee80211_vif *vif = ctx->vif;
  {
    int tmp_0;
    
#line 1237 
    if (debug_locks != 0) {
      int tmp;
      
#line 1237 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 1237 
      if (tmp == 0) 
#line 1237 
                    tmp_0 = 1; else 
#line 1237 
                                    tmp_0 = 0;
    }
    else 
#line 1237 
         tmp_0 = 0;
    
#line 1237 
    int __ret_warn_on = tmp_0;
    
#line 1237 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1237 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",1237); else ;
    
#line 1237 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1244 
  priv->iw_mode = vif->type;
  
#line 1246 
  ctx->is_active = (_Bool)1;
  
#line 1248 
  err = iwl_set_mode(priv,ctx);
  
#line 1249 
  if (err != 0) {
    
#line 1250 
    if (! ctx->always_active) 
#line 1251 
                              ctx->is_active = (_Bool)0; else ;
    
#line 1252 
    __retres = err;
    
#line 1252 
    goto return_label;
  }
  else ;
  
#line 1255 
  if (((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) && vif->type == (unsigned int)NL80211_IFTYPE_ADHOC) 
    
#line 1262 
    priv->bt_traffic_load = (unsigned char)2U; else ;
  
#line 1266 
  ac = 0;
  
#line 1266 
  goto ldv_56037;
  ldv_56036: 
#line 1267 
  ;
  
#line 1267 
  vif->hw_queue[ac] = ctx->ac_to_queue[ac];
  
#line 1266 
  ac += 1;
  ldv_56037: 
#line 1267 
  ;
  
#line 1266 
  if (ac <= 3) 
#line 1268 
               goto ldv_56036; else 
#line 1271 
                                    goto ldv_56038;
  ldv_56038: 
#line 1272 
  ;
  
#line 1269 
  if (vif->type == (unsigned int)NL80211_IFTYPE_AP) 
#line 1270 
                                                    vif->cab_queue = ctx->mcast_queue; else 
                                                                    
#line 1272 
                                                                    vif->cab_queue = (unsigned char)255U;
  
#line 1274 
  __retres = 0;
  return_label: 
#line 1274 
                return __retres;
}


#line 1287 
void __compiletime_assert_1288(void);


#line 1293 
void __compiletime_assert_1293(void);


#line 1358 
void __compiletime_assert_1358(void);


#line 1277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_add_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  struct iwl_rxon_context *tmp;
  int err;
  int tmp_1;
  
#line 1280 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1281 
  struct iwl_vif_priv *vif_priv = (struct iwl_vif_priv *)(& vif->drv_priv);
  
#line 1282 
  struct iwl_rxon_context *ctx = (struct iwl_rxon_context *)0;
  
#line 1284 
  enum nl80211_iftype viftype = ieee80211_vif_type_p2p(vif);
  
#line 1285 
  bool reset = (_Bool)0;
  {
    
#line 1287 
    bool __cond = (_Bool)((int)*("enter: type %d, addr %pM\n" + 24UL) != 10);
    
#line 1287 
    if ((int)__cond != 0) 
#line 1287 
                          __compiletime_assert_1288(); else ;
  }
  
#line 1287 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_add_interface","enter: type %d, addr %pM\n",(unsigned int)viftype,(u8 *)(& vif->addr));
  
#line 1290 
  ldv_mutex_lock_102(& priv->mutex);
  
#line 1292 
  tmp_1 = iwl_is_ready_rf(priv);
  
#line 1292 
  if (tmp_1 == 0) {
    {
      
#line 1293 
      bool __cond_0 = (_Bool)((int)*("Try to add interface when device not ready\n" + 42UL) != 10);
      
#line 1293 
      if ((int)__cond_0 != 0) 
#line 1293 
                              __compiletime_assert_1293(); else ;
    }
    
#line 1293 
    __iwl_warn(priv->dev,"Try to add interface when device not ready\n");
    
#line 1294 
    err = -22;
    
#line 1295 
    goto out;
  }
  else ;
  
#line 1298 
  tmp = & priv->contexts[0];
  
#line 1298 
  goto ldv_56064;
  ldv_56063: 
#line 1299 
  ;
  
#line 1298 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)tmp->ctxid) & 1UL) != 0UL) {
    
#line 1299 
    u32 possible_modes = tmp->interface_modes | tmp->exclusive_interface_modes;
    
#line 1302 
    if (tmp->vif != (struct ieee80211_vif *)0) {
      
#line 1304 
      if (tmp->vif == vif) {
        
#line 1305 
        reset = (_Bool)1;
        
#line 1306 
        ctx = tmp;
        
#line 1307 
        goto ldv_56061;
      }
      else ;
      
#line 1311 
      if ((((unsigned long)tmp->exclusive_interface_modes >> (unsigned int)(tmp->vif)->type) & 1UL) != 0UL) {
        
#line 1313 
        err = -22;
        
#line 1314 
        goto out;
      }
      else ;
      
#line 1316 
      goto ldv_56062;
    }
    else ;
    
#line 1319 
    if ((((unsigned long)possible_modes >> (unsigned int)viftype) & 1UL) == 0UL) 
      
#line 1320 
      goto ldv_56062; else ;
    
#line 1323 
    ctx = tmp;
    
#line 1324 
    goto ldv_56061;
  }
  else ;
  ldv_56062: 
#line 1326 
  ;
  
#line 1298 
  tmp += 1;
  ldv_56064: 
#line 1299 
  ;
  
#line 1298 
  if (& priv->contexts[2] > tmp) 
#line 1300 
                                 goto ldv_56063; else 
#line 1303 
                                                      goto ldv_56061;
  ldv_56061: 
#line 1304 
  ;
  
#line 1327 
  if (ctx == (struct iwl_rxon_context *)0) {
    
#line 1328 
    err = -95;
    
#line 1329 
    goto out;
  }
  else ;
  
#line 1332 
  vif_priv->ctx = ctx;
  
#line 1333 
  ctx->vif = vif;
  
#line 1344 
  if (vif->type == (unsigned int)NL80211_IFTYPE_MONITOR) 
#line 1345 
                                                         _ieee80211_hw_set(priv->hw,(enum ieee80211_hw_flags)IEEE80211_HW_RX_INCLUDES_FCS); else 
                                                                    
#line 1347 
                                                                    __set_bit(1L,(unsigned long volatile *)(& (priv->hw)->flags));
  
#line 1349 
  err = iwl_setup_interface(priv,ctx);
  
#line 1350 
  if (err == 0 || (int)reset != 0) 
#line 1351 
                                   goto out; else ;
  
#line 1353 
  ctx->vif = (struct ieee80211_vif *)0;
  
#line 1354 
  priv->iw_mode = NL80211_IFTYPE_STATION;
  out: 
#line 1355 
  ;
  
#line 1356 
  ldv_mutex_unlock_103(& priv->mutex);
  {
    
#line 1358 
    bool __cond_1 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1358 
    if ((int)__cond_1 != 0) 
#line 1358 
                            __compiletime_assert_1358(); else ;
  }
  
#line 1358 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_add_interface","leave\n");
  
#line 1359 
  return err;
}


#line 1362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwl_teardown_interface(struct iwl_priv *priv, struct ieee80211_vif *vif, bool mode_change)
{
  
#line 1366 
  struct iwl_rxon_context *ctx = iwl_rxon_ctx_from_vif(vif);
  {
    int tmp_1;
    
#line 1368 
    if (debug_locks != 0) {
      int tmp_0;
      
#line 1368 
      tmp_0 = lock_is_held(& priv->mutex.dep_map);
      
#line 1368 
      if (tmp_0 == 0) 
#line 1368 
                      tmp_1 = 1; else 
#line 1368 
                                      tmp_1 = 0;
    }
    else 
#line 1368 
         tmp_1 = 0;
    
#line 1368 
    int __ret_warn_on = tmp_1;
    
#line 1368 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1368 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",1368); else ;
    
#line 1368 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1370 
  if (priv->scan_vif == vif) {
    
#line 1371 
    iwl_scan_cancel_timeout(priv,200UL);
    
#line 1372 
    iwl_force_scan_end(priv);
  }
  else ;
  
#line 1375 
  if (! mode_change) {
    
#line 1376 
    iwl_set_mode(priv,ctx);
    
#line 1377 
    if (! ctx->always_active) 
#line 1378 
                              ctx->is_active = (_Bool)0; else ;
  }
  else ;
  
#line 1388 
  if (vif->type == (unsigned int)NL80211_IFTYPE_ADHOC) 
#line 1389 
                                                       priv->bt_traffic_load = priv->last_bt_traffic_load; else ;
  
#line 1390 
  return;
}


#line 1398 
void __compiletime_assert_1398(void);


#line 1404 
void __compiletime_assert_1404(void);


#line 1406 
void __compiletime_assert_1407(void);


#line 1415 
void __compiletime_assert_1415(void);


#line 1392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_remove_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  int tmp_1;
  
#line 1395 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1396 
  struct iwl_rxon_context *ctx = iwl_rxon_ctx_from_vif(vif);
  {
    
#line 1398 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 1398 
    if ((int)__cond != 0) 
#line 1398 
                          __compiletime_assert_1398(); else ;
  }
  
#line 1398 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_remove_interface","enter\n");
  
#line 1400 
  ldv_mutex_lock_104(& priv->mutex);
  {
    
#line 1402 
    int __ret_warn_on = ctx->vif != vif;
    
#line 1402 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1402 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",1402); else ;
    
#line 1402 
    tmp_1 = (long)(__ret_warn_on != 0);
  }
  
#line 1402 
  if ((long)tmp_1 != 0L) {
    struct iwl_rxon_context *tmp_0;
    {
      
#line 1404 
      bool __cond_0 = (_Bool)((int)*("ctx->vif = %p, vif = %p\n" + 23UL) != 10);
      
#line 1404 
      if ((int)__cond_0 != 0) 
#line 1404 
                              __compiletime_assert_1404(); else ;
    }
    
#line 1404 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"ctx->vif = %p, vif = %p\n",ctx->vif,vif);
    
#line 1405 
    tmp_0 = & priv->contexts[0];
    
#line 1405 
    goto ldv_56100;
    ldv_56099: 
#line 1406 
    ;
    
#line 1405 
    if ((((unsigned long)priv->valid_contexts >> (unsigned int)tmp_0->ctxid) & 1UL) != 0UL) {
      {
        
#line 1406 
        bool __cond_1 = (_Bool)((int)*("\tID = %d:\tctx = %p\tctx->vif = %p\n" + 32UL) != 10);
        
#line 1406 
        if ((int)__cond_1 != 0) 
#line 1406 
                                __compiletime_assert_1407(); else ;
      }
      
#line 1406 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"\tID = %d:\tctx = %p\tctx->vif = %p\n",(unsigned int)tmp_0->ctxid,tmp_0,tmp_0->vif);
    }
    else ;
    
#line 1405 
    tmp_0 += 1;
    ldv_56100: 
#line 1406 
    ;
    
#line 1405 
    if (& priv->contexts[2] > tmp_0) 
#line 1407 
                                     goto ldv_56099; else 
#line 1410 
                                                          goto ldv_56101;
    ldv_56101: 
#line 1411 
    ;
  }
  else ;
  
#line 1409 
  ctx->vif = (struct ieee80211_vif *)0;
  
#line 1411 
  iwl_teardown_interface(priv,vif,(_Bool)0);
  
#line 1413 
  ldv_mutex_unlock_105(& priv->mutex);
  {
    
#line 1415 
    bool __cond_2 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1415 
    if ((int)__cond_2 != 0) 
#line 1415 
                            __compiletime_assert_1415(); else ;
  }
  
#line 1415 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_remove_interface","leave\n");
  
#line 1416 
  return;
}


#line 1429 
void __compiletime_assert_1429(void);


#line 1497 
void __compiletime_assert_1497(void);


#line 1419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_change_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif, enum nl80211_iftype newtype, bool newp2p)
{
  struct iwl_rxon_context *ctx;
  struct iwl_rxon_context *tmp;
  u32 interface_modes;
  int err;
  
#line 1423 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1425 
  enum nl80211_iftype newviftype = newtype;
  {
    
#line 1429 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 1429 
    if ((int)__cond != 0) 
#line 1429 
                          __compiletime_assert_1429(); else ;
  }
  
#line 1429 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_change_interface","enter\n");
  
#line 1431 
  newtype = ieee80211_iftype_p2p(newtype,(_Bool)((bool)((int)newp2p) != 0));
  
#line 1433 
  ldv_mutex_lock_106(& priv->mutex);
  
#line 1435 
  ctx = iwl_rxon_ctx_from_vif(vif);
  
#line 1442 
  if (ctx->ctxid != (unsigned int)IWL_RXON_CTX_BSS) {
    
#line 1443 
    err = -16;
    
#line 1444 
    goto out;
  }
  else ;
  
#line 1447 
  if (ctx->vif == (struct ieee80211_vif *)0) 
#line 1447 
                                             goto _LOR;
  else {
    int tmp_0;
    
#line 1447 
    tmp_0 = iwl_is_ready_rf(priv);
    
#line 1447 
    if (tmp_0 == 0) {
      _LOR: {
              
#line 1452 
              err = -16;
              
#line 1453 
              goto out;
            }
    }
    else ;
  }
  
#line 1457 
  interface_modes = ctx->interface_modes | ctx->exclusive_interface_modes;
  
#line 1458 
  if ((((unsigned long)interface_modes >> (unsigned int)newtype) & 1UL) == 0UL) {
    
#line 1459 
    err = -16;
    
#line 1460 
    goto out;
  }
  else ;
  
#line 1463 
  if ((((unsigned long)ctx->exclusive_interface_modes >> (unsigned int)newtype) & 1UL) != 0UL) {
    
#line 1464 
    tmp = & priv->contexts[0];
    
#line 1464 
    goto ldv_56126;
    ldv_56125: 
#line 1465 
    ;
    
#line 1464 
    if ((((unsigned long)priv->valid_contexts >> (unsigned int)tmp->ctxid) & 1UL) != 0UL) {
      
#line 1465 
      if (ctx == tmp) 
#line 1466 
                      goto ldv_56124; else ;
      
#line 1468 
      if (! tmp->is_active) 
#line 1469 
                            goto ldv_56124; else ;
      
#line 1475 
      err = -16;
      
#line 1476 
      goto out;
    }
    else ;
    ldv_56124: 
#line 1478 
    ;
    
#line 1464 
    tmp += 1;
    ldv_56126: 
#line 1465 
    ;
    
#line 1464 
    if (& priv->contexts[2] > tmp) 
#line 1466 
                                   goto ldv_56125; else 
#line 1469 
                                                        goto ldv_56127;
    ldv_56127: 
#line 1470 
    ;
  }
  else ;
  
#line 1481 
  iwl_teardown_interface(priv,vif,(_Bool)1);
  
#line 1482 
  vif->type = newviftype;
  
#line 1483 
  vif->p2p = newp2p;
  
#line 1484 
  err = iwl_setup_interface(priv,ctx);
  {
    
#line 1485 
    int __ret_warn_on = err != 0;
    
#line 1485 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1485 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",1485); else ;
    
#line 1485 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1493 
  err = 0;
  out: 
#line 1495 
  ;
  
#line 1496 
  ldv_mutex_unlock_107(& priv->mutex);
  {
    
#line 1497 
    bool __cond_0 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1497 
    if ((int)__cond_0 != 0) 
#line 1497 
                            __compiletime_assert_1497(); else ;
  }
  
#line 1497 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_change_interface","leave\n");
  
#line 1499 
  return err;
}


#line 1510 
void __compiletime_assert_1510(void);


#line 1522 
void __compiletime_assert_1523(void);


#line 1502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static int iwlagn_mac_hw_scan(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_scan_request *hw_req)
{
  int __retres;
  int ret;
  
#line 1506 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1507 
  struct cfg80211_scan_request *req = & hw_req->req;
  {
    
#line 1510 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 1510 
    if ((int)__cond != 0) 
#line 1510 
                          __compiletime_assert_1510(); else ;
  }
  
#line 1510 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_hw_scan","enter\n");
  
#line 1512 
  if (req->n_channels == 0U) {
    
#line 1513 
    __retres = -22;
    
#line 1513 
    goto return_label;
  }
  else ;
  
#line 1515 
  ldv_mutex_lock_108(& priv->mutex);
  
#line 1521 
  if (priv->scan_type != (unsigned int)IWL_SCAN_NORMAL) {
    {
      
#line 1522 
      bool __cond_0 = (_Bool)((int)*("SCAN request during internal scan - defer\n" + 41UL) != 10);
      
#line 1522 
      if ((int)__cond_0 != 0) 
#line 1522 
                              __compiletime_assert_1523(); else ;
    }
    
#line 1522 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwlagn_mac_hw_scan","SCAN request during internal scan - defer\n");
    
#line 1524 
    priv->scan_request = req;
    
#line 1525 
    priv->scan_vif = vif;
    
#line 1526 
    ret = 0;
  }
  else {
    
#line 1528 
    priv->scan_request = req;
    
#line 1529 
    priv->scan_vif = vif;
    
#line 1534 
    ret = iwl_scan_initiate(priv,vif,(enum iwl_scan_type)IWL_SCAN_NORMAL,(req->channels[0])->band);
    
#line 1536 
    if (ret != 0) {
      
#line 1537 
      priv->scan_request = (struct cfg80211_scan_request *)0;
      
#line 1538 
      priv->scan_vif = (struct ieee80211_vif *)0;
    }
    else ;
  }
  {
    
#line 1542 
    bool __cond_1 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1542 
    if ((int)__cond_1 != 0) 
#line 1542 
                            __compiletime_assert_1542(); else ;
  }
  
#line 1542 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_hw_scan","leave\n");
  
#line 1544 
  ldv_mutex_unlock_109(& priv->mutex);
  
#line 1546 
  __retres = ret;
  return_label: 
#line 1546 
                return __retres;
}


#line 1549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwl_sta_modify_ps_wake(struct iwl_priv *priv, int sta_id)
{
  
#line 1551 
  struct iwl_addsta_cmd cmd = {.mode = (unsigned char)1U, .reserved = {(unsigned char)0, (unsigned char)0, (unsigned char)0}, .sta = {.addr = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .reserved1 = (unsigned short)0, .sta_id = (unsigned char)sta_id, .modify_mask = (unsigned char)0, .reserved2 = (unsigned short)0}, .key = {.key_flags = (unsigned short)0, .tkip_rx_tsc_byte2 = (unsigned char)0, .reserved1 = (unsigned char)0, .tkip_rx_ttak = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}, .key_offset = (unsigned char)0, .reserved2 = (unsigned char)0, .key = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .tx_secur_seq_cnt = 0ULL, .hw_tkip_mic_rx_key = 0ULL, .hw_tkip_mic_tx_key = 0ULL}, .station_flags = 0U, .station_flags_msk = 256U, .tid_disable_tx = (unsigned short)0, .legacy_reserved = (unsigned short)0, .add_immediate_ba_tid = (unsigned char)0, .remove_immediate_ba_tid = (unsigned char)0, .add_immediate_ba_ssn = (unsigned short)0, .sleep_tx_count = (unsigned short)0, .reserved2 = (unsigned short)0};
  
#line 1557 
  iwl_send_add_sta(priv,& cmd,(unsigned char)1);
  
#line 1558 
  return;
}


#line 1590 
void __compiletime_assert_1590(void);


#line 1560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
static void iwlagn_mac_sta_notify(struct ieee80211_hw *hw, struct ieee80211_vif *vif, enum sta_notify_cmd cmd, struct ieee80211_sta *sta)
{
  int sta_id;
  
#line 1565 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1566 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  {
    
#line 1569 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 1569 
    if ((int)__cond != 0) 
#line 1569 
                          __compiletime_assert_1569(); else ;
  }
  
#line 1569 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_sta_notify","enter\n");
  
#line 1571 
  switch ((unsigned int)cmd) {
    int tmp_0;
    case (unsigned int)0: 
#line 1572 
    ;
    {
      
#line 1573 
      int __ret_warn_on = ! sta_priv->client;
      
#line 1573 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 1573 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",1573); else ;
      
#line 1573 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 1574 
    sta_priv->asleep = (_Bool)1;
    
#line 1575 
    tmp_0 = atomic_read((atomic_t const *)(& sta_priv->pending_frames));
    
#line 1575 
    if (tmp_0 > 0) 
#line 1576 
                   ieee80211_sta_block_awake(hw,sta,(_Bool)1); else ;
    
#line 1577 
    goto ldv_56177;
    case (unsigned int)1: 
#line 1578 
    ;
    {
      
#line 1579 
      int __ret_warn_on_0 = ! sta_priv->client;
      
#line 1579 
      if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 1579 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c",1579); else ;
      
#line 1579 
      long tmp_3 = (long)(__ret_warn_on_0 != 0);
    }
    
#line 1580 
    if (! sta_priv->asleep) 
#line 1581 
                            goto ldv_56177; else ;
    
#line 1582 
    sta_priv->asleep = (_Bool)0;
    
#line 1583 
    sta_id = iwl_sta_id(sta);
    
#line 1584 
    if (sta_id != 255) 
#line 1585 
                       iwl_sta_modify_ps_wake(priv,sta_id); else ;
    
#line 1586 
    goto ldv_56177;
    default: 
#line 1587 
    ;
    
#line 1588 
    goto ldv_56177;
  }
  ldv_56177: 
#line 1590 
  ;
  {
    
#line 1590 
    bool __cond_0 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1590 
    if ((int)__cond_0 != 0) 
#line 1590 
                            __compiletime_assert_1590(); else ;
  }
  
#line 1590 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_sta_notify","leave\n");
  
#line 1591 
  return;
}


#line 1593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
struct ieee80211_ops const iwlagn_hw_ops = {.tx = & iwlagn_mac_tx, .start = & iwlagn_mac_start, .stop = & iwlagn_mac_stop, .suspend = & iwlagn_mac_suspend, .resume = & iwlagn_mac_resume, .set_wakeup = & iwlagn_mac_set_wakeup, .add_interface = & iwlagn_mac_add_interface, .change_interface = & iwlagn_mac_change_interface, .remove_interface = & iwlagn_mac_remove_interface, .config = & iwlagn_mac_config, .bss_info_changed = & iwlagn_bss_info_changed, .start_ap = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .stop_ap = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .prepare_multicast = (u64 (*)(struct ieee80211_hw *, struct netdev_hw_addr_list *))0, .configure_filter = & iwlagn_configure_filter, .set_tim = & iwlagn_mac_set_tim, .set_key = & iwlagn_mac_set_key, .update_tkip_key = & iwlagn_mac_update_tkip_key, .set_rekey_data = & iwlagn_mac_set_rekey_data, .set_default_unicast_key = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, int ))0, .hw_scan = & iwlagn_mac_hw_scan, .cancel_hw_scan = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .sched_scan_start = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *))0, .sched_scan_stop = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .sw_scan_start = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u8 const *))0, .sw_scan_complete = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .get_stats = (int (*)(struct ieee80211_hw *, struct ieee80211_low_level_stats *))0, .get_key_seq = (void (*)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *))0, .set_frag_threshold = (int (*)(struct ieee80211_hw *, u32 ))0, .set_rts_threshold = (int (*)(struct ieee80211_hw *, u32 ))0, .sta_add = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_remove = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_add_debugfs = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *))0, .sta_remove_debugfs = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *))0, .sta_notify = & iwlagn_mac_sta_notify, .sta_state = & iwlagn_mac_sta_state, .sta_pre_rcu_remove = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_rc_update = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ))0, .sta_rate_tbl_update = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_statistics = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *))0, .conf_tx = & iwlagn_mac_conf_tx, .get_tsf = (u64 (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .set_tsf = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ))0, .reset_tsf = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .tx_last_beacon = & iwlagn_mac_tx_last_beacon, .ampdu_action = & iwlagn_mac_ampdu_action, .get_survey = (int (*)(struct ieee80211_hw *, int , struct survey_info *))0, .rfkill_poll = (void (*)(struct ieee80211_hw *))0, .set_coverage_class = (void (*)(struct ieee80211_hw *, s16 ))0, .testmode_cmd = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ))0, .testmode_dump = (int (*)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ))0, .flush = & iwlagn_mac_flush, .channel_switch = & iwlagn_mac_channel_switch, .set_antenna = (int (*)(struct ieee80211_hw *, u32 , u32 ))0, .get_antenna = (int (*)(struct ieee80211_hw *, u32 *, u32 *))0, .remain_on_channel = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ))0, .cancel_remain_on_channel = (int (*)(struct ieee80211_hw *))0, .set_ringparam = (int (*)(struct ieee80211_hw *, u32 , u32 ))0, .get_ringparam = (void (*)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *))0, .tx_frames_pending = (bool (*)(struct ieee80211_hw *))0, .set_bitrate_mask = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask const *))0, .event_callback = & iwlagn_mac_event_callback, .allow_buffered_frames = (void (*)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ))0, .release_buffered_frames = (void (*)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ))0, .get_et_sset_count = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, int ))0, .get_et_stats = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *))0, .get_et_strings = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *))0, .mgd_prepare_tx = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .mgd_protect_tdls_discover = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .add_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *))0, .remove_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *))0, .change_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ))0, .assign_vif_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *))0, .unassign_vif_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *))0, .switch_vif_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ))0, .reconfig_complete = (void (*)(struct ieee80211_hw *, enum ieee80211_reconfig_type ))0, .ipv6_addr_change = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *))0, .channel_switch_beacon = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *))0, .pre_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *))0, .post_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .join_ibss = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .leave_ibss = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .get_expected_throughput = (u32 (*)(struct ieee80211_sta *))0, .get_txpower = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, int *))0, .tdls_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ))0, .tdls_cancel_channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .tdls_recv_channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *))0, .wake_tx_queue = (void (*)(struct ieee80211_hw *, struct ieee80211_txq *))0};

#line 1624  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/mac80211.c"
struct ieee80211_hw *iwl_alloc_all(void)
{
  struct iwl_priv *priv;
  struct iwl_op_mode *op_mode;
  struct ieee80211_hw *hw;
  
#line 1632 
  hw = ldv_ieee80211_alloc_hw_110(14456UL,& iwlagn_hw_ops);
  
#line 1634 
  if (hw == (struct ieee80211_hw *)0) 
#line 1635 
                                      goto out; else ;
  
#line 1637 
  op_mode = (struct iwl_op_mode *)hw->priv;
  
#line 1638 
  priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 1639 
  priv->hw = hw;
  out: 
#line 1641 
  ;
  
#line 1642 
  return hw;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
struct ieee80211_hw *ldv_emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1);


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_add_interface_5(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  int tmp;
  
#line 68 
  tmp = iwlagn_mac_add_interface(arg0,arg1);
  
#line 68 
  return tmp;
}


#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_sta_state_13(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_sta *arg2, enum ieee80211_sta_state arg3, enum ieee80211_sta_state arg4)
{
  int tmp;
  
#line 73 
  tmp = iwlagn_mac_sta_state(arg0,arg1,arg2,arg3,arg4);
  
#line 73 
  return tmp;
}


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_update_tkip_key_15(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_key_conf *arg2, struct ieee80211_sta *arg3, unsigned int arg4, unsigned short *arg5)
{
  
#line 78 
  iwlagn_mac_update_tkip_key(arg0,arg1,arg2,arg3,arg4,arg5);
  
#line 79 
  return;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_sta_notify_3(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, enum sta_notify_cmd arg2, struct ieee80211_sta *arg3)
{
  
#line 83 
  iwlagn_mac_sta_notify(arg0,arg1,arg2,arg3);
  
#line 84 
  return;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_suspend_22(struct ieee80211_hw *arg0, struct cfg80211_wowlan *arg1)
{
  int tmp;
  
#line 88 
  tmp = iwlagn_mac_suspend(arg0,arg1);
  
#line 88 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_configure_filter_11(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int *arg2, unsigned long long arg3)
{
  
#line 93 
  iwlagn_configure_filter(arg0,arg1,arg2,arg3);
  
#line 94 
  return;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_channel_switch_18(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_channel_switch *arg2)
{
  
#line 98 
  iwlagn_mac_channel_switch(arg0,arg1,arg2);
  
#line 99 
  return;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_ampdu_action_19(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, enum ieee80211_ampdu_mlme_action arg2, struct ieee80211_sta *arg3, unsigned short arg4, unsigned short *arg5, unsigned char arg6)
{
  int tmp;
  
#line 103 
  tmp = iwlagn_mac_ampdu_action(arg0,arg1,arg2,arg3,(unsigned short)((int)arg4),arg5,(unsigned char)((int)arg6));
  
#line 103 
  return tmp;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_set_rekey_data_21(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct cfg80211_gtk_rekey_data *arg2)
{
  
#line 108 
  iwlagn_mac_set_rekey_data(arg0,arg1,arg2);
  
#line 109 
  return;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_conf_tx_9(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned short arg2, struct ieee80211_tx_queue_params *arg3)
{
  int tmp;
  
#line 113 
  tmp = iwlagn_mac_conf_tx(arg0,arg1,(unsigned short)((int)arg2),(struct ieee80211_tx_queue_params const *)arg3);
  
#line 113 
  return tmp;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_change_interface_14(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, enum nl80211_iftype arg2, _Bool arg3)
{
  int tmp;
  
#line 118 
  tmp = iwlagn_mac_change_interface(arg0,arg1,arg2,(_Bool)((bool)((int)arg3) != 0));
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_hw_scan_12(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_scan_request *arg2)
{
  int tmp;
  
#line 123 
  tmp = iwlagn_mac_hw_scan(arg0,arg1,arg2);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_resume_23(struct ieee80211_hw *arg0)
{
  int tmp;
  
#line 128 
  tmp = iwlagn_mac_resume(arg0);
  
#line 128 
  return tmp;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_tx_last_beacon_6(struct ieee80211_hw *arg0)
{
  int tmp;
  
#line 133 
  tmp = iwlagn_mac_tx_last_beacon(arg0);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_set_wakeup_16(struct ieee80211_hw *arg0, _Bool arg1)
{
  
#line 138 
  iwlagn_mac_set_wakeup(arg0,(_Bool)((bool)((int)arg1) != 0));
  
#line 139 
  return;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_start_2(struct ieee80211_hw *arg0)
{
  int tmp;
  
#line 143 
  tmp = iwlagn_mac_start(arg0);
  
#line 143 
  return tmp;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_remove_interface_8(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  
#line 148 
  iwlagn_mac_remove_interface(arg0,arg1);
  
#line 149 
  return;
}


#line 152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_set_key_7(struct ieee80211_hw *arg0, enum set_key_cmd arg1, struct ieee80211_vif *arg2, struct ieee80211_sta *arg3, struct ieee80211_key_conf *arg4)
{
  int tmp;
  
#line 153 
  tmp = iwlagn_mac_set_key(arg0,arg1,arg2,arg3,arg4);
  
#line 153 
  return tmp;
}


#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
int ldv_emg_wrapper_iwlagn_mac_set_tim_4(struct ieee80211_hw *arg0, struct ieee80211_sta *arg1, _Bool arg2)
{
  int tmp;
  
#line 158 
  tmp = iwlagn_mac_set_tim(arg0,arg1,(_Bool)((bool)((int)arg2) != 0));
  
#line 158 
  return tmp;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_flush_17(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned int arg2, _Bool arg3)
{
  
#line 163 
  iwlagn_mac_flush(arg0,arg1,arg2,(_Bool)((bool)((int)arg3) != 0));
  
#line 164 
  return;
}


#line 167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_event_callback_20(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_event *arg2)
{
  
#line 168 
  iwlagn_mac_event_callback(arg0,arg1,(struct ieee80211_event const *)arg2);
  
#line 169 
  return;
}


#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_tx_10(struct ieee80211_hw *arg0, struct ieee80211_tx_control *arg1, struct sk_buff *arg2)
{
  
#line 173 
  iwlagn_mac_tx(arg0,arg1,arg2);
  
#line 174 
  return;
}


#line 177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
void ldv_emg_wrapper_iwlagn_mac_stop_24(struct ieee80211_hw *arg0)
{
  
#line 178 
  iwlagn_mac_stop(arg0);
  
#line 179 
  return;
}


#line 588  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 591 
  tmp = ldv_kzalloc(size,flags);
  
#line 591 
  return tmp;
}


#line 869  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_74_0(struct mutex *ldv_func_arg1)
{
  
#line 873 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 874 
  return;
}


#line 877  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_75_0(struct mutex *ldv_func_arg1)
{
  
#line 881 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 882 
  return;
}


#line 885  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_76_0(struct mutex *ldv_func_arg1)
{
  
#line 889 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 890 
  return;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_77_0(struct mutex *ldv_func_arg1)
{
  
#line 897 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 898 
  return;
}


#line 901  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_78_0(struct mutex *ldv_func_arg1)
{
  
#line 905 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 906 
  return;
}


#line 909  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_79_0(struct mutex *ldv_func_arg1)
{
  
#line 913 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 914 
  return;
}


#line 917  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_80(struct mutex *ldv_func_arg1)
{
  
#line 921 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 922 
  return;
}


#line 925  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_81(struct mutex *ldv_func_arg1)
{
  
#line 929 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 930 
  return;
}


#line 933  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_82(struct mutex *ldv_func_arg1)
{
  
#line 937 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 938 
  return;
}


#line 941  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_83(struct mutex *ldv_func_arg1)
{
  
#line 945 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 946 
  return;
}


#line 949  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_84_0(struct mutex *ldv_func_arg1)
{
  
#line 953 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 954 
  return;
}


#line 957  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_85_0(struct mutex *ldv_func_arg1)
{
  
#line 961 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 962 
  return;
}


#line 965  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_86(struct mutex *ldv_func_arg1)
{
  
#line 969 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 970 
  return;
}


#line 973  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_87(struct mutex *ldv_func_arg1)
{
  
#line 977 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 978 
  return;
}


#line 981  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_88(struct mutex *ldv_func_arg1)
{
  
#line 985 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 986 
  return;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_spin_lock_bh_89(spinlock_t *lock)
{
  
#line 993 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 995 
  spin_lock_bh_0(lock);
  
#line 996 
  return;
}


#line 999  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_spin_unlock_bh_90(spinlock_t *lock)
{
  
#line 1003 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1005 
  spin_unlock_bh_0(lock);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1)
{
  
#line 1013 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1014 
  return;
}


#line 1017  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1)
{
  
#line 1021 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1022 
  return;
}


#line 1025  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1)
{
  
#line 1029 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1030 
  return;
}


#line 1033  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_94(struct mutex *ldv_func_arg1)
{
  
#line 1037 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1038 
  return;
}


#line 1041  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_95(struct mutex *ldv_func_arg1)
{
  
#line 1045 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1046 
  return;
}


#line 1049  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_96(struct mutex *ldv_func_arg1)
{
  
#line 1053 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1054 
  return;
}


#line 1057  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_97(struct mutex *ldv_func_arg1)
{
  
#line 1061 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1062 
  return;
}


#line 1065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static bool ldv_queue_work_98(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1069 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1069 
  __retres = tmp != 0;
  
#line 1069 
  return __retres;
}


#line 1073  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static bool ldv_queue_work_99(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1077 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1077 
  __retres = tmp != 0;
  
#line 1077 
  return __retres;
}


#line 1081  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_100(struct mutex *ldv_func_arg1)
{
  
#line 1085 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1086 
  return;
}


#line 1089  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_101(struct mutex *ldv_func_arg1)
{
  
#line 1093 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1094 
  return;
}


#line 1097  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_102(struct mutex *ldv_func_arg1)
{
  
#line 1101 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1102 
  return;
}


#line 1105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_103(struct mutex *ldv_func_arg1)
{
  
#line 1109 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1110 
  return;
}


#line 1113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_104(struct mutex *ldv_func_arg1)
{
  
#line 1117 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1118 
  return;
}


#line 1121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_105(struct mutex *ldv_func_arg1)
{
  
#line 1125 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1126 
  return;
}


#line 1129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_106(struct mutex *ldv_func_arg1)
{
  
#line 1133 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1134 
  return;
}


#line 1137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_107(struct mutex *ldv_func_arg1)
{
  
#line 1141 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1142 
  return;
}


#line 1145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_lock_108(struct mutex *ldv_func_arg1)
{
  
#line 1149 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1150 
  return;
}


#line 1153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static void ldv_mutex_unlock_109(struct mutex *ldv_func_arg1)
{
  
#line 1157 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1158 
  return;
}


#line 1161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_mac80211.c.aux"
static struct ieee80211_hw *ldv_ieee80211_alloc_hw_110(size_t priv_data_len, struct ieee80211_ops const *ops)
{
  struct ieee80211_hw *tmp;
  
#line 1165 
  tmp = ldv_emg_ieee80211_alloc_hw(priv_data_len,(struct ieee80211_ops *)ops);
  
#line 1165 
  return tmp;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_85(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_87_0(struct mutex *ldv_func_arg1);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
void __compiletime_assert_87(void);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_86_0(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_88_0(struct mutex *ldv_func_arg1);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void delayed_work_timer_fn(unsigned long);


#line 447 
bool cancel_delayed_work(struct delayed_work *);


#line 448 
bool cancel_delayed_work_sync(struct delayed_work *);


#line 490 
static bool ldv_queue_work_74(struct workqueue_struct *wq, struct work_struct *work);


#line 494 
static bool ldv_queue_work_75(struct workqueue_struct *wq, struct work_struct *work);


#line 498 
static bool ldv_queue_work_76(struct workqueue_struct *wq, struct work_struct *work);


#line 502 
static bool ldv_queue_work_78(struct workqueue_struct *wq, struct work_struct *work);


#line 505 
static bool ldv_queue_delayed_work_77(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
void free_pages(unsigned long, unsigned int);


#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
void __compiletime_assert_117(void);


#line 142 
void __compiletime_assert_142(void);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_1(size_t size, gfp_t flags);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
void __compiletime_assert_490(void);


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_broadcast_addr(u8 *addr)
{
  
#line 235 
  memset((void *)addr,255,6UL);
  
#line 236 
  return;
}


#line 4516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
void ieee80211_scan_completed(struct ieee80211_hw *, bool);


#line 284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_free_resp(struct iwl_host_cmd *cmd)
{
  
#line 286 
  free_pages(cmd->_rx_page_addr,cmd->_rx_page_order);
  
#line 287 
  return;
}


#line 392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
__inline static u8 first_antenna(u8 mask)
{
  u8 __retres;
  
#line 394 
  if (((unsigned long)mask & 1UL) != 0UL) {
    
#line 395 
    __retres = (unsigned char)1U;
    
#line 395 
    goto return_label;
  }
  else ;
  
#line 396 
  if (((unsigned long)mask & 2UL) != 0UL) {
    
#line 397 
    __retres = (unsigned char)2U;
    
#line 397 
    goto return_label;
  }
  else ;
  
#line 398 
  __retres = (unsigned char)4U;
  return_label: 
#line 398 
                return __retres;
}


#line 274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
u8 const iwl_bcast_addr[6U];


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
__inline static int iwl_is_any_associated_0(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_rxon_context *ctx;
  
#line 942 
  ctx = & priv->contexts[0];
  
#line 942 
  goto ldv_52522;
  ldv_52521: 
#line 943 
  ;
  
#line 942 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    int tmp;
    
#line 943 
    tmp = iwl_is_associated_ctx(ctx);
    
#line 943 
    if (tmp != 0) {
      
#line 944 
      __retres = 1;
      
#line 944 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 942 
  ctx += 1;
  ldv_52522: 
#line 943 
  ;
  
#line 942 
  if (& priv->contexts[2] > ctx) 
#line 944 
                                 goto ldv_52521; else 
#line 947 
                                                      goto ldv_52523;
  ldv_52523: 
#line 948 
  ;
  
#line 945 
  __retres = 0;
  return_label: 
#line 945 
                return __retres;
}


#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
int iwlagn_set_pan_params(struct iwl_priv *priv);


#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static struct ieee80211_supported_band const *iwl_get_hw_mode(struct iwl_priv *priv, enum ieee80211_band band)
{
  struct ieee80211_supported_band const *__retres;
  
#line 192 
  __retres = (struct ieee80211_supported_band const *)((priv->hw)->wiphy)->bands[(unsigned int)band];
  
#line 192 
  return __retres;
}


#line 251 
void iwlagn_post_scan(struct iwl_priv *priv);


#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static bool iwl_advanced_bt_coexist(struct iwl_priv *priv)
{
  bool __retres;
  
#line 291 
  __retres = (_Bool)(((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) != 0);
  
#line 291 
  return __retres;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static int iwl_send_scan_abort(struct iwl_priv *priv)
{
  int __retres;
  int ret;
  __le32 *status;
  int tmp;
  
#line 60 
  struct iwl_host_cmd cmd = {.data = {(void const *)0, (void const *)0}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 2U, .len = {(unsigned short)0, (unsigned short)0}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)129U};
  
#line 69 
  tmp = constant_test_bit(3L,(unsigned long const volatile *)(& priv->status));
  
#line 69 
  if (tmp == 0) {
    
#line 72 
    __retres = -5;
    
#line 72 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 69 
    tmp_0 = constant_test_bit(9L,(unsigned long const volatile *)(& priv->status));
    
#line 69 
    if (tmp_0 == 0) {
      
#line 72 
      __retres = -5;
      
#line 72 
      goto return_label;
    }
    else {
      int tmp_1;
      
#line 70 
      tmp_1 = constant_test_bit(10L,(unsigned long const volatile *)(& priv->status));
      
#line 70 
      if (tmp_1 != 0) {
        
#line 72 
        __retres = -5;
        
#line 72 
        goto return_label;
      }
      else ;
    }
  }
  
#line 74 
  ret = iwl_dvm_send_cmd(priv,& cmd);
  
#line 75 
  if (ret != 0) {
    
#line 76 
    __retres = ret;
    
#line 76 
    goto return_label;
  }
  else ;
  
#line 78 
  status = (__le32 *)(& (cmd.resp_pkt)->data);
  
#line 79 
  if (*status != 1U) {
    {
      
#line 86 
      bool __cond = (_Bool)((int)*("SCAN_ABORT ret %d.\n" + 18UL) != 10);
      
#line 86 
      if ((int)__cond != 0) 
#line 86 
                            __compiletime_assert_87(); else ;
    }
    
#line 86 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_send_scan_abort","SCAN_ABORT ret %d.\n",*status);
    
#line 88 
    ret = -5;
  }
  else ;
  
#line 91 
  iwl_free_resp(& cmd);
  
#line 92 
  __retres = ret;
  return_label: 
#line 92 
                return __retres;
}


#line 99 
void __compiletime_assert_99(void);


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static void iwl_complete_scan(struct iwl_priv *priv, bool aborted)
{
  
#line 98 
  if (priv->scan_request != (struct cfg80211_scan_request *)0) {
    {
      
#line 99 
      bool __cond = (_Bool)((int)*("Complete scan in mac80211\n" + 25UL) != 10);
      
#line 99 
      if ((int)__cond != 0) 
#line 99 
                            __compiletime_assert_99(); else ;
    }
    
#line 99 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_complete_scan","Complete scan in mac80211\n");
    
#line 100 
    ieee80211_scan_completed(priv->hw,(_Bool)((bool)((int)aborted) != 0));
  }
  else ;
  
#line 103 
  priv->scan_type = IWL_SCAN_NORMAL;
  
#line 104 
  priv->scan_vif = (struct ieee80211_vif *)0;
  
#line 105 
  priv->scan_request = (struct cfg80211_scan_request *)0;
  
#line 106 
  return;
}


#line 123 
void __compiletime_assert_123(void);


#line 126 
void __compiletime_assert_126(void);


#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static void iwl_process_scan_complete(struct iwl_priv *priv)
{
  bool aborted;
  int tmp_1;
  int tmp_2_0;
  int tmp_3;
  int tmp_4;
  {
    int tmp_0;
    
#line 112 
    if (debug_locks != 0) {
      int tmp;
      
#line 112 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 112 
      if (tmp == 0) 
#line 112 
                    tmp_0 = 1; else 
#line 112 
                                    tmp_0 = 0;
    }
    else 
#line 112 
         tmp_0 = 0;
    
#line 112 
    int __ret_warn_on = tmp_0;
    
#line 112 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 112 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c",112); else ;
    
#line 112 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 114 
  tmp_1 = test_and_set_bit(12L,(unsigned long volatile *)(& priv->status));
  
#line 114 
  if (tmp_1 == 0) 
#line 115 
                  goto return_label; else ;
  {
    
#line 117 
    bool __cond = (_Bool)((int)*("Completed scan.\n" + 15UL) != 10);
    
#line 117 
    if ((int)__cond != 0) 
#line 117 
                          __compiletime_assert_117(); else ;
  }
  
#line 117 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_process_scan_complete","Completed scan.\n");
  
#line 119 
  cancel_delayed_work(& priv->scan_check);
  
#line 121 
  tmp_2_0 = test_and_set_bit(8L,(unsigned long volatile *)(& priv->status));
  
#line 121 
  aborted = (_Bool)(tmp_2_0 != 0);
  
#line 122 
  if ((int)aborted != 0) {
    {
      
#line 123 
      bool __cond_0 = (_Bool)((int)*("Aborted scan completed.\n" + 23UL) != 10);
      
#line 123 
      if ((int)__cond_0 != 0) 
#line 123 
                              __compiletime_assert_123(); else ;
    }
    
#line 123 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_process_scan_complete","Aborted scan completed.\n");
  }
  else ;
  
#line 125 
  tmp_3 = test_and_set_bit(7L,(unsigned long volatile *)(& priv->status));
  
#line 125 
  if (tmp_3 == 0) {
    {
      
#line 126 
      bool __cond_1 = (_Bool)((int)*("Scan already completed.\n" + 23UL) != 10);
      
#line 126 
      if ((int)__cond_1 != 0) 
#line 126 
                              __compiletime_assert_126(); else ;
    }
    
#line 126 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_process_scan_complete","Scan already completed.\n");
    
#line 127 
    goto out_settings;
  }
  else ;
  
#line 130 
  if (priv->scan_type != (unsigned int)IWL_SCAN_NORMAL && ! aborted) {
    int err;
    
#line 134 
    if (priv->scan_request == (struct cfg80211_scan_request *)0) 
#line 135 
                                                                 goto out_complete; else ;
    
#line 138 
    err = iwl_scan_initiate(priv,priv->scan_vif,(enum iwl_scan_type)IWL_SCAN_NORMAL,((priv->scan_request)->channels[0])->band);
    
#line 140 
    if (err != 0) {
      {
        
#line 141 
        bool __cond_2 = (_Bool)((int)*("failed to initiate pending scan: %d\n" + 35UL) != 10);
        
#line 141 
        if ((int)__cond_2 != 0) 
#line 141 
                                __compiletime_assert_142(); else ;
      }
      
#line 141 
      __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_process_scan_complete","failed to initiate pending scan: %d\n",err);
      
#line 143 
      aborted = (_Bool)1;
      
#line 144 
      goto out_complete;
    }
    else ;
    
#line 147 
    goto return_label;
  }
  else ;
  out_complete: 
#line 150 
  ;
  
#line 151 
  iwl_complete_scan(priv,(_Bool)((bool)((int)aborted) != 0));
  out_settings: 
#line 153 
  ;
  
#line 155 
  tmp_4 = iwl_is_ready_rf(priv);
  
#line 155 
  if (tmp_4 == 0) 
#line 156 
                  goto return_label; else ;
  
#line 158 
  iwlagn_post_scan(priv);
  return_label: 
#line 159 
                return;
}


#line 166 
void __compiletime_assert_166(void);


#line 170 
void __compiletime_assert_170(void);


#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
void iwl_force_scan_end(struct iwl_priv *priv)
{
  int tmp_1;
  {
    int tmp_0;
    
#line 163 
    if (debug_locks != 0) {
      int tmp;
      
#line 163 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 163 
      if (tmp == 0) 
#line 163 
                    tmp_0 = 1; else 
#line 163 
                                    tmp_0 = 0;
    }
    else 
#line 163 
         tmp_0 = 0;
    
#line 163 
    int __ret_warn_on = tmp_0;
    
#line 163 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 163 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c",163); else ;
    
#line 163 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 165 
  tmp_1 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
  
#line 165 
  if (tmp_1 == 0) {
    {
      
#line 166 
      bool __cond = (_Bool)((int)*("Forcing scan end while not scanning\n" + 35UL) != 10);
      
#line 166 
      if ((int)__cond != 0) 
#line 166 
                            __compiletime_assert_166(); else ;
    }
    
#line 166 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_force_scan_end","Forcing scan end while not scanning\n");
    
#line 167 
    goto return_label;
  }
  else ;
  {
    
#line 170 
    bool __cond_0 = (_Bool)((int)*("Forcing scan end\n" + 16UL) != 10);
    
#line 170 
    if ((int)__cond_0 != 0) 
#line 170 
                            __compiletime_assert_170(); else ;
  }
  
#line 170 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_force_scan_end","Forcing scan end\n");
  
#line 171 
  set_bit(7L,(unsigned long volatile *)(& priv->status));
  
#line 172 
  set_bit(9L,(unsigned long volatile *)(& priv->status));
  
#line 173 
  set_bit(8L,(unsigned long volatile *)(& priv->status));
  
#line 174 
  set_bit(12L,(unsigned long volatile *)(& priv->status));
  
#line 175 
  iwl_complete_scan(priv,(_Bool)1);
  return_label: 
#line 176 
                return;
}


#line 185 
void __compiletime_assert_185(void);


#line 190 
void __compiletime_assert_190(void);


#line 196 
void __compiletime_assert_196(void);


#line 199 
void __compiletime_assert_199(void);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static void iwl_do_scan_abort(struct iwl_priv *priv)
{
  int ret;
  int tmp_1;
  int tmp_2_0;
  {
    int tmp_0;
    
#line 182 
    if (debug_locks != 0) {
      int tmp;
      
#line 182 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 182 
      if (tmp == 0) 
#line 182 
                    tmp_0 = 1; else 
#line 182 
                                    tmp_0 = 0;
    }
    else 
#line 182 
         tmp_0 = 0;
    
#line 182 
    int __ret_warn_on = tmp_0;
    
#line 182 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 182 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c",182); else ;
    
#line 182 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 184 
  tmp_1 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
  
#line 184 
  if (tmp_1 == 0) {
    {
      
#line 185 
      bool __cond = (_Bool)((int)*("Not performing scan to abort\n" + 28UL) != 10);
      
#line 185 
      if ((int)__cond != 0) 
#line 185 
                            __compiletime_assert_185(); else ;
    }
    
#line 185 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_do_scan_abort","Not performing scan to abort\n");
    
#line 186 
    goto return_label;
  }
  else ;
  
#line 189 
  tmp_2_0 = test_and_set_bit(8L,(unsigned long volatile *)(& priv->status));
  
#line 189 
  if (tmp_2_0 != 0) {
    {
      
#line 190 
      bool __cond_0 = (_Bool)((int)*("Scan abort in progress\n" + 22UL) != 10);
      
#line 190 
      if ((int)__cond_0 != 0) 
#line 190 
                              __compiletime_assert_190(); else ;
    }
    
#line 190 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_do_scan_abort","Scan abort in progress\n");
    
#line 191 
    goto return_label;
  }
  else ;
  
#line 194 
  ret = iwl_send_scan_abort(priv);
  
#line 195 
  if (ret != 0) {
    {
      
#line 196 
      bool __cond_1 = (_Bool)((int)*("Send scan abort failed %d\n" + 25UL) != 10);
      
#line 196 
      if ((int)__cond_1 != 0) 
#line 196 
                              __compiletime_assert_196(); else ;
    }
    
#line 196 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_do_scan_abort","Send scan abort failed %d\n",ret);
    
#line 197 
    iwl_force_scan_end(priv);
  }
  else {
    {
      
#line 199 
      bool __cond_2 = (_Bool)((int)*("Successfully send scan abort\n" + 28UL) != 10);
      
#line 199 
      if ((int)__cond_2 != 0) 
#line 199 
                              __compiletime_assert_199(); else ;
    }
    
#line 199 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_do_scan_abort","Successfully send scan abort\n");
  }
  return_label: 
#line 201 
                return;
}


#line 207 
void __compiletime_assert_207(void);


#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
int iwl_scan_cancel(struct iwl_priv *priv)
{
  int __retres;
  {
    
#line 207 
    bool __cond = (_Bool)((int)*("Queuing abort scan\n" + 18UL) != 10);
    
#line 207 
    if ((int)__cond != 0) 
#line 207 
                          __compiletime_assert_207(); else ;
  }
  
#line 207 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_scan_cancel","Queuing abort scan\n");
  
#line 208 
  ldv_queue_work_74(priv->workqueue,& priv->abort_scan);
  
#line 209 
  __retres = 0;
  
#line 209 
  return __retres;
}


#line 223 
void __compiletime_assert_223(void);


#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
void iwl_scan_cancel_timeout(struct iwl_priv *priv, unsigned long ms)
{
  unsigned long tmp;
  int tmp_2_0;
  int tmp_3;
  
#line 219 
  tmp = msecs_to_jiffies((unsigned int)ms);
  
#line 219 
  unsigned long timeout = tmp + jiffies;
  {
    int tmp_1;
    
#line 221 
    if (debug_locks != 0) {
      int tmp_0;
      
#line 221 
      tmp_0 = lock_is_held(& priv->mutex.dep_map);
      
#line 221 
      if (tmp_0 == 0) 
#line 221 
                      tmp_1 = 1; else 
#line 221 
                                      tmp_1 = 0;
    }
    else 
#line 221 
         tmp_1 = 0;
    
#line 221 
    int __ret_warn_on = tmp_1;
    
#line 221 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 221 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c",221); else ;
    
#line 221 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  {
    
#line 223 
    bool __cond = (_Bool)((int)*("Scan cancel timeout\n" + 19UL) != 10);
    
#line 223 
    if ((int)__cond != 0) 
#line 223 
                          __compiletime_assert_223(); else ;
  }
  
#line 223 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_scan_cancel_timeout","Scan cancel timeout\n");
  
#line 225 
  iwl_do_scan_abort(priv);
  
#line 227 
  goto ldv_53036;
  ldv_53035: 
#line 228 
  ;
  
#line 228 
  tmp_2_0 = constant_test_bit(9L,(unsigned long const volatile *)(& priv->status));
  
#line 228 
  if (tmp_2_0 == 0) 
#line 229 
                    goto finished; else ;
  
#line 230 
  msleep(20U);
  ldv_53036: 
#line 231 
  ;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
#line 227 
    tmp_3 = 1;
  }
  
#line 227 
  if (tmp_3 != 0) {
    int tmp_4;
    {
      unsigned long __dummy_0;
      unsigned long volatile __dummy2_0;
      
#line 227 
      tmp_4 = 1;
    }
    
#line 227 
    if (tmp_4 != 0) {
      
#line 227 
      if ((long)(timeout - jiffies) >= 0L) 
#line 229 
                                           goto ldv_53035; else 
#line 232 
                                                                goto ldv_53037;
    }
    else 
#line 232 
         goto ldv_53037;
  }
  else 
#line 232 
       goto ldv_53037;
  ldv_53037: 
#line 233 
  ;
  
#line 233 
  goto return_label;
  finished: 
#line 235 
  ;
  
#line 246 
  iwl_process_scan_complete(priv);
  return_label: 
#line 247 
                return;
}


#line 258 
void __compiletime_assert_258(void);


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static int iwl_rx_reply_scan(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  
#line 255 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 256 
  struct iwl_scanreq_notification *notif = (struct iwl_scanreq_notification *)(& pkt->data);
  {
    
#line 258 
    bool __cond = (_Bool)((int)*("Scan request status = 0x%x\n" + 26UL) != 10);
    
#line 258 
    if ((int)__cond != 0) 
#line 258 
                          __compiletime_assert_258(); else ;
  }
  
#line 258 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_rx_reply_scan","Scan request status = 0x%x\n",notif->status);
  
#line 260 
  __retres = 0;
  
#line 260 
  return __retres;
}


#line 272 
void __compiletime_assert_279(void);


#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static int iwl_rx_scan_start_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  char *tmp_0;
  
#line 268 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 269 
  struct iwl_scanstart_notification *notif = (struct iwl_scanstart_notification *)(& pkt->data);
  
#line 271 
  priv->scan_start_tsf = (unsigned long)notif->tsf_low;
  {
    
#line 272 
    bool __cond = (_Bool)((int)*("Scan start: " + 67UL) != 10);
    
#line 272 
    if ((int)__cond != 0) 
#line 272 
                          __compiletime_assert_279(); else ;
  }
  
#line 272 
  ;
  
#line 272 
  ;
  
#line 272 
  ;
  
#line 272 
  ;
  
#line 272 
  if ((unsigned int)notif->band != 0U) 
#line 272 
                                       tmp_0 = (char *)"bg"; else 
#line 272 
                                                                  tmp_0 = (char *)"a";
  
#line 272 
  ;
  
#line 272 
  ;
  
#line 272 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_rx_scan_start_notif","Scan start: ",(int)notif->channel,tmp_0,notif->tsf_high,notif->tsf_low,notif->status,notif->beacon_timer);
  
#line 281 
  __retres = 0;
  
#line 281 
  return __retres;
}


#line 293 
void __compiletime_assert_304(void);


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static int iwl_rx_scan_results_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  char *tmp_0;
  
#line 290 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 291 
  struct iwl_scanresults_notification *notif = (struct iwl_scanresults_notification *)(& pkt->data);
  {
    
#line 293 
    bool __cond = (_Bool)((int)*("Scan ch.res: " + 87UL) != 10);
    
#line 293 
    if ((int)__cond != 0) 
#line 293 
                          __compiletime_assert_304(); else ;
  }
  
#line 293 
  ;
  
#line 293 
  ;
  
#line 293 
  ;
  
#line 293 
  ;
  
#line 293 
  ;
  
#line 293 
  ;
  
#line 293 
  if ((unsigned int)notif->band != 0U) 
#line 293 
                                       tmp_0 = (char *)"bg"; else 
#line 293 
                                                                  tmp_0 = (char *)"a";
  
#line 293 
  ;
  
#line 293 
  ;
  
#line 293 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_rx_scan_results_notif","Scan ch.res: ",(int)notif->channel,tmp_0,(int)notif->probe_status,(int)notif->num_probe_not_sent,notif->tsf_high,notif->tsf_low,notif->statistics[0],(unsigned long)notif->tsf_low - priv->scan_start_tsf);
  
#line 306 
  __retres = 0;
  
#line 306 
  return __retres;
}


#line 317 
void __compiletime_assert_320(void);


#line 322 
void __compiletime_assert_324(void);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static int iwl_rx_scan_complete_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  unsigned int tmp_0;
  char *tmp_1;
  
#line 314 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 315 
  struct iwl_scancomplete_notification *scan_notif = (struct iwl_scancomplete_notification *)(& pkt->data);
  {
    
#line 317 
    bool __cond = (_Bool)((int)*("Scan complete: %d channels (TSF 0x%08X:%08X) - %d\n" + 49UL) != 10);
    
#line 317 
    if ((int)__cond != 0) 
#line 317 
                          __compiletime_assert_320(); else ;
  }
  
#line 317 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_rx_scan_complete_notif","Scan complete: %d channels (TSF 0x%08X:%08X) - %d\n",(int)scan_notif->scanned_channels,scan_notif->tsf_low,scan_notif->tsf_high,(int)scan_notif->status);
  {
    
#line 322 
    bool __cond_0 = (_Bool)((int)*("Scan on %sGHz took %dms\n" + 23UL) != 10);
    
#line 322 
    if ((int)__cond_0 != 0) 
#line 322 
                            __compiletime_assert_324(); else ;
  }
  
#line 322 
  tmp_0 = jiffies_to_msecs(jiffies - priv->scan_start);
  
#line 322 
  if (priv->scan_band == (unsigned int)IEEE80211_BAND_2GHZ) 
#line 322 
                                                            tmp_1 = (char *)"2.4"; else 
                                                                    
#line 322 
                                                                    tmp_1 = (char *)"5.2";
  
#line 322 
  ;
  
#line 322 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_rx_scan_complete_notif","Scan on %sGHz took %dms\n",tmp_1,tmp_0);
  
#line 334 
  set_bit(12L,(unsigned long volatile *)(& priv->status));
  
#line 335 
  set_bit(9L,(unsigned long volatile *)(& priv->status));
  
#line 336 
  ldv_queue_work_75(priv->workqueue,& priv->scan_completed);
  
#line 338 
  if (priv->iw_mode != (unsigned int)NL80211_IFTYPE_ADHOC) {
    bool tmp_2;
    
#line 338 
    tmp_2 = iwl_advanced_bt_coexist(priv);
    
#line 338 
    if ((int)tmp_2 != 0) {
      
#line 339 
      if ((int)priv->bt_status != (int)scan_notif->bt_status) {
        
#line 341 
        if ((unsigned int)scan_notif->bt_status != 0U) {
          
#line 343 
          if (! priv->bt_ch_announce) 
#line 344 
                                      priv->bt_traffic_load = (unsigned char)2U; else ;
        }
        else 
#line 352 
             priv->bt_traffic_load = (unsigned char)0U;
        
#line 355 
        priv->bt_status = scan_notif->bt_status;
        
#line 356 
        ldv_queue_work_76(priv->workqueue,& priv->bt_traffic_change_work);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 359 
  __retres = 0;
  
#line 359 
  return __retres;
}


#line 362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
void iwl_setup_rx_scan_handlers(struct iwl_priv *priv)
{
  
#line 365 
  priv->rx_handlers[128] = & iwl_rx_reply_scan;
  
#line 366 
  priv->rx_handlers[130] = & iwl_rx_scan_start_notif;
  
#line 367 
  priv->rx_handlers[131] = & iwl_rx_scan_results_notif;
  
#line 369 
  priv->rx_handlers[132] = & iwl_rx_scan_complete_notif;
  
#line 371 
  return;
}


#line 373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static u16 iwl_get_active_dwell_time(struct iwl_priv *priv, enum ieee80211_band band, u8 n_probes)
{
  u16 __retres;
  
#line 376 
  if (band == (unsigned int)IEEE80211_BAND_5GHZ) {
    
#line 377 
    __retres = (unsigned short)((unsigned int)((unsigned short)((int)n_probes + 11)) * 2U);
    
#line 377 
    goto return_label;
  }
  else {
    
#line 380 
    __retres = (unsigned short)((unsigned int)((unsigned short)((int)n_probes + 1)) * 3U + 30U);
    
#line 380 
    goto return_label;
  }
  return_label: 
#line 376 
                return __retres;
}


#line 391 
void __compiletime_assert_391(void);


#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static u16 iwl_limit_dwell(struct iwl_priv *priv, u16 dwell_time)
{
  u16 __retres;
  struct iwl_rxon_context *ctx;
  u16 limit;
  
#line 387 
  int limits[2U] = {};
  
#line 388 
  int n_active = 0;
  {
    
#line 391 
    bool __cond = (_Bool)0;
    
#line 391 
    if ((int)__cond != 0) 
#line 391 
                          __compiletime_assert_391(); else ;
  }
  
#line 401 
  ctx = & priv->contexts[0];
  
#line 401 
  goto ldv_53118;
  ldv_53117: 
#line 402 
  ;
  
#line 401 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    int tmp_0;
    int tmp_1;
    
#line 402 
    switch ((int)ctx->staging.dev_type) {
      int tmp;
      case 9: 
#line 403 
      ;
      
#line 405 
      goto ldv_53111;
      case 3: 
#line 406 
      ;
      default: 
#line 407 
      ;
      
#line 409 
      tmp = iwl_is_associated_ctx(ctx);
      
#line 409 
      if (tmp == 0) 
#line 410 
                    goto ldv_53111; else ;
      
#line 411 
      goto ldv_53114;
      case 7: 
#line 412 
      ;
      case 8: 
#line 413 
      ;
      
#line 418 
      goto ldv_53114;
    }
    ldv_53114: 
#line 421 
    ;
    
#line 421 
    tmp_0 = n_active;
    
#line 421 
    n_active += 1;
    
#line 421 
    tmp_1 = ctx->beacon_int != 0;
    
#line 421 
    if (tmp_1) ; else 
#line 421 
                      tmp_1 = 100;
    
#line 421 
    limits[tmp_0] = tmp_1;
  }
  else ;
  ldv_53111: 
#line 423 
  ;
  
#line 401 
  ctx += 1;
  ldv_53118: 
#line 402 
  ;
  
#line 401 
  if (& priv->contexts[2] > ctx) 
#line 403 
                                 goto ldv_53117; else 
#line 406 
                                                      goto ldv_53119;
  ldv_53119: 
#line 407 
  ;
  
#line 424 
  switch (n_active) {
    int tmp_3;
    int tmp_5;
    case 0: 
#line 425 
    ;
    
#line 426 
    __retres = dwell_time;
    
#line 426 
    goto return_label;
    case 2: 
#line 427 
    ;
    
#line 428 
    limit = (unsigned short)((unsigned int)((unsigned short)((limits[1] * 98) / 100)) + 65526U);
    
#line 429 
    limit = (unsigned short)((unsigned int)limit / 2U);
    {
      int tmp_2;
      
#line 430 
      u16 _min1 = limit;
      
#line 430 
      u16 _min2 = dwell_time;
      
#line 430 
      if ((int)_min1 < (int)_min2) 
#line 430 
                                   tmp_2 = (int)_min1; else 
#line 430 
                                                            tmp_2 = (int)_min2;
      
#line 430 
      tmp_3 = tmp_2;
    }
    
#line 430 
    dwell_time = (unsigned short)tmp_3;
    case 1: 
#line 432 
    ;
    
#line 433 
    limit = (unsigned short)((unsigned int)((unsigned short)((limits[0] * 98) / 100)) + 65526U);
    
#line 434 
    limit = (unsigned short)((int)limit / n_active);
    {
      int tmp_4;
      
#line 435 
      u16 _min1_0 = limit;
      
#line 435 
      u16 _min2_0 = dwell_time;
      
#line 435 
      if ((int)_min1_0 < (int)_min2_0) 
#line 435 
                                       tmp_4 = (int)_min1_0; else 
#line 435 
                                                                  tmp_4 = (int)_min2_0;
      
#line 435 
      tmp_5 = tmp_4;
    }
    
#line 435 
    __retres = (unsigned short)tmp_5;
    
#line 435 
    goto return_label;
    default: 
#line 436 
    ;
    {
      bool __warned;
      
#line 437 
      int __ret_warn_once = 1;
      
#line 437 
      if ((long)(__ret_warn_once != 0) != 0L) {
        int tmp_6;
        {
          
#line 437 
          int __ret_warn_on = ! __warned;
          
#line 437 
          if ((long)(__ret_warn_on != 0) != 0L) 
#line 437 
                                                warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c",437); else ;
          
#line 437 
          tmp_6 = (long)(__ret_warn_on != 0);
        }
        
#line 437 
        if ((long)tmp_6 != 0L) 
#line 437 
                               __warned = (_Bool)1; else ;
      }
      else ;
      
#line 437 
      long tmp_7 = (long)(__ret_warn_once != 0);
    }
    
#line 438 
    __retres = dwell_time;
    
#line 438 
    goto return_label;
  }
  return_label: 
#line 424 
                return __retres;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static u16 iwl_get_passive_dwell_time(struct iwl_priv *priv, enum ieee80211_band band)
{
  unsigned int tmp;
  u16 tmp_0;
  
#line 445 
  if (band == (unsigned int)IEEE80211_BAND_2GHZ) 
#line 445 
                                                 tmp = 120U; else 
#line 445 
                                                                  tmp = 110U;
  
#line 445 
  u16 passive = (unsigned short)tmp;
  
#line 449 
  tmp_0 = iwl_limit_dwell(priv,(unsigned short)((int)passive));
  
#line 449 
  return tmp_0;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static u8 iwl_get_single_channel_number(struct iwl_priv *priv, enum ieee80211_band band)
{
  u8 __retres;
  struct iwl_rxon_context *ctx;
  int i;
  
#line 456 
  struct ieee80211_supported_band *sband = ((priv->hw)->wiphy)->bands[(unsigned int)band];
  
#line 460 
  i = 0;
  
#line 460 
  goto ldv_53153;
  ldv_53152: 
#line 461 
  ;
  {
    
#line 461 
    bool busy = (_Bool)0;
    
#line 463 
    ctx = & priv->contexts[0];
    
#line 463 
    goto ldv_53150;
    ldv_53149: 
#line 464 
    ;
    
#line 463 
    if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
      
#line 464 
      busy = (_Bool)((int)(sband->channels + i)->hw_value == (int)ctx->staging.channel);
      
#line 466 
      if ((int)busy != 0) 
#line 467 
                          goto ldv_53148; else ;
    }
    else ;
    
#line 463 
    ctx += 1;
    ldv_53150: 
#line 464 
    ;
    
#line 463 
    if (& priv->contexts[2] > ctx) 
#line 465 
                                   goto ldv_53149; else 
#line 468 
                                                        goto ldv_53148;
    ldv_53148: 
#line 469 
    ;
    
#line 470 
    if ((int)busy != 0) 
#line 471 
                        goto ldv_53151; else ;
    
#line 473 
    if (((sband->channels + i)->flags & 1U) == 0U) {
      
#line 474 
      __retres = (unsigned char)(sband->channels + i)->hw_value;
      
#line 474 
      goto return_label;
    }
    else ;
  }
  ldv_53151: 
#line 476 
  ;
  
#line 460 
  i += 1;
  ldv_53153: 
#line 461 
  ;
  
#line 460 
  if (sband->n_channels > i) 
#line 462 
                             goto ldv_53152; else 
#line 465 
                                                  goto ldv_53154;
  ldv_53154: 
#line 466 
  ;
  
#line 477 
  __retres = (unsigned char)0U;
  return_label: 
#line 477 
                return __retres;
}


#line 511 
void __compiletime_assert_511(void);


#line 480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static int iwl_get_channel_for_reset_scan(struct iwl_priv *priv, struct ieee80211_vif *vif, enum ieee80211_band band, struct iwl_scan_channel *scan_ch)
{
  int __retres;
  struct ieee80211_supported_band const *sband;
  u16 channel;
  u8 tmp;
  
#line 488 
  sband = iwl_get_hw_mode(priv,band);
  
#line 489 
  if (sband == (struct ieee80211_supported_band const *)0) {
    {
      
#line 490 
      bool __cond = (_Bool)((int)*("invalid band\n" + 12UL) != 10);
      
#line 490 
      if ((int)__cond != 0) 
#line 490 
                            __compiletime_assert_490(); else ;
    }
    
#line 490 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"invalid band\n");
    
#line 491 
    __retres = 0;
    
#line 491 
    goto return_label;
  }
  else ;
  
#line 494 
  tmp = iwl_get_single_channel_number(priv,band);
  
#line 494 
  channel = (unsigned short)tmp;
  
#line 495 
  if ((unsigned int)channel != 0U) {
    
#line 496 
    scan_ch->channel = channel;
    
#line 497 
    scan_ch->type = 0U;
    
#line 498 
    scan_ch->active_dwell = (unsigned short)5U;
    
#line 500 
    scan_ch->passive_dwell = (unsigned short)5U;
    
#line 503 
    scan_ch->dsp_atten = (unsigned char)110U;
    
#line 504 
    if (band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 505 
                                                   scan_ch->tx_gain = (unsigned char)59U; else 
                                                                    
#line 507 
                                                                    scan_ch->tx_gain = (unsigned char)40U;
    
#line 508 
    __retres = 1;
    
#line 508 
    goto return_label;
  }
  else ;
  {
    
#line 511 
    bool __cond_0 = (_Bool)((int)*("no valid channel found\n" + 22UL) != 10);
    
#line 511 
    if ((int)__cond_0 != 0) 
#line 511 
                            __compiletime_assert_511(); else ;
  }
  
#line 511 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"no valid channel found\n");
  
#line 512 
  __retres = 0;
  return_label: 
#line 512 
                return __retres;
}


#line 570 
void __compiletime_assert_575(void);


#line 581 
void __compiletime_assert_581(void);


#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static int iwl_get_channels_for_scan(struct iwl_priv *priv, struct ieee80211_vif *vif, enum ieee80211_band band, u8 is_active, u8 n_probes, struct iwl_scan_channel *scan_ch)
{
  int __retres;
  struct ieee80211_channel *chan;
  struct ieee80211_supported_band const *sband;
  int added;
  int i;
  u16 channel;
  int tmp;
  char *tmp_0;
  
#line 523 
  u16 passive_dwell = (unsigned short)0U;
  
#line 524 
  u16 active_dwell = (unsigned short)0U;
  
#line 528 
  sband = iwl_get_hw_mode(priv,band);
  
#line 529 
  if (sband == (struct ieee80211_supported_band const *)0) {
    
#line 530 
    __retres = 0;
    
#line 530 
    goto return_label;
  }
  else ;
  
#line 532 
  active_dwell = iwl_get_active_dwell_time(priv,band,(unsigned char)((int)n_probes));
  
#line 533 
  passive_dwell = iwl_get_passive_dwell_time(priv,band);
  
#line 535 
  if ((int)passive_dwell <= (int)active_dwell) 
#line 536 
                                               passive_dwell = (unsigned short)((unsigned int)active_dwell + 1U); else ;
  
#line 538 
  i = 0;
  
#line 538 
  added = 0;
  
#line 538 
  goto ldv_53193;
  ldv_53192: 
#line 539 
  ;
  
#line 539 
  chan = (priv->scan_request)->channels[i];
  
#line 541 
  if (chan->band != band) 
#line 542 
                          goto ldv_53186; else ;
  
#line 544 
  channel = chan->hw_value;
  
#line 545 
  scan_ch->channel = channel;
  
#line 547 
  if ((unsigned int)is_active == 0U || (chan->flags & 2U) != 0U) 
#line 548 
                                                                 scan_ch->type = 0U; else 
                                                                    
#line 550 
                                                                    scan_ch->type = 1U;
  
#line 552 
  if ((unsigned int)n_probes != 0U) 
#line 553 
                                    scan_ch->type |= (unsigned int)(1UL << (int)n_probes) | ((unsigned int)(1UL << (int)n_probes) + 4294967294U); else ;
  
#line 555 
  scan_ch->active_dwell = active_dwell;
  
#line 556 
  scan_ch->passive_dwell = passive_dwell;
  
#line 559 
  scan_ch->dsp_atten = (unsigned char)110U;
  
#line 565 
  if (band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 566 
                                                 scan_ch->tx_gain = (unsigned char)59U; else 
                                                                    
#line 568 
                                                                    scan_ch->tx_gain = (unsigned char)40U;
  {
    
#line 570 
    bool __cond = (_Bool)((int)*("Scanning ch=%d prob=0x%X [%s %d]\n" + 32UL) != 10);
    
#line 570 
    if ((int)__cond != 0) 
#line 570 
                          __compiletime_assert_575(); else ;
  }
  
#line 570 
  if ((scan_ch->type & 1U) != 0U) 
#line 570 
                                  tmp = (int)active_dwell; else 
#line 570 
                                                                tmp = (int)passive_dwell;
  
#line 570 
  if ((scan_ch->type & 1U) != 0U) 
#line 570 
                                  tmp_0 = (char *)"ACTIVE"; else 
#line 570 
                                                                 tmp_0 = (char *)"PASSIVE";
  
#line 570 
  ;
  
#line 570 
  ;
  
#line 570 
  ;
  
#line 570 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_get_channels_for_scan","Scanning ch=%d prob=0x%X [%s %d]\n",(int)channel,scan_ch->type,tmp_0,tmp);
  
#line 577 
  scan_ch += 1;
  
#line 578 
  added += 1;
  ldv_53186: 
#line 579 
  ;
  
#line 538 
  i += 1;
  ldv_53193: 
#line 539 
  ;
  
#line 538 
  if ((priv->scan_request)->n_channels > (unsigned int)i) 
#line 540 
                                                          goto ldv_53192; else 
                                                                    
#line 543 
                                                                    goto ldv_53194;
  ldv_53194: 
#line 544 
  ;
  {
    
#line 581 
    bool __cond_0 = (_Bool)((int)*("total channels to scan %d\n" + 25UL) != 10);
    
#line 581 
    if ((int)__cond_0 != 0) 
#line 581 
                            __compiletime_assert_581(); else ;
  }
  
#line 581 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_get_channels_for_scan","total channels to scan %d\n",added);
  
#line 582 
  __retres = added;
  return_label: 
#line 582 
                return __retres;
}


#line 589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static u16 iwl_fill_probe_req(struct ieee80211_mgmt *frame, u8 const *ta, u8 const *ies, int ie_len, u8 const *ssid, u8 ssid_len, int left)
{
  u16 __retres;
  u8 *tmp;
  u8 *tmp_0;
  int tmp_1;
  
#line 593 
  int len = 0;
  
#line 594 
  u8 *pos = (u8 *)0U;
  
#line 598 
  left += -24;
  
#line 599 
  if (left < 0) {
    
#line 600 
    __retres = (unsigned short)0U;
    
#line 600 
    goto return_label;
  }
  else ;
  
#line 602 
  frame->frame_control = (unsigned short)64U;
  
#line 603 
  eth_broadcast_addr((u8 *)(& frame->da));
  
#line 604 
  memcpy((void *)(& frame->sa),(void const *)ta,6UL);
  
#line 605 
  eth_broadcast_addr((u8 *)(& frame->bssid));
  
#line 606 
  frame->seq_ctrl = (unsigned short)0U;
  
#line 608 
  len += 24;
  
#line 611 
  pos = & frame->u.probe_req.variable[0];
  
#line 614 
  left -= (int)ssid_len + 2;
  
#line 615 
  if (left < 0) {
    
#line 616 
    __retres = (unsigned short)0U;
    
#line 616 
    goto return_label;
  }
  else ;
  
#line 617 
  tmp = pos;
  
#line 617 
  pos += 1;
  
#line 617 
  *tmp = (unsigned char)0U;
  
#line 618 
  tmp_0 = pos;
  
#line 618 
  pos += 1;
  
#line 618 
  *tmp_0 = ssid_len;
  
#line 619 
  if (ssid != (u8 const *)0U && (unsigned int)ssid_len != 0U) {
    
#line 620 
    memcpy((void *)pos,(void const *)ssid,(unsigned long)ssid_len);
    
#line 621 
    pos += (int)ssid_len;
  }
  else ;
  
#line 624 
  len = ((int)ssid_len + 2) + len;
  {
    
#line 626 
    int __ret_warn_on = left < ie_len;
    
#line 626 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 626 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c",626); else ;
    
#line 626 
    tmp_1 = (long)(__ret_warn_on != 0);
  }
  
#line 626 
  if ((long)tmp_1 != 0L) {
    
#line 627 
    __retres = (unsigned short)len;
    
#line 627 
    goto return_label;
  }
  else ;
  
#line 629 
  if (ies != (u8 const *)0U && ie_len != 0) {
    
#line 630 
    memcpy((void *)pos,(void const *)ies,(unsigned long)ie_len);
    
#line 631 
    len += ie_len;
  }
  else ;
  
#line 634 
  __retres = (unsigned short)len;
  return_label: 
#line 634 
                return __retres;
}


#line 676 
void __compiletime_assert_677(void);


#line 693 
void __compiletime_assert_693(void);


#line 712 
void __compiletime_assert_713(void);


#line 718 
void __compiletime_assert_718(void);


#line 787 
void __compiletime_assert_787(void);


#line 846 
void __compiletime_assert_847(void);


#line 906 
void __compiletime_assert_906(void);


#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static int iwlagn_request_scan(struct iwl_priv *priv, struct ieee80211_vif *vif)
{
  int __retres;
  struct iwl_scan_cmd *scan;
  enum ieee80211_band band;
  u8 rate;
  int chan_mod;
  u8 active_chains;
  int ret;
  int tmp;
  int tmp_2_0;
  u32 tmp_3;
  int tmp_4;
  
#line 639 
  struct iwl_host_cmd cmd = {.data = {(void const *)0, (void const *)0}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)764U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)128U};
  
#line 644 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 645 
  u32 rate_flags = 0U;
  
#line 646 
  u16 cmd_len = (unsigned short)0U;
  
#line 647 
  u16 rx_chain = (unsigned short)0U;
  
#line 649 
  u8 n_probes = (unsigned char)0U;
  
#line 650 
  u8 rx_ant = (priv->nvm_data)->valid_rx_ant;
  
#line 652 
  bool is_active = (_Bool)0;
  
#line 655 
  u8 scan_tx_antennas = (priv->nvm_data)->valid_tx_ant;
  
#line 657 
  int scan_cmd_size = (int)((priv->fw)->ucode_capa.max_probe_length + 1364U);
  
#line 660 
  u8 const *ssid = (u8 const *)0U;
  
#line 661 
  u8 ssid_len = (unsigned char)0U;
  {
    
#line 663 
    int __ret_warn_on = (priv->scan_type == (unsigned int)IWL_SCAN_NORMAL && (priv->scan_request == (struct cfg80211_scan_request *)0 || (priv->scan_request)->n_channels > 50U)) != 0;
    
#line 663 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 663 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c",665); else ;
    
#line 663 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 663 
  if ((long)tmp != 0L) {
    
#line 666 
    __retres = -22;
    
#line 666 
    goto return_label;
  }
  else ;
  {
    int tmp_1;
    
#line 668 
    if (debug_locks != 0) {
      int tmp_0;
      
#line 668 
      tmp_0 = lock_is_held(& priv->mutex.dep_map);
      
#line 668 
      if (tmp_0 == 0) 
#line 668 
                      tmp_1 = 1; else 
#line 668 
                                      tmp_1 = 0;
    }
    else 
#line 668 
         tmp_1 = 0;
    
#line 668 
    int __ret_warn_on_0 = tmp_1;
    
#line 668 
    if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 668 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c",668); else ;
    
#line 668 
    long tmp_2 = (long)(__ret_warn_on_0 != 0);
  }
  
#line 670 
  if (vif != (struct ieee80211_vif *)0) 
#line 671 
                                        ctx = iwl_rxon_ctx_from_vif(vif); else ;
  
#line 673 
  if (priv->scan_cmd == (void *)0) {
    
#line 674 
    priv->scan_cmd = kmalloc_1((unsigned long)scan_cmd_size,208U);
    
#line 675 
    if (priv->scan_cmd == (void *)0) {
      {
        
#line 676 
        bool __cond = (_Bool)((int)*("fail to allocate memory for scan\n" + 32UL) != 10);
        
#line 676 
        if ((int)__cond != 0) 
#line 676 
                              __compiletime_assert_677(); else ;
      }
      
#line 676 
      __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwlagn_request_scan","fail to allocate memory for scan\n");
      
#line 678 
      __retres = -12;
      
#line 678 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 681 
  scan = (struct iwl_scan_cmd *)priv->scan_cmd;
  
#line 682 
  memset((void *)scan,0,(unsigned long)scan_cmd_size);
  
#line 684 
  scan->quiet_plcp_th = (unsigned short)1U;
  
#line 685 
  scan->quiet_time = (unsigned short)10U;
  
#line 687 
  tmp_2_0 = iwl_is_any_associated_0(priv);
  
#line 687 
  if (tmp_2_0 != 0) {
    u32 extra;
    
#line 688 
    u16 interval = (unsigned short)0U;
    
#line 690 
    u32 suspend_time = 100U;
    
#line 691 
    u32 scan_suspend_time = 100U;
    {
      
#line 693 
      bool __cond_0 = (_Bool)((int)*("Scanning while associated...\n" + 28UL) != 10);
      
#line 693 
      if ((int)__cond_0 != 0) 
#line 693 
                              __compiletime_assert_693(); else ;
    }
    
#line 693 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_request_scan","Scanning while associated...\n");
    
#line 694 
    switch ((unsigned int)priv->scan_type) {
      case (unsigned int)1: 
#line 695 
      ;
      
#line 696 
      interval = (unsigned short)0U;
      
#line 697 
      goto ldv_53252;
      case (unsigned int)0: 
#line 698 
      ;
      
#line 699 
      interval = vif->bss_conf.beacon_int;
      
#line 700 
      goto ldv_53252;
    }
    ldv_53252: 
#line 703 
    ;
    
#line 703 
    scan->suspend_time = 0U;
    
#line 704 
    scan->max_out_time = 204800U;
    
#line 705 
    if ((unsigned int)interval == 0U) 
#line 706 
                                      interval = (unsigned short)suspend_time; else ;
    
#line 708 
    extra = suspend_time / (unsigned int)interval << 22;
    
#line 709 
    scan_suspend_time = (suspend_time % (unsigned int)interval) * 1024U | extra;
    
#line 711 
    scan->suspend_time = scan_suspend_time;
    {
      
#line 712 
      bool __cond_1 = (_Bool)((int)*("suspend_time 0x%X beacon interval %d\n" + 36UL) != 10);
      
#line 712 
      if ((int)__cond_1 != 0) 
#line 712 
                              __compiletime_assert_713(); else ;
    }
    
#line 712 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwlagn_request_scan","suspend_time 0x%X beacon interval %d\n",scan_suspend_time,(int)interval);
  }
  else ;
  
#line 716 
  switch ((unsigned int)priv->scan_type) {
    case (unsigned int)1: 
#line 717 
    ;
    {
      
#line 718 
      bool __cond_2 = (_Bool)((int)*("Start internal passive scan.\n" + 28UL) != 10);
      
#line 718 
      if ((int)__cond_2 != 0) 
#line 718 
                              __compiletime_assert_718(); else ;
    }
    
#line 718 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwlagn_request_scan","Start internal passive scan.\n");
    
#line 724 
    scan->quiet_time = (unsigned short)5U;
    
#line 725 
    goto ldv_53263;
    case (unsigned int)0: 
#line 726 
    ;
    
#line 727 
    if ((priv->scan_request)->n_ssids != 0) {
      int i;
      
#line 728 
      int p = 0;
      {
        
#line 729 
        bool __cond_3 = (_Bool)((int)*("Kicking off active scan\n" + 23UL) != 10);
        
#line 729 
        if ((int)__cond_3 != 0) 
#line 729 
                                __compiletime_assert_729(); else ;
      }
      
#line 729 
      __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwlagn_request_scan","Kicking off active scan\n");
      
#line 734 
      ssid_len = ((priv->scan_request)->ssids)->ssid_len;
      
#line 735 
      ssid = (u8 const *)(& ((priv->scan_request)->ssids)->ssid);
      
#line 741 
      i = (priv->scan_request)->n_ssids + -1;
      
#line 741 
      goto ldv_53272;
      ldv_53271: 
#line 742 
      ;
      
#line 742 
      scan->direct_scan[p].id = (unsigned char)0U;
      
#line 743 
      scan->direct_scan[p].len = ((priv->scan_request)->ssids + i)->ssid_len;
      
#line 745 
      memcpy((void *)(& scan->direct_scan[p].ssid),(void const *)(& ((priv->scan_request)->ssids + i)->ssid),(unsigned long)((priv->scan_request)->ssids + i)->ssid_len);
      
#line 748 
      n_probes = (u8)((int)n_probes + 1);
      
#line 749 
      p += 1;
      
#line 741 
      i -= 1;
      ldv_53272: 
#line 742 
      ;
      
#line 741 
      if (i > 0) 
#line 743 
                 goto ldv_53271; else 
#line 746 
                                      goto ldv_53273;
      ldv_53273: 
#line 747 
      ;
      
#line 751 
      is_active = (_Bool)1;
    }
    else {
      {
        
#line 753 
        bool __cond_4 = (_Bool)((int)*("Start passive scan.\n" + 19UL) != 10);
        
#line 753 
        if ((int)__cond_4 != 0) 
#line 753 
                                __compiletime_assert_753(); else ;
      }
      
#line 753 
      __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwlagn_request_scan","Start passive scan.\n");
    }
    
#line 754 
    goto ldv_53263;
  }
  ldv_53263: 
#line 757 
  ;
  
#line 757 
  scan->tx_cmd.tx_flags = 8192U;
  
#line 758 
  scan->tx_cmd.sta_id = ctx->bcast_sta_id;
  
#line 759 
  scan->tx_cmd.stop_time.life_time = 4294967295U;
  
#line 761 
  switch ((unsigned int)priv->scan_band) {
    case (unsigned int)0: 
#line 762 
    ;
    
#line 763 
    scan->flags = 5U;
    
#line 764 
    chan_mod = (int)(priv->contexts[0].active.flags >> 25) & 3;
    
#line 768 
    if ((priv->scan_request != (struct cfg80211_scan_request *)0 && (int)(priv->scan_request)->no_cck != 0) || chan_mod == 1) 
      
#line 770 
      rate = (unsigned char)13U;
    else {
      
#line 772 
      rate = (unsigned char)10U;
      
#line 773 
      rate_flags = 512U;
    }
    
#line 779 
    if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) 
      
#line 781 
      scan->tx_cmd.tx_flags |= 4096U; else ;
    
#line 782 
    goto ldv_53279;
    case (unsigned int)1: 
#line 783 
    ;
    
#line 784 
    rate = (unsigned char)13U;
    
#line 785 
    goto ldv_53279;
    default: 
#line 786 
    ;
    {
      
#line 787 
      bool __cond_5 = (_Bool)((int)*("Invalid scan band\n" + 17UL) != 10);
      
#line 787 
      if ((int)__cond_5 != 0) 
#line 787 
                              __compiletime_assert_787(); else ;
    }
    
#line 787 
    __iwl_warn(priv->dev,"Invalid scan band\n");
    
#line 788 
    __retres = -5;
    
#line 788 
    goto return_label;
  }
  ldv_53279: 
#line 812 
  ;
  
#line 812 
  if ((int)priv->new_scan_threshold_behaviour != 0) 
#line 813 
                                                    scan->good_CRC_th = (unsigned short)((int)is_active != 0);
  else 
    
#line 816 
    if ((int)is_active != 0) 
#line 816 
                             scan->good_CRC_th = (unsigned short)1U; else 
                                                                    
#line 816 
                                                                    scan->good_CRC_th = (unsigned short)65535U;
  
#line 819 
  band = priv->scan_band;
  
#line 821 
  if ((band == (unsigned int)IEEE80211_BAND_2GHZ && (priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) 
    
#line 825 
    scan_tx_antennas = first_antenna((unsigned char)((int)scan_tx_antennas)); else ;
  
#line 828 
  priv->scan_tx_ant[(unsigned int)band] = iwl_toggle_tx_ant(priv,(unsigned char)((int)priv->scan_tx_ant[(unsigned int)band]),(unsigned char)((int)scan_tx_antennas));
  
#line 831 
  tmp_3 = iwl_ant_idx_to_flags((unsigned char)((int)priv->scan_tx_ant[(unsigned int)band]));
  
#line 831 
  rate_flags = tmp_3 | rate_flags;
  
#line 832 
  scan->tx_cmd.rate_n_flags = iwl_hw_set_rate_n_flags((unsigned char)((int)rate),rate_flags);
  
#line 838 
  tmp_4 = constant_test_bit(13L,(unsigned long const volatile *)(& priv->status));
  
#line 838 
  if (tmp_4 != 0) {
    
#line 838 
    if (((priv->hw)->conf.flags & 4U) == 0U) {
      
#line 841 
      active_chains = (unsigned char)((int)((unsigned char)priv->chain_noise_data.active_chains) & (int)rx_ant);
      
#line 843 
      if ((unsigned int)active_chains == 0U) 
#line 844 
                                             active_chains = rx_ant; else ;
      {
        
#line 846 
        bool __cond_6 = (_Bool)((int)*("chain_noise_data.active_chains: %u\n" + 34UL) != 10);
        
#line 846 
        if ((int)__cond_6 != 0) 
#line 846 
                                __compiletime_assert_847(); else ;
      }
      
#line 846 
      __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwlagn_request_scan","chain_noise_data.active_chains: %u\n",priv->chain_noise_data.active_chains);
      
#line 849 
      rx_ant = first_antenna((unsigned char)((int)active_chains));
    }
    else ;
  }
  else ;
  
#line 851 
  if (((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) && (int)priv->bt_full_concurrent != 0) 
    
#line 855 
    rx_ant = first_antenna((unsigned char)((int)rx_ant)); else ;
  
#line 859 
  rx_chain = (unsigned short)(((int)(priv->nvm_data)->valid_rx_ant << 1) | (int)rx_chain);
  
#line 861 
  rx_chain = (unsigned short)(((int)rx_ant << 7) | (int)rx_chain);
  
#line 862 
  rx_chain = (unsigned short)(((int)rx_ant << 4) | (int)rx_chain);
  
#line 863 
  rx_chain = (unsigned short)((unsigned int)rx_chain | 1U);
  
#line 864 
  scan->rx_chain = rx_chain;
  
#line 865 
  switch ((unsigned int)priv->scan_type) {
    case (unsigned int)0: 
#line 866 
    ;
    
#line 867 
    cmd_len = iwl_fill_probe_req((struct ieee80211_mgmt *)(& scan->data),(u8 const *)(& vif->addr),(priv->scan_request)->ie,(int)(priv->scan_request)->ie_len,ssid,(unsigned char)((int)ssid_len),(int)((unsigned int)scan_cmd_size + 4294966532U));
    
#line 874 
    goto ldv_53291;
    case (unsigned int)1: 
#line 875 
    ;
    
#line 877 
    cmd_len = iwl_fill_probe_req((struct ieee80211_mgmt *)(& scan->data),(u8 const *)(& iwl_bcast_addr),(u8 const *)0U,0,(u8 const *)0U,(unsigned char)0,(int)((unsigned int)scan_cmd_size + 4294966532U));
    
#line 882 
    goto ldv_53291;
    default: 
#line 883 
    ;
    
#line 884 
    ldv_inline_asm();
    
#line 884 
    ;
  }
  ldv_53291: 
#line 886 
  ;
  
#line 886 
  scan->tx_cmd.len = cmd_len;
  
#line 888 
  scan->filter_flags |= 68U;
  
#line 891 
  switch ((unsigned int)priv->scan_type) {
    int tmp_5;
    int tmp_6;
    case (unsigned int)1: 
#line 892 
    ;
    
#line 893 
    tmp_5 = iwl_get_channel_for_reset_scan(priv,vif,band,(struct iwl_scan_channel *)(& scan->data[(int)cmd_len]));
    
#line 893 
    scan->channel_count = (unsigned char)tmp_5;
    
#line 896 
    goto ldv_53295;
    case (unsigned int)0: 
#line 897 
    ;
    
#line 898 
    tmp_6 = iwl_get_channels_for_scan(priv,vif,band,(unsigned char)((int)is_active),(unsigned char)((int)n_probes),(struct iwl_scan_channel *)(& scan->data[(int)cmd_len]));
    
#line 898 
    scan->channel_count = (unsigned char)tmp_6;
    
#line 902 
    goto ldv_53295;
  }
  ldv_53295: 
#line 905 
  ;
  
#line 905 
  if ((unsigned int)scan->channel_count == 0U) {
    {
      
#line 906 
      bool __cond_7 = (_Bool)((int)*("channel count %d\n" + 16UL) != 10);
      
#line 906 
      if ((int)__cond_7 != 0) 
#line 906 
                              __compiletime_assert_906(); else ;
    }
    
#line 906 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwlagn_request_scan","channel count %d\n",(int)scan->channel_count);
    
#line 907 
    __retres = -5;
    
#line 907 
    goto return_label;
  }
  else ;
  
#line 910 
  cmd.len[0] = (unsigned short)((unsigned int)cmd.len[0] + ((unsigned int)scan->tx_cmd.len + (unsigned int)((unsigned short)scan->channel_count) * 12U));
  
#line 912 
  cmd.data[0] = (void const *)scan;
  
#line 913 
  cmd.dataflags[0] = (unsigned char)1U;
  
#line 914 
  scan->len = cmd.len[0];
  
#line 917 
  set_bit(9L,(unsigned long volatile *)(& priv->status));
  
#line 919 
  ret = iwlagn_set_pan_params(priv);
  
#line 920 
  if (ret != 0) {
    
#line 921 
    set_bit(9L,(unsigned long volatile *)(& priv->status));
    
#line 922 
    __retres = ret;
    
#line 922 
    goto return_label;
  }
  else ;
  
#line 925 
  ret = iwl_dvm_send_cmd(priv,& cmd);
  
#line 926 
  if (ret != 0) {
    
#line 927 
    set_bit(9L,(unsigned long volatile *)(& priv->status));
    
#line 928 
    iwlagn_set_pan_params(priv);
  }
  else ;
  
#line 931 
  __retres = ret;
  return_label: 
#line 931 
                return __retres;
}


#line 934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
void iwl_init_scan_params(struct iwl_priv *priv)
{
  int tmp;
  
#line 936 
  tmp = fls((int)(priv->nvm_data)->valid_tx_ant);
  
#line 936 
  u8 ant_idx = (unsigned char)((unsigned int)((unsigned char)tmp) + 255U);
  
#line 937 
  if ((unsigned int)priv->scan_tx_ant[1] == 0U) 
#line 938 
                                                priv->scan_tx_ant[1] = ant_idx; else ;
  
#line 939 
  if ((unsigned int)priv->scan_tx_ant[0] == 0U) 
#line 940 
                                                priv->scan_tx_ant[0] = ant_idx; else ;
  
#line 941 
  return;
}


#line 955 
void __compiletime_assert_955(void);


#line 960 
void __compiletime_assert_961(void);


#line 966 
void __compiletime_assert_966(void);


#line 943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
int iwl_scan_initiate(struct iwl_priv *priv, struct ieee80211_vif *vif, enum iwl_scan_type scan_type, enum ieee80211_band band)
{
  int __retres;
  int ret;
  int tmp_1;
  int tmp_2_0;
  int tmp_3;
  char *tmp_4;
  {
    int tmp_0;
    
#line 950 
    if (debug_locks != 0) {
      int tmp;
      
#line 950 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 950 
      if (tmp == 0) 
#line 950 
                    tmp_0 = 1; else 
#line 950 
                                    tmp_0 = 0;
    }
    else 
#line 950 
         tmp_0 = 0;
    
#line 950 
    int __ret_warn_on = tmp_0;
    
#line 950 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 950 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c",950); else ;
    
#line 950 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 952 
  cancel_delayed_work(& priv->scan_check);
  
#line 954 
  tmp_1 = iwl_is_ready_rf(priv);
  
#line 954 
  if (tmp_1 == 0) {
    {
      
#line 955 
      bool __cond = (_Bool)((int)*("Request scan called when driver not ready.\n" + 42UL) != 10);
      
#line 955 
      if ((int)__cond != 0) 
#line 955 
                            __compiletime_assert_955(); else ;
    }
    
#line 955 
    __iwl_warn(priv->dev,"Request scan called when driver not ready.\n");
    
#line 956 
    __retres = -5;
    
#line 956 
    goto return_label;
  }
  else ;
  
#line 959 
  tmp_2_0 = constant_test_bit(9L,(unsigned long const volatile *)(& priv->status));
  
#line 959 
  if (tmp_2_0 != 0) {
    {
      
#line 960 
      bool __cond_0 = (_Bool)((int)*("Multiple concurrent scan requests in parallel.\n" + 46UL) != 10);
      
#line 960 
      if ((int)__cond_0 != 0) 
#line 960 
                              __compiletime_assert_961(); else ;
    }
    
#line 960 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_scan_initiate","Multiple concurrent scan requests in parallel.\n");
    
#line 962 
    __retres = -16;
    
#line 962 
    goto return_label;
  }
  else ;
  
#line 965 
  tmp_3 = constant_test_bit(8L,(unsigned long const volatile *)(& priv->status));
  
#line 965 
  if (tmp_3 != 0) {
    {
      
#line 966 
      bool __cond_1 = (_Bool)((int)*("Scan request while abort pending.\n" + 33UL) != 10);
      
#line 966 
      if ((int)__cond_1 != 0) 
#line 966 
                              __compiletime_assert_966(); else ;
    }
    
#line 966 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_scan_initiate","Scan request while abort pending.\n");
    
#line 967 
    __retres = -16;
    
#line 967 
    goto return_label;
  }
  else ;
  {
    
#line 970 
    bool __cond_2 = (_Bool)((int)*("Starting %sscan...\n" + 18UL) != 10);
    
#line 970 
    if ((int)__cond_2 != 0) 
#line 970 
                            __compiletime_assert_972(); else ;
  }
  
#line 970 
  if (scan_type == (unsigned int)IWL_SCAN_NORMAL) 
#line 970 
                                                  tmp_4 = (char *)""; else 
                                                                    
#line 970 
                                                                    tmp_4 = (char *)"internal short ";
  
#line 970 
  ;
  
#line 970 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_scan_initiate","Starting %sscan...\n",tmp_4);
  
#line 974 
  set_bit(7L,(unsigned long volatile *)(& priv->status));
  
#line 975 
  priv->scan_type = scan_type;
  
#line 976 
  priv->scan_start = jiffies;
  
#line 977 
  priv->scan_band = band;
  
#line 979 
  ret = iwlagn_request_scan(priv,vif);
  
#line 980 
  if (ret != 0) {
    
#line 981 
    set_bit(7L,(unsigned long volatile *)(& priv->status));
    
#line 982 
    priv->scan_type = IWL_SCAN_NORMAL;
    
#line 983 
    __retres = ret;
    
#line 983 
    goto return_label;
  }
  else ;
  
#line 986 
  ldv_queue_delayed_work_77(priv->workqueue,& priv->scan_check,3750UL);
  
#line 989 
  __retres = 0;
  return_label: 
#line 989 
                return __retres;
}


#line 997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
void iwl_internal_short_hw_scan(struct iwl_priv *priv)
{
  
#line 999 
  ldv_queue_work_78(priv->workqueue,& priv->start_internal_scan);
  
#line 1000 
  return;
}


#line 1007 
void __compiletime_assert_1007(void);


#line 1012 
void __compiletime_assert_1012(void);


#line 1017 
void __compiletime_assert_1017(void);


#line 1022 
void __compiletime_assert_1022(void);


#line 1002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static void iwl_bg_start_internal_scan(struct work_struct *work)
{
  struct iwl_priv *tmp;
  int tmp_0;
  int tmp_1;
  {
    
#line 1005 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1005 
    tmp = (struct iwl_priv *)__mptr + 18446744073709539048U;
  }
  
#line 1004 
  struct iwl_priv *priv = tmp;
  {
    
#line 1007 
    bool __cond = (_Bool)((int)*("Start internal scan\n" + 19UL) != 10);
    
#line 1007 
    if ((int)__cond != 0) 
#line 1007 
                          __compiletime_assert_1007(); else ;
  }
  
#line 1007 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_bg_start_internal_scan","Start internal scan\n");
  
#line 1009 
  ldv_mutex_lock_79(& priv->mutex);
  
#line 1011 
  if (priv->scan_type == (unsigned int)IWL_SCAN_RADIO_RESET) {
    {
      
#line 1012 
      bool __cond_0 = (_Bool)((int)*("Internal scan already in progress\n" + 33UL) != 10);
      
#line 1012 
      if ((int)__cond_0 != 0) 
#line 1012 
                              __compiletime_assert_1012(); else ;
    }
    
#line 1012 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_bg_start_internal_scan","Internal scan already in progress\n");
    
#line 1013 
    goto unlock;
  }
  else ;
  
#line 1016 
  tmp_0 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
  
#line 1016 
  if (tmp_0 != 0) {
    {
      
#line 1017 
      bool __cond_1 = (_Bool)((int)*("Scan already in progress.\n" + 25UL) != 10);
      
#line 1017 
      if ((int)__cond_1 != 0) 
#line 1017 
                              __compiletime_assert_1017(); else ;
    }
    
#line 1017 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_bg_start_internal_scan","Scan already in progress.\n");
    
#line 1018 
    goto unlock;
  }
  else ;
  
#line 1021 
  tmp_1 = iwl_scan_initiate(priv,(struct ieee80211_vif *)0,(enum iwl_scan_type)IWL_SCAN_RADIO_RESET,priv->band);
  
#line 1021 
  if (tmp_1 != 0) {
    {
      
#line 1022 
      bool __cond_2 = (_Bool)((int)*("failed to start internal short scan\n" + 35UL) != 10);
      
#line 1022 
      if ((int)__cond_2 != 0) 
#line 1022 
                              __compiletime_assert_1022(); else ;
    }
    
#line 1022 
    __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_bg_start_internal_scan","failed to start internal short scan\n");
  }
  else ;
  unlock: 
#line 1023 
  ;
  
#line 1024 
  ldv_mutex_unlock_80(& priv->mutex);
  
#line 1025 
  return;
}


#line 1032 
void __compiletime_assert_1032(void);


#line 1027  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static void iwl_bg_scan_check(struct work_struct *data)
{
  struct iwl_priv *tmp;
  {
    
#line 1030 
    struct work_struct const *__mptr = (struct work_struct const *)data;
    
#line 1030 
    tmp = (struct iwl_priv *)__mptr + 18446744073709538728U;
  }
  
#line 1029 
  struct iwl_priv *priv = tmp;
  {
    
#line 1032 
    bool __cond = (_Bool)((int)*("Scan check work\n" + 15UL) != 10);
    
#line 1032 
    if ((int)__cond != 0) 
#line 1032 
                          __compiletime_assert_1032(); else ;
  }
  
#line 1032 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_bg_scan_check","Scan check work\n");
  
#line 1037 
  ldv_mutex_lock_81(& priv->mutex);
  
#line 1038 
  iwl_force_scan_end(priv);
  
#line 1039 
  ldv_mutex_unlock_82(& priv->mutex);
  
#line 1040 
  return;
}


#line 1046 
void __compiletime_assert_1046(void);


#line 1042  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static void iwl_bg_abort_scan(struct work_struct *work)
{
  struct iwl_priv *tmp;
  {
    
#line 1044 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1044 
    tmp = (struct iwl_priv *)__mptr + 18446744073709539472U;
  }
  
#line 1044 
  struct iwl_priv *priv = tmp;
  {
    
#line 1046 
    bool __cond = (_Bool)((int)*("Abort scan work\n" + 15UL) != 10);
    
#line 1046 
    if ((int)__cond != 0) 
#line 1046 
                          __compiletime_assert_1046(); else ;
  }
  
#line 1046 
  __iwl_dbg(priv->dev,2048U,(_Bool)0,"iwl_bg_abort_scan","Abort scan work\n");
  
#line 1050 
  ldv_mutex_lock_83(& priv->mutex);
  
#line 1051 
  iwl_scan_cancel_timeout(priv,200UL);
  
#line 1052 
  ldv_mutex_unlock_84(& priv->mutex);
  
#line 1053 
  return;
}


#line 1055  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
static void iwl_bg_scan_completed(struct work_struct *work)
{
  struct iwl_priv *tmp;
  {
    
#line 1058 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1058 
    tmp = (struct iwl_priv *)__mptr + 18446744073709539552U;
  }
  
#line 1057 
  struct iwl_priv *priv = tmp;
  
#line 1060 
  ldv_mutex_lock_85(& priv->mutex);
  
#line 1061 
  iwl_process_scan_complete(priv);
  
#line 1062 
  ldv_mutex_unlock_86_0(& priv->mutex);
  
#line 1063 
  return;
}


#line 1065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
void iwl_setup_scan_deferred_work(struct iwl_priv *priv)
{
  {
    struct lock_class_key __key;
    
#line 1067 
    __init_work(& priv->scan_completed,0);
    
#line 1067 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 1067 
    priv->scan_completed.data = __constr_expr_37;
    
#line 1067 
    lockdep_init_map(& priv->scan_completed.lockdep_map,"(&priv->scan_completed)",& __key,0);
    
#line 1067 
    INIT_LIST_HEAD(& priv->scan_completed.entry);
    
#line 1067 
    priv->scan_completed.func = & iwl_bg_scan_completed;
  }
  {
    struct lock_class_key __key_0;
    
#line 1068 
    __init_work(& priv->abort_scan,0);
    
#line 1068 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 1068 
    priv->abort_scan.data = __constr_expr_38;
    
#line 1068 
    lockdep_init_map(& priv->abort_scan.lockdep_map,"(&priv->abort_scan)",& __key_0,0);
    
#line 1068 
    INIT_LIST_HEAD(& priv->abort_scan.entry);
    
#line 1068 
    priv->abort_scan.func = & iwl_bg_abort_scan;
  }
  {
    struct lock_class_key __key_1;
    
#line 1069 
    __init_work(& priv->start_internal_scan,0);
    
#line 1069 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 1069 
    priv->start_internal_scan.data = __constr_expr_39;
    
#line 1069 
    lockdep_init_map(& priv->start_internal_scan.lockdep_map,"(&priv->start_internal_scan)",& __key_1,0);
    
#line 1069 
    INIT_LIST_HEAD(& priv->start_internal_scan.entry);
    
#line 1069 
    priv->start_internal_scan.func = & iwl_bg_start_internal_scan;
  }
  {
    struct lock_class_key __key_2;
    
#line 1070 
    __init_work(& priv->scan_check.work,0);
    
#line 1070 
    atomic_long_t __constr_expr_40 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 1070 
    priv->scan_check.work.data = __constr_expr_40;
    
#line 1070 
    lockdep_init_map(& priv->scan_check.work.lockdep_map,"(&(&priv->scan_check)->work)",& __key_2,0);
    
#line 1070 
    INIT_LIST_HEAD(& priv->scan_check.work.entry);
    
#line 1070 
    priv->scan_check.work.func = & iwl_bg_scan_check;
  }
  {
    struct lock_class_key __key_3;
    
#line 1070 
    init_timer_key(& priv->scan_check.timer,2097152U,"(&(&priv->scan_check)->timer)",& __key_3);
  }
  
#line 1070 
  priv->scan_check.timer.function = & delayed_work_timer_fn;
  
#line 1070 
  priv->scan_check.timer.data = (unsigned long)(& priv->scan_check);
  
#line 1071 
  return;
}


#line 1073  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/scan.c"
void iwl_cancel_scan_deferred_work(struct iwl_priv *priv)
{
  bool tmp;
  
#line 1075 
  cancel_work_sync(& priv->start_internal_scan);
  
#line 1076 
  cancel_work_sync(& priv->abort_scan);
  
#line 1077 
  cancel_work_sync(& priv->scan_completed);
  
#line 1079 
  tmp = cancel_delayed_work_sync(& priv->scan_check);
  
#line 1079 
  if ((int)tmp != 0) {
    
#line 1080 
    ldv_mutex_lock_87_0(& priv->mutex);
    
#line 1081 
    iwl_force_scan_end(priv);
    
#line 1082 
    ldv_mutex_unlock_88_0(& priv->mutex);
  }
  else ;
  
#line 1084 
  return;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
_Bool ldv_emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2);


#line 414  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void *kmalloc_1(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 417 
  tmp = ldv_kmalloc(size,flags);
  
#line 417 
  return tmp;
}


#line 752  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static bool ldv_queue_work_74(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 756 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 756 
  __retres = tmp != 0;
  
#line 756 
  return __retres;
}


#line 760  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static bool ldv_queue_work_75(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 764 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 764 
  __retres = tmp != 0;
  
#line 764 
  return __retres;
}


#line 768  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static bool ldv_queue_work_76(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 772 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 772 
  __retres = tmp != 0;
  
#line 772 
  return __retres;
}


#line 776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static bool ldv_queue_delayed_work_77(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 780 
  tmp = ldv_emg_queue_delayed_work(wq,dwork,delay);
  
#line 780 
  __retres = tmp != 0;
  
#line 780 
  return __retres;
}


#line 784  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static bool ldv_queue_work_78(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 788 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 788 
  __retres = tmp != 0;
  
#line 788 
  return __retres;
}


#line 792  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1)
{
  
#line 796 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 797 
  return;
}


#line 800  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1)
{
  
#line 804 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 805 
  return;
}


#line 808  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1)
{
  
#line 812 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 813 
  return;
}


#line 816  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1)
{
  
#line 820 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 821 
  return;
}


#line 824  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1)
{
  
#line 828 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 829 
  return;
}


#line 832  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1)
{
  
#line 836 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 837 
  return;
}


#line 840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_lock_85(struct mutex *ldv_func_arg1)
{
  
#line 844 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 845 
  return;
}


#line 848  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_unlock_86_0(struct mutex *ldv_func_arg1)
{
  
#line 852 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 853 
  return;
}


#line 856  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_lock_87_0(struct mutex *ldv_func_arg1)
{
  
#line 860 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 861 
  return;
}


#line 864  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_scan.c.aux"
static void ldv_mutex_unlock_88_0(struct mutex *ldv_func_arg1)
{
  
#line 868 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 869 
  return;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void ldv_mutex_lock_74_1(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_76_1(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_80_0(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_83_0(struct mutex *ldv_func_arg1);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_75_1(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_77_1(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_81_0(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_82_0(struct mutex *ldv_func_arg1);


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
static bool ldv_queue_work_78_0(struct workqueue_struct *wq, struct work_struct *work);


#line 494 
static bool ldv_queue_work_79(struct workqueue_struct *wq, struct work_struct *work);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_2(size_t size, gfp_t flags);


#line 581 
static void *kzalloc_1(size_t size, gfp_t flags);


#line 4265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
void ieee80211_get_tkip_p1k_iv(struct ieee80211_key_conf *, u32, u16 *);


#line 4300 
void ieee80211_get_tkip_rx_p1k(struct ieee80211_key_conf *, u8 const *, u32, u16 *);


#line 4344 
void ieee80211_get_key_tx_seq(struct ieee80211_key_conf *, struct ieee80211_key_seq *);


#line 4363 
void ieee80211_get_key_rx_seq(struct ieee80211_key_conf *, int, struct ieee80211_key_seq *);


#line 4847 
void ieee80211_iter_keys(struct ieee80211_hw *, struct ieee80211_vif *, void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *, void *), void *);


#line 4999 
void ieee80211_request_smps(struct ieee80211_vif *, enum ieee80211_smps_mode);


#line 5282 
void ieee80211_enable_rssi_reports(struct ieee80211_vif *, int, int);


#line 5286 
void ieee80211_disable_rssi_reports(struct ieee80211_vif *);


#line 5298 
int ieee80211_ave_rssi(struct ieee80211_vif *);


#line 776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static int iwl_trans_send_cmd(struct iwl_trans *trans, struct iwl_host_cmd *cmd)
{
  int __retres;
  int ret;
  int tmp_0;
  
#line 781 
  if ((long)((cmd->flags & 4U) == 0U) != 0L) {
    int tmp;
    
#line 781 
    tmp = constant_test_bit(4L,(unsigned long const volatile *)(& trans->status));
    
#line 781 
    if ((long)(tmp != 0) != 0L) {
      
#line 783 
      __retres = -132;
      
#line 783 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 785 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& trans->status));
  
#line 785 
  if ((long)(tmp_0 != 0) != 0L) {
    
#line 786 
    __retres = -5;
    
#line 786 
    goto return_label;
  }
  else ;
  
#line 788 
  if ((long)(trans->state != (unsigned int)IWL_TRANS_FW_ALIVE) != 0L) {
    {
      
#line 789 
      bool __cond = (_Bool)((int)*("%s bad state = %d\n" + 17UL) != 10);
      
#line 789 
      if ((int)__cond != 0) 
#line 789 
                            __compiletime_assert_789(); else ;
    }
    
#line 789 
    __iwl_err(trans->dev,(_Bool)0,(_Bool)0,"%s bad state = %d\n","iwl_trans_send_cmd",(unsigned int)trans->state);
    
#line 790 
    __retres = -5;
    
#line 790 
    goto return_label;
  }
  else ;
  
#line 793 
  if ((cmd->flags & 1U) == 0U) {
    __here_0: 
#line 794 
    ;
    
#line 794 
    ;
    
#line 794 
    lock_acquire(& trans->sync_cmd_lockdep_map,0U,0,2,1,(struct lockdep_map *)0,(unsigned long)((void *)0));
  }
  else ;
  
#line 796 
  ret = (*((trans->ops)->send_cmd))(trans,cmd);
  
#line 798 
  if ((cmd->flags & 1U) == 0U) {
    __here_1: 
#line 799 
    ;
    
#line 799 
    ;
    
#line 799 
    lock_release(& trans->sync_cmd_lockdep_map,1,(unsigned long)((void *)1));
  }
  else ;
  
#line 801 
  __retres = ret;
  return_label: 
#line 801 
                return __retres;
}


#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.h"
struct iwl_rate_info const iwl_rates[13U];


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.h"
void iwl_tt_handler(struct iwl_priv *priv);


#line 933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
__inline static int iwl_is_associated(struct iwl_priv *priv, enum iwl_rxon_context_id ctxid)
{
  int tmp;
  
#line 936 
  tmp = iwl_is_associated_ctx(& priv->contexts[(unsigned int)ctxid]);
  
#line 936 
  return tmp;
}


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
int iwlagn_send_tx_power(struct iwl_priv *priv);


#line 182 
void iwlagn_temperature(struct iwl_priv *priv);


#line 196 
int iwlagn_send_patterns(struct iwl_priv *priv, struct cfg80211_wowlan *wowlan);


#line 280 
int iwlagn_bt_coex_profile_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd);


#line 286 
void iwlagn_bt_coex_rssi_monitor(struct iwl_priv *priv);


#line 287 
void iwlagn_bt_adjust_rssi_monitor(struct iwl_priv *priv, bool rssi_ena);


#line 305 
int iwlagn_manage_ibss_station(struct iwl_priv *priv, struct ieee80211_vif *vif, bool add);


#line 354 
int iwlagn_add_bssid_station(struct iwl_priv *priv, struct iwl_rxon_context *ctx, u8 const *addr, u8 *sta_id_r);


#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static int iwl_is_ctkill(struct iwl_priv *priv)
{
  int tmp;
  
#line 433 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& priv->status));
  
#line 433 
  return tmp;
}


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwlagn_hw_valid_rtc_data_addr(u32 addr)
{
  int __retres;
  
#line 45 
  __retres = addr + 4286578688U <= 49151U;
  
#line 45 
  return __retres;
}


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwlagn_send_tx_power(struct iwl_priv *priv)
{
  int __retres;
  struct iwlagn_tx_power_dbm_cmd tx_power_cmd;
  u8 tx_ant_cfg_cmd;
  int tmp_1;
  int tmp_2;
  {
    bool __warned;
    int tmp;
    
#line 54 
    tmp = constant_test_bit(9L,(unsigned long const volatile *)(& priv->status));
    
#line 54 
    int __ret_warn_once = tmp != 0;
    
#line 54 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp_0;
      {
        
#line 54 
        int __ret_warn_on = ! __warned;
        
#line 54 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 54 
                                              warn_slowpath_fmt("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c",55,"TX Power requested while scanning!\n"); else ;
        
#line 54 
        tmp_0 = (long)(__ret_warn_on != 0);
      }
      
#line 54 
      if ((long)tmp_0 != 0L) 
#line 54 
                             __warned = (_Bool)1; else ;
    }
    else ;
    
#line 54 
    tmp_1 = (long)(__ret_warn_once != 0);
  }
  
#line 54 
  if ((long)tmp_1 != 0L) {
    
#line 56 
    __retres = -11;
    
#line 56 
    goto return_label;
  }
  else ;
  
#line 59 
  tx_power_cmd.global_lmt = (signed char)((unsigned int)priv->tx_power_user_lmt * 2U);
  
#line 61 
  if ((int)tx_power_cmd.global_lmt > (int)(priv->nvm_data)->max_tx_pwr_half_dbm) 
    
#line 73 
    tx_power_cmd.global_lmt = (priv->nvm_data)->max_tx_pwr_half_dbm; else ;
  
#line 76 
  tx_power_cmd.flags = (unsigned char)64U;
  
#line 77 
  tx_power_cmd.srv_chan_lmt = (signed char)127;
  
#line 79 
  if ((((priv->fw)->ucode_ver >> 8) & 255U) == 1U) 
#line 80 
                                                   tx_ant_cfg_cmd = (unsigned char)152U; else 
                                                                    
#line 82 
                                                                    tx_ant_cfg_cmd = (unsigned char)149U;
  
#line 84 
  tmp_2 = iwl_dvm_send_cmd_pdu(priv,(unsigned char)((int)tx_ant_cfg_cmd),0U,(unsigned short)4,(void const *)(& tx_power_cmd));
  
#line 84 
  __retres = tmp_2;
  return_label: 
#line 84 
                return __retres;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
void iwlagn_temperature(struct iwl_priv *priv)
{
  {
    int tmp_0;
    
#line 90 
    if (debug_locks != 0) {
      int tmp;
      
#line 90 
      tmp = lock_is_held(& priv->statistics.lock.__anonCompField_spinlock_18.__anonCompField___anonunion_34_17.dep_map);
      
#line 90 
      if (tmp == 0) 
#line 90 
                    tmp_0 = 1; else 
#line 90 
                                    tmp_0 = 0;
    }
    else 
#line 90 
         tmp_0 = 0;
    
#line 90 
    int __ret_warn_on = tmp_0;
    
#line 90 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 90 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c",90); else ;
    
#line 90 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 93 
  priv->temperature = (int)priv->statistics.common.temperature;
  
#line 94 
  iwl_tt_handler(priv);
  
#line 95 
  return;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwlagn_hwrate_to_mac80211_idx(u32 rate_n_flags, enum ieee80211_band band)
{
  int __retres;
  
#line 99 
  int idx = 0;
  
#line 100 
  int band_offset = 0;
  
#line 103 
  if ((rate_n_flags & 256U) != 0U) {
    
#line 104 
    idx = (int)rate_n_flags & 255;
    
#line 105 
    __retres = idx;
    
#line 105 
    goto return_label;
  }
  else {
    
#line 108 
    if (band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 109 
                                                   band_offset = 4; else ;
    
#line 110 
    idx = band_offset;
    
#line 110 
    goto ldv_55320;
    ldv_55319: 
#line 111 
    ;
    
#line 111 
    if ((unsigned int)iwl_rates[idx].plcp == (rate_n_flags & 255U)) {
      
#line 112 
      __retres = idx - band_offset;
      
#line 112 
      goto return_label;
    }
    else ;
    
#line 110 
    idx += 1;
    ldv_55320: 
#line 111 
    ;
    
#line 110 
    if (idx <= 11) 
#line 112 
                   goto ldv_55319; else 
#line 115 
                                        goto ldv_55321;
    ldv_55321: 
#line 116 
    ;
  }
  
#line 115 
  __retres = -1;
  return_label: 
#line 115 
                return __retres;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwlagn_manage_ibss_station(struct iwl_priv *priv, struct ieee80211_vif *vif, bool add)
{
  int __retres;
  int tmp_0;
  
#line 121 
  struct iwl_vif_priv *vif_priv = (struct iwl_vif_priv *)(& vif->drv_priv);
  
#line 123 
  if ((int)add != 0) {
    int tmp;
    
#line 124 
    tmp = iwlagn_add_bssid_station(priv,vif_priv->ctx,vif->bss_conf.bssid,& vif_priv->ibss_bssid_sta_id);
    
#line 124 
    __retres = tmp;
    
#line 124 
    goto return_label;
  }
  else ;
  
#line 127 
  tmp_0 = iwl_remove_station(priv,(unsigned char)((int)vif_priv->ibss_bssid_sta_id),vif->bss_conf.bssid);
  
#line 127 
  __retres = tmp_0;
  return_label: 
#line 127 
                return __retres;
}


#line 162 
void __compiletime_assert_162(void);


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwlagn_txfifo_flush(struct iwl_priv *priv, u32 scd_q_msk)
{
  int __retres;
  int tmp_0;
  
#line 140 
  struct iwl_txfifo_flush_cmd_v3 flush_cmd_v3 = {.queue_control = 0U, .flush_control = (unsigned short)2U, .reserved = (unsigned short)0};
  
#line 143 
  struct iwl_txfifo_flush_cmd_v2 flush_cmd_v2 = {.queue_control = (unsigned short)0, .flush_control = (unsigned short)2U};
  
#line 147 
  u32 queue_control = 15U;
  
#line 150 
  if ((unsigned int)priv->valid_contexts != 1U) 
#line 151 
                                                queue_control |= 496U; else ;
  
#line 156 
  if ((int)(priv->nvm_data)->sku_cap_11n_enable != 0) 
#line 157 
                                                      queue_control |= 1047552U; else ;
  
#line 159 
  if (scd_q_msk != 0U) 
#line 160 
                       queue_control = scd_q_msk; else ;
  {
    
#line 162 
    bool __cond = (_Bool)((int)*("queue control: 0x%x\n" + 19UL) != 10);
    
#line 162 
    if ((int)__cond != 0) 
#line 162 
                          __compiletime_assert_162(); else ;
  }
  
#line 162 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_txfifo_flush","queue control: 0x%x\n",queue_control);
  
#line 163 
  flush_cmd_v3.queue_control = queue_control;
  
#line 164 
  flush_cmd_v2.queue_control = (unsigned short)queue_control;
  
#line 166 
  if ((((priv->fw)->ucode_ver >> 8) & 255U) > 2U) {
    int tmp;
    
#line 167 
    tmp = iwl_dvm_send_cmd_pdu(priv,(unsigned char)30,0U,(unsigned short)8,(void const *)(& flush_cmd_v3));
    
#line 167 
    __retres = tmp;
    
#line 167 
    goto return_label;
  }
  else ;
  
#line 170 
  tmp_0 = iwl_dvm_send_cmd_pdu(priv,(unsigned char)30,0U,(unsigned short)4,(void const *)(& flush_cmd_v2));
  
#line 170 
  __retres = tmp_0;
  return_label: 
#line 170 
                return __retres;
}


#line 182 
void __compiletime_assert_182(void);


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
void iwlagn_dev_txfifo_flush(struct iwl_priv *priv)
{
  int tmp;
  
#line 176 
  ldv_mutex_lock_74_1(& priv->mutex);
  
#line 177 
  ieee80211_stop_queues(priv->hw);
  
#line 178 
  tmp = iwlagn_txfifo_flush(priv,0U);
  
#line 178 
  if (tmp != 0) {
    {
      
#line 179 
      bool __cond = (_Bool)((int)*("flush request fail\n" + 18UL) != 10);
      
#line 179 
      if ((int)__cond != 0) 
#line 179 
                            __compiletime_assert_179(); else ;
    }
    
#line 179 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"flush request fail\n");
    
#line 180 
    goto done;
  }
  else ;
  {
    
#line 182 
    bool __cond_0 = (_Bool)((int)*("wait transmit/flush all frames\n" + 30UL) != 10);
    
#line 182 
    if ((int)__cond_0 != 0) 
#line 182 
                            __compiletime_assert_182(); else ;
  }
  
#line 182 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_dev_txfifo_flush","wait transmit/flush all frames\n");
  
#line 183 
  iwl_trans_wait_tx_queue_empty(priv->trans,4294967295U);
  done: 
#line 184 
  ;
  
#line 185 
  ieee80211_wake_queues(priv->hw);
  
#line 186 
  ldv_mutex_unlock_75_1(& priv->mutex);
  
#line 187 
  return;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static __le32 const iwlagn_def_3w_lookup[12U] = {2863311530U, 2863311530U, 2930420394U, 2863311530U, 3422617384U, 43690U, 3422595754U, 43690U, 3221241856U, 16384U, 4026552320U, 4026552320U};

#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static __le32 const iwlagn_concurrent_lookup[12U] = {2863311530U, 2863311530U, 2863311530U, 2863311530U, 2863311530U, 2863311530U, 2863311530U, 2863311530U, 0U, 0U, 0U, 0U};

#line 277 
void __compiletime_assert_277(void);


#line 317 
void __compiletime_assert_317(void);


#line 327 
void __compiletime_assert_330(void);


#line 344 
void __compiletime_assert_344(void);


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
void iwlagn_send_advance_bt_config(struct iwl_priv *priv)
{
  struct iwl_bt_cmd_v1 bt_cmd_v1;
  struct iwl_bt_cmd_v2 bt_cmd_v2;
  int ret;
  char *tmp_0;
  char *tmp_0_0;
  
#line 243 
  struct iwl_basic_bt_cmd basic = {.flags = (unsigned char)0, .ledtime = (unsigned char)0, .max_kill = (unsigned char)5U, .bt3_timer_t7_value = (unsigned char)1U, .kill_ack_mask = 0U, .kill_cts_mask = 0U, .bt3_prio_sample_time = (unsigned char)2U, .bt3_timer_t2_value = (unsigned char)12U, .bt4_reaction_time = (unsigned short)0, .bt3_lookup_table = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}, .reduce_txpower = (unsigned char)0, .reserved = (unsigned char)0, .valid = (unsigned short)0};
  {
    
#line 253 
    bool __cond = (_Bool)0;
    
#line 253 
    if ((int)__cond != 0) 
#line 253 
                          __compiletime_assert_254(); else ;
  }
  
#line 256 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) 
    
#line 263 
    if ((int)((priv->lib)->bt_params)->bt_session_2 != 0) {
      
#line 264 
      bt_cmd_v2.prio_boost = ((priv->lib)->bt_params)->bt_prio_boost;
      
#line 266 
      bt_cmd_v2.tx_prio_boost = (unsigned char)0U;
      
#line 267 
      bt_cmd_v2.rx_prio_boost = (unsigned short)0U;
    }
    else {
      {
        
#line 270 
        int __ret_warn_on = (((priv->lib)->bt_params)->bt_prio_boost & 4294967040U) != 0U;
        
#line 270 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 270 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c",270); else ;
        
#line 270 
        long tmp = (long)(__ret_warn_on != 0);
      }
      
#line 271 
      bt_cmd_v1.prio_boost = (unsigned char)((priv->lib)->bt_params)->bt_prio_boost;
      
#line 273 
      bt_cmd_v1.tx_prio_boost = (unsigned char)0U;
      
#line 274 
      bt_cmd_v1.rx_prio_boost = (unsigned short)0U;
    }
  else {
    {
      
#line 277 
      bool __cond_0 = (_Bool)((int)*("failed to construct BT Coex Config\n" + 34UL) != 10);
      
#line 277 
      if ((int)__cond_0 != 0) 
#line 277 
                              __compiletime_assert_277(); else ;
    }
    
#line 277 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"failed to construct BT Coex Config\n");
    
#line 278 
    goto return_label;
  }
  
#line 291 
  basic.kill_ack_mask = priv->kill_ack_mask;
  
#line 292 
  basic.kill_cts_mask = priv->kill_cts_mask;
  
#line 293 
  if ((int)priv->reduced_txpower != 0) 
#line 294 
                                       basic.reduce_txpower = (unsigned char)1U; else ;
  
#line 295 
  basic.valid = priv->bt_valid;
  
#line 303 
  if (! iwlwifi_mod_params.bt_coex_active || priv->iw_mode == (unsigned int)NL80211_IFTYPE_ADHOC) 
    
#line 305 
    basic.flags = (unsigned char)0U;
  else {
    
#line 307 
    basic.flags = (unsigned char)16U;
    
#line 310 
    if (! priv->bt_enable_pspoll) 
#line 311 
                                  basic.flags = (unsigned char)((unsigned int)basic.flags | 128U); else 
                                                                    
#line 313 
                                                                    basic.flags = (unsigned char)((unsigned int)basic.flags & 127U);
    
#line 315 
    if ((int)priv->bt_ch_announce != 0) 
#line 316 
                                        basic.flags = (unsigned char)((unsigned int)basic.flags | 1U); else ;
    {
      
#line 317 
      bool __cond_1 = (_Bool)((int)*("BT coex flag: 0X%x\n" + 18UL) != 10);
      
#line 317 
      if ((int)__cond_1 != 0) 
#line 317 
                              __compiletime_assert_317(); else ;
    }
    
#line 317 
    __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_send_advance_bt_config","BT coex flag: 0X%x\n",(int)basic.flags);
  }
  
#line 319 
  priv->bt_enable_flag = basic.flags;
  
#line 320 
  if ((int)priv->bt_full_concurrent != 0) 
#line 321 
                                          memcpy((void *)(& basic.bt3_lookup_table),(void const *)(& iwlagn_concurrent_lookup),48UL); else 
                                                                    
#line 324 
                                                                    memcpy((void *)(& basic.bt3_lookup_table),(void const *)(& iwlagn_def_3w_lookup),48UL);
  {
    
#line 327 
    bool __cond_2 = (_Bool)((int)*("BT coex %s in %s mode\n" + 21UL) != 10);
    
#line 327 
    if ((int)__cond_2 != 0) 
#line 327 
                            __compiletime_assert_330(); else ;
  }
  
#line 327 
  if ((int)priv->bt_full_concurrent != 0) 
#line 327 
                                          tmp_0 = (char *)"full concurrency"; else 
                                                                    
#line 327 
                                                                    tmp_0 = (char *)"3-wire";
  
#line 327 
  if ((unsigned int)basic.flags != 0U) 
#line 327 
                                       tmp_0_0 = (char *)"active"; else 
                                                                    
#line 327 
                                                                    tmp_0_0 = (char *)"disabled";
  
#line 327 
  ;
  
#line 327 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_send_advance_bt_config","BT coex %s in %s mode\n",tmp_0_0,tmp_0);
  
#line 332 
  if ((int)((priv->lib)->bt_params)->bt_session_2 != 0) {
    
#line 333 
    memcpy((void *)(& bt_cmd_v2.basic),(void const *)(& basic),68UL);
    
#line 335 
    ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)155,0U,(unsigned short)76,(void const *)(& bt_cmd_v2));
  }
  else {
    
#line 338 
    memcpy((void *)(& bt_cmd_v1.basic),(void const *)(& basic),68UL);
    
#line 340 
    ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)155,0U,(unsigned short)72,(void const *)(& bt_cmd_v1));
  }
  
#line 343 
  if (ret != 0) {
    {
      
#line 344 
      bool __cond_3 = (_Bool)((int)*("failed to send BT Coex Config\n" + 29UL) != 10);
      
#line 344 
      if ((int)__cond_3 != 0) 
#line 344 
                              __compiletime_assert_344(); else ;
    }
    
#line 344 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"failed to send BT Coex Config\n");
  }
  else ;
  return_label: 
#line 346 
                return;
}


#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
void iwlagn_bt_adjust_rssi_monitor(struct iwl_priv *priv, bool rssi_ena)
{
  struct iwl_rxon_context *ctx;
  
#line 350 
  struct iwl_rxon_context *found_ctx = (struct iwl_rxon_context *)0;
  
#line 351 
  bool found_ap = (_Bool)0;
  {
    int tmp_0;
    
#line 353 
    if (debug_locks != 0) {
      int tmp;
      
#line 353 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 353 
      if (tmp == 0) 
#line 353 
                    tmp_0 = 1; else 
#line 353 
                                    tmp_0 = 0;
    }
    else 
#line 353 
         tmp_0 = 0;
    
#line 353 
    int __ret_warn_on = tmp_0;
    
#line 353 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 353 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c",353); else ;
    
#line 353 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 356 
  if ((int)rssi_ena != 0) {
    
#line 357 
    ctx = & priv->contexts[0];
    
#line 357 
    goto ldv_55397;
    ldv_55396: 
#line 358 
    ;
    
#line 357 
    if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
      
#line 358 
      if (ctx->vif != (struct ieee80211_vif *)0 && (ctx->vif)->type == (unsigned int)NL80211_IFTYPE_AP) {
        int tmp_1;
        
#line 358 
        tmp_1 = iwl_is_associated_ctx(ctx);
        
#line 358 
        if (tmp_1 != 0) {
          
#line 360 
          found_ap = (_Bool)1;
          
#line 361 
          goto ldv_55395;
        }
        else ;
      }
      else ;
    }
    else ;
    
#line 357 
    ctx += 1;
    ldv_55397: 
#line 358 
    ;
    
#line 357 
    if (& priv->contexts[2] > ctx) 
#line 359 
                                   goto ldv_55396; else 
#line 362 
                                                        goto ldv_55395;
    ldv_55395: 
#line 363 
    ;
  }
  else ;
  
#line 370 
  if (! rssi_ena || (int)found_ap != 0) {
    
#line 371 
    if (priv->cur_rssi_ctx != (struct iwl_rxon_context *)0) {
      
#line 372 
      ctx = priv->cur_rssi_ctx;
      
#line 373 
      ieee80211_disable_rssi_reports(ctx->vif);
      
#line 374 
      priv->cur_rssi_ctx = (struct iwl_rxon_context *)0;
    }
    else ;
    
#line 376 
    goto return_label;
  }
  else ;
  
#line 383 
  ctx = & priv->contexts[0];
  
#line 383 
  goto ldv_55400;
  ldv_55399: 
#line 384 
  ;
  
#line 383 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    
#line 384 
    if (ctx->vif != (struct ieee80211_vif *)0 && (ctx->vif)->type == (unsigned int)NL80211_IFTYPE_STATION) {
      int tmp_2_0;
      
#line 384 
      tmp_2_0 = iwl_is_associated_ctx(ctx);
      
#line 384 
      if (tmp_2_0 != 0) {
        
#line 386 
        found_ctx = ctx;
        
#line 387 
        goto ldv_55398;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 383 
  ctx += 1;
  ldv_55400: 
#line 384 
  ;
  
#line 383 
  if (& priv->contexts[2] > ctx) 
#line 385 
                                 goto ldv_55399; else 
#line 388 
                                                      goto ldv_55398;
  ldv_55398: 
#line 389 
  ;
  
#line 395 
  if (priv->cur_rssi_ctx == found_ctx) 
#line 396 
                                       goto return_label; else ;
  
#line 404 
  if (priv->cur_rssi_ctx != (struct iwl_rxon_context *)0) {
    
#line 405 
    ctx = priv->cur_rssi_ctx;
    
#line 406 
    if (ctx->vif != (struct ieee80211_vif *)0) 
#line 407 
                                               ieee80211_disable_rssi_reports(ctx->vif); else ;
  }
  else ;
  
#line 410 
  priv->cur_rssi_ctx = found_ctx;
  
#line 412 
  if (found_ctx == (struct iwl_rxon_context *)0) 
#line 413 
                                                 goto return_label; else ;
  
#line 415 
  ieee80211_enable_rssi_reports(found_ctx->vif,-75,-65);
  return_label: 
#line 416 
                return;
}


#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static bool iwlagn_bt_traffic_is_sco(struct iwl_bt_uart_msg *uart_msg)
{
  bool __retres;
  
#line 422 
  __retres = (_Bool)(((int)uart_msg->frame3 & 1) != 0);
  
#line 422 
  return __retres;
}


#line 443 
void __compiletime_assert_444(void);


#line 426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static void iwlagn_bt_traffic_change_work(struct work_struct *work)
{
  struct iwl_priv *tmp;
  struct iwl_rxon_context *ctx;
  int tmp_0;
  {
    
#line 429 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 429 
    tmp = (struct iwl_priv *)__mptr + 18446744073709539736U;
  }
  
#line 428 
  struct iwl_priv *priv = tmp;
  
#line 431 
  int smps_request = -1;
  
#line 433 
  if ((unsigned int)priv->bt_enable_flag == 0U) 
#line 435 
                                                goto return_label; else ;
  {
    
#line 443 
    bool __cond = (_Bool)((int)*("BT traffic load changes: %d\n" + 27UL) != 10);
    
#line 443 
    if ((int)__cond != 0) 
#line 443 
                          __compiletime_assert_444(); else ;
  }
  
#line 443 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_bt_traffic_change_work","BT traffic load changes: %d\n",(int)priv->bt_traffic_load);
  
#line 446 
  switch ((int)priv->bt_traffic_load) {
    case 0: 
#line 447 
    ;
    
#line 448 
    if ((unsigned int)priv->bt_status != 0U) 
#line 449 
                                             smps_request = 3; else 
#line 451 
                                                                    smps_request = 0;
    
#line 452 
    goto ldv_55418;
    case 1: 
#line 453 
    ;
    
#line 454 
    smps_request = 3;
    
#line 455 
    goto ldv_55418;
    case 2: 
#line 456 
    ;
    case 3: 
#line 457 
    ;
    
#line 458 
    smps_request = 2;
    
#line 459 
    goto ldv_55418;
    default: 
#line 460 
    ;
    {
      
#line 461 
      bool __cond_0 = (_Bool)((int)*("Invalid BT traffic load: %d\n" + 27UL) != 10);
      
#line 461 
      if ((int)__cond_0 != 0) 
#line 461 
                              __compiletime_assert_462(); else ;
    }
    
#line 461 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid BT traffic load: %d\n",(int)priv->bt_traffic_load);
    
#line 463 
    goto ldv_55418;
  }
  ldv_55418: 
#line 466 
  ;
  
#line 466 
  ldv_mutex_lock_76_1(& priv->mutex);
  
#line 475 
  tmp_0 = constant_test_bit(9L,(unsigned long const volatile *)(& priv->status));
  
#line 475 
  if (tmp_0 != 0) 
#line 476 
                  goto out; else ;
  
#line 478 
  iwl_update_chain_flags(priv);
  
#line 480 
  if (smps_request != -1) {
    
#line 481 
    priv->current_ht_config.smps = (enum ieee80211_smps_mode)smps_request;
    
#line 482 
    ctx = & priv->contexts[0];
    
#line 482 
    goto ldv_55429;
    ldv_55428: 
#line 483 
    ;
    
#line 482 
    if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
      
#line 483 
      if (ctx->vif != (struct ieee80211_vif *)0 && (ctx->vif)->type == (unsigned int)NL80211_IFTYPE_STATION) 
        
#line 484 
        ieee80211_request_smps(ctx->vif,(enum ieee80211_smps_mode)smps_request); else ;
    }
    else ;
    
#line 482 
    ctx += 1;
    ldv_55429: 
#line 483 
    ;
    
#line 482 
    if (& priv->contexts[2] > ctx) 
#line 484 
                                   goto ldv_55428; else 
#line 487 
                                                        goto ldv_55430;
    ldv_55430: 
#line 488 
    ;
  }
  else ;
  
#line 492 
  iwlagn_bt_coex_rssi_monitor(priv);
  out: 
#line 493 
  ;
  
#line 494 
  ldv_mutex_unlock_77_1(& priv->mutex);
  return_label: 
#line 495 
                return;
}


#line 502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
void iwlagn_bt_coex_rssi_monitor(struct iwl_priv *priv)
{
  
#line 504 
  if ((int)priv->bt_is_sco != 0 && (unsigned int)priv->bt_traffic_load == 3U) 
    
#line 506 
    iwlagn_bt_adjust_rssi_monitor(priv,(_Bool)1); else 
#line 508 
                                                       iwlagn_bt_adjust_rssi_monitor(priv,(_Bool)0);
  
#line 509 
  return;
}


#line 514 
void __compiletime_assert_521(void);


#line 523 
void __compiletime_assert_532(void);


#line 534 
void __compiletime_assert_547(void);


#line 549 
void __compiletime_assert_551(void);


#line 553 
void __compiletime_assert_560(void);


#line 562 
void __compiletime_assert_566(void);


#line 568 
void __compiletime_assert_577(void);


#line 511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static void iwlagn_print_uartmsg(struct iwl_priv *priv, struct iwl_bt_uart_msg *uart_msg)
{
  {
    
#line 514 
    bool __cond = (_Bool)((int)*("Message Type = 0x%X, SSN = 0x%X, " + 50UL) != 10);
    
#line 514 
    if ((int)__cond != 0) 
#line 514 
                          __compiletime_assert_521(); else ;
  }
  
#line 514 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_print_uartmsg","Message Type = 0x%X, SSN = 0x%X, ",(int)uart_msg->frame1 & 7,((int)uart_msg->frame1 >> 3) & 3,((int)uart_msg->frame1 >> 5) & 1);
  {
    
#line 523 
    bool __cond_0 = (_Bool)((int)*("Open connections = 0x%X, Traffic load = 0x%X, " + 77UL) != 10);
    
#line 523 
    if ((int)__cond_0 != 0) 
#line 523 
                            __compiletime_assert_532(); else ;
  }
  
#line 523 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_print_uartmsg","Open connections = 0x%X, Traffic load = 0x%X, ",(int)uart_msg->frame2 & 3,((int)uart_msg->frame2 >> 2) & 3,((int)uart_msg->frame2 >> 4) & 1,((int)uart_msg->frame2 >> 5) & 1);
  {
    
#line 534 
    bool __cond_1 = (_Bool)((int)*("SCO/eSCO = 0x%X, Sniff = 0x%X, A2DP = 0x%X, " + 82UL) != 10);
    
#line 534 
    if ((int)__cond_1 != 0) 
#line 534 
                            __compiletime_assert_547(); else ;
  }
  
#line 534 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_print_uartmsg","SCO/eSCO = 0x%X, Sniff = 0x%X, A2DP = 0x%X, ",(int)uart_msg->frame3 & 1,((int)uart_msg->frame3 >> 1) & 1,((int)uart_msg->frame3 >> 2) & 1,((int)uart_msg->frame3 >> 3) & 1,((int)uart_msg->frame3 >> 4) & 1,((int)uart_msg->frame3 >> 5) & 1);
  {
    
#line 549 
    bool __cond_2 = (_Bool)((int)*("Idle duration = 0x%X\n" + 20UL) != 10);
    
#line 549 
    if ((int)__cond_2 != 0) 
#line 549 
                            __compiletime_assert_551(); else ;
  }
  
#line 549 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_print_uartmsg","Idle duration = 0x%X\n",(int)uart_msg->frame4 & 63);
  {
    
#line 553 
    bool __cond_3 = (_Bool)((int)*("Tx Activity = 0x%X, Rx Activity = 0x%X, " + 67UL) != 10);
    
#line 553 
    if ((int)__cond_3 != 0) 
#line 553 
                            __compiletime_assert_560(); else ;
  }
  
#line 553 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_print_uartmsg","Tx Activity = 0x%X, Rx Activity = 0x%X, ",(int)uart_msg->frame5 & 3,((int)uart_msg->frame5 >> 2) & 3,((int)uart_msg->frame5 >> 4) & 3);
  {
    
#line 562 
    bool __cond_4 = (_Bool)((int)*("Sniff Interval = 0x%X, Discoverable = 0x%X\n" + 42UL) != 10);
    
#line 562 
    if ((int)__cond_4 != 0) 
#line 562 
                            __compiletime_assert_566(); else ;
  }
  
#line 562 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_print_uartmsg","Sniff Interval = 0x%X, Discoverable = 0x%X\n",(int)uart_msg->frame6 & 31,((int)uart_msg->frame6 >> 5) & 1);
  {
    
#line 568 
    bool __cond_5 = (_Bool)((int)*("Sniff Activity = 0x%X, Page = " + 70UL) != 10);
    
#line 568 
    if ((int)__cond_5 != 0) 
#line 568 
                            __compiletime_assert_577(); else ;
  }
  
#line 568 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_print_uartmsg","Sniff Activity = 0x%X, Page = ",(int)uart_msg->frame7 & 7,((int)uart_msg->frame7 >> 3) & 1,((int)uart_msg->frame7 >> 4) & 1,((int)uart_msg->frame7 >> 5) & 1);
  
#line 569 
  return;
}


#line 580  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static bool iwlagn_set_kill_msk(struct iwl_priv *priv, struct iwl_bt_uart_msg *uart_msg)
{
  
#line 583 
  bool need_update = (_Bool)0;
  
#line 584 
  u8 kill_msk = (unsigned char)2U;
  
#line 585 
  __le32 const bt_kill_ack_msg[3U] = {4294901760U, 4294967295U, 0U};
  
#line 589 
  __le32 const bt_kill_cts_msg[3U] = {4294901760U, 4294967295U, 0U};
  
#line 594 
  if (! priv->reduced_txpower) 
#line 595 
                               kill_msk = (unsigned char)((unsigned int)uart_msg->frame3 & 1U); else ;
  
#line 597 
  if (priv->kill_ack_mask != bt_kill_ack_msg[(int)kill_msk] || priv->kill_cts_mask != bt_kill_cts_msg[(int)kill_msk]) {
    
#line 599 
    priv->bt_valid = (unsigned short)((unsigned int)priv->bt_valid | 16U);
    
#line 600 
    priv->kill_ack_mask = bt_kill_ack_msg[(int)kill_msk];
    
#line 601 
    priv->bt_valid = (unsigned short)((unsigned int)priv->bt_valid | 32U);
    
#line 602 
    priv->kill_cts_mask = bt_kill_cts_msg[(int)kill_msk];
    
#line 603 
    need_update = (_Bool)1;
  }
  else ;
  
#line 605 
  return need_update;
}


#line 625 
void __compiletime_assert_625(void);


#line 632 
void __compiletime_assert_632(void);


#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static bool iwlagn_fill_txpower_mode(struct iwl_priv *priv, struct iwl_bt_uart_msg *uart_msg)
{
  bool __retres;
  int ave_rssi;
  
#line 620 
  bool need_update = (_Bool)0;
  
#line 621 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 624 
  if (ctx->vif == (struct ieee80211_vif *)0 || (ctx->vif)->type != (unsigned int)NL80211_IFTYPE_STATION) {
    {
      
#line 625 
      bool __cond = (_Bool)((int)*("BSS ctx not active or not in sta mode\n" + 37UL) != 10);
      
#line 625 
      if ((int)__cond != 0) 
#line 625 
                            __compiletime_assert_625(); else ;
    }
    
#line 625 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_fill_txpower_mode","BSS ctx not active or not in sta mode\n");
    
#line 626 
    __retres = (_Bool)0;
    
#line 626 
    goto return_label;
  }
  else ;
  
#line 629 
  ave_rssi = ieee80211_ave_rssi(ctx->vif);
  
#line 630 
  if (ave_rssi == 0) {
    {
      
#line 632 
      bool __cond_0 = (_Bool)((int)*("no rssi data available\n" + 22UL) != 10);
      
#line 632 
      if ((int)__cond_0 != 0) 
#line 632 
                              __compiletime_assert_632(); else ;
    }
    
#line 632 
    __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_fill_txpower_mode","no rssi data available\n");
    
#line 633 
    __retres = need_update;
    
#line 633 
    goto return_label;
  }
  else ;
  
#line 635 
  if (! priv->reduced_txpower) {
    int tmp_0;
    
#line 635 
    tmp_0 = iwl_is_associated(priv,(enum iwl_rxon_context_id)IWL_RXON_CTX_PAN);
    
#line 635 
    if (tmp_0 == 0) {
      
#line 636 
      if (ave_rssi >= -61) {
        
#line 637 
        if (((int)uart_msg->frame3 & 40) != 0) {
          
#line 639 
          if (((int)uart_msg->frame3 & 7) == 0) {
            
#line 643 
            priv->reduced_txpower = (_Bool)1;
            
#line 644 
            priv->bt_valid = (unsigned short)((unsigned int)priv->bt_valid | 64U);
            
#line 645 
            need_update = (_Bool)1;
          }
          else 
#line 635 
               goto _LAND_2;
        }
        else 
#line 635 
             goto _LAND_2;
      }
      else 
#line 635 
           goto _LAND_2;
    }
    else 
#line 635 
         goto _LAND_2;
  }
  else {
    _LAND_2: 
#line 646 
    ;
    
#line 646 
    if ((int)priv->reduced_txpower != 0) {
      int tmp;
      
#line 646 
      tmp = iwl_is_associated(priv,(enum iwl_rxon_context_id)IWL_RXON_CTX_PAN);
      
#line 646 
      if (tmp != 0) 
#line 646 
                    goto _LOR;
      else 
        
#line 647 
        if (ave_rssi < -65) 
#line 646 
                            goto _LOR;
        else 
          
#line 648 
          if (((int)uart_msg->frame3 & 7) != 0) 
#line 646 
                                                goto _LOR;
          else 
            
#line 650 
            if (((int)uart_msg->frame3 & 40) == 0) {
              _LOR: {
                      
#line 654 
                      priv->reduced_txpower = (_Bool)0;
                      
#line 655 
                      priv->bt_valid = (unsigned short)((unsigned int)priv->bt_valid | 64U);
                      
#line 656 
                      need_update = (_Bool)1;
                    }
            }
            else ;
    }
    else ;
  }
  
#line 659 
  __retres = need_update;
  return_label: 
#line 659 
                return __retres;
}


#line 675 
void __compiletime_assert_675(void);


#line 676 
void __compiletime_assert_676(void);


#line 678 
void __compiletime_assert_679(void);


#line 662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwlagn_bt_coex_profile_notif(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  bool tmp_0;
  
#line 666 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 667 
  struct iwl_bt_coex_profile_notif *coex = (struct iwl_bt_coex_profile_notif *)(& pkt->data);
  
#line 668 
  struct iwl_bt_uart_msg *uart_msg = & coex->last_bt_uart_msg;
  
#line 670 
  if ((unsigned int)priv->bt_enable_flag == 0U) {
    
#line 672 
    __retres = 0;
    
#line 672 
    goto return_label;
  }
  else ;
  {
    
#line 675 
    bool __cond = (_Bool)((int)*("BT Coex notification:\n" + 21UL) != 10);
    
#line 675 
    if ((int)__cond != 0) 
#line 675 
                          __compiletime_assert_675(); else ;
  }
  
#line 675 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_bt_coex_profile_notif","BT Coex notification:\n");
  {
    
#line 676 
    bool __cond_0 = (_Bool)((int)*("    status: %d\n" + 14UL) != 10);
    
#line 676 
    if ((int)__cond_0 != 0) 
#line 676 
                            __compiletime_assert_676(); else ;
  }
  
#line 676 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_bt_coex_profile_notif","    status: %d\n",(int)coex->bt_status);
  {
    
#line 677 
    bool __cond_1 = (_Bool)((int)*("    traffic load: %d\n" + 20UL) != 10);
    
#line 677 
    if ((int)__cond_1 != 0) 
#line 677 
                            __compiletime_assert_677(); else ;
  }
  
#line 677 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_bt_coex_profile_notif","    traffic load: %d\n",(int)coex->bt_traffic_load);
  {
    
#line 678 
    bool __cond_2 = (_Bool)((int)*("    CI compliance: %d\n" + 21UL) != 10);
    
#line 678 
    if ((int)__cond_2 != 0) 
#line 678 
                            __compiletime_assert_679(); else ;
  }
  
#line 678 
  __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwlagn_bt_coex_profile_notif","    CI compliance: %d\n",(int)coex->bt_ci_compliance);
  
#line 680 
  iwlagn_print_uartmsg(priv,uart_msg);
  
#line 682 
  priv->last_bt_traffic_load = priv->bt_traffic_load;
  
#line 683 
  priv->bt_is_sco = iwlagn_bt_traffic_is_sco(uart_msg);
  
#line 685 
  if (priv->iw_mode != (unsigned int)NL80211_IFTYPE_ADHOC) {
    
#line 686 
    if ((int)priv->bt_status != (int)coex->bt_status || (int)priv->last_bt_traffic_load != (int)coex->bt_traffic_load) {
      
#line 688 
      if ((unsigned int)coex->bt_status != 0U) 
        
#line 690 
        if (! priv->bt_ch_announce) 
#line 691 
                                    priv->bt_traffic_load = (unsigned char)2U; else 
                                                                    
#line 694 
                                                                    priv->bt_traffic_load = coex->bt_traffic_load;
      else 
#line 698 
           priv->bt_traffic_load = (unsigned char)0U;
      
#line 701 
      priv->bt_status = coex->bt_status;
      
#line 702 
      ldv_queue_work_78_0(priv->workqueue,& priv->bt_traffic_change_work);
    }
    else ;
  }
  else ;
  
#line 709 
  tmp_0 = iwlagn_fill_txpower_mode(priv,uart_msg);
  
#line 709 
  if ((int)tmp_0 != 0) 
#line 711 
                       ldv_queue_work_79(priv->workqueue,& priv->bt_runtime_config);
  else {
    bool tmp_1;
    
#line 709 
    tmp_1 = iwlagn_set_kill_msk(priv,uart_msg);
    
#line 709 
    if ((int)tmp_1 != 0) 
#line 711 
                         ldv_queue_work_79(priv->workqueue,& priv->bt_runtime_config); else ;
  }
  
#line 716 
  priv->bt_ci_compliance = coex->bt_ci_compliance;
  
#line 717 
  __retres = 0;
  return_label: 
#line 717 
                return __retres;
}


#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
void iwlagn_bt_rx_handler_setup(struct iwl_priv *priv)
{
  
#line 722 
  priv->rx_handlers[206] = & iwlagn_bt_coex_profile_notif;
  
#line 724 
  return;
}


#line 726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
void iwlagn_bt_setup_deferred_work(struct iwl_priv *priv)
{
  struct lock_class_key __key;
  
#line 728 
  __init_work(& priv->bt_traffic_change_work,0);
  
#line 728 
  atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL_1};
  
#line 728 
  priv->bt_traffic_change_work.data = __constr_expr_37;
  
#line 728 
  lockdep_init_map(& priv->bt_traffic_change_work.lockdep_map,"(&priv->bt_traffic_change_work)",& __key,0);
  
#line 728 
  INIT_LIST_HEAD(& priv->bt_traffic_change_work.entry);
  
#line 728 
  priv->bt_traffic_change_work.func = & iwlagn_bt_traffic_change_work;
  
#line 730 
  return;
}


#line 732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
void iwlagn_bt_cancel_deferred_work(struct iwl_priv *priv)
{
  
#line 734 
  cancel_work_sync(& priv->bt_traffic_change_work);
  
#line 735 
  return;
}


#line 737  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static bool is_single_rx_stream(struct iwl_priv *priv)
{
  bool __retres;
  
#line 739 
  __retres = (_Bool)((priv->current_ht_config.smps == (unsigned int)IEEE80211_SMPS_STATIC || (int)priv->current_ht_config.single_chain_sufficient != 0) != 0);
  
#line 739 
  return __retres;
}


#line 758  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static int iwl_get_active_rx_chain_count(struct iwl_priv *priv)
{
  int __retres;
  bool tmp;
  
#line 760 
  if (((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) && ((int)priv->bt_full_concurrent != 0 || (unsigned int)priv->bt_traffic_load > 1U)) {
    
#line 768 
    __retres = 2;
    
#line 768 
    goto return_label;
  }
  else ;
  
#line 771 
  tmp = is_single_rx_stream(priv);
  
#line 771 
  if ((int)tmp != 0) {
    
#line 772 
    __retres = 2;
    
#line 772 
    goto return_label;
  }
  else {
    
#line 774 
    __retres = 3;
    
#line 774 
    goto return_label;
  }
  return_label: 
#line 771 
                return __retres;
}


#line 781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static int iwl_get_idle_rx_chain_count(struct iwl_priv *priv, int active_cnt)
{
  int __retres;
  
#line 784 
  switch ((unsigned int)priv->current_ht_config.smps) {
    case (unsigned int)2: 
#line 785 
    ;
    case (unsigned int)3: 
#line 786 
    ;
    
#line 787 
    __retres = 1;
    
#line 787 
    goto return_label;
    case (unsigned int)0: 
#line 788 
    ;
    case (unsigned int)1: 
#line 789 
    ;
    
#line 790 
    __retres = active_cnt;
    
#line 790 
    goto return_label;
    default: 
#line 791 
    ;
    {
      
#line 792 
      int __ret_warn_on = 1;
      
#line 792 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 792 
                                            warn_slowpath_fmt("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c",793,"invalid SMPS mode %d",(unsigned int)priv->current_ht_config.smps); else ;
      
#line 792 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 794 
    __retres = active_cnt;
    
#line 794 
    goto return_label;
  }
  return_label: 
#line 784 
                return __retres;
}


#line 799  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static u8 iwl_count_chain_bitmap(u32 chain_bitmap)
{
  u8 res;
  
#line 802 
  res = (unsigned char)((unsigned int)((unsigned char)chain_bitmap) & 1U);
  
#line 803 
  res = (unsigned char)(((unsigned int)((unsigned char)((unsigned long)chain_bitmap >> 1)) & 1U) + (unsigned int)res);
  
#line 804 
  res = (unsigned char)(((unsigned int)((unsigned char)((unsigned long)chain_bitmap >> 2)) & 1U) + (unsigned int)res);
  
#line 805 
  res = (unsigned char)(((unsigned int)((unsigned char)((unsigned long)chain_bitmap >> 3)) & 1U) + (unsigned int)res);
  
#line 806 
  return res;
}


#line 870 
void __compiletime_assert_872(void);


#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
void iwlagn_set_rxon_chain(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int tmp_0;
  u8 idle_rx_cnt;
  u8 active_rx_cnt;
  u8 valid_rx_cnt;
  u32 active_chains;
  u16 rx_chain;
  int tmp_2;
  int tmp_3;
  
#line 817 
  bool is_single = is_single_rx_stream(priv);
  
#line 818 
  tmp_0 = constant_test_bit(13L,(unsigned long const volatile *)(& priv->status));
  
#line 818 
  bool is_cam = (_Bool)(tmp_0 == 0);
  
#line 827 
  if (priv->chain_noise_data.active_chains != 0U) 
#line 828 
                                                  active_chains = priv->chain_noise_data.active_chains; else 
                                                                    
#line 830 
                                                                    active_chains = (unsigned int)(priv->nvm_data)->valid_rx_ant;
  
#line 832 
  if (((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) && ((int)priv->bt_full_concurrent != 0 || (unsigned int)priv->bt_traffic_load > 1U)) {
    u8 tmp_1;
    
#line 840 
    tmp_1 = first_antenna((unsigned char)((int)((unsigned char)active_chains)));
    
#line 840 
    active_chains = (unsigned int)tmp_1;
  }
  else ;
  
#line 843 
  rx_chain = (unsigned short)((int)((unsigned short)active_chains) << 1U);
  
#line 846 
  tmp_2 = iwl_get_active_rx_chain_count(priv);
  
#line 846 
  active_rx_cnt = (unsigned char)tmp_2;
  
#line 847 
  tmp_3 = iwl_get_idle_rx_chain_count(priv,(int)active_rx_cnt);
  
#line 847 
  idle_rx_cnt = (unsigned char)tmp_3;
  
#line 853 
  valid_rx_cnt = iwl_count_chain_bitmap(active_chains);
  
#line 854 
  if ((int)valid_rx_cnt < (int)active_rx_cnt) 
#line 855 
                                              active_rx_cnt = valid_rx_cnt; else ;
  
#line 857 
  if ((int)valid_rx_cnt < (int)idle_rx_cnt) 
#line 858 
                                            idle_rx_cnt = valid_rx_cnt; else ;
  
#line 860 
  rx_chain = (unsigned short)(((int)active_rx_cnt << 12) | (int)rx_chain);
  
#line 861 
  rx_chain = (unsigned short)(((int)idle_rx_cnt << 10) | (int)rx_chain);
  
#line 863 
  ctx->staging.rx_chain = rx_chain;
  
#line 865 
  if ((! is_single && (unsigned int)active_rx_cnt > 1U) && (int)is_cam != 0) 
    
#line 866 
    ctx->staging.rx_chain = (unsigned short)((unsigned int)ctx->staging.rx_chain | 16384U); else 
                                                                    
#line 868 
                                                                    ctx->staging.rx_chain = (unsigned short)((unsigned int)ctx->staging.rx_chain & 49151U);
  {
    
#line 870 
    bool __cond = (_Bool)((int)*("rx_chain=0x%X active=%d idle=%d\n" + 31UL) != 10);
    
#line 870 
    if ((int)__cond != 0) 
#line 870 
                          __compiletime_assert_872(); else ;
  }
  
#line 870 
  __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwlagn_set_rxon_chain","rx_chain=0x%X active=%d idle=%d\n",(int)ctx->staging.rx_chain,(int)active_rx_cnt,(int)idle_rx_cnt);
  {
    
#line 874 
    int __ret_warn_on = (((unsigned int)active_rx_cnt == 0U || (unsigned int)idle_rx_cnt == 0U) || (int)active_rx_cnt < (int)idle_rx_cnt) != 0;
    
#line 874 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 874 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c",875); else ;
    
#line 874 
    long tmp_4 = (long)(__ret_warn_on != 0);
  }
  
#line 876 
  return;
}


#line 878  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
u8 iwl_toggle_tx_ant(struct iwl_priv *priv, u8 ant, u8 valid)
{
  u8 __retres;
  int i;
  
#line 881 
  u8 ind = ant;
  
#line 883 
  if (priv->band == (unsigned int)IEEE80211_BAND_2GHZ && (unsigned int)priv->bt_traffic_load > 1U) {
    
#line 885 
    __retres = (unsigned char)0U;
    
#line 885 
    goto return_label;
  }
  else ;
  
#line 887 
  i = 0;
  
#line 887 
  goto ldv_55574;
  ldv_55573: 
#line 888 
  ;
  
#line 888 
  if ((int)ind + 1 <= 2) 
#line 888 
                         ind = (unsigned char)((unsigned int)ind + 1U); else 
                                                                    
#line 888 
                                                                    ind = (unsigned char)0U;
  
#line 889 
  if ((((unsigned long)valid >> (int)ind) & 1UL) != 0UL) {
    
#line 890 
    __retres = ind;
    
#line 890 
    goto return_label;
  }
  else ;
  
#line 887 
  i += 1;
  ldv_55574: 
#line 888 
  ;
  
#line 887 
  if (i <= 1) 
#line 889 
              goto ldv_55573; else 
#line 892 
                                   goto ldv_55575;
  ldv_55575: 
#line 893 
  ;
  
#line 892 
  __retres = ant;
  return_label: 
#line 892 
                return __retres;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static void iwlagn_convert_p1k(u16 *p1k, __le16 *out)
{
  int i;
  
#line 900 
  i = 0;
  
#line 900 
  goto ldv_55582;
  ldv_55581: 
#line 901 
  ;
  
#line 901 
  *(out + i) = *(p1k + i);
  
#line 900 
  i += 1;
  ldv_55582: 
#line 901 
  ;
  
#line 900 
  if (i <= 4) 
#line 902 
              goto ldv_55581; else 
#line 905 
                                   goto ldv_55583;
  ldv_55583: 
#line 906 
  ;
  
#line 907 
  return;
}


#line 941 
void __compiletime_assert_941(void);


#line 913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
static void iwlagn_wowlan_program_keys(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta, struct ieee80211_key_conf *key, void *_data_0)
{
  struct aes_sc *aes_sc;
  struct tkip_sc *tkip_sc;
  struct iwlagn_p1k_cache *rx_p1ks;
  u8 *rx_mic_key;
  struct ieee80211_key_seq seq;
  u16 p1k[5U];
  int ret;
  int i;
  
#line 919 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 920 
  struct wowlan_key_data *data = (struct wowlan_key_data *)_data_0;
  
#line 921 
  struct iwl_rxon_context *ctx = data->ctx;
  
#line 922 
  struct aes_sc *aes_tx_sc = (struct aes_sc *)0;
  
#line 923 
  struct tkip_sc *tkip_tx_sc = (struct tkip_sc *)0;
  
#line 927 
  u32 cur_rx_iv32 = 0U;
  
#line 931 
  ldv_mutex_lock_80_0(& priv->mutex);
  
#line 933 
  if (((key->cipher == 1027073U || key->cipher == 1027077U) && sta == (struct ieee80211_sta *)0) && (unsigned int)ctx->key_mapping_keys == 0U) 
    
#line 936 
    ret = iwl_set_default_wep_key(priv,ctx,key); else 
#line 938 
                                                      ret = iwl_set_dynamic_key(priv,ctx,key,sta);
  
#line 940 
  if (ret != 0) {
    {
      
#line 941 
      bool __cond = (_Bool)((int)*("Error setting key during suspend!\n" + 33UL) != 10);
      
#line 941 
      if ((int)__cond != 0) 
#line 941 
                            __compiletime_assert_941(); else ;
    }
    
#line 941 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error setting key during suspend!\n");
    
#line 942 
    data->error = (_Bool)1;
  }
  else ;
  
#line 945 
  switch (key->cipher) {
    case (u32)1027074: 
#line 946 
    ;
    
#line 947 
    if (sta != (struct ieee80211_sta *)0) {
      
#line 948 
      tkip_sc = (struct tkip_sc *)(& (data->rsc_tsc)->all_tsc_rsc.tkip.unicast_rsc);
      
#line 949 
      tkip_tx_sc = & (data->rsc_tsc)->all_tsc_rsc.tkip.tsc;
      
#line 951 
      rx_p1ks = (struct iwlagn_p1k_cache *)(& (data->tkip)->rx_uni);
      
#line 953 
      ieee80211_get_key_tx_seq(key,& seq);
      
#line 954 
      tkip_tx_sc->iv16 = seq.__anonCompField_ieee80211_key_seq_100.tkip.iv16;
      
#line 955 
      tkip_tx_sc->iv32 = seq.__anonCompField_ieee80211_key_seq_100.tkip.iv32;
      
#line 957 
      ieee80211_get_tkip_p1k_iv(key,seq.__anonCompField_ieee80211_key_seq_100.tkip.iv32,(u16 *)(& p1k));
      
#line 958 
      iwlagn_convert_p1k((u16 *)(& p1k),(__le16 *)(& (data->tkip)->tx.p1k));
      
#line 960 
      memcpy((void *)(& (data->tkip)->mic_keys.tx),(void const *)(& key->key[16]),8UL);
      
#line 964 
      rx_mic_key = (u8 *)(& (data->tkip)->mic_keys.rx_unicast);
    }
    else {
      
#line 966 
      tkip_sc = (struct tkip_sc *)(& (data->rsc_tsc)->all_tsc_rsc.tkip.multicast_rsc);
      
#line 968 
      rx_p1ks = (struct iwlagn_p1k_cache *)(& (data->tkip)->rx_multi);
      
#line 969 
      rx_mic_key = (u8 *)(& (data->tkip)->mic_keys.rx_mcast);
    }
    
#line 977 
    i = 0;
    
#line 977 
    goto ldv_55619;
    ldv_55618: 
#line 978 
    ;
    
#line 978 
    ieee80211_get_key_rx_seq(key,i,& seq);
    
#line 979 
    (tkip_sc + i)->iv16 = seq.__anonCompField_ieee80211_key_seq_100.tkip.iv16;
    
#line 980 
    (tkip_sc + i)->iv32 = seq.__anonCompField_ieee80211_key_seq_100.tkip.iv32;
    
#line 982 
    if (seq.__anonCompField_ieee80211_key_seq_100.tkip.iv32 > cur_rx_iv32) 
      
#line 983 
      cur_rx_iv32 = seq.__anonCompField_ieee80211_key_seq_100.tkip.iv32; else ;
    
#line 977 
    i += 1;
    ldv_55619: 
#line 978 
    ;
    
#line 977 
    if (i <= 15) 
#line 979 
                 goto ldv_55618; else 
#line 982 
                                      goto ldv_55620;
    ldv_55620: 
#line 983 
    ;
    
#line 986 
    ieee80211_get_tkip_rx_p1k(key,data->bssid,cur_rx_iv32,(u16 *)(& p1k));
    
#line 987 
    iwlagn_convert_p1k((u16 *)(& p1k),(__le16 *)(& rx_p1ks->p1k));
    
#line 988 
    ieee80211_get_tkip_rx_p1k(key,data->bssid,cur_rx_iv32 + 1U,(u16 *)(& p1k));
    
#line 990 
    iwlagn_convert_p1k((u16 *)(& p1k),(__le16 *)(& (rx_p1ks + 1U)->p1k));
    
#line 992 
    memcpy((void *)rx_mic_key,(void const *)(& key->key[24]),8UL);
    
#line 996 
    data->use_tkip = (_Bool)1;
    
#line 997 
    data->use_rsc_tsc = (_Bool)1;
    
#line 998 
    goto ldv_55621;
    case (u32)1027076: 
#line 999 
    ;
    
#line 1000 
    if (sta != (struct ieee80211_sta *)0) {
      
#line 1001 
      u8 *pn = (u8 *)(& seq.__anonCompField_ieee80211_key_seq_100.ccmp.pn);
      
#line 1003 
      aes_sc = (struct aes_sc *)(& (data->rsc_tsc)->all_tsc_rsc.aes.unicast_rsc);
      
#line 1004 
      aes_tx_sc = & (data->rsc_tsc)->all_tsc_rsc.aes.tsc;
      
#line 1006 
      ieee80211_get_key_tx_seq(key,& seq);
      
#line 1007 
      aes_tx_sc->pn = (((((unsigned long long)*(pn + 5U) | ((unsigned long long)*(pn + 4U) << 8)) | ((unsigned long long)*(pn + 3U) << 16)) | ((unsigned long long)*(pn + 2U) << 24)) | ((unsigned long long)*(pn + 1U) << 32)) | ((unsigned long long)*pn << 40);
    }
    else 
#line 1015 
         aes_sc = (struct aes_sc *)(& (data->rsc_tsc)->all_tsc_rsc.aes.multicast_rsc);
    
#line 1021 
    i = 0;
    
#line 1021 
    goto ldv_55626;
    ldv_55625: 
#line 1022 
    ;
    {
      
#line 1022 
      u8 *pn_0 = (u8 *)(& seq.__anonCompField_ieee80211_key_seq_100.ccmp.pn);
      
#line 1024 
      ieee80211_get_key_rx_seq(key,i,& seq);
      
#line 1025 
      (aes_sc + i)->pn = (((((unsigned long long)*(pn_0 + 5U) | ((unsigned long long)*(pn_0 + 4U) << 8)) | ((unsigned long long)*(pn_0 + 3U) << 16)) | ((unsigned long long)*(pn_0 + 2U) << 24)) | ((unsigned long long)*(pn_0 + 1U) << 32)) | ((unsigned long long)*pn_0 << 40);
    }
    
#line 1021 
    i += 1;
    ldv_55626: 
#line 1022 
    ;
    
#line 1021 
    if (i <= 15) 
#line 1023 
                 goto ldv_55625; else 
#line 1026 
                                      goto ldv_55627;
    ldv_55627: 
#line 1027 
    ;
    
#line 1033 
    data->use_rsc_tsc = (_Bool)1;
    
#line 1034 
    goto ldv_55621;
  }
  ldv_55621: 
#line 1037 
  ;
  
#line 1037 
  ldv_mutex_unlock_81_0(& priv->mutex);
  
#line 1038 
  return;
}


#line 1040  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwlagn_send_patterns(struct iwl_priv *priv, struct cfg80211_wowlan *wowlan)
{
  int __retres;
  struct iwlagn_wowlan_patterns_cmd *pattern_cmd;
  int i;
  int err;
  
#line 1044 
  struct iwl_host_cmd cmd = {.data = {(void const *)0, (void const *)0}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)0, (unsigned short)0}, .dataflags = {(unsigned char)1U}, .id = (unsigned char)224U};
  
#line 1050 
  if (wowlan->n_patterns == 0) {
    
#line 1051 
    __retres = 0;
    
#line 1051 
    goto return_label;
  }
  else ;
  
#line 1053 
  cmd.len[0] = (unsigned short)((unsigned int)((unsigned short)((unsigned long)wowlan->n_patterns)) * 148U + 4U);
  
#line 1056 
  pattern_cmd = (struct iwlagn_wowlan_patterns_cmd *)kmalloc_2((unsigned long)cmd.len[0],208U);
  
#line 1057 
  if (pattern_cmd == (struct iwlagn_wowlan_patterns_cmd *)0) {
    
#line 1058 
    __retres = -12;
    
#line 1058 
    goto return_label;
  }
  else ;
  
#line 1060 
  pattern_cmd->n_patterns = (unsigned int)wowlan->n_patterns;
  
#line 1062 
  i = 0;
  
#line 1062 
  goto ldv_55638;
  ldv_55637: 
#line 1063 
  ;
  {
    
#line 1063 
    int mask_len = ((wowlan->patterns + i)->pattern_len + 7) / 8;
    
#line 1065 
    memcpy((void *)(& pattern_cmd->patterns[i].mask),(void const *)(wowlan->patterns + i)->mask,(unsigned long)mask_len);
    
#line 1067 
    memcpy((void *)(& pattern_cmd->patterns[i].pattern),(void const *)(wowlan->patterns + i)->pattern,(unsigned long)(wowlan->patterns + i)->pattern_len);
    
#line 1070 
    pattern_cmd->patterns[i].mask_size = (unsigned char)mask_len;
    
#line 1071 
    pattern_cmd->patterns[i].pattern_size = (unsigned char)(wowlan->patterns + i)->pattern_len;
  }
  
#line 1062 
  i += 1;
  ldv_55638: 
#line 1063 
  ;
  
#line 1062 
  if (wowlan->n_patterns > i) 
#line 1064 
                              goto ldv_55637; else 
#line 1067 
                                                   goto ldv_55639;
  ldv_55639: 
#line 1068 
  ;
  
#line 1075 
  cmd.data[0] = (void const *)pattern_cmd;
  
#line 1076 
  err = iwl_dvm_send_cmd(priv,& cmd);
  
#line 1077 
  kfree((void const *)pattern_cmd);
  
#line 1078 
  __retres = err;
  return_label: 
#line 1078 
                return __retres;
}


#line 1081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwlagn_suspend(struct iwl_priv *priv, struct cfg80211_wowlan *wowlan)
{
  int __retres;
  struct iwlagn_wowlan_wakeup_filter_cmd wakeup_filter_cmd;
  struct iwl_rxon_cmd rxon;
  struct iwlagn_wowlan_kek_kck_material_cmd kek_kck_cmd;
  int ret;
  int i;
  u16 seq;
  
#line 1085 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 1087 
  struct iwlagn_wowlan_tkip_params_cmd tkip_cmd = {.mic_keys = {.tx = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .rx_unicast = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .rx_mcast = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}}, .tx = {.p1k = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}}, .rx_uni = {{.p1k = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}}, {.p1k = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}}}, .rx_multi = {{.p1k = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}}, {.p1k = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}}}};
  
#line 1088 
  struct iwlagn_d3_config_cmd d3_cfg_cmd = {.min_sleep_time = 10000000U, .wakeup_flags = 0U};
  
#line 1096 
  struct wowlan_key_data key_data = {.ctx = ctx, .rsc_tsc = (struct iwlagn_wowlan_rsc_tsc_params_cmd *)0, .tkip = & tkip_cmd, .bssid = (u8 const *)(& ctx->active.bssid_addr), .error = (_Bool)0, .use_rsc_tsc = (_Bool)0, .use_tkip = (_Bool)0};
  
#line 1106 
  key_data.rsc_tsc = (struct iwlagn_wowlan_rsc_tsc_params_cmd *)kzalloc_1(264UL,208U);
  
#line 1107 
  if (key_data.rsc_tsc == (struct iwlagn_wowlan_rsc_tsc_params_cmd *)0) {
    
#line 1108 
    __retres = -12;
    
#line 1108 
    goto return_label;
  }
  else ;
  
#line 1110 
  memset((void *)(& wakeup_filter_cmd),0,24UL);
  
#line 1116 
  seq = (unsigned short)((unsigned int)priv->last_seq_ctl & 65520U);
  
#line 1117 
  wakeup_filter_cmd.non_qos_seq = seq;
  
#line 1123 
  i = 0;
  
#line 1123 
  goto ldv_55655;
  ldv_55654: 
#line 1124 
  ;
  
#line 1124 
  seq = priv->tid_data[0][i].seq_number;
  
#line 1125 
  seq = (unsigned short)((unsigned int)seq + 65520U);
  
#line 1126 
  wakeup_filter_cmd.qos_seq[i] = seq;
  
#line 1123 
  i += 1;
  ldv_55655: 
#line 1124 
  ;
  
#line 1123 
  if (i <= 7) 
#line 1125 
              goto ldv_55654; else 
#line 1128 
                                   goto ldv_55656;
  ldv_55656: 
#line 1129 
  ;
  
#line 1129 
  if ((int)wowlan->disconnect != 0) 
#line 1130 
                                    wakeup_filter_cmd.enabled |= 12U; else ;
  
#line 1133 
  if ((int)wowlan->magic_pkt != 0) 
#line 1134 
                                   wakeup_filter_cmd.enabled |= 1U; else ;
  
#line 1136 
  if ((int)wowlan->gtk_rekey_failure != 0) 
#line 1137 
                                           wakeup_filter_cmd.enabled |= 16U; else ;
  
#line 1139 
  if ((int)wowlan->eap_identity_req != 0) 
#line 1140 
                                          wakeup_filter_cmd.enabled |= 32U; else ;
  
#line 1142 
  if ((int)wowlan->four_way_handshake != 0) 
#line 1143 
                                            wakeup_filter_cmd.enabled |= 64U; else ;
  
#line 1145 
  if (wowlan->n_patterns != 0) 
#line 1146 
                               wakeup_filter_cmd.enabled |= 2U; else ;
  
#line 1149 
  if ((int)wowlan->rfkill_release != 0) 
#line 1150 
                                        d3_cfg_cmd.wakeup_flags |= 1U; else ;
  
#line 1153 
  iwl_scan_cancel_timeout(priv,200UL);
  
#line 1155 
  memcpy((void *)(& rxon),(void const *)(& ctx->active),50UL);
  
#line 1157 
  priv->ucode_loaded = (_Bool)0;
  
#line 1158 
  iwl_trans_stop_device(priv->trans);
  
#line 1160 
  priv->wowlan = (_Bool)1;
  
#line 1162 
  ret = iwl_load_ucode_wait_alive(priv,(enum iwl_ucode_type)IWL_UCODE_WOWLAN);
  
#line 1163 
  if (ret != 0) 
#line 1164 
                goto out; else ;
  
#line 1167 
  ret = iwl_alive_start(priv);
  
#line 1168 
  if (ret != 0) 
#line 1169 
                goto out; else ;
  
#line 1171 
  memcpy((void *)(& ctx->staging),(void const *)(& rxon),50UL);
  
#line 1172 
  ret = iwlagn_commit_rxon(priv,ctx);
  
#line 1173 
  if (ret != 0) 
#line 1174 
                goto out; else ;
  
#line 1176 
  ret = iwl_power_update_mode(priv,(_Bool)1);
  
#line 1177 
  if (ret != 0) 
#line 1178 
                goto out; else ;
  
#line 1180 
  if (iwlwifi_mod_params.sw_crypto == 0) {
    
#line 1182 
    priv->ucode_key_table = 0UL;
    
#line 1183 
    ctx->key_mapping_keys = (unsigned char)0U;
    
#line 1190 
    ldv_mutex_unlock_82_0(& priv->mutex);
    
#line 1191 
    ieee80211_iter_keys(priv->hw,ctx->vif,& iwlagn_wowlan_program_keys,(void *)(& key_data));
    
#line 1194 
    ldv_mutex_lock_83_0(& priv->mutex);
    
#line 1195 
    if ((int)key_data.error != 0) {
      
#line 1196 
      ret = -5;
      
#line 1197 
      goto out;
    }
    else ;
    
#line 1200 
    if ((int)key_data.use_rsc_tsc != 0) {
      
#line 1201 
      struct iwl_host_cmd rsc_tsc_cmd = {.data = {(void const *)key_data.rsc_tsc}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)264U}, .dataflags = {(unsigned char)1U}, .id = (unsigned char)226U};
      
#line 1208 
      ret = iwl_dvm_send_cmd(priv,& rsc_tsc_cmd);
      
#line 1209 
      if (ret != 0) 
#line 1210 
                    goto out; else ;
    }
    else ;
    
#line 1213 
    if ((int)key_data.use_tkip != 0) {
      
#line 1214 
      ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)227,0U,(unsigned short)74,(void const *)(& tkip_cmd));
      
#line 1218 
      if (ret != 0) 
#line 1219 
                    goto out; else ;
    }
    else ;
    
#line 1222 
    if ((int)priv->have_rekey_data != 0) {
      
#line 1223 
      memset((void *)(& kek_kck_cmd),0,76UL);
      
#line 1224 
      memcpy((void *)(& kek_kck_cmd.kck),(void const *)(& priv->kck),16UL);
      
#line 1225 
      kek_kck_cmd.kck_len = (unsigned short)16U;
      
#line 1226 
      memcpy((void *)(& kek_kck_cmd.kek),(void const *)(& priv->kek),16UL);
      
#line 1227 
      kek_kck_cmd.kek_len = (unsigned short)16U;
      
#line 1228 
      kek_kck_cmd.replay_ctr = priv->replay_ctr;
      
#line 1230 
      ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)228,0U,(unsigned short)76,(void const *)(& kek_kck_cmd));
      
#line 1234 
      if (ret != 0) 
#line 1235 
                    goto out; else ;
    }
    else ;
  }
  else ;
  
#line 1239 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)211,0U,(unsigned short)8,(void const *)(& d3_cfg_cmd));
  
#line 1241 
  if (ret != 0) 
#line 1242 
                goto out; else ;
  
#line 1244 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)225,0U,(unsigned short)24,(void const *)(& wakeup_filter_cmd));
  
#line 1247 
  if (ret != 0) 
#line 1248 
                goto out; else ;
  
#line 1250 
  ret = iwlagn_send_patterns(priv,wowlan);
  out: 
#line 1251 
  ;
  
#line 1252 
  kfree((void const *)key_data.rsc_tsc);
  
#line 1253 
  __retres = ret;
  return_label: 
#line 1253 
                return __retres;
}


#line 1266 
void __compiletime_assert_1267(void);


#line 1276 
void __compiletime_assert_1276(void);


#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwl_dvm_send_cmd(struct iwl_priv *priv, struct iwl_host_cmd *cmd)
{
  int __retres;
  int tmp_1;
  int tmp_4;
  int tmp_7_0;
  
#line 1259 
  tmp_1 = iwl_is_rfkill(priv);
  
#line 1259 
  if (tmp_1 != 0) 
#line 1259 
                  goto _LOR;
  else {
    int tmp_2;
    
#line 1259 
    tmp_2 = iwl_is_ctkill(priv);
    
#line 1259 
    if (tmp_2 != 0) {
      _LOR: {
              char *tmp_0;
              int tmp;
              {
                
#line 1260 
                bool __cond = (_Bool)((int)*("Not sending command - %s KILL\n" + 29UL) != 10);
                
#line 1260 
                if ((int)__cond != 0) 
#line 1260 
                                      __compiletime_assert_1261(); else ;
              }
              
#line 1260 
              tmp = iwl_is_rfkill(priv);
              
#line 1260 
              if (tmp != 0) 
#line 1260 
                            tmp_0 = (char *)"RF"; else 
#line 1260 
                                                       tmp_0 = (char *)"CT";
              
#line 1260 
              ;
              
#line 1260 
              __iwl_warn(priv->dev,"Not sending command - %s KILL\n",tmp_0);
              
#line 1262 
              __retres = -5;
              
#line 1262 
              goto return_label;
            }
    }
    else ;
  }
  
#line 1265 
  tmp_4 = constant_test_bit(10L,(unsigned long const volatile *)(& priv->status));
  
#line 1265 
  if (tmp_4 != 0) {
    char const *tmp_3;
    {
      
#line 1266 
      bool __cond_0 = (_Bool)((int)*("Command %s failed: FW Error\n" + 27UL) != 10);
      
#line 1266 
      if ((int)__cond_0 != 0) 
#line 1266 
                              __compiletime_assert_1267(); else ;
    }
    
#line 1266 
    tmp_3 = iwl_dvm_get_cmd_string((unsigned char)((int)cmd->id));
    
#line 1266 
    ;
    
#line 1266 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Command %s failed: FW Error\n",tmp_3);
    
#line 1268 
    __retres = -5;
    
#line 1268 
    goto return_label;
  }
  else ;
  
#line 1275 
  if (! priv->ucode_loaded) {
    {
      
#line 1276 
      bool __cond_1 = (_Bool)((int)*("Fw not loaded - dropping CMD: %x\n" + 32UL) != 10);
      
#line 1276 
      if ((int)__cond_1 != 0) 
#line 1276 
                              __compiletime_assert_1276(); else ;
    }
    
#line 1276 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Fw not loaded - dropping CMD: %x\n",(int)cmd->id);
    
#line 1277 
    __retres = -5;
    
#line 1277 
    goto return_label;
  }
  else ;
  
#line 1285 
  if ((cmd->flags & 1U) == 0U) {
    int tmp_6;
    
#line 1286 
    if (debug_locks != 0) {
      int tmp_5;
      
#line 1286 
      tmp_5 = lock_is_held(& priv->mutex.dep_map);
      
#line 1286 
      if (tmp_5 == 0) 
#line 1286 
                      tmp_6 = 1; else 
#line 1286 
                                      tmp_6 = 0;
    }
    else 
#line 1286 
         tmp_6 = 0;
    
#line 1286 
    int __ret_warn_on = tmp_6;
    
#line 1286 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1286 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c",1286); else ;
    
#line 1286 
    long tmp_7 = (long)(__ret_warn_on != 0);
  }
  else ;
  
#line 1288 
  tmp_7_0 = iwl_trans_send_cmd(priv->trans,cmd);
  
#line 1288 
  __retres = tmp_7_0;
  return_label: 
#line 1288 
                return __retres;
}


#line 1291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/lib.c"
int iwl_dvm_send_cmd_pdu(struct iwl_priv *priv, u8 id, u32 flags, u16 len, void const *data)
{
  int tmp;
  
#line 1294 
  struct iwl_host_cmd cmd = {.data = {data}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = flags, .len = {len}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = id};
  
#line 1301 
  tmp = iwl_dvm_send_cmd(priv,& cmd);
  
#line 1301 
  return tmp;
}


#line 414  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void *kmalloc_2(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 417 
  tmp = ldv_kmalloc(size,flags);
  
#line 417 
  return tmp;
}


#line 435  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void *kzalloc_1(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 438 
  tmp = ldv_kzalloc(size,flags);
  
#line 438 
  return tmp;
}


#line 752  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void ldv_mutex_lock_74_1(struct mutex *ldv_func_arg1)
{
  
#line 756 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 757 
  return;
}


#line 760  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void ldv_mutex_unlock_75_1(struct mutex *ldv_func_arg1)
{
  
#line 764 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 765 
  return;
}


#line 768  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void ldv_mutex_lock_76_1(struct mutex *ldv_func_arg1)
{
  
#line 772 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 773 
  return;
}


#line 776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void ldv_mutex_unlock_77_1(struct mutex *ldv_func_arg1)
{
  
#line 780 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 781 
  return;
}


#line 784  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static bool ldv_queue_work_78_0(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 788 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 788 
  __retres = tmp != 0;
  
#line 788 
  return __retres;
}


#line 792  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static bool ldv_queue_work_79(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 796 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 796 
  __retres = tmp != 0;
  
#line 796 
  return __retres;
}


#line 800  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void ldv_mutex_lock_80_0(struct mutex *ldv_func_arg1)
{
  
#line 804 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 805 
  return;
}


#line 808  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void ldv_mutex_unlock_81_0(struct mutex *ldv_func_arg1)
{
  
#line 812 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 813 
  return;
}


#line 816  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void ldv_mutex_unlock_82_0(struct mutex *ldv_func_arg1)
{
  
#line 820 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 821 
  return;
}


#line 824  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_lib.c.aux"
static void ldv_mutex_lock_83_0(struct mutex *ldv_func_arg1)
{
  
#line 828 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 829 
  return;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
static bool static_key_false_3(struct static_key *key)
{
  bool tmp;
  
#line 125 
  tmp = arch_static_branch(key);
  
#line 125 
  return tmp;
}


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static void ldv_mutex_lock_78_1(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_81_0(struct mutex *ldv_func_arg1);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_79_1(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_82_1(struct mutex *ldv_func_arg1);


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
static int ldv_mod_timer_74(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_75(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_76_0(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_77(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_80(struct timer_list *ldv_func_arg1);


#line 240 
static int ldv_del_timer_sync_83(struct timer_list *ldv_func_arg1);


#line 244 
static int ldv_del_timer_sync_87(struct timer_list *ldv_func_arg1);


#line 248 
static int ldv_del_timer_sync_88(struct timer_list *ldv_func_arg1);


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
static bool ldv_queue_work_84(struct workqueue_struct *wq, struct work_struct *work);


#line 494 
static bool ldv_queue_work_85(struct workqueue_struct *wq, struct work_struct *work);


#line 498 
static bool ldv_queue_work_86(struct workqueue_struct *wq, struct work_struct *work);


#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
void __compiletime_assert_457(void);


#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_ioread32_1(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 35 
  tmp_4 = static_key_false_3(& __tracepoint_iwlwifi_dev_ioread32.key);
  
#line 35 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 35 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_3195 __u;
          
#line 35 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ioread32.funcs),(void *)(& __u.__c),8);
          
#line 35 
          tmp = __u.__val;
        }
        
#line 35 
        struct tracepoint_func *_________p1 = tmp;
        
#line 35 
        tmp_0 = _________p1;
      }
      
#line 35 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 35 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 35 
        if (tmp_1 != 0) {
          
#line 35 
          if (! __warned) {
            int tmp_2;
            
#line 35 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 35 
            if (tmp_2 == 0) {
              
#line 35 
              __warned = (_Bool)1;
              
#line 35 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",50,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 35 
      tmp_3 = ________p1;
    }
    
#line 35 
    it_func_ptr = tmp_3;
    
#line 35 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51262: 
#line 37 
      ;
      
#line 35 
      it_func = it_func_ptr->func;
      
#line 35 
      __data = it_func_ptr->data;
      
#line 35 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 35 
      it_func_ptr += 1;
      
#line 35 
      ;
      
#line 35 
      if (it_func_ptr->func != (void *)0) 
#line 37 
                                          goto ldv_51262; else 
#line 40 
                                                               goto ldv_51263;
      ldv_51263: 
#line 41 
      ;
    }
    else ;
    
#line 35 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 35 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_3197 __u_0;
        
#line 35 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ioread32.funcs),(void *)(& __u_0.__c),8);
        
#line 35 
        tmp_5 = __u_0.__val;
      }
      
#line 35 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 35 
      tmp_6 = _________p1_0;
    }
    
#line 35 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 35 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 35 
      if (tmp_7 != 0) {
        
#line 35 
        if (! __warned_0) {
          int tmp_8;
          
#line 35 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 35 
          if (tmp_8 == 0) {
            
#line 35 
            __warned_0 = (_Bool)1;
            
#line 35 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",50,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 35 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 35 
  rcu_read_unlock_sched_notrace();
  
#line 37 
  return;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_iowrite32_3(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 69 
  tmp_4 = static_key_false_3(& __tracepoint_iwlwifi_dev_iowrite32.key);
  
#line 69 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 69 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_3203 __u;
          
#line 69 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u.__c),8);
          
#line 69 
          tmp = __u.__val;
        }
        
#line 69 
        struct tracepoint_func *_________p1 = tmp;
        
#line 69 
        tmp_0 = _________p1;
      }
      
#line 69 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 69 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 69 
        if (tmp_1 != 0) {
          
#line 69 
          if (! __warned) {
            int tmp_2;
            
#line 69 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 69 
            if (tmp_2 == 0) {
              
#line 69 
              __warned = (_Bool)1;
              
#line 69 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 69 
      tmp_3 = ________p1;
    }
    
#line 69 
    it_func_ptr = tmp_3;
    
#line 69 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51384: 
#line 71 
      ;
      
#line 69 
      it_func = it_func_ptr->func;
      
#line 69 
      __data = it_func_ptr->data;
      
#line 69 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 69 
      it_func_ptr += 1;
      
#line 69 
      ;
      
#line 69 
      if (it_func_ptr->func != (void *)0) 
#line 71 
                                          goto ldv_51384; else 
#line 74 
                                                               goto ldv_51385;
      ldv_51385: 
#line 75 
      ;
    }
    else ;
    
#line 69 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 69 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_3205 __u_0;
        
#line 69 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u_0.__c),8);
        
#line 69 
        tmp_5 = __u_0.__val;
      }
      
#line 69 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 69 
      tmp_6 = _________p1_0;
    }
    
#line 69 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 69 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 69 
      if (tmp_7 != 0) {
        
#line 69 
        if (! __warned_0) {
          int tmp_8;
          
#line 69 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 69 
          if (tmp_8 == 0) {
            
#line 69 
            __warned_0 = (_Bool)1;
            
#line 69 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 69 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 69 
  rcu_read_unlock_sched_notrace();
  
#line 71 
  return;
}


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static void iwl_write32_3(struct iwl_trans *trans, u32 ofs, u32 val)
{
  
#line 43 
  trace_iwlwifi_dev_iowrite32_3((struct device const *)trans->dev,ofs,val);
  
#line 44 
  iwl_trans_write32(trans,ofs,val);
  
#line 45 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static u32 iwl_read32_1(struct iwl_trans *trans, u32 ofs)
{
  
#line 49 
  u32 val = iwl_trans_read32(trans,ofs);
  
#line 50 
  trace_iwlwifi_dev_ioread32_1((struct device const *)trans->dev,ofs,val);
  
#line 51 
  return val;
}


#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.h"
u8 iwl_tt_current_power_mode(struct iwl_priv *priv);


#line 118 
bool iwl_tt_is_low_power_state(struct iwl_priv *priv);


#line 119 
bool iwl_ht_enabled(struct iwl_priv *priv);


#line 120 
enum iwl_antenna_ok iwl_tx_ant_restriction(struct iwl_priv *priv);


#line 121 
enum iwl_antenna_ok iwl_rx_ant_restriction(struct iwl_priv *priv);


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static struct iwl_tt_trans const tt_range_0[3U] = {{.next_state = IWL_TI_0, .tt_low = 0U, .tt_high = 104U}, {.next_state = IWL_TI_1, .tt_low = 105U, .tt_high = 113U}, {.next_state = IWL_TI_CT_KILL, .tt_low = 114U, .tt_high = 4294967295U}};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static struct iwl_tt_trans const tt_range_1[3U] = {{.next_state = IWL_TI_0, .tt_low = 0U, .tt_high = 95U}, {.next_state = IWL_TI_2, .tt_low = 110U, .tt_high = 113U}, {.next_state = IWL_TI_CT_KILL, .tt_low = 114U, .tt_high = 4294967295U}};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static struct iwl_tt_trans const tt_range_2[3U] = {{.next_state = IWL_TI_1, .tt_low = 0U, .tt_high = 100U}, {.next_state = IWL_TI_CT_KILL, .tt_low = 114U, .tt_high = 4294967295U}, {.next_state = IWL_TI_CT_KILL, .tt_low = 114U, .tt_high = 4294967295U}};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static struct iwl_tt_trans const tt_range_3[3U] = {{.next_state = IWL_TI_0, .tt_low = 0U, .tt_high = 95U}, {.next_state = IWL_TI_CT_KILL, .tt_low = 96U, .tt_high = 4294967295U}, {.next_state = IWL_TI_CT_KILL, .tt_low = 96U, .tt_high = 4294967295U}};

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static struct iwl_tt_restriction const restriction_range[4U] = {{.tx_stream = IWL_ANT_OK_MULTI, .rx_stream = IWL_ANT_OK_MULTI, .is_ht = (_Bool)1}, {.tx_stream = IWL_ANT_OK_SINGLE, .rx_stream = IWL_ANT_OK_MULTI, .is_ht = (_Bool)1}, {.tx_stream = IWL_ANT_OK_SINGLE, .rx_stream = IWL_ANT_OK_SINGLE, .is_ht = (_Bool)0}, {.tx_stream = IWL_ANT_OK_NONE, .rx_stream = IWL_ANT_OK_NONE, .is_ht = (_Bool)0}};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
bool iwl_tt_is_low_power_state(struct iwl_priv *priv)
{
  bool __retres;
  
#line 84 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 86 
  if (tt->state != (unsigned int)IWL_TI_0) {
    
#line 87 
    __retres = (_Bool)1;
    
#line 87 
    goto return_label;
  }
  else ;
  
#line 88 
  __retres = (_Bool)0;
  return_label: 
#line 88 
                return __retres;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
u8 iwl_tt_current_power_mode(struct iwl_priv *priv)
{
  u8 __retres;
  
#line 93 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 95 
  __retres = tt->tt_power_mode;
  
#line 95 
  return __retres;
}


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
bool iwl_ht_enabled(struct iwl_priv *priv)
{
  bool __retres;
  struct iwl_tt_restriction *restriction;
  
#line 100 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 103 
  if (! priv->thermal_throttle.advanced_tt) {
    
#line 104 
    __retres = (_Bool)1;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  restriction = tt->restriction + tt->state;
  
#line 106 
  __retres = restriction->is_ht;
  return_label: 
#line 106 
                return __retres;
}


#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static bool iwl_within_ct_kill_margin(struct iwl_priv *priv)
{
  
#line 111 
  s32 temp = priv->temperature;
  
#line 112 
  bool within_margin = (_Bool)0;
  
#line 114 
  if (! priv->thermal_throttle.advanced_tt) 
#line 115 
                                            within_margin = (_Bool)(temp + 3 > 109); else 
                                                                    
#line 118 
                                                                    within_margin = (_Bool)(temp + 3 > 113);
  
#line 120 
  return within_margin;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
bool iwl_check_for_ct_kill(struct iwl_priv *priv)
{
  bool tmp;
  
#line 125 
  bool is_ct_kill = (_Bool)0;
  
#line 127 
  tmp = iwl_within_ct_kill_margin(priv);
  
#line 127 
  if ((int)tmp != 0) {
    
#line 128 
    iwl_tt_enter_ct_kill(priv);
    
#line 129 
    is_ct_kill = (_Bool)1;
  }
  else ;
  
#line 131 
  return is_ct_kill;
}


#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
enum iwl_antenna_ok iwl_tx_ant_restriction(struct iwl_priv *priv)
{
  enum iwl_antenna_ok __retres;
  struct iwl_tt_restriction *restriction;
  
#line 136 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 139 
  if (! priv->thermal_throttle.advanced_tt) {
    
#line 140 
    __retres = IWL_ANT_OK_MULTI;
    
#line 140 
    goto return_label;
  }
  else ;
  
#line 141 
  restriction = tt->restriction + tt->state;
  
#line 142 
  __retres = restriction->tx_stream;
  return_label: 
#line 142 
                return __retres;
}


#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
enum iwl_antenna_ok iwl_rx_ant_restriction(struct iwl_priv *priv)
{
  enum iwl_antenna_ok __retres;
  struct iwl_tt_restriction *restriction;
  
#line 147 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 150 
  if (! priv->thermal_throttle.advanced_tt) {
    
#line 151 
    __retres = IWL_ANT_OK_MULTI;
    
#line 151 
    goto return_label;
  }
  else ;
  
#line 152 
  restriction = tt->restriction + tt->state;
  
#line 153 
  __retres = restriction->rx_stream;
  return_label: 
#line 153 
                return __retres;
}


#line 193 
void __compiletime_assert_193(void);


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static void iwl_tt_check_exit_ct_kill(unsigned long data)
{
  unsigned long flags;
  int tmp;
  
#line 169 
  struct iwl_priv *priv = (struct iwl_priv *)data;
  
#line 170 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 173 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 173 
  if (tmp != 0) 
#line 174 
                goto return_label; else ;
  
#line 176 
  if (tt->state == (unsigned int)IWL_TI_CT_KILL) {
    bool tmp_0;
    
#line 177 
    if ((int)priv->thermal_throttle.ct_kill_toggle != 0) {
      
#line 178 
      iwl_write32_3(priv->trans,92U,8U);
      
#line 180 
      priv->thermal_throttle.ct_kill_toggle = (_Bool)0;
    }
    else {
      
#line 182 
      iwl_write32_3(priv->trans,88U,8U);
      
#line 184 
      priv->thermal_throttle.ct_kill_toggle = (_Bool)1;
    }
    
#line 186 
    iwl_read32_1(priv->trans,84U);
    
#line 187 
    tmp_0 = (*(((priv->trans)->ops)->grab_nic_access))(priv->trans,(_Bool)0,& flags);
    
#line 187 
    if ((long)((int)tmp_0 != 0) != 0L) 
#line 188 
                                       iwl_trans_release_nic_access(priv->trans,& flags); else ;
    {
      
#line 193 
      bool __cond = (_Bool)((int)*("schedule ct_kill exit timer\n" + 27UL) != 10);
      
#line 193 
      if ((int)__cond != 0) 
#line 193 
                            __compiletime_assert_193(); else ;
    }
    
#line 193 
    __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_tt_check_exit_ct_kill","schedule ct_kill exit timer\n");
    
#line 194 
    ldv_mod_timer_74(& priv->thermal_throttle.ct_kill_exit_tm,jiffies + 1250UL);
  }
  else ;
  return_label: 
#line 197 
                return;
}


#line 203 
void __compiletime_assert_203(void);


#line 211 
void __compiletime_assert_211(void);


#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static void iwl_perform_ct_kill_task(struct iwl_priv *priv, bool stop)
{
  
#line 202 
  if ((int)stop != 0) {
    {
      
#line 203 
      bool __cond = (_Bool)((int)*("Stop all queues\n" + 15UL) != 10);
      
#line 203 
      if ((int)__cond != 0) 
#line 203 
                            __compiletime_assert_203(); else ;
    }
    
#line 203 
    __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_perform_ct_kill_task","Stop all queues\n");
    
#line 204 
    if ((unsigned int)priv->mac80211_registered != 0U) 
#line 205 
                                                       ieee80211_stop_queues(priv->hw); else ;
    {
      
#line 206 
      bool __cond_0 = (_Bool)((int)*("Schedule 5 seconds CT_KILL Timer\n" + 32UL) != 10);
      
#line 206 
      if ((int)__cond_0 != 0) 
#line 206 
                              __compiletime_assert_207(); else ;
    }
    
#line 206 
    __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_perform_ct_kill_task","Schedule 5 seconds CT_KILL Timer\n");
    
#line 208 
    ldv_mod_timer_75(& priv->thermal_throttle.ct_kill_exit_tm,jiffies + 1250UL);
  }
  else {
    {
      
#line 211 
      bool __cond_1 = (_Bool)((int)*("Wake all queues\n" + 15UL) != 10);
      
#line 211 
      if ((int)__cond_1 != 0) 
#line 211 
                              __compiletime_assert_211(); else ;
    }
    
#line 211 
    __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_perform_ct_kill_task","Wake all queues\n");
    
#line 212 
    if ((unsigned int)priv->mac80211_registered != 0U) 
#line 213 
                                                       ieee80211_wake_queues(priv->hw); else ;
  }
  
#line 215 
  return;
}


#line 227 
void __compiletime_assert_228(void);


#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static void iwl_tt_ready_for_ct_kill(unsigned long data)
{
  int tmp;
  
#line 219 
  struct iwl_priv *priv = (struct iwl_priv *)data;
  
#line 220 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 222 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 222 
  if (tmp != 0) 
#line 223 
                goto return_label; else ;
  
#line 226 
  if (tt->state != (unsigned int)IWL_TI_CT_KILL) {
    {
      
#line 227 
      bool __cond = (_Bool)((int)*("entering CT_KILL state when " + 53UL) != 10);
      
#line 227 
      if ((int)__cond != 0) 
#line 227 
                            __compiletime_assert_228(); else ;
    }
    
#line 227 
    __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_tt_ready_for_ct_kill","entering CT_KILL state when ");
    
#line 229 
    tt->state = IWL_TI_CT_KILL;
    
#line 230 
    set_bit(1L,(unsigned long volatile *)(& priv->status));
    
#line 231 
    iwl_perform_ct_kill_task(priv,(_Bool)1);
  }
  else ;
  return_label: 
#line 233 
                return;
}


#line 237 
void __compiletime_assert_237(void);


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static void iwl_prepare_ct_kill_task(struct iwl_priv *priv)
{
  unsigned long tmp;
  {
    
#line 237 
    bool __cond = (_Bool)((int)*("Prepare to enter IWL_TI_CT_KILL\n" + 31UL) != 10);
    
#line 237 
    if ((int)__cond != 0) 
#line 237 
                          __compiletime_assert_237(); else ;
  }
  
#line 237 
  __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_prepare_ct_kill_task","Prepare to enter IWL_TI_CT_KILL\n");
  
#line 239 
  iwl_send_statistics_request(priv,(unsigned char)0,(_Bool)0);
  
#line 241 
  tmp = msecs_to_jiffies(300U);
  
#line 241 
  ;
  
#line 241 
  ;
  
#line 241 
  ldv_mod_timer_76_0(& priv->thermal_throttle.ct_kill_waiting_tm,tmp + jiffies);
  
#line 243 
  return;
}


#line 333 
void __compiletime_assert_334(void);


#line 335 
void __compiletime_assert_336(void);


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static void iwl_legacy_tt_handler(struct iwl_priv *priv, s32 temp, bool force)
{
  enum iwl_tt_state old_state;
  
#line 260 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 264 
  if ((tt->tt_previous_temp != 0 && tt->tt_previous_temp < temp) && temp - tt->tt_previous_temp > 5) {
    {
      
#line 268 
      bool __cond = (_Bool)((int)*("Temperature increase %d degree Celsius\n" + 38UL) != 10);
      
#line 268 
      if ((int)__cond != 0) 
#line 268 
                            __compiletime_assert_270(); else ;
    }
    
#line 268 
    __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_legacy_tt_handler","Temperature increase %d degree Celsius\n",temp - tt->tt_previous_temp);
  }
  else ;
  
#line 273 
  old_state = tt->state;
  
#line 275 
  if (temp > 109) 
#line 276 
                  tt->state = IWL_TI_CT_KILL;
  else 
    
#line 277 
    if (temp > 99) 
#line 278 
                   tt->state = IWL_TI_2;
    else 
      
#line 279 
      if (temp > 89) 
#line 280 
                     tt->state = IWL_TI_1; else 
#line 282 
                                                tt->state = IWL_TI_0;
  
#line 285 
  tt->tt_previous_temp = temp;
  
#line 288 
  ldv_del_timer_sync_77(& priv->thermal_throttle.ct_kill_waiting_tm);
  
#line 289 
  if (tt->state != old_state) {
    
#line 290 
    switch ((unsigned int)tt->state) {
      case (unsigned int)0: 
#line 291 
      ;
      
#line 297 
      goto ldv_55261;
      case (unsigned int)1: 
#line 298 
      ;
      
#line 299 
      tt->tt_power_mode = (unsigned char)2U;
      
#line 300 
      goto ldv_55261;
      case (unsigned int)2: 
#line 301 
      ;
      
#line 302 
      tt->tt_power_mode = (unsigned char)3U;
      
#line 303 
      goto ldv_55261;
      default: 
#line 304 
      ;
      
#line 305 
      tt->tt_power_mode = (unsigned char)4U;
      
#line 306 
      goto ldv_55261;
    }
    ldv_55261: 
#line 308 
    ;
    
#line 308 
    ldv_mutex_lock_78_1(& priv->mutex);
    
#line 309 
    if (old_state == (unsigned int)IWL_TI_CT_KILL) 
#line 310 
                                                   set_bit(1L,(unsigned long volatile *)(& priv->status)); else ;
    
#line 311 
    if (tt->state != (unsigned int)IWL_TI_CT_KILL) {
      int tmp;
      
#line 311 
      tmp = iwl_power_update_mode(priv,(_Bool)1);
      
#line 311 
      if (tmp != 0) {
        
#line 316 
        if (old_state == (unsigned int)IWL_TI_CT_KILL) 
#line 317 
                                                       set_bit(1L,(unsigned long volatile *)(& priv->status)); else ;
        
#line 318 
        tt->state = old_state;
        {
          
#line 319 
          bool __cond_0 = (_Bool)((int)*("Cannot update power mode, " + 46UL) != 10);
          
#line 319 
          if ((int)__cond_0 != 0) 
#line 319 
                                  __compiletime_assert_320(); else ;
        }
        
#line 319 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Cannot update power mode, ");
      }
      else 
#line 311 
           goto _LAND;
    }
    else {
      _LAND: {
               
#line 322 
               if (tt->state == (unsigned int)IWL_TI_CT_KILL) 
                 
#line 323 
                 if ((int)force != 0) {
                   
#line 324 
                   set_bit(1L,(unsigned long volatile *)(& priv->status));
                   
#line 325 
                   iwl_perform_ct_kill_task(priv,(_Bool)1);
                 }
                 else {
                   
#line 327 
                   iwl_prepare_ct_kill_task(priv);
                   
#line 328 
                   tt->state = old_state;
                 }
               else 
                 
#line 330 
                 if (old_state == (unsigned int)IWL_TI_CT_KILL && tt->state != (unsigned int)IWL_TI_CT_KILL) 
                   
#line 332 
                   iwl_perform_ct_kill_task(priv,(_Bool)0); else ;
               {
                 
#line 333 
                 bool __cond_1 = (_Bool)((int)*("Temperature state changed %u\n" + 28UL) != 10);
                 
#line 333 
                 if ((int)__cond_1 != 0) 
#line 333 
                                         __compiletime_assert_334(); else ;
               }
               
#line 333 
               __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_legacy_tt_handler","Temperature state changed %u\n",(unsigned int)tt->state);
               {
                 
#line 335 
                 bool __cond_2 = (_Bool)((int)*("Power Index change to %u\n" + 24UL) != 10);
                 
#line 335 
                 if ((int)__cond_2 != 0) 
#line 335 
                                         __compiletime_assert_336(); else ;
               }
               
#line 335 
               __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_legacy_tt_handler","Power Index change to %u\n",(int)tt->tt_power_mode);
             }
    }
    
#line 338 
    ldv_mutex_unlock_79_1(& priv->mutex);
  }
  else ;
  
#line 340 
  return;
}


#line 392 
void __compiletime_assert_395(void);


#line 462 
void __compiletime_assert_464(void);


#line 468 
void __compiletime_assert_469(void);


#line 478 
void __compiletime_assert_478(void);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static void iwl_advance_tt_handler(struct iwl_priv *priv, s32 temp, bool force)
{
  int i;
  enum iwl_tt_state old_state;
  struct iwl_tt_trans *transaction;
  
#line 365 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 367 
  bool changed = (_Bool)0;
  
#line 371 
  old_state = tt->state;
  
#line 372 
  i = 0;
  
#line 372 
  goto ldv_55294;
  ldv_55293: 
#line 373 
  ;
  
#line 383 
  transaction = tt->transaction + ((unsigned int)old_state * 3U + (unsigned int)i);
  
#line 385 
  if (transaction->tt_low <= (unsigned int)temp && transaction->tt_high >= (unsigned int)temp) {
    
#line 388 
    if ((tt->tt_previous_temp != 0 && tt->tt_previous_temp < temp) && temp - tt->tt_previous_temp > 5) {
      {
        
#line 392 
        bool __cond = (_Bool)((int)*("Temperature increase %d " + 38UL) != 10);
        
#line 392 
        if ((int)__cond != 0) 
#line 392 
                              __compiletime_assert_395(); else ;
      }
      
#line 392 
      __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_advance_tt_handler","Temperature increase %d ",temp - tt->tt_previous_temp);
    }
    else ;
    
#line 397 
    tt->tt_previous_temp = temp;
    
#line 399 
    if (transaction->next_state != old_state) {
      
#line 401 
      changed = (_Bool)1;
      
#line 402 
      tt->state = transaction->next_state;
    }
    else ;
    
#line 405 
    goto ldv_55292;
  }
  else ;
  
#line 372 
  i += 1;
  ldv_55294: 
#line 373 
  ;
  
#line 372 
  if (i <= 2) 
#line 374 
              goto ldv_55293; else 
#line 377 
                                   goto ldv_55292;
  ldv_55292: 
#line 378 
  ;
  
#line 409 
  ldv_del_timer_sync_80(& priv->thermal_throttle.ct_kill_waiting_tm);
  
#line 410 
  if ((int)changed != 0) {
    
#line 411 
    if (tt->state != (unsigned int)IWL_TI_0) {
      int tmp_0;
      bool tmp;
      
#line 413 
      tt->tt_power_mode = (unsigned char)4U;
      
#line 415 
      tmp = iwl_ht_enabled(priv);
      
#line 415 
      if (tmp) 
#line 415 
               tmp_0 = 0; else 
#line 415 
                               tmp_0 = 1;
      
#line 415 
      if (tmp_0) {
        struct iwl_rxon_context *ctx;
        
#line 418 
        ctx = & priv->contexts[0];
        
#line 418 
        goto ldv_55298;
        ldv_55297: 
#line 419 
        ;
        
#line 418 
        if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
          struct iwl_rxon_cmd *rxon;
          
#line 421 
          rxon = & ctx->staging;
          
#line 424 
          rxon->flags &= 4164943871U;
        }
        else ;
        
#line 418 
        ctx += 1;
        ldv_55298: 
#line 419 
        ;
        
#line 418 
        if (& priv->contexts[2] > ctx) 
#line 420 
                                       goto ldv_55297; else 
#line 423 
                                                            goto ldv_55299;
        ldv_55299: 
#line 424 
        ;
      }
      else 
#line 434 
           iwl_set_rxon_ht(priv,& priv->current_ht_config);
    }
    else 
#line 446 
         iwl_set_rxon_ht(priv,& priv->current_ht_config);
    
#line 448 
    ldv_mutex_lock_81_0(& priv->mutex);
    
#line 449 
    if (old_state == (unsigned int)IWL_TI_CT_KILL) 
#line 450 
                                                   set_bit(1L,(unsigned long volatile *)(& priv->status)); else ;
    
#line 451 
    if (tt->state != (unsigned int)IWL_TI_CT_KILL) {
      int tmp_1;
      
#line 451 
      tmp_1 = iwl_power_update_mode(priv,(_Bool)1);
      
#line 451 
      if (tmp_1 != 0) {
        {
          
#line 456 
          bool __cond_0 = (_Bool)((int)*("Cannot update power mode, " + 46UL) != 10);
          
#line 456 
          if ((int)__cond_0 != 0) 
#line 456 
                                  __compiletime_assert_457(); else ;
        }
        
#line 456 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Cannot update power mode, ");
        
#line 458 
        if (old_state == (unsigned int)IWL_TI_CT_KILL) 
#line 459 
                                                       set_bit(1L,(unsigned long volatile *)(& priv->status)); else ;
        
#line 460 
        tt->state = old_state;
      }
      else 
#line 451 
           goto _LAND;
    }
    else {
      _LAND: {
               {
                 
#line 462 
                 bool __cond_1 = (_Bool)((int)*("Thermal Throttling to new state: %u\n" + 35UL) != 10);
                 
#line 462 
                 if ((int)__cond_1 != 0) 
#line 462 
                                         __compiletime_assert_464(); else ;
               }
               
#line 462 
               __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_advance_tt_handler","Thermal Throttling to new state: %u\n",(unsigned int)tt->state);
               
#line 465 
               if (old_state != (unsigned int)IWL_TI_CT_KILL && tt->state == (unsigned int)IWL_TI_CT_KILL) 
                 
#line 467 
                 if ((int)force != 0) {
                   {
                     
#line 468 
                     bool __cond_2 = (_Bool)((int)*("Enter IWL_TI_CT_KILL\n" + 20UL) != 10);
                     
#line 468 
                     if ((int)__cond_2 != 0) 
#line 468 
                                             __compiletime_assert_469(); else ;
                   }
                   
#line 468 
                   __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_advance_tt_handler","Enter IWL_TI_CT_KILL\n");
                   
#line 470 
                   set_bit(1L,(unsigned long volatile *)(& priv->status));
                   
#line 471 
                   iwl_perform_ct_kill_task(priv,(_Bool)1);
                 }
                 else {
                   
#line 473 
                   tt->state = old_state;
                   
#line 474 
                   iwl_prepare_ct_kill_task(priv);
                 }
               else 
                 
#line 476 
                 if (old_state == (unsigned int)IWL_TI_CT_KILL && tt->state != (unsigned int)IWL_TI_CT_KILL) {
                   {
                     
#line 478 
                     bool __cond_3 = (_Bool)((int)*("Exit IWL_TI_CT_KILL\n" + 19UL) != 10);
                     
#line 478 
                     if ((int)__cond_3 != 0) 
#line 478 
                                             __compiletime_assert_478(); else ;
                   }
                   
#line 478 
                   __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_advance_tt_handler","Exit IWL_TI_CT_KILL\n");
                   
#line 479 
                   iwl_perform_ct_kill_task(priv,(_Bool)0);
                 }
                 else ;
             }
    }
    
#line 482 
    ldv_mutex_unlock_82_1(& priv->mutex);
  }
  else ;
  
#line 484 
  return;
}


#line 508 
void __compiletime_assert_509(void);


#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static void iwl_bg_ct_enter(struct work_struct *work)
{
  struct iwl_priv *tmp;
  int tmp_0;
  int tmp_1;
  {
    
#line 498 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 498 
    tmp = (struct iwl_priv *)__mptr + 18446744073709539208U;
  }
  
#line 498 
  struct iwl_priv *priv = tmp;
  
#line 499 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 501 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 501 
  if (tmp_0 != 0) 
#line 502 
                  goto return_label; else ;
  
#line 504 
  tmp_1 = iwl_is_ready(priv);
  
#line 504 
  if (tmp_1 == 0) 
#line 505 
                  goto return_label; else ;
  
#line 507 
  if (tt->state != (unsigned int)IWL_TI_CT_KILL) {
    {
      
#line 508 
      bool __cond = (_Bool)((int)*("Device reached critical temperature " + 59UL) != 10);
      
#line 508 
      if ((int)__cond != 0) 
#line 508 
                            __compiletime_assert_509(); else ;
    }
    
#line 508 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Device reached critical temperature ");
    
#line 510 
    if (! priv->thermal_throttle.advanced_tt) 
#line 511 
                                              iwl_legacy_tt_handler(priv,110,(_Bool)1); else 
                                                                    
#line 515 
                                                                    iwl_advance_tt_handler(priv,115,(_Bool)1);
  }
  else ;
  return_label: 
#line 517 
                return;
}


#line 540 
void __compiletime_assert_542(void);


#line 525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static void iwl_bg_ct_exit(struct work_struct *work)
{
  struct iwl_priv *tmp;
  int tmp_0;
  int tmp_1;
  {
    
#line 527 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 527 
    tmp = (struct iwl_priv *)__mptr + 18446744073709539128U;
  }
  
#line 527 
  struct iwl_priv *priv = tmp;
  
#line 528 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 530 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 530 
  if (tmp_0 != 0) 
#line 531 
                  goto return_label; else ;
  
#line 533 
  tmp_1 = iwl_is_ready(priv);
  
#line 533 
  if (tmp_1 == 0) 
#line 534 
                  goto return_label; else ;
  
#line 537 
  ldv_del_timer_sync_83(& priv->thermal_throttle.ct_kill_exit_tm);
  
#line 539 
  if (tt->state == (unsigned int)IWL_TI_CT_KILL) {
    {
      
#line 540 
      bool __cond = (_Bool)((int)*("Device temperature below critical" + 47UL) != 10);
      
#line 540 
      if ((int)__cond != 0) 
#line 540 
                            __compiletime_assert_542(); else ;
    }
    
#line 540 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Device temperature below critical");
    
#line 547 
    priv->temperature = 0;
    
#line 548 
    if (! priv->thermal_throttle.advanced_tt) 
#line 549 
                                              iwl_legacy_tt_handler(priv,100,(_Bool)1); else 
                                                                    
#line 553 
                                                                    iwl_advance_tt_handler(priv,95,(_Bool)1);
  }
  else ;
  return_label: 
#line 555 
                return;
}


#line 563 
void __compiletime_assert_563(void);


#line 558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
void iwl_tt_enter_ct_kill(struct iwl_priv *priv)
{
  int tmp;
  
#line 560 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 560 
  if (tmp != 0) 
#line 561 
                goto return_label; else ;
  {
    
#line 563 
    bool __cond = (_Bool)((int)*("Queueing critical temperature enter.\n" + 36UL) != 10);
    
#line 563 
    if ((int)__cond != 0) 
#line 563 
                          __compiletime_assert_563(); else ;
  }
  
#line 563 
  __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_tt_enter_ct_kill","Queueing critical temperature enter.\n");
  
#line 564 
  ldv_queue_work_84(priv->workqueue,& priv->ct_enter);
  return_label: 
#line 565 
                return;
}


#line 572 
void __compiletime_assert_572(void);


#line 567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
void iwl_tt_exit_ct_kill(struct iwl_priv *priv)
{
  int tmp;
  
#line 569 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 569 
  if (tmp != 0) 
#line 570 
                goto return_label; else ;
  {
    
#line 572 
    bool __cond = (_Bool)((int)*("Queueing critical temperature exit.\n" + 35UL) != 10);
    
#line 572 
    if ((int)__cond != 0) 
#line 572 
                          __compiletime_assert_572(); else ;
  }
  
#line 572 
  __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_tt_exit_ct_kill","Queueing critical temperature exit.\n");
  
#line 573 
  ldv_queue_work_85(priv->workqueue,& priv->ct_exit);
  return_label: 
#line 574 
                return;
}


#line 576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
static void iwl_bg_tt_work(struct work_struct *work)
{
  struct iwl_priv *tmp;
  int tmp_0;
  {
    
#line 578 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 578 
    tmp = (struct iwl_priv *)__mptr + 18446744073709539288U;
  }
  
#line 578 
  struct iwl_priv *priv = tmp;
  
#line 579 
  s32 temp = priv->temperature;
  
#line 581 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 581 
  if (tmp_0 != 0) 
#line 582 
                  goto return_label; else ;
  
#line 584 
  if (! priv->thermal_throttle.advanced_tt) 
#line 585 
                                            iwl_legacy_tt_handler(priv,temp,(_Bool)0); else 
                                                                    
#line 587 
                                                                    iwl_advance_tt_handler(priv,temp,(_Bool)0);
  return_label: 
#line 588 
                return;
}


#line 595 
void __compiletime_assert_595(void);


#line 590  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
void iwl_tt_handler(struct iwl_priv *priv)
{
  int tmp;
  
#line 592 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 592 
  if (tmp != 0) 
#line 593 
                goto return_label; else ;
  {
    
#line 595 
    bool __cond = (_Bool)((int)*("Queueing thermal throttling work.\n" + 33UL) != 10);
    
#line 595 
    if ((int)__cond != 0) 
#line 595 
                          __compiletime_assert_595(); else ;
  }
  
#line 595 
  __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_tt_handler","Queueing thermal throttling work.\n");
  
#line 596 
  ldv_queue_work_86(priv->workqueue,& priv->tt_work);
  return_label: 
#line 597 
                return;
}


#line 610 
void __compiletime_assert_610(void);


#line 634 
void __compiletime_assert_634(void);


#line 660 
void __compiletime_assert_660(void);


#line 604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
void iwl_tt_initialize(struct iwl_priv *priv)
{
  struct iwl_tt_trans *transaction;
  
#line 606 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 607 
  int size = 36;
  {
    
#line 610 
    bool __cond = (_Bool)((int)*("Initialize Thermal Throttling\n" + 29UL) != 10);
    
#line 610 
    if ((int)__cond != 0) 
#line 610 
                          __compiletime_assert_610(); else ;
  }
  
#line 610 
  __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_tt_initialize","Initialize Thermal Throttling\n");
  
#line 612 
  memset((void *)tt,0,288UL);
  
#line 614 
  tt->state = IWL_TI_0;
  {
    struct lock_class_key __key;
    
#line 615 
    init_timer_key(& priv->thermal_throttle.ct_kill_exit_tm,0U,"((&priv->thermal_throttle.ct_kill_exit_tm))",& __key);
  }
  
#line 615 
  priv->thermal_throttle.ct_kill_exit_tm.function = & iwl_tt_check_exit_ct_kill;
  
#line 615 
  priv->thermal_throttle.ct_kill_exit_tm.data = (unsigned long)priv;
  {
    struct lock_class_key __key_0;
    
#line 617 
    init_timer_key(& priv->thermal_throttle.ct_kill_waiting_tm,0U,"((&priv->thermal_throttle.ct_kill_waiting_tm))",& __key_0);
  }
  
#line 617 
  priv->thermal_throttle.ct_kill_waiting_tm.function = & iwl_tt_ready_for_ct_kill;
  
#line 617 
  priv->thermal_throttle.ct_kill_waiting_tm.data = (unsigned long)priv;
  {
    struct lock_class_key __key_1;
    
#line 620 
    __init_work(& priv->tt_work,0);
    
#line 620 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL_2};
    
#line 620 
    priv->tt_work.data = __constr_expr_37;
    
#line 620 
    lockdep_init_map(& priv->tt_work.lockdep_map,"(&priv->tt_work)",& __key_1,0);
    
#line 620 
    INIT_LIST_HEAD(& priv->tt_work.entry);
    
#line 620 
    priv->tt_work.func = & iwl_bg_tt_work;
  }
  {
    struct lock_class_key __key_2;
    
#line 621 
    __init_work(& priv->ct_enter,0);
    
#line 621 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL_2};
    
#line 621 
    priv->ct_enter.data = __constr_expr_38;
    
#line 621 
    lockdep_init_map(& priv->ct_enter.lockdep_map,"(&priv->ct_enter)",& __key_2,0);
    
#line 621 
    INIT_LIST_HEAD(& priv->ct_enter.entry);
    
#line 621 
    priv->ct_enter.func = & iwl_bg_ct_enter;
  }
  {
    struct lock_class_key __key_3;
    
#line 622 
    __init_work(& priv->ct_exit,0);
    
#line 622 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL_2};
    
#line 622 
    priv->ct_exit.data = __constr_expr_39;
    
#line 622 
    lockdep_init_map(& priv->ct_exit.lockdep_map,"(&priv->ct_exit)",& __key_3,0);
    
#line 622 
    INIT_LIST_HEAD(& priv->ct_exit.entry);
    
#line 622 
    priv->ct_exit.func = & iwl_bg_ct_exit;
  }
  
#line 624 
  if ((int)(priv->lib)->adv_thermal_throttle != 0) {
    {
      
#line 625 
      bool __cond_0 = (_Bool)((int)*("Advanced Thermal Throttling\n" + 27UL) != 10);
      
#line 625 
      if ((int)__cond_0 != 0) 
#line 625 
                              __compiletime_assert_625(); else ;
    }
    
#line 625 
    __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_tt_initialize","Advanced Thermal Throttling\n");
    
#line 626 
    tt->restriction = (struct iwl_tt_restriction *)kcalloc(4UL,12UL,208U);
    
#line 629 
    tt->transaction = (struct iwl_tt_trans *)kcalloc(12UL,12UL,208U);
    
#line 633 
    if (tt->restriction == (struct iwl_tt_restriction *)0 || tt->transaction == (struct iwl_tt_trans *)0) {
      {
        
#line 634 
        bool __cond_1 = (_Bool)((int)*("Fallback to Legacy Throttling\n" + 29UL) != 10);
        
#line 634 
        if ((int)__cond_1 != 0) 
#line 634 
                                __compiletime_assert_634(); else ;
      }
      
#line 634 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Fallback to Legacy Throttling\n");
      
#line 635 
      priv->thermal_throttle.advanced_tt = (_Bool)0;
      
#line 636 
      kfree((void const *)tt->restriction);
      
#line 637 
      tt->restriction = (struct iwl_tt_restriction *)0;
      
#line 638 
      kfree((void const *)tt->transaction);
      
#line 639 
      tt->transaction = (struct iwl_tt_trans *)0;
    }
    else {
      
#line 641 
      transaction = tt->transaction;
      
#line 643 
      memcpy((void *)transaction,(void const *)(&(tt_range_0[0])),(unsigned long)size);
      
#line 644 
      transaction = tt->transaction + 3U;
      
#line 646 
      memcpy((void *)transaction,(void const *)(&(tt_range_1[0])),(unsigned long)size);
      
#line 647 
      transaction = tt->transaction + 6U;
      
#line 649 
      memcpy((void *)transaction,(void const *)(&(tt_range_2[0])),(unsigned long)size);
      
#line 650 
      transaction = tt->transaction + 9U;
      
#line 652 
      memcpy((void *)transaction,(void const *)(&(tt_range_3[0])),(unsigned long)size);
      
#line 653 
      size = 48;
      
#line 655 
      memcpy((void *)tt->restriction,(void const *)(&(restriction_range[0])),(unsigned long)size);
      
#line 657 
      priv->thermal_throttle.advanced_tt = (_Bool)1;
    }
  }
  else {
    {
      
#line 660 
      bool __cond_2 = (_Bool)((int)*("Legacy Thermal Throttling\n" + 25UL) != 10);
      
#line 660 
      if ((int)__cond_2 != 0) 
#line 660 
                              __compiletime_assert_660(); else ;
    }
    
#line 660 
    __iwl_dbg(priv->dev,512U,(_Bool)0,"iwl_tt_initialize","Legacy Thermal Throttling\n");
    
#line 661 
    priv->thermal_throttle.advanced_tt = (_Bool)0;
  }
  
#line 663 
  return;
}


#line 666  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tt.c"
void iwl_tt_exit(struct iwl_priv *priv)
{
  
#line 668 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 671 
  ldv_del_timer_sync_87(& priv->thermal_throttle.ct_kill_exit_tm);
  
#line 673 
  ldv_del_timer_sync_88(& priv->thermal_throttle.ct_kill_waiting_tm);
  
#line 674 
  cancel_work_sync(& priv->tt_work);
  
#line 675 
  cancel_work_sync(& priv->ct_enter);
  
#line 676 
  cancel_work_sync(& priv->ct_exit);
  
#line 678 
  if ((int)priv->thermal_throttle.advanced_tt != 0) {
    
#line 680 
    kfree((void const *)tt->restriction);
    
#line 681 
    tt->restriction = (struct iwl_tt_restriction *)0;
    
#line 682 
    kfree((void const *)tt->transaction);
    
#line 683 
    tt->transaction = (struct iwl_tt_trans *)0;
  }
  else ;
  
#line 685 
  return;
}


#line 464  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 467 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 467 
  return tmp;
}


#line 752  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static int ldv_mod_timer_74(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 756 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 756 
  return tmp;
}


#line 760  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static int ldv_mod_timer_75(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 764 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 764 
  return tmp;
}


#line 768  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static int ldv_mod_timer_76_0(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 772 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 772 
  return tmp;
}


#line 776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static int ldv_del_timer_sync_77(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 780 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 780 
  return tmp;
}


#line 784  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static void ldv_mutex_lock_78_1(struct mutex *ldv_func_arg1)
{
  
#line 788 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 789 
  return;
}


#line 792  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static void ldv_mutex_unlock_79_1(struct mutex *ldv_func_arg1)
{
  
#line 796 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 797 
  return;
}


#line 800  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static int ldv_del_timer_sync_80(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 804 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 804 
  return tmp;
}


#line 808  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static void ldv_mutex_lock_81_0(struct mutex *ldv_func_arg1)
{
  
#line 812 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 813 
  return;
}


#line 816  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static void ldv_mutex_unlock_82_1(struct mutex *ldv_func_arg1)
{
  
#line 820 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 821 
  return;
}


#line 824  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static int ldv_del_timer_sync_83(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 828 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 828 
  return tmp;
}


#line 832  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static bool ldv_queue_work_84(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 836 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 836 
  __retres = tmp != 0;
  
#line 836 
  return __retres;
}


#line 840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static bool ldv_queue_work_85(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 844 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 844 
  __retres = tmp != 0;
  
#line 844 
  return __retres;
}


#line 848  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static bool ldv_queue_work_86(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 852 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 852 
  __retres = tmp != 0;
  
#line 852 
  return __retres;
}


#line 856  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static int ldv_del_timer_sync_87(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 860 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 860 
  return tmp;
}


#line 864  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tt.c.aux"
static int ldv_del_timer_sync_88(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 868 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 868 
  return tmp;
}


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
void __compiletime_assert_95(void);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
void __compiletime_assert_363(void);


#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_fw_alive(struct iwl_trans *trans, u32 scd_addr)
{
  
#line 685 
  __might_sleep("drivers/net/wireless/iwlwifi/dvm/../iwl-trans.h",685,0);
  
#line 687 
  trans->state = IWL_TRANS_FW_ALIVE;
  
#line 689 
  (*((trans->ops)->fw_alive))(trans,scd_addr);
  
#line 690 
  return;
}


#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static int iwl_trans_start_fw(struct iwl_trans *trans, struct fw_img const *fw, bool run_in_rfkill)
{
  int tmp_0;
  
#line 696 
  __might_sleep("drivers/net/wireless/iwlwifi/dvm/../iwl-trans.h",696,0);
  {
    bool __warned;
    
#line 698 
    int __ret_warn_once = (unsigned int)trans->rx_mpdu_cmd == 0U;
    
#line 698 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp;
      {
        
#line 698 
        int __ret_warn_on = ! __warned;
        
#line 698 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 698 
                                              warn_slowpath_null("drivers/net/wireless/iwlwifi/dvm/../iwl-trans.h",698); else ;
        
#line 698 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 698 
      if ((long)tmp != 0L) 
#line 698 
                           __warned = (_Bool)1; else ;
    }
    else ;
    
#line 698 
    long tmp_2 = (long)(__ret_warn_once != 0);
  }
  
#line 700 
  set_bit(5L,(unsigned long volatile *)(& trans->status));
  
#line 701 
  tmp_0 = (*((trans->ops)->start_fw))(trans,fw,(_Bool)((bool)((int)run_in_rfkill) != 0));
  
#line 701 
  return tmp_0;
}


#line 859 
void __compiletime_assert_859(void);


#line 852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_txq_enable_cfg(struct iwl_trans *trans, int queue, u16 ssn, struct iwl_trans_txq_scd_cfg const *cfg, unsigned int queue_wdg_timeout)
{
  
#line 856 
  __might_sleep("drivers/net/wireless/iwlwifi/dvm/../iwl-trans.h",856,0);
  
#line 858 
  if ((long)(trans->state != (unsigned int)IWL_TRANS_FW_ALIVE) != 0L) {
    {
      
#line 859 
      bool __cond = (_Bool)((int)*("%s bad state = %d\n" + 17UL) != 10);
      
#line 859 
      if ((int)__cond != 0) 
#line 859 
                            __compiletime_assert_859(); else ;
    }
    
#line 859 
    __iwl_err(trans->dev,(_Bool)0,(_Bool)0,"%s bad state = %d\n","iwl_trans_txq_enable_cfg",(unsigned int)trans->state);
  }
  else ;
  
#line 861 
  (*((trans->ops)->txq_enable))(trans,queue,(unsigned short)((int)ssn),cfg,queue_wdg_timeout);
  
#line 862 
  return;
}


#line 881  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_ac_txq_enable(struct iwl_trans *trans, int queue, int fifo, unsigned int queue_wdg_timeout)
{
  
#line 884 
  struct iwl_trans_txq_scd_cfg cfg = {.fifo = (unsigned char)fifo, .sta_id = (signed char)(-1), .tid = (unsigned char)8U, .aggregate = (_Bool)0, .frame_limit = 64};
  
#line 892 
  iwl_trans_txq_enable_cfg(trans,queue,(unsigned short)0,(struct iwl_trans_txq_scd_cfg const *)(& cfg),queue_wdg_timeout);
  
#line 893 
  return;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-notif-wait.h"
void iwl_remove_notification(struct iwl_notif_wait_data *, struct iwl_notification_wait *);


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static void iwl_set_calib_hdr(struct iwl_calib_hdr *hdr, u8 cmd)
{
  
#line 116 
  hdr->op_code = cmd;
  
#line 117 
  hdr->first_group = (unsigned char)0U;
  
#line 118 
  hdr->groups_num = (unsigned char)1U;
  
#line 119 
  hdr->data_valid = (unsigned char)1U;
  
#line 120 
  return;
}


#line 168 
int iwl_init_alive_start(struct iwl_priv *priv);


#line 172 
int iwl_send_calib_results(struct iwl_priv *priv);


#line 173 
int iwl_calib_set(struct iwl_priv *priv, struct iwl_calib_hdr const *cmd, int len);


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
__inline static struct fw_img const *iwl_get_ucode_image(struct iwl_priv *priv, enum iwl_ucode_type ucode_type)
{
  struct fw_img const *__retres;
  
#line 51 
  if (ucode_type > (unsigned int)IWL_UCODE_REGULAR_USNIFFER) {
    
#line 52 
    __retres = (struct fw_img const *)0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = & (priv->fw)->img[(unsigned int)ucode_type];
  return_label: 
#line 54 
                return __retres;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static int iwl_set_Xtal_calib(struct iwl_priv *priv)
{
  struct iwl_calib_xtal_freq_cmd cmd;
  int tmp;
  
#line 63 
  __le16 *xtal_calib = (__le16 *)(& (priv->nvm_data)->xtal_calib);
  
#line 65 
  iwl_set_calib_hdr(& cmd.hdr,(unsigned char)15);
  
#line 66 
  cmd.cap_pin1 = (unsigned char)*xtal_calib;
  
#line 67 
  cmd.cap_pin2 = (unsigned char)*(xtal_calib + 1U);
  
#line 68 
  tmp = iwl_calib_set(priv,(struct iwl_calib_hdr const *)(& cmd),8);
  
#line 68 
  return tmp;
}


#line 81 
void __compiletime_assert_82(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static int iwl_set_temperature_offset_calib(struct iwl_priv *priv)
{
  struct iwl_calib_temperature_offset_cmd cmd;
  int tmp;
  
#line 75 
  memset((void *)(& cmd),0,8UL);
  
#line 76 
  iwl_set_calib_hdr(& cmd.hdr,(unsigned char)18);
  
#line 77 
  cmd.radio_sensor_offset = (priv->nvm_data)->raw_temperature;
  
#line 78 
  if ((unsigned int)cmd.radio_sensor_offset == 0U) 
#line 79 
                                                   cmd.radio_sensor_offset = (unsigned short)2700U; else ;
  {
    
#line 81 
    bool __cond = (_Bool)((int)*("Radio sensor offset: %d\n" + 23UL) != 10);
    
#line 81 
    if ((int)__cond != 0) 
#line 81 
                          __compiletime_assert_82(); else ;
  }
  
#line 81 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_set_temperature_offset_calib","Radio sensor offset: %d\n",(int)cmd.radio_sensor_offset);
  
#line 83 
  tmp = iwl_calib_set(priv,(struct iwl_calib_hdr const *)(& cmd),8);
  
#line 83 
  return tmp;
}


#line 101 
void __compiletime_assert_102(void);


#line 103 
void __compiletime_assert_104(void);


#line 105 
void __compiletime_assert_106(void);


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static int iwl_set_temperature_offset_calib_v2(struct iwl_priv *priv)
{
  struct iwl_calib_temperature_offset_v2_cmd cmd;
  int tmp;
  
#line 90 
  memset((void *)(& cmd),0,12UL);
  
#line 91 
  iwl_set_calib_hdr(& cmd.hdr,(unsigned char)18);
  
#line 92 
  cmd.radio_sensor_offset_high = (priv->nvm_data)->kelvin_temperature;
  
#line 93 
  cmd.radio_sensor_offset_low = (priv->nvm_data)->raw_temperature;
  
#line 94 
  if ((unsigned int)cmd.radio_sensor_offset_low == 0U) {
    {
      
#line 95 
      bool __cond = (_Bool)((int)*("no info in EEPROM, use default\n" + 30UL) != 10);
      
#line 95 
      if ((int)__cond != 0) 
#line 95 
                            __compiletime_assert_95(); else ;
    }
    
#line 95 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_set_temperature_offset_calib_v2","no info in EEPROM, use default\n");
    
#line 96 
    cmd.radio_sensor_offset_low = (unsigned short)2700U;
    
#line 97 
    cmd.radio_sensor_offset_high = (unsigned short)2700U;
  }
  else ;
  
#line 99 
  cmd.burntVoltageRef = (priv->nvm_data)->calib_voltage;
  {
    
#line 101 
    bool __cond_0 = (_Bool)((int)*("Radio sensor offset high: %d\n" + 28UL) != 10);
    
#line 101 
    if ((int)__cond_0 != 0) 
#line 101 
                            __compiletime_assert_102(); else ;
  }
  
#line 101 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_set_temperature_offset_calib_v2","Radio sensor offset high: %d\n",(int)cmd.radio_sensor_offset_high);
  {
    
#line 103 
    bool __cond_1 = (_Bool)((int)*("Radio sensor offset low: %d\n" + 27UL) != 10);
    
#line 103 
    if ((int)__cond_1 != 0) 
#line 103 
                            __compiletime_assert_104(); else ;
  }
  
#line 103 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_set_temperature_offset_calib_v2","Radio sensor offset low: %d\n",(int)cmd.radio_sensor_offset_low);
  {
    
#line 105 
    bool __cond_2 = (_Bool)((int)*("Voltage Ref: %d\n" + 15UL) != 10);
    
#line 105 
    if ((int)__cond_2 != 0) 
#line 105 
                            __compiletime_assert_106(); else ;
  }
  
#line 105 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_set_temperature_offset_calib_v2","Voltage Ref: %d\n",(int)cmd.burntVoltageRef);
  
#line 108 
  tmp = iwl_calib_set(priv,(struct iwl_calib_hdr const *)(& cmd),12);
  
#line 108 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static int iwl_send_calib_cfg(struct iwl_priv *priv)
{
  struct iwl_calib_cfg_cmd calib_cfg_cmd;
  int tmp;
  
#line 114 
  struct iwl_host_cmd cmd = {.data = {(void const *)(& calib_cfg_cmd)}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)92U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)101U};
  
#line 120 
  memset((void *)(& calib_cfg_cmd),0,92UL);
  
#line 121 
  calib_cfg_cmd.ucd_calib_cfg.once.is_enable = 95U;
  
#line 122 
  calib_cfg_cmd.ucd_calib_cfg.once.start = 95U;
  
#line 123 
  calib_cfg_cmd.ucd_calib_cfg.once.send_res = 95U;
  
#line 124 
  calib_cfg_cmd.ucd_calib_cfg.flags = 1U;
  
#line 127 
  tmp = iwl_dvm_send_cmd(priv,& cmd);
  
#line 127 
  return tmp;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
int iwl_init_alive_start(struct iwl_priv *priv)
{
  int __retres;
  int ret;
  
#line 134 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) {
    
#line 142 
    ret = iwl_send_bt_env(priv,(unsigned char)1,(unsigned char)1);
    
#line 144 
    if (ret != 0) {
      
#line 145 
      __retres = ret;
      
#line 145 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 149 
  ret = iwl_send_calib_cfg(priv);
  
#line 150 
  if (ret != 0) {
    
#line 151 
    __retres = ret;
    
#line 151 
    goto return_label;
  }
  else ;
  
#line 157 
  if ((int)(priv->lib)->need_temp_offset_calib != 0) 
    
#line 158 
    if ((int)(priv->lib)->temp_offset_v2 != 0) {
      int tmp;
      
#line 159 
      tmp = iwl_set_temperature_offset_calib_v2(priv);
      
#line 159 
      __retres = tmp;
      
#line 159 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 161 
      tmp_0 = iwl_set_temperature_offset_calib(priv);
      
#line 161 
      __retres = tmp_0;
      
#line 161 
      goto return_label;
    }
  else ;
  
#line 164 
  __retres = 0;
  return_label: 
#line 164 
                return __retres;
}


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static int iwl_send_wimax_coex(struct iwl_priv *priv)
{
  struct iwl_wimax_coex_cmd coex_cmd;
  int tmp;
  
#line 172 
  memset((void *)(& coex_cmd),0,68UL);
  
#line 174 
  tmp = iwl_dvm_send_cmd_pdu(priv,(unsigned char)90,0U,(unsigned short)68,(void const *)(& coex_cmd));
  
#line 174 
  return tmp;
}


#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static u8 const iwl_bt_prio_tbl[16U] = {(unsigned char)6U, (unsigned char)7U, (unsigned char)2U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)8U, (unsigned char)10U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
void iwl_send_prio_tbl(struct iwl_priv *priv)
{
  struct iwl_bt_coex_prio_table_cmd prio_tbl_cmd;
  int tmp;
  
#line 205 
  memcpy((void *)(& prio_tbl_cmd.prio_tbl),(void const *)(& iwl_bt_prio_tbl),16UL);
  
#line 207 
  tmp = iwl_dvm_send_cmd_pdu(priv,(unsigned char)204,0U,(unsigned short)16,(void const *)(& prio_tbl_cmd));
  
#line 207 
  if (tmp != 0) {
    {
      
#line 210 
      bool __cond = (_Bool)((int)*("failed to send BT prio tbl command\n" + 34UL) != 10);
      
#line 210 
      if ((int)__cond != 0) 
#line 210 
                            __compiletime_assert_210(); else ;
    }
    
#line 210 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"failed to send BT prio tbl command\n");
  }
  else ;
  
#line 212 
  return;
}


#line 224 
void __compiletime_assert_224(void);


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
int iwl_send_bt_env(struct iwl_priv *priv, u8 action, u8 type)
{
  struct iwl_bt_coex_prot_env_cmd env_cmd;
  int ret;
  
#line 218 
  env_cmd.action = action;
  
#line 219 
  env_cmd.type = type;
  
#line 220 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)205,0U,(unsigned short)4,(void const *)(& env_cmd));
  
#line 223 
  if (ret != 0) {
    {
      
#line 224 
      bool __cond = (_Bool)((int)*("failed to send BT env command\n" + 29UL) != 10);
      
#line 224 
      if ((int)__cond != 0) 
#line 224 
                            __compiletime_assert_224(); else ;
    }
    
#line 224 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"failed to send BT env command\n");
  }
  else ;
  
#line 225 
  return ret;
}


#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static u8 const iwlagn_default_queue_to_tx_fifo[4U] = {(unsigned char)3U, (unsigned char)2U, (unsigned char)1U, (unsigned char)0U};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static u8 const iwlagn_ipan_queue_to_tx_fifo[11U] = {(unsigned char)3U, (unsigned char)2U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)4U, (unsigned char)2U, (unsigned char)5U, (unsigned char)4U, (unsigned char)255U, (unsigned char)5U};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static int iwl_alive_notify(struct iwl_priv *priv)
{
  int __retres;
  u8 const *queue_to_txf;
  u8 n_queues;
  int ret;
  int i;
  int tmp;
  
#line 256 
  iwl_trans_fw_alive(priv->trans,0U);
  
#line 258 
  if (((priv->fw)->ucode_capa.flags & 1U) != 0U && (int)(priv->nvm_data)->sku_cap_ipan_enable != 0) {
    
#line 260 
    n_queues = (unsigned char)11U;
    
#line 261 
    queue_to_txf = (u8 const *)(& iwlagn_ipan_queue_to_tx_fifo);
  }
  else {
    
#line 263 
    n_queues = (unsigned char)4U;
    
#line 264 
    queue_to_txf = (u8 const *)(& iwlagn_default_queue_to_tx_fifo);
  }
  
#line 267 
  i = 0;
  
#line 267 
  goto ldv_54313;
  ldv_54312: 
#line 268 
  ;
  
#line 268 
  if ((unsigned int)*(queue_to_txf + i) != 255U) 
#line 269 
                                                 iwl_trans_ac_txq_enable(priv->trans,i,(int)*(queue_to_txf + i),0U); else ;
  
#line 267 
  i += 1;
  ldv_54313: 
#line 268 
  ;
  
#line 267 
  if ((int)n_queues > i) 
#line 269 
                         goto ldv_54312; else 
#line 272 
                                              goto ldv_54314;
  ldv_54314: 
#line 273 
  ;
  
#line 272 
  priv->passive_no_rx = (_Bool)0;
  
#line 273 
  priv->transport_queue_stop = 0UL;
  
#line 275 
  ret = iwl_send_wimax_coex(priv);
  
#line 276 
  if (ret != 0) {
    
#line 277 
    __retres = ret;
    
#line 277 
    goto return_label;
  }
  else ;
  
#line 279 
  if (! (priv->lib)->no_xtal_calib) {
    
#line 280 
    ret = iwl_set_Xtal_calib(priv);
    
#line 281 
    if (ret != 0) {
      
#line 282 
      __retres = ret;
      
#line 282 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 285 
  tmp = iwl_send_calib_results(priv);
  
#line 285 
  __retres = tmp;
  return_label: 
#line 285 
                return __retres;
}


#line 303 
void __compiletime_assert_306(void);


#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static bool iwl_alive_fn(struct iwl_notif_wait_data *notif_wait, struct iwl_rx_packet *pkt, void *data)
{
  bool __retres;
  struct iwl_priv *tmp;
  struct iwl_alive_resp *palive;
  {
    
#line 297 
    struct iwl_notif_wait_data const *__mptr = (struct iwl_notif_wait_data const *)notif_wait;
    
#line 297 
    tmp = (struct iwl_priv *)__mptr + 18446744073709549048U;
  }
  
#line 296 
  struct iwl_priv *priv = tmp;
  
#line 298 
  struct iwl_alive_data *alive_data = (struct iwl_alive_data *)data;
  
#line 301 
  palive = (struct iwl_alive_resp *)(& pkt->data);
  {
    
#line 303 
    bool __cond = (_Bool)((int)*("Alive ucode status 0x%08X revision " + 48UL) != 10);
    
#line 303 
    if ((int)__cond != 0) 
#line 303 
                          __compiletime_assert_306(); else ;
  }
  
#line 303 
  __iwl_dbg(priv->dev,65536U,(_Bool)0,"iwl_alive_fn","Alive ucode status 0x%08X revision ",palive->is_valid,(int)palive->ver_type,(int)palive->ver_subtype);
  
#line 308 
  priv->device_pointers.error_event_table = palive->error_event_table_ptr;
  
#line 310 
  priv->device_pointers.log_event_table = palive->log_event_table_ptr;
  
#line 313 
  alive_data->subtype = palive->ver_subtype;
  
#line 314 
  alive_data->valid = (_Bool)(palive->is_valid == 1U);
  
#line 316 
  __retres = (_Bool)1;
  
#line 316 
  return __retres;
}


#line 377 
void __compiletime_assert_378(void);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
int iwl_load_ucode_wait_alive(struct iwl_priv *priv, enum iwl_ucode_type ucode_type)
{
  int __retres;
  struct iwl_notification_wait alive_wait;
  struct iwl_alive_data alive_data;
  struct fw_img const *fw;
  int ret;
  enum iwl_ucode_type old_type;
  int tmp;
  
#line 330 
  u8 const alive_cmd[1U] = {(unsigned char)1U};
  
#line 332 
  fw = iwl_get_ucode_image(priv,ucode_type);
  {
    
#line 333 
    int __ret_warn_on = fw == (struct fw_img const *)0;
    
#line 333 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 333 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c",333); else ;
    
#line 333 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 333 
  if ((long)tmp != 0L) {
    
#line 334 
    __retres = -22;
    
#line 334 
    goto return_label;
  }
  else ;
  
#line 336 
  old_type = priv->cur_ucode;
  
#line 337 
  priv->cur_ucode = ucode_type;
  
#line 338 
  priv->ucode_loaded = (_Bool)0;
  
#line 340 
  iwl_init_notification_wait(& priv->notif_wait,& alive_wait,(u8 const *)(& alive_cmd),1,& iwl_alive_fn,(void *)(& alive_data));
  
#line 344 
  ret = iwl_trans_start_fw(priv->trans,fw,(_Bool)0);
  
#line 345 
  if (ret != 0) {
    
#line 346 
    priv->cur_ucode = old_type;
    
#line 347 
    iwl_remove_notification(& priv->notif_wait,& alive_wait);
    
#line 348 
    __retres = ret;
    
#line 348 
    goto return_label;
  }
  else ;
  
#line 355 
  ret = iwl_wait_notification(& priv->notif_wait,& alive_wait,250UL);
  
#line 357 
  if (ret != 0) {
    
#line 358 
    priv->cur_ucode = old_type;
    
#line 359 
    __retres = ret;
    
#line 359 
    goto return_label;
  }
  else ;
  
#line 362 
  if (! alive_data.valid) {
    {
      
#line 363 
      bool __cond = (_Bool)((int)*("Loaded ucode is not valid!\n" + 26UL) != 10);
      
#line 363 
      if ((int)__cond != 0) 
#line 363 
                            __compiletime_assert_363(); else ;
    }
    
#line 363 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Loaded ucode is not valid!\n");
    
#line 364 
    priv->cur_ucode = old_type;
    
#line 365 
    __retres = -5;
    
#line 365 
    goto return_label;
  }
  else ;
  
#line 368 
  priv->ucode_loaded = (_Bool)1;
  
#line 370 
  if (ucode_type != (unsigned int)IWL_UCODE_WOWLAN) 
#line 372 
                                                    msleep(5U); else ;
  
#line 375 
  ret = iwl_alive_notify(priv);
  
#line 376 
  if (ret != 0) {
    {
      
#line 377 
      bool __cond_0 = (_Bool)((int)*("Could not complete ALIVE transition: %d\n" + 39UL) != 10);
      
#line 377 
      if ((int)__cond_0 != 0) 
#line 377 
                              __compiletime_assert_378(); else ;
    }
    
#line 377 
    __iwl_warn(priv->dev,"Could not complete ALIVE transition: %d\n",ret);
    
#line 379 
    priv->cur_ucode = old_type;
    
#line 380 
    __retres = ret;
    
#line 380 
    goto return_label;
  }
  else ;
  
#line 383 
  __retres = 0;
  return_label: 
#line 383 
                return __retres;
}


#line 400 
void __compiletime_assert_401(void);


#line 386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
static bool iwlagn_wait_calib(struct iwl_notif_wait_data *notif_wait, struct iwl_rx_packet *pkt, void *data)
{
  bool __retres;
  struct iwl_calib_hdr *hdr;
  int tmp_0_0;
  u32 tmp_0;
  
#line 389 
  struct iwl_priv *priv = (struct iwl_priv *)data;
  
#line 392 
  if ((unsigned int)pkt->hdr.cmd != 102U) {
    {
      
#line 393 
      int __ret_warn_on = (unsigned int)pkt->hdr.cmd != 103U;
      
#line 393 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 393 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c",393); else ;
      
#line 393 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 394 
    __retres = (_Bool)1;
    
#line 394 
    goto return_label;
  }
  else ;
  
#line 397 
  hdr = (struct iwl_calib_hdr *)(& pkt->data);
  
#line 399 
  tmp_0 = iwl_rx_packet_payload_len((struct iwl_rx_packet const *)pkt);
  
#line 399 
  ;
  
#line 399 
  ;
  
#line 399 
  tmp_0_0 = iwl_calib_set(priv,(struct iwl_calib_hdr const *)hdr,(int)tmp_0);
  
#line 399 
  if (tmp_0_0 != 0) {
    {
      
#line 400 
      bool __cond = (_Bool)((int)*("Failed to record calibration data %d\n" + 36UL) != 10);
      
#line 400 
      if ((int)__cond != 0) 
#line 400 
                            __compiletime_assert_401(); else ;
    }
    
#line 400 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Failed to record calibration data %d\n",(int)hdr->op_code);
  }
  else ;
  
#line 403 
  __retres = (_Bool)0;
  return_label: 
#line 403 
                return __retres;
}


#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c"
int iwl_run_init_ucode(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_notification_wait calib_wait;
  int ret;
  
#line 409 
  u8 const calib_complete[2U] = {(unsigned char)102U, (unsigned char)103U};
  {
    int tmp_0;
    
#line 415 
    if (debug_locks != 0) {
      int tmp;
      
#line 415 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 415 
      if (tmp == 0) 
#line 415 
                    tmp_0 = 1; else 
#line 415 
                                    tmp_0 = 0;
    }
    else 
#line 415 
         tmp_0 = 0;
    
#line 415 
    int __ret_warn_on = tmp_0;
    
#line 415 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 415 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/ucode.c",415); else ;
    
#line 415 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 418 
  if ((priv->fw)->img[1].sec[0].len == 0U) {
    
#line 419 
    __retres = 0;
    
#line 419 
    goto return_label;
  }
  else ;
  
#line 421 
  iwl_init_notification_wait(& priv->notif_wait,& calib_wait,(u8 const *)(& calib_complete),2,& iwlagn_wait_calib,(void *)priv);
  
#line 426 
  ret = iwl_load_ucode_wait_alive(priv,(enum iwl_ucode_type)IWL_UCODE_INIT);
  
#line 427 
  if (ret != 0) 
#line 428 
                goto error; else ;
  
#line 430 
  ret = iwl_init_alive_start(priv);
  
#line 431 
  if (ret != 0) 
#line 432 
                goto error; else ;
  
#line 438 
  ret = iwl_wait_notification(& priv->notif_wait,& calib_wait,500UL);
  
#line 441 
  goto out;
  error: 
#line 443 
  ;
  
#line 444 
  iwl_remove_notification(& priv->notif_wait,& calib_wait);
  out: 
#line 445 
  ;
  
#line 447 
  iwl_trans_stop_device(priv->trans);
  
#line 448 
  priv->ucode_loaded = (_Bool)0;
  
#line 450 
  __retres = ret;
  return_label: 
#line 450 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
static bool static_key_false_4(struct static_key *key)
{
  bool tmp;
  
#line 125 
  tmp = arch_static_branch(key);
  
#line 125 
  return tmp;
}


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_2(size_t size, gfp_t flags);


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_iowrite32_4(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 69 
  tmp_4 = static_key_false_4(& __tracepoint_iwlwifi_dev_iowrite32.key);
  
#line 69 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 69 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_4145 __u;
          
#line 69 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u.__c),8);
          
#line 69 
          tmp = __u.__val;
        }
        
#line 69 
        struct tracepoint_func *_________p1 = tmp;
        
#line 69 
        tmp_0 = _________p1;
      }
      
#line 69 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 69 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 69 
        if (tmp_1 != 0) {
          
#line 69 
          if (! __warned) {
            int tmp_2;
            
#line 69 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 69 
            if (tmp_2 == 0) {
              
#line 69 
              __warned = (_Bool)1;
              
#line 69 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 69 
      tmp_3 = ________p1;
    }
    
#line 69 
    it_func_ptr = tmp_3;
    
#line 69 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_50409: 
#line 71 
      ;
      
#line 69 
      it_func = it_func_ptr->func;
      
#line 69 
      __data = it_func_ptr->data;
      
#line 69 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 69 
      it_func_ptr += 1;
      
#line 69 
      ;
      
#line 69 
      if (it_func_ptr->func != (void *)0) 
#line 71 
                                          goto ldv_50409; else 
#line 74 
                                                               goto ldv_50410;
      ldv_50410: 
#line 75 
      ;
    }
    else ;
    
#line 69 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 69 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_4147 __u_0;
        
#line 69 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_iowrite32.funcs),(void *)(& __u_0.__c),8);
        
#line 69 
        tmp_5 = __u_0.__val;
      }
      
#line 69 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 69 
      tmp_6 = _________p1_0;
    }
    
#line 69 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 69 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 69 
      if (tmp_7 != 0) {
        
#line 69 
        if (! __warned_0) {
          int tmp_8;
          
#line 69 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 69 
          if (tmp_8 == 0) {
            
#line 69 
            __warned_0 = (_Bool)1;
            
#line 69 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",84,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 69 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 69 
  rcu_read_unlock_sched_notrace();
  
#line 71 
  return;
}


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static void iwl_write32_4(struct iwl_trans *trans, u32 ofs, u32 val)
{
  
#line 43 
  trace_iwlwifi_dev_iowrite32_4((struct device const *)trans->dev,ofs,val);
  
#line 44 
  iwl_trans_write32(trans,ofs,val);
  
#line 45 
  return;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl1000_set_ct_threshold(struct iwl_priv *priv)
{
  
#line 57 
  priv->hw_params.ct_kill_threshold = 110U;
  
#line 58 
  priv->hw_params.ct_kill_exit_threshold = 95U;
  
#line 59 
  return;
}


#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl1000_nic_config(struct iwl_priv *priv)
{
  
#line 66 
  iwl_set_bits_mask_prph(priv->trans,12376U,96U,4294966815U);
  
#line 67 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
__inline static u32 iwl_beacon_time_mask_low(struct iwl_priv *priv, u16 tsf_bits)
{
  u32 __retres;
  
#line 79 
  __retres = (unsigned int)((1 << (int)tsf_bits) + -1);
  
#line 79 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
__inline static u32 iwl_beacon_time_mask_high(struct iwl_priv *priv, u16 tsf_bits)
{
  u32 __retres;
  
#line 90 
  __retres = (unsigned int)(((1 << (32 - (int)tsf_bits)) + -1) << (int)tsf_bits);
  
#line 90 
  return __retres;
}


#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static u32 iwl_usecs_to_beacons(struct iwl_priv *priv, u32 usec, u32 beacon_interval)
{
  u32 __retres;
  u32 quot;
  u32 rem;
  u32 tmp;
  u32 tmp_0;
  
#line 104 
  u32 interval = beacon_interval * 1024U;
  
#line 106 
  if (interval == 0U || usec == 0U) {
    
#line 107 
    __retres = 0U;
    
#line 107 
    goto return_label;
  }
  else ;
  
#line 109 
  tmp = iwl_beacon_time_mask_high(priv,(unsigned short)22);
  
#line 109 
  quot = usec / interval & (tmp >> 22);
  
#line 112 
  tmp_0 = iwl_beacon_time_mask_low(priv,(unsigned short)22);
  
#line 112 
  rem = usec % interval & tmp_0;
  
#line 115 
  __retres = (quot << 22) + rem;
  return_label: 
#line 115 
                return __retres;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static __le32 iwl_add_beacon_time(struct iwl_priv *priv, u32 base, u32 addon, u32 beacon_interval)
{
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  
#line 124 
  tmp = iwl_beacon_time_mask_low(priv,(unsigned short)22);
  
#line 124 
  u32 base_low = tmp & base;
  
#line 126 
  tmp_0 = iwl_beacon_time_mask_low(priv,(unsigned short)22);
  
#line 126 
  u32 addon_low = tmp_0 & addon;
  
#line 128 
  u32 interval = beacon_interval * 1024U;
  
#line 129 
  tmp_1 = iwl_beacon_time_mask_high(priv,(unsigned short)22);
  
#line 130 
  tmp_2 = iwl_beacon_time_mask_high(priv,(unsigned short)22);
  
#line 129 
  u32 res = (tmp_1 & base) + (tmp_2 & addon);
  
#line 134 
  if (base_low > addon_low) 
#line 135 
                            res = (base_low - addon_low) + res;
  else 
    
#line 136 
    if (base_low < addon_low) {
      
#line 137 
      res = ((interval + base_low) - addon_low) + res;
      
#line 138 
      res += 4194304U;
    }
    else 
#line 140 
         res += 4194304U;
  
#line 142 
  return res;
}


#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static struct iwl_sensitivity_ranges const iwl1000_sensitivity = {.min_nrg_cck = (unsigned short)95U, .nrg_th_cck = (unsigned short)95U, .nrg_th_ofdm = (unsigned short)95U, .auto_corr_min_ofdm = (unsigned short)90U, .auto_corr_min_ofdm_mrc = (unsigned short)170U, .auto_corr_min_ofdm_x1 = (unsigned short)120U, .auto_corr_min_ofdm_mrc_x1 = (unsigned short)240U, .auto_corr_max_ofdm = (unsigned short)120U, .auto_corr_max_ofdm_mrc = (unsigned short)210U, .auto_corr_max_ofdm_x1 = (unsigned short)155U, .auto_corr_max_ofdm_mrc_x1 = (unsigned short)290U, .auto_corr_max_cck = (unsigned short)200U, .auto_corr_max_cck_mrc = (unsigned short)400U, .auto_corr_min_cck = (unsigned short)125U, .auto_corr_min_cck_mrc = (unsigned short)170U, .barker_corr_th_min = (unsigned short)190U, .barker_corr_th_min_mrc = (unsigned short)390U, .nrg_th_cca = (unsigned short)62U};

#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl1000_hw_set_hw_params(struct iwl_priv *priv)
{
  
#line 171 
  iwl1000_set_ct_threshold(priv);
  
#line 174 
  priv->hw_params.sens = & iwl1000_sensitivity;
  
#line 175 
  return;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_1000_cfg = {.set_hw_params = & iwl1000_hw_set_hw_params, .set_channel_switch = (int (*)(struct iwl_priv *, struct ieee80211_channel_switch *))0, .nic_config = & iwl1000_nic_config, .temperature = & iwlagn_temperature, .bt_params = (struct iwl_dvm_bt_params const *)0, .chain_noise_scale = 1000, .plcp_delta_threshold = (unsigned char)200U, .adv_thermal_throttle = (_Bool)0, .support_ct_kill_exit = (_Bool)1, .hd_v2 = (_Bool)0, .no_idle_support = (_Bool)0, .need_temp_offset_calib = (_Bool)0, .no_xtal_calib = (_Bool)0, .temp_offset_v2 = (_Bool)0, .adv_pm = (_Bool)0};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl2000_set_ct_threshold(struct iwl_priv *priv)
{
  
#line 195 
  priv->hw_params.ct_kill_threshold = 114U;
  
#line 196 
  priv->hw_params.ct_kill_exit_threshold = 95U;
  
#line 197 
  return;
}


#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl2000_nic_config(struct iwl_priv *priv)
{
  
#line 202 
  iwl_set_bit(priv->trans,80U,128U);
  
#line 203 
  return;
}


#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static struct iwl_sensitivity_ranges const iwl2000_sensitivity = {.min_nrg_cck = (unsigned short)97U, .nrg_th_cck = (unsigned short)97U, .nrg_th_ofdm = (unsigned short)100U, .auto_corr_min_ofdm = (unsigned short)80U, .auto_corr_min_ofdm_mrc = (unsigned short)128U, .auto_corr_min_ofdm_x1 = (unsigned short)105U, .auto_corr_min_ofdm_mrc_x1 = (unsigned short)192U, .auto_corr_max_ofdm = (unsigned short)145U, .auto_corr_max_ofdm_mrc = (unsigned short)232U, .auto_corr_max_ofdm_x1 = (unsigned short)110U, .auto_corr_max_ofdm_mrc_x1 = (unsigned short)232U, .auto_corr_max_cck = (unsigned short)175U, .auto_corr_max_cck_mrc = (unsigned short)310U, .auto_corr_min_cck = (unsigned short)125U, .auto_corr_min_cck_mrc = (unsigned short)160U, .barker_corr_th_min = (unsigned short)190U, .barker_corr_th_min_mrc = (unsigned short)390U, .nrg_th_cca = (unsigned short)62U};

#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl2000_hw_set_hw_params(struct iwl_priv *priv)
{
  
#line 232 
  iwl2000_set_ct_threshold(priv);
  
#line 235 
  priv->hw_params.sens = & iwl2000_sensitivity;
  
#line 236 
  return;
}


#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_2000_cfg = {.set_hw_params = & iwl2000_hw_set_hw_params, .set_channel_switch = (int (*)(struct iwl_priv *, struct ieee80211_channel_switch *))0, .nic_config = & iwl2000_nic_config, .temperature = & iwlagn_temperature, .bt_params = (struct iwl_dvm_bt_params const *)0, .chain_noise_scale = 1000, .plcp_delta_threshold = (unsigned char)50U, .adv_thermal_throttle = (_Bool)1, .support_ct_kill_exit = (_Bool)1, .hd_v2 = (_Bool)1, .no_idle_support = (_Bool)0, .need_temp_offset_calib = (_Bool)1, .no_xtal_calib = (_Bool)0, .temp_offset_v2 = (_Bool)1, .adv_pm = (_Bool)0};

#line 251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_105_cfg = {.set_hw_params = & iwl2000_hw_set_hw_params, .set_channel_switch = (int (*)(struct iwl_priv *, struct ieee80211_channel_switch *))0, .nic_config = & iwl2000_nic_config, .temperature = & iwlagn_temperature, .bt_params = (struct iwl_dvm_bt_params const *)0, .chain_noise_scale = 1000, .plcp_delta_threshold = (unsigned char)50U, .adv_thermal_throttle = (_Bool)1, .support_ct_kill_exit = (_Bool)1, .hd_v2 = (_Bool)1, .no_idle_support = (_Bool)0, .need_temp_offset_calib = (_Bool)1, .no_xtal_calib = (_Bool)0, .temp_offset_v2 = (_Bool)1, .adv_pm = (_Bool)1};

#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static struct iwl_dvm_bt_params const iwl2030_bt_params = {.advanced_bt_coexist = (_Bool)1, .bt_init_traffic_load = (unsigned char)0U, .bt_prio_boost = 4042322160U, .agg_time_limit = (unsigned short)1200U, .bt_sco_disable = (_Bool)1, .bt_session_2 = (_Bool)1};

#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_2030_cfg = {.set_hw_params = & iwl2000_hw_set_hw_params, .set_channel_switch = (int (*)(struct iwl_priv *, struct ieee80211_channel_switch *))0, .nic_config = & iwl2000_nic_config, .temperature = & iwlagn_temperature, .bt_params = & iwl2030_bt_params, .chain_noise_scale = 1000, .plcp_delta_threshold = (unsigned char)50U, .adv_thermal_throttle = (_Bool)1, .support_ct_kill_exit = (_Bool)1, .hd_v2 = (_Bool)1, .no_idle_support = (_Bool)0, .need_temp_offset_calib = (_Bool)1, .no_xtal_calib = (_Bool)0, .temp_offset_v2 = (_Bool)1, .adv_pm = (_Bool)1};

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static struct iwl_sensitivity_ranges const iwl5000_sensitivity = {.min_nrg_cck = (unsigned short)100U, .nrg_th_cck = (unsigned short)100U, .nrg_th_ofdm = (unsigned short)100U, .auto_corr_min_ofdm = (unsigned short)90U, .auto_corr_min_ofdm_mrc = (unsigned short)170U, .auto_corr_min_ofdm_x1 = (unsigned short)105U, .auto_corr_min_ofdm_mrc_x1 = (unsigned short)220U, .auto_corr_max_ofdm = (unsigned short)120U, .auto_corr_max_ofdm_mrc = (unsigned short)210U, .auto_corr_max_ofdm_x1 = (unsigned short)120U, .auto_corr_max_ofdm_mrc_x1 = (unsigned short)240U, .auto_corr_max_cck = (unsigned short)200U, .auto_corr_max_cck_mrc = (unsigned short)400U, .auto_corr_min_cck = (unsigned short)125U, .auto_corr_min_cck_mrc = (unsigned short)200U, .barker_corr_th_min = (unsigned short)190U, .barker_corr_th_min_mrc = (unsigned short)390U, .nrg_th_cca = (unsigned short)62U};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static struct iwl_sensitivity_ranges const iwl5150_sensitivity = {.min_nrg_cck = (unsigned short)95U, .nrg_th_cck = (unsigned short)95U, .nrg_th_ofdm = (unsigned short)95U, .auto_corr_min_ofdm = (unsigned short)90U, .auto_corr_min_ofdm_mrc = (unsigned short)170U, .auto_corr_min_ofdm_x1 = (unsigned short)105U, .auto_corr_min_ofdm_mrc_x1 = (unsigned short)220U, .auto_corr_max_ofdm = (unsigned short)120U, .auto_corr_max_ofdm_mrc = (unsigned short)210U, .auto_corr_max_ofdm_x1 = (unsigned short)105U, .auto_corr_max_ofdm_mrc_x1 = (unsigned short)220U, .auto_corr_max_cck = (unsigned short)200U, .auto_corr_max_cck_mrc = (unsigned short)400U, .auto_corr_min_cck = (unsigned short)125U, .auto_corr_min_cck_mrc = (unsigned short)170U, .barker_corr_th_min = (unsigned short)190U, .barker_corr_th_min_mrc = (unsigned short)390U, .nrg_th_cca = (unsigned short)62U};

#line 347  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static s32 iwl_temp_calib_to_offset(struct iwl_priv *priv)
{
  s32 __retres;
  u16 temperature;
  u16 voltage;
  
#line 351 
  temperature = (priv->nvm_data)->kelvin_temperature;
  
#line 352 
  voltage = (priv->nvm_data)->kelvin_voltage;
  
#line 355 
  __retres = (int)temperature + (int)voltage / 5;
  
#line 355 
  return __retres;
}


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl5150_set_ct_threshold(struct iwl_priv *priv)
{
  s32 tmp;
  
#line 361 
  s32 const volt2temp_coef = -5;
  
#line 362 
  tmp = iwl_temp_calib_to_offset(priv);
  
#line 362 
  s32 threshold = 383 - tmp;
  
#line 365 
  priv->hw_params.ct_kill_threshold = (unsigned int)(threshold * -5);
  
#line 366 
  return;
}


#line 368  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl5000_set_ct_threshold(struct iwl_priv *priv)
{
  
#line 371 
  priv->hw_params.ct_kill_threshold = 110U;
  
#line 372 
  return;
}


#line 374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl5000_hw_set_hw_params(struct iwl_priv *priv)
{
  
#line 376 
  iwl5000_set_ct_threshold(priv);
  
#line 379 
  priv->hw_params.sens = & iwl5000_sensitivity;
  
#line 380 
  return;
}


#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl5150_hw_set_hw_params(struct iwl_priv *priv)
{
  
#line 384 
  iwl5150_set_ct_threshold(priv);
  
#line 387 
  priv->hw_params.sens = & iwl5150_sensitivity;
  
#line 388 
  return;
}


#line 390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl5150_temperature(struct iwl_priv *priv)
{
  
#line 392 
  u32 vt = 0U;
  
#line 393 
  s32 offset = iwl_temp_calib_to_offset(priv);
  
#line 395 
  vt = priv->statistics.common.temperature;
  
#line 396 
  vt = vt / 4294967291U + (unsigned int)offset;
  
#line 398 
  priv->temperature = (int)(vt + 4294967023U);
  
#line 399 
  iwl_tt_handler(priv);
  
#line 400 
  return;
}


#line 425 
void __compiletime_assert_426(void);


#line 457 
void __compiletime_assert_458(void);


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static int iwl5000_hw_channel_switch(struct iwl_priv *priv, struct ieee80211_channel_switch *ch_switch)
{
  struct iwl5000_channel_switch_cmd cmd;
  u32 switch_time_in_usec;
  u32 ucode_switch_time;
  u16 ch;
  u32 tsf_low;
  u8 switch_count;
  int tmp;
  
#line 409 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 415 
  u16 beacon_interval = ctx->timing.beacon_interval;
  
#line 416 
  struct ieee80211_vif *vif = ctx->vif;
  
#line 417 
  struct iwl_host_cmd hcmd = {.data = {(void const *)(& cmd)}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)224U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)114U};
  
#line 423 
  cmd.band = (unsigned char)(priv->band == (unsigned int)IEEE80211_BAND_2GHZ);
  
#line 424 
  ch = (ch_switch->chandef.chan)->hw_value;
  {
    
#line 425 
    bool __cond = (_Bool)((int)*("channel switch from %d to %d\n" + 28UL) != 10);
    
#line 425 
    if ((int)__cond != 0) 
#line 425 
                          __compiletime_assert_426(); else ;
  }
  
#line 425 
  __iwl_dbg(priv->dev,268435456U,(_Bool)0,"iwl5000_hw_channel_switch","channel switch from %d to %d\n",(int)ctx->active.channel,(int)ch);
  
#line 427 
  cmd.channel = ch;
  
#line 428 
  cmd.rxon_flags = ctx->staging.flags;
  
#line 429 
  cmd.rxon_filter_flags = ctx->staging.filter_flags;
  
#line 430 
  switch_count = ch_switch->count;
  
#line 431 
  tsf_low = (unsigned int)ch_switch->timestamp;
  
#line 436 
  if (priv->ucode_beacon_time > tsf_low && (unsigned int)beacon_interval != 0U) 
    
#line 437 
    if ((unsigned int)switch_count > (priv->ucode_beacon_time - tsf_low) / (unsigned int)beacon_interval) 
      
#line 439 
      switch_count = (unsigned char)((int)switch_count - (int)((unsigned char)((priv->ucode_beacon_time - tsf_low) / (unsigned int)beacon_interval))); else 
                                                                    
#line 442 
                                                                    switch_count = (unsigned char)0U;
  else ;
  
#line 444 
  if ((unsigned int)switch_count <= 1U) 
#line 445 
                                        cmd.switch_time = priv->ucode_beacon_time;
  else {
    
#line 447 
    switch_time_in_usec = (unsigned int)(((int)vif->bss_conf.beacon_int * (int)switch_count) * 1024);
    
#line 449 
    ucode_switch_time = iwl_usecs_to_beacons(priv,switch_time_in_usec,(unsigned int)beacon_interval);
    
#line 452 
    cmd.switch_time = iwl_add_beacon_time(priv,priv->ucode_beacon_time,ucode_switch_time,(unsigned int)beacon_interval);
  }
  {
    
#line 457 
    bool __cond_0 = (_Bool)((int)*("uCode time for the switch is 0x%x\n" + 33UL) != 10);
    
#line 457 
    if ((int)__cond_0 != 0) 
#line 457 
                            __compiletime_assert_458(); else ;
  }
  
#line 457 
  __iwl_dbg(priv->dev,268435456U,(_Bool)0,"iwl5000_hw_channel_switch","uCode time for the switch is 0x%x\n",cmd.switch_time);
  
#line 459 
  cmd.expect_beacon = (unsigned char)((unsigned int)((unsigned char)(ch_switch->chandef.chan)->flags) & 8U);
  
#line 462 
  tmp = iwl_dvm_send_cmd(priv,& hcmd);
  
#line 462 
  return tmp;
}


#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_5000_cfg = {.set_hw_params = & iwl5000_hw_set_hw_params, .set_channel_switch = & iwl5000_hw_channel_switch, .nic_config = (void (*)(struct iwl_priv *))0, .temperature = & iwlagn_temperature, .bt_params = (struct iwl_dvm_bt_params const *)0, .chain_noise_scale = 1000, .plcp_delta_threshold = (unsigned char)100U, .adv_thermal_throttle = (_Bool)0, .support_ct_kill_exit = (_Bool)0, .hd_v2 = (_Bool)0, .no_idle_support = (_Bool)1, .need_temp_offset_calib = (_Bool)0, .no_xtal_calib = (_Bool)0, .temp_offset_v2 = (_Bool)0, .adv_pm = (_Bool)0};

#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_5150_cfg = {.set_hw_params = & iwl5150_hw_set_hw_params, .set_channel_switch = & iwl5000_hw_channel_switch, .nic_config = (void (*)(struct iwl_priv *))0, .temperature = & iwl5150_temperature, .bt_params = (struct iwl_dvm_bt_params const *)0, .chain_noise_scale = 1000, .plcp_delta_threshold = (unsigned char)100U, .adv_thermal_throttle = (_Bool)0, .support_ct_kill_exit = (_Bool)0, .hd_v2 = (_Bool)0, .no_idle_support = (_Bool)1, .need_temp_offset_calib = (_Bool)0, .no_xtal_calib = (_Bool)1, .temp_offset_v2 = (_Bool)0, .adv_pm = (_Bool)0};

#line 491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl6000_set_ct_threshold(struct iwl_priv *priv)
{
  
#line 494 
  priv->hw_params.ct_kill_threshold = 114U;
  
#line 495 
  priv->hw_params.ct_kill_exit_threshold = 95U;
  
#line 496 
  return;
}


#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl6000_nic_config(struct iwl_priv *priv)
{
  
#line 501 
  switch ((unsigned int)(priv->cfg)->device_family) {
    case (unsigned int)11: 
#line 502 
    ;
    case (unsigned int)12: 
#line 503 
    ;
    case (unsigned int)9: 
#line 504 
    ;
    
#line 505 
    goto ldv_54316;
    case (unsigned int)10: 
#line 506 
    ;
    
#line 508 
    iwl_write32_4(priv->trans,80U,2U);
    
#line 510 
    goto ldv_54316;
    case (unsigned int)13: 
#line 511 
    ;
    
#line 513 
    if ((unsigned int)(priv->nvm_data)->calib_version > 5U) 
#line 514 
                                                            iwl_set_bit(priv->trans,80U,4U); else ;
    
#line 516 
    goto ldv_54316;
    case (unsigned int)14: 
#line 517 
    ;
    
#line 519 
    if ((unsigned int)(priv->nvm_data)->calib_version > 5U) 
#line 520 
                                                            iwl_set_bit(priv->trans,80U,4U); else ;
    
#line 522 
    iwl_set_bit(priv->trans,80U,8U);
    
#line 524 
    goto ldv_54316;
    default: 
#line 525 
    ;
    {
      
#line 526 
      int __ret_warn_on = 1;
      
#line 526 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 526 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c",526); else ;
      
#line 526 
      long tmp = (long)(__ret_warn_on != 0);
    }
  }
  ldv_54316: 
#line 528 
  ;
  
#line 529 
  return;
}


#line 530  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static struct iwl_sensitivity_ranges const iwl6000_sensitivity = {.min_nrg_cck = (unsigned short)110U, .nrg_th_cck = (unsigned short)110U, .nrg_th_ofdm = (unsigned short)110U, .auto_corr_min_ofdm = (unsigned short)80U, .auto_corr_min_ofdm_mrc = (unsigned short)128U, .auto_corr_min_ofdm_x1 = (unsigned short)105U, .auto_corr_min_ofdm_mrc_x1 = (unsigned short)192U, .auto_corr_max_ofdm = (unsigned short)145U, .auto_corr_max_ofdm_mrc = (unsigned short)232U, .auto_corr_max_ofdm_x1 = (unsigned short)110U, .auto_corr_max_ofdm_mrc_x1 = (unsigned short)232U, .auto_corr_max_cck = (unsigned short)175U, .auto_corr_max_cck_mrc = (unsigned short)310U, .auto_corr_min_cck = (unsigned short)125U, .auto_corr_min_cck_mrc = (unsigned short)160U, .barker_corr_th_min = (unsigned short)190U, .barker_corr_th_min_mrc = (unsigned short)336U, .nrg_th_cca = (unsigned short)62U};

#line 554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static void iwl6000_hw_set_hw_params(struct iwl_priv *priv)
{
  
#line 556 
  iwl6000_set_ct_threshold(priv);
  
#line 559 
  priv->hw_params.sens = & iwl6000_sensitivity;
  
#line 560 
  return;
}


#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static int iwl6000_hw_channel_switch(struct iwl_priv *priv, struct ieee80211_channel_switch *ch_switch)
{
  int __retres;
  struct iwl6000_channel_switch_cmd *cmd;
  u32 switch_time_in_usec;
  u32 ucode_switch_time;
  u16 ch;
  u32 tsf_low;
  u8 switch_count;
  int err;
  
#line 570 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 576 
  u16 beacon_interval = ctx->timing.beacon_interval;
  
#line 577 
  struct ieee80211_vif *vif = ctx->vif;
  
#line 578 
  struct iwl_host_cmd hcmd = {.data = {(void const *)0, (void const *)0}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)328U}, .dataflags = {(unsigned char)1U}, .id = (unsigned char)114U};
  
#line 585 
  cmd = (struct iwl6000_channel_switch_cmd *)kzalloc_2(328UL,208U);
  
#line 586 
  if (cmd == (struct iwl6000_channel_switch_cmd *)0) {
    
#line 587 
    __retres = -12;
    
#line 587 
    goto return_label;
  }
  else ;
  
#line 589 
  hcmd.data[0] = (void const *)cmd;
  
#line 591 
  cmd->band = (unsigned char)(priv->band == (unsigned int)IEEE80211_BAND_2GHZ);
  
#line 592 
  ch = (ch_switch->chandef.chan)->hw_value;
  {
    
#line 593 
    bool __cond = (_Bool)((int)*("channel switch from %u to %u\n" + 28UL) != 10);
    
#line 593 
    if ((int)__cond != 0) 
#line 593 
                          __compiletime_assert_594(); else ;
  }
  
#line 593 
  __iwl_dbg(priv->dev,268435456U,(_Bool)0,"iwl6000_hw_channel_switch","channel switch from %u to %u\n",(int)ctx->active.channel,(int)ch);
  
#line 595 
  cmd->channel = ch;
  
#line 596 
  cmd->rxon_flags = ctx->staging.flags;
  
#line 597 
  cmd->rxon_filter_flags = ctx->staging.filter_flags;
  
#line 598 
  switch_count = ch_switch->count;
  
#line 599 
  tsf_low = (unsigned int)ch_switch->timestamp;
  
#line 604 
  if (priv->ucode_beacon_time > tsf_low && (unsigned int)beacon_interval != 0U) 
    
#line 605 
    if ((unsigned int)switch_count > (priv->ucode_beacon_time - tsf_low) / (unsigned int)beacon_interval) 
      
#line 607 
      switch_count = (unsigned char)((int)switch_count - (int)((unsigned char)((priv->ucode_beacon_time - tsf_low) / (unsigned int)beacon_interval))); else 
                                                                    
#line 610 
                                                                    switch_count = (unsigned char)0U;
  else ;
  
#line 612 
  if ((unsigned int)switch_count <= 1U) 
#line 613 
                                        cmd->switch_time = priv->ucode_beacon_time;
  else {
    
#line 615 
    switch_time_in_usec = (unsigned int)(((int)vif->bss_conf.beacon_int * (int)switch_count) * 1024);
    
#line 617 
    ucode_switch_time = iwl_usecs_to_beacons(priv,switch_time_in_usec,(unsigned int)beacon_interval);
    
#line 620 
    cmd->switch_time = iwl_add_beacon_time(priv,priv->ucode_beacon_time,ucode_switch_time,(unsigned int)beacon_interval);
  }
  {
    
#line 625 
    bool __cond_0 = (_Bool)((int)*("uCode time for the switch is 0x%x\n" + 33UL) != 10);
    
#line 625 
    if ((int)__cond_0 != 0) 
#line 625 
                            __compiletime_assert_626(); else ;
  }
  
#line 625 
  __iwl_dbg(priv->dev,268435456U,(_Bool)0,"iwl6000_hw_channel_switch","uCode time for the switch is 0x%x\n",cmd->switch_time);
  
#line 627 
  cmd->expect_beacon = (unsigned char)((unsigned int)((unsigned char)(ch_switch->chandef.chan)->flags) & 8U);
  
#line 630 
  err = iwl_dvm_send_cmd(priv,& hcmd);
  
#line 631 
  kfree((void const *)cmd);
  
#line 632 
  __retres = err;
  return_label: 
#line 632 
                return __retres;
}


#line 635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_6000_cfg = {.set_hw_params = & iwl6000_hw_set_hw_params, .set_channel_switch = & iwl6000_hw_channel_switch, .nic_config = & iwl6000_nic_config, .temperature = & iwlagn_temperature, .bt_params = (struct iwl_dvm_bt_params const *)0, .chain_noise_scale = 1000, .plcp_delta_threshold = (unsigned char)50U, .adv_thermal_throttle = (_Bool)1, .support_ct_kill_exit = (_Bool)1, .hd_v2 = (_Bool)0, .no_idle_support = (_Bool)0, .need_temp_offset_calib = (_Bool)0, .no_xtal_calib = (_Bool)0, .temp_offset_v2 = (_Bool)0, .adv_pm = (_Bool)0};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_6005_cfg = {.set_hw_params = & iwl6000_hw_set_hw_params, .set_channel_switch = & iwl6000_hw_channel_switch, .nic_config = & iwl6000_nic_config, .temperature = & iwlagn_temperature, .bt_params = (struct iwl_dvm_bt_params const *)0, .chain_noise_scale = 1000, .plcp_delta_threshold = (unsigned char)50U, .adv_thermal_throttle = (_Bool)1, .support_ct_kill_exit = (_Bool)1, .hd_v2 = (_Bool)0, .no_idle_support = (_Bool)0, .need_temp_offset_calib = (_Bool)1, .no_xtal_calib = (_Bool)0, .temp_offset_v2 = (_Bool)0, .adv_pm = (_Bool)0};

#line 658  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_6050_cfg = {.set_hw_params = & iwl6000_hw_set_hw_params, .set_channel_switch = & iwl6000_hw_channel_switch, .nic_config = & iwl6000_nic_config, .temperature = & iwlagn_temperature, .bt_params = (struct iwl_dvm_bt_params const *)0, .chain_noise_scale = 1500, .plcp_delta_threshold = (unsigned char)50U, .adv_thermal_throttle = (_Bool)1, .support_ct_kill_exit = (_Bool)1, .hd_v2 = (_Bool)0, .no_idle_support = (_Bool)0, .need_temp_offset_calib = (_Bool)0, .no_xtal_calib = (_Bool)0, .temp_offset_v2 = (_Bool)0, .adv_pm = (_Bool)0};

#line 669  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
static struct iwl_dvm_bt_params const iwl6000_bt_params = {.advanced_bt_coexist = (_Bool)1, .bt_init_traffic_load = (unsigned char)0U, .bt_prio_boost = 240U, .agg_time_limit = (unsigned short)1200U, .bt_sco_disable = (_Bool)1, .bt_session_2 = (_Bool)0};

#line 678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/devices.c"
struct iwl_dvm_cfg const iwl_dvm_6030_cfg = {.set_hw_params = & iwl6000_hw_set_hw_params, .set_channel_switch = & iwl6000_hw_channel_switch, .nic_config = & iwl6000_nic_config, .temperature = & iwlagn_temperature, .bt_params = & iwl6000_bt_params, .chain_noise_scale = 1000, .plcp_delta_threshold = (unsigned char)50U, .adv_thermal_throttle = (_Bool)1, .support_ct_kill_exit = (_Bool)1, .hd_v2 = (_Bool)0, .no_idle_support = (_Bool)0, .need_temp_offset_calib = (_Bool)1, .no_xtal_calib = (_Bool)0, .temp_offset_v2 = (_Bool)0, .adv_pm = (_Bool)1};

#line 435  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_devices.c.aux"
static void *kzalloc_2(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 438 
  tmp = ldv_kzalloc(size,flags);
  
#line 438 
  return tmp;
}


#line 427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int hex_dump_to_buffer(void const *, size_t, int, int, char *, size_t, bool);


#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_fault(char const *, int);


#line 402 
int sprintf(char *, char const * , ...);


#line 418 
int sscanf(char const *, char const * , ...);


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
size_t strlen(char const *);


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
static bool static_key_false_5(struct static_key *key)
{
  bool tmp;
  
#line 125 
  tmp = arch_static_branch(key);
  
#line 125 
  return tmp;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_1(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_76(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_78(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_80(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_84(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_1(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_77(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_79(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_81(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_85(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_mutex_lock_74_2(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_82_0(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_86_0(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_75_2(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_83_0(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_87_0(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_91_0(struct mutex *ldv_func_arg1);


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
static int ldv_mod_timer_88(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_89_0(struct timer_list *ldv_func_arg1);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_3(size_t size, gfp_t flags);


#line 581 
static void *kzalloc_3(size_t size, gfp_t flags);


#line 2662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
loff_t generic_file_llseek(struct file *, loff_t, int);


#line 2812 
int simple_open(struct inode *, struct file *);


#line 2843 
ssize_t simple_read_from_buffer(void *, size_t, loff_t *, void const *, size_t);


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
static struct dentry *ldv_debugfs_create_file_92(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 58 
static struct dentry *ldv_debugfs_create_file_93(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 62 
static struct dentry *ldv_debugfs_create_file_94(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 66 
static struct dentry *ldv_debugfs_create_file_95(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 70 
static struct dentry *ldv_debugfs_create_file_96(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 74 
static struct dentry *ldv_debugfs_create_file_97(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 78 
static struct dentry *ldv_debugfs_create_file_98(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 82 
static struct dentry *ldv_debugfs_create_file_99(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 86 
static struct dentry *ldv_debugfs_create_file_100(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 90 
static struct dentry *ldv_debugfs_create_file_101(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 94 
static struct dentry *ldv_debugfs_create_file_102(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 98 
static struct dentry *ldv_debugfs_create_file_103(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 102 
static struct dentry *ldv_debugfs_create_file_104(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 106 
static struct dentry *ldv_debugfs_create_file_105(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 110 
static struct dentry *ldv_debugfs_create_file_106(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 114 
static struct dentry *ldv_debugfs_create_file_107(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 118 
static struct dentry *ldv_debugfs_create_file_108(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 122 
static struct dentry *ldv_debugfs_create_file_109(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 126 
static struct dentry *ldv_debugfs_create_file_110(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 130 
static struct dentry *ldv_debugfs_create_file_111(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 134 
static struct dentry *ldv_debugfs_create_file_112(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 138 
static struct dentry *ldv_debugfs_create_file_113(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 142 
static struct dentry *ldv_debugfs_create_file_114(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 146 
static struct dentry *ldv_debugfs_create_file_115(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 150 
static struct dentry *ldv_debugfs_create_file_116(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 154 
static struct dentry *ldv_debugfs_create_file_117(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 158 
static struct dentry *ldv_debugfs_create_file_118(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 162 
static struct dentry *ldv_debugfs_create_file_119(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 166 
static struct dentry *ldv_debugfs_create_file_120(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 170 
static struct dentry *ldv_debugfs_create_file_121(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 174 
static struct dentry *ldv_debugfs_create_file_122(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 178 
static struct dentry *ldv_debugfs_create_file_123(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 182 
static struct dentry *ldv_debugfs_create_file_124(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 186 
static struct dentry *ldv_debugfs_create_file_125(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 190 
static struct dentry *ldv_debugfs_create_file_126(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 198 
struct dentry *debugfs_create_dir(char const *, struct dentry *);


#line 200 
struct dentry *debugfs_create_symlink(char const *, struct dentry *, char const *);


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_from_user(void *, void const *, unsigned int);


#line 662 
void copy_from_user_overflow(void);


#line 672 
void __copy_from_user_overflow(void);


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void const *from, unsigned long n)
{
  
#line 695 
  int sz = -1;
  
#line 697 
  __might_fault("./arch/x86/include/asm/uaccess.h",697);
  
#line 717 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 718 
                                                                    n = _copy_from_user(to,from,(unsigned int)n);
  else 
    
#line 719 
    if (0 != 0) 
#line 720 
                copy_from_user_overflow(); else 
#line 722 
                                                __copy_from_user_overflow();
  
#line 724 
  return n;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-devtrace-io.h"
__inline static void trace_iwlwifi_dev_ioread32_2(struct device const *dev, u32 offs, u32 val)
{
  bool tmp_4;
  
#line 35 
  tmp_4 = static_key_false_5(& __tracepoint_iwlwifi_dev_ioread32.key);
  
#line 35 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 35 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_4617 __u;
          
#line 35 
          __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ioread32.funcs),(void *)(& __u.__c),8);
          
#line 35 
          tmp = __u.__val;
        }
        
#line 35 
        struct tracepoint_func *_________p1 = tmp;
        
#line 35 
        tmp_0 = _________p1;
      }
      
#line 35 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 35 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 35 
        if (tmp_1 != 0) {
          
#line 35 
          if (! __warned) {
            int tmp_2;
            
#line 35 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 35 
            if (tmp_2 == 0) {
              
#line 35 
              __warned = (_Bool)1;
              
#line 35 
              lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",50,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 35 
      tmp_3 = ________p1;
    }
    
#line 35 
    it_func_ptr = tmp_3;
    
#line 35 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_51686: 
#line 37 
      ;
      
#line 35 
      it_func = it_func_ptr->func;
      
#line 35 
      __data = it_func_ptr->data;
      
#line 35 
      (*((void (*)(void *, struct device const *, u32 , u32 ))it_func))(__data,dev,offs,val);
      
#line 35 
      it_func_ptr += 1;
      
#line 35 
      ;
      
#line 35 
      if (it_func_ptr->func != (void *)0) 
#line 37 
                                          goto ldv_51686; else 
#line 40 
                                                               goto ldv_51687;
      ldv_51687: 
#line 41 
      ;
    }
    else ;
    
#line 35 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 35 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_4619 __u_0;
        
#line 35 
        __read_once_size((void const volatile *)(& __tracepoint_iwlwifi_dev_ioread32.funcs),(void *)(& __u_0.__c),8);
        
#line 35 
        tmp_5 = __u_0.__val;
      }
      
#line 35 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 35 
      tmp_6 = _________p1_0;
    }
    
#line 35 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 35 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 35 
      if (tmp_7 != 0) {
        
#line 35 
        if (! __warned_0) {
          int tmp_8;
          
#line 35 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 35 
          if (tmp_8 == 0) {
            
#line 35 
            __warned_0 = (_Bool)1;
            
#line 35 
            lockdep_rcu_suspicious("drivers/net/wireless/iwlwifi/dvm/../iwl-devtrace-io.h",50,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 35 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 35 
  rcu_read_unlock_sched_notrace();
  
#line 37 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-io.h"
__inline static u32 iwl_read32_2(struct iwl_trans *trans, u32 ofs)
{
  
#line 49 
  u32 val = iwl_trans_read32(trans,ofs);
  
#line 50 
  trace_iwlwifi_dev_ioread32_2((struct device const *)trans->dev,ofs,val);
  
#line 51 
  return val;
}


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
__inline static int iwl_is_any_associated_1(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_rxon_context *ctx;
  
#line 942 
  ctx = & priv->contexts[0];
  
#line 942 
  goto ldv_55186;
  ldv_55185: 
#line 943 
  ;
  
#line 942 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    int tmp;
    
#line 943 
    tmp = iwl_is_associated_ctx(ctx);
    
#line 943 
    if (tmp != 0) {
      
#line 944 
      __retres = 1;
      
#line 944 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 942 
  ctx += 1;
  ldv_55186: 
#line 943 
  ;
  
#line 942 
  if (& priv->contexts[2] > ctx) 
#line 944 
                                 goto ldv_55185; else 
#line 947 
                                                      goto ldv_55187;
  ldv_55187: 
#line 948 
  ;
  
#line 945 
  __retres = 0;
  return_label: 
#line 945 
                return __retres;
}


#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
char const *iwl_get_tx_fail_reason(u32 status);


#line 297 
char const *iwl_get_agg_tx_fail_reason(u16 status);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static int iwl_is_alive(struct iwl_priv *priv)
{
  int tmp;
  
#line 423 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& priv->status));
  
#line 423 
  return tmp;
}


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_sram_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buf;
  ssize_t ret;
  int sram;
  struct fw_img const *img;
  size_t bufsz;
  int tmp;
  int tmp_1;
  int tmp_2;
  
#line 99 
  u32 val = 0U;
  
#line 102 
  int i = 0;
  
#line 103 
  bool device_format = (_Bool)0;
  
#line 104 
  int offset = 0;
  
#line 105 
  int len = 0;
  
#line 106 
  int pos = 0;
  
#line 108 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 112 
  tmp = iwl_is_ready_rf(priv);
  
#line 112 
  if (tmp == 0) {
    
#line 113 
    __retres = -11L;
    
#line 113 
    goto return_label;
  }
  else ;
  
#line 116 
  if (priv->dbgfs_sram_offset == 0U && priv->dbgfs_sram_len == 0U) {
    
#line 117 
    priv->dbgfs_sram_offset = 8388608U;
    
#line 118 
    if (! priv->ucode_loaded) {
      
#line 119 
      __retres = -22L;
      
#line 119 
      goto return_label;
    }
    else ;
    
#line 120 
    img = & (priv->fw)->img[(unsigned int)priv->cur_ucode];
    
#line 121 
    priv->dbgfs_sram_len = img->sec[0].len;
  }
  else ;
  
#line 123 
  len = (int)priv->dbgfs_sram_len;
  
#line 125 
  if (len == -4) {
    
#line 126 
    device_format = (_Bool)1;
    
#line 127 
    len = 4;
  }
  else ;
  
#line 130 
  bufsz = (unsigned long)(len * 4 + 50);
  
#line 131 
  buf = (char *)kmalloc_3(bufsz,208U);
  
#line 132 
  if (buf == (char *)0) {
    
#line 133 
    __retres = -12L;
    
#line 133 
    goto return_label;
  }
  else ;
  
#line 135 
  tmp_1 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"sram_len: 0x%x\n",len);
  
#line 136 
  pos = tmp_1 + pos;
  
#line 137 
  tmp_2 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"sram_offset: 0x%x\n",priv->dbgfs_sram_offset);
  
#line 138 
  pos = tmp_2 + pos;
  
#line 141 
  offset = (int)priv->dbgfs_sram_offset & 3;
  
#line 142 
  sram = (int)priv->dbgfs_sram_offset & -4;
  
#line 145 
  val = iwl_trans_read_mem32(priv->trans,(unsigned int)sram);
  
#line 147 
  goto ldv_55608;
  ldv_55607: 
#line 148 
  ;
  
#line 149 
  if (i == 0) {
    int tmp_3;
    
#line 150 
    tmp_3 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"%08X: ",sram + offset);
    
#line 151 
    pos = tmp_3 + pos;
  }
  else ;
  
#line 153 
  if ((int)device_format != 0) {
    int tmp_4;
    
#line 154 
    tmp_4 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"%02x",(val >> (3 - offset) * 8) & 255U);
    
#line 155 
    pos = tmp_4 + pos;
  }
  else {
    int tmp_5;
    
#line 157 
    tmp_5 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"%02x ",(val >> offset * 8) & 255U);
    
#line 158 
    pos = tmp_5 + pos;
  }
  
#line 161 
  offset += 1;
  
#line 161 
  if (offset == 4) {
    
#line 162 
    sram += 4;
    
#line 163 
    offset = 0;
    
#line 164 
    val = iwl_trans_read_mem32(priv->trans,(unsigned int)sram);
  }
  else ;
  
#line 168 
  i += 1;
  
#line 168 
  if (i == 16) {
    int tmp_6;
    
#line 169 
    i = 0;
    
#line 170 
    tmp_6 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"\n");
    
#line 170 
    pos = tmp_6 + pos;
  }
  else 
    
#line 171 
    if ((i & 7) == 0) {
      int tmp_7;
      
#line 172 
      tmp_7 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"   ");
      
#line 172 
      pos = tmp_7 + pos;
    }
    else 
      
#line 173 
      if ((i & 3) == 0) {
        int tmp_8;
        
#line 174 
        tmp_8 = scnprintf(buf + pos,bufsz - (unsigned long)pos," ");
        
#line 174 
        pos = tmp_8 + pos;
      }
      else ;
  
#line 147 
  len -= 1;
  ldv_55608: 
#line 148 
  ;
  
#line 147 
  if (len != 0) 
#line 149 
                goto ldv_55607; else 
#line 152 
                                     goto ldv_55609;
  ldv_55609: 
#line 153 
  ;
  
#line 177 
  if (i != 0) {
    int tmp_9;
    
#line 178 
    tmp_9 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"\n");
    
#line 178 
    pos = tmp_9 + pos;
  }
  else ;
  
#line 180 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 181 
  kfree((void const *)buf);
  
#line 182 
  __retres = ret;
  return_label: 
#line 182 
                return __retres;
}


#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_sram_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[64U];
  int buf_size;
  u32 offset;
  u32 len;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_3;
  
#line 189 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 194 
  memset((void *)(& buf),0,64UL);
  {
    unsigned long tmp;
    
#line 195 
    size_t _min1 = count;
    
#line 195 
    unsigned long _min2 = 63UL;
    
#line 195 
    if (_min1 < _min2) 
#line 195 
                       tmp = _min1; else 
#line 195 
                                         tmp = _min2;
    
#line 195 
    tmp_0 = tmp;
  }
  
#line 195 
  buf_size = (int)tmp_0;
  
#line 196 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 196 
  if (tmp_1 != 0UL) {
    
#line 197 
    __retres = -14L;
    
#line 197 
    goto return_label;
  }
  else ;
  
#line 199 
  tmp_3 = sscanf((char const *)(& buf),"%x,%x",& offset,& len);
  
#line 199 
  if (tmp_3 == 2) {
    
#line 200 
    priv->dbgfs_sram_offset = offset;
    
#line 201 
    priv->dbgfs_sram_len = len;
  }
  else {
    int tmp_2;
    
#line 202 
    tmp_2 = sscanf((char const *)(& buf),"%x",& offset);
    
#line 202 
    if (tmp_2 == 1) {
      
#line 203 
      priv->dbgfs_sram_offset = offset;
      
#line 204 
      priv->dbgfs_sram_len = 4294967292U;
    }
    else {
      
#line 206 
      priv->dbgfs_sram_offset = 0U;
      
#line 207 
      priv->dbgfs_sram_len = 0U;
    }
  }
  
#line 210 
  __retres = (long)count;
  return_label: 
#line 210 
                return __retres;
}


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_wowlan_sram_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  ssize_t tmp;
  
#line 217 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 218 
  struct fw_img const *img = & (priv->fw)->img[2];
  
#line 220 
  if (priv->wowlan_sram == (void *)0) {
    
#line 221 
    __retres = -61L;
    
#line 221 
    goto return_label;
  }
  else ;
  
#line 223 
  tmp = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)priv->wowlan_sram,(unsigned long)img->sec[0].len);
  
#line 223 
  __retres = tmp;
  return_label: 
#line 223 
                return __retres;
}


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_stations_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  struct iwl_station_entry *station;
  struct iwl_tid_data *tid_data;
  char *buf;
  int i;
  int j;
  ssize_t ret;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_5;
  int tmp_6;
  
#line 230 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 234 
  int pos = 0;
  
#line 237 
  size_t const bufsz = (unsigned long)priv->num_stations * 500UL + 30UL;
  
#line 239 
  buf = (char *)kmalloc_3(bufsz,208U);
  
#line 240 
  if (buf == (char *)0) {
    
#line 241 
    __retres = -12L;
    
#line 241 
    goto return_label;
  }
  else ;
  
#line 243 
  tmp_0 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"num of stations: %d\n\n",priv->num_stations);
  
#line 244 
  pos = tmp_0 + pos;
  
#line 246 
  i = 0;
  
#line 246 
  goto ldv_55652;
  ldv_55651: 
#line 247 
  ;
  
#line 247 
  station = & priv->stations[i];
  
#line 248 
  if ((unsigned int)station->used == 0U) 
#line 249 
                                         goto ldv_55647; else ;
  
#line 250 
  tmp_1 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"station %d - addr: %pM, flags: %#x\n",i,(u8 *)(& station->sta.sta.addr),station->sta.station_flags_msk);
  
#line 253 
  pos = tmp_1 + pos;
  
#line 254 
  tmp_2 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"TID seqno  next_rclmd ");
  
#line 256 
  pos = tmp_2 + pos;
  
#line 258 
  j = 0;
  
#line 258 
  goto ldv_55649;
  ldv_55648: 
#line 259 
  ;
  
#line 259 
  tid_data = & priv->tid_data[i][j];
  
#line 260 
  tmp_3 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"%d:  0x%.4x 0x%.4x     0x%.8x   ",j,(int)tid_data->seq_number,(int)tid_data->next_reclaimed,tid_data->agg.rate_n_flags,(unsigned int)tid_data->agg.state,(int)tid_data->agg.txq_id);
  
#line 267 
  pos = tmp_3 + pos;
  
#line 269 
  if ((int)tid_data->agg.wait_for_ba != 0) {
    int tmp_4;
    
#line 270 
    tmp_4 = scnprintf(buf + pos,bufsz - (unsigned long)pos," - waitforba");
    
#line 271 
    pos = tmp_4 + pos;
  }
  else ;
  
#line 272 
  tmp_5 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"\n");
  
#line 272 
  pos = tmp_5 + pos;
  
#line 258 
  j += 1;
  ldv_55649: 
#line 259 
  ;
  
#line 258 
  if (j <= 7) 
#line 260 
              goto ldv_55648; else 
#line 263 
                                   goto ldv_55650;
  ldv_55650: 
#line 264 
  ;
  
#line 275 
  tmp_6 = scnprintf(buf + pos,bufsz - (unsigned long)pos,"\n");
  
#line 275 
  pos = tmp_6 + pos;
  ldv_55647: 
#line 276 
  ;
  
#line 246 
  i += 1;
  ldv_55652: 
#line 247 
  ;
  
#line 246 
  if (i <= 15) 
#line 248 
               goto ldv_55651; else 
#line 251 
                                    goto ldv_55653;
  ldv_55653: 
#line 252 
  ;
  
#line 278 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 279 
  kfree((void const *)buf);
  
#line 280 
  __retres = ret;
  return_label: 
#line 280 
                return __retres;
}


#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_nvm_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  ssize_t ret;
  u8 const *ptr;
  char *buf;
  u16 nvm_ver;
  int tmp_0;
  int tmp_1;
  size_t tmp_2;
  
#line 289 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 290 
  int pos = 0;
  
#line 290 
  int ofs = 0;
  
#line 290 
  int buf_size = 0;
  
#line 294 
  size_t eeprom_len = priv->eeprom_blob_size;
  
#line 295 
  buf_size = (int)((eeprom_len + 64UL) * (size_t)4U);
  
#line 297 
  if ((eeprom_len & 15UL) != 0UL) {
    
#line 298 
    __retres = -61L;
    
#line 298 
    goto return_label;
  }
  else ;
  
#line 300 
  ptr = (u8 const *)priv->eeprom_blob;
  
#line 301 
  if (ptr == (u8 const *)0U) {
    
#line 302 
    __retres = -12L;
    
#line 302 
    goto return_label;
  }
  else ;
  
#line 305 
  buf = (char *)kzalloc_3((unsigned long)buf_size,208U);
  
#line 306 
  if (buf == (char *)0) {
    
#line 307 
    __retres = -12L;
    
#line 307 
    goto return_label;
  }
  else ;
  
#line 309 
  nvm_ver = (unsigned short)(priv->nvm_data)->nvm_version;
  
#line 310 
  tmp_0 = scnprintf(buf + pos,(unsigned long)(buf_size - pos),"NVM version: 0x%x\n",(int)nvm_ver);
  
#line 311 
  pos = tmp_0 + pos;
  
#line 312 
  ofs = 0;
  
#line 312 
  goto ldv_55670;
  ldv_55669: 
#line 313 
  ;
  
#line 313 
  tmp_1 = scnprintf(buf + pos,(unsigned long)(buf_size - pos),"0x%.4x ",ofs);
  
#line 313 
  pos = tmp_1 + pos;
  
#line 314 
  hex_dump_to_buffer((void const *)(ptr + ofs),16UL,16,2,buf + pos,(unsigned long)(buf_size - pos),(_Bool)0);
  
#line 316 
  tmp_2 = strlen((char const *)(buf + pos));
  
#line 316 
  pos = (int)(tmp_2 + (size_t)pos);
  
#line 317 
  if (buf_size - pos > 0) {
    int tmp_3;
    
#line 318 
    tmp_3 = pos;
    
#line 318 
    pos += 1;
    
#line 318 
    *(buf + tmp_3) = (char)10;
  }
  else ;
  
#line 312 
  ofs += 16;
  ldv_55670: 
#line 313 
  ;
  
#line 312 
  if ((unsigned long)ofs < eeprom_len) 
#line 314 
                                       goto ldv_55669; else 
#line 317 
                                                            goto ldv_55671;
  ldv_55671: 
#line 318 
  ;
  
#line 321 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 322 
  kfree((void const *)buf);
  
#line 323 
  __retres = ret;
  return_label: 
#line 323 
                return __retres;
}


#line 326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_channels_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  int i;
  char *buf;
  ssize_t ret;
  
#line 329 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 330 
  struct ieee80211_channel *channels = (struct ieee80211_channel *)0;
  
#line 331 
  struct ieee80211_supported_band const *supp_band = (struct ieee80211_supported_band const *)0;
  
#line 332 
  int pos = 0;
  
#line 332 
  int bufsz = 4096;
  
#line 336 
  buf = (char *)kzalloc_3((unsigned long)bufsz,208U);
  
#line 337 
  if (buf == (char *)0) {
    
#line 338 
    __retres = -12L;
    
#line 338 
    goto return_label;
  }
  else ;
  
#line 340 
  supp_band = iwl_get_hw_mode(priv,(enum ieee80211_band)IEEE80211_BAND_2GHZ);
  
#line 341 
  if (supp_band != (struct ieee80211_supported_band const *)0) {
    int tmp_0;
    int tmp_4;
    char *tmp_1;
    char *tmp_2;
    char *tmp_3;
    
#line 342 
    channels = supp_band->channels;
    
#line 344 
    tmp_0 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"Displaying %d channels in 2.4GHz band 802.11bg):\n",supp_band->n_channels);
    
#line 346 
    pos = tmp_0 + pos;
    
#line 348 
    i = 0;
    
#line 348 
    goto ldv_55687;
    ldv_55686: 
#line 349 
    ;
    
#line 358 
    if (((channels + i)->flags & 2U) != 0U) 
#line 358 
                                            tmp_1 = (char *)"passive only"; else 
                                                                    
#line 358 
                                                                    tmp_1 = (char *)"active/passive";
    
#line 354 
    if (((channels + i)->flags & 2U) != 0U || ((channels + i)->flags & 8U) != 0U) 
      
#line 354 
      tmp_2 = (char *)""; else 
#line 354 
                               tmp_2 = (char *)", IBSS";
    
#line 352 
    if (((channels + i)->flags & 8U) != 0U) 
#line 352 
                                            tmp_3 = (char *)" (IEEE 802.11h required)"; else 
                                                                    
#line 352 
                                                                    tmp_3 = (char *)"";
    
#line 349 
    ;
    
#line 349 
    ;
    
#line 349 
    ;
    
#line 349 
    ;
    
#line 349 
    tmp_4 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%d: %ddBm: BSS%s%s, %s.\n",(int)(channels + i)->hw_value,(channels + i)->max_power,tmp_3,tmp_2,tmp_1);
    
#line 361 
    pos = tmp_4 + pos;
    
#line 348 
    i += 1;
    ldv_55687: 
#line 349 
    ;
    
#line 348 
    if (supp_band->n_channels > i) 
#line 350 
                                   goto ldv_55686; else 
#line 353 
                                                        goto ldv_55688;
    ldv_55688: 
#line 354 
    ;
  }
  else ;
  
#line 363 
  supp_band = iwl_get_hw_mode(priv,(enum ieee80211_band)IEEE80211_BAND_5GHZ);
  
#line 364 
  if (supp_band != (struct ieee80211_supported_band const *)0) {
    int tmp_5;
    int tmp_9;
    char *tmp_6;
    char *tmp_7;
    char *tmp_8;
    
#line 365 
    channels = supp_band->channels;
    
#line 367 
    tmp_5 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"Displaying %d channels in 5.2GHz band (802.11a)\n",supp_band->n_channels);
    
#line 369 
    pos = tmp_5 + pos;
    
#line 371 
    i = 0;
    
#line 371 
    goto ldv_55690;
    ldv_55689: 
#line 372 
    ;
    
#line 381 
    if (((channels + i)->flags & 2U) != 0U) 
#line 381 
                                            tmp_6 = (char *)"passive only"; else 
                                                                    
#line 381 
                                                                    tmp_6 = (char *)"active/passive";
    
#line 377 
    if (((channels + i)->flags & 2U) != 0U || ((channels + i)->flags & 8U) != 0U) 
      
#line 377 
      tmp_7 = (char *)""; else 
#line 377 
                               tmp_7 = (char *)", IBSS";
    
#line 375 
    if (((channels + i)->flags & 8U) != 0U) 
#line 375 
                                            tmp_8 = (char *)" (IEEE 802.11h required)"; else 
                                                                    
#line 375 
                                                                    tmp_8 = (char *)"";
    
#line 372 
    ;
    
#line 372 
    ;
    
#line 372 
    ;
    
#line 372 
    ;
    
#line 372 
    tmp_9 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%d: %ddBm: BSS%s%s, %s.\n",(int)(channels + i)->hw_value,(channels + i)->max_power,tmp_8,tmp_7,tmp_6);
    
#line 384 
    pos = tmp_9 + pos;
    
#line 371 
    i += 1;
    ldv_55690: 
#line 372 
    ;
    
#line 371 
    if (supp_band->n_channels > i) 
#line 373 
                                   goto ldv_55689; else 
#line 376 
                                                        goto ldv_55691;
    ldv_55691: 
#line 377 
    ;
  }
  else ;
  
#line 386 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 387 
  kfree((void const *)buf);
  
#line 388 
  __retres = ret;
  return_label: 
#line 388 
                return __retres;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_status_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[512U];
  int tmp_0;
  int tmp;
  int tmp_2;
  int tmp_1;
  int tmp_4;
  int tmp_3;
  int tmp_6;
  int tmp_5;
  int tmp_8;
  int tmp_7;
  int tmp_10;
  int tmp_9;
  int tmp_12;
  int tmp_11;
  int tmp_14;
  int tmp_13;
  int tmp_16;
  int tmp_15;
  int tmp_18;
  int tmp_17;
  int tmp_20;
  int tmp_19;
  ssize_t tmp_21;
  
#line 395 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 397 
  int pos = 0;
  
#line 398 
  size_t const bufsz = 512UL;
  
#line 400 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& priv->status));
  
#line 400 
  tmp_0 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_RF_KILL_HW:\t %d\n",tmp);
  
#line 401 
  pos = tmp_0 + pos;
  
#line 402 
  tmp_1 = constant_test_bit(1L,(unsigned long const volatile *)(& priv->status));
  
#line 402 
  tmp_2 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_CT_KILL:\t\t %d\n",tmp_1);
  
#line 403 
  pos = tmp_2 + pos;
  
#line 404 
  tmp_3 = constant_test_bit(2L,(unsigned long const volatile *)(& priv->status));
  
#line 404 
  tmp_4 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_ALIVE:\t\t %d\n",tmp_3);
  
#line 405 
  pos = tmp_4 + pos;
  
#line 406 
  tmp_5 = constant_test_bit(3L,(unsigned long const volatile *)(& priv->status));
  
#line 406 
  tmp_6 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_READY:\t\t %d\n",tmp_5);
  
#line 407 
  pos = tmp_6 + pos;
  
#line 408 
  tmp_7 = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
  
#line 408 
  tmp_8 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_EXIT_PENDING:\t %d\n",tmp_7);
  
#line 409 
  pos = tmp_8 + pos;
  
#line 410 
  tmp_9 = constant_test_bit(6L,(unsigned long const volatile *)(& priv->status));
  
#line 410 
  tmp_10 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_STATISTICS:\t %d\n",tmp_9);
  
#line 411 
  pos = tmp_10 + pos;
  
#line 412 
  tmp_11 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
  
#line 412 
  tmp_12 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_SCANNING:\t %d\n",tmp_11);
  
#line 413 
  pos = tmp_12 + pos;
  
#line 414 
  tmp_13 = constant_test_bit(8L,(unsigned long const volatile *)(& priv->status));
  
#line 414 
  tmp_14 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_SCAN_ABORTING:\t %d\n",tmp_13);
  
#line 415 
  pos = tmp_14 + pos;
  
#line 416 
  tmp_15 = constant_test_bit(9L,(unsigned long const volatile *)(& priv->status));
  
#line 416 
  tmp_16 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_SCAN_HW:\t\t %d\n",tmp_15);
  
#line 417 
  pos = tmp_16 + pos;
  
#line 418 
  tmp_17 = constant_test_bit(13L,(unsigned long const volatile *)(& priv->status));
  
#line 418 
  tmp_18 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_POWER_PMI:\t %d\n",tmp_17);
  
#line 419 
  pos = tmp_18 + pos;
  
#line 420 
  tmp_19 = constant_test_bit(10L,(unsigned long const volatile *)(& priv->status));
  
#line 420 
  tmp_20 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"STATUS_FW_ERROR:\t %d\n",tmp_19);
  
#line 421 
  pos = tmp_20 + pos;
  
#line 422 
  tmp_21 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 422 
  return tmp_21;
}


#line 425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_rx_handlers_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buf;
  ssize_t ret;
  
#line 429 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 431 
  int pos = 0;
  
#line 432 
  int cnt = 0;
  
#line 434 
  int bufsz = 1536;
  
#line 437 
  buf = (char *)kzalloc_3((unsigned long)bufsz,208U);
  
#line 438 
  if (buf == (char *)0) {
    
#line 439 
    __retres = -12L;
    
#line 439 
    goto return_label;
  }
  else ;
  
#line 441 
  cnt = 0;
  
#line 441 
  goto ldv_55715;
  ldv_55714: 
#line 442 
  ;
  
#line 442 
  if (priv->rx_handlers_stats[cnt] != 0U) {
    int tmp_1;
    char const *tmp_0;
    
#line 443 
    ;
    
#line 444 
    tmp_0 = iwl_dvm_get_cmd_string((unsigned char)((int)((unsigned char)cnt)));
    
#line 443 
    ;
    
#line 443 
    ;
    
#line 443 
    tmp_1 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"\tRx handler[%36s]:\t\t %u\n",tmp_0,priv->rx_handlers_stats[cnt]);
    
#line 446 
    pos = tmp_1 + pos;
  }
  else ;
  
#line 441 
  cnt += 1;
  ldv_55715: 
#line 442 
  ;
  
#line 441 
  if (cnt <= 254) 
#line 443 
                  goto ldv_55714; else 
#line 446 
                                       goto ldv_55716;
  ldv_55716: 
#line 447 
  ;
  
#line 449 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 450 
  kfree((void const *)buf);
  
#line 451 
  __retres = ret;
  return_label: 
#line 451 
                return __retres;
}


#line 454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_rx_handlers_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  u32 reset_flag;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  
#line 458 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 464 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 465 
    size_t _min1 = count;
    
#line 465 
    unsigned long _min2 = 7UL;
    
#line 465 
    if (_min1 < _min2) 
#line 465 
                       tmp = _min1; else 
#line 465 
                                         tmp = _min2;
    
#line 465 
    tmp_0 = tmp;
  }
  
#line 465 
  buf_size = (int)tmp_0;
  
#line 466 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 466 
  if (tmp_1 != 0UL) {
    
#line 467 
    __retres = -14L;
    
#line 467 
    goto return_label;
  }
  else ;
  
#line 468 
  tmp_2 = sscanf((char const *)(& buf),"%x",& reset_flag);
  
#line 468 
  if (tmp_2 != 1) {
    
#line 469 
    __retres = -14L;
    
#line 469 
    goto return_label;
  }
  else ;
  
#line 470 
  if (reset_flag == 0U) 
#line 471 
                        memset((void *)(& priv->rx_handlers_stats[0]),0,1020UL); else ;
  
#line 474 
  __retres = (long)count;
  return_label: 
#line 474 
                return __retres;
}


#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_qos_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  struct iwl_rxon_context *ctx;
  int i;
  char buf[512U];
  ssize_t tmp_3;
  
#line 480 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 482 
  int pos = 0;
  
#line 484 
  size_t const bufsz = 512UL;
  
#line 486 
  ctx = & priv->contexts[0];
  
#line 486 
  goto ldv_55746;
  ldv_55745: 
#line 487 
  ;
  
#line 486 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    int tmp;
    int tmp_0;
    int tmp_1;
    int tmp_2;
    
#line 487 
    tmp = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"context %d:\n",(unsigned int)ctx->ctxid);
    
#line 488 
    pos = tmp + pos;
    
#line 489 
    i = 0;
    
#line 489 
    goto ldv_55743;
    ldv_55742: 
#line 490 
    ;
    
#line 490 
    tmp_0 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"\tcw_min\tcw_max\taifsn\ttxop\n");
    
#line 491 
    pos = tmp_0 + pos;
    
#line 492 
    tmp_1 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"AC[%d]\t%u\t%u\t%u\t%u\n",i,(int)ctx->qos_data.def_qos_parm.ac[i].cw_min,(int)ctx->qos_data.def_qos_parm.ac[i].cw_max,(int)ctx->qos_data.def_qos_parm.ac[i].aifsn,(int)ctx->qos_data.def_qos_parm.ac[i].edca_txop);
    
#line 497 
    pos = tmp_1 + pos;
    
#line 489 
    i += 1;
    ldv_55743: 
#line 490 
    ;
    
#line 489 
    if (i <= 3) 
#line 491 
                goto ldv_55742; else 
#line 494 
                                     goto ldv_55744;
    ldv_55744: 
#line 495 
    ;
    
#line 499 
    tmp_2 = scnprintf((char *)(& buf) + pos,512UL - (unsigned long)pos,"\n");
    
#line 499 
    pos = tmp_2 + pos;
  }
  else ;
  
#line 486 
  ctx += 1;
  ldv_55746: 
#line 487 
  ;
  
#line 486 
  if (& priv->contexts[2] > ctx) 
#line 488 
                                 goto ldv_55745; else 
#line 491 
                                                      goto ldv_55747;
  ldv_55747: 
#line 492 
  ;
  
#line 501 
  tmp_3 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 501 
  return tmp_3;
}


#line 504  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_thermal_throttling_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  struct iwl_tt_restriction *restriction;
  char buf[100U];
  int tmp_0;
  char *tmp;
  int tmp_1;
  ssize_t tmp_5;
  
#line 508 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 509 
  struct iwl_tt_mgmt *tt = & priv->thermal_throttle;
  
#line 512 
  int pos = 0;
  
#line 513 
  size_t const bufsz = 100UL;
  
#line 516 
  if ((int)tt->advanced_tt != 0) 
#line 516 
                                 tmp = (char *)"Advance"; else 
#line 516 
                                                               tmp = (char *)"Legacy";
  
#line 515 
  tmp_0 = scnprintf((char *)(& buf) + pos,100UL - (unsigned long)pos,"Thermal Throttling Mode: %s\n",tmp);
  
#line 517 
  pos = tmp_0 + pos;
  
#line 518 
  tmp_1 = scnprintf((char *)(& buf) + pos,100UL - (unsigned long)pos,"Thermal Throttling State: %d\n",(unsigned int)tt->state);
  
#line 520 
  pos = tmp_1 + pos;
  
#line 521 
  if ((int)tt->advanced_tt != 0) {
    int tmp_2;
    int tmp_3;
    int tmp_4;
    
#line 522 
    restriction = tt->restriction + tt->state;
    
#line 523 
    tmp_2 = scnprintf((char *)(& buf) + pos,100UL - (unsigned long)pos,"Tx mode: %d\n",(unsigned int)restriction->tx_stream);
    
#line 525 
    pos = tmp_2 + pos;
    
#line 526 
    tmp_3 = scnprintf((char *)(& buf) + pos,100UL - (unsigned long)pos,"Rx mode: %d\n",(unsigned int)restriction->rx_stream);
    
#line 528 
    pos = tmp_3 + pos;
    
#line 529 
    tmp_4 = scnprintf((char *)(& buf) + pos,100UL - (unsigned long)pos,"HT mode: %d\n",(int)restriction->is_ht);
    
#line 531 
    pos = tmp_4 + pos;
  }
  else ;
  
#line 533 
  tmp_5 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 533 
  return tmp_5;
}


#line 536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_disable_ht40_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  int ht40;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 540 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 545 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 546 
    size_t _min1 = count;
    
#line 546 
    unsigned long _min2 = 7UL;
    
#line 546 
    if (_min1 < _min2) 
#line 546 
                       tmp = _min1; else 
#line 546 
                                         tmp = _min2;
    
#line 546 
    tmp_0 = tmp;
  }
  
#line 546 
  buf_size = (int)tmp_0;
  
#line 547 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 547 
  if (tmp_1 != 0UL) {
    
#line 548 
    __retres = -14L;
    
#line 548 
    goto return_label;
  }
  else ;
  
#line 549 
  tmp_2 = sscanf((char const *)(& buf),"%d",& ht40);
  
#line 549 
  if (tmp_2 != 1) {
    
#line 550 
    __retres = -14L;
    
#line 550 
    goto return_label;
  }
  else ;
  
#line 551 
  tmp_3 = iwl_is_any_associated_1(priv);
  
#line 551 
  if (tmp_3 == 0) 
#line 552 
                  priv->disable_ht40 = (_Bool)(ht40 != 0);
  else {
    
#line 554 
    __retres = -22L;
    
#line 554 
    goto return_label;
  }
  
#line 556 
  __retres = (long)count;
  return_label: 
#line 556 
                return __retres;
}


#line 559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_disable_ht40_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[100U];
  int tmp_0;
  char *tmp;
  ssize_t tmp_1;
  
#line 563 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 565 
  int pos = 0;
  
#line 566 
  size_t const bufsz = 100UL;
  
#line 569 
  if ((int)priv->disable_ht40 != 0) 
#line 569 
                                    tmp = (char *)"Disabled"; else 
#line 569 
                                                                   tmp = (char *)"Enabled";
  
#line 568 
  tmp_0 = scnprintf((char *)(& buf) + pos,100UL - (unsigned long)pos,"11n 40MHz Mode: %s\n",tmp);
  
#line 570 
  pos = tmp_0 + pos;
  
#line 571 
  tmp_1 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 571 
  return tmp_1;
}


#line 574  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_temperature_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[8U];
  int tmp;
  ssize_t tmp_0;
  
#line 578 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 580 
  int pos = 0;
  
#line 581 
  size_t const bufsz = 8UL;
  
#line 583 
  tmp = scnprintf((char *)(& buf) + pos,8UL - (unsigned long)pos,"%d\n",priv->temperature);
  
#line 583 
  pos = tmp + pos;
  
#line 584 
  tmp_0 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 584 
  return tmp_0;
}


#line 588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_sleep_level_override_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  int value;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 592 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 597 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 598 
    size_t _min1 = count;
    
#line 598 
    unsigned long _min2 = 7UL;
    
#line 598 
    if (_min1 < _min2) 
#line 598 
                       tmp = _min1; else 
#line 598 
                                         tmp = _min2;
    
#line 598 
    tmp_0 = tmp;
  }
  
#line 598 
  buf_size = (int)tmp_0;
  
#line 599 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 599 
  if (tmp_1 != 0UL) {
    
#line 600 
    __retres = -14L;
    
#line 600 
    goto return_label;
  }
  else ;
  
#line 602 
  tmp_2 = sscanf((char const *)(& buf),"%d",& value);
  
#line 602 
  if (tmp_2 != 1) {
    
#line 603 
    __retres = -22L;
    
#line 603 
    goto return_label;
  }
  else ;
  
#line 610 
  if (value == 0) {
    
#line 611 
    __retres = -22L;
    
#line 611 
    goto return_label;
  }
  else 
    
#line 612 
    if (value > 0) 
#line 613 
                   value += -1; else ;
  
#line 615 
  if ((unsigned int)value + 1U > 5U) {
    
#line 616 
    __retres = -22L;
    
#line 616 
    goto return_label;
  }
  else ;
  
#line 618 
  tmp_3 = iwl_is_ready_rf(priv);
  
#line 618 
  if (tmp_3 == 0) {
    
#line 619 
    __retres = -11L;
    
#line 619 
    goto return_label;
  }
  else ;
  
#line 621 
  priv->power_data.debug_sleep_level_override = value;
  
#line 623 
  ldv_mutex_lock_74_2(& priv->mutex);
  
#line 624 
  iwl_power_update_mode(priv,(_Bool)1);
  
#line 625 
  ldv_mutex_unlock_75_2(& priv->mutex);
  
#line 627 
  __retres = (long)count;
  return_label: 
#line 627 
                return __retres;
}


#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_sleep_level_override_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[10U];
  int pos;
  int value;
  ssize_t tmp;
  
#line 634 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 637 
  size_t const bufsz = 10UL;
  
#line 640 
  value = priv->power_data.debug_sleep_level_override;
  
#line 641 
  if (value >= 0) 
#line 642 
                  value += 1; else ;
  
#line 644 
  pos = scnprintf((char *)(& buf),bufsz,"%d\n",value);
  
#line 645 
  tmp = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 645 
  return tmp;
}


#line 648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_current_sleep_command_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[200U];
  int i;
  int tmp;
  int tmp_0;
  int tmp_1;
  ssize_t tmp_2;
  
#line 652 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 654 
  int pos = 0;
  
#line 655 
  size_t const bufsz = 200UL;
  
#line 656 
  struct iwl_powertable_cmd *cmd = & priv->power_data.sleep_cmd;
  
#line 658 
  tmp = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"flags: %#.2x\n",(int)cmd->flags);
  
#line 659 
  pos = tmp + pos;
  
#line 660 
  tmp_0 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"RX/TX timeout: %d/%d usec\n",cmd->rx_data_timeout,cmd->tx_data_timeout);
  
#line 663 
  pos = tmp_0 + pos;
  
#line 664 
  i = 0;
  
#line 664 
  goto ldv_55830;
  ldv_55829: 
#line 665 
  ;
  
#line 665 
  tmp_1 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"sleep_interval[%d]: %d\n",i,cmd->sleep_interval[i]);
  
#line 667 
  pos = tmp_1 + pos;
  
#line 664 
  i += 1;
  ldv_55830: 
#line 665 
  ;
  
#line 664 
  if (i <= 4) 
#line 666 
              goto ldv_55829; else 
#line 669 
                                   goto ldv_55831;
  ldv_55831: 
#line 670 
  ;
  
#line 669 
  tmp_2 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 669 
  return tmp_2;
}


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_sram_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_sram_read, .write = & iwl_dbgfs_sram_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_wowlan_sram_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_wowlan_sram_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_nvm_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_nvm_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_stations_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_stations_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_channels_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_channels_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 677  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_status_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_status_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_rx_handlers_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_rx_handlers_read, .write = & iwl_dbgfs_rx_handlers_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_qos_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_qos_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_thermal_throttling_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_thermal_throttling_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 681  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_disable_ht40_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_disable_ht40_read, .write = & iwl_dbgfs_disable_ht40_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 682  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_temperature_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_temperature_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_sleep_level_override_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_sleep_level_override_read, .write = & iwl_dbgfs_sleep_level_override_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_current_sleep_command_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_current_sleep_command_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static char const *fmt_value = "  %-30s %10u\n";

#line 687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static char const *fmt_hex = "  %-30s       0x%02X\n";

#line 688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static char const *fmt_table = "  %-30s %10u  %10u  %10u  %10u\n";

#line 689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static char const *fmt_header = "%-32s    current  cumulative       delta         max\n";

#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static int iwl_statistics_flag(struct iwl_priv *priv, char *buf, int bufsz)
{
  u32 flag;
  int tmp_1;
  int tmp_4;
  char *tmp_3;
  int tmp_6;
  char *tmp_5;
  
#line 694 
  int p = 0;
  {
    int tmp_0;
    
#line 697 
    if (debug_locks != 0) {
      int tmp;
      
#line 697 
      tmp = lock_is_held(& priv->statistics.lock.__anonCompField_spinlock_18.__anonCompField___anonunion_34_17.dep_map);
      
#line 697 
      if (tmp == 0) 
#line 697 
                    tmp_0 = 1; else 
#line 697 
                                    tmp_0 = 0;
    }
    else 
#line 697 
         tmp_0 = 0;
    
#line 697 
    int __ret_warn_on = tmp_0;
    
#line 697 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 697 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c",697); else ;
    
#line 697 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 699 
  flag = priv->statistics.flag;
  
#line 701 
  tmp_1 = scnprintf(buf + p,(unsigned long)(bufsz - p),"Statistics Flag(0x%X):\n",flag);
  
#line 701 
  p = tmp_1 + p;
  
#line 702 
  if ((flag & 1U) != 0U) {
    int tmp_2_0;
    
#line 703 
    tmp_2_0 = scnprintf(buf + p,(unsigned long)(bufsz - p),"\tStatistics have been cleared\n");
    
#line 704 
    p = tmp_2_0 + p;
  }
  else ;
  
#line 705 
  if ((flag & 2U) != 0U) 
#line 705 
                         tmp_3 = (char *)"2.4 GHz"; else 
#line 705 
                                                         tmp_3 = (char *)"5.2 GHz";
  
#line 705 
  ;
  
#line 705 
  ;
  
#line 705 
  tmp_4 = scnprintf(buf + p,(unsigned long)(bufsz - p),"\tOperational Frequency: %s\n",tmp_3);
  
#line 707 
  p = tmp_4 + p;
  
#line 708 
  if ((flag & 4U) != 0U) 
#line 708 
                         tmp_5 = (char *)"enabled"; else 
#line 708 
                                                         tmp_5 = (char *)"disabled";
  
#line 708 
  ;
  
#line 708 
  ;
  
#line 708 
  tmp_6 = scnprintf(buf + p,(unsigned long)(bufsz - p),"\tTGj Narrow Band: %s\n",tmp_5);
  
#line 710 
  p = tmp_6 + p;
  
#line 712 
  return p;
}


#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_ucode_rx_stats_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buf;
  ssize_t ret;
  struct statistics_rx_phy *ofdm;
  struct statistics_rx_phy *accum_ofdm;
  struct statistics_rx_phy *delta_ofdm;
  struct statistics_rx_phy *max_ofdm;
  struct statistics_rx_phy *cck;
  struct statistics_rx_phy *accum_cck;
  struct statistics_rx_phy *delta_cck;
  struct statistics_rx_phy *max_cck;
  struct statistics_rx_non_phy *general;
  struct statistics_rx_non_phy *accum_general;
  struct statistics_rx_non_phy *delta_general;
  struct statistics_rx_non_phy *max_general;
  struct statistics_rx_ht_phy *ht;
  struct statistics_rx_ht_phy *accum_ht;
  struct statistics_rx_ht_phy *delta_ht;
  struct statistics_rx_ht_phy *max_ht;
  int tmp;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  int tmp_15;
  int tmp_16;
  int tmp_17;
  int tmp_18;
  int tmp_19;
  int tmp_20;
  int tmp_21;
  int tmp_22;
  int tmp_23;
  int tmp_24;
  int tmp_25;
  int tmp_26;
  int tmp_27;
  int tmp_28;
  int tmp_29;
  int tmp_30;
  int tmp_31;
  int tmp_32;
  int tmp_33;
  int tmp_34;
  int tmp_35;
  int tmp_36;
  int tmp_37;
  int tmp_38;
  int tmp_39;
  int tmp_40;
  int tmp_41;
  int tmp_42;
  int tmp_43;
  int tmp_44;
  int tmp_45;
  int tmp_46;
  int tmp_47;
  int tmp_48;
  int tmp_49;
  int tmp_50;
  int tmp_51;
  int tmp_52;
  int tmp_53;
  int tmp_54;
  int tmp_55;
  int tmp_56;
  int tmp_57;
  int tmp_58;
  int tmp_59;
  int tmp_60;
  int tmp_61;
  int tmp_62;
  int tmp_63;
  int tmp_64;
  int tmp_65;
  int tmp_66;
  int tmp_67;
  int tmp_68;
  int tmp_69;
  int tmp_70;
  int tmp_71;
  int tmp_72;
  int tmp_73;
  int tmp_74;
  
#line 719 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 720 
  int pos = 0;
  
#line 722 
  int bufsz = 8560;
  
#line 732 
  tmp = iwl_is_alive(priv);
  
#line 732 
  if (tmp == 0) {
    
#line 733 
    __retres = -11L;
    
#line 733 
    goto return_label;
  }
  else ;
  
#line 735 
  buf = (char *)kzalloc_3((unsigned long)bufsz,208U);
  
#line 736 
  if (buf == (char *)0) {
    
#line 737 
    __retres = -12L;
    
#line 737 
    goto return_label;
  }
  else ;
  
#line 744 
  ldv_spin_lock_bh_76(& priv->statistics.lock);
  
#line 745 
  ofdm = & priv->statistics.rx_ofdm;
  
#line 746 
  cck = & priv->statistics.rx_cck;
  
#line 747 
  general = & priv->statistics.rx_non_phy;
  
#line 748 
  ht = & priv->statistics.rx_ofdm_ht;
  
#line 749 
  accum_ofdm = & priv->accum_stats.rx_ofdm;
  
#line 750 
  accum_cck = & priv->accum_stats.rx_cck;
  
#line 751 
  accum_general = & priv->accum_stats.rx_non_phy;
  
#line 752 
  accum_ht = & priv->accum_stats.rx_ofdm_ht;
  
#line 753 
  delta_ofdm = & priv->delta_stats.rx_ofdm;
  
#line 754 
  delta_cck = & priv->delta_stats.rx_cck;
  
#line 755 
  delta_general = & priv->delta_stats.rx_non_phy;
  
#line 756 
  delta_ht = & priv->delta_stats.rx_ofdm_ht;
  
#line 757 
  max_ofdm = & priv->max_delta_stats.rx_ofdm;
  
#line 758 
  max_cck = & priv->max_delta_stats.rx_cck;
  
#line 759 
  max_general = & priv->max_delta_stats.rx_non_phy;
  
#line 760 
  max_ht = & priv->max_delta_stats.rx_ofdm_ht;
  
#line 762 
  tmp_1 = iwl_statistics_flag(priv,buf,bufsz);
  
#line 762 
  pos = tmp_1 + pos;
  
#line 763 
  tmp_2 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_header,(char *)"Statistics_Rx - OFDM:");
  
#line 764 
  pos = tmp_2 + pos;
  
#line 765 
  tmp_3 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"ina_cnt:",ofdm->ina_cnt,accum_ofdm->ina_cnt,delta_ofdm->ina_cnt,max_ofdm->ina_cnt);
  
#line 769 
  pos = tmp_3 + pos;
  
#line 770 
  tmp_4 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"fina_cnt:",ofdm->fina_cnt,accum_ofdm->fina_cnt,delta_ofdm->fina_cnt,max_ofdm->fina_cnt);
  
#line 773 
  pos = tmp_4 + pos;
  
#line 774 
  tmp_5 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"plcp_err:",ofdm->plcp_err,accum_ofdm->plcp_err,delta_ofdm->plcp_err,max_ofdm->plcp_err);
  
#line 777 
  pos = tmp_5 + pos;
  
#line 778 
  tmp_6 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"crc32_err:",ofdm->crc32_err,accum_ofdm->crc32_err,delta_ofdm->crc32_err,max_ofdm->crc32_err);
  
#line 781 
  pos = tmp_6 + pos;
  
#line 782 
  tmp_7 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"overrun_err:",ofdm->overrun_err,accum_ofdm->overrun_err,delta_ofdm->overrun_err,max_ofdm->overrun_err);
  
#line 786 
  pos = tmp_7 + pos;
  
#line 787 
  tmp_8 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"early_overrun_err:",ofdm->early_overrun_err,accum_ofdm->early_overrun_err,delta_ofdm->early_overrun_err,max_ofdm->early_overrun_err);
  
#line 792 
  pos = tmp_8 + pos;
  
#line 793 
  tmp_9 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"crc32_good:",ofdm->crc32_good,accum_ofdm->crc32_good,delta_ofdm->crc32_good,max_ofdm->crc32_good);
  
#line 797 
  pos = tmp_9 + pos;
  
#line 798 
  tmp_10 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"false_alarm_cnt:",ofdm->false_alarm_cnt,accum_ofdm->false_alarm_cnt,delta_ofdm->false_alarm_cnt,max_ofdm->false_alarm_cnt);
  
#line 803 
  pos = tmp_10 + pos;
  
#line 804 
  tmp_11 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"fina_sync_err_cnt:",ofdm->fina_sync_err_cnt,accum_ofdm->fina_sync_err_cnt,delta_ofdm->fina_sync_err_cnt,max_ofdm->fina_sync_err_cnt);
  
#line 809 
  pos = tmp_11 + pos;
  
#line 810 
  tmp_12 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"sfd_timeout:",ofdm->sfd_timeout,accum_ofdm->sfd_timeout,delta_ofdm->sfd_timeout,max_ofdm->sfd_timeout);
  
#line 814 
  pos = tmp_12 + pos;
  
#line 815 
  tmp_13 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"fina_timeout:",ofdm->fina_timeout,accum_ofdm->fina_timeout,delta_ofdm->fina_timeout,max_ofdm->fina_timeout);
  
#line 819 
  pos = tmp_13 + pos;
  
#line 820 
  tmp_14 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"unresponded_rts:",ofdm->unresponded_rts,accum_ofdm->unresponded_rts,delta_ofdm->unresponded_rts,max_ofdm->unresponded_rts);
  
#line 825 
  pos = tmp_14 + pos;
  
#line 826 
  tmp_15 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"rxe_frame_lmt_ovrun:",ofdm->rxe_frame_limit_overrun,accum_ofdm->rxe_frame_limit_overrun,delta_ofdm->rxe_frame_limit_overrun,max_ofdm->rxe_frame_limit_overrun);
  
#line 831 
  pos = tmp_15 + pos;
  
#line 832 
  tmp_16 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"sent_ack_cnt:",ofdm->sent_ack_cnt,accum_ofdm->sent_ack_cnt,delta_ofdm->sent_ack_cnt,max_ofdm->sent_ack_cnt);
  
#line 836 
  pos = tmp_16 + pos;
  
#line 837 
  tmp_17 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"sent_cts_cnt:",ofdm->sent_cts_cnt,accum_ofdm->sent_cts_cnt,delta_ofdm->sent_cts_cnt,max_ofdm->sent_cts_cnt);
  
#line 841 
  pos = tmp_17 + pos;
  
#line 842 
  tmp_18 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"sent_ba_rsp_cnt:",ofdm->sent_ba_rsp_cnt,accum_ofdm->sent_ba_rsp_cnt,delta_ofdm->sent_ba_rsp_cnt,max_ofdm->sent_ba_rsp_cnt);
  
#line 847 
  pos = tmp_18 + pos;
  
#line 848 
  tmp_19 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"dsp_self_kill:",ofdm->dsp_self_kill,accum_ofdm->dsp_self_kill,delta_ofdm->dsp_self_kill,max_ofdm->dsp_self_kill);
  
#line 853 
  pos = tmp_19 + pos;
  
#line 854 
  tmp_20 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"mh_format_err:",ofdm->mh_format_err,accum_ofdm->mh_format_err,delta_ofdm->mh_format_err,max_ofdm->mh_format_err);
  
#line 859 
  pos = tmp_20 + pos;
  
#line 860 
  tmp_21 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"re_acq_main_rssi_sum:",ofdm->re_acq_main_rssi_sum,accum_ofdm->re_acq_main_rssi_sum,delta_ofdm->re_acq_main_rssi_sum,max_ofdm->re_acq_main_rssi_sum);
  
#line 865 
  pos = tmp_21 + pos;
  
#line 867 
  tmp_22 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_header,(char *)"Statistics_Rx - CCK:");
  
#line 868 
  pos = tmp_22 + pos;
  
#line 869 
  tmp_23 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"ina_cnt:",cck->ina_cnt,accum_cck->ina_cnt,delta_cck->ina_cnt,max_cck->ina_cnt);
  
#line 872 
  pos = tmp_23 + pos;
  
#line 873 
  tmp_24 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"fina_cnt:",cck->fina_cnt,accum_cck->fina_cnt,delta_cck->fina_cnt,max_cck->fina_cnt);
  
#line 876 
  pos = tmp_24 + pos;
  
#line 877 
  tmp_25 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"plcp_err:",cck->plcp_err,accum_cck->plcp_err,delta_cck->plcp_err,max_cck->plcp_err);
  
#line 880 
  pos = tmp_25 + pos;
  
#line 881 
  tmp_26 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"crc32_err:",cck->crc32_err,accum_cck->crc32_err,delta_cck->crc32_err,max_cck->crc32_err);
  
#line 884 
  pos = tmp_26 + pos;
  
#line 885 
  tmp_27 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"overrun_err:",cck->overrun_err,accum_cck->overrun_err,delta_cck->overrun_err,max_cck->overrun_err);
  
#line 889 
  pos = tmp_27 + pos;
  
#line 890 
  tmp_28 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"early_overrun_err:",cck->early_overrun_err,accum_cck->early_overrun_err,delta_cck->early_overrun_err,max_cck->early_overrun_err);
  
#line 895 
  pos = tmp_28 + pos;
  
#line 896 
  tmp_29 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"crc32_good:",cck->crc32_good,accum_cck->crc32_good,delta_cck->crc32_good,max_cck->crc32_good);
  
#line 899 
  pos = tmp_29 + pos;
  
#line 900 
  tmp_30 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"false_alarm_cnt:",cck->false_alarm_cnt,accum_cck->false_alarm_cnt,delta_cck->false_alarm_cnt,max_cck->false_alarm_cnt);
  
#line 904 
  pos = tmp_30 + pos;
  
#line 905 
  tmp_31 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"fina_sync_err_cnt:",cck->fina_sync_err_cnt,accum_cck->fina_sync_err_cnt,delta_cck->fina_sync_err_cnt,max_cck->fina_sync_err_cnt);
  
#line 910 
  pos = tmp_31 + pos;
  
#line 911 
  tmp_32 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"sfd_timeout:",cck->sfd_timeout,accum_cck->sfd_timeout,delta_cck->sfd_timeout,max_cck->sfd_timeout);
  
#line 915 
  pos = tmp_32 + pos;
  
#line 916 
  tmp_33 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"fina_timeout:",cck->fina_timeout,accum_cck->fina_timeout,delta_cck->fina_timeout,max_cck->fina_timeout);
  
#line 920 
  pos = tmp_33 + pos;
  
#line 921 
  tmp_34 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"unresponded_rts:",cck->unresponded_rts,accum_cck->unresponded_rts,delta_cck->unresponded_rts,max_cck->unresponded_rts);
  
#line 925 
  pos = tmp_34 + pos;
  
#line 926 
  tmp_35 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"rxe_frame_lmt_ovrun:",cck->rxe_frame_limit_overrun,accum_cck->rxe_frame_limit_overrun,delta_cck->rxe_frame_limit_overrun,max_cck->rxe_frame_limit_overrun);
  
#line 931 
  pos = tmp_35 + pos;
  
#line 932 
  tmp_36 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"sent_ack_cnt:",cck->sent_ack_cnt,accum_cck->sent_ack_cnt,delta_cck->sent_ack_cnt,max_cck->sent_ack_cnt);
  
#line 936 
  pos = tmp_36 + pos;
  
#line 937 
  tmp_37 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"sent_cts_cnt:",cck->sent_cts_cnt,accum_cck->sent_cts_cnt,delta_cck->sent_cts_cnt,max_cck->sent_cts_cnt);
  
#line 941 
  pos = tmp_37 + pos;
  
#line 942 
  tmp_38 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"sent_ba_rsp_cnt:",cck->sent_ba_rsp_cnt,accum_cck->sent_ba_rsp_cnt,delta_cck->sent_ba_rsp_cnt,max_cck->sent_ba_rsp_cnt);
  
#line 947 
  pos = tmp_38 + pos;
  
#line 948 
  tmp_39 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"dsp_self_kill:",cck->dsp_self_kill,accum_cck->dsp_self_kill,delta_cck->dsp_self_kill,max_cck->dsp_self_kill);
  
#line 952 
  pos = tmp_39 + pos;
  
#line 953 
  tmp_40 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"mh_format_err:",cck->mh_format_err,accum_cck->mh_format_err,delta_cck->mh_format_err,max_cck->mh_format_err);
  
#line 957 
  pos = tmp_40 + pos;
  
#line 958 
  tmp_41 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"re_acq_main_rssi_sum:",cck->re_acq_main_rssi_sum,accum_cck->re_acq_main_rssi_sum,delta_cck->re_acq_main_rssi_sum,max_cck->re_acq_main_rssi_sum);
  
#line 963 
  pos = tmp_41 + pos;
  
#line 965 
  tmp_42 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_header,(char *)"Statistics_Rx - GENERAL:");
  
#line 966 
  pos = tmp_42 + pos;
  
#line 967 
  tmp_43 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"bogus_cts:",general->bogus_cts,accum_general->bogus_cts,delta_general->bogus_cts,max_general->bogus_cts);
  
#line 971 
  pos = tmp_43 + pos;
  
#line 972 
  tmp_44 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"bogus_ack:",general->bogus_ack,accum_general->bogus_ack,delta_general->bogus_ack,max_general->bogus_ack);
  
#line 976 
  pos = tmp_44 + pos;
  
#line 977 
  tmp_45 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"non_bssid_frames:",general->non_bssid_frames,accum_general->non_bssid_frames,delta_general->non_bssid_frames,max_general->non_bssid_frames);
  
#line 982 
  pos = tmp_45 + pos;
  
#line 983 
  tmp_46 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"filtered_frames:",general->filtered_frames,accum_general->filtered_frames,delta_general->filtered_frames,max_general->filtered_frames);
  
#line 988 
  pos = tmp_46 + pos;
  
#line 989 
  tmp_47 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"non_channel_beacons:",general->non_channel_beacons,accum_general->non_channel_beacons,delta_general->non_channel_beacons,max_general->non_channel_beacons);
  
#line 994 
  pos = tmp_47 + pos;
  
#line 995 
  tmp_48 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"channel_beacons:",general->channel_beacons,accum_general->channel_beacons,delta_general->channel_beacons,max_general->channel_beacons);
  
#line 1000 
  pos = tmp_48 + pos;
  
#line 1001 
  tmp_49 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"num_missed_bcon:",general->num_missed_bcon,accum_general->num_missed_bcon,delta_general->num_missed_bcon,max_general->num_missed_bcon);
  
#line 1006 
  pos = tmp_49 + pos;
  
#line 1007 
  tmp_50 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"adc_rx_saturation_time:",general->adc_rx_saturation_time,accum_general->adc_rx_saturation_time,delta_general->adc_rx_saturation_time,max_general->adc_rx_saturation_time);
  
#line 1012 
  pos = tmp_50 + pos;
  
#line 1013 
  tmp_51 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"ina_detect_search_tm:",general->ina_detection_search_time,accum_general->ina_detection_search_time,delta_general->ina_detection_search_time,max_general->ina_detection_search_time);
  
#line 1018 
  pos = tmp_51 + pos;
  
#line 1019 
  tmp_52 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"beacon_silence_rssi_a:",general->beacon_silence_rssi_a,accum_general->beacon_silence_rssi_a,delta_general->beacon_silence_rssi_a,max_general->beacon_silence_rssi_a);
  
#line 1024 
  pos = tmp_52 + pos;
  
#line 1025 
  tmp_53 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"beacon_silence_rssi_b:",general->beacon_silence_rssi_b,accum_general->beacon_silence_rssi_b,delta_general->beacon_silence_rssi_b,max_general->beacon_silence_rssi_b);
  
#line 1030 
  pos = tmp_53 + pos;
  
#line 1031 
  tmp_54 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"beacon_silence_rssi_c:",general->beacon_silence_rssi_c,accum_general->beacon_silence_rssi_c,delta_general->beacon_silence_rssi_c,max_general->beacon_silence_rssi_c);
  
#line 1036 
  pos = tmp_54 + pos;
  
#line 1037 
  tmp_55 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"interference_data_flag:",general->interference_data_flag,accum_general->interference_data_flag,delta_general->interference_data_flag,max_general->interference_data_flag);
  
#line 1042 
  pos = tmp_55 + pos;
  
#line 1043 
  tmp_56 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"channel_load:",general->channel_load,accum_general->channel_load,delta_general->channel_load,max_general->channel_load);
  
#line 1048 
  pos = tmp_56 + pos;
  
#line 1049 
  tmp_57 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"dsp_false_alarms:",general->dsp_false_alarms,accum_general->dsp_false_alarms,delta_general->dsp_false_alarms,max_general->dsp_false_alarms);
  
#line 1054 
  pos = tmp_57 + pos;
  
#line 1055 
  tmp_58 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"beacon_rssi_a:",general->beacon_rssi_a,accum_general->beacon_rssi_a,delta_general->beacon_rssi_a,max_general->beacon_rssi_a);
  
#line 1060 
  pos = tmp_58 + pos;
  
#line 1061 
  tmp_59 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"beacon_rssi_b:",general->beacon_rssi_b,accum_general->beacon_rssi_b,delta_general->beacon_rssi_b,max_general->beacon_rssi_b);
  
#line 1066 
  pos = tmp_59 + pos;
  
#line 1067 
  tmp_60 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"beacon_rssi_c:",general->beacon_rssi_c,accum_general->beacon_rssi_c,delta_general->beacon_rssi_c,max_general->beacon_rssi_c);
  
#line 1072 
  pos = tmp_60 + pos;
  
#line 1073 
  tmp_61 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"beacon_energy_a:",general->beacon_energy_a,accum_general->beacon_energy_a,delta_general->beacon_energy_a,max_general->beacon_energy_a);
  
#line 1078 
  pos = tmp_61 + pos;
  
#line 1079 
  tmp_62 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"beacon_energy_b:",general->beacon_energy_b,accum_general->beacon_energy_b,delta_general->beacon_energy_b,max_general->beacon_energy_b);
  
#line 1084 
  pos = tmp_62 + pos;
  
#line 1085 
  tmp_63 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"beacon_energy_c:",general->beacon_energy_c,accum_general->beacon_energy_c,delta_general->beacon_energy_c,max_general->beacon_energy_c);
  
#line 1090 
  pos = tmp_63 + pos;
  
#line 1092 
  tmp_64 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_header,(char *)"Statistics_Rx - OFDM_HT:");
  
#line 1093 
  pos = tmp_64 + pos;
  
#line 1094 
  tmp_65 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"plcp_err:",ht->plcp_err,accum_ht->plcp_err,delta_ht->plcp_err,max_ht->plcp_err);
  
#line 1097 
  pos = tmp_65 + pos;
  
#line 1098 
  tmp_66 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"overrun_err:",ht->overrun_err,accum_ht->overrun_err,delta_ht->overrun_err,max_ht->overrun_err);
  
#line 1101 
  pos = tmp_66 + pos;
  
#line 1102 
  tmp_67 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"early_overrun_err:",ht->early_overrun_err,accum_ht->early_overrun_err,delta_ht->early_overrun_err,max_ht->early_overrun_err);
  
#line 1107 
  pos = tmp_67 + pos;
  
#line 1108 
  tmp_68 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"crc32_good:",ht->crc32_good,accum_ht->crc32_good,delta_ht->crc32_good,max_ht->crc32_good);
  
#line 1111 
  pos = tmp_68 + pos;
  
#line 1112 
  tmp_69 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"crc32_err:",ht->crc32_err,accum_ht->crc32_err,delta_ht->crc32_err,max_ht->crc32_err);
  
#line 1115 
  pos = tmp_69 + pos;
  
#line 1116 
  tmp_70 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"mh_format_err:",ht->mh_format_err,accum_ht->mh_format_err,delta_ht->mh_format_err,max_ht->mh_format_err);
  
#line 1120 
  pos = tmp_70 + pos;
  
#line 1121 
  tmp_71 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg_crc32_good:",ht->agg_crc32_good,accum_ht->agg_crc32_good,delta_ht->agg_crc32_good,max_ht->agg_crc32_good);
  
#line 1125 
  pos = tmp_71 + pos;
  
#line 1126 
  tmp_72 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg_mpdu_cnt:",ht->agg_mpdu_cnt,accum_ht->agg_mpdu_cnt,delta_ht->agg_mpdu_cnt,max_ht->agg_mpdu_cnt);
  
#line 1130 
  pos = tmp_72 + pos;
  
#line 1131 
  tmp_73 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg_cnt:",ht->agg_cnt,accum_ht->agg_cnt,delta_ht->agg_cnt,max_ht->agg_cnt);
  
#line 1134 
  pos = tmp_73 + pos;
  
#line 1135 
  tmp_74 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"unsupport_mcs:",ht->unsupport_mcs,accum_ht->unsupport_mcs,delta_ht->unsupport_mcs,max_ht->unsupport_mcs);
  
#line 1139 
  pos = tmp_74 + pos;
  
#line 1141 
  ldv_spin_unlock_bh_77(& priv->statistics.lock);
  
#line 1143 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 1144 
  kfree((void const *)buf);
  
#line 1145 
  __retres = ret;
  return_label: 
#line 1145 
                return __retres;
}


#line 1148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_ucode_tx_stats_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buf;
  ssize_t ret;
  struct statistics_tx *tx;
  struct statistics_tx *accum_tx;
  struct statistics_tx *delta_tx;
  struct statistics_tx *max_tx;
  int tmp;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  int tmp_15;
  int tmp_16;
  int tmp_17;
  int tmp_18;
  int tmp_19;
  int tmp_20;
  int tmp_21;
  int tmp_22;
  int tmp_23;
  int tmp_24;
  int tmp_25;
  int tmp_26;
  
#line 1152 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1153 
  int pos = 0;
  
#line 1155 
  int bufsz = 5242;
  
#line 1159 
  tmp = iwl_is_alive(priv);
  
#line 1159 
  if (tmp == 0) {
    
#line 1160 
    __retres = -11L;
    
#line 1160 
    goto return_label;
  }
  else ;
  
#line 1162 
  buf = (char *)kzalloc_3((unsigned long)bufsz,208U);
  
#line 1163 
  if (buf == (char *)0) {
    
#line 1164 
    __retres = -12L;
    
#line 1164 
    goto return_label;
  }
  else ;
  
#line 1170 
  ldv_spin_lock_bh_78(& priv->statistics.lock);
  
#line 1172 
  tx = & priv->statistics.tx;
  
#line 1173 
  accum_tx = & priv->accum_stats.tx;
  
#line 1174 
  delta_tx = & priv->delta_stats.tx;
  
#line 1175 
  max_tx = & priv->max_delta_stats.tx;
  
#line 1177 
  tmp_1 = iwl_statistics_flag(priv,buf,bufsz);
  
#line 1177 
  pos = tmp_1 + pos;
  
#line 1178 
  tmp_2 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_header,(char *)"Statistics_Tx:");
  
#line 1179 
  pos = tmp_2 + pos;
  
#line 1180 
  tmp_3 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"preamble:",tx->preamble_cnt,accum_tx->preamble_cnt,delta_tx->preamble_cnt,max_tx->preamble_cnt);
  
#line 1184 
  pos = tmp_3 + pos;
  
#line 1185 
  tmp_4 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"rx_detected_cnt:",tx->rx_detected_cnt,accum_tx->rx_detected_cnt,delta_tx->rx_detected_cnt,max_tx->rx_detected_cnt);
  
#line 1189 
  pos = tmp_4 + pos;
  
#line 1190 
  tmp_5 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"bt_prio_defer_cnt:",tx->bt_prio_defer_cnt,accum_tx->bt_prio_defer_cnt,delta_tx->bt_prio_defer_cnt,max_tx->bt_prio_defer_cnt);
  
#line 1195 
  pos = tmp_5 + pos;
  
#line 1196 
  tmp_6 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"bt_prio_kill_cnt:",tx->bt_prio_kill_cnt,accum_tx->bt_prio_kill_cnt,delta_tx->bt_prio_kill_cnt,max_tx->bt_prio_kill_cnt);
  
#line 1201 
  pos = tmp_6 + pos;
  
#line 1202 
  tmp_7 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"few_bytes_cnt:",tx->few_bytes_cnt,accum_tx->few_bytes_cnt,delta_tx->few_bytes_cnt,max_tx->few_bytes_cnt);
  
#line 1206 
  pos = tmp_7 + pos;
  
#line 1207 
  tmp_8 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"cts_timeout:",tx->cts_timeout,accum_tx->cts_timeout,delta_tx->cts_timeout,max_tx->cts_timeout);
  
#line 1210 
  pos = tmp_8 + pos;
  
#line 1211 
  tmp_9 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"ack_timeout:",tx->ack_timeout,accum_tx->ack_timeout,delta_tx->ack_timeout,max_tx->ack_timeout);
  
#line 1215 
  pos = tmp_9 + pos;
  
#line 1216 
  tmp_10 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"expected_ack_cnt:",tx->expected_ack_cnt,accum_tx->expected_ack_cnt,delta_tx->expected_ack_cnt,max_tx->expected_ack_cnt);
  
#line 1221 
  pos = tmp_10 + pos;
  
#line 1222 
  tmp_11 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"actual_ack_cnt:",tx->actual_ack_cnt,accum_tx->actual_ack_cnt,delta_tx->actual_ack_cnt,max_tx->actual_ack_cnt);
  
#line 1227 
  pos = tmp_11 + pos;
  
#line 1228 
  tmp_12 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"dump_msdu_cnt:",tx->dump_msdu_cnt,accum_tx->dump_msdu_cnt,delta_tx->dump_msdu_cnt,max_tx->dump_msdu_cnt);
  
#line 1233 
  pos = tmp_12 + pos;
  
#line 1234 
  tmp_13 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"abort_nxt_frame_mismatch:",tx->burst_abort_next_frame_mismatch_cnt,accum_tx->burst_abort_next_frame_mismatch_cnt,delta_tx->burst_abort_next_frame_mismatch_cnt,max_tx->burst_abort_next_frame_mismatch_cnt);
  
#line 1239 
  pos = tmp_13 + pos;
  
#line 1240 
  tmp_14 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"abort_missing_nxt_frame:",tx->burst_abort_missing_next_frame_cnt,accum_tx->burst_abort_missing_next_frame_cnt,delta_tx->burst_abort_missing_next_frame_cnt,max_tx->burst_abort_missing_next_frame_cnt);
  
#line 1245 
  pos = tmp_14 + pos;
  
#line 1246 
  tmp_15 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"cts_timeout_collision:",tx->cts_timeout_collision,accum_tx->cts_timeout_collision,delta_tx->cts_timeout_collision,max_tx->cts_timeout_collision);
  
#line 1251 
  pos = tmp_15 + pos;
  
#line 1252 
  tmp_16 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"ack_ba_timeout_collision:",tx->ack_or_ba_timeout_collision,accum_tx->ack_or_ba_timeout_collision,delta_tx->ack_or_ba_timeout_collision,max_tx->ack_or_ba_timeout_collision);
  
#line 1257 
  pos = tmp_16 + pos;
  
#line 1258 
  tmp_17 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg ba_timeout:",tx->agg.ba_timeout,accum_tx->agg.ba_timeout,delta_tx->agg.ba_timeout,max_tx->agg.ba_timeout);
  
#line 1263 
  pos = tmp_17 + pos;
  
#line 1264 
  tmp_18 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg ba_resched_frames:",tx->agg.ba_reschedule_frames,accum_tx->agg.ba_reschedule_frames,delta_tx->agg.ba_reschedule_frames,max_tx->agg.ba_reschedule_frames);
  
#line 1269 
  pos = tmp_18 + pos;
  
#line 1270 
  tmp_19 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg scd_query_agg_frame:",tx->agg.scd_query_agg_frame_cnt,accum_tx->agg.scd_query_agg_frame_cnt,delta_tx->agg.scd_query_agg_frame_cnt,max_tx->agg.scd_query_agg_frame_cnt);
  
#line 1275 
  pos = tmp_19 + pos;
  
#line 1276 
  tmp_20 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg scd_query_no_agg:",tx->agg.scd_query_no_agg,accum_tx->agg.scd_query_no_agg,delta_tx->agg.scd_query_no_agg,max_tx->agg.scd_query_no_agg);
  
#line 1281 
  pos = tmp_20 + pos;
  
#line 1282 
  tmp_21 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg scd_query_agg:",tx->agg.scd_query_agg,accum_tx->agg.scd_query_agg,delta_tx->agg.scd_query_agg,max_tx->agg.scd_query_agg);
  
#line 1287 
  pos = tmp_21 + pos;
  
#line 1288 
  tmp_22 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg scd_query_mismatch:",tx->agg.scd_query_mismatch,accum_tx->agg.scd_query_mismatch,delta_tx->agg.scd_query_mismatch,max_tx->agg.scd_query_mismatch);
  
#line 1293 
  pos = tmp_22 + pos;
  
#line 1294 
  tmp_23 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg frame_not_ready:",tx->agg.frame_not_ready,accum_tx->agg.frame_not_ready,delta_tx->agg.frame_not_ready,max_tx->agg.frame_not_ready);
  
#line 1299 
  pos = tmp_23 + pos;
  
#line 1300 
  tmp_24 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg underrun:",tx->agg.underrun,accum_tx->agg.underrun,delta_tx->agg.underrun,max_tx->agg.underrun);
  
#line 1304 
  pos = tmp_24 + pos;
  
#line 1305 
  tmp_25 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg bt_prio_kill:",tx->agg.bt_prio_kill,accum_tx->agg.bt_prio_kill,delta_tx->agg.bt_prio_kill,max_tx->agg.bt_prio_kill);
  
#line 1310 
  pos = tmp_25 + pos;
  
#line 1311 
  tmp_26 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"agg rx_ba_rsp_cnt:",tx->agg.rx_ba_rsp_cnt,accum_tx->agg.rx_ba_rsp_cnt,delta_tx->agg.rx_ba_rsp_cnt,max_tx->agg.rx_ba_rsp_cnt);
  
#line 1316 
  pos = tmp_26 + pos;
  
#line 1318 
  if (((unsigned int)tx->tx_power.ant_a != 0U || (unsigned int)tx->tx_power.ant_b != 0U) || (unsigned int)tx->tx_power.ant_c != 0U) {
    int tmp_27;
    
#line 1319 
    tmp_27 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"tx power: (1/2 dB step)\n");
    
#line 1320 
    pos = tmp_27 + pos;
    
#line 1321 
    if (((unsigned long)(priv->nvm_data)->valid_tx_ant & 1UL) != 0UL && (unsigned int)tx->tx_power.ant_a != 0U) {
      int tmp_28;
      
#line 1323 
      tmp_28 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_hex,(char *)"antenna A:",(int)tx->tx_power.ant_a);
      
#line 1325 
      pos = tmp_28 + pos;
    }
    else ;
    
#line 1326 
    if (((unsigned long)(priv->nvm_data)->valid_tx_ant & 2UL) != 0UL && (unsigned int)tx->tx_power.ant_b != 0U) {
      int tmp_29;
      
#line 1328 
      tmp_29 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_hex,(char *)"antenna B:",(int)tx->tx_power.ant_b);
      
#line 1330 
      pos = tmp_29 + pos;
    }
    else ;
    
#line 1331 
    if (((unsigned long)(priv->nvm_data)->valid_tx_ant & 4UL) != 0UL && (unsigned int)tx->tx_power.ant_c != 0U) {
      int tmp_30;
      
#line 1333 
      tmp_30 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_hex,(char *)"antenna C:",(int)tx->tx_power.ant_c);
      
#line 1335 
      pos = tmp_30 + pos;
    }
    else ;
  }
  else ;
  
#line 1338 
  ldv_spin_unlock_bh_79(& priv->statistics.lock);
  
#line 1340 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 1341 
  kfree((void const *)buf);
  
#line 1342 
  __retres = ret;
  return_label: 
#line 1342 
                return __retres;
}


#line 1345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_ucode_general_stats_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buf;
  ssize_t ret;
  struct statistics_general_common *general;
  struct statistics_general_common *accum_general;
  struct statistics_general_common *delta_general;
  struct statistics_general_common *max_general;
  struct statistics_dbg *dbg;
  struct statistics_dbg *accum_dbg;
  struct statistics_dbg *delta_dbg;
  struct statistics_dbg *max_dbg;
  struct statistics_div *div;
  struct statistics_div *accum_div;
  struct statistics_div *delta_div;
  struct statistics_div *max_div;
  int tmp;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  int tmp_15;
  int tmp_16;
  int tmp_17;
  
#line 1349 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1350 
  int pos = 0;
  
#line 1352 
  int bufsz = 1180;
  
#line 1359 
  tmp = iwl_is_alive(priv);
  
#line 1359 
  if (tmp == 0) {
    
#line 1360 
    __retres = -11L;
    
#line 1360 
    goto return_label;
  }
  else ;
  
#line 1362 
  buf = (char *)kzalloc_3((unsigned long)bufsz,208U);
  
#line 1363 
  if (buf == (char *)0) {
    
#line 1364 
    __retres = -12L;
    
#line 1364 
    goto return_label;
  }
  else ;
  
#line 1371 
  ldv_spin_lock_bh_80(& priv->statistics.lock);
  
#line 1373 
  general = & priv->statistics.common;
  
#line 1374 
  dbg = & priv->statistics.common.dbg;
  
#line 1375 
  div = & priv->statistics.common.div;
  
#line 1376 
  accum_general = & priv->accum_stats.common;
  
#line 1377 
  accum_dbg = & priv->accum_stats.common.dbg;
  
#line 1378 
  accum_div = & priv->accum_stats.common.div;
  
#line 1379 
  delta_general = & priv->delta_stats.common;
  
#line 1380 
  max_general = & priv->max_delta_stats.common;
  
#line 1381 
  delta_dbg = & priv->delta_stats.common.dbg;
  
#line 1382 
  max_dbg = & priv->max_delta_stats.common.dbg;
  
#line 1383 
  delta_div = & priv->delta_stats.common.div;
  
#line 1384 
  max_div = & priv->max_delta_stats.common.div;
  
#line 1386 
  tmp_1 = iwl_statistics_flag(priv,buf,bufsz);
  
#line 1386 
  pos = tmp_1 + pos;
  
#line 1387 
  tmp_2 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_header,(char *)"Statistics_General:");
  
#line 1388 
  pos = tmp_2 + pos;
  
#line 1389 
  tmp_3 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_value,(char *)"temperature:",general->temperature);
  
#line 1391 
  pos = tmp_3 + pos;
  
#line 1392 
  tmp_4 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_value,(char *)"temperature_m:",general->temperature_m);
  
#line 1394 
  pos = tmp_4 + pos;
  
#line 1395 
  tmp_5 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_value,(char *)"ttl_timestamp:",general->ttl_timestamp);
  
#line 1397 
  pos = tmp_5 + pos;
  
#line 1398 
  tmp_6 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"burst_check:",dbg->burst_check,accum_dbg->burst_check,delta_dbg->burst_check,max_dbg->burst_check);
  
#line 1402 
  pos = tmp_6 + pos;
  
#line 1403 
  tmp_7 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"burst_count:",dbg->burst_count,accum_dbg->burst_count,delta_dbg->burst_count,max_dbg->burst_count);
  
#line 1407 
  pos = tmp_7 + pos;
  
#line 1408 
  tmp_8 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"wait_for_silence_timeout_count:",dbg->wait_for_silence_timeout_cnt,accum_dbg->wait_for_silence_timeout_cnt,delta_dbg->wait_for_silence_timeout_cnt,max_dbg->wait_for_silence_timeout_cnt);
  
#line 1413 
  pos = tmp_8 + pos;
  
#line 1414 
  tmp_9 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"sleep_time:",general->sleep_time,accum_general->sleep_time,delta_general->sleep_time,max_general->sleep_time);
  
#line 1418 
  pos = tmp_9 + pos;
  
#line 1419 
  tmp_10 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"slots_out:",general->slots_out,accum_general->slots_out,delta_general->slots_out,max_general->slots_out);
  
#line 1423 
  pos = tmp_10 + pos;
  
#line 1424 
  tmp_11 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"slots_idle:",general->slots_idle,accum_general->slots_idle,delta_general->slots_idle,max_general->slots_idle);
  
#line 1428 
  pos = tmp_11 + pos;
  
#line 1429 
  tmp_12 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"tx_on_a:",div->tx_on_a,accum_div->tx_on_a,delta_div->tx_on_a,max_div->tx_on_a);
  
#line 1432 
  pos = tmp_12 + pos;
  
#line 1433 
  tmp_13 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"tx_on_b:",div->tx_on_b,accum_div->tx_on_b,delta_div->tx_on_b,max_div->tx_on_b);
  
#line 1436 
  pos = tmp_13 + pos;
  
#line 1437 
  tmp_14 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"exec_time:",div->exec_time,accum_div->exec_time,delta_div->exec_time,max_div->exec_time);
  
#line 1440 
  pos = tmp_14 + pos;
  
#line 1441 
  tmp_15 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"probe_time:",div->probe_time,accum_div->probe_time,delta_div->probe_time,max_div->probe_time);
  
#line 1444 
  pos = tmp_15 + pos;
  
#line 1445 
  tmp_16 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"rx_enable_counter:",general->rx_enable_counter,accum_general->rx_enable_counter,delta_general->rx_enable_counter,max_general->rx_enable_counter);
  
#line 1450 
  pos = tmp_16 + pos;
  
#line 1451 
  tmp_17 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),fmt_table,(char *)"num_of_sos_states:",general->num_of_sos_states,accum_general->num_of_sos_states,delta_general->num_of_sos_states,max_general->num_of_sos_states);
  
#line 1456 
  pos = tmp_17 + pos;
  
#line 1458 
  ldv_spin_unlock_bh_81(& priv->statistics.lock);
  
#line 1460 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 1461 
  kfree((void const *)buf);
  
#line 1462 
  __retres = ret;
  return_label: 
#line 1462 
                return __retres;
}


#line 1465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_ucode_bt_stats_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buf;
  ssize_t ret;
  struct statistics_bt_activity *bt;
  struct statistics_bt_activity *accum_bt;
  int tmp;
  int tmp_0;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  
#line 1469 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1470 
  int pos = 0;
  
#line 1472 
  int bufsz = 968;
  
#line 1476 
  tmp = iwl_is_alive(priv);
  
#line 1476 
  if (tmp == 0) {
    
#line 1477 
    __retres = -11L;
    
#line 1477 
    goto return_label;
  }
  else ;
  
#line 1479 
  if ((unsigned int)priv->bt_enable_flag == 0U) {
    
#line 1480 
    __retres = -22L;
    
#line 1480 
    goto return_label;
  }
  else ;
  
#line 1483 
  ldv_mutex_lock_82_0(& priv->mutex);
  
#line 1484 
  tmp_0 = iwl_send_statistics_request(priv,(unsigned char)0,(_Bool)0);
  
#line 1484 
  ret = (long)tmp_0;
  
#line 1485 
  ldv_mutex_unlock_83_0(& priv->mutex);
  
#line 1487 
  if (ret != 0L) {
    
#line 1488 
    __retres = -11L;
    
#line 1488 
    goto return_label;
  }
  else ;
  
#line 1489 
  buf = (char *)kzalloc_3((unsigned long)bufsz,208U);
  
#line 1490 
  if (buf == (char *)0) {
    
#line 1491 
    __retres = -12L;
    
#line 1491 
    goto return_label;
  }
  else ;
  
#line 1499 
  ldv_spin_lock_bh_84(& priv->statistics.lock);
  
#line 1501 
  bt = & priv->statistics.bt_activity;
  
#line 1502 
  accum_bt = & priv->accum_stats.bt_activity;
  
#line 1504 
  tmp_2 = iwl_statistics_flag(priv,buf,bufsz);
  
#line 1504 
  pos = tmp_2 + pos;
  
#line 1505 
  tmp_3 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"Statistics_BT:\n");
  
#line 1505 
  pos = tmp_3 + pos;
  
#line 1506 
  tmp_4 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"\t\t\tcurrent\t\t\taccumulative\n");
  
#line 1507 
  pos = tmp_4 + pos;
  
#line 1508 
  tmp_5 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"hi_priority_tx_req_cnt:\t\t%u\t\t\t%u\n",bt->hi_priority_tx_req_cnt,accum_bt->hi_priority_tx_req_cnt);
  
#line 1511 
  pos = tmp_5 + pos;
  
#line 1512 
  tmp_6 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"hi_priority_tx_denied_cnt:\t%u\t\t\t%u\n",bt->hi_priority_tx_denied_cnt,accum_bt->hi_priority_tx_denied_cnt);
  
#line 1515 
  pos = tmp_6 + pos;
  
#line 1516 
  tmp_7 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"lo_priority_tx_req_cnt:\t\t%u\t\t\t%u\n",bt->lo_priority_tx_req_cnt,accum_bt->lo_priority_tx_req_cnt);
  
#line 1519 
  pos = tmp_7 + pos;
  
#line 1520 
  tmp_8 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"lo_priority_tx_denied_cnt:\t%u\t\t\t%u\n",bt->lo_priority_tx_denied_cnt,accum_bt->lo_priority_tx_denied_cnt);
  
#line 1523 
  pos = tmp_8 + pos;
  
#line 1524 
  tmp_9 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"hi_priority_rx_req_cnt:\t\t%u\t\t\t%u\n",bt->hi_priority_rx_req_cnt,accum_bt->hi_priority_rx_req_cnt);
  
#line 1527 
  pos = tmp_9 + pos;
  
#line 1528 
  tmp_10 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"hi_priority_rx_denied_cnt:\t%u\t\t\t%u\n",bt->hi_priority_rx_denied_cnt,accum_bt->hi_priority_rx_denied_cnt);
  
#line 1531 
  pos = tmp_10 + pos;
  
#line 1532 
  tmp_11 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"lo_priority_rx_req_cnt:\t\t%u\t\t\t%u\n",bt->lo_priority_rx_req_cnt,accum_bt->lo_priority_rx_req_cnt);
  
#line 1535 
  pos = tmp_11 + pos;
  
#line 1536 
  tmp_12 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"lo_priority_rx_denied_cnt:\t%u\t\t\t%u\n",bt->lo_priority_rx_denied_cnt,accum_bt->lo_priority_rx_denied_cnt);
  
#line 1539 
  pos = tmp_12 + pos;
  
#line 1541 
  tmp_13 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"(rx)num_bt_kills:\t\t%u\t\t\t%u\n",priv->statistics.num_bt_kills,priv->statistics.accum_num_bt_kills);
  
#line 1544 
  pos = tmp_13 + pos;
  
#line 1546 
  ldv_spin_unlock_bh_85(& priv->statistics.lock);
  
#line 1548 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 1549 
  kfree((void const *)buf);
  
#line 1550 
  __retres = ret;
  return_label: 
#line 1550 
                return __retres;
}


#line 1553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_reply_tx_error_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buf;
  ssize_t ret;
  int tmp;
  int tmp_1;
  int tmp_3;
  char const *tmp_2;
  int tmp_5;
  char const *tmp_4;
  int tmp_7;
  char const *tmp_6;
  int tmp_9;
  char const *tmp_8;
  int tmp_11;
  char const *tmp_10;
  int tmp_13;
  char const *tmp_12;
  int tmp_15;
  char const *tmp_14;
  int tmp_17;
  char const *tmp_16;
  int tmp_19;
  char const *tmp_18;
  int tmp_21;
  char const *tmp_20;
  int tmp_23;
  char const *tmp_22;
  int tmp_25;
  char const *tmp_24;
  int tmp_27;
  char const *tmp_26;
  int tmp_29;
  char const *tmp_28;
  int tmp_31;
  char const *tmp_30;
  int tmp_33;
  char const *tmp_32;
  int tmp_35;
  char const *tmp_34;
  int tmp_37;
  char const *tmp_36;
  int tmp_39;
  char const *tmp_38;
  int tmp_41;
  char const *tmp_40;
  int tmp_43;
  char const *tmp_42;
  int tmp_45;
  char const *tmp_44;
  int tmp_46;
  int tmp_47;
  int tmp_49;
  char const *tmp_48;
  int tmp_51;
  char const *tmp_50;
  int tmp_53;
  char const *tmp_52;
  int tmp_55;
  char const *tmp_54;
  int tmp_57;
  char const *tmp_56;
  int tmp_59;
  char const *tmp_58;
  int tmp_61;
  char const *tmp_60;
  int tmp_63;
  char const *tmp_62;
  int tmp_65;
  char const *tmp_64;
  int tmp_67;
  char const *tmp_66;
  int tmp_69;
  char const *tmp_68;
  int tmp_71;
  char const *tmp_70;
  int tmp_72;
  
#line 1557 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1558 
  int pos = 0;
  
#line 1560 
  int bufsz = 3656;
  
#line 1564 
  tmp = iwl_is_alive(priv);
  
#line 1564 
  if (tmp == 0) {
    
#line 1565 
    __retres = -11L;
    
#line 1565 
    goto return_label;
  }
  else ;
  
#line 1567 
  buf = (char *)kzalloc_3((unsigned long)bufsz,208U);
  
#line 1568 
  if (buf == (char *)0) {
    
#line 1569 
    __retres = -12L;
    
#line 1569 
    goto return_label;
  }
  else ;
  
#line 1571 
  tmp_1 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"Statistics_TX_Error:\n");
  
#line 1571 
  pos = tmp_1 + pos;
  
#line 1572 
  ;
  
#line 1572 
  tmp_2 = iwl_get_tx_fail_reason(64U);
  
#line 1572 
  ;
  
#line 1572 
  ;
  
#line 1572 
  tmp_3 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t\t%u\n",tmp_2,priv->reply_tx_stats.pp_delay);
  
#line 1574 
  pos = tmp_3 + pos;
  
#line 1575 
  ;
  
#line 1575 
  tmp_4 = iwl_get_tx_fail_reason(65U);
  
#line 1575 
  ;
  
#line 1575 
  ;
  
#line 1575 
  tmp_5 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_4,priv->reply_tx_stats.pp_few_bytes);
  
#line 1577 
  pos = tmp_5 + pos;
  
#line 1578 
  ;
  
#line 1578 
  tmp_6 = iwl_get_tx_fail_reason(66U);
  
#line 1578 
  ;
  
#line 1578 
  ;
  
#line 1578 
  tmp_7 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_6,priv->reply_tx_stats.pp_bt_prio);
  
#line 1580 
  pos = tmp_7 + pos;
  
#line 1581 
  ;
  
#line 1581 
  tmp_8 = iwl_get_tx_fail_reason(67U);
  
#line 1581 
  ;
  
#line 1581 
  ;
  
#line 1581 
  tmp_9 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_8,priv->reply_tx_stats.pp_quiet_period);
  
#line 1583 
  pos = tmp_9 + pos;
  
#line 1584 
  ;
  
#line 1584 
  tmp_10 = iwl_get_tx_fail_reason(68U);
  
#line 1584 
  ;
  
#line 1584 
  ;
  
#line 1584 
  tmp_11 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_10,priv->reply_tx_stats.pp_calc_ttak);
  
#line 1586 
  pos = tmp_11 + pos;
  
#line 1587 
  ;
  
#line 1587 
  tmp_12 = iwl_get_tx_fail_reason(129U);
  
#line 1587 
  ;
  
#line 1587 
  ;
  
#line 1587 
  tmp_13 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t%u\n",tmp_12,priv->reply_tx_stats.int_crossed_retry);
  
#line 1590 
  pos = tmp_13 + pos;
  
#line 1591 
  ;
  
#line 1591 
  tmp_14 = iwl_get_tx_fail_reason(130U);
  
#line 1591 
  ;
  
#line 1591 
  ;
  
#line 1591 
  tmp_15 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_14,priv->reply_tx_stats.short_limit);
  
#line 1593 
  pos = tmp_15 + pos;
  
#line 1594 
  ;
  
#line 1594 
  tmp_16 = iwl_get_tx_fail_reason(131U);
  
#line 1594 
  ;
  
#line 1594 
  ;
  
#line 1594 
  tmp_17 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_16,priv->reply_tx_stats.long_limit);
  
#line 1596 
  pos = tmp_17 + pos;
  
#line 1597 
  ;
  
#line 1597 
  tmp_18 = iwl_get_tx_fail_reason(132U);
  
#line 1597 
  ;
  
#line 1597 
  ;
  
#line 1597 
  tmp_19 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_18,priv->reply_tx_stats.fifo_underrun);
  
#line 1599 
  pos = tmp_19 + pos;
  
#line 1600 
  ;
  
#line 1600 
  tmp_20 = iwl_get_tx_fail_reason(133U);
  
#line 1600 
  ;
  
#line 1600 
  ;
  
#line 1600 
  tmp_21 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_20,priv->reply_tx_stats.drain_flow);
  
#line 1602 
  pos = tmp_21 + pos;
  
#line 1603 
  ;
  
#line 1603 
  tmp_22 = iwl_get_tx_fail_reason(134U);
  
#line 1603 
  ;
  
#line 1603 
  ;
  
#line 1603 
  tmp_23 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_22,priv->reply_tx_stats.rfkill_flush);
  
#line 1605 
  pos = tmp_23 + pos;
  
#line 1606 
  ;
  
#line 1606 
  tmp_24 = iwl_get_tx_fail_reason(135U);
  
#line 1606 
  ;
  
#line 1606 
  ;
  
#line 1606 
  tmp_25 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_24,priv->reply_tx_stats.life_expire);
  
#line 1608 
  pos = tmp_25 + pos;
  
#line 1609 
  ;
  
#line 1609 
  tmp_26 = iwl_get_tx_fail_reason(136U);
  
#line 1609 
  ;
  
#line 1609 
  ;
  
#line 1609 
  tmp_27 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_26,priv->reply_tx_stats.dest_ps);
  
#line 1611 
  pos = tmp_27 + pos;
  
#line 1612 
  ;
  
#line 1612 
  tmp_28 = iwl_get_tx_fail_reason(137U);
  
#line 1612 
  ;
  
#line 1612 
  ;
  
#line 1612 
  tmp_29 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_28,priv->reply_tx_stats.host_abort);
  
#line 1614 
  pos = tmp_29 + pos;
  
#line 1615 
  ;
  
#line 1615 
  tmp_30 = iwl_get_tx_fail_reason(138U);
  
#line 1615 
  ;
  
#line 1615 
  ;
  
#line 1615 
  tmp_31 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_30,priv->reply_tx_stats.pp_delay);
  
#line 1617 
  pos = tmp_31 + pos;
  
#line 1618 
  ;
  
#line 1618 
  tmp_32 = iwl_get_tx_fail_reason(139U);
  
#line 1618 
  ;
  
#line 1618 
  ;
  
#line 1618 
  tmp_33 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_32,priv->reply_tx_stats.sta_invalid);
  
#line 1620 
  pos = tmp_33 + pos;
  
#line 1621 
  ;
  
#line 1621 
  tmp_34 = iwl_get_tx_fail_reason(140U);
  
#line 1621 
  ;
  
#line 1621 
  ;
  
#line 1621 
  tmp_35 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_34,priv->reply_tx_stats.frag_drop);
  
#line 1623 
  pos = tmp_35 + pos;
  
#line 1624 
  ;
  
#line 1624 
  tmp_36 = iwl_get_tx_fail_reason(141U);
  
#line 1624 
  ;
  
#line 1624 
  ;
  
#line 1624 
  tmp_37 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_36,priv->reply_tx_stats.tid_disable);
  
#line 1626 
  pos = tmp_37 + pos;
  
#line 1627 
  ;
  
#line 1627 
  tmp_38 = iwl_get_tx_fail_reason(142U);
  
#line 1627 
  ;
  
#line 1627 
  ;
  
#line 1627 
  tmp_39 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_38,priv->reply_tx_stats.fifo_flush);
  
#line 1629 
  pos = tmp_39 + pos;
  
#line 1630 
  ;
  
#line 1630 
  tmp_40 = iwl_get_tx_fail_reason(143U);
  
#line 1630 
  ;
  
#line 1630 
  ;
  
#line 1630 
  tmp_41 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t%u\n",tmp_40,priv->reply_tx_stats.insuff_cf_poll);
  
#line 1633 
  pos = tmp_41 + pos;
  
#line 1634 
  ;
  
#line 1634 
  tmp_42 = iwl_get_tx_fail_reason(144U);
  
#line 1634 
  ;
  
#line 1634 
  ;
  
#line 1634 
  tmp_43 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_42,priv->reply_tx_stats.fail_hw_drop);
  
#line 1636 
  pos = tmp_43 + pos;
  
#line 1637 
  ;
  
#line 1637 
  tmp_44 = iwl_get_tx_fail_reason(145U);
  
#line 1637 
  ;
  
#line 1637 
  ;
  
#line 1637 
  tmp_45 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t%u\n",tmp_44,priv->reply_tx_stats.sta_color_mismatch);
  
#line 1640 
  pos = tmp_45 + pos;
  
#line 1641 
  tmp_46 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"UNKNOWN:\t\t\t%u\n",priv->reply_tx_stats.unknown);
  
#line 1642 
  pos = tmp_46 + pos;
  
#line 1644 
  tmp_47 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"\nStatistics_Agg_TX_Error:\n");
  
#line 1645 
  pos = tmp_47 + pos;
  
#line 1647 
  ;
  
#line 1647 
  tmp_48 = iwl_get_agg_tx_fail_reason((unsigned short)1);
  
#line 1647 
  ;
  
#line 1647 
  ;
  
#line 1647 
  tmp_49 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_48,priv->reply_agg_tx_stats.underrun);
  
#line 1649 
  pos = tmp_49 + pos;
  
#line 1650 
  ;
  
#line 1650 
  tmp_50 = iwl_get_agg_tx_fail_reason((unsigned short)2);
  
#line 1650 
  ;
  
#line 1650 
  ;
  
#line 1650 
  tmp_51 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_50,priv->reply_agg_tx_stats.bt_prio);
  
#line 1652 
  pos = tmp_51 + pos;
  
#line 1653 
  ;
  
#line 1653 
  tmp_52 = iwl_get_agg_tx_fail_reason((unsigned short)4);
  
#line 1653 
  ;
  
#line 1653 
  ;
  
#line 1653 
  tmp_53 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_52,priv->reply_agg_tx_stats.few_bytes);
  
#line 1655 
  pos = tmp_53 + pos;
  
#line 1656 
  ;
  
#line 1656 
  tmp_54 = iwl_get_agg_tx_fail_reason((unsigned short)8);
  
#line 1656 
  ;
  
#line 1656 
  ;
  
#line 1656 
  tmp_55 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_54,priv->reply_agg_tx_stats.abort);
  
#line 1658 
  pos = tmp_55 + pos;
  
#line 1659 
  ;
  
#line 1659 
  tmp_56 = iwl_get_agg_tx_fail_reason((unsigned short)16);
  
#line 1659 
  ;
  
#line 1659 
  ;
  
#line 1659 
  tmp_57 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t%u\n",tmp_56,priv->reply_agg_tx_stats.last_sent_ttl);
  
#line 1662 
  pos = tmp_57 + pos;
  
#line 1663 
  ;
  
#line 1663 
  tmp_58 = iwl_get_agg_tx_fail_reason((unsigned short)32);
  
#line 1663 
  ;
  
#line 1663 
  ;
  
#line 1663 
  tmp_59 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t%u\n",tmp_58,priv->reply_agg_tx_stats.last_sent_try);
  
#line 1666 
  pos = tmp_59 + pos;
  
#line 1667 
  ;
  
#line 1667 
  tmp_60 = iwl_get_agg_tx_fail_reason((unsigned short)64);
  
#line 1667 
  ;
  
#line 1667 
  ;
  
#line 1667 
  tmp_61 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t%u\n",tmp_60,priv->reply_agg_tx_stats.last_sent_bt_kill);
  
#line 1670 
  pos = tmp_61 + pos;
  
#line 1671 
  ;
  
#line 1671 
  tmp_62 = iwl_get_agg_tx_fail_reason((unsigned short)128);
  
#line 1671 
  ;
  
#line 1671 
  ;
  
#line 1671 
  tmp_63 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_62,priv->reply_agg_tx_stats.scd_query);
  
#line 1673 
  pos = tmp_63 + pos;
  
#line 1674 
  ;
  
#line 1674 
  tmp_64 = iwl_get_agg_tx_fail_reason((unsigned short)256);
  
#line 1674 
  ;
  
#line 1674 
  ;
  
#line 1674 
  tmp_65 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t%u\n",tmp_64,priv->reply_agg_tx_stats.bad_crc32);
  
#line 1677 
  pos = tmp_65 + pos;
  
#line 1678 
  ;
  
#line 1678 
  tmp_66 = iwl_get_agg_tx_fail_reason((unsigned short)511);
  
#line 1678 
  ;
  
#line 1678 
  ;
  
#line 1678 
  tmp_67 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_66,priv->reply_agg_tx_stats.response);
  
#line 1680 
  pos = tmp_67 + pos;
  
#line 1681 
  ;
  
#line 1681 
  tmp_68 = iwl_get_agg_tx_fail_reason((unsigned short)512);
  
#line 1681 
  ;
  
#line 1681 
  ;
  
#line 1681 
  tmp_69 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_68,priv->reply_agg_tx_stats.dump_tx);
  
#line 1683 
  pos = tmp_69 + pos;
  
#line 1684 
  ;
  
#line 1684 
  tmp_70 = iwl_get_agg_tx_fail_reason((unsigned short)1024);
  
#line 1684 
  ;
  
#line 1684 
  ;
  
#line 1684 
  tmp_71 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"%s:\t\t\t%u\n",tmp_70,priv->reply_agg_tx_stats.delay_tx);
  
#line 1686 
  pos = tmp_71 + pos;
  
#line 1687 
  tmp_72 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"UNKNOWN:\t\t\t%u\n",priv->reply_agg_tx_stats.unknown);
  
#line 1688 
  pos = tmp_72 + pos;
  
#line 1690 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 1691 
  kfree((void const *)buf);
  
#line 1692 
  __retres = ret;
  return_label: 
#line 1692 
                return __retres;
}


#line 1695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_sensitivity_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buf;
  ssize_t ret;
  struct iwl_sensitivity_data *data;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  int tmp_15;
  int tmp_16;
  int tmp_17;
  int tmp_18;
  int tmp_19;
  int tmp_20;
  int tmp_21;
  int tmp_22;
  int tmp_23;
  int tmp_24;
  
#line 1699 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1700 
  int pos = 0;
  
#line 1701 
  int cnt = 0;
  
#line 1703 
  int bufsz = 676;
  
#line 1707 
  data = & priv->sensitivity_data;
  
#line 1708 
  buf = (char *)kzalloc_3((unsigned long)bufsz,208U);
  
#line 1709 
  if (buf == (char *)0) {
    
#line 1710 
    __retres = -12L;
    
#line 1710 
    goto return_label;
  }
  else ;
  
#line 1712 
  tmp_0 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"auto_corr_ofdm:\t\t\t %u\n",data->auto_corr_ofdm);
  
#line 1713 
  pos = tmp_0 + pos;
  
#line 1714 
  tmp_1 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"auto_corr_ofdm_mrc:\t\t %u\n",data->auto_corr_ofdm_mrc);
  
#line 1716 
  pos = tmp_1 + pos;
  
#line 1717 
  tmp_2 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"auto_corr_ofdm_x1:\t\t %u\n",data->auto_corr_ofdm_x1);
  
#line 1718 
  pos = tmp_2 + pos;
  
#line 1719 
  tmp_3 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"auto_corr_ofdm_mrc_x1:\t\t %u\n",data->auto_corr_ofdm_mrc_x1);
  
#line 1721 
  pos = tmp_3 + pos;
  
#line 1722 
  tmp_4 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"auto_corr_cck:\t\t\t %u\n",data->auto_corr_cck);
  
#line 1723 
  pos = tmp_4 + pos;
  
#line 1724 
  tmp_5 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"auto_corr_cck_mrc:\t\t %u\n",data->auto_corr_cck_mrc);
  
#line 1725 
  pos = tmp_5 + pos;
  
#line 1726 
  tmp_6 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"last_bad_plcp_cnt_ofdm:\t\t %u\n",data->last_bad_plcp_cnt_ofdm);
  
#line 1728 
  pos = tmp_6 + pos;
  
#line 1729 
  tmp_7 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"last_fa_cnt_ofdm:\t\t %u\n",data->last_fa_cnt_ofdm);
  
#line 1730 
  pos = tmp_7 + pos;
  
#line 1731 
  tmp_8 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"last_bad_plcp_cnt_cck:\t\t %u\n",data->last_bad_plcp_cnt_cck);
  
#line 1733 
  pos = tmp_8 + pos;
  
#line 1734 
  tmp_9 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"last_fa_cnt_cck:\t\t %u\n",data->last_fa_cnt_cck);
  
#line 1735 
  pos = tmp_9 + pos;
  
#line 1736 
  tmp_10 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_curr_state:\t\t\t %u\n",data->nrg_curr_state);
  
#line 1737 
  pos = tmp_10 + pos;
  
#line 1738 
  tmp_11 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_prev_state:\t\t\t %u\n",data->nrg_prev_state);
  
#line 1739 
  pos = tmp_11 + pos;
  
#line 1740 
  tmp_12 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_value:\t\t\t");
  
#line 1740 
  pos = tmp_12 + pos;
  
#line 1741 
  cnt = 0;
  
#line 1741 
  goto ldv_55961;
  ldv_55960: 
#line 1742 
  ;
  
#line 1742 
  tmp_13 = scnprintf(buf + pos,(unsigned long)(bufsz - pos)," %u",data->nrg_value[cnt]);
  
#line 1743 
  pos = tmp_13 + pos;
  
#line 1741 
  cnt += 1;
  ldv_55961: 
#line 1742 
  ;
  
#line 1741 
  if (cnt <= 9) 
#line 1743 
                goto ldv_55960; else 
#line 1746 
                                     goto ldv_55962;
  ldv_55962: 
#line 1747 
  ;
  
#line 1745 
  tmp_14 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"\n");
  
#line 1745 
  pos = tmp_14 + pos;
  
#line 1746 
  tmp_15 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_silence_rssi:\t\t");
  
#line 1746 
  pos = tmp_15 + pos;
  
#line 1747 
  cnt = 0;
  
#line 1747 
  goto ldv_55964;
  ldv_55963: 
#line 1748 
  ;
  
#line 1748 
  tmp_16 = scnprintf(buf + pos,(unsigned long)(bufsz - pos)," %u",(int)data->nrg_silence_rssi[cnt]);
  
#line 1749 
  pos = tmp_16 + pos;
  
#line 1747 
  cnt += 1;
  ldv_55964: 
#line 1748 
  ;
  
#line 1747 
  if (cnt <= 19) 
#line 1749 
                 goto ldv_55963; else 
#line 1752 
                                      goto ldv_55965;
  ldv_55965: 
#line 1753 
  ;
  
#line 1751 
  tmp_17 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"\n");
  
#line 1751 
  pos = tmp_17 + pos;
  
#line 1752 
  tmp_18 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_silence_ref:\t\t %u\n",data->nrg_silence_ref);
  
#line 1753 
  pos = tmp_18 + pos;
  
#line 1754 
  tmp_19 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_energy_idx:\t\t\t %u\n",data->nrg_energy_idx);
  
#line 1755 
  pos = tmp_19 + pos;
  
#line 1756 
  tmp_20 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_silence_idx:\t\t %u\n",data->nrg_silence_idx);
  
#line 1757 
  pos = tmp_20 + pos;
  
#line 1758 
  tmp_21 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_th_cck:\t\t\t %u\n",data->nrg_th_cck);
  
#line 1759 
  pos = tmp_21 + pos;
  
#line 1760 
  tmp_22 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_auto_corr_silence_diff:\t %u\n",data->nrg_auto_corr_silence_diff);
  
#line 1762 
  pos = tmp_22 + pos;
  
#line 1763 
  tmp_23 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"num_in_cck_no_fa:\t\t %u\n",data->num_in_cck_no_fa);
  
#line 1764 
  pos = tmp_23 + pos;
  
#line 1765 
  tmp_24 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"nrg_th_ofdm:\t\t\t %u\n",data->nrg_th_ofdm);
  
#line 1766 
  pos = tmp_24 + pos;
  
#line 1768 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 1769 
  kfree((void const *)buf);
  
#line 1770 
  __retres = ret;
  return_label: 
#line 1770 
                return __retres;
}


#line 1774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_chain_noise_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buf;
  ssize_t ret;
  struct iwl_chain_noise_data *data;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  int tmp_15;
  
#line 1778 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1779 
  int pos = 0;
  
#line 1780 
  int cnt = 0;
  
#line 1782 
  int bufsz = 260;
  
#line 1786 
  data = & priv->chain_noise_data;
  
#line 1787 
  buf = (char *)kzalloc_3((unsigned long)bufsz,208U);
  
#line 1788 
  if (buf == (char *)0) {
    
#line 1789 
    __retres = -12L;
    
#line 1789 
    goto return_label;
  }
  else ;
  
#line 1791 
  tmp_0 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"active_chains:\t\t\t %u\n",data->active_chains);
  
#line 1792 
  pos = tmp_0 + pos;
  
#line 1793 
  tmp_1 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"chain_noise_a:\t\t\t %u\n",data->chain_noise_a);
  
#line 1794 
  pos = tmp_1 + pos;
  
#line 1795 
  tmp_2 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"chain_noise_b:\t\t\t %u\n",data->chain_noise_b);
  
#line 1796 
  pos = tmp_2 + pos;
  
#line 1797 
  tmp_3 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"chain_noise_c:\t\t\t %u\n",data->chain_noise_c);
  
#line 1798 
  pos = tmp_3 + pos;
  
#line 1799 
  tmp_4 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"chain_signal_a:\t\t\t %u\n",data->chain_signal_a);
  
#line 1800 
  pos = tmp_4 + pos;
  
#line 1801 
  tmp_5 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"chain_signal_b:\t\t\t %u\n",data->chain_signal_b);
  
#line 1802 
  pos = tmp_5 + pos;
  
#line 1803 
  tmp_6 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"chain_signal_c:\t\t\t %u\n",data->chain_signal_c);
  
#line 1804 
  pos = tmp_6 + pos;
  
#line 1805 
  tmp_7 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"beacon_count:\t\t\t %u\n",(int)data->beacon_count);
  
#line 1806 
  pos = tmp_7 + pos;
  
#line 1808 
  tmp_8 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"disconn_array:\t\t\t");
  
#line 1808 
  pos = tmp_8 + pos;
  
#line 1809 
  cnt = 0;
  
#line 1809 
  goto ldv_55980;
  ldv_55979: 
#line 1810 
  ;
  
#line 1810 
  tmp_9 = scnprintf(buf + pos,(unsigned long)(bufsz - pos)," %u",(int)data->disconn_array[cnt]);
  
#line 1811 
  pos = tmp_9 + pos;
  
#line 1809 
  cnt += 1;
  ldv_55980: 
#line 1810 
  ;
  
#line 1809 
  if (cnt <= 2) 
#line 1811 
                goto ldv_55979; else 
#line 1814 
                                     goto ldv_55981;
  ldv_55981: 
#line 1815 
  ;
  
#line 1813 
  tmp_10 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"\n");
  
#line 1813 
  pos = tmp_10 + pos;
  
#line 1814 
  tmp_11 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"delta_gain_code:\t\t");
  
#line 1814 
  pos = tmp_11 + pos;
  
#line 1815 
  cnt = 0;
  
#line 1815 
  goto ldv_55983;
  ldv_55982: 
#line 1816 
  ;
  
#line 1816 
  tmp_12 = scnprintf(buf + pos,(unsigned long)(bufsz - pos)," %u",(int)data->delta_gain_code[cnt]);
  
#line 1817 
  pos = tmp_12 + pos;
  
#line 1815 
  cnt += 1;
  ldv_55983: 
#line 1816 
  ;
  
#line 1815 
  if (cnt <= 2) 
#line 1817 
                goto ldv_55982; else 
#line 1820 
                                     goto ldv_55984;
  ldv_55984: 
#line 1821 
  ;
  
#line 1819 
  tmp_13 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"\n");
  
#line 1819 
  pos = tmp_13 + pos;
  
#line 1820 
  tmp_14 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"radio_write:\t\t\t %u\n",(int)data->radio_write);
  
#line 1821 
  pos = tmp_14 + pos;
  
#line 1822 
  tmp_15 = scnprintf(buf + pos,(unsigned long)(bufsz - pos),"state:\t\t\t\t %u\n",(int)data->state);
  
#line 1823 
  pos = tmp_15 + pos;
  
#line 1825 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)pos);
  
#line 1826 
  kfree((void const *)buf);
  
#line 1827 
  __retres = ret;
  return_label: 
#line 1827 
                return __retres;
}


#line 1830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_power_save_status_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[60U];
  u32 pwrsave_status;
  u32 tmp;
  int tmp_0;
  int tmp_4;
  char *tmp_3;
  ssize_t tmp_5;
  
#line 1834 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1836 
  int pos = 0;
  
#line 1837 
  size_t const bufsz = 60UL;
  
#line 1840 
  tmp = iwl_read32_2(priv->trans,36U);
  
#line 1840 
  pwrsave_status = tmp & 50331648U;
  
#line 1843 
  tmp_0 = scnprintf((char *)(& buf) + pos,60UL - (unsigned long)pos,"Power Save Status: ");
  
#line 1843 
  pos = tmp_0 + pos;
  
#line 1844 
  if (pwrsave_status != 0U) {
    char *tmp_2;
    
#line 1845 
    if (pwrsave_status != 16777216U) {
      char *tmp_1;
      
#line 1846 
      if (pwrsave_status == 33554432U) 
#line 1846 
                                       tmp_1 = (char *)"PHY"; else 
#line 1846 
                                                                   tmp_1 = (char *)"error";
      
#line 1845 
      tmp_2 = tmp_1;
    }
    else 
#line 1845 
         tmp_2 = (char *)"MAC";
    
#line 1844 
    tmp_3 = tmp_2;
  }
  else 
#line 1844 
       tmp_3 = (char *)"none";
  
#line 1844 
  tmp_4 = scnprintf((char *)(& buf) + pos,60UL - (unsigned long)pos,"%s\n",tmp_3);
  
#line 1848 
  pos = tmp_4 + pos;
  
#line 1850 
  tmp_5 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 1850 
  return tmp_5;
}


#line 1853  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_clear_ucode_statistics_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  int clear;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  
#line 1857 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1862 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 1863 
    size_t _min1 = count;
    
#line 1863 
    unsigned long _min2 = 7UL;
    
#line 1863 
    if (_min1 < _min2) 
#line 1863 
                       tmp = _min1; else 
#line 1863 
                                         tmp = _min2;
    
#line 1863 
    tmp_0 = tmp;
  }
  
#line 1863 
  buf_size = (int)tmp_0;
  
#line 1864 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 1864 
  if (tmp_1 != 0UL) {
    
#line 1865 
    __retres = -14L;
    
#line 1865 
    goto return_label;
  }
  else ;
  
#line 1866 
  tmp_2 = sscanf((char const *)(& buf),"%d",& clear);
  
#line 1866 
  if (tmp_2 != 1) {
    
#line 1867 
    __retres = -14L;
    
#line 1867 
    goto return_label;
  }
  else ;
  
#line 1870 
  ldv_mutex_lock_86_0(& priv->mutex);
  
#line 1871 
  iwl_send_statistics_request(priv,(unsigned char)0,(_Bool)1);
  
#line 1872 
  ldv_mutex_unlock_87_0(& priv->mutex);
  
#line 1874 
  __retres = (long)count;
  return_label: 
#line 1874 
                return __retres;
}


#line 1877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_ucode_tracing_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[128U];
  int tmp_0;
  char *tmp;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  ssize_t tmp_4;
  
#line 1881 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1882 
  int pos = 0;
  
#line 1884 
  size_t const bufsz = 128UL;
  
#line 1886 
  if ((int)priv->event_log.ucode_trace != 0) 
#line 1886 
                                             tmp = (char *)"On"; else 
                                                                   
#line 1886 
                                                                   tmp = (char *)"Off";
  
#line 1886 
  tmp_0 = scnprintf((char *)(& buf) + pos,128UL - (unsigned long)pos,"ucode trace timer is %s\n",tmp);
  
#line 1887 
  pos = tmp_0 + pos;
  
#line 1888 
  tmp_1 = scnprintf((char *)(& buf) + pos,128UL - (unsigned long)pos,"non_wraps_count:\t\t %u\n",priv->event_log.non_wraps_count);
  
#line 1889 
  pos = tmp_1 + pos;
  
#line 1890 
  tmp_2 = scnprintf((char *)(& buf) + pos,128UL - (unsigned long)pos,"wraps_once_count:\t\t %u\n",priv->event_log.wraps_once_count);
  
#line 1891 
  pos = tmp_2 + pos;
  
#line 1892 
  tmp_3 = scnprintf((char *)(& buf) + pos,128UL - (unsigned long)pos,"wraps_more_count:\t\t %u\n",priv->event_log.wraps_more_count);
  
#line 1893 
  pos = tmp_3 + pos;
  
#line 1895 
  tmp_4 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 1895 
  return tmp_4;
}


#line 1898  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_ucode_tracing_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  int trace;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  
#line 1902 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1907 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 1908 
    size_t _min1 = count;
    
#line 1908 
    unsigned long _min2 = 7UL;
    
#line 1908 
    if (_min1 < _min2) 
#line 1908 
                       tmp = _min1; else 
#line 1908 
                                         tmp = _min2;
    
#line 1908 
    tmp_0 = tmp;
  }
  
#line 1908 
  buf_size = (int)tmp_0;
  
#line 1909 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 1909 
  if (tmp_1 != 0UL) {
    
#line 1910 
    __retres = -14L;
    
#line 1910 
    goto return_label;
  }
  else ;
  
#line 1911 
  tmp_2 = sscanf((char const *)(& buf),"%d",& trace);
  
#line 1911 
  if (tmp_2 != 1) {
    
#line 1912 
    __retres = -14L;
    
#line 1912 
    goto return_label;
  }
  else ;
  
#line 1914 
  if (trace != 0) {
    int tmp_3;
    
#line 1915 
    priv->event_log.ucode_trace = (_Bool)1;
    
#line 1916 
    tmp_3 = iwl_is_alive(priv);
    
#line 1916 
    if (tmp_3 != 0) 
#line 1918 
                    ldv_mod_timer_88(& priv->ucode_trace,jiffies); else ;
  }
  else {
    
#line 1921 
    priv->event_log.ucode_trace = (_Bool)0;
    
#line 1922 
    ldv_del_timer_sync_89_0(& priv->ucode_trace);
  }
  
#line 1925 
  __retres = (long)count;
  return_label: 
#line 1925 
                return __retres;
}


#line 1928  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_rxon_flags_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[20U];
  ssize_t tmp;
  
#line 1932 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1933 
  int len = 0;
  
#line 1936 
  len = sprintf((char *)(& buf),"0x%04X\n",priv->contexts[0].active.flags);
  
#line 1938 
  tmp = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)len);
  
#line 1938 
  return tmp;
}


#line 1941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_rxon_filter_flags_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[20U];
  ssize_t tmp;
  
#line 1945 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1946 
  int len = 0;
  
#line 1949 
  len = sprintf((char *)(& buf),"0x%04X\n",priv->contexts[0].active.filter_flags);
  
#line 1951 
  tmp = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)len);
  
#line 1951 
  return tmp;
}


#line 1954  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_missed_beacon_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[12U];
  int tmp;
  ssize_t tmp_0;
  
#line 1958 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1959 
  int pos = 0;
  
#line 1961 
  size_t const bufsz = 12UL;
  
#line 1963 
  tmp = scnprintf((char *)(& buf) + pos,12UL - (unsigned long)pos,"%d\n",priv->missed_beacon_threshold);
  
#line 1964 
  pos = tmp + pos;
  
#line 1966 
  tmp_0 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 1966 
  return tmp_0;
}


#line 1969  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_missed_beacon_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  int missed;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  
#line 1973 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 1978 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 1979 
    size_t _min1 = count;
    
#line 1979 
    unsigned long _min2 = 7UL;
    
#line 1979 
    if (_min1 < _min2) 
#line 1979 
                       tmp = _min1; else 
#line 1979 
                                         tmp = _min2;
    
#line 1979 
    tmp_0 = tmp;
  }
  
#line 1979 
  buf_size = (int)tmp_0;
  
#line 1980 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 1980 
  if (tmp_1 != 0UL) {
    
#line 1981 
    __retres = -14L;
    
#line 1981 
    goto return_label;
  }
  else ;
  
#line 1982 
  tmp_2 = sscanf((char const *)(& buf),"%d",& missed);
  
#line 1982 
  if (tmp_2 != 1) {
    
#line 1983 
    __retres = -22L;
    
#line 1983 
    goto return_label;
  }
  else ;
  
#line 1985 
  if ((unsigned int)missed + 4294967295U > 4U) 
#line 1987 
                                               priv->missed_beacon_threshold = 5; else 
                                                                    
#line 1990 
                                                                    priv->missed_beacon_threshold = missed;
  
#line 1992 
  __retres = (long)count;
  return_label: 
#line 1992 
                return __retres;
}


#line 1995  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_plcp_delta_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[12U];
  int tmp;
  ssize_t tmp_0;
  
#line 1999 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2000 
  int pos = 0;
  
#line 2002 
  size_t const bufsz = 12UL;
  
#line 2004 
  tmp = scnprintf((char *)(& buf) + pos,12UL - (unsigned long)pos,"%u\n",(int)priv->plcp_delta_threshold);
  
#line 2005 
  pos = tmp + pos;
  
#line 2007 
  tmp_0 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 2007 
  return tmp_0;
}


#line 2010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_plcp_delta_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  int plcp;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  
#line 2014 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2019 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 2020 
    size_t _min1 = count;
    
#line 2020 
    unsigned long _min2 = 7UL;
    
#line 2020 
    if (_min1 < _min2) 
#line 2020 
                       tmp = _min1; else 
#line 2020 
                                         tmp = _min2;
    
#line 2020 
    tmp_0 = tmp;
  }
  
#line 2020 
  buf_size = (int)tmp_0;
  
#line 2021 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 2021 
  if (tmp_1 != 0UL) {
    
#line 2022 
    __retres = -14L;
    
#line 2022 
    goto return_label;
  }
  else ;
  
#line 2023 
  tmp_2 = sscanf((char const *)(& buf),"%d",& plcp);
  
#line 2023 
  if (tmp_2 != 1) {
    
#line 2024 
    __retres = -22L;
    
#line 2024 
    goto return_label;
  }
  else ;
  
#line 2025 
  if ((unsigned int)plcp + 4294967295U > 254U) 
#line 2027 
                                               priv->plcp_delta_threshold = (unsigned char)0U; else 
                                                                    
#line 2030 
                                                                    priv->plcp_delta_threshold = (unsigned char)plcp;
  
#line 2031 
  __retres = (long)count;
  return_label: 
#line 2031 
                return __retres;
}


#line 2034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_rf_reset_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[300U];
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  ssize_t tmp_3;
  
#line 2038 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2039 
  int pos = 0;
  
#line 2041 
  size_t const bufsz = 300UL;
  
#line 2042 
  struct iwl_rf_reset *rf_reset = & priv->rf_reset;
  
#line 2044 
  tmp = scnprintf((char *)(& buf) + pos,300UL - (unsigned long)pos,"RF reset statistics\n");
  
#line 2045 
  pos = tmp + pos;
  
#line 2046 
  tmp_0 = scnprintf((char *)(& buf) + pos,300UL - (unsigned long)pos,"\tnumber of reset request: %d\n",rf_reset->reset_request_count);
  
#line 2048 
  pos = tmp_0 + pos;
  
#line 2049 
  tmp_1 = scnprintf((char *)(& buf) + pos,300UL - (unsigned long)pos,"\tnumber of reset request success: %d\n",rf_reset->reset_success_count);
  
#line 2051 
  pos = tmp_1 + pos;
  
#line 2052 
  tmp_2 = scnprintf((char *)(& buf) + pos,300UL - (unsigned long)pos,"\tnumber of reset request reject: %d\n",rf_reset->reset_reject_count);
  
#line 2054 
  pos = tmp_2 + pos;
  
#line 2056 
  tmp_3 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 2056 
  return tmp_3;
}


#line 2059  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_rf_reset_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  int ret;
  unsigned long tmp;
  
#line 2063 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2066 
  ret = iwl_force_rf_reset(priv,(_Bool)1);
  
#line 2067 
  if (ret != 0) 
#line 2067 
                tmp = (unsigned long)ret; else 
#line 2067 
                                               tmp = count;
  
#line 2067 
  __retres = (long)tmp;
  
#line 2067 
  return __retres;
}


#line 2070  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_txfifo_flush_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  int flush;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 2074 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2079 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 2080 
    size_t _min1 = count;
    
#line 2080 
    unsigned long _min2 = 7UL;
    
#line 2080 
    if (_min1 < _min2) 
#line 2080 
                       tmp = _min1; else 
#line 2080 
                                         tmp = _min2;
    
#line 2080 
    tmp_0 = tmp;
  }
  
#line 2080 
  buf_size = (int)tmp_0;
  
#line 2081 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 2081 
  if (tmp_1 != 0UL) {
    
#line 2082 
    __retres = -14L;
    
#line 2082 
    goto return_label;
  }
  else ;
  
#line 2083 
  tmp_2 = sscanf((char const *)(& buf),"%d",& flush);
  
#line 2083 
  if (tmp_2 != 1) {
    
#line 2084 
    __retres = -22L;
    
#line 2084 
    goto return_label;
  }
  else ;
  
#line 2086 
  tmp_3 = iwl_is_rfkill(priv);
  
#line 2086 
  if (tmp_3 != 0) {
    
#line 2087 
    __retres = -14L;
    
#line 2087 
    goto return_label;
  }
  else ;
  
#line 2089 
  iwlagn_dev_txfifo_flush(priv);
  
#line 2091 
  __retres = (long)count;
  return_label: 
#line 2091 
                return __retres;
}


#line 2094  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_bt_traffic_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[200U];
  int tmp_1;
  int tmp_3;
  char *tmp_2;
  int tmp_5;
  char *tmp_4;
  int tmp_6;
  int tmp_7;
  ssize_t tmp_12;
  
#line 2098 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2099 
  int pos = 0;
  
#line 2101 
  size_t const bufsz = 200UL;
  
#line 2103 
  if ((unsigned int)priv->bt_enable_flag == 0U) {
    int tmp;
    ssize_t tmp_0;
    
#line 2104 
    tmp = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"BT coex disabled\n");
    
#line 2104 
    pos = tmp + pos;
    
#line 2105 
    tmp_0 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
    
#line 2105 
    __retres = tmp_0;
    
#line 2105 
    goto return_label;
  }
  else ;
  
#line 2107 
  tmp_1 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"BT enable flag: 0x%x\n",(int)priv->bt_enable_flag);
  
#line 2108 
  pos = tmp_1 + pos;
  
#line 2109 
  if ((int)priv->bt_full_concurrent != 0) 
#line 2109 
                                          tmp_2 = (char *)"full concurrency"; else 
                                                                    
#line 2109 
                                                                    tmp_2 = (char *)"3-wire";
  
#line 2109 
  tmp_3 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"BT in %s mode\n",tmp_2);
  
#line 2110 
  pos = tmp_3 + pos;
  
#line 2111 
  ;
  
#line 2111 
  if ((unsigned int)priv->bt_status != 0U) 
#line 2111 
                                           tmp_4 = (char *)"On"; else 
                                                                   
#line 2111 
                                                                   tmp_4 = (char *)"Off";
  
#line 2111 
  tmp_5 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"BT status: %s, ",tmp_4,(int)priv->last_bt_traffic_load);
  
#line 2113 
  pos = tmp_5 + pos;
  
#line 2114 
  tmp_6 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"ch_announcement: %d, ",(int)priv->bt_ch_announce,priv->kill_ack_mask,priv->kill_cts_mask);
  
#line 2117 
  pos = tmp_6 + pos;
  
#line 2119 
  tmp_7 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"bluetooth traffic load: ");
  
#line 2119 
  pos = tmp_7 + pos;
  
#line 2120 
  switch ((int)priv->bt_traffic_load) {
    int tmp_8;
    int tmp_9;
    int tmp_10;
    int tmp_11;
    case 3: 
#line 2121 
    ;
    
#line 2122 
    tmp_8 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"Continuous\n");
    
#line 2122 
    pos = tmp_8 + pos;
    
#line 2123 
    goto ldv_56139;
    case 2: 
#line 2124 
    ;
    
#line 2125 
    tmp_9 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"High\n");
    
#line 2125 
    pos = tmp_9 + pos;
    
#line 2126 
    goto ldv_56139;
    case 1: 
#line 2127 
    ;
    
#line 2128 
    tmp_10 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"Low\n");
    
#line 2128 
    pos = tmp_10 + pos;
    
#line 2129 
    goto ldv_56139;
    case 0: 
#line 2130 
    ;
    default: 
#line 2131 
    ;
    
#line 2132 
    tmp_11 = scnprintf((char *)(& buf) + pos,200UL - (unsigned long)pos,"None\n");
    
#line 2132 
    pos = tmp_11 + pos;
    
#line 2133 
    goto ldv_56139;
  }
  ldv_56139: 
#line 2136 
  ;
  
#line 2136 
  tmp_12 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 2136 
  __retres = tmp_12;
  return_label: 
#line 2136 
                return __retres;
}


#line 2139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_protection_mode_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[40U];
  ssize_t tmp_2;
  
#line 2143 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2145 
  int pos = 0;
  
#line 2147 
  size_t const bufsz = 40UL;
  
#line 2149 
  if ((priv->cfg)->ht_params != (struct iwl_ht_params const *)0) {
    int tmp_0;
    char *tmp;
    
#line 2151 
    if ((int)priv->hw_params.use_rts_for_aggregation != 0) 
#line 2151 
                                                           tmp = (char *)"rts/cts"; else 
                                                                    
#line 2151 
                                                                    tmp = (char *)"cts-to-self";
    
#line 2150 
    tmp_0 = scnprintf((char *)(& buf) + pos,40UL - (unsigned long)pos,"use %s for aggregation\n",tmp);
    
#line 2153 
    pos = tmp_0 + pos;
  }
  else {
    int tmp_1;
    
#line 2155 
    tmp_1 = scnprintf((char *)(& buf) + pos,40UL - (unsigned long)pos,"N/A");
    
#line 2155 
    pos = tmp_1 + pos;
  }
  
#line 2157 
  tmp_2 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 2157 
  return tmp_2;
}


#line 2160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_protection_mode_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  int rts;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  
#line 2164 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2169 
  if ((priv->cfg)->ht_params == (struct iwl_ht_params const *)0) {
    
#line 2170 
    __retres = -22L;
    
#line 2170 
    goto return_label;
  }
  else ;
  
#line 2172 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 2173 
    size_t _min1 = count;
    
#line 2173 
    unsigned long _min2 = 7UL;
    
#line 2173 
    if (_min1 < _min2) 
#line 2173 
                       tmp = _min1; else 
#line 2173 
                                         tmp = _min2;
    
#line 2173 
    tmp_0 = tmp;
  }
  
#line 2173 
  buf_size = (int)tmp_0;
  
#line 2174 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 2174 
  if (tmp_1 != 0UL) {
    
#line 2175 
    __retres = -14L;
    
#line 2175 
    goto return_label;
  }
  else ;
  
#line 2176 
  tmp_2 = sscanf((char const *)(& buf),"%d",& rts);
  
#line 2176 
  if (tmp_2 != 1) {
    
#line 2177 
    __retres = -22L;
    
#line 2177 
    goto return_label;
  }
  else ;
  
#line 2178 
  if (rts != 0) 
#line 2179 
                priv->hw_params.use_rts_for_aggregation = (_Bool)1; else 
                                                                    
#line 2181 
                                                                    priv->hw_params.use_rts_for_aggregation = (_Bool)0;
  
#line 2182 
  __retres = (long)count;
  return_label: 
#line 2182 
                return __retres;
}


#line 2195 
void __compiletime_assert_2195(void);


#line 2197 
void __compiletime_assert_2197(void);


#line 2185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static int iwl_cmd_echo_test(struct iwl_priv *priv)
{
  int ret;
  
#line 2188 
  struct iwl_host_cmd cmd = {.data = {(void const *)0, (void const *)0}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)0U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)3U};
  
#line 2193 
  ret = iwl_dvm_send_cmd(priv,& cmd);
  
#line 2194 
  if (ret != 0) {
    {
      
#line 2195 
      bool __cond = (_Bool)((int)*("echo testing fail: 0X%x\n" + 23UL) != 10);
      
#line 2195 
      if ((int)__cond != 0) 
#line 2195 
                            __compiletime_assert_2195(); else ;
    }
    
#line 2195 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"echo testing fail: 0X%x\n",ret);
  }
  else {
    {
      
#line 2197 
      bool __cond_0 = (_Bool)((int)*("echo testing pass\n" + 17UL) != 10);
      
#line 2197 
      if ((int)__cond_0 != 0) 
#line 2197 
                              __compiletime_assert_2197(); else ;
    }
    
#line 2197 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_cmd_echo_test","echo testing pass\n");
  }
  
#line 2198 
  return ret;
}


#line 2201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_echo_test_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  int buf_size;
  unsigned long tmp_0;
  unsigned long tmp_1;
  
#line 2205 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2209 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 2210 
    size_t _min1 = count;
    
#line 2210 
    unsigned long _min2 = 7UL;
    
#line 2210 
    if (_min1 < _min2) 
#line 2210 
                       tmp = _min1; else 
#line 2210 
                                         tmp = _min2;
    
#line 2210 
    tmp_0 = tmp;
  }
  
#line 2210 
  buf_size = (int)tmp_0;
  
#line 2211 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 2211 
  if (tmp_1 != 0UL) {
    
#line 2212 
    __retres = -14L;
    
#line 2212 
    goto return_label;
  }
  else ;
  
#line 2214 
  iwl_cmd_echo_test(priv);
  
#line 2215 
  __retres = (long)count;
  return_label: 
#line 2215 
                return __retres;
}


#line 2219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_log_event_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t ret;
  int tmp;
  
#line 2223 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2224 
  char *buf = (char *)0;
  
#line 2227 
  tmp = iwl_dump_nic_event_log(priv,(_Bool)1,& buf);
  
#line 2227 
  ret = (long)tmp;
  
#line 2228 
  if (ret > 0L) 
#line 2229 
                ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buf,(unsigned long)ret); else ;
  
#line 2230 
  kfree((void const *)buf);
  
#line 2231 
  return ret;
}


#line 2234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_log_event_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  u32 event_log_flag;
  char buf[8U];
  int buf_size;
  int tmp;
  unsigned long tmp_1;
  unsigned long tmp_2;
  int tmp_3;
  
#line 2238 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2244 
  tmp = iwl_is_ready(priv);
  
#line 2244 
  if (tmp == 0) {
    
#line 2245 
    __retres = -11L;
    
#line 2245 
    goto return_label;
  }
  else ;
  
#line 2247 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp_0;
    
#line 2248 
    size_t _min1 = count;
    
#line 2248 
    unsigned long _min2 = 7UL;
    
#line 2248 
    if (_min1 < _min2) 
#line 2248 
                       tmp_0 = _min1; else 
#line 2248 
                                           tmp_0 = _min2;
    
#line 2248 
    tmp_1 = tmp_0;
  }
  
#line 2248 
  buf_size = (int)tmp_1;
  
#line 2249 
  tmp_2 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 2249 
  if (tmp_2 != 0UL) {
    
#line 2250 
    __retres = -14L;
    
#line 2250 
    goto return_label;
  }
  else ;
  
#line 2251 
  tmp_3 = sscanf((char const *)(& buf),"%d",& event_log_flag);
  
#line 2251 
  if (tmp_3 != 1) {
    
#line 2252 
    __retres = -14L;
    
#line 2252 
    goto return_label;
  }
  else ;
  
#line 2253 
  if (event_log_flag == 1U) 
#line 2254 
                            iwl_dump_nic_event_log(priv,(_Bool)1,(char **)0); else ;
  
#line 2256 
  __retres = (long)count;
  return_label: 
#line 2256 
                return __retres;
}


#line 2260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_calib_disabled_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[120U];
  int tmp_0;
  char *tmp;
  int tmp_2;
  char *tmp_1;
  int tmp_4;
  char *tmp_3;
  ssize_t tmp_5;
  
#line 2264 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2266 
  int pos = 0;
  
#line 2267 
  size_t const bufsz = 120UL;
  
#line 2270 
  if ((priv->calib_disabled & 1U) != 0U) 
#line 2270 
                                         tmp = (char *)"DISABLED"; else 
                                                                    
#line 2270 
                                                                    tmp = (char *)"ENABLED";
  
#line 2269 
  tmp_0 = scnprintf((char *)(& buf) + pos,120UL - (unsigned long)pos,"Sensitivity calibrations %s\n",tmp);
  
#line 2273 
  pos = tmp_0 + pos;
  
#line 2275 
  if ((priv->calib_disabled & 2U) != 0U) 
#line 2275 
                                         tmp_1 = (char *)"DISABLED"; else 
                                                                    
#line 2275 
                                                                    tmp_1 = (char *)"ENABLED";
  
#line 2274 
  tmp_2 = scnprintf((char *)(& buf) + pos,120UL - (unsigned long)pos,"Chain noise calibrations %s\n",tmp_1);
  
#line 2278 
  pos = tmp_2 + pos;
  
#line 2280 
  if ((priv->calib_disabled & 4U) != 0U) 
#line 2280 
                                         tmp_3 = (char *)"DISABLED"; else 
                                                                    
#line 2280 
                                                                    tmp_3 = (char *)"ENABLED";
  
#line 2279 
  tmp_4 = scnprintf((char *)(& buf) + pos,120UL - (unsigned long)pos,"Tx power calibrations %s\n",tmp_3);
  
#line 2283 
  pos = tmp_4 + pos;
  
#line 2285 
  tmp_5 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)pos);
  
#line 2285 
  return tmp_5;
}


#line 2288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_calib_disabled_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[8U];
  u32 calib_disabled;
  int buf_size;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  
#line 2292 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2297 
  memset((void *)(& buf),0,8UL);
  {
    unsigned long tmp;
    
#line 2298 
    size_t _min1 = count;
    
#line 2298 
    unsigned long _min2 = 7UL;
    
#line 2298 
    if (_min1 < _min2) 
#line 2298 
                       tmp = _min1; else 
#line 2298 
                                         tmp = _min2;
    
#line 2298 
    tmp_0 = tmp;
  }
  
#line 2298 
  buf_size = (int)tmp_0;
  
#line 2299 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,(unsigned long)buf_size);
  
#line 2299 
  if (tmp_1 != 0UL) {
    
#line 2300 
    __retres = -14L;
    
#line 2300 
    goto return_label;
  }
  else ;
  
#line 2301 
  tmp_2 = sscanf((char const *)(& buf),"%x",& calib_disabled);
  
#line 2301 
  if (tmp_2 != 1) {
    
#line 2302 
    __retres = -14L;
    
#line 2302 
    goto return_label;
  }
  else ;
  
#line 2304 
  priv->calib_disabled = calib_disabled;
  
#line 2306 
  __retres = (long)count;
  return_label: 
#line 2306 
                return __retres;
}


#line 2309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static ssize_t iwl_dbgfs_fw_restart_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  int ret;
  
#line 2313 
  struct iwl_priv *priv = (struct iwl_priv *)file->private_data;
  
#line 2314 
  bool restart_fw = iwlwifi_mod_params.restart_fw;
  
#line 2317 
  iwlwifi_mod_params.restart_fw = (_Bool)1;
  
#line 2319 
  ldv_mutex_lock_90(& priv->mutex);
  
#line 2322 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)2,0U,(unsigned short)0,(void const *)0);
  
#line 2324 
  ldv_mutex_unlock_91_0(& priv->mutex);
  
#line 2326 
  iwlwifi_mod_params.restart_fw = restart_fw;
  
#line 2328 
  __retres = (long)count;
  
#line 2328 
  return __retres;
}


#line 2331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_ucode_rx_stats_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_ucode_rx_stats_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_ucode_tx_stats_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_ucode_tx_stats_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_ucode_general_stats_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_ucode_general_stats_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_sensitivity_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_sensitivity_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_chain_noise_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_chain_noise_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_power_save_status_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_power_save_status_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_clear_ucode_statistics_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = (ssize_t (*)(struct file *, char *, size_t , loff_t *))0, .write = & iwl_dbgfs_clear_ucode_statistics_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_ucode_tracing_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_ucode_tracing_read, .write = & iwl_dbgfs_ucode_tracing_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_missed_beacon_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_missed_beacon_read, .write = & iwl_dbgfs_missed_beacon_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_plcp_delta_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_plcp_delta_read, .write = & iwl_dbgfs_plcp_delta_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_rf_reset_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_rf_reset_read, .write = & iwl_dbgfs_rf_reset_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_rxon_flags_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_rxon_flags_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_rxon_filter_flags_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_rxon_filter_flags_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_txfifo_flush_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = (ssize_t (*)(struct file *, char *, size_t , loff_t *))0, .write = & iwl_dbgfs_txfifo_flush_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_ucode_bt_stats_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_ucode_bt_stats_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_bt_traffic_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_bt_traffic_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2347  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_protection_mode_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_protection_mode_read, .write = & iwl_dbgfs_protection_mode_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_reply_tx_error_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_reply_tx_error_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_echo_test_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = (ssize_t (*)(struct file *, char *, size_t , loff_t *))0, .write = & iwl_dbgfs_echo_test_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_fw_restart_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = (ssize_t (*)(struct file *, char *, size_t , loff_t *))0, .write = & iwl_dbgfs_fw_restart_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_log_event_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_log_event_read, .write = & iwl_dbgfs_log_event_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
static struct file_operations const iwl_dbgfs_calib_disabled_ops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & iwl_dbgfs_calib_disabled_read, .write = & iwl_dbgfs_calib_disabled_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2443 
void __compiletime_assert_2443(void);


#line 2360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/debugfs.c"
int iwl_dbgfs_register(struct iwl_priv *priv, struct dentry *dbgfs_dir)
{
  int __retres;
  struct dentry *dir_data;
  struct dentry *dir_rf;
  struct dentry *dir_debug;
  struct dentry *tmp;
  struct dentry *tmp_0;
  struct dentry *tmp_1;
  struct dentry *tmp_2;
  struct dentry *tmp_3;
  struct dentry *tmp_4;
  struct dentry *tmp_5;
  struct dentry *tmp_6;
  struct dentry *tmp_7;
  struct dentry *tmp_8;
  struct dentry *tmp_9;
  struct dentry *tmp_10;
  struct dentry *tmp_11;
  struct dentry *tmp_12;
  struct dentry *tmp_13;
  struct dentry *tmp_14;
  struct dentry *tmp_15;
  struct dentry *tmp_16;
  struct dentry *tmp_17;
  struct dentry *tmp_18;
  struct dentry *tmp_19;
  struct dentry *tmp_20;
  struct dentry *tmp_21;
  struct dentry *tmp_22;
  struct dentry *tmp_23;
  struct dentry *tmp_24;
  struct dentry *tmp_25;
  struct dentry *tmp_26;
  struct dentry *tmp_27;
  struct dentry *tmp_28;
  struct dentry *tmp_29;
  struct dentry *tmp_30;
  struct dentry *tmp_31;
  bool tmp_33;
  struct dentry *tmp_34;
  
#line 2364 
  priv->debugfs_dir = dbgfs_dir;
  
#line 2366 
  dir_data = debugfs_create_dir("data",dbgfs_dir);
  
#line 2367 
  if (dir_data == (struct dentry *)0) 
#line 2368 
                                      goto err; else ;
  
#line 2369 
  dir_rf = debugfs_create_dir("rf",dbgfs_dir);
  
#line 2370 
  if (dir_rf == (struct dentry *)0) 
#line 2371 
                                    goto err; else ;
  
#line 2372 
  dir_debug = debugfs_create_dir("debug",dbgfs_dir);
  
#line 2373 
  if (dir_debug == (struct dentry *)0) 
#line 2374 
                                       goto err; else ;
  
#line 2376 
  tmp = ldv_debugfs_create_file_92("nvm",(unsigned short)256,dir_data,(void *)priv,& iwl_dbgfs_nvm_ops);
  
#line 2376 
  if (tmp == (struct dentry *)0) 
#line 2376 
                                 goto err; else ;
  
#line 2377 
  tmp_0 = ldv_debugfs_create_file_93("sram",(unsigned short)384,dir_data,(void *)priv,& iwl_dbgfs_sram_ops);
  
#line 2377 
  if (tmp_0 == (struct dentry *)0) 
#line 2377 
                                   goto err; else ;
  
#line 2378 
  tmp_1 = ldv_debugfs_create_file_94("wowlan_sram",(unsigned short)256,dir_data,(void *)priv,& iwl_dbgfs_wowlan_sram_ops);
  
#line 2378 
  if (tmp_1 == (struct dentry *)0) 
#line 2378 
                                   goto err; else ;
  
#line 2379 
  tmp_2 = ldv_debugfs_create_file_95("stations",(unsigned short)256,dir_data,(void *)priv,& iwl_dbgfs_stations_ops);
  
#line 2379 
  if (tmp_2 == (struct dentry *)0) 
#line 2379 
                                   goto err; else ;
  
#line 2380 
  tmp_3 = ldv_debugfs_create_file_96("channels",(unsigned short)256,dir_data,(void *)priv,& iwl_dbgfs_channels_ops);
  
#line 2380 
  if (tmp_3 == (struct dentry *)0) 
#line 2380 
                                   goto err; else ;
  
#line 2381 
  tmp_4 = ldv_debugfs_create_file_97("status",(unsigned short)256,dir_data,(void *)priv,& iwl_dbgfs_status_ops);
  
#line 2381 
  if (tmp_4 == (struct dentry *)0) 
#line 2381 
                                   goto err; else ;
  
#line 2382 
  tmp_5 = ldv_debugfs_create_file_98("rx_handlers",(unsigned short)384,dir_data,(void *)priv,& iwl_dbgfs_rx_handlers_ops);
  
#line 2382 
  if (tmp_5 == (struct dentry *)0) 
#line 2382 
                                   goto err; else ;
  
#line 2383 
  tmp_6 = ldv_debugfs_create_file_99("qos",(unsigned short)256,dir_data,(void *)priv,& iwl_dbgfs_qos_ops);
  
#line 2383 
  if (tmp_6 == (struct dentry *)0) 
#line 2383 
                                   goto err; else ;
  
#line 2384 
  tmp_7 = ldv_debugfs_create_file_100("sleep_level_override",(unsigned short)384,dir_data,(void *)priv,& iwl_dbgfs_sleep_level_override_ops);
  
#line 2384 
  if (tmp_7 == (struct dentry *)0) 
#line 2384 
                                   goto err; else ;
  
#line 2385 
  tmp_8 = ldv_debugfs_create_file_101("current_sleep_command",(unsigned short)256,dir_data,(void *)priv,& iwl_dbgfs_current_sleep_command_ops);
  
#line 2385 
  if (tmp_8 == (struct dentry *)0) 
#line 2385 
                                   goto err; else ;
  
#line 2386 
  tmp_9 = ldv_debugfs_create_file_102("thermal_throttling",(unsigned short)256,dir_data,(void *)priv,& iwl_dbgfs_thermal_throttling_ops);
  
#line 2386 
  if (tmp_9 == (struct dentry *)0) 
#line 2386 
                                   goto err; else ;
  
#line 2387 
  tmp_10 = ldv_debugfs_create_file_103("disable_ht40",(unsigned short)384,dir_data,(void *)priv,& iwl_dbgfs_disable_ht40_ops);
  
#line 2387 
  if (tmp_10 == (struct dentry *)0) 
#line 2387 
                                    goto err; else ;
  
#line 2388 
  tmp_11 = ldv_debugfs_create_file_104("temperature",(unsigned short)256,dir_data,(void *)priv,& iwl_dbgfs_temperature_ops);
  
#line 2388 
  if (tmp_11 == (struct dentry *)0) 
#line 2388 
                                    goto err; else ;
  
#line 2390 
  tmp_12 = ldv_debugfs_create_file_105("power_save_status",(unsigned short)256,dir_debug,(void *)priv,& iwl_dbgfs_power_save_status_ops);
  
#line 2390 
  if (tmp_12 == (struct dentry *)0) 
#line 2390 
                                    goto err; else ;
  
#line 2391 
  tmp_13 = ldv_debugfs_create_file_106("clear_ucode_statistics",(unsigned short)128,dir_debug,(void *)priv,& iwl_dbgfs_clear_ucode_statistics_ops);
  
#line 2391 
  if (tmp_13 == (struct dentry *)0) 
#line 2391 
                                    goto err; else ;
  
#line 2392 
  tmp_14 = ldv_debugfs_create_file_107("missed_beacon",(unsigned short)128,dir_debug,(void *)priv,& iwl_dbgfs_missed_beacon_ops);
  
#line 2392 
  if (tmp_14 == (struct dentry *)0) 
#line 2392 
                                    goto err; else ;
  
#line 2393 
  tmp_15 = ldv_debugfs_create_file_108("plcp_delta",(unsigned short)384,dir_debug,(void *)priv,& iwl_dbgfs_plcp_delta_ops);
  
#line 2393 
  if (tmp_15 == (struct dentry *)0) 
#line 2393 
                                    goto err; else ;
  
#line 2394 
  tmp_16 = ldv_debugfs_create_file_109("rf_reset",(unsigned short)384,dir_debug,(void *)priv,& iwl_dbgfs_rf_reset_ops);
  
#line 2394 
  if (tmp_16 == (struct dentry *)0) 
#line 2394 
                                    goto err; else ;
  
#line 2395 
  tmp_17 = ldv_debugfs_create_file_110("ucode_rx_stats",(unsigned short)256,dir_debug,(void *)priv,& iwl_dbgfs_ucode_rx_stats_ops);
  
#line 2395 
  if (tmp_17 == (struct dentry *)0) 
#line 2395 
                                    goto err; else ;
  
#line 2396 
  tmp_18 = ldv_debugfs_create_file_111("ucode_tx_stats",(unsigned short)256,dir_debug,(void *)priv,& iwl_dbgfs_ucode_tx_stats_ops);
  
#line 2396 
  if (tmp_18 == (struct dentry *)0) 
#line 2396 
                                    goto err; else ;
  
#line 2397 
  tmp_19 = ldv_debugfs_create_file_112("ucode_general_stats",(unsigned short)256,dir_debug,(void *)priv,& iwl_dbgfs_ucode_general_stats_ops);
  
#line 2397 
  if (tmp_19 == (struct dentry *)0) 
#line 2397 
                                    goto err; else ;
  
#line 2398 
  tmp_20 = ldv_debugfs_create_file_113("txfifo_flush",(unsigned short)128,dir_debug,(void *)priv,& iwl_dbgfs_txfifo_flush_ops);
  
#line 2398 
  if (tmp_20 == (struct dentry *)0) 
#line 2398 
                                    goto err; else ;
  
#line 2399 
  tmp_21 = ldv_debugfs_create_file_114("protection_mode",(unsigned short)384,dir_debug,(void *)priv,& iwl_dbgfs_protection_mode_ops);
  
#line 2399 
  if (tmp_21 == (struct dentry *)0) 
#line 2399 
                                    goto err; else ;
  
#line 2400 
  tmp_22 = ldv_debugfs_create_file_115("sensitivity",(unsigned short)256,dir_debug,(void *)priv,& iwl_dbgfs_sensitivity_ops);
  
#line 2400 
  if (tmp_22 == (struct dentry *)0) 
#line 2400 
                                    goto err; else ;
  
#line 2401 
  tmp_23 = ldv_debugfs_create_file_116("chain_noise",(unsigned short)256,dir_debug,(void *)priv,& iwl_dbgfs_chain_noise_ops);
  
#line 2401 
  if (tmp_23 == (struct dentry *)0) 
#line 2401 
                                    goto err; else ;
  
#line 2402 
  tmp_24 = ldv_debugfs_create_file_117("ucode_tracing",(unsigned short)384,dir_debug,(void *)priv,& iwl_dbgfs_ucode_tracing_ops);
  
#line 2402 
  if (tmp_24 == (struct dentry *)0) 
#line 2402 
                                    goto err; else ;
  
#line 2403 
  tmp_25 = ldv_debugfs_create_file_118("ucode_bt_stats",(unsigned short)256,dir_debug,(void *)priv,& iwl_dbgfs_ucode_bt_stats_ops);
  
#line 2403 
  if (tmp_25 == (struct dentry *)0) 
#line 2403 
                                    goto err; else ;
  
#line 2404 
  tmp_26 = ldv_debugfs_create_file_119("reply_tx_error",(unsigned short)256,dir_debug,(void *)priv,& iwl_dbgfs_reply_tx_error_ops);
  
#line 2404 
  if (tmp_26 == (struct dentry *)0) 
#line 2404 
                                    goto err; else ;
  
#line 2405 
  tmp_27 = ldv_debugfs_create_file_120("rxon_flags",(unsigned short)128,dir_debug,(void *)priv,& iwl_dbgfs_rxon_flags_ops);
  
#line 2405 
  if (tmp_27 == (struct dentry *)0) 
#line 2405 
                                    goto err; else ;
  
#line 2406 
  tmp_28 = ldv_debugfs_create_file_121("rxon_filter_flags",(unsigned short)128,dir_debug,(void *)priv,& iwl_dbgfs_rxon_filter_flags_ops);
  
#line 2406 
  if (tmp_28 == (struct dentry *)0) 
#line 2406 
                                    goto err; else ;
  
#line 2407 
  tmp_29 = ldv_debugfs_create_file_122("echo_test",(unsigned short)128,dir_debug,(void *)priv,& iwl_dbgfs_echo_test_ops);
  
#line 2407 
  if (tmp_29 == (struct dentry *)0) 
#line 2407 
                                    goto err; else ;
  
#line 2408 
  tmp_30 = ldv_debugfs_create_file_123("fw_restart",(unsigned short)128,dir_debug,(void *)priv,& iwl_dbgfs_fw_restart_ops);
  
#line 2408 
  if (tmp_30 == (struct dentry *)0) 
#line 2408 
                                    goto err; else ;
  
#line 2410 
  tmp_31 = ldv_debugfs_create_file_124("log_event",(unsigned short)384,dir_debug,(void *)priv,& iwl_dbgfs_log_event_ops);
  
#line 2410 
  if (tmp_31 == (struct dentry *)0) 
#line 2410 
                                    goto err; else ;
  
#line 2413 
  tmp_33 = iwl_advanced_bt_coexist(priv);
  
#line 2413 
  if ((int)tmp_33 != 0) {
    struct dentry *tmp_32;
    
#line 2414 
    tmp_32 = ldv_debugfs_create_file_125("bt_traffic",(unsigned short)256,dir_debug,(void *)priv,& iwl_dbgfs_bt_traffic_ops);
    
#line 2414 
    if (tmp_32 == (struct dentry *)0) 
#line 2414 
                                      goto err; else ;
  }
  else ;
  
#line 2417 
  tmp_34 = ldv_debugfs_create_file_126("calib_disabled",(unsigned short)384,dir_rf,(void *)priv,& iwl_dbgfs_calib_disabled_ops);
  
#line 2417 
  if (tmp_34 == (struct dentry *)0) 
#line 2417 
                                    goto err; else ;
  
#line 2425 
  if ((unsigned int)priv->mac80211_registered != 0U) {
    char buf[100U];
    struct dentry *mac80211_dir;
    struct dentry *dev_dir;
    struct dentry *root_dir;
    struct dentry *tmp_35;
    
#line 2429 
    dev_dir = dbgfs_dir->d_parent;
    
#line 2430 
    root_dir = dev_dir->d_parent;
    
#line 2431 
    mac80211_dir = ((priv->hw)->wiphy)->debugfsdir;
    
#line 2433 
    snprintf((char *)(& buf),100UL,"../../%s/%s",root_dir->d_name.name,dev_dir->d_name.name);
    
#line 2436 
    tmp_35 = debugfs_create_symlink("iwlwifi",mac80211_dir,(char const *)(& buf));
    
#line 2436 
    if (tmp_35 == (struct dentry *)0) 
#line 2437 
                                      goto err; else ;
  }
  else ;
  
#line 2440 
  __retres = 0;
  
#line 2440 
  goto return_label;
  err: 
#line 2442 
  ;
  {
    
#line 2443 
    bool __cond = (_Bool)((int)*("failed to create the dvm debugfs entries\n" + 40UL) != 10);
    
#line 2443 
    if ((int)__cond != 0) 
#line 2443 
                          __compiletime_assert_2443(); else ;
  }
  
#line 2443 
  __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"failed to create the dvm debugfs entries\n");
  
#line 2444 
  __retres = -12;
  return_label: 
#line 2444 
                return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_txfifo_flush_ops_2 = (struct file_operations *)(& iwl_dbgfs_txfifo_flush_ops);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_ucode_bt_stats_ops_2 = (struct file_operations *)(& iwl_dbgfs_ucode_bt_stats_ops);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_calib_disabled_ops_2 = (struct file_operations *)(& iwl_dbgfs_calib_disabled_ops);

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_current_sleep_command_ops_2 = (struct file_operations *)(& iwl_dbgfs_current_sleep_command_ops);

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_chain_noise_ops_2 = (struct file_operations *)(& iwl_dbgfs_chain_noise_ops);

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_sram_ops_2 = (struct file_operations *)(& iwl_dbgfs_sram_ops);

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_nvm_ops_2 = (struct file_operations *)(& iwl_dbgfs_nvm_ops);

#line 63  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_log_event_ops_2 = (struct file_operations *)(& iwl_dbgfs_log_event_ops);

#line 64  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_sensitivity_ops_2 = (struct file_operations *)(& iwl_dbgfs_sensitivity_ops);

#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_wowlan_sram_ops_2 = (struct file_operations *)(& iwl_dbgfs_wowlan_sram_ops);

#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_temperature_ops_2 = (struct file_operations *)(& iwl_dbgfs_temperature_ops);

#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_ucode_tx_stats_ops_2 = (struct file_operations *)(& iwl_dbgfs_ucode_tx_stats_ops);

#line 68  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
int (*ldv_emg_alias_simple_open_5)(struct inode *, struct file *) = & simple_open;

#line 69  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_plcp_delta_ops_2 = (struct file_operations *)(& iwl_dbgfs_plcp_delta_ops);

#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_sleep_level_override_ops_2 = (struct file_operations *)(& iwl_dbgfs_sleep_level_override_ops);

#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_rxon_filter_flags_ops_2 = (struct file_operations *)(& iwl_dbgfs_rxon_filter_flags_ops);

#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_bt_traffic_ops_2 = (struct file_operations *)(& iwl_dbgfs_bt_traffic_ops);

#line 73  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long long (*ldv_emg_alias_generic_file_llseek_3)(struct file *, long long , int ) = & generic_file_llseek;

#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_stations_ops_2 = (struct file_operations *)(& iwl_dbgfs_stations_ops);

#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_echo_test_ops_2 = (struct file_operations *)(& iwl_dbgfs_echo_test_ops);

#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_qos_ops_2 = (struct file_operations *)(& iwl_dbgfs_qos_ops);

#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_ucode_tracing_ops_2 = (struct file_operations *)(& iwl_dbgfs_ucode_tracing_ops);

#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_status_ops_2 = (struct file_operations *)(& iwl_dbgfs_status_ops);

#line 79  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_fw_restart_ops_2 = (struct file_operations *)(& iwl_dbgfs_fw_restart_ops);

#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_thermal_throttling_ops_2 = (struct file_operations *)(& iwl_dbgfs_thermal_throttling_ops);

#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_ucode_general_stats_ops_2 = (struct file_operations *)(& iwl_dbgfs_ucode_general_stats_ops);

#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_reply_tx_error_ops_2 = (struct file_operations *)(& iwl_dbgfs_reply_tx_error_ops);

#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_rf_reset_ops_2 = (struct file_operations *)(& iwl_dbgfs_rf_reset_ops);

#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_missed_beacon_ops_2 = (struct file_operations *)(& iwl_dbgfs_missed_beacon_ops);

#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_rxon_flags_ops_2 = (struct file_operations *)(& iwl_dbgfs_rxon_flags_ops);

#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_protection_mode_ops_2 = (struct file_operations *)(& iwl_dbgfs_protection_mode_ops);

#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_ucode_rx_stats_ops_2 = (struct file_operations *)(& iwl_dbgfs_ucode_rx_stats_ops);

#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_disable_ht40_ops_2 = (struct file_operations *)(& iwl_dbgfs_disable_ht40_ops);

#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_clear_ucode_statistics_ops_2 = (struct file_operations *)(& iwl_dbgfs_clear_ucode_statistics_ops);

#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_channels_ops_2 = (struct file_operations *)(& iwl_dbgfs_channels_ops);

#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_power_save_status_ops_2 = (struct file_operations *)(& iwl_dbgfs_power_save_status_ops);

#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
struct file_operations *ldv_emg_alias_iwl_dbgfs_rx_handlers_ops_2 = (struct file_operations *)(& iwl_dbgfs_rx_handlers_ops);

#line 98 
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_status_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 107 
  tmp = iwl_dbgfs_status_read(arg0,arg1,arg2,arg3);
  
#line 107 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_sensitivity_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 112 
  tmp = iwl_dbgfs_sensitivity_read(arg0,arg1,arg2,arg3);
  
#line 112 
  return tmp;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_sleep_level_override_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 117 
  tmp = iwl_dbgfs_sleep_level_override_read(arg0,arg1,arg2,arg3);
  
#line 117 
  return tmp;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_ucode_tracing_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 122 
  tmp = iwl_dbgfs_ucode_tracing_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 122 
  return tmp;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_ucode_general_stats_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 127 
  tmp = iwl_dbgfs_ucode_general_stats_read(arg0,arg1,arg2,arg3);
  
#line 127 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_power_save_status_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 132 
  tmp = iwl_dbgfs_power_save_status_read(arg0,arg1,arg2,arg3);
  
#line 132 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_disable_ht40_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 137 
  tmp = iwl_dbgfs_disable_ht40_read(arg0,arg1,arg2,arg3);
  
#line 137 
  return tmp;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_ucode_tracing_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 142 
  tmp = iwl_dbgfs_ucode_tracing_read(arg0,arg1,arg2,arg3);
  
#line 142 
  return tmp;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_ucode_rx_stats_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 147 
  tmp = iwl_dbgfs_ucode_rx_stats_read(arg0,arg1,arg2,arg3);
  
#line 147 
  return tmp;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_rx_handlers_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 152 
  tmp = iwl_dbgfs_rx_handlers_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 152 
  return tmp;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_current_sleep_command_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 157 
  tmp = iwl_dbgfs_current_sleep_command_read(arg0,arg1,arg2,arg3);
  
#line 157 
  return tmp;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_sram_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 162 
  tmp = iwl_dbgfs_sram_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 162 
  return tmp;
}


#line 166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_protection_mode_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 167 
  tmp = iwl_dbgfs_protection_mode_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 167 
  return tmp;
}


#line 171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_plcp_delta_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 172 
  tmp = iwl_dbgfs_plcp_delta_read(arg0,arg1,arg2,arg3);
  
#line 172 
  return tmp;
}


#line 176  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_sram_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 177 
  tmp = iwl_dbgfs_sram_read(arg0,arg1,arg2,arg3);
  
#line 177 
  return tmp;
}


#line 181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_calib_disabled_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 182 
  tmp = iwl_dbgfs_calib_disabled_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 182 
  return tmp;
}


#line 186  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_txfifo_flush_write_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 187 
  tmp = iwl_dbgfs_txfifo_flush_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 187 
  return tmp;
}


#line 191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_fw_restart_write_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 192 
  tmp = iwl_dbgfs_fw_restart_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 192 
  return tmp;
}


#line 196  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_protection_mode_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 197 
  tmp = iwl_dbgfs_protection_mode_read(arg0,arg1,arg2,arg3);
  
#line 197 
  return tmp;
}


#line 201  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_calib_disabled_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 202 
  tmp = iwl_dbgfs_calib_disabled_read(arg0,arg1,arg2,arg3);
  
#line 202 
  return tmp;
}


#line 206  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_plcp_delta_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 207 
  tmp = iwl_dbgfs_plcp_delta_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 207 
  return tmp;
}


#line 211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_channels_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 212 
  tmp = iwl_dbgfs_channels_read(arg0,arg1,arg2,arg3);
  
#line 212 
  return tmp;
}


#line 216  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_qos_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 217 
  tmp = iwl_dbgfs_qos_read(arg0,arg1,arg2,arg3);
  
#line 217 
  return tmp;
}


#line 221  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_missed_beacon_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 222 
  tmp = iwl_dbgfs_missed_beacon_read(arg0,arg1,arg2,arg3);
  
#line 222 
  return tmp;
}


#line 226  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_thermal_throttling_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 227 
  tmp = iwl_dbgfs_thermal_throttling_read(arg0,arg1,arg2,arg3);
  
#line 227 
  return tmp;
}


#line 231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_nvm_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 232 
  tmp = iwl_dbgfs_nvm_read(arg0,arg1,arg2,arg3);
  
#line 232 
  return tmp;
}


#line 236  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_log_event_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 237 
  tmp = iwl_dbgfs_log_event_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 237 
  return tmp;
}


#line 241  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_stations_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 242 
  tmp = iwl_dbgfs_stations_read(arg0,arg1,arg2,arg3);
  
#line 242 
  return tmp;
}


#line 246  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_chain_noise_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 247 
  tmp = iwl_dbgfs_chain_noise_read(arg0,arg1,arg2,arg3);
  
#line 247 
  return tmp;
}


#line 251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_reply_tx_error_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 252 
  tmp = iwl_dbgfs_reply_tx_error_read(arg0,arg1,arg2,arg3);
  
#line 252 
  return tmp;
}


#line 256  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_log_event_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 257 
  tmp = iwl_dbgfs_log_event_read(arg0,arg1,arg2,arg3);
  
#line 257 
  return tmp;
}


#line 261  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_clear_ucode_statistics_write_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 262 
  tmp = iwl_dbgfs_clear_ucode_statistics_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 262 
  return tmp;
}


#line 266  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_sleep_level_override_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 267 
  tmp = iwl_dbgfs_sleep_level_override_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 267 
  return tmp;
}


#line 271  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_rx_handlers_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 272 
  tmp = iwl_dbgfs_rx_handlers_read(arg0,arg1,arg2,arg3);
  
#line 272 
  return tmp;
}


#line 276  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_rxon_flags_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 277 
  tmp = iwl_dbgfs_rxon_flags_read(arg0,arg1,arg2,arg3);
  
#line 277 
  return tmp;
}


#line 281  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_temperature_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 282 
  tmp = iwl_dbgfs_temperature_read(arg0,arg1,arg2,arg3);
  
#line 282 
  return tmp;
}


#line 286  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_disable_ht40_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 287 
  tmp = iwl_dbgfs_disable_ht40_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 287 
  return tmp;
}


#line 291  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_missed_beacon_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 292 
  tmp = iwl_dbgfs_missed_beacon_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 292 
  return tmp;
}


#line 296  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_echo_test_write_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 297 
  tmp = iwl_dbgfs_echo_test_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 297 
  return tmp;
}


#line 301  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_wowlan_sram_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 302 
  tmp = iwl_dbgfs_wowlan_sram_read(arg0,arg1,arg2,arg3);
  
#line 302 
  return tmp;
}


#line 306  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_rf_reset_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 307 
  tmp = iwl_dbgfs_rf_reset_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 307 
  return tmp;
}


#line 311  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_rxon_filter_flags_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 312 
  tmp = iwl_dbgfs_rxon_filter_flags_read(arg0,arg1,arg2,arg3);
  
#line 312 
  return tmp;
}


#line 316  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_rf_reset_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 317 
  tmp = iwl_dbgfs_rf_reset_read(arg0,arg1,arg2,arg3);
  
#line 317 
  return tmp;
}


#line 321  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_ucode_tx_stats_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 322 
  tmp = iwl_dbgfs_ucode_tx_stats_read(arg0,arg1,arg2,arg3);
  
#line 322 
  return tmp;
}


#line 326  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_bt_traffic_read_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 327 
  tmp = iwl_dbgfs_bt_traffic_read(arg0,arg1,arg2,arg3);
  
#line 327 
  return tmp;
}


#line 331  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
long ldv_emg_wrapper_iwl_dbgfs_ucode_bt_stats_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 332 
  tmp = iwl_dbgfs_ucode_bt_stats_read(arg0,arg1,arg2,arg3);
  
#line 332 
  return tmp;
}


#line 685  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void *kmalloc_3(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 688 
  tmp = ldv_kmalloc(size,flags);
  
#line 688 
  return tmp;
}


#line 706  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void *kzalloc_3(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 709 
  tmp = ldv_kzalloc(size,flags);
  
#line 709 
  return tmp;
}


#line 1023  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_mutex_lock_74_2(struct mutex *ldv_func_arg1)
{
  
#line 1027 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1028 
  return;
}


#line 1031  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_mutex_unlock_75_2(struct mutex *ldv_func_arg1)
{
  
#line 1035 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1036 
  return;
}


#line 1039  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_spin_lock_bh_76(spinlock_t *lock)
{
  
#line 1043 
  ldv_spin_model_lock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 1045 
  spin_lock_bh_1(lock);
  
#line 1046 
  return;
}


#line 1049  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_spin_unlock_bh_77(spinlock_t *lock)
{
  
#line 1053 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 1055 
  spin_unlock_bh_1(lock);
  
#line 1056 
  return;
}


#line 1059  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_spin_lock_bh_78(spinlock_t *lock)
{
  
#line 1063 
  ldv_spin_model_lock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 1065 
  spin_lock_bh_1(lock);
  
#line 1066 
  return;
}


#line 1069  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_spin_unlock_bh_79(spinlock_t *lock)
{
  
#line 1073 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 1075 
  spin_unlock_bh_1(lock);
  
#line 1076 
  return;
}


#line 1079  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_spin_lock_bh_80(spinlock_t *lock)
{
  
#line 1083 
  ldv_spin_model_lock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 1085 
  spin_lock_bh_1(lock);
  
#line 1086 
  return;
}


#line 1089  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_spin_unlock_bh_81(spinlock_t *lock)
{
  
#line 1093 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 1095 
  spin_unlock_bh_1(lock);
  
#line 1096 
  return;
}


#line 1099  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_mutex_lock_82_0(struct mutex *ldv_func_arg1)
{
  
#line 1103 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1104 
  return;
}


#line 1107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_mutex_unlock_83_0(struct mutex *ldv_func_arg1)
{
  
#line 1111 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1112 
  return;
}


#line 1115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_spin_lock_bh_84(spinlock_t *lock)
{
  
#line 1119 
  ldv_spin_model_lock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 1121 
  spin_lock_bh_1(lock);
  
#line 1122 
  return;
}


#line 1125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_spin_unlock_bh_85(spinlock_t *lock)
{
  
#line 1129 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 1131 
  spin_unlock_bh_1(lock);
  
#line 1132 
  return;
}


#line 1135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_mutex_lock_86_0(struct mutex *ldv_func_arg1)
{
  
#line 1139 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1140 
  return;
}


#line 1143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_mutex_unlock_87_0(struct mutex *ldv_func_arg1)
{
  
#line 1147 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1148 
  return;
}


#line 1151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static int ldv_mod_timer_88(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1155 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1155 
  return tmp;
}


#line 1159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static int ldv_del_timer_sync_89_0(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1163 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1163 
  return tmp;
}


#line 1167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1)
{
  
#line 1171 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1172 
  return;
}


#line 1175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static void ldv_mutex_unlock_91_0(struct mutex *ldv_func_arg1)
{
  
#line 1179 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 1180 
  return;
}


#line 1183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_92(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1187 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1187 
  return tmp;
}


#line 1191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_93(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1195 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1195 
  return tmp;
}


#line 1199  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_94(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1203 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1203 
  return tmp;
}


#line 1207  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_95(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1211 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1211 
  return tmp;
}


#line 1215  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_96(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1219 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1219 
  return tmp;
}


#line 1223  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_97(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1227 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1227 
  return tmp;
}


#line 1231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_98(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1235 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1235 
  return tmp;
}


#line 1239  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_99(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1243 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1243 
  return tmp;
}


#line 1247  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_100(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1251 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1251 
  return tmp;
}


#line 1255  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_101(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1259 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1259 
  return tmp;
}


#line 1263  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_102(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1267 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1267 
  return tmp;
}


#line 1271  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_103(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1275 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1275 
  return tmp;
}


#line 1279  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_104(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1283 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1283 
  return tmp;
}


#line 1287  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_105(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1291 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1291 
  return tmp;
}


#line 1295  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_106(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1299 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1299 
  return tmp;
}


#line 1303  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_107(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1307 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1307 
  return tmp;
}


#line 1311  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_108(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1315 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1315 
  return tmp;
}


#line 1319  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_109(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1323 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1323 
  return tmp;
}


#line 1327  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_110(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1331 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1331 
  return tmp;
}


#line 1335  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_111(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1339 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1339 
  return tmp;
}


#line 1343  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_112(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1347 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1347 
  return tmp;
}


#line 1351  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_113(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1355 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1355 
  return tmp;
}


#line 1359  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_114(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1363 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1363 
  return tmp;
}


#line 1367  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_115(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1371 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1371 
  return tmp;
}


#line 1375  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_116(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1379 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1379 
  return tmp;
}


#line 1383  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_117(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1387 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1387 
  return tmp;
}


#line 1391  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_118(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1395 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1395 
  return tmp;
}


#line 1399  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_119(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1403 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1403 
  return tmp;
}


#line 1407  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_120(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1411 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1411 
  return tmp;
}


#line 1415  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_121(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1419 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1419 
  return tmp;
}


#line 1423  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_122(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1427 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1427 
  return tmp;
}


#line 1431  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_123(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1435 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1435 
  return tmp;
}


#line 1439  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_124(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1443 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1443 
  return tmp;
}


#line 1447  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_125(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1451 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1451 
  return tmp;
}


#line 1455  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_126(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1459 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1459 
  return tmp;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_next_bit(unsigned long const *, unsigned long, unsigned long);


#line 42 
unsigned long find_first_bit(unsigned long const *, unsigned long);


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
static bool ldv_queue_work_74_0(struct workqueue_struct *wq, struct work_struct *work);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_4(size_t size, gfp_t flags);


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_a4(__le16 fc)
{
  int __retres;
  
#line 273 
  __le16 tmp = (unsigned short)768U;
  
#line 274 
  __retres = ((int)fc & (int)tmp) == (int)tmp;
  
#line 274 
  return __retres;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_data(__le16 fc)
{
  int __retres;
  
#line 357 
  __retres = ((int)fc & 12) == 8;
  
#line 357 
  return __retres;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_data_qos(__le16 fc)
{
  int __retres;
  
#line 371 
  __retres = ((int)fc & 140) == 136;
  
#line 371 
  return __retres;
}


#line 2329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static u8 *ieee80211_get_qos_ctl(struct ieee80211_hdr *hdr)
{
  u8 *__retres;
  int tmp;
  
#line 2331 
  tmp = ieee80211_has_a4((unsigned short)((int)hdr->frame_control));
  
#line 2331 
  if (tmp != 0) {
    
#line 2332 
    __retres = (u8 *)hdr + 30U;
    
#line 2332 
    goto return_label;
  }
  else {
    
#line 2334 
    __retres = (u8 *)hdr + 24U;
    
#line 2334 
    goto return_label;
  }
  return_label: 
#line 2331 
                return __retres;
}


#line 2547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
loff_t default_llseek(struct file *, loff_t, int);


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
static struct dentry *ldv_debugfs_create_file_75(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 58 
static struct dentry *ldv_debugfs_create_file_76(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 62 
static struct dentry *ldv_debugfs_create_file_77(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 83 
static void ldv_debugfs_remove_78(struct dentry *ldv_func_arg1);


#line 87 
static void ldv_debugfs_remove_79(struct dentry *ldv_func_arg1);


#line 91 
static void ldv_debugfs_remove_80(struct dentry *ldv_func_arg1);


#line 95 
static void ldv_debugfs_remove_81(struct dentry *ldv_func_arg1);


#line 102 
struct dentry *debugfs_create_u8(char const *, umode_t, struct dentry *, u8 *);


#line 4694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
int ieee80211_start_tx_ba_session(struct ieee80211_sta *, u16, u16);


#line 4721 
int ieee80211_stop_tx_ba_session(struct ieee80211_sta *, u16);


#line 5148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static int rate_supported(struct ieee80211_sta *sta, enum ieee80211_band band, int index)
{
  int __retres;
  
#line 5152 
  __retres = (sta == (struct ieee80211_sta *)0 || (((unsigned long)sta->supp_rates[(unsigned int)band] >> index) & 1UL) != 0UL) != 0;
  
#line 5152 
  return __retres;
}


#line 5173 
bool rate_control_send_low(struct ieee80211_sta *, void *, struct ieee80211_tx_rate_control *);


#line 5179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static s8 rate_lowest_index(struct ieee80211_supported_band *sband, struct ieee80211_sta *sta)
{
  s8 __retres;
  int i;
  int tmp;
  
#line 5184 
  i = 0;
  
#line 5184 
  goto ldv_48911;
  ldv_48910: 
#line 5185 
  ;
  
#line 5185 
  tmp = rate_supported(sta,sband->band,i);
  
#line 5185 
  if (tmp != 0) {
    
#line 5186 
    __retres = (signed char)i;
    
#line 5186 
    goto return_label;
  }
  else ;
  
#line 5184 
  i += 1;
  ldv_48911: 
#line 5185 
  ;
  
#line 5184 
  if (sband->n_bitrates > i) 
#line 5186 
                             goto ldv_48910; else 
#line 5189 
                                                  goto ldv_48912;
  ldv_48912: 
#line 5190 
  ;
  {
    bool __warned;
    
#line 5189 
    int __ret_warn_once = 1;
    
#line 5189 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp_0;
      {
        
#line 5189 
        int __ret_warn_on = ! __warned;
        
#line 5189 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 5189 
                                              warn_slowpath_null("include/net/mac80211.h",5189); else ;
        
#line 5189 
        tmp_0 = (long)(__ret_warn_on != 0);
      }
      
#line 5189 
      if ((long)tmp_0 != 0L) 
#line 5189 
                             __warned = (_Bool)1; else ;
    }
    else ;
    
#line 5189 
    long tmp_2 = (long)(__ret_warn_once != 0);
  }
  
#line 5192 
  __retres = (signed char)0;
  return_label: 
#line 5192 
                return __retres;
}


#line 5223 
int ieee80211_rate_control_register(struct rate_control_ops const *);


#line 5224 
void ieee80211_rate_control_unregister(struct rate_control_ops const *);


#line 5253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static bool conf_is_ht(struct ieee80211_conf *conf)
{
  bool __retres;
  
#line 5256 
  __retres = (_Bool)(((unsigned int)conf->chandef.width + 4294967290U > 1U && conf->chandef.width != (unsigned int)NL80211_CHAN_WIDTH_20_NOHT) != 0);
  
#line 5256 
  return __retres;
}


#line 340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
bool iwl_is_ht40_tx_allowed(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_sta *sta);


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u8 rs_ht_to_legacy[13U] = {(unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u8 const ant_toggle_lookup[8U] = {(unsigned char)0U, (unsigned char)2U, (unsigned char)4U, (unsigned char)6U, (unsigned char)1U, (unsigned char)3U, (unsigned char)5U, (unsigned char)7U};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
struct iwl_rate_info const iwl_rates[13U] = {{.plcp = (unsigned char)10U, .plcp_siso = (unsigned char)24U, .plcp_mimo2 = (unsigned char)24U, .plcp_mimo3 = (unsigned char)24U, .ieee = (unsigned char)2U, .prev_ieee = (unsigned char)13U, .next_ieee = (unsigned char)1U, .prev_rs = (unsigned char)13U, .next_rs = (unsigned char)1U, .prev_rs_tgg = (unsigned char)13U, .next_rs_tgg = (unsigned char)1U}, {.plcp = (unsigned char)20U, .plcp_siso = (unsigned char)24U, .plcp_mimo2 = (unsigned char)24U, .plcp_mimo3 = (unsigned char)24U, .ieee = (unsigned char)4U, .prev_ieee = (unsigned char)0U, .next_ieee = (unsigned char)2U, .prev_rs = (unsigned char)0U, .next_rs = (unsigned char)2U, .prev_rs_tgg = (unsigned char)0U, .next_rs_tgg = (unsigned char)2U}, {.plcp = (unsigned char)55U, .plcp_siso = (unsigned char)24U, .plcp_mimo2 = (unsigned char)24U, .plcp_mimo3 = (unsigned char)24U, .ieee = (unsigned char)11U, .prev_ieee = (unsigned char)1U, .next_ieee = (unsigned char)4U, .prev_rs = (unsigned char)1U, .next_rs = (unsigned char)3U, .prev_rs_tgg = (unsigned char)1U, .next_rs_tgg = (unsigned char)3U}, {.plcp = (unsigned char)110U, .plcp_siso = (unsigned char)24U, .plcp_mimo2 = (unsigned char)24U, .plcp_mimo3 = (unsigned char)24U, .ieee = (unsigned char)22U, .prev_ieee = (unsigned char)5U, .next_ieee = (unsigned char)6U, .prev_rs = (unsigned char)5U, .next_rs = (unsigned char)6U, .prev_rs_tgg = (unsigned char)2U, .next_rs_tgg = (unsigned char)7U}, {.plcp = (unsigned char)13U, .plcp_siso = (unsigned char)0U, .plcp_mimo2 = (unsigned char)8U, .plcp_mimo3 = (unsigned char)16U, .ieee = (unsigned char)12U, .prev_ieee = (unsigned char)2U, .next_ieee = (unsigned char)5U, .prev_rs = (unsigned char)2U, .next_rs = (unsigned char)3U, .prev_rs_tgg = (unsigned char)2U, .next_rs_tgg = (unsigned char)3U}, {.plcp = (unsigned char)15U, .plcp_siso = (unsigned char)0U, .plcp_mimo2 = (unsigned char)8U, .plcp_mimo3 = (unsigned char)16U, .ieee = (unsigned char)18U, .prev_ieee = (unsigned char)4U, .next_ieee = (unsigned char)3U, .prev_rs = (unsigned char)4U, .next_rs = (unsigned char)3U, .prev_rs_tgg = (unsigned char)2U, .next_rs_tgg = (unsigned char)3U}, {.plcp = (unsigned char)5U, .plcp_siso = (unsigned char)1U, .plcp_mimo2 = (unsigned char)9U, .plcp_mimo3 = (unsigned char)17U, .ieee = (unsigned char)24U, .prev_ieee = (unsigned char)3U, .next_ieee = (unsigned char)7U, .prev_rs = (unsigned char)3U, .next_rs = (unsigned char)7U, .prev_rs_tgg = (unsigned char)3U, .next_rs_tgg = (unsigned char)7U}, {.plcp = (unsigned char)7U, .plcp_siso = (unsigned char)2U, .plcp_mimo2 = (unsigned char)10U, .plcp_mimo3 = (unsigned char)18U, .ieee = (unsigned char)36U, .prev_ieee = (unsigned char)6U, .next_ieee = (unsigned char)8U, .prev_rs = (unsigned char)6U, .next_rs = (unsigned char)8U, .prev_rs_tgg = (unsigned char)3U, .next_rs_tgg = (unsigned char)8U}, {.plcp = (unsigned char)9U, .plcp_siso = (unsigned char)3U, .plcp_mimo2 = (unsigned char)11U, .plcp_mimo3 = (unsigned char)19U, .ieee = (unsigned char)48U, .prev_ieee = (unsigned char)7U, .next_ieee = (unsigned char)9U, .prev_rs = (unsigned char)7U, .next_rs = (unsigned char)9U, .prev_rs_tgg = (unsigned char)7U, .next_rs_tgg = (unsigned char)9U}, {.plcp = (unsigned char)11U, .plcp_siso = (unsigned char)4U, .plcp_mimo2 = (unsigned char)12U, .plcp_mimo3 = (unsigned char)20U, .ieee = (unsigned char)72U, .prev_ieee = (unsigned char)8U, .next_ieee = (unsigned char)10U, .prev_rs = (unsigned char)8U, .next_rs = (unsigned char)10U, .prev_rs_tgg = (unsigned char)8U, .next_rs_tgg = (unsigned char)10U}, {.plcp = (unsigned char)1U, .plcp_siso = (unsigned char)5U, .plcp_mimo2 = (unsigned char)13U, .plcp_mimo3 = (unsigned char)21U, .ieee = (unsigned char)96U, .prev_ieee = (unsigned char)9U, .next_ieee = (unsigned char)11U, .prev_rs = (unsigned char)9U, .next_rs = (unsigned char)11U, .prev_rs_tgg = (unsigned char)9U, .next_rs_tgg = (unsigned char)11U}, {.plcp = (unsigned char)3U, .plcp_siso = (unsigned char)6U, .plcp_mimo2 = (unsigned char)14U, .plcp_mimo3 = (unsigned char)22U, .ieee = (unsigned char)108U, .prev_ieee = (unsigned char)10U, .next_ieee = (unsigned char)13U, .prev_rs = (unsigned char)10U, .next_rs = (unsigned char)13U, .prev_rs_tgg = (unsigned char)10U, .next_rs_tgg = (unsigned char)13U}, {.plcp = (unsigned char)3U, .plcp_siso = (unsigned char)7U, .plcp_mimo2 = (unsigned char)15U, .plcp_mimo3 = (unsigned char)23U, .ieee = (unsigned char)120U, .prev_ieee = (unsigned char)10U, .next_ieee = (unsigned char)13U, .prev_rs = (unsigned char)10U, .next_rs = (unsigned char)13U, .prev_rs_tgg = (unsigned char)10U, .next_rs_tgg = (unsigned char)13U}};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
__inline static u8 rs_extract_rate(u32 rate_n_flags)
{
  u8 __retres;
  
#line 116 
  __retres = (unsigned char)rate_n_flags;
  
#line 116 
  return __retres;
}


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int iwl_hwrate_to_plcp_idx(u32 rate_n_flags)
{
  int __retres;
  
#line 121 
  int idx = 0;
  
#line 124 
  if ((rate_n_flags & 256U) != 0U) {
    u8 tmp;
    
#line 125 
    tmp = rs_extract_rate(rate_n_flags);
    
#line 125 
    idx = (int)tmp;
    
#line 127 
    if (idx > 15) 
#line 128 
                  idx += -16;
    else 
      
#line 129 
      if (idx > 7) 
#line 130 
                   idx += -8; else ;
    
#line 132 
    idx += 4;
    
#line 134 
    if (idx > 4) 
#line 135 
                 idx += 1; else ;
    
#line 136 
    if ((unsigned int)idx + 4294967292U <= 8U) {
      
#line 137 
      __retres = idx;
      
#line 137 
      goto return_label;
    }
    else ;
  }
  else {
    u8 tmp_0;
    
#line 141 
    idx = 0;
    
#line 141 
    goto ldv_52916;
    ldv_52915: 
#line 142 
    ;
    
#line 143 
    tmp_0 = rs_extract_rate(rate_n_flags);
    
#line 142 
    ;
    
#line 142 
    if ((int)iwl_rates[idx].plcp == (int)tmp_0) {
      
#line 144 
      __retres = idx;
      
#line 144 
      goto return_label;
    }
    else ;
    
#line 141 
    idx += 1;
    ldv_52916: 
#line 142 
    ;
    
#line 141 
    if ((unsigned int)idx <= 12U) 
#line 143 
                                  goto ldv_52915; else 
#line 146 
                                                       goto ldv_52917;
    ldv_52917: 
#line 147 
    ;
  }
  
#line 147 
  __retres = -1;
  return_label: 
#line 147 
                return __retres;
}


#line 150 
static void rs_rate_scale_perform(struct iwl_priv *priv, struct sk_buff *skb, struct ieee80211_sta *sta, struct iwl_lq_sta *lq_sta);


#line 154 
static void rs_fill_link_cmd(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, u32 new_rate);


#line 156 
static void rs_stay_in_table(struct iwl_lq_sta *lq_sta, bool force_search);


#line 160 
static void rs_dbgfs_set_mcs(struct iwl_lq_sta *lq_sta, u32 *rate_n_flags, int index);


#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u16 const expected_tpt_legacy[13U] = {(unsigned short)7U, (unsigned short)13U, (unsigned short)35U, (unsigned short)58U, (unsigned short)40U, (unsigned short)57U, (unsigned short)72U, (unsigned short)98U, (unsigned short)121U, (unsigned short)154U, (unsigned short)177U, (unsigned short)186U, (unsigned short)0U};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u16 const expected_tpt_siso20MHz[4U][13U] = {{(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)42U, (unsigned short)0U, (unsigned short)76U, (unsigned short)102U, (unsigned short)124U, (unsigned short)159U, (unsigned short)183U, (unsigned short)193U, (unsigned short)202U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)46U, (unsigned short)0U, (unsigned short)82U, (unsigned short)110U, (unsigned short)132U, (unsigned short)168U, (unsigned short)192U, (unsigned short)202U, (unsigned short)210U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)47U, (unsigned short)0U, (unsigned short)91U, (unsigned short)133U, (unsigned short)171U, (unsigned short)242U, (unsigned short)305U, (unsigned short)334U, (unsigned short)362U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)52U, (unsigned short)0U, (unsigned short)101U, (unsigned short)145U, (unsigned short)187U, (unsigned short)264U, (unsigned short)330U, (unsigned short)361U, (unsigned short)390U}};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u16 const expected_tpt_siso40MHz[4U][13U] = {{(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)77U, (unsigned short)0U, (unsigned short)127U, (unsigned short)160U, (unsigned short)184U, (unsigned short)220U, (unsigned short)242U, (unsigned short)250U, (unsigned short)257U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)83U, (unsigned short)0U, (unsigned short)135U, (unsigned short)169U, (unsigned short)193U, (unsigned short)229U, (unsigned short)250U, (unsigned short)257U, (unsigned short)264U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)94U, (unsigned short)0U, (unsigned short)177U, (unsigned short)249U, (unsigned short)313U, (unsigned short)423U, (unsigned short)512U, (unsigned short)550U, (unsigned short)586U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)104U, (unsigned short)0U, (unsigned short)193U, (unsigned short)270U, (unsigned short)338U, (unsigned short)454U, (unsigned short)545U, (unsigned short)584U, (unsigned short)620U}};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u16 const expected_tpt_mimo2_20MHz[4U][13U] = {{(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)74U, (unsigned short)0U, (unsigned short)123U, (unsigned short)155U, (unsigned short)179U, (unsigned short)214U, (unsigned short)236U, (unsigned short)244U, (unsigned short)251U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)81U, (unsigned short)0U, (unsigned short)131U, (unsigned short)164U, (unsigned short)188U, (unsigned short)223U, (unsigned short)243U, (unsigned short)251U, (unsigned short)257U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)89U, (unsigned short)0U, (unsigned short)167U, (unsigned short)235U, (unsigned short)296U, (unsigned short)402U, (unsigned short)488U, (unsigned short)526U, (unsigned short)560U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)97U, (unsigned short)0U, (unsigned short)182U, (unsigned short)255U, (unsigned short)320U, (unsigned short)431U, (unsigned short)520U, (unsigned short)558U, (unsigned short)593U}};

#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u16 const expected_tpt_mimo2_40MHz[4U][13U] = {{(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)123U, (unsigned short)0U, (unsigned short)182U, (unsigned short)214U, (unsigned short)235U, (unsigned short)264U, (unsigned short)279U, (unsigned short)285U, (unsigned short)289U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)131U, (unsigned short)0U, (unsigned short)191U, (unsigned short)222U, (unsigned short)242U, (unsigned short)270U, (unsigned short)284U, (unsigned short)289U, (unsigned short)293U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)171U, (unsigned short)0U, (unsigned short)305U, (unsigned short)410U, (unsigned short)496U, (unsigned short)634U, (unsigned short)731U, (unsigned short)771U, (unsigned short)805U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)186U, (unsigned short)0U, (unsigned short)329U, (unsigned short)439U, (unsigned short)527U, (unsigned short)667U, (unsigned short)764U, (unsigned short)803U, (unsigned short)838U}};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u16 const expected_tpt_mimo3_20MHz[4U][13U] = {{(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)99U, (unsigned short)0U, (unsigned short)153U, (unsigned short)186U, (unsigned short)208U, (unsigned short)239U, (unsigned short)256U, (unsigned short)263U, (unsigned short)268U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)106U, (unsigned short)0U, (unsigned short)162U, (unsigned short)194U, (unsigned short)215U, (unsigned short)246U, (unsigned short)262U, (unsigned short)268U, (unsigned short)273U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)134U, (unsigned short)0U, (unsigned short)249U, (unsigned short)346U, (unsigned short)431U, (unsigned short)574U, (unsigned short)685U, (unsigned short)732U, (unsigned short)775U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)148U, (unsigned short)0U, (unsigned short)272U, (unsigned short)376U, (unsigned short)465U, (unsigned short)614U, (unsigned short)727U, (unsigned short)775U, (unsigned short)818U}};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u16 const expected_tpt_mimo3_40MHz[4U][13U] = {{(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)152U, (unsigned short)0U, (unsigned short)211U, (unsigned short)239U, (unsigned short)255U, (unsigned short)279U, (unsigned short)290U, (unsigned short)294U, (unsigned short)297U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)160U, (unsigned short)0U, (unsigned short)219U, (unsigned short)245U, (unsigned short)261U, (unsigned short)284U, (unsigned short)294U, (unsigned short)297U, (unsigned short)300U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)254U, (unsigned short)0U, (unsigned short)443U, (unsigned short)584U, (unsigned short)695U, (unsigned short)868U, (unsigned short)984U, (unsigned short)1030U, (unsigned short)1070U}, {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)277U, (unsigned short)0U, (unsigned short)478U, (unsigned short)624U, (unsigned short)737U, (unsigned short)911U, (unsigned short)1026U, (unsigned short)1070U, (unsigned short)1109U}};

#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static struct iwl_rate_mcs_info const iwl_rate_mcs[13U] = {{.mbps = {(char)'1', (char)'\000'}, .mcs = {(char)'B', (char)'P', (char)'S', (char)'K', (char)' ', (char)'D', (char)'S', (char)'S', (char)'S', (char)'\000'}}, {.mbps = {(char)'2', (char)'\000'}, .mcs = {(char)'Q', (char)'P', (char)'S', (char)'K', (char)' ', (char)'D', (char)'S', (char)'S', (char)'S', (char)'\000'}}, {.mbps = {(char)'5', (char)'.', (char)'5', (char)'\000'}, .mcs = {(char)'B', (char)'P', (char)'S', (char)'K', (char)' ', (char)'C', (char)'C', (char)'K', (char)'\000'}}, {.mbps = {(char)'1', (char)'1', (char)'\000'}, .mcs = {(char)'Q', (char)'P', (char)'S', (char)'K', (char)' ', (char)'C', (char)'C', (char)'K', (char)'\000'}}, {.mbps = {(char)'6', (char)'\000'}, .mcs = {(char)'B', (char)'P', (char)'S', (char)'K', (char)' ', (char)'1', (char)'/', (char)'2', (char)'\000'}}, {.mbps = {(char)'9', (char)'\000'}, .mcs = {(char)'B', (char)'P', (char)'S', (char)'K', (char)' ', (char)'1', (char)'/', (char)'2', (char)'\000'}}, {.mbps = {(char)'1', (char)'2', (char)'\000'}, .mcs = {(char)'Q', (char)'P', (char)'S', (char)'K', (char)' ', (char)'1', (char)'/', (char)'2', (char)'\000'}}, {.mbps = {(char)'1', (char)'8', (char)'\000'}, .mcs = {(char)'Q', (char)'P', (char)'S', (char)'K', (char)' ', (char)'3', (char)'/', (char)'4', (char)'\000'}}, {.mbps = {(char)'2', (char)'4', (char)'\000'}, .mcs = {(char)'1', (char)'6', (char)'Q', (char)'A', (char)'M', (char)' ', (char)'1', (char)'/', (char)'2', (char)'\000'}}, {.mbps = {(char)'3', (char)'6', (char)'\000'}, .mcs = {(char)'1', (char)'6', (char)'Q', (char)'A', (char)'M', (char)' ', (char)'3', (char)'/', (char)'4', (char)'\000'}}, {.mbps = {(char)'4', (char)'8', (char)'\000'}, .mcs = {(char)'6', (char)'4', (char)'Q', (char)'A', (char)'M', (char)' ', (char)'2', (char)'/', (char)'3', (char)'\000'}}, {.mbps = {(char)'5', (char)'4', (char)'\000'}, .mcs = {(char)'6', (char)'4', (char)'Q', (char)'A', (char)'M', (char)' ', (char)'3', (char)'/', (char)'4', (char)'\000'}}, {.mbps = {(char)'6', (char)'0', (char)'\000'}, .mcs = {(char)'6', (char)'4', (char)'Q', (char)'A', (char)'M', (char)' ', (char)'5', (char)'/', (char)'6', (char)'\000'}}};

#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_rate_scale_clear_window(struct iwl_rate_scale_data *window)
{
  
#line 246 
  window->data = 0ULL;
  
#line 247 
  window->success_counter = 0;
  
#line 248 
  window->success_ratio = -1;
  
#line 249 
  window->counter = 0;
  
#line 250 
  window->average_tpt = -1;
  
#line 251 
  window->stamp = 0UL;
  
#line 252 
  return;
}


#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
__inline static u8 rs_is_valid_ant(u8 valid_antenna, u8 ant_type)
{
  u8 __retres;
  
#line 256 
  __retres = (unsigned char)(((int)ant_type & (int)valid_antenna) == (int)ant_type);
  
#line 256 
  return __retres;
}


#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_tl_rm_old_stats(struct iwl_traffic_load *tl, u32 curr_time)
{
  
#line 266 
  u32 oldest_time = curr_time + 4294966346U;
  
#line 268 
  goto ldv_52955;
  ldv_52954: 
#line 269 
  ;
  
#line 270 
  tl->total -= tl->packet_count[(int)tl->head];
  
#line 271 
  tl->packet_count[(int)tl->head] = 0U;
  
#line 272 
  tl->time_stamp += 50UL;
  
#line 273 
  tl->queue_count = (u8)((int)tl->queue_count - 1);
  
#line 274 
  tl->head = (u8)((int)tl->head + 1);
  
#line 275 
  if ((unsigned int)tl->head > 19U) 
#line 276 
                                    tl->head = (unsigned char)0U; else ;
  ldv_52955: 
#line 277 
  ;
  
#line 268 
  if ((unsigned int)tl->queue_count != 0U && tl->time_stamp < (unsigned long)oldest_time) 
    
#line 271 
    goto ldv_52954; else 
#line 274 
                         goto ldv_52956;
  ldv_52956: 
#line 275 
  ;
  
#line 276 
  return;
}


#line 284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u8 rs_tl_add_packet(struct iwl_lq_sta *lq_data, struct ieee80211_hdr *hdr)
{
  u8 __retres;
  u32 time_diff;
  s32 index;
  u8 tid;
  int tmp_1;
  
#line 287 
  u32 curr_time = jiffies_to_msecs(jiffies);
  
#line 290 
  struct iwl_traffic_load *tl = (struct iwl_traffic_load *)0;
  
#line 293 
  tmp_1 = ieee80211_is_data_qos((unsigned short)((int)hdr->frame_control));
  
#line 293 
  if (tmp_1 != 0) {
    
#line 294 
    u8 *qc = ieee80211_get_qos_ctl(hdr);
    
#line 295 
    tid = (unsigned char)((unsigned int)*qc & 15U);
  }
  else {
    
#line 297 
    __retres = (unsigned char)8U;
    
#line 297 
    goto return_label;
  }
  
#line 299 
  if ((long)((unsigned int)tid > 7U) != 0L) {
    
#line 300 
    __retres = (unsigned char)8U;
    
#line 300 
    goto return_label;
  }
  else ;
  
#line 302 
  tl = & lq_data->load[(int)tid];
  
#line 304 
  curr_time -= curr_time % 5U;
  
#line 307 
  if ((unsigned int)tl->queue_count == 0U) {
    
#line 308 
    tl->total = 1U;
    
#line 309 
    tl->time_stamp = (unsigned long)curr_time;
    
#line 310 
    tl->queue_count = (unsigned char)1U;
    
#line 311 
    tl->head = (unsigned char)0U;
    
#line 312 
    tl->packet_count[0] = 1U;
    
#line 313 
    __retres = (unsigned char)8U;
    
#line 313 
    goto return_label;
  }
  else ;
  
#line 316 
  time_diff = curr_time - (unsigned int)tl->time_stamp;
  
#line 317 
  index = (int)(time_diff / 50U);
  
#line 321 
  if (index > 19) 
#line 322 
                  rs_tl_rm_old_stats(tl,curr_time); else ;
  
#line 324 
  index = ((int)tl->head + index) % 20;
  
#line 325 
  tl->packet_count[index] += 1U;
  
#line 326 
  tl->total += 1U;
  
#line 328 
  if (index + 1 > (int)tl->queue_count) 
#line 329 
                                        tl->queue_count = (unsigned char)((unsigned int)((unsigned char)index) + 1U); else ;
  
#line 331 
  __retres = tid;
  return_label: 
#line 331 
                return __retres;
}


#line 353 
void __compiletime_assert_354(void);


#line 341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_program_fix_rate(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta)
{
  struct iwl_station_priv *tmp;
  {
    
#line 345 
    struct iwl_lq_sta const *__mptr = (struct iwl_lq_sta const *)lq_sta;
    
#line 345 
    tmp = (struct iwl_station_priv *)__mptr + 18446744073709551608U;
  }
  
#line 344 
  struct iwl_station_priv *sta_priv = tmp;
  
#line 346 
  struct iwl_rxon_context *ctx = sta_priv->ctx;
  
#line 348 
  lq_sta->active_legacy_rate = (unsigned short)4095U;
  
#line 349 
  lq_sta->active_siso_rate = (unsigned short)8144U;
  
#line 350 
  lq_sta->active_mimo2_rate = (unsigned short)8144U;
  
#line 351 
  lq_sta->active_mimo3_rate = (unsigned short)8144U;
  {
    
#line 353 
    bool __cond = (_Bool)((int)*("sta_id %d rate 0x%X\n" + 19UL) != 10);
    
#line 353 
    if ((int)__cond != 0) 
#line 353 
                          __compiletime_assert_354(); else ;
  }
  
#line 353 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_program_fix_rate","sta_id %d rate 0x%X\n",(int)lq_sta->lq.sta_id,lq_sta->dbg_fixed_rate);
  
#line 356 
  if (lq_sta->dbg_fixed_rate != 0U) {
    
#line 357 
    rs_fill_link_cmd((struct iwl_priv *)0,lq_sta,lq_sta->dbg_fixed_rate);
    
#line 358 
    iwl_send_lq_cmd(lq_sta->drv,ctx,& lq_sta->lq,(unsigned char)1,(_Bool)0);
  }
  else ;
  
#line 360 
  return;
}


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u32 rs_tl_get_load(struct iwl_lq_sta *lq_data, u8 tid)
{
  u32 __retres;
  u32 time_diff;
  s32 index;
  
#line 369 
  u32 curr_time = jiffies_to_msecs(jiffies);
  
#line 372 
  struct iwl_traffic_load *tl = (struct iwl_traffic_load *)0;
  
#line 374 
  if ((unsigned int)tid > 7U) {
    
#line 375 
    __retres = 0U;
    
#line 375 
    goto return_label;
  }
  else ;
  
#line 377 
  tl = & lq_data->load[(int)tid];
  
#line 379 
  curr_time -= curr_time % 5U;
  
#line 381 
  if ((unsigned int)tl->queue_count == 0U) {
    
#line 382 
    __retres = 0U;
    
#line 382 
    goto return_label;
  }
  else ;
  
#line 384 
  time_diff = curr_time - (unsigned int)tl->time_stamp;
  
#line 385 
  index = (int)(time_diff / 50U);
  
#line 389 
  if (index > 19) 
#line 390 
                  rs_tl_rm_old_stats(tl,curr_time); else ;
  
#line 392 
  __retres = tl->total;
  return_label: 
#line 392 
                return __retres;
}


#line 407 
void __compiletime_assert_409(void);


#line 415 
void __compiletime_assert_416(void);


#line 424 
void __compiletime_assert_425(void);


#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_tl_turn_on_agg_for_tid(struct iwl_priv *priv, struct iwl_lq_sta *lq_data, u8 tid, struct ieee80211_sta *sta)
{
  int __retres;
  u32 load;
  
#line 399 
  int ret = -11;
  
#line 406 
  if ((unsigned int)priv->bt_traffic_load > 1U) {
    {
      
#line 407 
      bool __cond = (_Bool)((int)*("BT traffic (%d), no aggregation allowed\n" + 39UL) != 10);
      
#line 407 
      if ((int)__cond != 0) 
#line 407 
                            __compiletime_assert_409(); else ;
    }
    
#line 407 
    __iwl_dbg(priv->dev,32768U,(_Bool)0,"rs_tl_turn_on_agg_for_tid","BT traffic (%d), no aggregation allowed\n",(int)priv->bt_traffic_load);
    
#line 410 
    __retres = ret;
    
#line 410 
    goto return_label;
  }
  else ;
  
#line 413 
  load = rs_tl_get_load(lq_data,(unsigned char)((int)tid));
  {
    
#line 415 
    bool __cond_0 = (_Bool)((int)*("Starting Tx agg: STA: %pM tid: %d\n" + 33UL) != 10);
    
#line 415 
    if ((int)__cond_0 != 0) 
#line 415 
                            __compiletime_assert_416(); else ;
  }
  
#line 415 
  __iwl_dbg(priv->dev,67108864U,(_Bool)0,"rs_tl_turn_on_agg_for_tid","Starting Tx agg: STA: %pM tid: %d\n",(u8 *)(& sta->addr),(int)tid);
  
#line 417 
  ret = ieee80211_start_tx_ba_session(sta,(unsigned short)((int)tid),(unsigned short)5000);
  
#line 418 
  if (ret == -11) {
    {
      
#line 424 
      bool __cond_1 = (_Bool)((int)*("Fail start Tx agg on tid: %d\n" + 28UL) != 10);
      
#line 424 
      if ((int)__cond_1 != 0) 
#line 424 
                              __compiletime_assert_425(); else ;
    }
    
#line 424 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Fail start Tx agg on tid: %d\n",(int)tid);
    
#line 426 
    ieee80211_stop_tx_ba_session(sta,(unsigned short)((int)tid));
  }
  else ;
  
#line 428 
  __retres = ret;
  return_label: 
#line 428 
                return __retres;
}


#line 438 
void __compiletime_assert_439(void);


#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_tl_turn_on_agg(struct iwl_priv *priv, u8 tid, struct iwl_lq_sta *lq_data, struct ieee80211_sta *sta)
{
  
#line 435 
  if ((unsigned int)tid <= 7U) 
#line 436 
                               rs_tl_turn_on_agg_for_tid(priv,lq_data,(unsigned char)((int)tid),sta);
  else {
    {
      
#line 438 
      bool __cond = (_Bool)((int)*("tid exceeds max TID count: %d/%d\n" + 32UL) != 10);
      
#line 438 
      if ((int)__cond != 0) 
#line 438 
                            __compiletime_assert_439(); else ;
    }
    
#line 438 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"tid exceeds max TID count: %d/%d\n",(int)tid,8);
  }
  
#line 440 
  return;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
__inline static int get_num_of_ant_from_rate(u32 rate_n_flags)
{
  int __retres;
  
#line 445 
  __retres = (((rate_n_flags & 16384U) != 0U) + ((rate_n_flags & 32768U) != 0U)) + ((rate_n_flags & 65536U) != 0U);
  
#line 445 
  return __retres;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static s32 get_expected_tpt(struct iwl_scale_tbl_info *tbl, int rs_index)
{
  s32 __retres;
  
#line 455 
  if (tbl->expected_tpt != (u16 const *)0U) {
    
#line 456 
    __retres = (int)*(tbl->expected_tpt + rs_index);
    
#line 456 
    goto return_label;
  }
  else ;
  
#line 457 
  __retres = 0;
  return_label: 
#line 457 
                return __retres;
}


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_collect_tx_data(struct iwl_scale_tbl_info *tbl, int scale_index, int attempts, int successes)
{
  int __retres;
  s32 fail_count;
  s32 tpt;
  
#line 470 
  struct iwl_rate_scale_data *window = (struct iwl_rate_scale_data *)0;
  
#line 471 
  u64 const mask = 2305843009213693952ULL;
  
#line 474 
  if ((unsigned int)scale_index > 12U) {
    
#line 475 
    __retres = -22;
    
#line 475 
    goto return_label;
  }
  else ;
  
#line 478 
  window = & tbl->win[scale_index];
  
#line 481 
  tpt = get_expected_tpt(tbl,scale_index);
  
#line 491 
  goto ldv_53037;
  ldv_53036: 
#line 492 
  ;
  
#line 492 
  if (window->counter > 61) {
    
#line 495 
    window->counter = 61;
    
#line 497 
    if ((window->data & 2305843009213693952ULL) != 0ULL) {
      
#line 498 
      window->data &= 16140901064495857663ULL;
      
#line 499 
      window->success_counter -= 1;
    }
    else ;
  }
  else ;
  
#line 504 
  window->counter += 1;
  
#line 507 
  window->data <<= 1;
  
#line 510 
  if (successes > 0) {
    
#line 511 
    window->success_counter += 1;
    
#line 512 
    window->data |= 1ULL;
    
#line 513 
    successes -= 1;
  }
  else ;
  
#line 516 
  attempts -= 1;
  ldv_53037: 
#line 517 
  ;
  
#line 491 
  if (attempts > 0) 
#line 493 
                    goto ldv_53036; else 
#line 496 
                                         goto ldv_53038;
  ldv_53038: 
#line 497 
  ;
  
#line 520 
  if (window->counter > 0) 
#line 521 
                           window->success_ratio = (window->success_counter * 12800) / window->counter; else 
                                                                    
#line 524 
                                                                    window->success_ratio = -1;
  
#line 526 
  fail_count = window->counter - window->success_counter;
  
#line 529 
  if (fail_count > 5 || window->success_counter > 7) 
#line 531 
                                                     window->average_tpt = (window->success_ratio * tpt + 64) / 128; else 
                                                                    
#line 533 
                                                                    window->average_tpt = -1;
  
#line 536 
  window->stamp = jiffies;
  
#line 538 
  __retres = 0;
  return_label: 
#line 538 
                return __retres;
}


#line 558 
void __compiletime_assert_558(void);


#line 570 
void __compiletime_assert_570(void);


#line 590 
void __compiletime_assert_590(void);


#line 545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u32 rate_n_flags_from_tbl(struct iwl_priv *priv, struct iwl_scale_tbl_info *tbl, int index, u8 use_green)
{
  
#line 549 
  u32 rate_n_flags = 0U;
  
#line 551 
  if ((unsigned int)tbl->lq_type + 4294967295U <= 1U) {
    
#line 552 
    rate_n_flags = (unsigned int)iwl_rates[index].plcp;
    
#line 553 
    if ((unsigned int)index <= 3U) 
#line 554 
                                   rate_n_flags |= 512U; else ;
  }
  else 
    
#line 556 
    if ((unsigned int)tbl->lq_type + 4294967293U <= 2U) {
      
#line 557 
      if (index > 12) {
        {
          
#line 558 
          bool __cond = (_Bool)((int)*("Invalid HT rate index %d\n" + 24UL) != 10);
          
#line 558 
          if ((int)__cond != 0) 
#line 558 
                                __compiletime_assert_558(); else ;
        }
        
#line 558 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid HT rate index %d\n",index);
        
#line 559 
        index = 12;
      }
      else ;
      
#line 561 
      rate_n_flags = 256U;
      
#line 563 
      if (tbl->lq_type == (unsigned int)LQ_SISO) 
#line 564 
                                                 rate_n_flags = (unsigned int)iwl_rates[index].plcp_siso | rate_n_flags;
      else 
        
#line 565 
        if (tbl->lq_type == (unsigned int)LQ_MIMO2) 
#line 566 
                                                    rate_n_flags = (unsigned int)iwl_rates[index].plcp_mimo2 | rate_n_flags; else 
                                                                    
#line 568 
                                                                    rate_n_flags = (unsigned int)iwl_rates[index].plcp_mimo3 | rate_n_flags;
    }
    else {
      {
        
#line 570 
        bool __cond_0 = (_Bool)((int)*("Invalid tbl->lq_type %d\n" + 23UL) != 10);
        
#line 570 
        if ((int)__cond_0 != 0) 
#line 570 
                                __compiletime_assert_570(); else ;
      }
      
#line 570 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid tbl->lq_type %d\n",(unsigned int)tbl->lq_type);
    }
  
#line 573 
  rate_n_flags = ((unsigned int)((int)tbl->ant_type << 14) & 114688U) | rate_n_flags;
  
#line 576 
  if ((unsigned int)tbl->lq_type + 4294967293U <= 2U) {
    
#line 577 
    if ((unsigned int)tbl->is_ht40 != 0U) 
      
#line 578 
      if ((unsigned int)tbl->is_dup != 0U) 
#line 579 
                                           rate_n_flags |= 4096U; else 
                                                                    
#line 581 
                                                                    rate_n_flags |= 2048U;
    else ;
    
#line 583 
    if ((unsigned int)tbl->is_SGI != 0U) 
#line 584 
                                         rate_n_flags |= 8192U; else ;
    
#line 586 
    if ((unsigned int)use_green != 0U) {
      
#line 587 
      rate_n_flags |= 1024U;
      
#line 588 
      if (tbl->lq_type == (unsigned int)LQ_SISO && (unsigned int)tbl->is_SGI != 0U) {
        
#line 589 
        rate_n_flags &= 4294959103U;
        {
          
#line 590 
          bool __cond_1 = (_Bool)((int)*("GF was set with SGI:SISO\n" + 24UL) != 10);
          
#line 590 
          if ((int)__cond_1 != 0) 
#line 590 
                                  __compiletime_assert_590(); else ;
        }
        
#line 590 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"GF was set with SGI:SISO\n");
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 594 
  return rate_n_flags;
}


#line 601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_get_tbl_info_from_mcs(u32 const rate_n_flags, enum ieee80211_band band, struct iwl_scale_tbl_info *tbl, int *rate_idx)
{
  int __retres;
  int tmp;
  u8 mcs;
  
#line 606 
  u32 ant_msk = rate_n_flags & 114688U;
  
#line 607 
  tmp = get_num_of_ant_from_rate(rate_n_flags);
  
#line 607 
  u8 num_of_ant_0 = (unsigned char)tmp;
  
#line 610 
  memset((void *)tbl,0,448UL);
  
#line 611 
  *rate_idx = iwl_hwrate_to_plcp_idx(rate_n_flags);
  
#line 613 
  if (*rate_idx == 13) {
    
#line 614 
    *rate_idx = -1;
    
#line 615 
    __retres = -22;
    
#line 615 
    goto return_label;
  }
  else ;
  
#line 617 
  tbl->is_SGI = (unsigned char)0U;
  
#line 618 
  tbl->is_ht40 = (unsigned char)0U;
  
#line 619 
  tbl->is_dup = (unsigned char)0U;
  
#line 620 
  tbl->ant_type = (unsigned char)(ant_msk >> 14);
  
#line 621 
  tbl->lq_type = LQ_NONE;
  
#line 622 
  tbl->max_search = (unsigned char)6U;
  
#line 625 
  if ((rate_n_flags & 256U) == 0U) {
    
#line 626 
    if ((unsigned int)num_of_ant_0 == 1U) 
      
#line 627 
      if (band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 628 
                                                     tbl->lq_type = LQ_A; else 
                                                                    
#line 630 
                                                                    tbl->lq_type = LQ_G;
    else ;
  }
  else {
    
#line 634 
    if ((rate_n_flags & 8192U) != 0U) 
#line 635 
                                      tbl->is_SGI = (unsigned char)1U; else ;
    
#line 637 
    if ((rate_n_flags & 2048U) != 0U || (rate_n_flags & 4096U) != 0U) 
      
#line 639 
      tbl->is_ht40 = (unsigned char)1U; else ;
    
#line 641 
    if ((rate_n_flags & 4096U) != 0U) 
#line 642 
                                      tbl->is_dup = (unsigned char)1U; else ;
    
#line 644 
    mcs = rs_extract_rate(rate_n_flags);
    
#line 647 
    if ((unsigned int)mcs <= 7U) {
      
#line 648 
      if ((unsigned int)num_of_ant_0 == 1U) 
#line 649 
                                            tbl->lq_type = LQ_SISO; else ;
    }
    else 
      
#line 651 
      if ((unsigned int)mcs <= 15U) {
        
#line 652 
        if ((unsigned int)num_of_ant_0 == 2U) 
#line 653 
                                              tbl->lq_type = LQ_MIMO2; else ;
      }
      else 
        
#line 656 
        if ((unsigned int)num_of_ant_0 == 3U) {
          
#line 657 
          tbl->max_search = (unsigned char)8U;
          
#line 658 
          tbl->lq_type = LQ_MIMO3;
        }
        else ;
  }
  
#line 662 
  __retres = 0;
  return_label: 
#line 662 
                return __retres;
}


#line 667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_toggle_antenna(u32 valid_ant, u32 *rate_n_flags, struct iwl_scale_tbl_info *tbl)
{
  int __retres;
  u8 new_ant_type;
  u8 tmp;
  
#line 672 
  if ((unsigned int)tbl->ant_type + 255U > 6U) {
    
#line 673 
    __retres = 0;
    
#line 673 
    goto return_label;
  }
  else ;
  
#line 675 
  tmp = rs_is_valid_ant((unsigned char)((int)((unsigned char)valid_ant)),(unsigned char)((int)tbl->ant_type));
  
#line 675 
  if ((unsigned int)tmp == 0U) {
    
#line 676 
    __retres = 0;
    
#line 676 
    goto return_label;
  }
  else ;
  
#line 678 
  new_ant_type = ant_toggle_lookup[(int)tbl->ant_type];
  
#line 680 
  goto ldv_53074;
  ldv_53073: 
#line 681 
  ;
  
#line 682 
  new_ant_type = ant_toggle_lookup[(int)new_ant_type];
  ldv_53074: 
#line 683 
  ;
  
#line 680 
  if ((int)tbl->ant_type != (int)new_ant_type) {
    u8 tmp_0;
    
#line 680 
    tmp_0 = rs_is_valid_ant((unsigned char)((int)((unsigned char)valid_ant)),(unsigned char)((int)new_ant_type));
    
#line 680 
    if ((unsigned int)tmp_0 == 0U) 
#line 683 
                                   goto ldv_53073; else 
#line 686 
                                                        goto ldv_53075;
  }
  else 
#line 686 
       goto ldv_53075;
  ldv_53075: 
#line 687 
  ;
  
#line 684 
  if ((int)tbl->ant_type == (int)new_ant_type) {
    
#line 685 
    __retres = 0;
    
#line 685 
    goto return_label;
  }
  else ;
  
#line 687 
  tbl->ant_type = new_ant_type;
  
#line 688 
  *rate_n_flags &= 4294852607U;
  
#line 689 
  *rate_n_flags |= (unsigned int)((int)new_ant_type << 14);
  
#line 690 
  __retres = 1;
  return_label: 
#line 690 
                return __retres;
}


#line 697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static bool rs_use_green(struct ieee80211_sta *sta)
{
  bool __retres;
  
#line 706 
  __retres = (_Bool)0;
  
#line 706 
  return __retres;
}


#line 716  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u16 rs_get_supported_rates(struct iwl_lq_sta *lq_sta, struct ieee80211_hdr *hdr, enum iwl_table_type rate_type)
{
  u16 __retres;
  
#line 720 
  if ((unsigned int)rate_type + 4294967295U <= 1U) {
    
#line 721 
    __retres = lq_sta->active_legacy_rate;
    
#line 721 
    goto return_label;
  }
  else 
    
#line 723 
    if (rate_type == (unsigned int)LQ_SISO) {
      
#line 724 
      __retres = lq_sta->active_siso_rate;
      
#line 724 
      goto return_label;
    }
    else 
      
#line 725 
      if (rate_type == (unsigned int)LQ_MIMO2) {
        
#line 726 
        __retres = lq_sta->active_mimo2_rate;
        
#line 726 
        goto return_label;
      }
      else {
        
#line 728 
        __retres = lq_sta->active_mimo3_rate;
        
#line 728 
        goto return_label;
      }
  return_label: 
#line 720 
                return __retres;
}


#line 772 
void __compiletime_assert_772(void);


#line 782 
void __compiletime_assert_782(void);


#line 732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u16 rs_get_adjacent_rate(struct iwl_priv *priv, u8 index, u16 rate_mask, int rate_type)
{
  u16 __retres;
  
#line 735 
  u8 high = (unsigned char)13U;
  
#line 736 
  u8 low = (unsigned char)13U;
  
#line 740 
  if (rate_type != 1) {
    int i;
    u32 mask;
    
#line 745 
    i = (int)index + -1;
    
#line 746 
    mask = (unsigned int)(1 << i);
    
#line 746 
    goto ldv_53096;
    ldv_53095: 
#line 747 
    ;
    
#line 747 
    if (((unsigned int)rate_mask & mask) != 0U) {
      
#line 748 
      low = (unsigned char)i;
      
#line 749 
      goto ldv_53094;
    }
    else ;
    
#line 746 
    i -= 1;
    
#line 746 
    mask >>= 1;
    ldv_53096: 
#line 747 
    ;
    
#line 746 
    if (i >= 0) 
#line 748 
                goto ldv_53095; else 
#line 751 
                                     goto ldv_53094;
    ldv_53094: 
#line 752 
    ;
    
#line 754 
    i = (int)index + 1;
    
#line 755 
    mask = (unsigned int)(1 << i);
    
#line 755 
    goto ldv_53099;
    ldv_53098: 
#line 756 
    ;
    
#line 756 
    if (((unsigned int)rate_mask & mask) != 0U) {
      
#line 757 
      high = (unsigned char)i;
      
#line 758 
      goto ldv_53097;
    }
    else ;
    
#line 755 
    i += 1;
    
#line 755 
    mask <<= 1;
    ldv_53099: 
#line 756 
    ;
    
#line 755 
    if (i <= 12) 
#line 757 
                 goto ldv_53098; else 
#line 760 
                                      goto ldv_53097;
    ldv_53097: 
#line 761 
    ;
    
#line 762 
    __retres = (unsigned short)(((int)high << 8) | (int)low);
    
#line 762 
    goto return_label;
  }
  else ;
  
#line 765 
  low = index;
  
#line 766 
  goto ldv_53107;
  ldv_53106: 
#line 767 
  ;
  
#line 767 
  low = iwl_rates[(int)low].prev_rs;
  
#line 768 
  if ((unsigned int)low == 13U) 
#line 769 
                                goto ldv_53100; else ;
  
#line 770 
  if ((((int)rate_mask >> (int)low) & 1) != 0) 
#line 771 
                                               goto ldv_53100; else ;
  {
    
#line 772 
    bool __cond = (_Bool)((int)*("Skipping masked lower rate: %d\n" + 30UL) != 10);
    
#line 772 
    if ((int)__cond != 0) 
#line 772 
                          __compiletime_assert_772(); else ;
  }
  
#line 772 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_get_adjacent_rate","Skipping masked lower rate: %d\n",(int)low);
  ldv_53107: 
#line 773 
  ;
  
#line 766 
  if ((unsigned int)low != 13U) 
#line 768 
                                goto ldv_53106; else 
#line 771 
                                                     goto ldv_53100;
  ldv_53100: 
#line 772 
  ;
  
#line 775 
  high = index;
  
#line 776 
  goto ldv_53114;
  ldv_53113: 
#line 777 
  ;
  
#line 777 
  high = iwl_rates[(int)high].next_rs;
  
#line 778 
  if ((unsigned int)high == 13U) 
#line 779 
                                 goto ldv_53108; else ;
  
#line 780 
  if ((((int)rate_mask >> (int)high) & 1) != 0) 
#line 781 
                                                goto ldv_53108; else ;
  {
    
#line 782 
    bool __cond_0 = (_Bool)((int)*("Skipping masked higher rate: %d\n" + 31UL) != 10);
    
#line 782 
    if ((int)__cond_0 != 0) 
#line 782 
                            __compiletime_assert_782(); else ;
  }
  
#line 782 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_get_adjacent_rate","Skipping masked higher rate: %d\n",(int)high);
  ldv_53114: 
#line 783 
  ;
  
#line 776 
  if ((unsigned int)high != 13U) 
#line 778 
                                 goto ldv_53113; else 
#line 781 
                                                      goto ldv_53108;
  ldv_53108: 
#line 782 
  ;
  
#line 785 
  __retres = (unsigned short)(((int)high << 8) | (int)low);
  return_label: 
#line 785 
                return __retres;
}


#line 788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static u32 rs_get_lower_rate(struct iwl_lq_sta *lq_sta, struct iwl_scale_tbl_info *tbl, u8 scale_index, u8 ht_possible)
{
  s32 low;
  u16 rate_mask;
  u16 high_low;
  u32 tmp_0;
  
#line 795 
  u8 switch_to_legacy = (unsigned char)0U;
  
#line 796 
  u8 is_green = lq_sta->is_green;
  
#line 797 
  struct iwl_priv *priv = lq_sta->drv;
  
#line 802 
  if ((unsigned int)tbl->lq_type + 4294967295U > 1U && ((unsigned int)ht_possible == 0U || (unsigned int)scale_index == 0U)) {
    u8 tmp;
    
#line 803 
    switch_to_legacy = (unsigned char)1U;
    
#line 804 
    scale_index = rs_ht_to_legacy[(int)scale_index];
    
#line 805 
    if (lq_sta->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 806 
                                                           tbl->lq_type = LQ_A; else 
                                                                    
#line 808 
                                                                    tbl->lq_type = LQ_G;
    
#line 810 
    tmp = num_of_ant((unsigned char)((int)tbl->ant_type));
    
#line 810 
    if ((unsigned int)tmp > 1U) 
#line 811 
                                tbl->ant_type = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant)); else ;
    
#line 814 
    tbl->is_ht40 = (unsigned char)0U;
    
#line 815 
    tbl->is_SGI = (unsigned char)0U;
    
#line 816 
    tbl->max_search = (unsigned char)6U;
  }
  else ;
  
#line 819 
  rate_mask = rs_get_supported_rates(lq_sta,(struct ieee80211_hdr *)0,tbl->lq_type);
  
#line 822 
  if ((unsigned int)tbl->lq_type + 4294967295U <= 1U) 
    
#line 824 
    if (lq_sta->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 825 
                                                           rate_mask = (unsigned short)(((int)((unsigned short)lq_sta->supp_rates) << 4U) & (int)rate_mask); else 
                                                                    
#line 828 
                                                                    rate_mask = (unsigned short)((int)((unsigned short)lq_sta->supp_rates) & (int)rate_mask);
  else ;
  
#line 832 
  if ((unsigned int)switch_to_legacy != 0U && (((int)rate_mask >> (int)scale_index) & 1) != 0) {
    
#line 833 
    low = (int)scale_index;
    
#line 834 
    goto out;
  }
  else ;
  
#line 837 
  high_low = rs_get_adjacent_rate(lq_sta->drv,(unsigned char)((int)scale_index),(unsigned short)((int)rate_mask),(int)tbl->lq_type);
  
#line 839 
  low = (int)high_low & 255;
  
#line 841 
  if (low == 13) 
#line 842 
                 low = (int)scale_index; else ;
  out: 
#line 844 
  ;
  
#line 845 
  tmp_0 = rate_n_flags_from_tbl(lq_sta->drv,tbl,low,(unsigned char)((int)is_green));
  
#line 845 
  return tmp_0;
}


#line 851  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static bool table_type_matches(struct iwl_scale_tbl_info *a, struct iwl_scale_tbl_info *b)
{
  bool __retres;
  
#line 854 
  __retres = (_Bool)(((a->lq_type == b->lq_type && (int)a->ant_type == (int)b->ant_type) && (int)a->is_SGI == (int)b->is_SGI) != 0);
  
#line 854 
  return __retres;
}


#line 858  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_bt_update_lq(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct iwl_lq_sta *lq_sta)
{
  struct iwl_scale_tbl_info *tbl;
  
#line 862 
  bool full_concurrent = priv->bt_full_concurrent;
  
#line 864 
  if ((int)priv->bt_ant_couple_ok != 0) 
    
#line 869 
    if ((unsigned int)priv->bt_ci_compliance != 0U && (int)priv->bt_ant_couple_ok != 0) 
      
#line 870 
      full_concurrent = (_Bool)1; else 
#line 872 
                                       full_concurrent = (_Bool)0;
  else ;
  
#line 874 
  if ((int)priv->bt_traffic_load != (int)priv->last_bt_traffic_load || (int)priv->bt_full_concurrent != (int)full_concurrent) {
    
#line 876 
    priv->bt_full_concurrent = full_concurrent;
    
#line 877 
    priv->last_bt_traffic_load = priv->bt_traffic_load;
    
#line 880 
    tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
    
#line 881 
    rs_fill_link_cmd(priv,lq_sta,tbl->current_rate);
    
#line 882 
    iwl_send_lq_cmd(priv,ctx,& lq_sta->lq,(unsigned char)1,(_Bool)0);
    
#line 884 
    ldv_queue_work_74_0(priv->workqueue,& priv->bt_full_concurrency);
  }
  else ;
  
#line 886 
  return;
}


#line 915 
void __compiletime_assert_915(void);


#line 918 
void __compiletime_assert_918(void);


#line 967 
void __compiletime_assert_967(void);


#line 994 
void __compiletime_assert_994(void);


#line 996 
void __compiletime_assert_997(void);


#line 999 
void __compiletime_assert_1000(void);


#line 1001 
void __compiletime_assert_1002(void);


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_tx_status(void *priv_r, struct ieee80211_supported_band *sband, struct ieee80211_sta *sta, void *priv_sta, struct sk_buff *skb)
{
  int legacy_success;
  int retries;
  int rs_index;
  int mac_index;
  int i;
  struct iwl_link_quality_cmd *table;
  enum mac80211_rate_control_flags mac_flags;
  u32 tx_rate;
  struct iwl_scale_tbl_info tbl_type;
  struct iwl_scale_tbl_info *curr_tbl;
  struct iwl_scale_tbl_info *other_tbl;
  struct iwl_scale_tbl_info *tmp_tbl;
  int tmp_0;
  bool tmp_2;
  
#line 898 
  struct iwl_lq_sta *lq_sta = (struct iwl_lq_sta *)priv_sta;
  
#line 900 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 901 
  struct iwl_op_mode *op_mode = (struct iwl_op_mode *)priv_r;
  
#line 902 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 903 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  
#line 908 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 909 
  struct iwl_rxon_context *ctx = sta_priv->ctx;
  {
    
#line 911 
    bool __cond = (_Bool)((int)*("get frame ack response, update rate scale window\n" + 48UL) != 10);
    
#line 911 
    if ((int)__cond != 0) 
#line 911 
                          __compiletime_assert_911(); else ;
  }
  
#line 911 
  __iwl_dbg(priv->dev,1048576U,(_Bool)1,"rs_tx_status","get frame ack response, update rate scale window\n");
  
#line 914 
  if (lq_sta == (struct iwl_lq_sta *)0) {
    {
      
#line 915 
      bool __cond_0 = (_Bool)((int)*("Station rate scaling not created yet.\n" + 37UL) != 10);
      
#line 915 
      if ((int)__cond_0 != 0) 
#line 915 
                              __compiletime_assert_915(); else ;
    }
    
#line 915 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_tx_status","Station rate scaling not created yet.\n");
    
#line 916 
    goto return_label;
  }
  else 
    
#line 917 
    if (lq_sta->drv == (struct iwl_priv *)0) {
      {
        
#line 918 
        bool __cond_1 = (_Bool)((int)*("Rate scaling not initialized yet.\n" + 33UL) != 10);
        
#line 918 
        if ((int)__cond_1 != 0) 
#line 918 
                                __compiletime_assert_918(); else ;
      }
      
#line 918 
      __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_tx_status","Rate scaling not initialized yet.\n");
      
#line 919 
      goto return_label;
    }
    else ;
  
#line 922 
  tmp_0 = ieee80211_is_data((unsigned short)((int)hdr->frame_control));
  
#line 922 
  if (tmp_0 == 0) 
#line 924 
                  goto return_label;
  else 
    
#line 922 
    if ((info->flags & 4U) != 0U) 
#line 924 
                                  goto return_label; else ;
  
#line 927 
  if ((info->flags & 64U) != 0U && (info->flags & 1024U) == 0U) 
#line 929 
                                                                goto return_label; else ;
  
#line 939 
  table = & lq_sta->lq;
  
#line 940 
  tx_rate = table->rs_table[0].rate_n_flags;
  
#line 941 
  rs_get_tbl_info_from_mcs(tx_rate,priv->band,& tbl_type,& rs_index);
  
#line 942 
  if (priv->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 943 
                                                       rs_index += -4; else ;
  
#line 944 
  mac_flags = (enum mac80211_rate_control_flags)info->__anonCompField_ieee80211_tx_info_99.status.rates[0].flags;
  
#line 945 
  mac_index = (int)info->__anonCompField_ieee80211_tx_info_99.status.rates[0].idx;
  
#line 947 
  if (((unsigned int)mac_flags & 8U) != 0U) {
    
#line 948 
    mac_index &= 7;
    
#line 949 
    if (mac_index > 0) 
#line 950 
                       mac_index += 1; else ;
    
#line 955 
    if (priv->band == (unsigned int)IEEE80211_BAND_2GHZ) 
#line 956 
                                                         mac_index += 4; else ;
  }
  else ;
  
#line 959 
  if (((((((mac_index < 0 || (int)tbl_type.is_SGI != (((unsigned int)mac_flags & 128U) != 0U)) || (int)tbl_type.is_ht40 != (((unsigned int)mac_flags & 32U) != 0U)) || (int)tbl_type.is_dup != (((unsigned int)mac_flags & 64U) != 0U)) || (int)tbl_type.ant_type != (int)info->__anonCompField_ieee80211_tx_info_99.status.antenna) || ((tx_rate & 256U) != 0U) ^ (((unsigned int)mac_flags & 8U) != 0U)) || ((tx_rate & 1024U) != 0U) ^ (((unsigned int)mac_flags & 16U) != 0U)) || rs_index != mac_index) {
    {
      
#line 967 
      bool __cond_2 = (_Bool)((int)*("initial rate %d does not match %d (0x%x)\n" + 40UL) != 10);
      
#line 967 
      if ((int)__cond_2 != 0) 
#line 967 
                              __compiletime_assert_967(); else ;
    }
    
#line 967 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_tx_status","initial rate %d does not match %d (0x%x)\n",mac_index,rs_index,tx_rate);
    
#line 973 
    lq_sta->missed_rate_counter = (u8)((int)lq_sta->missed_rate_counter + 1);
    
#line 974 
    if ((unsigned int)lq_sta->missed_rate_counter > 15U) {
      
#line 975 
      lq_sta->missed_rate_counter = (unsigned char)0U;
      
#line 976 
      iwl_send_lq_cmd(priv,ctx,& lq_sta->lq,(unsigned char)1,(_Bool)0);
    }
    else ;
    
#line 979 
    goto return_label;
  }
  else 
#line 982 
       lq_sta->missed_rate_counter = (unsigned char)0U;
  
#line 985 
  tmp_2 = table_type_matches(& tbl_type,& lq_sta->lq_info[(int)lq_sta->active_tbl]);
  
#line 985 
  if ((int)tmp_2 != 0) {
    
#line 987 
    curr_tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
    
#line 988 
    other_tbl = & lq_sta->lq_info[1 - (int)lq_sta->active_tbl];
  }
  else {
    bool tmp_1;
    
#line 989 
    tmp_1 = table_type_matches(& tbl_type,& lq_sta->lq_info[1 - (int)lq_sta->active_tbl]);
    
#line 989 
    if ((int)tmp_1 != 0) {
      
#line 991 
      curr_tbl = & lq_sta->lq_info[1 - (int)lq_sta->active_tbl];
      
#line 992 
      other_tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
    }
    else {
      {
        
#line 994 
        bool __cond_3 = (_Bool)((int)*("Neither active nor search matches tx rate\n" + 41UL) != 10);
        
#line 994 
        if ((int)__cond_3 != 0) 
#line 994 
                                __compiletime_assert_994(); else ;
      }
      
#line 994 
      __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_tx_status","Neither active nor search matches tx rate\n");
      
#line 995 
      tmp_tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
      {
        
#line 996 
        bool __cond_4 = (_Bool)((int)*("active- lq:%x, ant:%x, SGI:%d\n" + 29UL) != 10);
        
#line 996 
        if ((int)__cond_4 != 0) 
#line 996 
                                __compiletime_assert_997(); else ;
      }
      
#line 996 
      __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_tx_status","active- lq:%x, ant:%x, SGI:%d\n",(unsigned int)tmp_tbl->lq_type,(int)tmp_tbl->ant_type,(int)tmp_tbl->is_SGI);
      
#line 998 
      tmp_tbl = & lq_sta->lq_info[1 - (int)lq_sta->active_tbl];
      {
        
#line 999 
        bool __cond_5 = (_Bool)((int)*("search- lq:%x, ant:%x, SGI:%d\n" + 29UL) != 10);
        
#line 999 
        if ((int)__cond_5 != 0) 
#line 999 
                                __compiletime_assert_1000(); else ;
      }
      
#line 999 
      __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_tx_status","search- lq:%x, ant:%x, SGI:%d\n",(unsigned int)tmp_tbl->lq_type,(int)tmp_tbl->ant_type,(int)tmp_tbl->is_SGI);
      {
        
#line 1001 
        bool __cond_6 = (_Bool)((int)*("actual- lq:%x, ant:%x, SGI:%d\n" + 29UL) != 10);
        
#line 1001 
        if ((int)__cond_6 != 0) 
#line 1001 
                                __compiletime_assert_1002(); else ;
      }
      
#line 1001 
      __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_tx_status","actual- lq:%x, ant:%x, SGI:%d\n",(unsigned int)tbl_type.lq_type,(int)tbl_type.ant_type,(int)tbl_type.is_SGI);
      
#line 1007 
      rs_stay_in_table(lq_sta,(_Bool)1);
      
#line 1008 
      goto done;
    }
  }
  
#line 1018 
  if ((info->flags & 1024U) != 0U) {
    
#line 1019 
    tx_rate = table->rs_table[0].rate_n_flags;
    
#line 1020 
    rs_get_tbl_info_from_mcs(tx_rate,priv->band,& tbl_type,& rs_index);
    
#line 1022 
    rs_collect_tx_data(curr_tbl,rs_index,(int)info->__anonCompField_ieee80211_tx_info_99.status.ampdu_len,(int)info->__anonCompField_ieee80211_tx_info_99.status.ampdu_ack_len);
    
#line 1027 
    if ((unsigned int)lq_sta->stay_in_tbl != 0U) {
      
#line 1028 
      lq_sta->total_success += (unsigned int)info->__anonCompField_ieee80211_tx_info_99.status.ampdu_ack_len;
      
#line 1029 
      lq_sta->total_failed += (unsigned int)((int)info->__anonCompField_ieee80211_tx_info_99.status.ampdu_len - (int)info->__anonCompField_ieee80211_tx_info_99.status.ampdu_ack_len);
    }
    else ;
  }
  else {
    int tmp_4;
    bool tmp_6;
    int tmp_7;
    
#line 1036 
    retries = (int)info->__anonCompField_ieee80211_tx_info_99.status.rates[0].count + -1;
    {
      int tmp_3;
      
#line 1038 
      int _min1 = retries;
      
#line 1038 
      int _min2 = 15;
      
#line 1038 
      if (_min1 < _min2) 
#line 1038 
                         tmp_3 = _min1; else 
#line 1038 
                                             tmp_3 = _min2;
      
#line 1038 
      tmp_4 = tmp_3;
    }
    
#line 1038 
    retries = tmp_4;
    
#line 1041 
    legacy_success = (info->flags & 512U) != 0U;
    
#line 1043 
    i = 0;
    
#line 1043 
    goto ldv_53204;
    ldv_53203: 
#line 1044 
    ;
    
#line 1044 
    tx_rate = table->rs_table[i].rate_n_flags;
    
#line 1045 
    rs_get_tbl_info_from_mcs(tx_rate,priv->band,& tbl_type,& rs_index);
    
#line 1051 
    tmp_6 = table_type_matches(& tbl_type,curr_tbl);
    
#line 1051 
    if ((int)tmp_6 != 0) 
#line 1052 
                         tmp_tbl = curr_tbl;
    else {
      bool tmp_5;
      
#line 1053 
      tmp_5 = table_type_matches(& tbl_type,other_tbl);
      
#line 1053 
      if ((int)tmp_5 != 0) 
#line 1054 
                           tmp_tbl = other_tbl; else 
#line 1056 
                                                     goto ldv_53202;
    }
    
#line 1057 
    if (i >= retries) 
#line 1057 
                      tmp_7 = legacy_success; else 
#line 1057 
                                                   tmp_7 = 0;
    
#line 1057 
    ;
    
#line 1057 
    ;
    
#line 1057 
    rs_collect_tx_data(tmp_tbl,rs_index,1,tmp_7);
    ldv_53202: 
#line 1059 
    ;
    
#line 1043 
    i += 1;
    ldv_53204: 
#line 1044 
    ;
    
#line 1043 
    if (i <= retries) 
#line 1045 
                      goto ldv_53203; else 
#line 1048 
                                           goto ldv_53205;
    ldv_53205: 
#line 1049 
    ;
    
#line 1062 
    if ((unsigned int)lq_sta->stay_in_tbl != 0U) {
      
#line 1063 
      lq_sta->total_success += (unsigned int)legacy_success;
      
#line 1064 
      lq_sta->total_failed += (unsigned int)((1 - legacy_success) + retries);
    }
    else ;
  }
  
#line 1068 
  lq_sta->last_rate_n_flags = tx_rate;
  done: 
#line 1069 
  ;
  
#line 1071 
  if (sta != (struct ieee80211_sta *)0 && sta->supp_rates[(unsigned int)sband->band] != 0U) 
    
#line 1072 
    rs_rate_scale_perform(priv,skb,sta,lq_sta); else ;
  
#line 1074 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) 
    
#line 1075 
    rs_bt_update_lq(priv,ctx,lq_sta); else ;
  return_label: 
#line 1076 
                return;
}


#line 1086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_set_stay_in_table(struct iwl_priv *priv, u8 is_legacy, struct iwl_lq_sta *lq_sta)
{
  {
    
#line 1089 
    bool __cond = (_Bool)((int)*("we are staying in the same table\n" + 32UL) != 10);
    
#line 1089 
    if ((int)__cond != 0) 
#line 1089 
                          __compiletime_assert_1089(); else ;
  }
  
#line 1089 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_set_stay_in_table","we are staying in the same table\n");
  
#line 1090 
  lq_sta->stay_in_tbl = (unsigned char)1U;
  
#line 1091 
  if ((unsigned int)is_legacy != 0U) {
    
#line 1092 
    lq_sta->table_count_limit = 160U;
    
#line 1093 
    lq_sta->max_failure_limit = 160U;
    
#line 1094 
    lq_sta->max_success_limit = 480U;
  }
  else {
    
#line 1096 
    lq_sta->table_count_limit = 1500U;
    
#line 1097 
    lq_sta->max_failure_limit = 400U;
    
#line 1098 
    lq_sta->max_success_limit = 4500U;
  }
  
#line 1100 
  lq_sta->table_count = 0U;
  
#line 1101 
  lq_sta->total_failed = 0U;
  
#line 1102 
  lq_sta->total_success = 0U;
  
#line 1103 
  lq_sta->flush_timer = (unsigned long long)jiffies;
  
#line 1104 
  lq_sta->action_counter = (unsigned char)0U;
  
#line 1105 
  return;
}


#line 1110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_set_expected_tpt_table(struct iwl_lq_sta *lq_sta, struct iwl_scale_tbl_info *tbl)
{
  u16 const (*ht_tbl_pointer)[13U];
  int tmp_0;
  {
    bool __warned;
    
#line 1117 
    int __ret_warn_once = (unsigned int)tbl->lq_type + 4294967295U > 4U;
    
#line 1117 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp;
      {
        
#line 1117 
        int __ret_warn_on = ! __warned;
        
#line 1117 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 1117 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c",1117); else ;
        
#line 1117 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 1117 
      if ((long)tmp != 0L) 
#line 1117 
                           __warned = (_Bool)1; else ;
    }
    else ;
    
#line 1117 
    tmp_0 = (long)(__ret_warn_once != 0);
  }
  
#line 1117 
  if ((long)tmp_0 != 0L) {
    
#line 1118 
    tbl->expected_tpt = (u16 const *)(& expected_tpt_legacy);
    
#line 1119 
    goto return_label;
  }
  else ;
  
#line 1123 
  if ((unsigned int)tbl->lq_type + 4294967295U <= 1U) {
    
#line 1124 
    tbl->expected_tpt = (u16 const *)(& expected_tpt_legacy);
    
#line 1125 
    goto return_label;
  }
  else ;
  
#line 1131 
  if (tbl->lq_type == (unsigned int)LQ_SISO && ((unsigned int)tbl->is_ht40 == 0U || (unsigned int)lq_sta->is_dup != 0U)) 
    
#line 1132 
    ht_tbl_pointer = (u16 const (*)[13U])(& expected_tpt_siso20MHz);
  else 
    
#line 1133 
    if (tbl->lq_type == (unsigned int)LQ_SISO) 
#line 1134 
                                               ht_tbl_pointer = (u16 const (*)[13U])(& expected_tpt_siso40MHz);
    else 
      
#line 1135 
      if (tbl->lq_type == (unsigned int)LQ_MIMO2 && ((unsigned int)tbl->is_ht40 == 0U || (unsigned int)lq_sta->is_dup != 0U)) 
        
#line 1136 
        ht_tbl_pointer = (u16 const (*)[13U])(& expected_tpt_mimo2_20MHz);
      else 
        
#line 1137 
        if (tbl->lq_type == (unsigned int)LQ_MIMO2) 
#line 1138 
                                                    ht_tbl_pointer = (u16 const (*)[13U])(& expected_tpt_mimo2_40MHz);
        else 
          
#line 1139 
          if (tbl->lq_type == (unsigned int)LQ_MIMO3 && ((unsigned int)tbl->is_ht40 == 0U || (unsigned int)lq_sta->is_dup != 0U)) 
            
#line 1140 
            ht_tbl_pointer = (u16 const (*)[13U])(& expected_tpt_mimo3_20MHz); else 
                                                                    
#line 1142 
                                                                    ht_tbl_pointer = (u16 const (*)[13U])(& expected_tpt_mimo3_40MHz);
  
#line 1144 
  if ((unsigned int)tbl->is_SGI == 0U && (unsigned int)lq_sta->is_agg == 0U) 
    
#line 1145 
    tbl->expected_tpt = (u16 const *)ht_tbl_pointer;
  else 
    
#line 1146 
    if ((unsigned int)tbl->is_SGI != 0U && (unsigned int)lq_sta->is_agg == 0U) 
      
#line 1147 
      tbl->expected_tpt = (u16 const *)(ht_tbl_pointer + 1U);
    else 
      
#line 1148 
      if ((unsigned int)tbl->is_SGI == 0U && (unsigned int)lq_sta->is_agg != 0U) 
        
#line 1149 
        tbl->expected_tpt = (u16 const *)(ht_tbl_pointer + 2U); else 
                                                                  
#line 1151 
                                                                  tbl->expected_tpt = (u16 const *)(ht_tbl_pointer + 3U);
  return_label: 
#line 1152 
                return;
}


#line 1166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static s32 rs_get_best_rate(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, struct iwl_scale_tbl_info *tbl, u16 rate_mask, s8 index)
{
  s32 new_rate;
  s32 high;
  s32 low;
  s32 start_hi;
  u16 high_low;
  
#line 1172 
  struct iwl_scale_tbl_info *active_tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
  
#line 1174 
  s32 active_sr = active_tbl->win[(int)index].success_ratio;
  
#line 1175 
  s32 active_tpt = (int)*(active_tbl->expected_tpt + (int)index);
  
#line 1177 
  u16 const *tpt_tbl = tbl->expected_tpt;
  
#line 1181 
  s8 rate = index;
  
#line 1183 
  start_hi = 13;
  
#line 1183 
  low = start_hi;
  
#line 1183 
  high = low;
  
#line 1183 
  new_rate = high;
  ldv_53244: 
#line 1184 
  ;
  
#line 1186 
  high_low = rs_get_adjacent_rate(priv,(unsigned char)((int)((unsigned char)rate)),(unsigned short)((int)rate_mask),(int)tbl->lq_type);
  
#line 1189 
  low = (int)high_low & 255;
  
#line 1190 
  high = ((int)high_low >> 8) & 255;
  
#line 1207 
  if (((int)*(tpt_tbl + (int)rate) * 100 > lq_sta->last_tpt && ((unsigned int)active_sr + 4294965375U <= 8959U && (int)*(tpt_tbl + (int)rate) <= active_tpt)) || (active_sr > 10879 && (int)*(tpt_tbl + (int)rate) > active_tpt)) {
    
#line 1217 
    if (start_hi != 13) {
      
#line 1218 
      new_rate = start_hi;
      
#line 1219 
      goto ldv_53243;
    }
    else ;
    
#line 1222 
    new_rate = (int)rate;
    
#line 1225 
    if (low != 13) 
#line 1226 
                   rate = (signed char)low; else 
#line 1230 
                                                 goto ldv_53243;
  }
  else 
    
#line 1237 
    if (new_rate != 13) 
#line 1238 
                        goto ldv_53243;
    else 
      
#line 1241 
      if (high != 13) {
        
#line 1242 
        start_hi = high;
        
#line 1243 
        rate = (signed char)high;
      }
      else {
        
#line 1247 
        new_rate = (int)rate;
        
#line 1248 
        goto ldv_53243;
      }
  
#line 1186 
  goto ldv_53244;
  ldv_53243: 
#line 1187 
  ;
  
#line 1253 
  return new_rate;
}


#line 1281 
void __compiletime_assert_1281(void);


#line 1298 
void __compiletime_assert_1298(void);


#line 1300 
void __compiletime_assert_1301(void);


#line 1306 
void __compiletime_assert_1307(void);


#line 1259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_switch_to_mimo2(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, struct ieee80211_conf *conf, struct ieee80211_sta *sta, struct iwl_scale_tbl_info *tbl, int index)
{
  int __retres;
  u16 rate_mask;
  s32 rate;
  int tmp_0;
  bool tmp;
  bool tmp_1;
  
#line 1267 
  s8 is_green = (signed char)lq_sta->is_green;
  
#line 1268 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 1269 
  struct iwl_rxon_context *ctx = sta_priv->ctx;
  
#line 1271 
  tmp = conf_is_ht(conf);
  
#line 1271 
  if (tmp) 
#line 1271 
           tmp_0 = 0; else 
#line 1271 
                           tmp_0 = 1;
  
#line 1271 
  if (tmp_0) {
    
#line 1272 
    __retres = -1;
    
#line 1272 
    goto return_label;
  }
  else 
    
#line 1271 
    if (! sta->ht_cap.ht_supported) {
      
#line 1272 
      __retres = -1;
      
#line 1272 
      goto return_label;
    }
    else ;
  
#line 1274 
  if (sta->smps_mode == (unsigned int)IEEE80211_SMPS_STATIC) {
    
#line 1275 
    __retres = -1;
    
#line 1275 
    goto return_label;
  }
  else ;
  
#line 1278 
  if ((unsigned int)priv->hw_params.tx_chains_num <= 1U) {
    
#line 1279 
    __retres = -1;
    
#line 1279 
    goto return_label;
  }
  else ;
  {
    
#line 1281 
    bool __cond = (_Bool)((int)*("LQ: try to switch to MIMO2\n" + 26UL) != 10);
    
#line 1281 
    if ((int)__cond != 0) 
#line 1281 
                          __compiletime_assert_1281(); else ;
  }
  
#line 1281 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_mimo2","LQ: try to switch to MIMO2\n");
  
#line 1283 
  tbl->lq_type = LQ_MIMO2;
  
#line 1284 
  tbl->is_dup = lq_sta->is_dup;
  
#line 1285 
  tbl->action = (unsigned char)0U;
  
#line 1286 
  tbl->max_search = (unsigned char)6U;
  
#line 1287 
  rate_mask = lq_sta->active_mimo2_rate;
  
#line 1289 
  tmp_1 = iwl_is_ht40_tx_allowed(priv,ctx,sta);
  
#line 1289 
  if ((int)tmp_1 != 0) 
#line 1290 
                       tbl->is_ht40 = (unsigned char)1U; else 
#line 1292 
                                                              tbl->is_ht40 = (unsigned char)0U;
  
#line 1294 
  rs_set_expected_tpt_table(lq_sta,tbl);
  
#line 1296 
  rate = rs_get_best_rate(priv,lq_sta,tbl,(unsigned short)((int)rate_mask),(signed char)((int)((signed char)index)));
  {
    
#line 1298 
    bool __cond_0 = (_Bool)((int)*("LQ: MIMO2 best rate %d mask %X\n" + 30UL) != 10);
    
#line 1298 
    if ((int)__cond_0 != 0) 
#line 1298 
                            __compiletime_assert_1298(); else ;
  }
  
#line 1298 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_mimo2","LQ: MIMO2 best rate %d mask %X\n",rate,(int)rate_mask);
  
#line 1299 
  if (rate == 13 || (((int)rate_mask >> rate) & 1) == 0) {
    {
      
#line 1300 
      bool __cond_1 = (_Bool)((int)*("Can\'t switch with index %d rate mask %x\n" + 39UL) != 10);
      
#line 1300 
      if ((int)__cond_1 != 0) 
#line 1300 
                              __compiletime_assert_1301(); else ;
    }
    
#line 1300 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_mimo2","Can\'t switch with index %d rate mask %x\n",rate,(int)rate_mask);
    
#line 1302 
    __retres = -1;
    
#line 1302 
    goto return_label;
  }
  else ;
  
#line 1304 
  tbl->current_rate = rate_n_flags_from_tbl(priv,tbl,rate,(unsigned char)((int)((unsigned char)is_green)));
  {
    
#line 1306 
    bool __cond_2 = (_Bool)((int)*("LQ: Switch to new mcs %X index is green %X\n" + 42UL) != 10);
    
#line 1306 
    if ((int)__cond_2 != 0) 
#line 1306 
                            __compiletime_assert_1307(); else ;
  }
  
#line 1306 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_mimo2","LQ: Switch to new mcs %X index is green %X\n",tbl->current_rate,(int)is_green);
  
#line 1308 
  __retres = 0;
  return_label: 
#line 1308 
                return __retres;
}


#line 1336 
void __compiletime_assert_1336(void);


#line 1353 
void __compiletime_assert_1354(void);


#line 1356 
void __compiletime_assert_1357(void);


#line 1362 
void __compiletime_assert_1363(void);


#line 1314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_switch_to_mimo3(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, struct ieee80211_conf *conf, struct ieee80211_sta *sta, struct iwl_scale_tbl_info *tbl, int index)
{
  int __retres;
  u16 rate_mask;
  s32 rate;
  int tmp_0;
  bool tmp;
  bool tmp_1;
  
#line 1322 
  s8 is_green = (signed char)lq_sta->is_green;
  
#line 1323 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 1324 
  struct iwl_rxon_context *ctx = sta_priv->ctx;
  
#line 1326 
  tmp = conf_is_ht(conf);
  
#line 1326 
  if (tmp) 
#line 1326 
           tmp_0 = 0; else 
#line 1326 
                           tmp_0 = 1;
  
#line 1326 
  if (tmp_0) {
    
#line 1327 
    __retres = -1;
    
#line 1327 
    goto return_label;
  }
  else 
    
#line 1326 
    if (! sta->ht_cap.ht_supported) {
      
#line 1327 
      __retres = -1;
      
#line 1327 
      goto return_label;
    }
    else ;
  
#line 1329 
  if (sta->smps_mode == (unsigned int)IEEE80211_SMPS_STATIC) {
    
#line 1330 
    __retres = -1;
    
#line 1330 
    goto return_label;
  }
  else ;
  
#line 1333 
  if ((unsigned int)priv->hw_params.tx_chains_num <= 2U) {
    
#line 1334 
    __retres = -1;
    
#line 1334 
    goto return_label;
  }
  else ;
  {
    
#line 1336 
    bool __cond = (_Bool)((int)*("LQ: try to switch to MIMO3\n" + 26UL) != 10);
    
#line 1336 
    if ((int)__cond != 0) 
#line 1336 
                          __compiletime_assert_1336(); else ;
  }
  
#line 1336 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_mimo3","LQ: try to switch to MIMO3\n");
  
#line 1338 
  tbl->lq_type = LQ_MIMO3;
  
#line 1339 
  tbl->is_dup = lq_sta->is_dup;
  
#line 1340 
  tbl->action = (unsigned char)0U;
  
#line 1341 
  tbl->max_search = (unsigned char)8U;
  
#line 1342 
  rate_mask = lq_sta->active_mimo3_rate;
  
#line 1344 
  tmp_1 = iwl_is_ht40_tx_allowed(priv,ctx,sta);
  
#line 1344 
  if ((int)tmp_1 != 0) 
#line 1345 
                       tbl->is_ht40 = (unsigned char)1U; else 
#line 1347 
                                                              tbl->is_ht40 = (unsigned char)0U;
  
#line 1349 
  rs_set_expected_tpt_table(lq_sta,tbl);
  
#line 1351 
  rate = rs_get_best_rate(priv,lq_sta,tbl,(unsigned short)((int)rate_mask),(signed char)((int)((signed char)index)));
  {
    
#line 1353 
    bool __cond_0 = (_Bool)((int)*("LQ: MIMO3 best rate %d mask %X\n" + 30UL) != 10);
    
#line 1353 
    if ((int)__cond_0 != 0) 
#line 1353 
                            __compiletime_assert_1354(); else ;
  }
  
#line 1353 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_mimo3","LQ: MIMO3 best rate %d mask %X\n",rate,(int)rate_mask);
  
#line 1355 
  if (rate == 13 || (((int)rate_mask >> rate) & 1) == 0) {
    {
      
#line 1356 
      bool __cond_1 = (_Bool)((int)*("Can\'t switch with index %d rate mask %x\n" + 39UL) != 10);
      
#line 1356 
      if ((int)__cond_1 != 0) 
#line 1356 
                              __compiletime_assert_1357(); else ;
    }
    
#line 1356 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_mimo3","Can\'t switch with index %d rate mask %x\n",rate,(int)rate_mask);
    
#line 1358 
    __retres = -1;
    
#line 1358 
    goto return_label;
  }
  else ;
  
#line 1360 
  tbl->current_rate = rate_n_flags_from_tbl(priv,tbl,rate,(unsigned char)((int)((unsigned char)is_green)));
  {
    
#line 1362 
    bool __cond_2 = (_Bool)((int)*("LQ: Switch to new mcs %X index is green %X\n" + 42UL) != 10);
    
#line 1362 
    if ((int)__cond_2 != 0) 
#line 1362 
                            __compiletime_assert_1363(); else ;
  }
  
#line 1362 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_mimo3","LQ: Switch to new mcs %X index is green %X\n",tbl->current_rate,(int)is_green);
  
#line 1364 
  __retres = 0;
  return_label: 
#line 1364 
                return __retres;
}


#line 1385 
void __compiletime_assert_1385(void);


#line 1411 
void __compiletime_assert_1412(void);


#line 1370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_switch_to_siso(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, struct ieee80211_conf *conf, struct ieee80211_sta *sta, struct iwl_scale_tbl_info *tbl, int index)
{
  int __retres;
  u16 rate_mask;
  s32 rate;
  int tmp_0;
  bool tmp;
  bool tmp_1;
  
#line 1377 
  u8 is_green = lq_sta->is_green;
  
#line 1379 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 1380 
  struct iwl_rxon_context *ctx = sta_priv->ctx;
  
#line 1382 
  tmp = conf_is_ht(conf);
  
#line 1382 
  if (tmp) 
#line 1382 
           tmp_0 = 0; else 
#line 1382 
                           tmp_0 = 1;
  
#line 1382 
  if (tmp_0) {
    
#line 1383 
    __retres = -1;
    
#line 1383 
    goto return_label;
  }
  else 
    
#line 1382 
    if (! sta->ht_cap.ht_supported) {
      
#line 1383 
      __retres = -1;
      
#line 1383 
      goto return_label;
    }
    else ;
  {
    
#line 1385 
    bool __cond = (_Bool)((int)*("LQ: try to switch to SISO\n" + 25UL) != 10);
    
#line 1385 
    if ((int)__cond != 0) 
#line 1385 
                          __compiletime_assert_1385(); else ;
  }
  
#line 1385 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_siso","LQ: try to switch to SISO\n");
  
#line 1387 
  tbl->is_dup = lq_sta->is_dup;
  
#line 1388 
  tbl->lq_type = LQ_SISO;
  
#line 1389 
  tbl->action = (unsigned char)0U;
  
#line 1390 
  tbl->max_search = (unsigned char)6U;
  
#line 1391 
  rate_mask = lq_sta->active_siso_rate;
  
#line 1393 
  tmp_1 = iwl_is_ht40_tx_allowed(priv,ctx,sta);
  
#line 1393 
  if ((int)tmp_1 != 0) 
#line 1394 
                       tbl->is_ht40 = (unsigned char)1U; else 
#line 1396 
                                                              tbl->is_ht40 = (unsigned char)0U;
  
#line 1398 
  if ((unsigned int)is_green != 0U) 
#line 1399 
                                    tbl->is_SGI = (unsigned char)0U; else ;
  
#line 1401 
  rs_set_expected_tpt_table(lq_sta,tbl);
  
#line 1402 
  rate = rs_get_best_rate(priv,lq_sta,tbl,(unsigned short)((int)rate_mask),(signed char)((int)((signed char)index)));
  {
    
#line 1404 
    bool __cond_0 = (_Bool)((int)*("LQ: get best rate %d mask %X\n" + 28UL) != 10);
    
#line 1404 
    if ((int)__cond_0 != 0) 
#line 1404 
                            __compiletime_assert_1404(); else ;
  }
  
#line 1404 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_siso","LQ: get best rate %d mask %X\n",rate,(int)rate_mask);
  
#line 1405 
  if (rate == 13 || (((int)rate_mask >> rate) & 1) == 0) {
    {
      
#line 1406 
      bool __cond_1 = (_Bool)((int)*("can not switch with index %d rate mask %x\n" + 41UL) != 10);
      
#line 1406 
      if ((int)__cond_1 != 0) 
#line 1406 
                              __compiletime_assert_1407(); else ;
    }
    
#line 1406 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_siso","can not switch with index %d rate mask %x\n",rate,(int)rate_mask);
    
#line 1408 
    __retres = -1;
    
#line 1408 
    goto return_label;
  }
  else ;
  
#line 1410 
  tbl->current_rate = rate_n_flags_from_tbl(priv,tbl,rate,(unsigned char)((int)is_green));
  {
    
#line 1411 
    bool __cond_2 = (_Bool)((int)*("LQ: Switch to new mcs %X index is green %X\n" + 42UL) != 10);
    
#line 1411 
    if ((int)__cond_2 != 0) 
#line 1411 
                            __compiletime_assert_1412(); else ;
  }
  
#line 1411 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_switch_to_siso","LQ: Switch to new mcs %X index is green %X\n",tbl->current_rate,(int)is_green);
  
#line 1413 
  __retres = 0;
  return_label: 
#line 1413 
                return __retres;
}


#line 1456 
void __compiletime_assert_1456(void);


#line 1483 
void __compiletime_assert_1483(void);


#line 1509 
void __compiletime_assert_1509(void);


#line 1525 
void __compiletime_assert_1525(void);


#line 1550 
void __compiletime_assert_1550(void);


#line 1419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_move_legacy_other(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, struct ieee80211_conf *conf, struct ieee80211_sta *sta, int index)
{
  int __retres;
  u8 start_action;
  int tmp_1;
  bool tmp_0;
  
#line 1425 
  struct iwl_scale_tbl_info *tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
  
#line 1426 
  struct iwl_scale_tbl_info *search_tbl = & lq_sta->lq_info[1 - (int)lq_sta->active_tbl];
  
#line 1428 
  struct iwl_rate_scale_data *window = & tbl->win[index];
  
#line 1429 
  u32 sz = 32U;
  
#line 1432 
  u8 valid_tx_ant = (priv->nvm_data)->valid_tx_ant;
  
#line 1433 
  u8 tx_chains_num = priv->hw_params.tx_chains_num;
  
#line 1434 
  int ret = 0;
  
#line 1435 
  u8 update_search_tbl_counter = (unsigned char)0U;
  
#line 1437 
  switch ((int)priv->bt_traffic_load) {
    case 0: 
#line 1438 
    ;
    
#line 1440 
    goto ldv_53352;
    case 1: 
#line 1441 
    ;
    
#line 1443 
    if ((unsigned int)tbl->action == 1U) 
#line 1444 
                                         tbl->action = (unsigned char)2U; else ;
    
#line 1445 
    goto ldv_53352;
    case 2: 
#line 1446 
    ;
    case 3: 
#line 1447 
    ;
    
#line 1449 
    valid_tx_ant = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
    
#line 1451 
    if ((unsigned int)tbl->action != 0U && (unsigned int)tbl->action != 2U) 
      
#line 1453 
      tbl->action = (unsigned char)2U; else ;
    
#line 1454 
    goto ldv_53352;
    default: 
#line 1455 
    ;
    {
      
#line 1456 
      bool __cond = (_Bool)((int)*("Invalid BT load %d\n" + 18UL) != 10);
      
#line 1456 
      if ((int)__cond != 0) 
#line 1456 
                            __compiletime_assert_1456(); else ;
    }
    
#line 1456 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid BT load %d\n",(int)priv->bt_traffic_load);
    
#line 1457 
    goto ldv_53352;
  }
  ldv_53352: 
#line 1460 
  ;
  
#line 1460 
  tmp_0 = iwl_ht_enabled(priv);
  
#line 1460 
  if (tmp_0) 
#line 1460 
             tmp_1 = 0; else 
#line 1460 
                             tmp_1 = 1;
  
#line 1460 
  if (tmp_1) 
#line 1462 
             tbl->action = (unsigned char)0U;
  else {
    enum iwl_antenna_ok tmp;
    
#line 1463 
    tmp = iwl_tx_ant_restriction(priv);
    
#line 1463 
    if (tmp == (unsigned int)IWL_ANT_OK_SINGLE) {
      
#line 1463 
      if ((unsigned int)tbl->action > 2U) 
#line 1465 
                                          tbl->action = (unsigned char)2U; else ;
    }
    else ;
  }
  
#line 1468 
  if ((int)priv->bt_full_concurrent != 0) {
    int tmp_3;
    bool tmp_2;
    
#line 1469 
    tmp_2 = iwl_ht_enabled(priv);
    
#line 1469 
    if (tmp_2) 
#line 1469 
               tmp_3 = 0; else 
#line 1469 
                               tmp_3 = 1;
    
#line 1469 
    if (tmp_3) 
#line 1470 
               tbl->action = (unsigned char)0U;
    else 
      
#line 1471 
      if ((unsigned int)tbl->action != 0U) 
#line 1472 
                                           tbl->action = (unsigned char)2U; else ;
    
#line 1473 
    valid_tx_ant = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
  }
  else ;
  
#line 1477 
  start_action = tbl->action;
  ldv_53388: 
#line 1478 
  ;
  
#line 1479 
  lq_sta->action_counter = (u8)((int)lq_sta->action_counter + 1);
  
#line 1480 
  switch ((int)tbl->action) {
    int tmp_4;
    u8 tmp_5;
    u8 tmp_6;
    case 0: 
#line 1481 
    ;
    case 1: 
#line 1482 
    ;
    {
      
#line 1483 
      bool __cond_0 = (_Bool)((int)*("LQ: Legacy toggle Antenna\n" + 25UL) != 10);
      
#line 1483 
      if ((int)__cond_0 != 0) 
#line 1483 
                              __compiletime_assert_1483(); else ;
    }
    
#line 1483 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_legacy_other","LQ: Legacy toggle Antenna\n");
    
#line 1485 
    if (((unsigned int)tbl->action == 0U && (unsigned int)tx_chains_num <= 1U) || ((unsigned int)tbl->action == 1U && (unsigned int)tx_chains_num <= 2U)) 
      
#line 1489 
      goto ldv_53368; else ;
    
#line 1492 
    if ((window->success_ratio > 12799 && ! priv->bt_full_concurrent) && (unsigned int)priv->bt_traffic_load == 0U) 
      
#line 1496 
      goto ldv_53368; else ;
    
#line 1499 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1501 
    tmp_4 = rs_toggle_antenna((unsigned int)valid_tx_ant,& search_tbl->current_rate,search_tbl);
    
#line 1501 
    if (tmp_4 != 0) {
      
#line 1503 
      update_search_tbl_counter = (unsigned char)1U;
      
#line 1504 
      rs_set_expected_tpt_table(lq_sta,search_tbl);
      
#line 1505 
      goto out;
    }
    else ;
    
#line 1507 
    goto ldv_53368;
    case 2: 
#line 1508 
    ;
    {
      
#line 1509 
      bool __cond_1 = (_Bool)((int)*("LQ: Legacy switch to SISO\n" + 25UL) != 10);
      
#line 1509 
      if ((int)__cond_1 != 0) 
#line 1509 
                              __compiletime_assert_1509(); else ;
    }
    
#line 1509 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_legacy_other","LQ: Legacy switch to SISO\n");
    
#line 1512 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1513 
    search_tbl->is_SGI = (unsigned char)0U;
    
#line 1514 
    ret = rs_switch_to_siso(priv,lq_sta,conf,sta,search_tbl,index);
    
#line 1516 
    if (ret == 0) {
      
#line 1517 
      lq_sta->action_counter = (unsigned char)0U;
      
#line 1518 
      goto out;
    }
    else ;
    
#line 1521 
    goto ldv_53368;
    case 3: 
#line 1522 
    ;
    case 4: 
#line 1523 
    ;
    case 5: 
#line 1524 
    ;
    {
      
#line 1525 
      bool __cond_2 = (_Bool)((int)*("LQ: Legacy switch to MIMO2\n" + 26UL) != 10);
      
#line 1525 
      if ((int)__cond_2 != 0) 
#line 1525 
                              __compiletime_assert_1525(); else ;
    }
    
#line 1525 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_legacy_other","LQ: Legacy switch to MIMO2\n");
    
#line 1528 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1529 
    search_tbl->is_SGI = (unsigned char)0U;
    
#line 1531 
    if ((unsigned int)tbl->action == 3U) 
#line 1532 
                                         search_tbl->ant_type = (unsigned char)3U;
    else 
      
#line 1533 
      if ((unsigned int)tbl->action == 4U) 
#line 1534 
                                           search_tbl->ant_type = (unsigned char)5U; else 
                                                                    
#line 1536 
                                                                    search_tbl->ant_type = (unsigned char)6U;
    
#line 1538 
    tmp_5 = rs_is_valid_ant((unsigned char)((int)valid_tx_ant),(unsigned char)((int)search_tbl->ant_type));
    
#line 1538 
    if ((unsigned int)tmp_5 == 0U) 
#line 1539 
                                   goto ldv_53368; else ;
    
#line 1541 
    ret = rs_switch_to_mimo2(priv,lq_sta,conf,sta,search_tbl,index);
    
#line 1543 
    if (ret == 0) {
      
#line 1544 
      lq_sta->action_counter = (unsigned char)0U;
      
#line 1545 
      goto out;
    }
    else ;
    
#line 1547 
    goto ldv_53368;
    case 6: 
#line 1549 
    ;
    {
      
#line 1550 
      bool __cond_3 = (_Bool)((int)*("LQ: Legacy switch to MIMO3\n" + 26UL) != 10);
      
#line 1550 
      if ((int)__cond_3 != 0) 
#line 1550 
                              __compiletime_assert_1550(); else ;
    }
    
#line 1550 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_legacy_other","LQ: Legacy switch to MIMO3\n");
    
#line 1553 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1554 
    search_tbl->is_SGI = (unsigned char)0U;
    
#line 1556 
    search_tbl->ant_type = (unsigned char)7U;
    
#line 1558 
    tmp_6 = rs_is_valid_ant((unsigned char)((int)valid_tx_ant),(unsigned char)((int)search_tbl->ant_type));
    
#line 1558 
    if ((unsigned int)tmp_6 == 0U) 
#line 1559 
                                   goto ldv_53368; else ;
    
#line 1561 
    ret = rs_switch_to_mimo3(priv,lq_sta,conf,sta,search_tbl,index);
    
#line 1563 
    if (ret == 0) {
      
#line 1564 
      lq_sta->action_counter = (unsigned char)0U;
      
#line 1565 
      goto out;
    }
    else ;
    
#line 1567 
    goto ldv_53368;
  }
  ldv_53368: 
#line 1569 
  ;
  
#line 1569 
  tbl->action = (u8)((int)tbl->action + 1);
  
#line 1570 
  if ((unsigned int)tbl->action > 6U) 
#line 1571 
                                      tbl->action = (unsigned char)0U; else ;
  
#line 1573 
  if ((int)tbl->action == (int)start_action) 
#line 1574 
                                             goto ldv_53387; else ;
  
#line 1479 
  goto ldv_53388;
  ldv_53387: 
#line 1480 
  ;
  
#line 1577 
  search_tbl->lq_type = LQ_NONE;
  
#line 1578 
  __retres = 0;
  
#line 1578 
  goto return_label;
  out: 
#line 1580 
  ;
  
#line 1581 
  lq_sta->search_better_tbl = (unsigned char)1U;
  
#line 1582 
  tbl->action = (u8)((int)tbl->action + 1);
  
#line 1583 
  if ((unsigned int)tbl->action > 6U) 
#line 1584 
                                      tbl->action = (unsigned char)0U; else ;
  
#line 1585 
  if ((unsigned int)update_search_tbl_counter != 0U) 
#line 1586 
                                                     search_tbl->action = tbl->action; else ;
  
#line 1587 
  __retres = 0;
  return_label: 
#line 1587 
                return __retres;
}


#line 1631 
void __compiletime_assert_1631(void);


#line 1655 
void __compiletime_assert_1655(void);


#line 1678 
void __compiletime_assert_1678(void);


#line 1705 
void __compiletime_assert_1705(void);


#line 1712 
void __compiletime_assert_1713(void);


#line 1728 
void __compiletime_assert_1728(void);


#line 1594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_move_siso_to_other(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, struct ieee80211_conf *conf, struct ieee80211_sta *sta, int index)
{
  int __retres;
  u8 start_action;
  int ret;
  enum iwl_antenna_ok tmp;
  
#line 1599 
  u8 is_green = lq_sta->is_green;
  
#line 1600 
  struct iwl_scale_tbl_info *tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
  
#line 1601 
  struct iwl_scale_tbl_info *search_tbl = & lq_sta->lq_info[1 - (int)lq_sta->active_tbl];
  
#line 1603 
  struct iwl_rate_scale_data *window = & tbl->win[index];
  
#line 1604 
  struct ieee80211_sta_ht_cap *ht_cap = & sta->ht_cap;
  
#line 1605 
  u32 sz = 32U;
  
#line 1608 
  u8 valid_tx_ant = (priv->nvm_data)->valid_tx_ant;
  
#line 1609 
  u8 tx_chains_num = priv->hw_params.tx_chains_num;
  
#line 1610 
  u8 update_search_tbl_counter = (unsigned char)0U;
  
#line 1613 
  switch ((int)priv->bt_traffic_load) {
    case 0: 
#line 1614 
    ;
    
#line 1616 
    goto ldv_53408;
    case 1: 
#line 1617 
    ;
    
#line 1619 
    if ((unsigned int)tbl->action == 1U) 
#line 1620 
                                         tbl->action = (unsigned char)2U; else ;
    
#line 1621 
    goto ldv_53408;
    case 2: 
#line 1622 
    ;
    case 3: 
#line 1623 
    ;
    
#line 1625 
    valid_tx_ant = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
    
#line 1627 
    if ((unsigned int)tbl->action != 0U) 
#line 1628 
                                         tbl->action = (unsigned char)0U; else ;
    
#line 1629 
    goto ldv_53408;
    default: 
#line 1630 
    ;
    {
      
#line 1631 
      bool __cond = (_Bool)((int)*("Invalid BT load %d\n" + 18UL) != 10);
      
#line 1631 
      if ((int)__cond != 0) 
#line 1631 
                            __compiletime_assert_1631(); else ;
    }
    
#line 1631 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid BT load %d\n",(int)priv->bt_traffic_load);
    
#line 1632 
    goto ldv_53408;
  }
  ldv_53408: 
#line 1635 
  ;
  
#line 1635 
  tmp = iwl_tx_ant_restriction(priv);
  
#line 1635 
  if (tmp == (unsigned int)IWL_ANT_OK_SINGLE) {
    
#line 1635 
    if ((unsigned int)tbl->action > 1U) 
#line 1638 
                                        tbl->action = (unsigned char)0U; else ;
  }
  else ;
  
#line 1642 
  if ((int)priv->bt_full_concurrent != 0) {
    
#line 1643 
    valid_tx_ant = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
    
#line 1645 
    if ((unsigned int)tbl->action != 0U) 
#line 1646 
                                         tbl->action = (unsigned char)0U; else ;
  }
  else ;
  
#line 1649 
  start_action = tbl->action;
  ldv_53449: 
#line 1650 
  ;
  
#line 1651 
  lq_sta->action_counter = (u8)((int)lq_sta->action_counter + 1);
  
#line 1652 
  switch ((int)tbl->action) {
    int tmp_0;
    u8 tmp_1;
    u8 tmp_2;
    case 0: 
#line 1653 
    ;
    case 1: 
#line 1654 
    ;
    {
      
#line 1655 
      bool __cond_0 = (_Bool)((int)*("LQ: SISO toggle Antenna\n" + 23UL) != 10);
      
#line 1655 
      if ((int)__cond_0 != 0) 
#line 1655 
                              __compiletime_assert_1655(); else ;
    }
    
#line 1655 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_siso_to_other","LQ: SISO toggle Antenna\n");
    
#line 1656 
    if (((unsigned int)tbl->action == 0U && (unsigned int)tx_chains_num <= 1U) || ((unsigned int)tbl->action == 1U && (unsigned int)tx_chains_num <= 2U)) 
      
#line 1660 
      goto ldv_53424; else ;
    
#line 1662 
    if ((window->success_ratio > 12799 && ! priv->bt_full_concurrent) && (unsigned int)priv->bt_traffic_load == 0U) 
      
#line 1666 
      goto ldv_53424; else ;
    
#line 1668 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1669 
    tmp_0 = rs_toggle_antenna((unsigned int)valid_tx_ant,& search_tbl->current_rate,search_tbl);
    
#line 1669 
    if (tmp_0 != 0) {
      
#line 1671 
      update_search_tbl_counter = (unsigned char)1U;
      
#line 1672 
      goto out;
    }
    else ;
    
#line 1674 
    goto ldv_53424;
    case 2: 
#line 1675 
    ;
    case 3: 
#line 1676 
    ;
    case 4: 
#line 1677 
    ;
    {
      
#line 1678 
      bool __cond_1 = (_Bool)((int)*("LQ: SISO switch to MIMO2\n" + 24UL) != 10);
      
#line 1678 
      if ((int)__cond_1 != 0) 
#line 1678 
                              __compiletime_assert_1678(); else ;
    }
    
#line 1678 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_siso_to_other","LQ: SISO switch to MIMO2\n");
    
#line 1679 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1680 
    search_tbl->is_SGI = (unsigned char)0U;
    
#line 1682 
    if ((unsigned int)tbl->action == 2U) 
#line 1683 
                                         search_tbl->ant_type = (unsigned char)3U;
    else 
      
#line 1684 
      if ((unsigned int)tbl->action == 3U) 
#line 1685 
                                           search_tbl->ant_type = (unsigned char)5U; else 
                                                                    
#line 1687 
                                                                    search_tbl->ant_type = (unsigned char)6U;
    
#line 1689 
    tmp_1 = rs_is_valid_ant((unsigned char)((int)valid_tx_ant),(unsigned char)((int)search_tbl->ant_type));
    
#line 1689 
    if ((unsigned int)tmp_1 == 0U) 
#line 1690 
                                   goto ldv_53424; else ;
    
#line 1692 
    ret = rs_switch_to_mimo2(priv,lq_sta,conf,sta,search_tbl,index);
    
#line 1694 
    if (ret == 0) 
#line 1695 
                  goto out; else ;
    
#line 1696 
    goto ldv_53424;
    case 5: 
#line 1697 
    ;
    
#line 1698 
    if ((unsigned int)tbl->is_ht40 == 0U && ((int)ht_cap->cap & 32) == 0) 
      
#line 1700 
      goto ldv_53424; else ;
    
#line 1701 
    if ((unsigned int)tbl->is_ht40 != 0U && ((int)ht_cap->cap & 64) == 0) 
      
#line 1703 
      goto ldv_53424; else ;
    {
      
#line 1705 
      bool __cond_2 = (_Bool)((int)*("LQ: SISO toggle SGI/NGI\n" + 23UL) != 10);
      
#line 1705 
      if ((int)__cond_2 != 0) 
#line 1705 
                              __compiletime_assert_1705(); else ;
    }
    
#line 1705 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_siso_to_other","LQ: SISO toggle SGI/NGI\n");
    
#line 1707 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1708 
    if ((unsigned int)is_green != 0U) {
      
#line 1709 
      if ((unsigned int)tbl->is_SGI == 0U) 
#line 1710 
                                           goto ldv_53424;
      else {
        {
          
#line 1712 
          bool __cond_3 = (_Bool)((int)*("SGI was set in GF+SISO\n" + 22UL) != 10);
          
#line 1712 
          if ((int)__cond_3 != 0) 
#line 1712 
                                  __compiletime_assert_1713(); else ;
        }
        
#line 1712 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"SGI was set in GF+SISO\n");
      }
    }
    else ;
    
#line 1715 
    search_tbl->is_SGI = (unsigned char)((unsigned int)tbl->is_SGI == 0U);
    
#line 1716 
    rs_set_expected_tpt_table(lq_sta,search_tbl);
    
#line 1717 
    if ((unsigned int)tbl->is_SGI != 0U) {
      
#line 1718 
      s32 tpt = lq_sta->last_tpt / 100;
      
#line 1719 
      if ((int)*(search_tbl->expected_tpt + index) <= tpt) 
#line 1720 
                                                           goto ldv_53424; else ;
    }
    else ;
    
#line 1722 
    search_tbl->current_rate = rate_n_flags_from_tbl(priv,search_tbl,index,(unsigned char)((int)is_green));
    
#line 1725 
    update_search_tbl_counter = (unsigned char)1U;
    
#line 1726 
    goto out;
    case 6: 
#line 1727 
    ;
    {
      
#line 1728 
      bool __cond_4 = (_Bool)((int)*("LQ: SISO switch to MIMO3\n" + 24UL) != 10);
      
#line 1728 
      if ((int)__cond_4 != 0) 
#line 1728 
                              __compiletime_assert_1728(); else ;
    }
    
#line 1728 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_siso_to_other","LQ: SISO switch to MIMO3\n");
    
#line 1729 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1730 
    search_tbl->is_SGI = (unsigned char)0U;
    
#line 1731 
    search_tbl->ant_type = (unsigned char)7U;
    
#line 1733 
    tmp_2 = rs_is_valid_ant((unsigned char)((int)valid_tx_ant),(unsigned char)((int)search_tbl->ant_type));
    
#line 1733 
    if ((unsigned int)tmp_2 == 0U) 
#line 1734 
                                   goto ldv_53424; else ;
    
#line 1736 
    ret = rs_switch_to_mimo3(priv,lq_sta,conf,sta,search_tbl,index);
    
#line 1738 
    if (ret == 0) 
#line 1739 
                  goto out; else ;
    
#line 1740 
    goto ldv_53424;
  }
  ldv_53424: 
#line 1742 
  ;
  
#line 1742 
  tbl->action = (u8)((int)tbl->action + 1);
  
#line 1743 
  if ((unsigned int)tbl->action > 6U) 
#line 1744 
                                      tbl->action = (unsigned char)0U; else ;
  
#line 1746 
  if ((int)tbl->action == (int)start_action) 
#line 1747 
                                             goto ldv_53448; else ;
  
#line 1651 
  goto ldv_53449;
  ldv_53448: 
#line 1652 
  ;
  
#line 1749 
  search_tbl->lq_type = LQ_NONE;
  
#line 1750 
  __retres = 0;
  
#line 1750 
  goto return_label;
  out: 
#line 1752 
  ;
  
#line 1753 
  lq_sta->search_better_tbl = (unsigned char)1U;
  
#line 1754 
  tbl->action = (u8)((int)tbl->action + 1);
  
#line 1755 
  if ((unsigned int)tbl->action > 6U) 
#line 1756 
                                      tbl->action = (unsigned char)0U; else ;
  
#line 1757 
  if ((unsigned int)update_search_tbl_counter != 0U) 
#line 1758 
                                                     search_tbl->action = tbl->action; else ;
  
#line 1760 
  __retres = 0;
  return_label: 
#line 1760 
                return __retres;
}


#line 1802 
void __compiletime_assert_1802(void);


#line 1825 
void __compiletime_assert_1825(void);


#line 1843 
void __compiletime_assert_1843(void);


#line 1873 
void __compiletime_assert_1873(void);


#line 1897 
void __compiletime_assert_1897(void);


#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_move_mimo2_to_other(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, struct ieee80211_conf *conf, struct ieee80211_sta *sta, int index)
{
  int __retres;
  u8 start_action;
  int ret;
  enum iwl_antenna_ok tmp;
  
#line 1771 
  s8 is_green = (signed char)lq_sta->is_green;
  
#line 1772 
  struct iwl_scale_tbl_info *tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
  
#line 1773 
  struct iwl_scale_tbl_info *search_tbl = & lq_sta->lq_info[1 - (int)lq_sta->active_tbl];
  
#line 1775 
  struct iwl_rate_scale_data *window = & tbl->win[index];
  
#line 1776 
  struct ieee80211_sta_ht_cap *ht_cap = & sta->ht_cap;
  
#line 1777 
  u32 sz = 32U;
  
#line 1780 
  u8 valid_tx_ant = (priv->nvm_data)->valid_tx_ant;
  
#line 1781 
  u8 tx_chains_num = priv->hw_params.tx_chains_num;
  
#line 1782 
  u8 update_search_tbl_counter = (unsigned char)0U;
  
#line 1785 
  switch ((int)priv->bt_traffic_load) {
    case 0: 
#line 1786 
    ;
    
#line 1788 
    goto ldv_53469;
    case 2: 
#line 1789 
    ;
    case 3: 
#line 1790 
    ;
    
#line 1792 
    if ((unsigned int)tbl->action != 2U) 
#line 1793 
                                         tbl->action = (unsigned char)2U; else ;
    
#line 1794 
    goto ldv_53469;
    case 1: 
#line 1795 
    ;
    
#line 1797 
    if ((unsigned int)tbl->action + 253U <= 1U) 
#line 1799 
                                                tbl->action = (unsigned char)2U; else ;
    
#line 1800 
    goto ldv_53469;
    default: 
#line 1801 
    ;
    {
      
#line 1802 
      bool __cond = (_Bool)((int)*("Invalid BT load %d\n" + 18UL) != 10);
      
#line 1802 
      if ((int)__cond != 0) 
#line 1802 
                            __compiletime_assert_1802(); else ;
    }
    
#line 1802 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid BT load %d\n",(int)priv->bt_traffic_load);
    
#line 1803 
    goto ldv_53469;
  }
  ldv_53469: 
#line 1806 
  ;
  
#line 1806 
  tmp = iwl_tx_ant_restriction(priv);
  
#line 1806 
  if (tmp == (unsigned int)IWL_ANT_OK_SINGLE) {
    
#line 1806 
    if ((unsigned int)tbl->action + 254U > 2U) 
#line 1810 
                                               tbl->action = (unsigned char)2U; else ;
  }
  else ;
  
#line 1814 
  if ((int)priv->bt_full_concurrent != 0 && (unsigned int)tbl->action + 254U > 2U) 
    
#line 1817 
    tbl->action = (unsigned char)2U; else ;
  
#line 1819 
  start_action = tbl->action;
  ldv_53506: 
#line 1820 
  ;
  
#line 1821 
  lq_sta->action_counter = (u8)((int)lq_sta->action_counter + 1);
  
#line 1822 
  switch ((int)tbl->action) {
    int tmp_0;
    u8 tmp_1;
    u8 tmp_2;
    case 0: 
#line 1823 
    ;
    case 1: 
#line 1824 
    ;
    {
      
#line 1825 
      bool __cond_0 = (_Bool)((int)*("LQ: MIMO2 toggle Antennas\n" + 25UL) != 10);
      
#line 1825 
      if ((int)__cond_0 != 0) 
#line 1825 
                              __compiletime_assert_1825(); else ;
    }
    
#line 1825 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_mimo2_to_other","LQ: MIMO2 toggle Antennas\n");
    
#line 1827 
    if ((unsigned int)tx_chains_num <= 2U) 
#line 1828 
                                           goto ldv_53485; else ;
    
#line 1830 
    if (window->success_ratio > 12799) 
#line 1831 
                                       goto ldv_53485; else ;
    
#line 1833 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1834 
    tmp_0 = rs_toggle_antenna((unsigned int)valid_tx_ant,& search_tbl->current_rate,search_tbl);
    
#line 1834 
    if (tmp_0 != 0) {
      
#line 1836 
      update_search_tbl_counter = (unsigned char)1U;
      
#line 1837 
      goto out;
    }
    else ;
    
#line 1839 
    goto ldv_53485;
    case 2: 
#line 1840 
    ;
    case 3: 
#line 1841 
    ;
    case 4: 
#line 1842 
    ;
    {
      
#line 1843 
      bool __cond_1 = (_Bool)((int)*("LQ: MIMO2 switch to SISO\n" + 24UL) != 10);
      
#line 1843 
      if ((int)__cond_1 != 0) 
#line 1843 
                              __compiletime_assert_1843(); else ;
    }
    
#line 1843 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_mimo2_to_other","LQ: MIMO2 switch to SISO\n");
    
#line 1846 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1848 
    if ((unsigned int)tbl->action == 2U) 
#line 1849 
                                         search_tbl->ant_type = (unsigned char)1U;
    else 
      
#line 1850 
      if ((unsigned int)tbl->action == 3U) 
#line 1851 
                                           search_tbl->ant_type = (unsigned char)2U; else 
                                                                    
#line 1853 
                                                                    search_tbl->ant_type = (unsigned char)4U;
    
#line 1855 
    tmp_1 = rs_is_valid_ant((unsigned char)((int)valid_tx_ant),(unsigned char)((int)search_tbl->ant_type));
    
#line 1855 
    if ((unsigned int)tmp_1 == 0U) 
#line 1856 
                                   goto ldv_53485; else ;
    
#line 1858 
    ret = rs_switch_to_siso(priv,lq_sta,conf,sta,search_tbl,index);
    
#line 1860 
    if (ret == 0) 
#line 1861 
                  goto out; else ;
    
#line 1863 
    goto ldv_53485;
    case 5: 
#line 1865 
    ;
    
#line 1866 
    if ((unsigned int)tbl->is_ht40 == 0U && ((int)ht_cap->cap & 32) == 0) 
      
#line 1868 
      goto ldv_53485; else ;
    
#line 1869 
    if ((unsigned int)tbl->is_ht40 != 0U && ((int)ht_cap->cap & 64) == 0) 
      
#line 1871 
      goto ldv_53485; else ;
    {
      
#line 1873 
      bool __cond_2 = (_Bool)((int)*("LQ: MIMO2 toggle SGI/NGI\n" + 24UL) != 10);
      
#line 1873 
      if ((int)__cond_2 != 0) 
#line 1873 
                              __compiletime_assert_1873(); else ;
    }
    
#line 1873 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_mimo2_to_other","LQ: MIMO2 toggle SGI/NGI\n");
    
#line 1876 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1877 
    search_tbl->is_SGI = (unsigned char)((unsigned int)tbl->is_SGI == 0U);
    
#line 1878 
    rs_set_expected_tpt_table(lq_sta,search_tbl);
    
#line 1885 
    if ((unsigned int)tbl->is_SGI != 0U) {
      
#line 1886 
      s32 tpt = lq_sta->last_tpt / 100;
      
#line 1887 
      if ((int)*(search_tbl->expected_tpt + index) <= tpt) 
#line 1888 
                                                           goto ldv_53485; else ;
    }
    else ;
    
#line 1890 
    search_tbl->current_rate = rate_n_flags_from_tbl(priv,search_tbl,index,(unsigned char)((int)((unsigned char)is_green)));
    
#line 1893 
    update_search_tbl_counter = (unsigned char)1U;
    
#line 1894 
    goto out;
    case 6: 
#line 1896 
    ;
    {
      
#line 1897 
      bool __cond_3 = (_Bool)((int)*("LQ: MIMO2 switch to MIMO3\n" + 25UL) != 10);
      
#line 1897 
      if ((int)__cond_3 != 0) 
#line 1897 
                              __compiletime_assert_1897(); else ;
    }
    
#line 1897 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_mimo2_to_other","LQ: MIMO2 switch to MIMO3\n");
    
#line 1898 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 1899 
    search_tbl->is_SGI = (unsigned char)0U;
    
#line 1900 
    search_tbl->ant_type = (unsigned char)7U;
    
#line 1902 
    tmp_2 = rs_is_valid_ant((unsigned char)((int)valid_tx_ant),(unsigned char)((int)search_tbl->ant_type));
    
#line 1902 
    if ((unsigned int)tmp_2 == 0U) 
#line 1903 
                                   goto ldv_53485; else ;
    
#line 1905 
    ret = rs_switch_to_mimo3(priv,lq_sta,conf,sta,search_tbl,index);
    
#line 1907 
    if (ret == 0) 
#line 1908 
                  goto out; else ;
    
#line 1910 
    goto ldv_53485;
  }
  ldv_53485: 
#line 1912 
  ;
  
#line 1912 
  tbl->action = (u8)((int)tbl->action + 1);
  
#line 1913 
  if ((unsigned int)tbl->action > 6U) 
#line 1914 
                                      tbl->action = (unsigned char)0U; else ;
  
#line 1916 
  if ((int)tbl->action == (int)start_action) 
#line 1917 
                                             goto ldv_53505; else ;
  
#line 1821 
  goto ldv_53506;
  ldv_53505: 
#line 1822 
  ;
  
#line 1919 
  search_tbl->lq_type = LQ_NONE;
  
#line 1920 
  __retres = 0;
  
#line 1920 
  goto return_label;
  out: 
#line 1921 
  ;
  
#line 1922 
  lq_sta->search_better_tbl = (unsigned char)1U;
  
#line 1923 
  tbl->action = (u8)((int)tbl->action + 1);
  
#line 1924 
  if ((unsigned int)tbl->action > 6U) 
#line 1925 
                                      tbl->action = (unsigned char)0U; else ;
  
#line 1926 
  if ((unsigned int)update_search_tbl_counter != 0U) 
#line 1927 
                                                     search_tbl->action = tbl->action; else ;
  
#line 1929 
  __retres = 0;
  return_label: 
#line 1929 
                return __retres;
}


#line 1972 
void __compiletime_assert_1972(void);


#line 1995 
void __compiletime_assert_1995(void);


#line 2011 
void __compiletime_assert_2011(void);


#line 2036 
void __compiletime_assert_2036(void);


#line 2065 
void __compiletime_assert_2065(void);


#line 1936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static int rs_move_mimo3_to_other(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, struct ieee80211_conf *conf, struct ieee80211_sta *sta, int index)
{
  int __retres;
  u8 start_action;
  int ret;
  enum iwl_antenna_ok tmp;
  
#line 1941 
  s8 is_green = (signed char)lq_sta->is_green;
  
#line 1942 
  struct iwl_scale_tbl_info *tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
  
#line 1943 
  struct iwl_scale_tbl_info *search_tbl = & lq_sta->lq_info[1 - (int)lq_sta->active_tbl];
  
#line 1945 
  struct iwl_rate_scale_data *window = & tbl->win[index];
  
#line 1946 
  struct ieee80211_sta_ht_cap *ht_cap = & sta->ht_cap;
  
#line 1947 
  u32 sz = 32U;
  
#line 1950 
  u8 valid_tx_ant = (priv->nvm_data)->valid_tx_ant;
  
#line 1951 
  u8 tx_chains_num = priv->hw_params.tx_chains_num;
  
#line 1953 
  u8 update_search_tbl_counter = (unsigned char)0U;
  
#line 1955 
  switch ((int)priv->bt_traffic_load) {
    case 0: 
#line 1956 
    ;
    
#line 1958 
    goto ldv_53526;
    case 2: 
#line 1959 
    ;
    case 3: 
#line 1960 
    ;
    
#line 1962 
    if ((unsigned int)tbl->action != 2U) 
#line 1963 
                                         tbl->action = (unsigned char)2U; else ;
    
#line 1964 
    goto ldv_53526;
    case 1: 
#line 1965 
    ;
    
#line 1967 
    if ((unsigned int)tbl->action + 253U <= 1U) 
#line 1969 
                                                tbl->action = (unsigned char)2U; else ;
    
#line 1970 
    goto ldv_53526;
    default: 
#line 1971 
    ;
    {
      
#line 1972 
      bool __cond = (_Bool)((int)*("Invalid BT load %d\n" + 18UL) != 10);
      
#line 1972 
      if ((int)__cond != 0) 
#line 1972 
                            __compiletime_assert_1972(); else ;
    }
    
#line 1972 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid BT load %d\n",(int)priv->bt_traffic_load);
    
#line 1973 
    goto ldv_53526;
  }
  ldv_53526: 
#line 1976 
  ;
  
#line 1976 
  tmp = iwl_tx_ant_restriction(priv);
  
#line 1976 
  if (tmp == (unsigned int)IWL_ANT_OK_SINGLE) {
    
#line 1976 
    if ((unsigned int)tbl->action + 254U > 2U) 
#line 1980 
                                               tbl->action = (unsigned char)2U; else ;
  }
  else ;
  
#line 1984 
  if ((int)priv->bt_full_concurrent != 0 && (unsigned int)tbl->action + 254U > 2U) 
    
#line 1987 
    tbl->action = (unsigned char)2U; else ;
  
#line 1989 
  start_action = tbl->action;
  ldv_53565: 
#line 1990 
  ;
  
#line 1991 
  lq_sta->action_counter = (u8)((int)lq_sta->action_counter + 1);
  
#line 1992 
  switch ((int)tbl->action) {
    int tmp_0;
    u8 tmp_1;
    u8 tmp_2;
    case 0: 
#line 1993 
    ;
    case 1: 
#line 1994 
    ;
    {
      
#line 1995 
      bool __cond_0 = (_Bool)((int)*("LQ: MIMO3 toggle Antennas\n" + 25UL) != 10);
      
#line 1995 
      if ((int)__cond_0 != 0) 
#line 1995 
                              __compiletime_assert_1995(); else ;
    }
    
#line 1995 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_mimo3_to_other","LQ: MIMO3 toggle Antennas\n");
    
#line 1997 
    if ((unsigned int)tx_chains_num <= 3U) 
#line 1998 
                                           goto ldv_53542; else ;
    
#line 2000 
    if (window->success_ratio > 12799) 
#line 2001 
                                       goto ldv_53542; else ;
    
#line 2003 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 2004 
    tmp_0 = rs_toggle_antenna((unsigned int)valid_tx_ant,& search_tbl->current_rate,search_tbl);
    
#line 2004 
    if (tmp_0 != 0) 
#line 2006 
                    goto out; else ;
    
#line 2007 
    goto ldv_53542;
    case 2: 
#line 2008 
    ;
    case 3: 
#line 2009 
    ;
    case 4: 
#line 2010 
    ;
    {
      
#line 2011 
      bool __cond_1 = (_Bool)((int)*("LQ: MIMO3 switch to SISO\n" + 24UL) != 10);
      
#line 2011 
      if ((int)__cond_1 != 0) 
#line 2011 
                              __compiletime_assert_2011(); else ;
    }
    
#line 2011 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_mimo3_to_other","LQ: MIMO3 switch to SISO\n");
    
#line 2014 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 2016 
    if ((unsigned int)tbl->action == 2U) 
#line 2017 
                                         search_tbl->ant_type = (unsigned char)1U;
    else 
      
#line 2018 
      if ((unsigned int)tbl->action == 3U) 
#line 2019 
                                           search_tbl->ant_type = (unsigned char)2U; else 
                                                                    
#line 2021 
                                                                    search_tbl->ant_type = (unsigned char)4U;
    
#line 2023 
    tmp_1 = rs_is_valid_ant((unsigned char)((int)valid_tx_ant),(unsigned char)((int)search_tbl->ant_type));
    
#line 2023 
    if ((unsigned int)tmp_1 == 0U) 
#line 2024 
                                   goto ldv_53542; else ;
    
#line 2026 
    ret = rs_switch_to_siso(priv,lq_sta,conf,sta,search_tbl,index);
    
#line 2028 
    if (ret == 0) 
#line 2029 
                  goto out; else ;
    
#line 2031 
    goto ldv_53542;
    case 5: 
#line 2033 
    ;
    case 6: 
#line 2034 
    ;
    case 7: 
#line 2035 
    ;
    {
      
#line 2036 
      bool __cond_2 = (_Bool)((int)*("LQ: MIMO3 switch to MIMO2\n" + 25UL) != 10);
      
#line 2036 
      if ((int)__cond_2 != 0) 
#line 2036 
                              __compiletime_assert_2036(); else ;
    }
    
#line 2036 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_mimo3_to_other","LQ: MIMO3 switch to MIMO2\n");
    
#line 2038 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 2039 
    search_tbl->is_SGI = (unsigned char)0U;
    
#line 2040 
    if ((unsigned int)tbl->action == 5U) 
#line 2041 
                                         search_tbl->ant_type = (unsigned char)3U;
    else 
      
#line 2042 
      if ((unsigned int)tbl->action == 6U) 
#line 2043 
                                           search_tbl->ant_type = (unsigned char)5U; else 
                                                                    
#line 2045 
                                                                    search_tbl->ant_type = (unsigned char)6U;
    
#line 2047 
    tmp_2 = rs_is_valid_ant((unsigned char)((int)valid_tx_ant),(unsigned char)((int)search_tbl->ant_type));
    
#line 2047 
    if ((unsigned int)tmp_2 == 0U) 
#line 2048 
                                   goto ldv_53542; else ;
    
#line 2050 
    ret = rs_switch_to_mimo2(priv,lq_sta,conf,sta,search_tbl,index);
    
#line 2052 
    if (ret == 0) 
#line 2053 
                  goto out; else ;
    
#line 2055 
    goto ldv_53542;
    case 8: 
#line 2057 
    ;
    
#line 2058 
    if ((unsigned int)tbl->is_ht40 == 0U && ((int)ht_cap->cap & 32) == 0) 
      
#line 2060 
      goto ldv_53542; else ;
    
#line 2061 
    if ((unsigned int)tbl->is_ht40 != 0U && ((int)ht_cap->cap & 64) == 0) 
      
#line 2063 
      goto ldv_53542; else ;
    {
      
#line 2065 
      bool __cond_3 = (_Bool)((int)*("LQ: MIMO3 toggle SGI/NGI\n" + 24UL) != 10);
      
#line 2065 
      if ((int)__cond_3 != 0) 
#line 2065 
                              __compiletime_assert_2065(); else ;
    }
    
#line 2065 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_move_mimo3_to_other","LQ: MIMO3 toggle SGI/NGI\n");
    
#line 2068 
    memcpy((void *)search_tbl,(void const *)tbl,(unsigned long)sz);
    
#line 2069 
    search_tbl->is_SGI = (unsigned char)((unsigned int)tbl->is_SGI == 0U);
    
#line 2070 
    rs_set_expected_tpt_table(lq_sta,search_tbl);
    
#line 2077 
    if ((unsigned int)tbl->is_SGI != 0U) {
      
#line 2078 
      s32 tpt = lq_sta->last_tpt / 100;
      
#line 2079 
      if ((int)*(search_tbl->expected_tpt + index) <= tpt) 
#line 2080 
                                                           goto ldv_53542; else ;
    }
    else ;
    
#line 2082 
    search_tbl->current_rate = rate_n_flags_from_tbl(priv,search_tbl,index,(unsigned char)((int)((unsigned char)is_green)));
    
#line 2085 
    update_search_tbl_counter = (unsigned char)1U;
    
#line 2086 
    goto out;
  }
  ldv_53542: 
#line 2088 
  ;
  
#line 2088 
  tbl->action = (u8)((int)tbl->action + 1);
  
#line 2089 
  if ((unsigned int)tbl->action > 8U) 
#line 2090 
                                      tbl->action = (unsigned char)0U; else ;
  
#line 2092 
  if ((int)tbl->action == (int)start_action) 
#line 2093 
                                             goto ldv_53564; else ;
  
#line 1991 
  goto ldv_53565;
  ldv_53564: 
#line 1992 
  ;
  
#line 2095 
  search_tbl->lq_type = LQ_NONE;
  
#line 2096 
  __retres = 0;
  
#line 2096 
  goto return_label;
  out: 
#line 2097 
  ;
  
#line 2098 
  lq_sta->search_better_tbl = (unsigned char)1U;
  
#line 2099 
  tbl->action = (u8)((int)tbl->action + 1);
  
#line 2100 
  if ((unsigned int)tbl->action > 8U) 
#line 2101 
                                      tbl->action = (unsigned char)0U; else ;
  
#line 2102 
  if ((unsigned int)update_search_tbl_counter != 0U) 
#line 2103 
                                                     search_tbl->action = tbl->action; else ;
  
#line 2105 
  __retres = 0;
  return_label: 
#line 2105 
                return __retres;
}


#line 2152 
void __compiletime_assert_2155(void);


#line 2175 
void __compiletime_assert_2175(void);


#line 2116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_stay_in_table(struct iwl_lq_sta *lq_sta, bool force_search)
{
  struct iwl_scale_tbl_info *tbl;
  int i;
  int active_tbl;
  struct iwl_priv *priv;
  
#line 2121 
  int flush_interval_passed = 0;
  
#line 2124 
  priv = lq_sta->drv;
  
#line 2125 
  active_tbl = (int)lq_sta->active_tbl;
  
#line 2127 
  tbl = & lq_sta->lq_info[active_tbl];
  
#line 2130 
  if ((unsigned int)lq_sta->stay_in_tbl != 0U) {
    
#line 2133 
    if (lq_sta->flush_timer != 0ULL) {
      int tmp_1;
      int tmp;
      {
        unsigned long __dummy;
        unsigned long volatile __dummy2;
        
#line 2135 
        tmp = 1;
      }
      
#line 2134 
      if (tmp != 0) {
        int tmp_0;
        {
          unsigned long __dummy_0;
          unsigned long __dummy2_0;
          
#line 2135 
          tmp_0 = 1;
        }
        
#line 2135 
        if (tmp_0 != 0) 
          
#line 2135 
          if ((long)(((unsigned long)lq_sta->flush_timer - jiffies) + 750UL) < 0L) 
            
#line 2134 
            tmp_1 = 1; else 
#line 2134 
                            tmp_1 = 0;
        else 
#line 2134 
             tmp_1 = 0;
      }
      else 
#line 2134 
           tmp_1 = 0;
      
#line 2134 
      flush_interval_passed = tmp_1;
    }
    else ;
    
#line 2147 
    if ((((int)force_search != 0 || lq_sta->total_failed > lq_sta->max_failure_limit) || lq_sta->total_success > lq_sta->max_success_limit) || (((unsigned int)lq_sta->search_better_tbl == 0U && lq_sta->flush_timer != 0ULL) && flush_interval_passed != 0)) {
      {
        
#line 2152 
        bool __cond = (_Bool)((int)*("LQ: stay is expired %d %d %d\n" + 28UL) != 10);
        
#line 2152 
        if ((int)__cond != 0) 
#line 2152 
                              __compiletime_assert_2155(); else ;
      }
      
#line 2152 
      __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_stay_in_table","LQ: stay is expired %d %d %d\n",lq_sta->total_failed,lq_sta->total_success,flush_interval_passed);
      
#line 2158 
      lq_sta->stay_in_tbl = (unsigned char)0U;
      
#line 2159 
      lq_sta->total_failed = 0U;
      
#line 2160 
      lq_sta->total_success = 0U;
      
#line 2161 
      lq_sta->flush_timer = 0ULL;
    }
    else {
      
#line 2170 
      lq_sta->table_count += 1U;
      
#line 2171 
      if (lq_sta->table_count >= lq_sta->table_count_limit) {
        
#line 2173 
        lq_sta->table_count = 0U;
        {
          
#line 2175 
          bool __cond_0 = (_Bool)((int)*("LQ: stay in table clear win\n" + 27UL) != 10);
          
#line 2175 
          if ((int)__cond_0 != 0) 
#line 2175 
                                  __compiletime_assert_2175(); else ;
        }
        
#line 2175 
        __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_stay_in_table","LQ: stay in table clear win\n");
        
#line 2176 
        i = 0;
        
#line 2176 
        goto ldv_53591;
        ldv_53590: 
#line 2177 
        ;
        
#line 2177 
        rs_rate_scale_clear_window(& tbl->win[i]);
        
#line 2176 
        i += 1;
        ldv_53591: 
#line 2177 
        ;
        
#line 2176 
        if (i <= 12) 
#line 2178 
                     goto ldv_53590; else 
#line 2181 
                                          goto ldv_53592;
        ldv_53592: 
#line 2182 
        ;
      }
      else ;
    }
    
#line 2185 
    if ((unsigned int)lq_sta->stay_in_tbl == 0U) {
      
#line 2186 
      i = 0;
      
#line 2186 
      goto ldv_53594;
      ldv_53593: 
#line 2187 
      ;
      
#line 2187 
      rs_rate_scale_clear_window(& tbl->win[i]);
      
#line 2186 
      i += 1;
      ldv_53594: 
#line 2187 
      ;
      
#line 2186 
      if (i <= 12) 
#line 2188 
                   goto ldv_53593; else 
#line 2191 
                                        goto ldv_53595;
      ldv_53595: 
#line 2192 
      ;
    }
    else ;
  }
  else ;
  
#line 2195 
  return;
}


#line 2195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_update_rate_tbl(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct iwl_lq_sta *lq_sta, struct iwl_scale_tbl_info *tbl, int index, u8 is_green)
{
  u32 rate;
  
#line 2204 
  rate = rate_n_flags_from_tbl(priv,tbl,index,(unsigned char)((int)is_green));
  
#line 2205 
  rs_fill_link_cmd(priv,lq_sta,rate);
  
#line 2206 
  iwl_send_lq_cmd(priv,ctx,& lq_sta->lq,(unsigned char)1,(_Bool)0);
  
#line 2207 
  return;
}


#line 2245 
void __compiletime_assert_2245(void);


#line 2286 
void __compiletime_assert_2287(void);


#line 2292 
void __compiletime_assert_2292(void);


#line 2311 
void __compiletime_assert_2311(void);


#line 2327 
void __compiletime_assert_2327(void);


#line 2352 
void __compiletime_assert_2354(void);


#line 2369 
void __compiletime_assert_2369(void);


#line 2382 
void __compiletime_assert_2386(void);


#line 2398 
void __compiletime_assert_2402(void);


#line 2451 
void __compiletime_assert_2451(void);


#line 2489 
void __compiletime_assert_2490(void);


#line 2554 
void __compiletime_assert_2556(void);


#line 2599 
void __compiletime_assert_2600(void);


#line 2616 
void __compiletime_assert_2616(void);


#line 2632 
void __compiletime_assert_2634(void);


#line 2212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_rate_scale_perform(struct iwl_priv *priv, struct sk_buff *skb, struct ieee80211_sta *sta, struct iwl_lq_sta *lq_sta)
{
  int index;
  int i;
  u32 fail_count;
  u16 rate_mask;
  struct iwl_scale_tbl_info *tbl;
  struct iwl_scale_tbl_info *tbl1;
  u16 high_low;
  s32 sr;
  struct iwl_tid_data *tid_data;
  int tmp_0;
  int tmp_4;
  bool tmp_3;
  enum iwl_antenna_ok tmp_5;
  enum iwl_antenna_ok tmp_6;
  
#line 2217 
  struct ieee80211_hw *hw = priv->hw;
  
#line 2218 
  struct ieee80211_conf *conf = & hw->conf;
  
#line 2219 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  
#line 2220 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 2221 
  int low = 13;
  
#line 2222 
  int high = 13;
  
#line 2225 
  struct iwl_rate_scale_data *window = (struct iwl_rate_scale_data *)0;
  
#line 2226 
  int current_tpt = -1;
  
#line 2227 
  int low_tpt = -1;
  
#line 2228 
  int high_tpt = -1;
  
#line 2230 
  s8 scale_action = (signed char)0;
  
#line 2232 
  u8 update_lq = (unsigned char)0U;
  
#line 2234 
  u16 rate_scale_index_msk = (unsigned short)0U;
  
#line 2235 
  u8 is_green = (unsigned char)0U;
  
#line 2236 
  u8 active_tbl = (unsigned char)0U;
  
#line 2237 
  u8 done_search = (unsigned char)0U;
  
#line 2240 
  u8 tid = (unsigned char)8U;
  
#line 2242 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 2243 
  struct iwl_rxon_context *ctx = sta_priv->ctx;
  {
    
#line 2245 
    bool __cond = (_Bool)((int)*("rate scale calculate new rate for skb\n" + 37UL) != 10);
    
#line 2245 
    if ((int)__cond != 0) 
#line 2245 
                          __compiletime_assert_2245(); else ;
  }
  
#line 2245 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","rate scale calculate new rate for skb\n");
  
#line 2249 
  tmp_0 = ieee80211_is_data((unsigned short)((int)hdr->frame_control));
  
#line 2249 
  if (tmp_0 == 0) 
#line 2251 
                  goto return_label;
  else 
    
#line 2249 
    if ((info->flags & 4U) != 0U) 
#line 2251 
                                  goto return_label; else ;
  
#line 2253 
  lq_sta->supp_rates = sta->supp_rates[(unsigned int)lq_sta->band];
  
#line 2255 
  tid = rs_tl_add_packet(lq_sta,hdr);
  
#line 2256 
  if ((unsigned int)tid != 8U && (((int)lq_sta->tx_agg_tid_en >> (int)tid) & 1) != 0) {
    
#line 2258 
    tid_data = & priv->tid_data[(int)lq_sta->lq.sta_id][(int)tid];
    
#line 2259 
    if (tid_data->agg.state == (unsigned int)IWL_AGG_OFF) 
#line 2260 
                                                          lq_sta->is_agg = (unsigned char)0U; else 
                                                                    
#line 2262 
                                                                    lq_sta->is_agg = (unsigned char)1U;
  }
  else 
#line 2264 
       lq_sta->is_agg = (unsigned char)0U;
  
#line 2271 
  if ((unsigned int)lq_sta->search_better_tbl == 0U) 
#line 2272 
                                                     active_tbl = lq_sta->active_tbl; else 
                                                                    
#line 2274 
                                                                    active_tbl = (unsigned char)(1U - (unsigned int)lq_sta->active_tbl);
  
#line 2276 
  tbl = & lq_sta->lq_info[(int)active_tbl];
  
#line 2277 
  if ((unsigned int)tbl->lq_type + 4294967295U <= 1U) 
#line 2278 
                                                      lq_sta->is_green = (unsigned char)0U; else 
                                                                    
#line 2280 
                                                                    lq_sta->is_green = (u8)rs_use_green(sta);
  
#line 2281 
  is_green = lq_sta->is_green;
  
#line 2284 
  index = lq_sta->last_txrate_idx;
  {
    
#line 2286 
    bool __cond_0 = (_Bool)((int)*("Rate scale index %d for type %d\n" + 31UL) != 10);
    
#line 2286 
    if ((int)__cond_0 != 0) 
#line 2286 
                            __compiletime_assert_2287(); else ;
  }
  
#line 2286 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","Rate scale index %d for type %d\n",index,(unsigned int)tbl->lq_type);
  
#line 2290 
  rate_mask = rs_get_supported_rates(lq_sta,hdr,tbl->lq_type);
  {
    
#line 2292 
    bool __cond_1 = (_Bool)((int)*("mask 0x%04X\n" + 11UL) != 10);
    
#line 2292 
    if ((int)__cond_1 != 0) 
#line 2292 
                            __compiletime_assert_2292(); else ;
  }
  
#line 2292 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","mask 0x%04X\n",(int)rate_mask);
  
#line 2295 
  if ((unsigned int)tbl->lq_type + 4294967295U <= 1U) 
    
#line 2296 
    if (lq_sta->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 2298 
                                                           rate_scale_index_msk = (unsigned short)(((int)((unsigned short)lq_sta->supp_rates) << 4U) & (int)rate_mask); else 
                                                                    
#line 2301 
                                                                    rate_scale_index_msk = (unsigned short)((int)((unsigned short)lq_sta->supp_rates) & (int)rate_mask);
  else 
#line 2305 
       rate_scale_index_msk = rate_mask;
  
#line 2307 
  if ((unsigned int)rate_scale_index_msk == 0U) 
#line 2308 
                                                rate_scale_index_msk = rate_mask; else ;
  
#line 2310 
  if ((((int)rate_scale_index_msk >> index) & 1) == 0) {
    {
      
#line 2311 
      bool __cond_2 = (_Bool)((int)*("Current Rate is not valid\n" + 25UL) != 10);
      
#line 2311 
      if ((int)__cond_2 != 0) 
#line 2311 
                              __compiletime_assert_2311(); else ;
    }
    
#line 2311 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Current Rate is not valid\n");
    
#line 2312 
    if ((unsigned int)lq_sta->search_better_tbl != 0U) {
      
#line 2314 
      tbl->lq_type = LQ_NONE;
      
#line 2315 
      lq_sta->search_better_tbl = (unsigned char)0U;
      
#line 2316 
      tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
      
#line 2318 
      index = iwl_hwrate_to_plcp_idx(tbl->current_rate);
      
#line 2319 
      rs_update_rate_tbl(priv,ctx,lq_sta,tbl,index,(unsigned char)((int)is_green));
    }
    else ;
    
#line 2322 
    goto return_label;
  }
  else ;
  
#line 2326 
  if (tbl->expected_tpt == (u16 const *)0U) {
    {
      
#line 2327 
      bool __cond_3 = (_Bool)((int)*("tbl->expected_tpt is NULL\n" + 25UL) != 10);
      
#line 2327 
      if ((int)__cond_3 != 0) 
#line 2327 
                              __compiletime_assert_2327(); else ;
    }
    
#line 2327 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"tbl->expected_tpt is NULL\n");
    
#line 2328 
    goto return_label;
  }
  else ;
  
#line 2332 
  if ((int)lq_sta->max_rate_idx != -1 && (int)lq_sta->max_rate_idx < index) {
    
#line 2334 
    index = (int)lq_sta->max_rate_idx;
    
#line 2335 
    update_lq = (unsigned char)1U;
    
#line 2336 
    window = & tbl->win[index];
    
#line 2337 
    goto lq_update;
  }
  else ;
  
#line 2340 
  window = & tbl->win[index];
  
#line 2349 
  fail_count = (unsigned int)(window->counter - window->success_counter);
  
#line 2350 
  if (fail_count <= 5U && window->success_counter <= 7) {
    {
      
#line 2352 
      bool __cond_4 = (_Bool)((int)*("LQ: still below TH. succ=%d total=%d " + 49UL) != 10);
      
#line 2352 
      if ((int)__cond_4 != 0) 
#line 2352 
                              __compiletime_assert_2354(); else ;
    }
    
#line 2352 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","LQ: still below TH. succ=%d total=%d ",window->success_counter,window->counter,index);
    
#line 2357 
    window->average_tpt = -1;
    
#line 2361 
    rs_stay_in_table(lq_sta,(_Bool)0);
    
#line 2363 
    goto out;
  }
  else ;
  
#line 2367 
  if (window->average_tpt != (window->success_ratio * (int)*(tbl->expected_tpt + index) + 64) / 128) {
    {
      
#line 2369 
      bool __cond_5 = (_Bool)((int)*("expected_tpt should have been calculated by now\n" + 47UL) != 10);
      
#line 2369 
      if ((int)__cond_5 != 0) 
#line 2369 
                              __compiletime_assert_2369(); else ;
    }
    
#line 2369 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"expected_tpt should have been calculated by now\n");
    
#line 2370 
    window->average_tpt = (window->success_ratio * (int)*(tbl->expected_tpt + index) + 64) / 128;
  }
  else ;
  
#line 2375 
  if ((unsigned int)lq_sta->search_better_tbl != 0U) {
    enum iwl_antenna_ok tmp_2;
    
#line 2375 
    tmp_2 = iwl_tx_ant_restriction(priv);
    
#line 2375 
    if (tmp_2 == (unsigned int)IWL_ANT_OK_MULTI) {
      
#line 2380 
      if (window->average_tpt > lq_sta->last_tpt) {
        {
          
#line 2382 
          bool __cond_6 = (_Bool)((int)*("LQ: SWITCHING TO NEW TABLE " + 55UL) != 10);
          
#line 2382 
          if ((int)__cond_6 != 0) 
#line 2382 
                                  __compiletime_assert_2386(); else ;
        }
        
#line 2382 
        __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","LQ: SWITCHING TO NEW TABLE ",window->success_ratio,window->average_tpt,lq_sta->last_tpt);
        
#line 2388 
        if ((unsigned int)tbl->lq_type + 4294967295U > 1U) 
#line 2389 
                                                           lq_sta->enable_counter = (unsigned char)1U; else ;
        
#line 2392 
        lq_sta->active_tbl = active_tbl;
        
#line 2393 
        current_tpt = window->average_tpt;
      }
      else {
        {
          
#line 2398 
          bool __cond_7 = (_Bool)((int)*("LQ: GOING BACK TO THE OLD TABLE " + 60UL) != 10);
          
#line 2398 
          if ((int)__cond_7 != 0) 
#line 2398 
                                  __compiletime_assert_2402(); else ;
        }
        
#line 2398 
        __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","LQ: GOING BACK TO THE OLD TABLE ",window->success_ratio,window->average_tpt,lq_sta->last_tpt);
        
#line 2405 
        tbl->lq_type = LQ_NONE;
        
#line 2408 
        active_tbl = lq_sta->active_tbl;
        
#line 2409 
        tbl = & lq_sta->lq_info[(int)active_tbl];
        
#line 2412 
        index = iwl_hwrate_to_plcp_idx(tbl->current_rate);
        
#line 2413 
        current_tpt = lq_sta->last_tpt;
        
#line 2416 
        update_lq = (unsigned char)1U;
      }
      
#line 2421 
      lq_sta->search_better_tbl = (unsigned char)0U;
      
#line 2422 
      done_search = (unsigned char)1U;
      
#line 2423 
      goto lq_update;
    }
    else ;
  }
  else ;
  
#line 2428 
  high_low = rs_get_adjacent_rate(priv,(unsigned char)((int)((unsigned char)index)),(unsigned short)((int)rate_scale_index_msk),(int)tbl->lq_type);
  
#line 2430 
  low = (int)high_low & 255;
  
#line 2431 
  high = ((int)high_low >> 8) & 255;
  
#line 2434 
  if ((int)lq_sta->max_rate_idx != -1 && (int)lq_sta->max_rate_idx < high) 
    
#line 2436 
    high = 13; else ;
  
#line 2438 
  sr = window->success_ratio;
  
#line 2441 
  current_tpt = window->average_tpt;
  
#line 2442 
  if (low != 13) 
#line 2443 
                 low_tpt = tbl->win[low].average_tpt; else ;
  
#line 2444 
  if (high != 13) 
#line 2445 
                  high_tpt = tbl->win[high].average_tpt; else ;
  
#line 2447 
  scale_action = (signed char)0;
  
#line 2450 
  if (sr <= 1920 || current_tpt == 0) {
    {
      
#line 2451 
      bool __cond_8 = (_Bool)((int)*("decrease rate because of low success_ratio\n" + 42UL) != 10);
      
#line 2451 
      if ((int)__cond_8 != 0) 
#line 2451 
                              __compiletime_assert_2451(); else ;
    }
    
#line 2451 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","decrease rate because of low success_ratio\n");
    
#line 2452 
    scale_action = (signed char)(-1);
  }
  else 
    
#line 2455 
    if (low_tpt == -1 && high_tpt == -1) {
      
#line 2458 
      if (high != 13 && sr > 6399) 
#line 2459 
                                   scale_action = (signed char)1;
      else 
        
#line 2460 
        if (low != 13) 
#line 2461 
                       scale_action = (signed char)0; else ;
    }
    else 
      
#line 2466 
      if ((low_tpt != -1 && high_tpt != -1) && (low_tpt < current_tpt && high_tpt < current_tpt)) 
        
#line 2470 
        scale_action = (signed char)0;
      else 
        
#line 2476 
        if (high_tpt != -1) 
          
#line 2478 
          if (high_tpt > current_tpt && sr > 6399) 
#line 2480 
                                                   scale_action = (signed char)1; else 
                                                                    
#line 2482 
                                                                    scale_action = (signed char)0;
        else 
          
#line 2486 
          if (low_tpt != -1) {
            
#line 2488 
            if (low_tpt > current_tpt) {
              {
                
#line 2489 
                bool __cond_9 = (_Bool)((int)*("decrease rate because of low tpt\n" + 32UL) != 10);
                
#line 2489 
                if ((int)__cond_9 != 0) 
#line 2489 
                                        __compiletime_assert_2490(); else ;
              }
              
#line 2489 
              __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","decrease rate because of low tpt\n");
              
#line 2491 
              scale_action = (signed char)(-1);
            }
            else 
              
#line 2492 
              if (sr > 6399) 
#line 2493 
                             scale_action = (signed char)1; else ;
          }
          else ;
  
#line 2500 
  if (((int)scale_action == -1 && low != 13) && (sr > 10880 || (int)*(tbl->expected_tpt + low) * 100 < current_tpt)) 
    
#line 2503 
    scale_action = (signed char)0; else ;
  
#line 2504 
  tmp_3 = iwl_ht_enabled(priv);
  
#line 2504 
  if (tmp_3) 
#line 2504 
             tmp_4 = 0; else 
#line 2504 
                             tmp_4 = 1;
  
#line 2504 
  if (tmp_4) {
    
#line 2504 
    if ((unsigned int)tbl->lq_type + 4294967295U > 1U) 
#line 2505 
                                                       scale_action = (signed char)(-1); else ;
  }
  else ;
  
#line 2506 
  tmp_5 = iwl_tx_ant_restriction(priv);
  
#line 2506 
  if (tmp_5 != (unsigned int)IWL_ANT_OK_MULTI) {
    
#line 2507 
    if ((unsigned int)tbl->lq_type + 4294967292U <= 1U) 
#line 2508 
                                                        scale_action = (signed char)(-1); else ;
  }
  else ;
  
#line 2510 
  if ((unsigned int)priv->bt_traffic_load > 1U && (unsigned int)tbl->lq_type + 4294967292U <= 1U) {
    
#line 2512 
    if ((int)lq_sta->last_bt_traffic > (int)priv->bt_traffic_load) ;
    else 
      
#line 2518 
      if ((int)lq_sta->last_bt_traffic <= (int)priv->bt_traffic_load) 
        
#line 2519 
        scale_action = (signed char)(-1); else ;
  }
  else ;
  
#line 2522 
  lq_sta->last_bt_traffic = priv->bt_traffic_load;
  
#line 2524 
  if ((unsigned int)priv->bt_traffic_load > 1U && (unsigned int)tbl->lq_type + 4294967292U <= 1U) {
    
#line 2527 
    rs_stay_in_table(lq_sta,(_Bool)1);
    
#line 2528 
    goto lq_update;
  }
  else ;
  
#line 2531 
  switch ((int)scale_action) {
    case -1: 
#line 2532 
    ;
    
#line 2534 
    if (low != 13) {
      
#line 2535 
      update_lq = (unsigned char)1U;
      
#line 2536 
      index = low;
    }
    else ;
    
#line 2539 
    goto ldv_53687;
    case 1: 
#line 2540 
    ;
    
#line 2542 
    if (high != 13) {
      
#line 2543 
      update_lq = (unsigned char)1U;
      
#line 2544 
      index = high;
    }
    else ;
    
#line 2547 
    goto ldv_53687;
    case 0: 
#line 2548 
    ;
    default: 
#line 2550 
    ;
    
#line 2551 
    goto ldv_53687;
  }
  ldv_53687: 
#line 2554 
  ;
  {
    
#line 2554 
    bool __cond_10 = (_Bool)((int)*("choose rate scale index %d action %d low %d " + 59UL) != 10);
    
#line 2554 
    if ((int)__cond_10 != 0) 
#line 2554 
                             __compiletime_assert_2556(); else ;
  }
  
#line 2554 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","choose rate scale index %d action %d low %d ",index,(int)scale_action,low,high,(unsigned int)tbl->lq_type);
  lq_update: 
#line 2558 
  ;
  
#line 2560 
  if ((unsigned int)update_lq != 0U) 
#line 2561 
                                     rs_update_rate_tbl(priv,ctx,lq_sta,tbl,index,(unsigned char)((int)is_green)); else ;
  
#line 2563 
  tmp_6 = iwl_tx_ant_restriction(priv);
  
#line 2563 
  if (tmp_6 == (unsigned int)IWL_ANT_OK_MULTI) 
#line 2566 
                                               rs_stay_in_table(lq_sta,(_Bool)0); else ;
  
#line 2574 
  if ((((unsigned int)update_lq == 0U && (unsigned int)done_search == 0U) && (unsigned int)lq_sta->stay_in_tbl == 0U) && window->counter != 0) {
    
#line 2576 
    lq_sta->last_tpt = current_tpt;
    
#line 2580 
    if ((unsigned int)tbl->lq_type + 4294967295U <= 1U) 
#line 2581 
                                                        rs_move_legacy_other(priv,lq_sta,conf,sta,index);
    else 
      
#line 2582 
      if (tbl->lq_type == (unsigned int)LQ_SISO) 
#line 2583 
                                                 rs_move_siso_to_other(priv,lq_sta,conf,sta,index);
      else 
        
#line 2584 
        if (tbl->lq_type == (unsigned int)LQ_MIMO2) 
#line 2585 
                                                    rs_move_mimo2_to_other(priv,lq_sta,conf,sta,index); else 
                                                                    
#line 2587 
                                                                    rs_move_mimo3_to_other(priv,lq_sta,conf,sta,index);
    
#line 2590 
    if ((unsigned int)lq_sta->search_better_tbl != 0U) {
      
#line 2592 
      tbl = & lq_sta->lq_info[1 - (int)lq_sta->active_tbl];
      
#line 2593 
      i = 0;
      
#line 2593 
      goto ldv_53696;
      ldv_53695: 
#line 2594 
      ;
      
#line 2594 
      rs_rate_scale_clear_window(& tbl->win[i]);
      
#line 2593 
      i += 1;
      ldv_53696: 
#line 2594 
      ;
      
#line 2593 
      if (i <= 12) 
#line 2595 
                   goto ldv_53695; else 
#line 2598 
                                        goto ldv_53697;
      ldv_53697: 
#line 2599 
      ;
      
#line 2597 
      index = iwl_hwrate_to_plcp_idx(tbl->current_rate);
      {
        
#line 2599 
        bool __cond_11 = (_Bool)((int)*("Switch current  mcs: %X index: %d\n" + 33UL) != 10);
        
#line 2599 
        if ((int)__cond_11 != 0) 
#line 2599 
                                 __compiletime_assert_2600(); else ;
      }
      
#line 2599 
      __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","Switch current  mcs: %X index: %d\n",tbl->current_rate,index);
      
#line 2601 
      rs_fill_link_cmd(priv,lq_sta,tbl->current_rate);
      
#line 2602 
      iwl_send_lq_cmd(priv,ctx,& lq_sta->lq,(unsigned char)1,(_Bool)0);
    }
    else 
#line 2604 
         done_search = (unsigned char)1U;
  }
  else ;
  
#line 2607 
  if ((unsigned int)done_search != 0U && (unsigned int)lq_sta->stay_in_tbl == 0U) {
    
#line 2613 
    tbl1 = & lq_sta->lq_info[(int)lq_sta->active_tbl];
    
#line 2614 
    if ((unsigned int)tbl1->lq_type + 4294967295U <= 1U) {
      int tmp_8;
      bool tmp_7;
      
#line 2614 
      tmp_7 = conf_is_ht(conf);
      
#line 2614 
      if (tmp_7) 
#line 2614 
                 tmp_8 = 0; else 
#line 2614 
                                 tmp_8 = 1;
      
#line 2614 
      if (tmp_8) {
        
#line 2614 
        if ((int)lq_sta->action_counter > (int)tbl1->max_search) {
          {
            
#line 2616 
            bool __cond_12 = (_Bool)((int)*("LQ: STAY in legacy table\n" + 24UL) != 10);
            
#line 2616 
            if ((int)__cond_12 != 0) 
#line 2616 
                                     __compiletime_assert_2616(); else ;
          }
          
#line 2616 
          __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","LQ: STAY in legacy table\n");
          
#line 2617 
          rs_set_stay_in_table(priv,(unsigned char)1,lq_sta);
        }
        else ;
      }
      else ;
    }
    else ;
    
#line 2623 
    if ((unsigned int)lq_sta->enable_counter != 0U && (int)lq_sta->action_counter >= (int)tbl1->max_search) {
      bool tmp_9;
      
#line 2624 
      tmp_9 = iwl_ht_enabled(priv);
      
#line 2624 
      if ((int)tmp_9 != 0) {
        
#line 2626 
        if ((lq_sta->last_tpt > 0 && (((int)lq_sta->tx_agg_tid_en >> (int)tid) & 1) != 0) && (unsigned int)tid != 8U) {
          
#line 2629 
          u8 sta_id = lq_sta->lq.sta_id;
          
#line 2630 
          tid_data = & priv->tid_data[(int)sta_id][(int)tid];
          
#line 2631 
          if (tid_data->agg.state == (unsigned int)IWL_AGG_OFF) {
            {
              
#line 2632 
              bool __cond_13 = (_Bool)((int)*("try to aggregate tid %d\n" + 23UL) != 10);
              
#line 2632 
              if ((int)__cond_13 != 0) 
#line 2632 
                                       __compiletime_assert_2634(); else ;
            }
            
#line 2632 
            __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_rate_scale_perform","try to aggregate tid %d\n",(int)tid);
            
#line 2635 
            rs_tl_turn_on_agg(priv,(unsigned char)((int)tid),lq_sta,sta);
          }
          else ;
        }
        else ;
        
#line 2639 
        rs_set_stay_in_table(priv,(unsigned char)0,lq_sta);
      }
      else ;
    }
    else ;
  }
  else ;
  out: 
#line 2643 
  ;
  
#line 2644 
  tbl->current_rate = rate_n_flags_from_tbl(priv,tbl,index,(unsigned char)((int)is_green));
  
#line 2645 
  lq_sta->last_txrate_idx = index;
  return_label: 
#line 2646 
                return;
}


#line 2662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_initialize_lq(struct iwl_priv *priv, struct ieee80211_sta *sta, struct iwl_lq_sta *lq_sta)
{
  struct iwl_scale_tbl_info *tbl;
  int rate_idx;
  int i;
  u32 rate;
  u8 valid_tx_ant;
  struct iwl_station_priv *sta_priv;
  struct iwl_rxon_context *ctx;
  u8 tmp_0;
  
#line 2670 
  u8 use_green = rs_use_green(sta);
  
#line 2671 
  u8 active_tbl = (unsigned char)0U;
  
#line 2676 
  if (sta == (struct ieee80211_sta *)0 || lq_sta == (struct iwl_lq_sta *)0) 
    
#line 2677 
    goto return_label; else ;
  
#line 2679 
  sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 2680 
  ctx = sta_priv->ctx;
  
#line 2682 
  i = lq_sta->last_txrate_idx;
  
#line 2684 
  valid_tx_ant = (priv->nvm_data)->valid_tx_ant;
  
#line 2686 
  if ((unsigned int)lq_sta->search_better_tbl == 0U) 
#line 2687 
                                                     active_tbl = lq_sta->active_tbl; else 
                                                                    
#line 2689 
                                                                    active_tbl = (unsigned char)(1U - (unsigned int)lq_sta->active_tbl);
  
#line 2691 
  tbl = & lq_sta->lq_info[(int)active_tbl];
  
#line 2693 
  if ((unsigned int)i > 12U) 
#line 2694 
                             i = 0; else ;
  
#line 2696 
  rate = (unsigned int)iwl_rates[i].plcp;
  
#line 2697 
  tbl->ant_type = first_antenna((unsigned char)((int)valid_tx_ant));
  
#line 2698 
  rate = (unsigned int)((int)tbl->ant_type << 14) | rate;
  
#line 2700 
  if ((unsigned int)i <= 3U) 
#line 2701 
                             rate |= 512U; else ;
  
#line 2703 
  rs_get_tbl_info_from_mcs(rate,priv->band,tbl,& rate_idx);
  
#line 2704 
  tmp_0 = rs_is_valid_ant((unsigned char)((int)valid_tx_ant),(unsigned char)((int)tbl->ant_type));
  
#line 2704 
  if ((unsigned int)tmp_0 == 0U) 
#line 2705 
                                 rs_toggle_antenna((unsigned int)valid_tx_ant,& rate,tbl); else ;
  
#line 2707 
  rate = rate_n_flags_from_tbl(priv,tbl,rate_idx,(unsigned char)((int)use_green));
  
#line 2708 
  tbl->current_rate = rate;
  
#line 2709 
  rs_set_expected_tpt_table(lq_sta,tbl);
  
#line 2710 
  rs_fill_link_cmd((struct iwl_priv *)0,lq_sta,rate);
  
#line 2711 
  priv->stations[(int)lq_sta->lq.sta_id].lq = & lq_sta->lq;
  
#line 2712 
  iwl_send_lq_cmd(priv,ctx,& lq_sta->lq,(unsigned char)0,(_Bool)1);
  return_label: 
#line 2713 
                return;
}


#line 2728 
void __compiletime_assert_2728(void);


#line 2743 
void __compiletime_assert_2743(void);


#line 2715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_get_rate(void *priv_r, struct ieee80211_sta *sta, void *priv_sta, struct ieee80211_tx_rate_control *txrc)
{
  int rate_idx;
  bool tmp_0;
  
#line 2719 
  struct sk_buff *skb = txrc->skb;
  
#line 2720 
  struct ieee80211_supported_band *sband = txrc->sband;
  
#line 2721 
  struct iwl_op_mode *op_mode = (struct iwl_op_mode *)priv_r;
  
#line 2723 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  
#line 2724 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  
#line 2725 
  struct iwl_lq_sta *lq_sta = (struct iwl_lq_sta *)priv_sta;
  {
    
#line 2728 
    bool __cond = (_Bool)((int)*("rate scale calculate new rate for skb\n" + 37UL) != 10);
    
#line 2728 
    if ((int)__cond != 0) 
#line 2728 
                          __compiletime_assert_2728(); else ;
  }
  
#line 2728 
  __iwl_dbg(priv->dev,1048576U,(_Bool)1,"rs_get_rate","rate scale calculate new rate for skb\n");
  
#line 2731 
  if (lq_sta != (struct iwl_lq_sta *)0) {
    
#line 2732 
    lq_sta->max_rate_idx = (signed char)txrc->max_rate_idx;
    
#line 2733 
    if (sband->band == (unsigned int)IEEE80211_BAND_5GHZ && (int)lq_sta->max_rate_idx != -1) 
      
#line 2735 
      lq_sta->max_rate_idx = (signed char)((unsigned int)lq_sta->max_rate_idx + 4U); else ;
    
#line 2736 
    if ((unsigned int)lq_sta->max_rate_idx > 12U) 
#line 2738 
                                                  lq_sta->max_rate_idx = (signed char)(-1); else ;
  }
  else ;
  
#line 2742 
  if (lq_sta != (struct iwl_lq_sta *)0 && lq_sta->drv == (struct iwl_priv *)0) {
    {
      
#line 2743 
      bool __cond_0 = (_Bool)((int)*("Rate scaling not initialized yet.\n" + 33UL) != 10);
      
#line 2743 
      if ((int)__cond_0 != 0) 
#line 2743 
                              __compiletime_assert_2743(); else ;
    }
    
#line 2743 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_get_rate","Rate scaling not initialized yet.\n");
    
#line 2744 
    priv_sta = (void *)0;
  }
  else ;
  
#line 2748 
  tmp_0 = rate_control_send_low(sta,priv_sta,txrc);
  
#line 2748 
  if ((int)tmp_0 != 0) 
#line 2749 
                       goto return_label; else ;
  
#line 2751 
  rate_idx = lq_sta->last_txrate_idx;
  
#line 2753 
  if ((lq_sta->last_rate_n_flags & 256U) != 0U) {
    int tmp_1;
    u8 tmp_3;
    
#line 2754 
    rate_idx += -4;
    
#line 2756 
    if (1 > rate_idx) 
#line 2756 
                      tmp_1 = 1; else 
#line 2756 
                                      tmp_1 = rate_idx;
    
#line 2756 
    rate_idx = tmp_1 + -1;
    
#line 2757 
    tmp_3 = rs_extract_rate(lq_sta->last_rate_n_flags);
    
#line 2757 
    if ((unsigned int)tmp_3 > 15U) 
#line 2759 
                                   rate_idx += 16;
    else {
      u8 tmp_2;
      
#line 2760 
      tmp_2 = rs_extract_rate(lq_sta->last_rate_n_flags);
      
#line 2760 
      if ((unsigned int)tmp_2 > 7U) 
#line 2762 
                                    rate_idx += 8; else ;
    }
    
#line 2763 
    info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))8U;
    
#line 2764 
    if ((lq_sta->last_rate_n_flags & 8192U) != 0U) 
#line 2765 
                                                   info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))((unsigned int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags | 128U); else ;
    
#line 2766 
    if ((lq_sta->last_rate_n_flags & 4096U) != 0U) 
#line 2767 
                                                   info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))((unsigned int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags | 64U); else ;
    
#line 2768 
    if ((lq_sta->last_rate_n_flags & 2048U) != 0U) 
#line 2769 
                                                   info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))((unsigned int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags | 32U); else ;
    
#line 2770 
    if ((lq_sta->last_rate_n_flags & 1024U) != 0U) 
#line 2771 
                                                   info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))((unsigned int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags | 16U); else ;
  }
  else {
    
#line 2774 
    if ((unsigned int)rate_idx > 11U || (sband->band == (unsigned int)IEEE80211_BAND_5GHZ && rate_idx <= 3)) {
      s8 tmp_4;
      
#line 2777 
      tmp_4 = rate_lowest_index(sband,sta);
      
#line 2777 
      rate_idx = (int)tmp_4;
    }
    else 
      
#line 2779 
      if (sband->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 2780 
                                                            rate_idx += -4; else ;
    
#line 2781 
    info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))0U;
  }
  
#line 2783 
  info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].idx = (signed char)rate_idx;
  
#line 2784 
  info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].count = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))))1U;
  return_label: 
#line 2785 
                return;
}


#line 2795 
void __compiletime_assert_2795(void);


#line 2787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void *rs_alloc_sta(void *priv_rate, struct ieee80211_sta *sta, gfp_t gfp)
{
  void *__retres;
  
#line 2790 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 2791 
  struct iwl_op_mode *op_mode = (struct iwl_op_mode *)priv_rate;
  
#line 2793 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  {
    
#line 2795 
    bool __cond = (_Bool)((int)*("create station rate scale window\n" + 32UL) != 10);
    
#line 2795 
    if ((int)__cond != 0) 
#line 2795 
                          __compiletime_assert_2795(); else ;
  }
  
#line 2795 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_alloc_sta","create station rate scale window\n");
  
#line 2797 
  __retres = (void *)(& sta_priv->lq_sta);
  
#line 2797 
  return __retres;
}


#line 2828 
void __compiletime_assert_2829(void);


#line 2868 
void __compiletime_assert_2871(void);


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
void iwl_rs_rate_init(struct iwl_priv *priv, struct ieee80211_sta *sta, u8 sta_id)
{
  int i;
  int j;
  struct iwl_station_priv *sta_priv;
  struct iwl_lq_sta *lq_sta;
  struct ieee80211_supported_band *sband;
  unsigned long supp;
  unsigned long tmp_0;
  unsigned long tmp_1;
  u8 tmp_2;
  s8 tmp_4;
  
#line 2806 
  struct ieee80211_hw *hw = priv->hw;
  
#line 2807 
  struct ieee80211_conf *conf = & (priv->hw)->conf;
  
#line 2808 
  struct ieee80211_sta_ht_cap *ht_cap = & sta->ht_cap;
  
#line 2814 
  sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 2815 
  lq_sta = & sta_priv->lq_sta;
  
#line 2816 
  sband = (hw->wiphy)->bands[(unsigned int)(conf->chandef.chan)->band];
  
#line 2819 
  lq_sta->lq.sta_id = sta_id;
  
#line 2821 
  j = 0;
  
#line 2821 
  goto ldv_53778;
  ldv_53777: 
#line 2822 
  ;
  
#line 2822 
  i = 0;
  
#line 2822 
  goto ldv_53775;
  ldv_53774: 
#line 2823 
  ;
  
#line 2823 
  rs_rate_scale_clear_window(& lq_sta->lq_info[j].win[i]);
  
#line 2822 
  i += 1;
  ldv_53775: 
#line 2823 
  ;
  
#line 2822 
  if (i <= 12) 
#line 2824 
               goto ldv_53774; else 
#line 2827 
                                    goto ldv_53776;
  ldv_53776: 
#line 2828 
  ;
  
#line 2821 
  j += 1;
  ldv_53778: 
#line 2822 
  ;
  
#line 2821 
  if (j <= 1) 
#line 2823 
              goto ldv_53777; else 
#line 2826 
                                   goto ldv_53779;
  ldv_53779: 
#line 2827 
  ;
  
#line 2825 
  lq_sta->flush_timer = 0ULL;
  
#line 2826 
  lq_sta->supp_rates = sta->supp_rates[(unsigned int)sband->band];
  {
    
#line 2828 
    bool __cond = (_Bool)((int)*("LQ: *** rate scale station global init for station %d ***\n" + 57UL) != 10);
    
#line 2828 
    if ((int)__cond != 0) 
#line 2828 
                          __compiletime_assert_2829(); else ;
  }
  
#line 2828 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"iwl_rs_rate_init","LQ: *** rate scale station global init for station %d ***\n",(int)sta_id);
  
#line 2835 
  lq_sta->is_dup = (unsigned char)0U;
  
#line 2836 
  lq_sta->max_rate_idx = (signed char)(-1);
  
#line 2837 
  lq_sta->missed_rate_counter = (unsigned char)15U;
  
#line 2838 
  lq_sta->is_green = (u8)rs_use_green(sta);
  
#line 2839 
  lq_sta->band = sband->band;
  
#line 2843 
  supp = (unsigned long)sta->supp_rates[(unsigned int)sband->band];
  
#line 2844 
  lq_sta->active_legacy_rate = (unsigned short)0U;
  
#line 2845 
  tmp_0 = find_first_bit((unsigned long const *)(& supp),64UL);
  
#line 2845 
  i = (int)tmp_0;
  
#line 2845 
  goto ldv_53786;
  ldv_53785: 
#line 2846 
  ;
  
#line 2846 
  lq_sta->active_legacy_rate = (unsigned short)((int)lq_sta->active_legacy_rate | (int)((unsigned short)(1UL << (int)(sband->bitrates + i)->hw_value)));
  
#line 2845 
  tmp_1 = find_next_bit((unsigned long const *)(& supp),64UL,(unsigned long)(i + 1));
  
#line 2845 
  i = (int)tmp_1;
  ldv_53786: 
#line 2846 
  ;
  
#line 2845 
  if (i <= 63) 
#line 2847 
               goto ldv_53785; else 
#line 2850 
                                    goto ldv_53787;
  ldv_53787: 
#line 2851 
  ;
  
#line 2852 
  lq_sta->active_siso_rate = (unsigned short)((int)((unsigned short)ht_cap->mcs.rx_mask[0]) << 1U);
  
#line 2853 
  lq_sta->active_siso_rate = (unsigned short)((int)lq_sta->active_siso_rate | ((int)ht_cap->mcs.rx_mask[0] & 1));
  
#line 2854 
  lq_sta->active_siso_rate = (unsigned short)((unsigned int)lq_sta->active_siso_rate & 65533U);
  
#line 2855 
  lq_sta->active_siso_rate = (unsigned short)((int)lq_sta->active_siso_rate << 4U);
  
#line 2858 
  lq_sta->active_mimo2_rate = (unsigned short)((int)((unsigned short)ht_cap->mcs.rx_mask[1]) << 1U);
  
#line 2859 
  lq_sta->active_mimo2_rate = (unsigned short)((int)lq_sta->active_mimo2_rate | ((int)ht_cap->mcs.rx_mask[1] & 1));
  
#line 2860 
  lq_sta->active_mimo2_rate = (unsigned short)((unsigned int)lq_sta->active_mimo2_rate & 65533U);
  
#line 2861 
  lq_sta->active_mimo2_rate = (unsigned short)((int)lq_sta->active_mimo2_rate << 4U);
  
#line 2863 
  lq_sta->active_mimo3_rate = (unsigned short)((int)((unsigned short)ht_cap->mcs.rx_mask[2]) << 1U);
  
#line 2864 
  lq_sta->active_mimo3_rate = (unsigned short)((int)lq_sta->active_mimo3_rate | ((int)ht_cap->mcs.rx_mask[2] & 1));
  
#line 2865 
  lq_sta->active_mimo3_rate = (unsigned short)((unsigned int)lq_sta->active_mimo3_rate & 65533U);
  
#line 2866 
  lq_sta->active_mimo3_rate = (unsigned short)((int)lq_sta->active_mimo3_rate << 4U);
  {
    
#line 2868 
    bool __cond_0 = (_Bool)((int)*("SISO-RATE=%X MIMO2-RATE=%X MIMO3-RATE=%X\n" + 40UL) != 10);
    
#line 2868 
    if ((int)__cond_0 != 0) 
#line 2868 
                            __compiletime_assert_2871(); else ;
  }
  
#line 2868 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"iwl_rs_rate_init","SISO-RATE=%X MIMO2-RATE=%X MIMO3-RATE=%X\n",(int)lq_sta->active_siso_rate,(int)lq_sta->active_mimo2_rate,(int)lq_sta->active_mimo3_rate);
  
#line 2874 
  lq_sta->lq.general_params.single_stream_ant_msk = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
  
#line 2877 
  tmp_2 = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
  
#line 2876 
  lq_sta->lq.general_params.dual_stream_ant_msk = (unsigned char)((int)(priv->nvm_data)->valid_tx_ant & ~ ((int)tmp_2));
  
#line 2879 
  if ((unsigned int)lq_sta->lq.general_params.dual_stream_ant_msk == 0U) 
    
#line 2880 
    lq_sta->lq.general_params.dual_stream_ant_msk = (unsigned char)3U;
  else {
    u8 tmp_3;
    
#line 2881 
    tmp_3 = num_of_ant((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
    
#line 2881 
    if ((unsigned int)tmp_3 == 2U) 
#line 2882 
                                   lq_sta->lq.general_params.dual_stream_ant_msk = (priv->nvm_data)->valid_tx_ant; else ;
  }
  
#line 2887 
  lq_sta->tx_agg_tid_en = (unsigned char)255U;
  
#line 2888 
  lq_sta->drv = priv;
  
#line 2891 
  tmp_4 = rate_lowest_index(sband,sta);
  
#line 2891 
  lq_sta->last_txrate_idx = (int)tmp_4;
  
#line 2892 
  if (sband->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 2893 
                                                        lq_sta->last_txrate_idx += 4; else ;
  
#line 2894 
  lq_sta->is_agg = (unsigned char)0U;
  
#line 2896 
  lq_sta->dbg_fixed_rate = 0U;
  
#line 2899 
  rs_initialize_lq(priv,sta,lq_sta);
  
#line 2900 
  return;
}


#line 2902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_fill_link_cmd(struct iwl_priv *priv, struct iwl_lq_sta *lq_sta, u32 new_rate)
{
  struct iwl_scale_tbl_info tbl_type;
  int rate_idx;
  struct iwl_station_priv *tmp;
  u8 tmp_3;
  
#line 2906 
  int index = 0;
  
#line 2908 
  int repeat_rate = 0;
  
#line 2909 
  u8 ant_toggle_cnt = (unsigned char)0U;
  
#line 2910 
  u8 use_ht_possible = (unsigned char)1U;
  
#line 2911 
  u8 valid_tx_ant = (unsigned char)0U;
  {
    
#line 2913 
    struct iwl_lq_sta const *__mptr = (struct iwl_lq_sta const *)lq_sta;
    
#line 2913 
    tmp = (struct iwl_station_priv *)__mptr + 18446744073709551608U;
  }
  
#line 2912 
  struct iwl_station_priv *sta_priv = tmp;
  
#line 2914 
  struct iwl_link_quality_cmd *lq_cmd = & lq_sta->lq;
  
#line 2917 
  rs_dbgfs_set_mcs(lq_sta,& new_rate,index);
  
#line 2920 
  rs_get_tbl_info_from_mcs(new_rate,lq_sta->band,& tbl_type,& rate_idx);
  
#line 2923 
  if (priv != (struct iwl_priv *)0 && (int)priv->bt_full_concurrent != 0) 
    
#line 2925 
    tbl_type.ant_type = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant)); else ;
  
#line 2930 
  if ((unsigned int)tbl_type.lq_type + 4294967295U <= 1U) {
    
#line 2931 
    ant_toggle_cnt = (unsigned char)1U;
    
#line 2932 
    repeat_rate = 1;
  }
  else {
    int tmp_1;
    {
      int tmp_0;
      
#line 2934 
      int _min1 = 3;
      
#line 2934 
      int _min2 = 2;
      
#line 2934 
      if (_min1 < _min2) 
#line 2934 
                         tmp_0 = _min1; else 
#line 2934 
                                             tmp_0 = _min2;
      
#line 2934 
      tmp_1 = tmp_0;
    }
    
#line 2934 
    repeat_rate = tmp_1;
  }
  
#line 2938 
  lq_cmd->general_params.mimo_delimiter = (unsigned char)((unsigned int)tbl_type.lq_type + 4294967292U <= 1U);
  
#line 2942 
  lq_cmd->rs_table[index].rate_n_flags = new_rate;
  
#line 2944 
  tmp_3 = num_of_ant((unsigned char)((int)tbl_type.ant_type));
  
#line 2944 
  if ((unsigned int)tmp_3 == 1U) 
#line 2945 
                                 lq_cmd->general_params.single_stream_ant_msk = tbl_type.ant_type;
  else {
    u8 tmp_2;
    
#line 2947 
    tmp_2 = num_of_ant((unsigned char)((int)tbl_type.ant_type));
    
#line 2947 
    if ((unsigned int)tmp_2 == 2U) 
#line 2948 
                                   lq_cmd->general_params.dual_stream_ant_msk = tbl_type.ant_type; else ;
  }
  
#line 2952 
  index += 1;
  
#line 2953 
  repeat_rate -= 1;
  
#line 2954 
  if (priv != (struct iwl_priv *)0) 
    
#line 2955 
    if ((int)priv->bt_full_concurrent != 0) 
#line 2956 
                                            valid_tx_ant = (unsigned char)1U; else 
                                                                    
#line 2958 
                                                                    valid_tx_ant = (priv->nvm_data)->valid_tx_ant;
  else ;
  
#line 2962 
  goto ldv_53815;
  ldv_53814: 
#line 2963 
  ;
  
#line 2966 
  goto ldv_53812;
  ldv_53811: 
#line 2967 
  ;
  
#line 2967 
  if ((unsigned int)tbl_type.lq_type + 4294967295U <= 1U) {
    
#line 2968 
    if ((unsigned int)ant_toggle_cnt == 0U) 
#line 2969 
                                            ant_toggle_cnt = (u8)((int)ant_toggle_cnt + 1);
    else 
      
#line 2970 
      if (priv != (struct iwl_priv *)0) {
        int tmp_4;
        
#line 2970 
        tmp_4 = rs_toggle_antenna((unsigned int)valid_tx_ant,& new_rate,& tbl_type);
        
#line 2970 
        if (tmp_4 != 0) 
#line 2973 
                        ant_toggle_cnt = (unsigned char)1U; else ;
      }
      else ;
  }
  else ;
  
#line 2977 
  rs_dbgfs_set_mcs(lq_sta,& new_rate,index);
  
#line 2980 
  lq_cmd->rs_table[index].rate_n_flags = new_rate;
  
#line 2982 
  repeat_rate -= 1;
  
#line 2983 
  index += 1;
  ldv_53812: 
#line 2984 
  ;
  
#line 2966 
  if (repeat_rate > 0 && index <= 15) 
#line 2968 
                                      goto ldv_53811; else 
#line 2971 
                                                           goto ldv_53813;
  ldv_53813: 
#line 2972 
  ;
  
#line 2986 
  rs_get_tbl_info_from_mcs(new_rate,lq_sta->band,& tbl_type,& rate_idx);
  
#line 2989 
  if (priv != (struct iwl_priv *)0 && (int)priv->bt_full_concurrent != 0) 
    
#line 2991 
    tbl_type.ant_type = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant)); else ;
  
#line 2998 
  if ((unsigned int)tbl_type.lq_type + 4294967292U <= 1U) 
#line 2999 
                                                          lq_cmd->general_params.mimo_delimiter = (unsigned char)index; else ;
  
#line 3002 
  new_rate = rs_get_lower_rate(lq_sta,& tbl_type,(unsigned char)((int)((unsigned char)rate_idx)),(unsigned char)((int)use_ht_possible));
  
#line 3006 
  if ((unsigned int)tbl_type.lq_type + 4294967295U <= 1U) {
    
#line 3007 
    if ((unsigned int)ant_toggle_cnt == 0U) 
#line 3008 
                                            ant_toggle_cnt = (u8)((int)ant_toggle_cnt + 1);
    else 
      
#line 3009 
      if (priv != (struct iwl_priv *)0) {
        int tmp_5;
        
#line 3009 
        tmp_5 = rs_toggle_antenna((unsigned int)valid_tx_ant,& new_rate,& tbl_type);
        
#line 3009 
        if (tmp_5 != 0) 
#line 3012 
                        ant_toggle_cnt = (unsigned char)1U; else ;
      }
      else ;
    
#line 3014 
    repeat_rate = 1;
  }
  else 
#line 3016 
       repeat_rate = 3;
  
#line 3021 
  use_ht_possible = (unsigned char)0U;
  
#line 3024 
  rs_dbgfs_set_mcs(lq_sta,& new_rate,index);
  
#line 3027 
  lq_cmd->rs_table[index].rate_n_flags = new_rate;
  
#line 3029 
  index += 1;
  
#line 3030 
  repeat_rate -= 1;
  ldv_53815: 
#line 3031 
  ;
  
#line 2962 
  if (index <= 15) 
#line 2964 
                   goto ldv_53814; else 
#line 2967 
                                        goto ldv_53816;
  ldv_53816: 
#line 2968 
  ;
  
#line 3033 
  if ((int)sta_priv->max_agg_bufsize != 0) 
#line 3033 
                                           lq_cmd->agg_params.agg_frame_cnt_limit = (unsigned char)((int)sta_priv->max_agg_bufsize); else 
                                                                    
#line 3033 
                                                                    lq_cmd->agg_params.agg_frame_cnt_limit = (unsigned char)63U;
  
#line 3035 
  lq_cmd->agg_params.agg_dis_start_th = (unsigned char)3U;
  
#line 3037 
  lq_cmd->agg_params.agg_time_limit = (unsigned short)4000U;
  
#line 3043 
  if (((priv != (struct iwl_priv *)0 && (priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) && (unsigned int)((priv->lib)->bt_params)->agg_time_limit != 0U) && (unsigned int)priv->bt_traffic_load > 1U) 
    
#line 3046 
    lq_cmd->agg_params.agg_time_limit = ((priv->lib)->bt_params)->agg_time_limit; else ;
  
#line 3048 
  return;
}


#line 3050  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void *rs_alloc(struct ieee80211_hw *hw, struct dentry *debugfsdir)
{
  void *__retres;
  
#line 3052 
  __retres = hw->priv;
  
#line 3052 
  return __retres;
}


#line 3055  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_free(void *priv_rate)
{
  
#line 3057 
  return;
}


#line 3066 
void __compiletime_assert_3066(void);


#line 3067 
void __compiletime_assert_3067(void);


#line 3060  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_free_sta(void *priv_r, struct ieee80211_sta *sta, void *priv_sta)
{
  
#line 3063 
  struct iwl_op_mode *op_mode = (struct iwl_op_mode *)priv_r;
  
#line 3064 
  struct iwl_priv *priv = (struct iwl_priv *)(& op_mode->op_mode_specific);
  {
    
#line 3066 
    bool __cond = (_Bool)((int)*("enter\n" + 5UL) != 10);
    
#line 3066 
    if ((int)__cond != 0) 
#line 3066 
                          __compiletime_assert_3066(); else ;
  }
  
#line 3066 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_free_sta","enter\n");
  {
    
#line 3067 
    bool __cond_0 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 3067 
    if ((int)__cond_0 != 0) 
#line 3067 
                            __compiletime_assert_3067(); else ;
  }
  
#line 3067 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_free_sta","leave\n");
  
#line 3068 
  return;
}


#line 3086 
void __compiletime_assert_3086(void);


#line 3089 
void __compiletime_assert_3091(void);


#line 3092 
void __compiletime_assert_3092(void);


#line 3095 
void __compiletime_assert_3095(void);


#line 3071  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_dbgfs_set_mcs(struct iwl_lq_sta *lq_sta, u32 *rate_n_flags, int index)
{
  struct iwl_priv *priv;
  u8 valid_tx_ant;
  u8 ant_sel_tx;
  
#line 3078 
  priv = lq_sta->drv;
  
#line 3079 
  valid_tx_ant = (priv->nvm_data)->valid_tx_ant;
  
#line 3080 
  if (lq_sta->dbg_fixed_rate != 0U) {
    
#line 3081 
    ant_sel_tx = (unsigned char)((unsigned int)((unsigned char)(lq_sta->dbg_fixed_rate >> 14)) & 7U);
    
#line 3084 
    if (((int)valid_tx_ant & (int)ant_sel_tx) == (int)ant_sel_tx) {
      
#line 3085 
      *rate_n_flags = lq_sta->dbg_fixed_rate;
      {
        
#line 3086 
        bool __cond = (_Bool)((int)*("Fixed rate ON\n" + 13UL) != 10);
        
#line 3086 
        if ((int)__cond != 0) 
#line 3086 
                              __compiletime_assert_3086(); else ;
      }
      
#line 3086 
      __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_dbgfs_set_mcs","Fixed rate ON\n");
    }
    else {
      
#line 3088 
      lq_sta->dbg_fixed_rate = 0U;
      {
        
#line 3089 
        bool __cond_0 = (_Bool)((int)*("Invalid antenna selection 0x%X, Valid is 0x%X\n" + 45UL) != 10);
        
#line 3089 
        if ((int)__cond_0 != 0) 
#line 3089 
                                __compiletime_assert_3091(); else ;
      }
      
#line 3089 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid antenna selection 0x%X, Valid is 0x%X\n",(int)ant_sel_tx,(int)valid_tx_ant);
      {
        
#line 3092 
        bool __cond_1 = (_Bool)((int)*("Fixed rate OFF\n" + 14UL) != 10);
        
#line 3092 
        if ((int)__cond_1 != 0) 
#line 3092 
                                __compiletime_assert_3092(); else ;
      }
      
#line 3092 
      __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_dbgfs_set_mcs","Fixed rate OFF\n");
    }
  }
  else {
    {
      
#line 3095 
      bool __cond_2 = (_Bool)((int)*("Fixed rate OFF\n" + 14UL) != 10);
      
#line 3095 
      if ((int)__cond_2 != 0) 
#line 3095 
                              __compiletime_assert_3095(); else ;
    }
    
#line 3095 
    __iwl_dbg(priv->dev,1048576U,(_Bool)0,"rs_dbgfs_set_mcs","Fixed rate OFF\n");
  }
  
#line 3097 
  return;
}


#line 3099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static ssize_t rs_sta_dbgfs_scale_table_write(struct file *file, char const *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  struct iwl_priv *priv;
  char buf[64U];
  size_t buf_size;
  u32 parsed_rate;
  unsigned long tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  
#line 3102 
  struct iwl_lq_sta *lq_sta = (struct iwl_lq_sta *)file->private_data;
  
#line 3109 
  priv = lq_sta->drv;
  
#line 3110 
  memset((void *)(& buf),0,64UL);
  {
    unsigned long tmp;
    
#line 3111 
    size_t _min1 = count;
    
#line 3111 
    unsigned long _min2 = 63UL;
    
#line 3111 
    if (_min1 < _min2) 
#line 3111 
                       tmp = _min1; else 
#line 3111 
                                         tmp = _min2;
    
#line 3111 
    tmp_0 = tmp;
  }
  
#line 3111 
  buf_size = tmp_0;
  
#line 3112 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)user_buf,buf_size);
  
#line 3112 
  if (tmp_1 != 0UL) {
    
#line 3113 
    __retres = -14L;
    
#line 3113 
    goto return_label;
  }
  else ;
  
#line 3115 
  tmp_2 = sscanf((char const *)(& buf),"%x",& parsed_rate);
  
#line 3115 
  if (tmp_2 == 1) 
#line 3116 
                  lq_sta->dbg_fixed_rate = parsed_rate; else 
#line 3118 
                                                             lq_sta->dbg_fixed_rate = 0U;
  
#line 3120 
  rs_program_fix_rate(priv,lq_sta);
  
#line 3122 
  __retres = (long)count;
  return_label: 
#line 3122 
                return __retres;
}


#line 3125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static ssize_t rs_sta_dbgfs_scale_table_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buff;
  ssize_t ret;
  struct iwl_priv *priv;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_6;
  char *tmp_3;
  char *tmp_4;
  char *tmp_5;
  int tmp_8;
  char *tmp_7;
  int tmp_18;
  int tmp_19;
  int tmp_20;
  int tmp_21;
  
#line 3129 
  int desc = 0;
  
#line 3130 
  int i = 0;
  
#line 3131 
  int index = 0;
  
#line 3134 
  struct iwl_lq_sta *lq_sta = (struct iwl_lq_sta *)file->private_data;
  
#line 3136 
  struct iwl_scale_tbl_info *tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
  
#line 3138 
  priv = lq_sta->drv;
  
#line 3139 
  buff = (char *)kmalloc_4(1024UL,208U);
  
#line 3140 
  if (buff == (char *)0) {
    
#line 3141 
    __retres = -12L;
    
#line 3141 
    goto return_label;
  }
  else ;
  
#line 3143 
  tmp_0 = sprintf(buff + desc,"sta_id %d\n",(int)lq_sta->lq.sta_id);
  
#line 3143 
  desc = tmp_0 + desc;
  
#line 3144 
  tmp_1 = sprintf(buff + desc,"failed=%d success=%d rate=0%X\n",lq_sta->total_failed,lq_sta->total_success,(int)lq_sta->active_legacy_rate);
  
#line 3146 
  desc = tmp_1 + desc;
  
#line 3147 
  tmp_2 = sprintf(buff + desc,"fixed rate 0x%X\n",lq_sta->dbg_fixed_rate);
  
#line 3148 
  desc = tmp_2 + desc;
  
#line 3151 
  if (((unsigned long)(priv->nvm_data)->valid_tx_ant & 4UL) != 0UL) 
#line 3151 
                                                                    tmp_3 = (char *)"ANT_C"; else 
                                                                    
#line 3151 
                                                                    tmp_3 = (char *)"";
  
#line 3150 
  if (((unsigned long)(priv->nvm_data)->valid_tx_ant & 2UL) != 0UL) 
#line 3150 
                                                                    tmp_4 = (char *)"ANT_B,"; else 
                                                                    
#line 3150 
                                                                    tmp_4 = (char *)"";
  
#line 3149 
  if (((unsigned long)(priv->nvm_data)->valid_tx_ant & 1UL) != 0UL) 
#line 3149 
                                                                    tmp_5 = (char *)"ANT_A,"; else 
                                                                    
#line 3149 
                                                                    tmp_5 = (char *)"";
  
#line 3149 
  ;
  
#line 3149 
  tmp_6 = sprintf(buff + desc,"valid_tx_ant %s%s%s\n",tmp_5,tmp_4,tmp_3);
  
#line 3152 
  desc = tmp_6 + desc;
  
#line 3154 
  if ((unsigned int)tbl->lq_type + 4294967295U <= 1U) 
#line 3154 
                                                      tmp_7 = (char *)"legacy"; else 
                                                                    
#line 3154 
                                                                    tmp_7 = (char *)"HT";
  
#line 3153 
  ;
  
#line 3153 
  tmp_8 = sprintf(buff + desc,"lq type %s\n",tmp_7);
  
#line 3154 
  desc = tmp_8 + desc;
  
#line 3155 
  if ((unsigned int)tbl->lq_type + 4294967293U <= 2U) {
    int tmp_11;
    char *tmp_10;
    int tmp_13;
    char *tmp_12;
    int tmp_17;
    char *tmp_14;
    char *tmp_15;
    char *tmp_16;
    
#line 3156 
    if (tbl->lq_type != (unsigned int)LQ_SISO) {
      char *tmp_9;
      
#line 3157 
      if (tbl->lq_type == (unsigned int)LQ_MIMO2) 
#line 3157 
                                                  tmp_9 = (char *)"MIMO2"; else 
                                                                    
#line 3157 
                                                                    tmp_9 = (char *)"MIMO3";
      
#line 3156 
      tmp_10 = tmp_9;
    }
    else 
#line 3156 
         tmp_10 = (char *)"SISO";
    
#line 3156 
    ;
    
#line 3156 
    tmp_11 = sprintf(buff + desc," %s",tmp_10);
    
#line 3158 
    desc = tmp_11 + desc;
    
#line 3159 
    if ((unsigned int)tbl->is_ht40 != 0U) 
#line 3159 
                                          tmp_12 = (char *)"40MHz"; else 
                                                                    
#line 3159 
                                                                    tmp_12 = (char *)"20MHz";
    
#line 3159 
    ;
    
#line 3159 
    tmp_13 = sprintf(buff + desc," %s",tmp_12);
    
#line 3160 
    desc = tmp_13 + desc;
    
#line 3163 
    if ((unsigned int)lq_sta->is_agg != 0U) 
#line 3163 
                                            tmp_14 = (char *)"AGG on"; else 
                                                                    
#line 3163 
                                                                    tmp_14 = (char *)"";
    
#line 3162 
    if ((unsigned int)lq_sta->is_green != 0U) 
#line 3162 
                                              tmp_15 = (char *)"GF enabled"; else 
                                                                    
#line 3162 
                                                                    tmp_15 = (char *)"";
    
#line 3161 
    if ((unsigned int)tbl->is_SGI != 0U) 
#line 3161 
                                         tmp_16 = (char *)"SGI"; else 
                                                                   
#line 3161 
                                                                   tmp_16 = (char *)"";
    
#line 3161 
    ;
    
#line 3161 
    tmp_17 = sprintf(buff + desc," %s %s %s\n",tmp_16,tmp_15,tmp_14);
    
#line 3164 
    desc = tmp_17 + desc;
  }
  else ;
  
#line 3166 
  tmp_18 = sprintf(buff + desc,"last tx rate=0x%X\n",lq_sta->last_rate_n_flags);
  
#line 3167 
  desc = tmp_18 + desc;
  
#line 3168 
  tmp_19 = sprintf(buff + desc,"general:",(int)lq_sta->lq.general_params.flags,(int)lq_sta->lq.general_params.mimo_delimiter,(int)lq_sta->lq.general_params.single_stream_ant_msk,(int)lq_sta->lq.general_params.dual_stream_ant_msk);
  
#line 3173 
  desc = tmp_19 + desc;
  
#line 3175 
  tmp_20 = sprintf(buff + desc,"agg:",(int)lq_sta->lq.agg_params.agg_time_limit,(int)lq_sta->lq.agg_params.agg_dis_start_th,(int)lq_sta->lq.agg_params.agg_frame_cnt_limit);
  
#line 3179 
  desc = tmp_20 + desc;
  
#line 3181 
  tmp_21 = sprintf(buff + desc,"Start idx [0]=0x%x [1]=0x%x [2]=0x%x [3]=0x%x\n",(int)lq_sta->lq.general_params.start_rate_index[0],(int)lq_sta->lq.general_params.start_rate_index[1],(int)lq_sta->lq.general_params.start_rate_index[2],(int)lq_sta->lq.general_params.start_rate_index[3]);
  
#line 3186 
  desc = tmp_21 + desc;
  
#line 3188 
  i = 0;
  
#line 3188 
  goto ldv_53894;
  ldv_53893: 
#line 3189 
  ;
  
#line 3189 
  index = iwl_hwrate_to_plcp_idx(lq_sta->lq.rs_table[i].rate_n_flags);
  
#line 3191 
  if ((unsigned int)tbl->lq_type + 4294967295U <= 1U) {
    int tmp_22;
    
#line 3192 
    tmp_22 = sprintf(buff + desc," rate[%d] 0x%X %smbps\n",i,lq_sta->lq.rs_table[i].rate_n_flags,(char const *)(& iwl_rate_mcs[index].mbps));
    
#line 3194 
    desc = tmp_22 + desc;
  }
  else {
    int tmp_23;
    
#line 3196 
    tmp_23 = sprintf(buff + desc," rate[%d] 0x%X %smbps (%s)\n",i,lq_sta->lq.rs_table[i].rate_n_flags,(char const *)(& iwl_rate_mcs[index].mbps),(char const *)(& iwl_rate_mcs[index].mcs));
    
#line 3198 
    desc = tmp_23 + desc;
  }
  
#line 3188 
  i += 1;
  ldv_53894: 
#line 3189 
  ;
  
#line 3188 
  if (i <= 15) 
#line 3190 
               goto ldv_53893; else 
#line 3193 
                                    goto ldv_53895;
  ldv_53895: 
#line 3194 
  ;
  
#line 3202 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buff,(unsigned long)desc);
  
#line 3203 
  kfree((void const *)buff);
  
#line 3204 
  __retres = ret;
  return_label: 
#line 3204 
                return __retres;
}


#line 3207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static struct file_operations const rs_sta_dbgfs_scale_table_ops = {.owner = (struct module *)0, .llseek = & default_llseek, .read = & rs_sta_dbgfs_scale_table_read, .write = & rs_sta_dbgfs_scale_table_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 3213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static ssize_t rs_sta_dbgfs_stats_table_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char *buff;
  int i;
  int j;
  ssize_t ret;
  int tmp_1;
  char *tmp_0;
  int tmp_2;
  
#line 3217 
  int desc = 0;
  
#line 3221 
  struct iwl_lq_sta *lq_sta = (struct iwl_lq_sta *)file->private_data;
  
#line 3223 
  buff = (char *)kmalloc_4(1024UL,208U);
  
#line 3224 
  if (buff == (char *)0) {
    
#line 3225 
    __retres = -12L;
    
#line 3225 
    goto return_label;
  }
  else ;
  
#line 3227 
  i = 0;
  
#line 3227 
  goto ldv_53913;
  ldv_53912: 
#line 3228 
  ;
  
#line 3228 
  ;
  
#line 3228 
  ;
  
#line 3228 
  ;
  
#line 3228 
  ;
  
#line 3228 
  ;
  
#line 3228 
  ;
  
#line 3231 
  if ((int)lq_sta->active_tbl == i) 
#line 3231 
                                    tmp_0 = (char *)"*"; else 
#line 3231 
                                                              tmp_0 = (char *)"x";
  
#line 3228 
  ;
  
#line 3228 
  tmp_1 = sprintf(buff + desc,"%s type=%d SGI=%d HT40=%d DUP=%d GF=%d\n",tmp_0,(unsigned int)lq_sta->lq_info[i].lq_type,(int)lq_sta->lq_info[i].is_SGI,(int)lq_sta->lq_info[i].is_ht40,(int)lq_sta->lq_info[i].is_dup,(int)lq_sta->is_green,lq_sta->lq_info[i].current_rate);
  
#line 3237 
  desc = tmp_1 + desc;
  
#line 3238 
  j = 0;
  
#line 3238 
  goto ldv_53910;
  ldv_53909: 
#line 3239 
  ;
  
#line 3239 
  tmp_2 = sprintf(buff + desc,"counter=%d success=%d %%=%d\n",lq_sta->lq_info[i].win[j].counter,lq_sta->lq_info[i].win[j].success_counter,lq_sta->lq_info[i].win[j].success_ratio);
  
#line 3243 
  desc = tmp_2 + desc;
  
#line 3238 
  j += 1;
  ldv_53910: 
#line 3239 
  ;
  
#line 3238 
  if (j <= 12) 
#line 3240 
               goto ldv_53909; else 
#line 3243 
                                    goto ldv_53911;
  ldv_53911: 
#line 3244 
  ;
  
#line 3227 
  i += 1;
  ldv_53913: 
#line 3228 
  ;
  
#line 3227 
  if (i <= 1) 
#line 3229 
              goto ldv_53912; else 
#line 3232 
                                   goto ldv_53914;
  ldv_53914: 
#line 3233 
  ;
  
#line 3246 
  ret = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)buff,(unsigned long)desc);
  
#line 3247 
  kfree((void const *)buff);
  
#line 3248 
  __retres = ret;
  return_label: 
#line 3248 
                return __retres;
}


#line 3251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static struct file_operations const rs_sta_dbgfs_stats_table_ops = {.owner = (struct module *)0, .llseek = & default_llseek, .read = & rs_sta_dbgfs_stats_table_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 3257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static ssize_t rs_sta_dbgfs_rate_scale_data_read(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buff[120U];
  ssize_t tmp_1;
  
#line 3260 
  struct iwl_lq_sta *lq_sta = (struct iwl_lq_sta *)file->private_data;
  
#line 3261 
  struct iwl_scale_tbl_info *tbl = & lq_sta->lq_info[(int)lq_sta->active_tbl];
  
#line 3263 
  int desc = 0;
  
#line 3265 
  if ((unsigned int)tbl->lq_type + 4294967293U <= 2U) {
    int tmp;
    
#line 3266 
    tmp = sprintf((char *)(& buff) + desc,"Bit Rate= %d Mb/s\n",(int)*(tbl->expected_tpt + lq_sta->last_txrate_idx));
    
#line 3268 
    desc = tmp + desc;
  }
  else {
    int tmp_0;
    
#line 3270 
    tmp_0 = sprintf((char *)(& buff) + desc,"Bit Rate= %d Mb/s\n",(int)iwl_rates[lq_sta->last_txrate_idx].ieee >> 1);
    
#line 3272 
    desc = tmp_0 + desc;
  }
  
#line 3274 
  tmp_1 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buff),(unsigned long)desc);
  
#line 3274 
  return tmp_1;
}


#line 3277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static struct file_operations const rs_sta_dbgfs_rate_scale_data_ops = {.owner = (struct module *)0, .llseek = & default_llseek, .read = & rs_sta_dbgfs_rate_scale_data_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 3283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_add_debugfs(void *priv, void *priv_sta, struct dentry *dir)
{
  
#line 3286 
  struct iwl_lq_sta *lq_sta = (struct iwl_lq_sta *)priv_sta;
  
#line 3287 
  lq_sta->rs_sta_dbgfs_scale_table_file = ldv_debugfs_create_file_75("rate_scale_table",(unsigned short)384,dir,(void *)lq_sta,& rs_sta_dbgfs_scale_table_ops);
  
#line 3290 
  lq_sta->rs_sta_dbgfs_stats_table_file = ldv_debugfs_create_file_76("rate_stats_table",(unsigned short)256,dir,(void *)lq_sta,& rs_sta_dbgfs_stats_table_ops);
  
#line 3293 
  lq_sta->rs_sta_dbgfs_rate_scale_data_file = ldv_debugfs_create_file_77("rate_scale_data",(unsigned short)256,dir,(void *)lq_sta,& rs_sta_dbgfs_rate_scale_data_ops);
  
#line 3296 
  lq_sta->rs_sta_dbgfs_tx_agg_tid_en_file = debugfs_create_u8("tx_agg_tid_enable",(unsigned short)384,dir,& lq_sta->tx_agg_tid_en);
  
#line 3299 
  return;
}


#line 3302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_remove_debugfs(void *priv, void *priv_sta)
{
  
#line 3304 
  struct iwl_lq_sta *lq_sta = (struct iwl_lq_sta *)priv_sta;
  
#line 3305 
  ldv_debugfs_remove_78(lq_sta->rs_sta_dbgfs_scale_table_file);
  
#line 3306 
  ldv_debugfs_remove_79(lq_sta->rs_sta_dbgfs_stats_table_file);
  
#line 3307 
  ldv_debugfs_remove_80(lq_sta->rs_sta_dbgfs_rate_scale_data_file);
  
#line 3308 
  ldv_debugfs_remove_81(lq_sta->rs_sta_dbgfs_tx_agg_tid_en_file);
  
#line 3309 
  return;
}


#line 3317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static void rs_rate_init_stub(void *priv_r, struct ieee80211_supported_band *sband, struct cfg80211_chan_def *chandef, struct ieee80211_sta *sta, void *priv_sta)
{
  
#line 3319 
  return;
}


#line 3323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
static struct rate_control_ops const rs_ops = {.name = "iwl-agn-rs", .alloc = & rs_alloc, .free = & rs_free, .alloc_sta = & rs_alloc_sta, .rate_init = & rs_rate_init_stub, .rate_update = (void (*)(void *, struct ieee80211_supported_band *, struct cfg80211_chan_def *, struct ieee80211_sta *, void *, u32 ))0, .free_sta = & rs_free_sta, .tx_status_noskb = (void (*)(void *, struct ieee80211_supported_band *, struct ieee80211_sta *, void *, struct ieee80211_tx_info *))0, .tx_status = & rs_tx_status, .get_rate = & rs_get_rate, .add_sta_debugfs = & rs_add_debugfs, .remove_sta_debugfs = & rs_remove_debugfs, .get_expected_throughput = (u32 (*)(void *))0};

#line 3338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
int iwlagn_rate_control_register(void)
{
  int tmp;
  
#line 3340 
  tmp = ieee80211_rate_control_register(& rs_ops);
  
#line 3340 
  return tmp;
}


#line 3343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rs.c"
void iwlagn_rate_control_unregister(void)
{
  
#line 3345 
  ieee80211_rate_control_unregister(& rs_ops);
  
#line 3346 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
struct file_operations *ldv_emg_alias_rs_sta_dbgfs_rate_scale_data_ops_2 = (struct file_operations *)(& rs_sta_dbgfs_rate_scale_data_ops);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
long long (*ldv_emg_alias_default_llseek_3)(struct file *, long long , int ) = & default_llseek;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
struct file_operations *ldv_emg_alias_rs_sta_dbgfs_stats_table_ops_2 = (struct file_operations *)(& rs_sta_dbgfs_stats_table_ops);

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
struct file_operations *ldv_emg_alias_rs_sta_dbgfs_scale_table_ops_2 = (struct file_operations *)(& rs_sta_dbgfs_scale_table_ops);

#line 66 
void ldv_emg_debugfs_remove(struct dentry *arg0);


#line 73  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
long ldv_emg_wrapper_rs_sta_dbgfs_scale_table_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 74 
  tmp = rs_sta_dbgfs_scale_table_read(arg0,arg1,arg2,arg3);
  
#line 74 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
long ldv_emg_wrapper_rs_sta_dbgfs_rate_scale_data_read_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 79 
  tmp = rs_sta_dbgfs_rate_scale_data_read(arg0,arg1,arg2,arg3);
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
long ldv_emg_wrapper_rs_sta_dbgfs_scale_table_write_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 84 
  tmp = rs_sta_dbgfs_scale_table_write(arg0,(char const *)arg1,arg2,arg3);
  
#line 84 
  return tmp;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
long ldv_emg_wrapper_rs_sta_dbgfs_stats_table_read_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 89 
  tmp = rs_sta_dbgfs_stats_table_read(arg0,arg1,arg2,arg3);
  
#line 89 
  return tmp;
}


#line 442  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
static void *kmalloc_4(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 445 
  tmp = ldv_kmalloc(size,flags);
  
#line 445 
  return tmp;
}


#line 780  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
static bool ldv_queue_work_74_0(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 784 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 784 
  __retres = tmp != 0;
  
#line 784 
  return __retres;
}


#line 788  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
static struct dentry *ldv_debugfs_create_file_75(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 792 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 792 
  return tmp;
}


#line 796  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
static struct dentry *ldv_debugfs_create_file_76(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 800 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 800 
  return tmp;
}


#line 804  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
static struct dentry *ldv_debugfs_create_file_77(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 808 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 808 
  return tmp;
}


#line 812  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
static void ldv_debugfs_remove_78(struct dentry *ldv_func_arg1)
{
  
#line 816 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 817 
  return;
}


#line 820  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
static void ldv_debugfs_remove_79(struct dentry *ldv_func_arg1)
{
  
#line 824 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 825 
  return;
}


#line 828  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
static void ldv_debugfs_remove_80(struct dentry *ldv_func_arg1)
{
  
#line 832 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 833 
  return;
}


#line 836  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rs.c.aux"
static void ldv_debugfs_remove_81(struct dentry *ldv_func_arg1)
{
  
#line 840 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 841 
  return;
}


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
int memcmp(void const *, void const *, size_t);


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_2(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_74(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_76_0(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_78_0(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_83(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_85(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_87(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_90(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_92(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_94(spinlock_t *lock);


#line 419 
static void ldv_spin_lock_bh_96(spinlock_t *lock);


#line 423 
static void ldv_spin_lock_bh_97(spinlock_t *lock);


#line 427 
static void ldv_spin_lock_bh_99(spinlock_t *lock);


#line 431 
static void ldv_spin_lock_bh_101(spinlock_t *lock);


#line 435 
static void ldv_spin_lock_bh_104(spinlock_t *lock);


#line 439 
static void ldv_spin_lock_bh_106(spinlock_t *lock);


#line 443 
static void ldv_spin_lock_bh_108(spinlock_t *lock);


#line 447 
static void ldv_spin_lock_bh_110(spinlock_t *lock);


#line 451 
static void ldv_spin_lock_bh_112(spinlock_t *lock);


#line 455 
static void ldv_spin_lock_bh_114(spinlock_t *lock);


#line 459 
static void ldv_spin_lock_bh_117(spinlock_t *lock);


#line 463 
static void ldv_spin_lock_bh_119(spinlock_t *lock);


#line 467 
static void ldv_spin_lock_bh_121(spinlock_t *lock);


#line 471 
static void ldv_spin_lock_bh_123(spinlock_t *lock);


#line 475 
static void ldv_spin_lock_bh_125(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_2(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_75(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_77_0(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_79_0(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_80(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_81_0(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_82(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_84(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_86(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_88(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_89(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_91(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_93(spinlock_t *lock);


#line 480 
static void ldv_spin_unlock_bh_95(spinlock_t *lock);


#line 484 
static void ldv_spin_unlock_bh_98(spinlock_t *lock);


#line 488 
static void ldv_spin_unlock_bh_100(spinlock_t *lock);


#line 492 
static void ldv_spin_unlock_bh_102(spinlock_t *lock);


#line 496 
static void ldv_spin_unlock_bh_103(spinlock_t *lock);


#line 500 
static void ldv_spin_unlock_bh_105(spinlock_t *lock);


#line 504 
static void ldv_spin_unlock_bh_107(spinlock_t *lock);


#line 508 
static void ldv_spin_unlock_bh_109(spinlock_t *lock);


#line 512 
static void ldv_spin_unlock_bh_111(spinlock_t *lock);


#line 516 
static void ldv_spin_unlock_bh_113(spinlock_t *lock);


#line 520 
static void ldv_spin_unlock_bh_115(spinlock_t *lock);


#line 524 
static void ldv_spin_unlock_bh_116(spinlock_t *lock);


#line 528 
static void ldv_spin_unlock_bh_118(spinlock_t *lock);


#line 532 
static void ldv_spin_unlock_bh_120(spinlock_t *lock);


#line 536 
static void ldv_spin_unlock_bh_122(spinlock_t *lock);


#line 540 
static void ldv_spin_unlock_bh_124(spinlock_t *lock);


#line 544 
static void ldv_spin_unlock_bh_126(spinlock_t *lock);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_4(size_t size, gfp_t flags);


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 161 
  __retres = (_Bool)((unsigned int)(((int)*((u16 const *)addr) & (int)*((u16 const *)(addr + 2U))) & (int)*((u16 const *)(addr + 4U))) == 65535U);
  
#line 161 
  return __retres;
}


#line 316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
void iwl_restore_stations(struct iwl_priv *priv, struct iwl_rxon_context *ctx);


#line 320 
int iwl_get_free_ucode_key_offset(struct iwl_priv *priv);


#line 330 
u8 iwl_prep_station(struct iwl_priv *priv, struct iwl_rxon_context *ctx, u8 const *addr, bool is_ap, struct ieee80211_sta *sta);


#line 362 
int iwl_restore_default_wep_keys(struct iwl_priv *priv, struct iwl_rxon_context *ctx);


#line 374 
int iwl_sta_tx_modify_enable_tid(struct iwl_priv *priv, int sta_id, int tid);


#line 379 
void iwl_sta_modify_sleep_tx_count(struct iwl_priv *priv, int sta_id, int cnt);


#line 380 
int iwl_update_bcast_station(struct iwl_priv *priv, struct iwl_rxon_context *ctx);


#line 382 
int iwl_update_bcast_stations(struct iwl_priv *priv);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
u8 const iwl_bcast_addr[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};

#line 42 
void __compiletime_assert_42(void);


#line 46 
void __compiletime_assert_48(void);


#line 51 
void __compiletime_assert_54(void);


#line 57 
void __compiletime_assert_58(void);


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static int iwl_sta_ucode_activate(struct iwl_priv *priv, u8 sta_id)
{
  int __retres;
  {
    int tmp_0;
    
#line 39 
    if (debug_locks != 0) {
      int tmp;
      
#line 39 
      tmp = lock_is_held(& priv->sta_lock.__anonCompField_spinlock_18.__anonCompField___anonunion_34_17.dep_map);
      
#line 39 
      if (tmp == 0) 
#line 39 
                    tmp_0 = 1; else 
#line 39 
                                    tmp_0 = 0;
    }
    else 
#line 39 
         tmp_0 = 0;
    
#line 39 
    int __ret_warn_on = tmp_0;
    
#line 39 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 39 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",39); else ;
    
#line 39 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 41 
  if ((unsigned int)sta_id > 15U) {
    {
      
#line 42 
      bool __cond = (_Bool)((int)*("invalid sta_id %u\n" + 17UL) != 10);
      
#line 42 
      if ((int)__cond != 0) 
#line 42 
                            __compiletime_assert_42(); else ;
    }
    
#line 42 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"invalid sta_id %u\n",(int)sta_id);
    
#line 43 
    __retres = -22;
    
#line 43 
    goto return_label;
  }
  else ;
  
#line 45 
  if (((unsigned long)priv->stations[(int)sta_id].used & 1UL) == 0UL) {
    {
      
#line 46 
      bool __cond_0 = (_Bool)((int)*("ACTIVATE a non DRIVER active station id %u " + 51UL) != 10);
      
#line 46 
      if ((int)__cond_0 != 0) 
#line 46 
                              __compiletime_assert_48(); else ;
    }
    
#line 46 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"ACTIVATE a non DRIVER active station id %u ",(int)sta_id,(u8 *)(& priv->stations[(int)sta_id].sta.sta.addr));
  }
  else ;
  
#line 50 
  if (((unsigned long)priv->stations[(int)sta_id].used & 2UL) != 0UL) {
    {
      
#line 51 
      bool __cond_1 = (_Bool)((int)*("STA id %u addr %pM already present in uCode " + 65UL) != 10);
      
#line 51 
      if ((int)__cond_1 != 0) 
#line 51 
                              __compiletime_assert_54(); else ;
    }
    
#line 51 
    __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_sta_ucode_activate","STA id %u addr %pM already present in uCode ",(int)sta_id,(u8 *)(& priv->stations[(int)sta_id].sta.sta.addr));
  }
  else {
    
#line 56 
    priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used | 2U);
    {
      
#line 57 
      bool __cond_2 = (_Bool)((int)*("Added STA id %u addr %pM to uCode\n" + 33UL) != 10);
      
#line 57 
      if ((int)__cond_2 != 0) 
#line 57 
                              __compiletime_assert_58(); else ;
    }
    
#line 57 
    __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_sta_ucode_activate","Added STA id %u addr %pM to uCode\n",(int)sta_id,(u8 *)(& priv->stations[(int)sta_id].sta.sta.addr));
  }
  
#line 60 
  __retres = 0;
  return_label: 
#line 60 
                return __retres;
}


#line 72 
void __compiletime_assert_73(void);


#line 77 
void __compiletime_assert_78(void);


#line 84 
void __compiletime_assert_84(void);


#line 88 
void __compiletime_assert_89(void);


#line 92 
void __compiletime_assert_93(void);


#line 96 
void __compiletime_assert_97(void);


#line 100 
void __compiletime_assert_101(void);


#line 105 
void __compiletime_assert_108(void);


#line 118 
void __compiletime_assert_121(void);


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static int iwl_process_add_sta_resp(struct iwl_priv *priv, struct iwl_addsta_cmd *addsta, struct iwl_rx_packet *pkt)
{
  int __retres;
  char *tmp;
  char *tmp_0;
  
#line 67 
  struct iwl_add_sta_resp *add_sta_resp = (struct iwl_add_sta_resp *)(& pkt->data);
  
#line 68 
  u8 sta_id = addsta->sta.sta_id;
  
#line 69 
  int ret = -5;
  
#line 71 
  if (((int)pkt->hdr.flags & 64) != 0) {
    {
      
#line 72 
      bool __cond = (_Bool)((int)*("Bad return from REPLY_ADD_STA (0x%08X)\n" + 38UL) != 10);
      
#line 72 
      if ((int)__cond != 0) 
#line 72 
                            __compiletime_assert_73(); else ;
    }
    
#line 72 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Bad return from REPLY_ADD_STA (0x%08X)\n",(int)pkt->hdr.flags);
    
#line 74 
    __retres = ret;
    
#line 74 
    goto return_label;
  }
  else ;
  {
    
#line 77 
    bool __cond_0 = (_Bool)((int)*("Processing response for adding station %u\n" + 41UL) != 10);
    
#line 77 
    if ((int)__cond_0 != 0) 
#line 77 
                            __compiletime_assert_78(); else ;
  }
  
#line 77 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_process_add_sta_resp","Processing response for adding station %u\n",(int)sta_id);
  
#line 80 
  ldv_spin_lock_bh_74(& priv->sta_lock);
  
#line 82 
  switch ((int)add_sta_resp->status) {
    case 1: 
#line 83 
    ;
    {
      
#line 84 
      bool __cond_1 = (_Bool)((int)*("REPLY_ADD_STA PASSED\n" + 20UL) != 10);
      
#line 84 
      if ((int)__cond_1 != 0) 
#line 84 
                              __compiletime_assert_84(); else ;
    }
    
#line 84 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_process_add_sta_resp","REPLY_ADD_STA PASSED\n");
    
#line 85 
    ret = iwl_sta_ucode_activate(priv,(unsigned char)((int)sta_id));
    
#line 86 
    goto ldv_53153;
    case 2: 
#line 87 
    ;
    {
      
#line 88 
      bool __cond_2 = (_Bool)((int)*("Adding station %d failed, no room in table.\n" + 43UL) != 10);
      
#line 88 
      if ((int)__cond_2 != 0) 
#line 88 
                              __compiletime_assert_89(); else ;
    }
    
#line 88 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Adding station %d failed, no room in table.\n",(int)sta_id);
    
#line 90 
    goto ldv_53153;
    case 4: 
#line 91 
    ;
    {
      
#line 92 
      bool __cond_3 = (_Bool)((int)*("Adding station %d failed, no block ack " + 48UL) != 10);
      
#line 92 
      if ((int)__cond_3 != 0) 
#line 92 
                              __compiletime_assert_93(); else ;
    }
    
#line 92 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Adding station %d failed, no block ack ",(int)sta_id);
    
#line 94 
    goto ldv_53153;
    case 8: 
#line 95 
    ;
    {
      
#line 96 
      bool __cond_4 = (_Bool)((int)*("Attempting to modify non-existing station %d\n" + 44UL) != 10);
      
#line 96 
      if ((int)__cond_4 != 0) 
#line 96 
                              __compiletime_assert_97(); else ;
    }
    
#line 96 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Attempting to modify non-existing station %d\n",(int)sta_id);
    
#line 98 
    goto ldv_53153;
    default: 
#line 99 
    ;
    {
      
#line 100 
      bool __cond_5 = (_Bool)((int)*("Received REPLY_ADD_STA:(0x%08X)\n" + 31UL) != 10);
      
#line 100 
      if ((int)__cond_5 != 0) 
#line 100 
                              __compiletime_assert_101(); else ;
    }
    
#line 100 
    __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_process_add_sta_resp","Received REPLY_ADD_STA:(0x%08X)\n",(int)add_sta_resp->status);
    
#line 102 
    goto ldv_53153;
  }
  ldv_53153: 
#line 105 
  ;
  {
    
#line 105 
    bool __cond_6 = (_Bool)((int)*("%s station id %u addr %pM\n" + 25UL) != 10);
    
#line 105 
    if ((int)__cond_6 != 0) 
#line 105 
                            __compiletime_assert_108(); else ;
  }
  
#line 105 
  ;
  
#line 105 
  ;
  
#line 105 
  if ((unsigned int)priv->stations[(int)sta_id].sta.mode == 1U) 
#line 105 
                                                                tmp = (char *)"Modified"; else 
                                                                    
#line 105 
                                                                    tmp = (char *)"Added";
  
#line 105 
  ;
  
#line 105 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_process_add_sta_resp","%s station id %u addr %pM\n",tmp,(int)sta_id,(u8 *)(& priv->stations[(int)sta_id].sta.sta.addr));
  {
    
#line 118 
    bool __cond_7 = (_Bool)((int)*("%s station according to cmd buffer %pM\n" + 38UL) != 10);
    
#line 118 
    if ((int)__cond_7 != 0) 
#line 118 
                            __compiletime_assert_121(); else ;
  }
  
#line 118 
  ;
  
#line 118 
  if ((unsigned int)priv->stations[(int)sta_id].sta.mode == 1U) 
#line 118 
                                                                tmp_0 = (char *)"Modified"; else 
                                                                    
#line 118 
                                                                    tmp_0 = (char *)"Added";
  
#line 118 
  ;
  
#line 118 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_process_add_sta_resp","%s station according to cmd buffer %pM\n",tmp_0,(u8 *)(& addsta->sta.addr));
  
#line 122 
  ldv_spin_unlock_bh_75(& priv->sta_lock);
  
#line 124 
  __retres = ret;
  return_label: 
#line 124 
                return __retres;
}


#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_add_sta_callback(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  int tmp_0;
  
#line 130 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 132 
  if (cmd == (struct iwl_device_cmd *)0) {
    
#line 133 
    __retres = 0;
    
#line 133 
    goto return_label;
  }
  else ;
  
#line 135 
  tmp_0 = iwl_process_add_sta_resp(priv,(struct iwl_addsta_cmd *)(& cmd->payload),pkt);
  
#line 135 
  __retres = tmp_0;
  return_label: 
#line 135 
                return __retres;
}


#line 150 
void __compiletime_assert_151(void);


#line 168 
void __compiletime_assert_169(void);


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_send_add_sta(struct iwl_priv *priv, struct iwl_addsta_cmd *sta, u8 flags)
{
  int __retres;
  char *tmp;
  
#line 141 
  int ret = 0;
  
#line 142 
  struct iwl_host_cmd cmd = {.data = {(void const *)sta}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = (unsigned int)flags, .len = {(unsigned short)92U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)24U};
  
#line 148 
  u8 sta_id = sta->sta.sta_id;
  {
    
#line 150 
    bool __cond = (_Bool)((int)*("Adding sta %u (%pM) %ssynchronously\n" + 35UL) != 10);
    
#line 150 
    if ((int)__cond != 0) 
#line 150 
                          __compiletime_assert_151(); else ;
  }
  
#line 150 
  if (((int)flags & 1) != 0) 
#line 150 
                             tmp = (char *)"a"; else 
#line 150 
                                                     tmp = (char *)"";
  
#line 150 
  ;
  
#line 150 
  ;
  
#line 150 
  ;
  
#line 150 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_send_add_sta","Adding sta %u (%pM) %ssynchronously\n",(int)sta_id,(u8 *)(& sta->sta.addr),tmp);
  
#line 153 
  if (((int)flags & 1) == 0) {
    
#line 154 
    cmd.flags |= 2U;
    
#line 155 
    __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",155,0);
  }
  else ;
  
#line 158 
  ret = iwl_dvm_send_cmd(priv,& cmd);
  
#line 160 
  if (ret != 0 || ((int)flags & 1) != 0) {
    
#line 161 
    __retres = ret;
    
#line 161 
    goto return_label;
  }
  else ;
  
#line 165 
  iwl_free_resp(& cmd);
  
#line 167 
  if (cmd.handler_status != 0) {
    {
      
#line 168 
      bool __cond_0 = (_Bool)((int)*("%s - error in the CMD response %d\n" + 33UL) != 10);
      
#line 168 
      if ((int)__cond_0 != 0) 
#line 168 
                              __compiletime_assert_169(); else ;
    }
    
#line 168 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"%s - error in the CMD response %d\n","iwl_send_add_sta",cmd.handler_status);
  }
  else ;
  
#line 171 
  __retres = cmd.handler_status;
  return_label: 
#line 171 
                return __retres;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
bool iwl_is_ht40_tx_allowed(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_sta *sta)
{
  bool __retres;
  
#line 178 
  if (! ctx->ht.enabled || ! ctx->ht.is_40mhz) {
    
#line 179 
    __retres = (_Bool)0;
    
#line 179 
    goto return_label;
  }
  else ;
  
#line 182 
  if ((int)priv->disable_ht40 != 0) {
    
#line 183 
    __retres = (_Bool)0;
    
#line 183 
    goto return_label;
  }
  else ;
  
#line 187 
  if (sta == (struct ieee80211_sta *)0) {
    
#line 188 
    __retres = (_Bool)1;
    
#line 188 
    goto return_label;
  }
  else ;
  
#line 190 
  __retres = (_Bool)(sta->bandwidth != (unsigned int)IEEE80211_STA_RX_BW_20);
  return_label: 
#line 190 
                return __retres;
}


#line 227 
void __compiletime_assert_227(void);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static void iwl_sta_calc_ht_flags(struct iwl_priv *priv, struct ieee80211_sta *sta, struct iwl_rxon_context *ctx, __le32 *flags, __le32 *mask)
{
  char *tmp_0;
  bool tmp_1;
  
#line 198 
  struct ieee80211_sta_ht_cap *sta_ht_inf = & sta->ht_cap;
  
#line 200 
  *mask = 66715648U;
  
#line 205 
  *flags = 0U;
  
#line 207 
  if (sta == (struct ieee80211_sta *)0 || ! sta_ht_inf->ht_supported) 
    
#line 208 
    goto return_label; else ;
  {
    
#line 210 
    bool __cond = (_Bool)((int)*("STA %pM SM PS mode: %s\n" + 22UL) != 10);
    
#line 210 
    if ((int)__cond != 0) 
#line 210 
                          __compiletime_assert_215(); else ;
  }
  
#line 210 
  if (sta->smps_mode != (unsigned int)IEEE80211_SMPS_STATIC) {
    char *tmp;
    
#line 210 
    if (sta->smps_mode == (unsigned int)IEEE80211_SMPS_DYNAMIC) 
#line 210 
                                                                tmp = (char *)"dynamic"; else 
                                                                    
#line 210 
                                                                    tmp = (char *)"disabled";
    
#line 210 
    tmp_0 = tmp;
  }
  else 
#line 210 
       tmp_0 = (char *)"static";
  
#line 210 
  ;
  
#line 210 
  ;
  
#line 210 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_sta_calc_ht_flags","STA %pM SM PS mode: %s\n",(u8 *)(& sta->addr),tmp_0);
  
#line 217 
  switch ((unsigned int)sta->smps_mode) {
    case (unsigned int)2: 
#line 218 
    ;
    
#line 219 
    *flags |= 4194304U;
    
#line 220 
    goto ldv_53224;
    case (unsigned int)3: 
#line 221 
    ;
    
#line 222 
    *flags |= 131072U;
    
#line 223 
    goto ldv_53224;
    case (unsigned int)1: 
#line 224 
    ;
    
#line 225 
    goto ldv_53224;
    default: 
#line 226 
    ;
    {
      
#line 227 
      bool __cond_0 = (_Bool)((int)*("Invalid MIMO PS mode %d\n" + 23UL) != 10);
      
#line 227 
      if ((int)__cond_0 != 0) 
#line 227 
                              __compiletime_assert_227(); else ;
    }
    
#line 227 
    __iwl_warn(priv->dev,"Invalid MIMO PS mode %d\n",(unsigned int)sta->smps_mode);
    
#line 228 
    goto ldv_53224;
  }
  ldv_53224: 
#line 231 
  ;
  
#line 231 
  *flags |= (unsigned int)sta_ht_inf->ampdu_factor << 19;
  
#line 234 
  *flags |= (unsigned int)sta_ht_inf->ampdu_density << 23;
  
#line 237 
  tmp_1 = iwl_is_ht40_tx_allowed(priv,ctx,sta);
  
#line 237 
  if ((int)tmp_1 != 0) 
#line 238 
                       *flags |= 2097152U; else ;
  return_label: 
#line 239 
                return;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_sta_update_ht(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_sta *sta)
{
  int __retres;
  int tmp;
  __le32 flags;
  __le32 mask;
  struct iwl_addsta_cmd cmd;
  int tmp_1;
  int tmp_2;
  
#line 244 
  tmp = iwl_sta_id(sta);
  
#line 244 
  u8 sta_id = (unsigned char)tmp;
  {
    bool __warned;
    
#line 248 
    int __ret_warn_once = (unsigned int)sta_id == 255U;
    
#line 248 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp_0;
      {
        
#line 248 
        int __ret_warn_on = ! __warned;
        
#line 248 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 248 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",248); else ;
        
#line 248 
        tmp_0 = (long)(__ret_warn_on != 0);
      }
      
#line 248 
      if ((long)tmp_0 != 0L) 
#line 248 
                             __warned = (_Bool)1; else ;
    }
    else ;
    
#line 248 
    tmp_1 = (long)(__ret_warn_once != 0);
  }
  
#line 248 
  if ((long)tmp_1 != 0L) {
    
#line 249 
    __retres = -22;
    
#line 249 
    goto return_label;
  }
  else ;
  
#line 251 
  iwl_sta_calc_ht_flags(priv,sta,ctx,& flags,& mask);
  
#line 253 
  ldv_spin_lock_bh_76_0(& priv->sta_lock);
  
#line 254 
  priv->stations[(int)sta_id].sta.station_flags &= ~ mask;
  
#line 255 
  priv->stations[(int)sta_id].sta.station_flags |= flags;
  
#line 256 
  ldv_spin_unlock_bh_77_0(& priv->sta_lock);
  
#line 258 
  memset((void *)(& cmd),0,92UL);
  
#line 259 
  cmd.mode = (unsigned char)1U;
  
#line 260 
  cmd.station_flags_msk = mask;
  
#line 261 
  cmd.station_flags = flags;
  
#line 262 
  cmd.sta.sta_id = sta_id;
  
#line 264 
  tmp_2 = iwl_send_add_sta(priv,& cmd,(unsigned char)0);
  
#line 264 
  __retres = tmp_2;
  return_label: 
#line 264 
                return __retres;
}


#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static void iwl_set_ht_add_station(struct iwl_priv *priv, u8 index, struct ieee80211_sta *sta, struct iwl_rxon_context *ctx)
{
  __le32 flags;
  __le32 mask;
  
#line 273 
  iwl_sta_calc_ht_flags(priv,sta,ctx,& flags,& mask);
  {
    int tmp_0;
    
#line 275 
    if (debug_locks != 0) {
      int tmp;
      
#line 275 
      tmp = lock_is_held(& priv->sta_lock.__anonCompField_spinlock_18.__anonCompField___anonunion_34_17.dep_map);
      
#line 275 
      if (tmp == 0) 
#line 275 
                    tmp_0 = 1; else 
#line 275 
                                    tmp_0 = 0;
    }
    else 
#line 275 
         tmp_0 = 0;
    
#line 275 
    int __ret_warn_on = tmp_0;
    
#line 275 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 275 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",275); else ;
    
#line 275 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 276 
  priv->stations[(int)index].sta.station_flags &= ~ mask;
  
#line 277 
  priv->stations[(int)index].sta.station_flags |= flags;
  
#line 278 
  return;
}


#line 322 
void __compiletime_assert_323(void);


#line 330 
void __compiletime_assert_331(void);


#line 337 
void __compiletime_assert_338(void);


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
u8 iwl_prep_station(struct iwl_priv *priv, struct iwl_rxon_context *ctx, u8 const *addr, bool is_ap, struct ieee80211_sta *sta)
{
  u8 __retres;
  struct iwl_station_entry *station;
  int i;
  
#line 290 
  u8 sta_id = (unsigned char)255U;
  
#line 292 
  if ((int)is_ap != 0) 
#line 293 
                       sta_id = ctx->ap_sta_id;
  else {
    bool tmp_0;
    
#line 294 
    tmp_0 = is_broadcast_ether_addr(addr);
    
#line 294 
    if ((int)tmp_0 != 0) 
#line 295 
                         sta_id = ctx->bcast_sta_id;
    else {
      bool tmp;
      
#line 297 
      i = 2;
      
#line 297 
      goto ldv_53268;
      ldv_53267: 
#line 298 
      ;
      
#line 298 
      tmp = ether_addr_equal((u8 const *)(& priv->stations[i].sta.sta.addr),addr);
      
#line 298 
      if ((int)tmp != 0) {
        
#line 300 
        sta_id = (unsigned char)i;
        
#line 301 
        goto ldv_53266;
      }
      else ;
      
#line 304 
      if ((unsigned int)priv->stations[i].used == 0U && (unsigned int)sta_id == 255U) 
        
#line 306 
        sta_id = (unsigned char)i; else ;
      
#line 297 
      i += 1;
      ldv_53268: 
#line 298 
      ;
      
#line 297 
      if (i <= 15) 
#line 299 
                   goto ldv_53267; else 
#line 302 
                                        goto ldv_53266;
      ldv_53266: 
#line 303 
      ;
    }
  }
  
#line 313 
  if ((long)((unsigned int)sta_id == 255U) != 0L) {
    
#line 314 
    __retres = sta_id;
    
#line 314 
    goto return_label;
  }
  else ;
  
#line 321 
  if (((unsigned long)priv->stations[(int)sta_id].used & 4UL) != 0UL) {
    {
      
#line 322 
      bool __cond = (_Bool)((int)*("STA %d already in process of being " + 41UL) != 10);
      
#line 322 
      if ((int)__cond != 0) 
#line 322 
                            __compiletime_assert_323(); else ;
    }
    
#line 322 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_prep_station","STA %d already in process of being ",(int)sta_id);
    
#line 324 
    __retres = sta_id;
    
#line 324 
    goto return_label;
  }
  else ;
  
#line 327 
  if (((unsigned long)priv->stations[(int)sta_id].used & 1UL) != 0UL && ((unsigned long)priv->stations[(int)sta_id].used & 2UL) != 0UL) {
    bool tmp_1;
    
#line 328 
    tmp_1 = ether_addr_equal((u8 const *)(& priv->stations[(int)sta_id].sta.sta.addr),addr);
    
#line 328 
    if ((int)tmp_1 != 0) {
      {
        
#line 330 
        bool __cond_0 = (_Bool)((int)*("STA %d (%pM) already added, not " + 45UL) != 10);
        
#line 330 
        if ((int)__cond_0 != 0) 
#line 330 
                                __compiletime_assert_331(); else ;
      }
      
#line 330 
      __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_prep_station","STA %d (%pM) already added, not ",(int)sta_id,addr);
      
#line 332 
      __retres = sta_id;
      
#line 332 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 335 
  station = & priv->stations[(int)sta_id];
  
#line 336 
  station->used = (unsigned char)1U;
  {
    
#line 337 
    bool __cond_1 = (_Bool)((int)*("Add STA to driver ID %d: %pM\n" + 28UL) != 10);
    
#line 337 
    if ((int)__cond_1 != 0) 
#line 337 
                            __compiletime_assert_338(); else ;
  }
  
#line 337 
  __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_prep_station","Add STA to driver ID %d: %pM\n",(int)sta_id,addr);
  
#line 339 
  priv->num_stations += 1;
  
#line 342 
  memset((void *)(& station->sta),0,92UL);
  
#line 343 
  memcpy((void *)(& station->sta.sta.addr),(void const *)addr,6UL);
  
#line 344 
  station->sta.mode = (unsigned char)0U;
  
#line 345 
  station->sta.sta.sta_id = sta_id;
  
#line 346 
  station->sta.station_flags = ctx->station_flags;
  
#line 347 
  station->ctxid = (unsigned char)ctx->ctxid;
  
#line 349 
  if (sta != (struct ieee80211_sta *)0) {
    struct iwl_station_priv *sta_priv;
    
#line 352 
    sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
    
#line 353 
    sta_priv->ctx = ctx;
  }
  else ;
  
#line 361 
  iwl_set_ht_add_station(priv,(unsigned char)((int)sta_id),sta,ctx);
  
#line 363 
  __retres = sta_id;
  return_label: 
#line 363 
                return __retres;
}


#line 384 
void __compiletime_assert_385(void);


#line 396 
void __compiletime_assert_397(void);


#line 404 
void __compiletime_assert_405(void);


#line 419 
void __compiletime_assert_420(void);


#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_add_station_common(struct iwl_priv *priv, struct iwl_rxon_context *ctx, u8 const *addr, bool is_ap, struct ieee80211_sta *sta, u8 *sta_id_r)
{
  int __retres;
  u8 sta_id;
  struct iwl_addsta_cmd sta_cmd;
  
#line 376 
  int ret = 0;
  
#line 380 
  *sta_id_r = (unsigned char)0U;
  
#line 381 
  ldv_spin_lock_bh_78_0(& priv->sta_lock);
  
#line 382 
  sta_id = iwl_prep_station(priv,ctx,addr,(_Bool)((bool)((int)is_ap) != 0),sta);
  
#line 383 
  if ((unsigned int)sta_id == 255U) {
    {
      
#line 384 
      bool __cond = (_Bool)((int)*("Unable to prepare station %pM for addition\n" + 42UL) != 10);
      
#line 384 
      if ((int)__cond != 0) 
#line 384 
                            __compiletime_assert_385(); else ;
    }
    
#line 384 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to prepare station %pM for addition\n",addr);
    
#line 386 
    ldv_spin_unlock_bh_79_0(& priv->sta_lock);
    
#line 387 
    __retres = -22;
    
#line 387 
    goto return_label;
  }
  else ;
  
#line 395 
  if (((unsigned long)priv->stations[(int)sta_id].used & 4UL) != 0UL) {
    {
      
#line 396 
      bool __cond_0 = (_Bool)((int)*("STA %d already in process of being " + 41UL) != 10);
      
#line 396 
      if ((int)__cond_0 != 0) 
#line 396 
                              __compiletime_assert_397(); else ;
    }
    
#line 396 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_add_station_common","STA %d already in process of being ",(int)sta_id);
    
#line 398 
    ldv_spin_unlock_bh_80(& priv->sta_lock);
    
#line 399 
    __retres = -17;
    
#line 399 
    goto return_label;
  }
  else ;
  
#line 402 
  if (((unsigned long)priv->stations[(int)sta_id].used & 1UL) != 0UL && ((unsigned long)priv->stations[(int)sta_id].used & 2UL) != 0UL) {
    {
      
#line 404 
      bool __cond_1 = (_Bool)((int)*("STA %d (%pM) already added, not " + 45UL) != 10);
      
#line 404 
      if ((int)__cond_1 != 0) 
#line 404 
                              __compiletime_assert_405(); else ;
    }
    
#line 404 
    __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_add_station_common","STA %d (%pM) already added, not ",(int)sta_id,addr);
    
#line 406 
    ldv_spin_unlock_bh_81_0(& priv->sta_lock);
    
#line 407 
    __retres = -17;
    
#line 407 
    goto return_label;
  }
  else ;
  
#line 410 
  priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used | 4U);
  
#line 411 
  memcpy((void *)(& sta_cmd),(void const *)(& priv->stations[(int)sta_id].sta),92UL);
  
#line 413 
  ldv_spin_unlock_bh_82(& priv->sta_lock);
  
#line 416 
  ret = iwl_send_add_sta(priv,& sta_cmd,(unsigned char)0);
  
#line 417 
  if (ret != 0) {
    
#line 418 
    ldv_spin_lock_bh_83(& priv->sta_lock);
    {
      
#line 419 
      bool __cond_2 = (_Bool)((int)*("Adding station %pM failed.\n" + 26UL) != 10);
      
#line 419 
      if ((int)__cond_2 != 0) 
#line 419 
                              __compiletime_assert_420(); else ;
    }
    
#line 419 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Adding station %pM failed.\n",(u8 *)(& priv->stations[(int)sta_id].sta.sta.addr));
    
#line 421 
    priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used & 254U);
    
#line 422 
    priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used & 251U);
    
#line 423 
    ldv_spin_unlock_bh_84(& priv->sta_lock);
  }
  else ;
  
#line 425 
  *sta_id_r = sta_id;
  
#line 426 
  __retres = ret;
  return_label: 
#line 426 
                return __retres;
}


#line 440 
void __compiletime_assert_440(void);


#line 445 
void __compiletime_assert_445(void);


#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static void iwl_sta_ucode_deactivate(struct iwl_priv *priv, u8 sta_id)
{
  {
    int tmp_0;
    
#line 434 
    if (debug_locks != 0) {
      int tmp;
      
#line 434 
      tmp = lock_is_held(& priv->sta_lock.__anonCompField_spinlock_18.__anonCompField___anonunion_34_17.dep_map);
      
#line 434 
      if (tmp == 0) 
#line 434 
                    tmp_0 = 1; else 
#line 434 
                                    tmp_0 = 0;
    }
    else 
#line 434 
         tmp_0 = 0;
    
#line 434 
    int __ret_warn_on = tmp_0;
    
#line 434 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 434 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",434); else ;
    
#line 434 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 437 
  if (((unsigned long)priv->stations[(int)sta_id].used & 3UL) != 2UL) {
    {
      
#line 440 
      bool __cond = (_Bool)((int)*("removed non active STA %u\n" + 25UL) != 10);
      
#line 440 
      if ((int)__cond != 0) 
#line 440 
                            __compiletime_assert_440(); else ;
    }
    
#line 440 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"removed non active STA %u\n",(int)sta_id);
  }
  else ;
  
#line 442 
  priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used & 253U);
  
#line 444 
  memset((void *)(& priv->stations[(int)sta_id]),0,104UL);
  {
    
#line 445 
    bool __cond_0 = (_Bool)((int)*("Removed STA %u\n" + 14UL) != 10);
    
#line 445 
    if ((int)__cond_0 != 0) 
#line 445 
                            __compiletime_assert_445(); else ;
  }
  
#line 445 
  __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_sta_ucode_deactivate","Removed STA %u\n",(int)sta_id);
  
#line 446 
  return;
}


#line 475 
void __compiletime_assert_476(void);


#line 489 
void __compiletime_assert_489(void);


#line 493 
void __compiletime_assert_493(void);


#line 448  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static int iwl_send_remove_station(struct iwl_priv *priv, u8 const *addr, int sta_id, bool temporary)
{
  int __retres;
  struct iwl_rx_packet *pkt;
  int ret;
  struct iwl_rem_sta_cmd rm_sta_cmd;
  
#line 456 
  struct iwl_host_cmd cmd = {.data = {(void const *)(& rm_sta_cmd)}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)12U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)25U};
  
#line 462 
  memset((void *)(& rm_sta_cmd),0,12UL);
  
#line 463 
  rm_sta_cmd.num_sta = (unsigned char)1U;
  
#line 464 
  memcpy((void *)(& rm_sta_cmd.addr),(void const *)addr,6UL);
  
#line 466 
  cmd.flags |= 2U;
  
#line 468 
  ret = iwl_dvm_send_cmd(priv,& cmd);
  
#line 470 
  if (ret != 0) {
    
#line 471 
    __retres = ret;
    
#line 471 
    goto return_label;
  }
  else ;
  
#line 473 
  pkt = cmd.resp_pkt;
  
#line 474 
  if (((int)pkt->hdr.flags & 64) != 0) {
    {
      
#line 475 
      bool __cond = (_Bool)((int)*("Bad return from REPLY_REMOVE_STA (0x%08X)\n" + 41UL) != 10);
      
#line 475 
      if ((int)__cond != 0) 
#line 475 
                            __compiletime_assert_476(); else ;
    }
    
#line 475 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Bad return from REPLY_REMOVE_STA (0x%08X)\n",(int)pkt->hdr.flags);
    
#line 477 
    ret = -5;
  }
  else ;
  
#line 480 
  if (ret == 0) {
    
#line 481 
    struct iwl_rem_sta_resp *rem_sta_resp = (struct iwl_rem_sta_resp *)(& pkt->data);
    
#line 482 
    switch ((int)rem_sta_resp->status) {
      case 1: 
#line 483 
      ;
      
#line 484 
      if (! temporary) {
        
#line 485 
        ldv_spin_lock_bh_85(& priv->sta_lock);
        
#line 486 
        iwl_sta_ucode_deactivate(priv,(unsigned char)((int)((unsigned char)sta_id)));
        
#line 487 
        ldv_spin_unlock_bh_86(& priv->sta_lock);
      }
      else ;
      {
        
#line 489 
        bool __cond_0 = (_Bool)((int)*("REPLY_REMOVE_STA PASSED\n" + 23UL) != 10);
        
#line 489 
        if ((int)__cond_0 != 0) 
#line 489 
                                __compiletime_assert_489(); else ;
      }
      
#line 489 
      __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_send_remove_station","REPLY_REMOVE_STA PASSED\n");
      
#line 490 
      goto ldv_53347;
      default: 
#line 491 
      ;
      
#line 492 
      ret = -5;
      {
        
#line 493 
        bool __cond_1 = (_Bool)((int)*("REPLY_REMOVE_STA failed\n" + 23UL) != 10);
        
#line 493 
        if ((int)__cond_1 != 0) 
#line 493 
                                __compiletime_assert_493(); else ;
      }
      
#line 493 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"REPLY_REMOVE_STA failed\n");
      
#line 494 
      goto ldv_53347;
    }
    ldv_53347: 
#line 496 
    ;
  }
  else ;
  
#line 497 
  iwl_free_resp(& cmd);
  
#line 499 
  __retres = ret;
  return_label: 
#line 499 
                return __retres;
}


#line 511 
void __compiletime_assert_513(void);


#line 522 
void __compiletime_assert_523(void);


#line 537 
void __compiletime_assert_538(void);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_remove_station(struct iwl_priv *priv, u8 const sta_id, u8 const *addr)
{
  int __retres;
  u8 tid;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 510 
  tmp = iwl_is_ready(priv);
  
#line 510 
  if (tmp == 0) {
    {
      
#line 511 
      bool __cond = (_Bool)((int)*("Unable to remove station %pM, device not ready.\n" + 47UL) != 10);
      
#line 511 
      if ((int)__cond != 0) 
#line 511 
                            __compiletime_assert_513(); else ;
    }
    
#line 511 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_remove_station","Unable to remove station %pM, device not ready.\n",addr);
    
#line 519 
    __retres = 0;
    
#line 519 
    goto return_label;
  }
  else ;
  {
    
#line 522 
    bool __cond_0 = (_Bool)((int)*("Removing STA from driver:%d  %pM\n" + 32UL) != 10);
    
#line 522 
    if ((int)__cond_0 != 0) 
#line 522 
                            __compiletime_assert_523(); else ;
  }
  
#line 522 
  __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_remove_station","Removing STA from driver:%d  %pM\n",(int)sta_id,addr);
  {
    
#line 525 
    int __ret_warn_on = (unsigned int)sta_id == 255U;
    
#line 525 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 525 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",525); else ;
    
#line 525 
    tmp_0 = (long)(__ret_warn_on != 0);
  }
  
#line 525 
  if ((long)tmp_0 != 0L) {
    
#line 526 
    __retres = -22;
    
#line 526 
    goto return_label;
  }
  else ;
  
#line 528 
  ldv_spin_lock_bh_87(& priv->sta_lock);
  
#line 530 
  if (((unsigned long)priv->stations[(int)sta_id].used & 1UL) == 0UL) {
    {
      
#line 531 
      bool __cond_1 = (_Bool)((int)*("Removing %pM but non DRIVER active\n" + 34UL) != 10);
      
#line 531 
      if ((int)__cond_1 != 0) 
#line 531 
                              __compiletime_assert_532(); else ;
    }
    
#line 531 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_remove_station","Removing %pM but non DRIVER active\n",addr);
    
#line 533 
    goto out_err;
  }
  else ;
  
#line 536 
  if (((unsigned long)priv->stations[(int)sta_id].used & 2UL) == 0UL) {
    {
      
#line 537 
      bool __cond_2 = (_Bool)((int)*("Removing %pM but non UCODE active\n" + 33UL) != 10);
      
#line 537 
      if ((int)__cond_2 != 0) 
#line 537 
                              __compiletime_assert_538(); else ;
    }
    
#line 537 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_remove_station","Removing %pM but non UCODE active\n",addr);
    
#line 539 
    goto out_err;
  }
  else ;
  
#line 542 
  if (((unsigned long)priv->stations[(int)sta_id].used & 8UL) != 0UL) {
    
#line 543 
    kfree((void const *)priv->stations[(int)sta_id].lq);
    
#line 544 
    priv->stations[(int)sta_id].lq = (struct iwl_link_quality_cmd *)0;
  }
  else ;
  
#line 547 
  tid = (unsigned char)0U;
  
#line 547 
  goto ldv_53380;
  ldv_53379: 
#line 548 
  ;
  
#line 548 
  memset((void *)(& priv->tid_data[(int)sta_id][(int)tid]),0,20UL);
  
#line 547 
  tid = (u8)((int)tid + 1);
  ldv_53380: 
#line 548 
  ;
  
#line 547 
  if ((unsigned int)tid <= 7U) 
#line 549 
                               goto ldv_53379; else 
#line 552 
                                                    goto ldv_53381;
  ldv_53381: 
#line 553 
  ;
  
#line 551 
  priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used & 254U);
  
#line 553 
  priv->num_stations -= 1;
  {
    
#line 555 
    int __ret_warn_on_0 = priv->num_stations < 0;
    
#line 555 
    if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 555 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",555); else ;
    
#line 555 
    tmp_1 = (long)(__ret_warn_on_0 != 0);
  }
  
#line 555 
  if ((long)tmp_1 != 0L) 
#line 556 
                         priv->num_stations = 0; else ;
  
#line 558 
  ldv_spin_unlock_bh_88(& priv->sta_lock);
  
#line 560 
  tmp_2 = iwl_send_remove_station(priv,addr,(int)sta_id,(_Bool)0);
  
#line 560 
  __retres = tmp_2;
  
#line 560 
  goto return_label;
  out_err: 
#line 561 
  ;
  
#line 562 
  ldv_spin_unlock_bh_89(& priv->sta_lock);
  
#line 563 
  __retres = -22;
  return_label: 
#line 563 
                return __retres;
}


#line 572 
void __compiletime_assert_574(void);


#line 578 
void __compiletime_assert_578(void);


#line 566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
void iwl_deactivate_station(struct iwl_priv *priv, u8 const sta_id, u8 const *addr)
{
  u8 tid;
  int tmp;
  int tmp_1;
  int tmp_4;
  
#line 571 
  tmp = iwl_is_ready(priv);
  
#line 571 
  if (tmp == 0) {
    {
      
#line 572 
      bool __cond = (_Bool)((int)*("Unable to remove station %pM, device not ready.\n" + 47UL) != 10);
      
#line 572 
      if ((int)__cond != 0) 
#line 572 
                            __compiletime_assert_574(); else ;
    }
    
#line 572 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_deactivate_station","Unable to remove station %pM, device not ready.\n",addr);
    
#line 575 
    goto return_label;
  }
  else ;
  {
    
#line 578 
    bool __cond_0 = (_Bool)((int)*("Deactivating STA: %pM (%d)\n" + 26UL) != 10);
    
#line 578 
    if ((int)__cond_0 != 0) 
#line 578 
                            __compiletime_assert_578(); else ;
  }
  
#line 578 
  __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_deactivate_station","Deactivating STA: %pM (%d)\n",addr,(int)sta_id);
  {
    bool __warned;
    
#line 580 
    int __ret_warn_once = (unsigned int)sta_id == 255U;
    
#line 580 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp_0;
      {
        
#line 580 
        int __ret_warn_on = ! __warned;
        
#line 580 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 580 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",580); else ;
        
#line 580 
        tmp_0 = (long)(__ret_warn_on != 0);
      }
      
#line 580 
      if ((long)tmp_0 != 0L) 
#line 580 
                             __warned = (_Bool)1; else ;
    }
    else ;
    
#line 580 
    tmp_1 = (long)(__ret_warn_once != 0);
  }
  
#line 580 
  if ((long)tmp_1 != 0L) 
#line 581 
                         goto return_label; else ;
  
#line 583 
  ldv_spin_lock_bh_90(& priv->sta_lock);
  {
    bool __warned_0;
    
#line 585 
    int __ret_warn_once_0 = ((unsigned long)priv->stations[(int)sta_id].used & 1UL) == 0UL;
    
#line 585 
    if ((long)(__ret_warn_once_0 != 0) != 0L) {
      int tmp_2;
      {
        
#line 585 
        int __ret_warn_on_0 = ! __warned_0;
        
#line 585 
        if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 585 
                                                warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",585); else ;
        
#line 585 
        tmp_2 = (long)(__ret_warn_on_0 != 0);
      }
      
#line 585 
      if ((long)tmp_2 != 0L) 
#line 585 
                             __warned_0 = (_Bool)1; else ;
    }
    else ;
    
#line 585 
    long tmp_3 = (long)(__ret_warn_once_0 != 0);
  }
  
#line 587 
  tid = (unsigned char)0U;
  
#line 587 
  goto ldv_53410;
  ldv_53409: 
#line 588 
  ;
  
#line 588 
  memset((void *)(& priv->tid_data[(int)sta_id][(int)tid]),0,20UL);
  
#line 587 
  tid = (u8)((int)tid + 1);
  ldv_53410: 
#line 588 
  ;
  
#line 587 
  if ((unsigned int)tid <= 7U) 
#line 589 
                               goto ldv_53409; else 
#line 592 
                                                    goto ldv_53411;
  ldv_53411: 
#line 593 
  ;
  
#line 591 
  priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used & 254U);
  
#line 592 
  priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used & 251U);
  
#line 594 
  priv->num_stations -= 1;
  {
    bool __warned_1;
    
#line 596 
    int __ret_warn_once_1 = priv->num_stations < 0;
    
#line 596 
    if ((long)(__ret_warn_once_1 != 0) != 0L) {
      int tmp_3_0;
      {
        
#line 596 
        int __ret_warn_on_1 = ! __warned_1;
        
#line 596 
        if ((long)(__ret_warn_on_1 != 0) != 0L) 
#line 596 
                                                warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",596); else ;
        
#line 596 
        tmp_3_0 = (long)(__ret_warn_on_1 != 0);
      }
      
#line 596 
      if ((long)tmp_3_0 != 0L) 
#line 596 
                               __warned_1 = (_Bool)1; else ;
    }
    else ;
    
#line 596 
    tmp_4 = (long)(__ret_warn_once_1 != 0);
  }
  
#line 596 
  if ((long)tmp_4 != 0L) 
#line 597 
                         priv->num_stations = 0; else ;
  
#line 599 
  ldv_spin_unlock_bh_91(& priv->sta_lock);
  return_label: 
#line 600 
                return;
}


#line 602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static void iwl_sta_fill_lq(struct iwl_priv *priv, struct iwl_rxon_context *ctx, u8 sta_id, struct iwl_link_quality_cmd *link_cmd)
{
  int i;
  int r;
  __le32 rate_n_flags;
  u8 tmp_1;
  u8 tmp_2_0;
  
#line 606 
  u32 rate_flags = 0U;
  {
    int tmp_0;
    
#line 609 
    if (debug_locks != 0) {
      int tmp;
      
#line 609 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 609 
      if (tmp == 0) 
#line 609 
                    tmp_0 = 1; else 
#line 609 
                                    tmp_0 = 0;
    }
    else 
#line 609 
         tmp_0 = 0;
    
#line 609 
    int __ret_warn_on = tmp_0;
    
#line 609 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 609 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",609); else ;
    
#line 609 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 611 
  memset((void *)link_cmd,0,88UL);
  
#line 615 
  if (priv->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 616 
                                                       r = 4;
  else 
    
#line 617 
    if ((ctx != (struct iwl_rxon_context *)0 && ctx->vif != (struct ieee80211_vif *)0) && (int)(ctx->vif)->p2p != 0) 
      
#line 618 
      r = 4; else 
#line 620 
                  r = 0;
  
#line 622 
  if ((unsigned int)r <= 3U) 
#line 623 
                             rate_flags |= 512U; else ;
  
#line 625 
  tmp_1 = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
  
#line 626 
  rate_flags = (unsigned int)((int)tmp_1 << 14) | rate_flags;
  
#line 627 
  rate_n_flags = iwl_hw_set_rate_n_flags((unsigned char)((int)iwl_rates[r].plcp),rate_flags);
  
#line 628 
  i = 0;
  
#line 628 
  goto ldv_53430;
  ldv_53429: 
#line 629 
  ;
  
#line 629 
  link_cmd->rs_table[i].rate_n_flags = rate_n_flags;
  
#line 628 
  i += 1;
  ldv_53430: 
#line 629 
  ;
  
#line 628 
  if (i <= 15) 
#line 630 
               goto ldv_53429; else 
#line 633 
                                    goto ldv_53431;
  ldv_53431: 
#line 634 
  ;
  
#line 631 
  link_cmd->general_params.single_stream_ant_msk = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
  
#line 635 
  tmp_2_0 = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
  
#line 634 
  link_cmd->general_params.dual_stream_ant_msk = (unsigned char)((int)(priv->nvm_data)->valid_tx_ant & ~ ((int)tmp_2_0));
  
#line 637 
  if ((unsigned int)link_cmd->general_params.dual_stream_ant_msk == 0U) 
    
#line 638 
    link_cmd->general_params.dual_stream_ant_msk = (unsigned char)3U;
  else {
    u8 tmp_3;
    
#line 639 
    tmp_3 = num_of_ant((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
    
#line 639 
    if ((unsigned int)tmp_3 == 2U) 
#line 640 
                                   link_cmd->general_params.dual_stream_ant_msk = (priv->nvm_data)->valid_tx_ant; else ;
  }
  
#line 644 
  link_cmd->agg_params.agg_dis_start_th = (unsigned char)3U;
  
#line 646 
  link_cmd->agg_params.agg_time_limit = (unsigned short)4000U;
  
#line 649 
  link_cmd->sta_id = sta_id;
  
#line 650 
  return;
}


#line 666 
void __compiletime_assert_666(void);


#line 683 
void __compiletime_assert_684(void);


#line 660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
void iwl_clear_ucode_stations(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int i;
  
#line 664 
  bool cleared = (_Bool)0;
  {
    
#line 666 
    bool __cond = (_Bool)((int)*("Clearing ucode stations in driver\n" + 33UL) != 10);
    
#line 666 
    if ((int)__cond != 0) 
#line 666 
                          __compiletime_assert_666(); else ;
  }
  
#line 666 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_clear_ucode_stations","Clearing ucode stations in driver\n");
  
#line 668 
  ldv_spin_lock_bh_92(& priv->sta_lock);
  
#line 669 
  i = 0;
  
#line 669 
  goto ldv_53449;
  ldv_53448: 
#line 670 
  ;
  
#line 670 
  if (ctx != (struct iwl_rxon_context *)0 && (unsigned int)ctx->ctxid != (unsigned int)priv->stations[i].ctxid) 
    
#line 671 
    goto ldv_53443; else ;
  
#line 673 
  if (((unsigned long)priv->stations[i].used & 2UL) != 0UL) {
    {
      
#line 674 
      bool __cond_0 = (_Bool)((int)*("Clearing ucode active for station %d\n" + 36UL) != 10);
      
#line 674 
      if ((int)__cond_0 != 0) 
#line 674 
                              __compiletime_assert_675(); else ;
    }
    
#line 674 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_clear_ucode_stations","Clearing ucode active for station %d\n",i);
    
#line 676 
    priv->stations[i].used = (unsigned char)((unsigned int)priv->stations[i].used & 253U);
    
#line 677 
    cleared = (_Bool)1;
  }
  else ;
  ldv_53443: 
#line 679 
  ;
  
#line 669 
  i += 1;
  ldv_53449: 
#line 670 
  ;
  
#line 669 
  if (i <= 15) 
#line 671 
               goto ldv_53448; else 
#line 674 
                                    goto ldv_53450;
  ldv_53450: 
#line 675 
  ;
  
#line 680 
  ldv_spin_unlock_bh_93(& priv->sta_lock);
  
#line 682 
  if (! cleared) {
    {
      
#line 683 
      bool __cond_1 = (_Bool)((int)*("No active stations found to be cleared\n" + 38UL) != 10);
      
#line 683 
      if ((int)__cond_1 != 0) 
#line 683 
                              __compiletime_assert_684(); else ;
    }
    
#line 683 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_clear_ucode_stations","No active stations found to be cleared\n");
  }
  else ;
  
#line 685 
  return;
}


#line 706 
void __compiletime_assert_707(void);


#line 718 
void __compiletime_assert_719(void);


#line 745 
void __compiletime_assert_746(void);


#line 769 
void __compiletime_assert_770(void);


#line 695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
void iwl_restore_stations(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  struct iwl_addsta_cmd sta_cmd;
  struct iwl_link_quality_cmd lq;
  int i;
  int ret;
  bool send_lq;
  int tmp;
  
#line 698 
  struct iwl_link_quality_cmd const zero_lq = {.sta_id = (unsigned char)0, .reserved1 = (unsigned char)0, .control = (unsigned short)0, .general_params = {.flags = (unsigned char)0, .mimo_delimiter = (unsigned char)0, .single_stream_ant_msk = (unsigned char)0, .dual_stream_ant_msk = (unsigned char)0, .start_rate_index = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}}, .agg_params = {.agg_time_limit = (unsigned short)0, .agg_dis_start_th = (unsigned char)0, .agg_frame_cnt_limit = (unsigned char)0, .reserved = 0U}, .rs_table = {{.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}, {.rate_n_flags = 0U}}, .reserved2 = 0U};
  
#line 701 
  bool found = (_Bool)0;
  
#line 705 
  tmp = iwl_is_ready(priv);
  
#line 705 
  if (tmp == 0) {
    {
      
#line 706 
      bool __cond = (_Bool)((int)*("Not ready yet, not restoring any stations.\n" + 42UL) != 10);
      
#line 706 
      if ((int)__cond != 0) 
#line 706 
                            __compiletime_assert_707(); else ;
    }
    
#line 706 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_restore_stations","Not ready yet, not restoring any stations.\n");
    
#line 708 
    goto return_label;
  }
  else ;
  {
    
#line 711 
    bool __cond_0 = (_Bool)((int)*("Restoring all known stations ... start.\n" + 39UL) != 10);
    
#line 711 
    if ((int)__cond_0 != 0) 
#line 711 
                            __compiletime_assert_711(); else ;
  }
  
#line 711 
  __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_restore_stations","Restoring all known stations ... start.\n");
  
#line 712 
  ldv_spin_lock_bh_94(& priv->sta_lock);
  
#line 713 
  i = 0;
  
#line 713 
  goto ldv_53481;
  ldv_53480: 
#line 714 
  ;
  
#line 714 
  if ((unsigned int)ctx->ctxid != (unsigned int)priv->stations[i].ctxid) 
    
#line 715 
    goto ldv_53475; else ;
  
#line 716 
  if (((unsigned long)priv->stations[i].used & 1UL) != 0UL && ((unsigned long)priv->stations[i].used & 2UL) == 0UL) {
    {
      
#line 718 
      bool __cond_1 = (_Bool)((int)*("Restoring sta %pM\n" + 17UL) != 10);
      
#line 718 
      if ((int)__cond_1 != 0) 
#line 718 
                              __compiletime_assert_719(); else ;
    }
    
#line 718 
    __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_restore_stations","Restoring sta %pM\n",(u8 *)(& priv->stations[i].sta.sta.addr));
    
#line 720 
    priv->stations[i].sta.mode = (unsigned char)0U;
    
#line 721 
    priv->stations[i].used = (unsigned char)((unsigned int)priv->stations[i].used | 4U);
    
#line 722 
    found = (_Bool)1;
  }
  else ;
  ldv_53475: 
#line 724 
  ;
  
#line 713 
  i += 1;
  ldv_53481: 
#line 714 
  ;
  
#line 713 
  if (i <= 15) 
#line 715 
               goto ldv_53480; else 
#line 718 
                                    goto ldv_53482;
  ldv_53482: 
#line 719 
  ;
  
#line 726 
  i = 0;
  
#line 726 
  goto ldv_53489;
  ldv_53488: 
#line 727 
  ;
  
#line 727 
  if (((unsigned long)priv->stations[i].used & 4UL) != 0UL) {
    
#line 728 
    memcpy((void *)(& sta_cmd),(void const *)(& priv->stations[i].sta),92UL);
    
#line 730 
    send_lq = (_Bool)0;
    
#line 731 
    if (priv->stations[i].lq != (struct iwl_link_quality_cmd *)0) {
      int tmp_0;
      
#line 732 
      if ((int)priv->wowlan != 0) 
#line 733 
                                  iwl_sta_fill_lq(priv,ctx,(unsigned char)((int)((unsigned char)i)),& lq); else 
                                                                    
#line 735 
                                                                    memcpy((void *)(& lq),(void const *)priv->stations[i].lq,88UL);
      
#line 738 
      tmp_0 = memcmp((void const *)(& lq),(void const *)(& zero_lq),88UL);
      
#line 738 
      if (tmp_0 != 0) 
#line 739 
                      send_lq = (_Bool)1; else ;
    }
    else ;
    
#line 741 
    ldv_spin_unlock_bh_95(& priv->sta_lock);
    
#line 742 
    ret = iwl_send_add_sta(priv,& sta_cmd,(unsigned char)0);
    
#line 743 
    if (ret != 0) {
      
#line 744 
      ldv_spin_lock_bh_96(& priv->sta_lock);
      {
        
#line 745 
        bool __cond_2 = (_Bool)((int)*("Adding station %pM failed.\n" + 26UL) != 10);
        
#line 745 
        if ((int)__cond_2 != 0) 
#line 745 
                                __compiletime_assert_746(); else ;
      }
      
#line 745 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Adding station %pM failed.\n",(u8 *)(& priv->stations[i].sta.sta.addr));
      
#line 747 
      priv->stations[i].used = (unsigned char)((unsigned int)priv->stations[i].used & 254U);
      
#line 749 
      priv->stations[i].used = (unsigned char)((unsigned int)priv->stations[i].used & 251U);
      
#line 751 
      goto ldv_53487;
    }
    else ;
    
#line 757 
    if ((int)send_lq != 0) 
#line 758 
                           iwl_send_lq_cmd(priv,ctx,& lq,(unsigned char)0,(_Bool)1); else ;
    
#line 759 
    ldv_spin_lock_bh_97(& priv->sta_lock);
    
#line 760 
    priv->stations[i].used = (unsigned char)((unsigned int)priv->stations[i].used & 251U);
  }
  else ;
  ldv_53487: 
#line 762 
  ;
  
#line 726 
  i += 1;
  ldv_53489: 
#line 727 
  ;
  
#line 726 
  if (i <= 15) 
#line 728 
               goto ldv_53488; else 
#line 731 
                                    goto ldv_53490;
  ldv_53490: 
#line 732 
  ;
  
#line 764 
  ldv_spin_unlock_bh_98(& priv->sta_lock);
  
#line 765 
  if (! found) {
    {
      
#line 766 
      bool __cond_3 = (_Bool)((int)*("Restoring all known stations .... " + 61UL) != 10);
      
#line 766 
      if ((int)__cond_3 != 0) 
#line 766 
                              __compiletime_assert_767(); else ;
    }
    
#line 766 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_restore_stations","Restoring all known stations .... ");
  }
  else {
    {
      
#line 769 
      bool __cond_4 = (_Bool)((int)*("Restoring all known stations .... " + 43UL) != 10);
      
#line 769 
      if ((int)__cond_4 != 0) 
#line 769 
                              __compiletime_assert_770(); else ;
    }
    
#line 769 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_restore_stations","Restoring all known stations .... ");
  }
  return_label: 
#line 771 
                return;
}


#line 773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_get_free_ucode_key_offset(struct iwl_priv *priv)
{
  int __retres;
  int i;
  int tmp;
  
#line 777 
  i = 0;
  
#line 777 
  goto ldv_53504;
  ldv_53503: 
#line 778 
  ;
  
#line 778 
  tmp = test_and_set_bit((long)i,(unsigned long volatile *)(& priv->ucode_key_table));
  
#line 778 
  if (tmp == 0) {
    
#line 779 
    __retres = i;
    
#line 779 
    goto return_label;
  }
  else ;
  
#line 777 
  i += 1;
  ldv_53504: 
#line 778 
  ;
  
#line 777 
  if ((int)priv->sta_key_max_num > i) 
#line 779 
                                      goto ldv_53503; else 
#line 782 
                                                           goto ldv_53505;
  ldv_53505: 
#line 783 
  ;
  
#line 781 
  __retres = 255;
  return_label: 
#line 781 
                return __retres;
}


#line 784  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
void iwl_dealloc_bcast_stations(struct iwl_priv *priv)
{
  int i;
  int tmp;
  
#line 788 
  ldv_spin_lock_bh_99(& priv->sta_lock);
  
#line 789 
  i = 0;
  
#line 789 
  goto ldv_53514;
  ldv_53513: 
#line 790 
  ;
  
#line 790 
  if (((unsigned long)priv->stations[i].used & 16UL) == 0UL) 
#line 791 
                                                             goto ldv_53510; else ;
  
#line 793 
  priv->stations[i].used = (unsigned char)((unsigned int)priv->stations[i].used & 253U);
  
#line 794 
  priv->num_stations -= 1;
  {
    
#line 795 
    int __ret_warn_on = priv->num_stations < 0;
    
#line 795 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 795 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",795); else ;
    
#line 795 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 795 
  if ((long)tmp != 0L) 
#line 796 
                       priv->num_stations = 0; else ;
  
#line 797 
  kfree((void const *)priv->stations[i].lq);
  
#line 798 
  priv->stations[i].lq = (struct iwl_link_quality_cmd *)0;
  ldv_53510: 
#line 799 
  ;
  
#line 789 
  i += 1;
  ldv_53514: 
#line 790 
  ;
  
#line 789 
  if (i <= 15) 
#line 791 
               goto ldv_53513; else 
#line 794 
                                    goto ldv_53515;
  ldv_53515: 
#line 795 
  ;
  
#line 800 
  ldv_spin_unlock_bh_100(& priv->sta_lock);
  
#line 801 
  return;
}


#line 808 
void __compiletime_assert_808(void);


#line 809 
void __compiletime_assert_811(void);


#line 814 
void __compiletime_assert_815(void);


#line 804  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static void iwl_dump_lq_cmd(struct iwl_priv *priv, struct iwl_link_quality_cmd *lq)
{
  int i;
  {
    
#line 808 
    bool __cond = (_Bool)((int)*("lq station id 0x%x\n" + 18UL) != 10);
    
#line 808 
    if ((int)__cond != 0) 
#line 808 
                          __compiletime_assert_808(); else ;
  }
  
#line 808 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"iwl_dump_lq_cmd","lq station id 0x%x\n",(int)lq->sta_id);
  {
    
#line 809 
    bool __cond_0 = (_Bool)((int)*("lq ant 0x%X 0x%X\n" + 16UL) != 10);
    
#line 809 
    if ((int)__cond_0 != 0) 
#line 809 
                            __compiletime_assert_811(); else ;
  }
  
#line 809 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"iwl_dump_lq_cmd","lq ant 0x%X 0x%X\n",(int)lq->general_params.single_stream_ant_msk,(int)lq->general_params.dual_stream_ant_msk);
  
#line 813 
  i = 0;
  
#line 813 
  goto ldv_53535;
  ldv_53534: 
#line 814 
  ;
  {
    
#line 814 
    bool __cond_1 = (_Bool)((int)*("lq index %d 0x%X\n" + 16UL) != 10);
    
#line 814 
    if ((int)__cond_1 != 0) 
#line 814 
                            __compiletime_assert_815(); else ;
  }
  
#line 814 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"iwl_dump_lq_cmd","lq index %d 0x%X\n",i,lq->rs_table[i].rate_n_flags);
  
#line 813 
  i += 1;
  ldv_53535: 
#line 814 
  ;
  
#line 813 
  if (i <= 15) 
#line 815 
               goto ldv_53534; else 
#line 818 
                                    goto ldv_53536;
  ldv_53536: 
#line 819 
  ;
  
#line 820 
  return;
}


#line 844 
void __compiletime_assert_845(void);


#line 849 
void __compiletime_assert_851(void);


#line 835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static bool is_lq_table_valid(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct iwl_link_quality_cmd *lq)
{
  bool __retres;
  int i;
  
#line 841 
  if ((int)ctx->ht.enabled != 0) {
    
#line 842 
    __retres = (_Bool)1;
    
#line 842 
    goto return_label;
  }
  else ;
  {
    
#line 844 
    bool __cond = (_Bool)((int)*("Channel %u is not an HT channel\n" + 31UL) != 10);
    
#line 844 
    if ((int)__cond != 0) 
#line 844 
                          __compiletime_assert_845(); else ;
  }
  
#line 844 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"is_lq_table_valid","Channel %u is not an HT channel\n",(int)ctx->active.channel);
  
#line 846 
  i = 0;
  
#line 846 
  goto ldv_53553;
  ldv_53552: 
#line 847 
  ;
  
#line 847 
  if ((lq->rs_table[i].rate_n_flags & 256U) != 0U) {
    {
      
#line 849 
      bool __cond_0 = (_Bool)((int)*("index %d of LQ expects HT channel\n" + 33UL) != 10);
      
#line 849 
      if ((int)__cond_0 != 0) 
#line 849 
                              __compiletime_assert_851(); else ;
    }
    
#line 849 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"is_lq_table_valid","index %d of LQ expects HT channel\n",i);
    
#line 852 
    __retres = (_Bool)0;
    
#line 852 
    goto return_label;
  }
  else ;
  
#line 846 
  i += 1;
  ldv_53553: 
#line 847 
  ;
  
#line 846 
  if (i <= 15) 
#line 848 
               goto ldv_53552; else 
#line 851 
                                    goto ldv_53554;
  ldv_53554: 
#line 852 
  ;
  
#line 855 
  __retres = (_Bool)1;
  return_label: 
#line 855 
                return __retres;
}


#line 903 
void __compiletime_assert_905(void);


#line 868  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_send_lq_cmd(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct iwl_link_quality_cmd *lq, u8 flags, bool init)
{
  int __retres;
  int tmp;
  int tmp_0;
  bool tmp_1;
  
#line 871 
  int ret = 0;
  
#line 872 
  struct iwl_host_cmd cmd = {.data = {(void const *)lq}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = (unsigned int)flags, .len = {(unsigned short)88U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)78U};
  {
    
#line 879 
    int __ret_warn_on = (unsigned int)lq->sta_id == 255U;
    
#line 879 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 879 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",879); else ;
    
#line 879 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 879 
  if ((long)tmp != 0L) {
    
#line 880 
    __retres = -22;
    
#line 880 
    goto return_label;
  }
  else ;
  
#line 883 
  ldv_spin_lock_bh_101(& priv->sta_lock);
  
#line 884 
  if (((unsigned long)priv->stations[(int)lq->sta_id].used & 1UL) == 0UL) {
    
#line 885 
    ldv_spin_unlock_bh_102(& priv->sta_lock);
    
#line 886 
    __retres = -22;
    
#line 886 
    goto return_label;
  }
  else ;
  
#line 888 
  ldv_spin_unlock_bh_103(& priv->sta_lock);
  
#line 890 
  iwl_dump_lq_cmd(priv,lq);
  {
    
#line 891 
    int __ret_warn_on_0 = ((int)init != 0 && (cmd.flags & 1U) != 0U) != 0;
    
#line 891 
    if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 891 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",891); else ;
    
#line 891 
    tmp_0 = (long)(__ret_warn_on_0 != 0);
  }
  
#line 891 
  if ((long)tmp_0 != 0L) {
    
#line 892 
    __retres = -22;
    
#line 892 
    goto return_label;
  }
  else ;
  
#line 894 
  tmp_1 = is_lq_table_valid(priv,ctx,lq);
  
#line 894 
  if ((int)tmp_1 != 0) 
#line 895 
                       ret = iwl_dvm_send_cmd(priv,& cmd); else 
#line 897 
                                                                ret = -22;
  
#line 899 
  if ((cmd.flags & 1U) != 0U) {
    
#line 900 
    __retres = ret;
    
#line 900 
    goto return_label;
  }
  else ;
  
#line 902 
  if ((int)init != 0) {
    {
      
#line 903 
      bool __cond = (_Bool)((int)*("init LQ command complete, " + 65UL) != 10);
      
#line 903 
      if ((int)__cond != 0) 
#line 903 
                            __compiletime_assert_905(); else ;
    }
    
#line 903 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_send_lq_cmd","init LQ command complete, ",(int)lq->sta_id);
    
#line 906 
    ldv_spin_lock_bh_104(& priv->sta_lock);
    
#line 907 
    priv->stations[(int)lq->sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)lq->sta_id].used & 251U);
    
#line 908 
    ldv_spin_unlock_bh_105(& priv->sta_lock);
  }
  else ;
  
#line 910 
  __retres = ret;
  return_label: 
#line 910 
                return __retres;
}


#line 915  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static struct iwl_link_quality_cmd *iwl_sta_alloc_lq(struct iwl_priv *priv, struct iwl_rxon_context *ctx, u8 sta_id)
{
  struct iwl_link_quality_cmd *__retres;
  struct iwl_link_quality_cmd *link_cmd;
  
#line 920 
  link_cmd = (struct iwl_link_quality_cmd *)kzalloc_4(88UL,208U);
  
#line 921 
  if (link_cmd == (struct iwl_link_quality_cmd *)0) {
    {
      
#line 922 
      bool __cond = (_Bool)((int)*("Unable to allocate memory for LQ cmd.\n" + 37UL) != 10);
      
#line 922 
      if ((int)__cond != 0) 
#line 922 
                            __compiletime_assert_922(); else ;
    }
    
#line 922 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to allocate memory for LQ cmd.\n");
    
#line 923 
    __retres = (struct iwl_link_quality_cmd *)0;
    
#line 923 
    goto return_label;
  }
  else ;
  
#line 926 
  iwl_sta_fill_lq(priv,ctx,(unsigned char)((int)sta_id),link_cmd);
  
#line 928 
  __retres = link_cmd;
  return_label: 
#line 928 
                return __retres;
}


#line 949 
void __compiletime_assert_949(void);


#line 963 
void __compiletime_assert_965(void);


#line 971 
void __compiletime_assert_971(void);


#line 936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwlagn_add_bssid_station(struct iwl_priv *priv, struct iwl_rxon_context *ctx, u8 const *addr, u8 *sta_id_r)
{
  int __retres;
  int ret;
  u8 sta_id;
  struct iwl_link_quality_cmd *link_cmd;
  
#line 944 
  if (sta_id_r != (u8 *)0U) 
#line 945 
                            *sta_id_r = (unsigned char)255U; else ;
  
#line 947 
  ret = iwl_add_station_common(priv,ctx,addr,(_Bool)0,(struct ieee80211_sta *)0,& sta_id);
  
#line 948 
  if (ret != 0) {
    {
      
#line 949 
      bool __cond = (_Bool)((int)*("Unable to add station %pM\n" + 25UL) != 10);
      
#line 949 
      if ((int)__cond != 0) 
#line 949 
                            __compiletime_assert_949(); else ;
    }
    
#line 949 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to add station %pM\n",addr);
    
#line 950 
    __retres = ret;
    
#line 950 
    goto return_label;
  }
  else ;
  
#line 953 
  if (sta_id_r != (u8 *)0U) 
#line 954 
                            *sta_id_r = sta_id; else ;
  
#line 956 
  ldv_spin_lock_bh_106(& priv->sta_lock);
  
#line 957 
  priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used | 8U);
  
#line 958 
  ldv_spin_unlock_bh_107(& priv->sta_lock);
  
#line 961 
  link_cmd = iwl_sta_alloc_lq(priv,ctx,(unsigned char)((int)sta_id));
  
#line 962 
  if (link_cmd == (struct iwl_link_quality_cmd *)0) {
    {
      
#line 963 
      bool __cond_0 = (_Bool)((int)*("Unable to initialize rate scaling for station %pM.\n" + 50UL) != 10);
      
#line 963 
      if ((int)__cond_0 != 0) 
#line 963 
                              __compiletime_assert_965(); else ;
    }
    
#line 963 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to initialize rate scaling for station %pM.\n",addr);
    
#line 966 
    __retres = -12;
    
#line 966 
    goto return_label;
  }
  else ;
  
#line 969 
  ret = iwl_send_lq_cmd(priv,ctx,link_cmd,(unsigned char)0,(_Bool)1);
  
#line 970 
  if (ret != 0) {
    {
      
#line 971 
      bool __cond_1 = (_Bool)((int)*("Link quality command failed (%d)\n" + 32UL) != 10);
      
#line 971 
      if ((int)__cond_1 != 0) 
#line 971 
                              __compiletime_assert_971(); else ;
    }
    
#line 971 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Link quality command failed (%d)\n",ret);
  }
  else ;
  
#line 973 
  ldv_spin_lock_bh_108(& priv->sta_lock);
  
#line 974 
  priv->stations[(int)sta_id].lq = link_cmd;
  
#line 975 
  ldv_spin_unlock_bh_109(& priv->sta_lock);
  
#line 977 
  __retres = 0;
  return_label: 
#line 977 
                return __retres;
}


#line 988  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static int iwl_send_static_wepkey_cmd(struct iwl_priv *priv, struct iwl_rxon_context *ctx, bool send_if_empty)
{
  int __retres;
  int i;
  u8 buff[100U];
  
#line 992 
  int not_empty = 0;
  
#line 995 
  struct iwl_wep_cmd *wep_cmd = (struct iwl_wep_cmd *)(& buff);
  
#line 996 
  size_t cmd_size = 4UL;
  
#line 997 
  struct iwl_host_cmd cmd = {.data = {(void const *)wep_cmd}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)0, (unsigned short)0}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = ctx->wep_key_cmd};
  
#line 1002 
  __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1002,0);
  
#line 1004 
  memset((void *)wep_cmd,0,cmd_size + 96UL);
  
#line 1007 
  i = 0;
  
#line 1007 
  goto ldv_53616;
  ldv_53615: 
#line 1008 
  ;
  
#line 1008 
  wep_cmd->key[i].key_index = (unsigned char)i;
  
#line 1009 
  if ((unsigned int)ctx->wep_keys[i].key_size != 0U) {
    
#line 1010 
    wep_cmd->key[i].key_offset = (unsigned char)i;
    
#line 1011 
    not_empty = 1;
  }
  else 
#line 1013 
       wep_cmd->key[i].key_offset = (unsigned char)255U;
  
#line 1016 
  wep_cmd->key[i].key_size = ctx->wep_keys[i].key_size;
  
#line 1017 
  memcpy((void *)(& wep_cmd->key[i].key[3]),(void const *)(& ctx->wep_keys[i].key),(unsigned long)ctx->wep_keys[i].key_size);
  
#line 1007 
  i += 1;
  ldv_53616: 
#line 1008 
  ;
  
#line 1007 
  if (i <= 3) 
#line 1009 
              goto ldv_53615; else 
#line 1012 
                                   goto ldv_53617;
  ldv_53617: 
#line 1013 
  ;
  
#line 1021 
  wep_cmd->global_key_type = (unsigned char)1U;
  
#line 1022 
  wep_cmd->num_keys = (unsigned char)4U;
  
#line 1024 
  cmd_size += 96UL;
  
#line 1026 
  cmd.len[0] = (unsigned short)cmd_size;
  
#line 1028 
  if (not_empty != 0 || (int)send_if_empty != 0) {
    int tmp;
    
#line 1029 
    tmp = iwl_dvm_send_cmd(priv,& cmd);
    
#line 1029 
    __retres = tmp;
    
#line 1029 
    goto return_label;
  }
  else {
    
#line 1031 
    __retres = 0;
    
#line 1031 
    goto return_label;
  }
  return_label: 
#line 1028 
                return __retres;
}


#line 1034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_restore_default_wep_keys(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int tmp_1;
  {
    int tmp_0;
    
#line 1037 
    if (debug_locks != 0) {
      int tmp;
      
#line 1037 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 1037 
      if (tmp == 0) 
#line 1037 
                    tmp_0 = 1; else 
#line 1037 
                                    tmp_0 = 0;
    }
    else 
#line 1037 
         tmp_0 = 0;
    
#line 1037 
    int __ret_warn_on = tmp_0;
    
#line 1037 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1037 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1037); else ;
    
#line 1037 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1039 
  tmp_1 = iwl_send_static_wepkey_cmd(priv,ctx,(_Bool)0);
  
#line 1039 
  return tmp_1;
}


#line 1050 
void __compiletime_assert_1051(void);


#line 1055 
void __compiletime_assert_1056(void);


#line 1061 
void __compiletime_assert_1062(void);


#line 1042  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_remove_default_wep_key(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_key_conf *keyconf)
{
  int __retres;
  int ret;
  int tmp_1;
  {
    int tmp_0;
    
#line 1048 
    if (debug_locks != 0) {
      int tmp;
      
#line 1048 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 1048 
      if (tmp == 0) 
#line 1048 
                    tmp_0 = 1; else 
#line 1048 
                                    tmp_0 = 0;
    }
    else 
#line 1048 
         tmp_0 = 0;
    
#line 1048 
    int __ret_warn_on = tmp_0;
    
#line 1048 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1048 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1048); else ;
    
#line 1048 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  {
    
#line 1050 
    bool __cond = (_Bool)((int)*("Removing default WEP key: idx=%d\n" + 32UL) != 10);
    
#line 1050 
    if ((int)__cond != 0) 
#line 1050 
                          __compiletime_assert_1051(); else ;
  }
  
#line 1050 
  __iwl_dbg(priv->dev,4194304U,(_Bool)0,"iwl_remove_default_wep_key","Removing default WEP key: idx=%d\n",(int)keyconf->keyidx);
  
#line 1053 
  memset((void *)(& ctx->wep_keys[(int)keyconf->keyidx]),0,24UL);
  
#line 1054 
  tmp_1 = iwl_is_rfkill(priv);
  
#line 1054 
  if (tmp_1 != 0) {
    {
      
#line 1055 
      bool __cond_0 = (_Bool)((int)*("Not sending REPLY_WEPKEY command due to RFKILL.\n" + 47UL) != 10);
      
#line 1055 
      if ((int)__cond_0 != 0) 
#line 1055 
                              __compiletime_assert_1056(); else ;
    }
    
#line 1055 
    __iwl_dbg(priv->dev,4194304U,(_Bool)0,"iwl_remove_default_wep_key","Not sending REPLY_WEPKEY command due to RFKILL.\n");
    
#line 1058 
    __retres = 0;
    
#line 1058 
    goto return_label;
  }
  else ;
  
#line 1060 
  ret = iwl_send_static_wepkey_cmd(priv,ctx,(_Bool)1);
  {
    
#line 1061 
    bool __cond_1 = (_Bool)((int)*("Remove default WEP key: idx=%d ret=%d\n" + 37UL) != 10);
    
#line 1061 
    if ((int)__cond_1 != 0) 
#line 1061 
                            __compiletime_assert_1062(); else ;
  }
  
#line 1061 
  __iwl_dbg(priv->dev,4194304U,(_Bool)0,"iwl_remove_default_wep_key","Remove default WEP key: idx=%d ret=%d\n",(int)keyconf->keyidx,ret);
  
#line 1064 
  __retres = ret;
  return_label: 
#line 1064 
                return __retres;
}


#line 1077 
void __compiletime_assert_1078(void);


#line 1089 
void __compiletime_assert_1090(void);


#line 1067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_set_default_wep_key(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_key_conf *keyconf)
{
  int __retres;
  int ret;
  {
    int tmp_0;
    
#line 1073 
    if (debug_locks != 0) {
      int tmp;
      
#line 1073 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 1073 
      if (tmp == 0) 
#line 1073 
                    tmp_0 = 1; else 
#line 1073 
                                    tmp_0 = 0;
    }
    else 
#line 1073 
         tmp_0 = 0;
    
#line 1073 
    int __ret_warn_on = tmp_0;
    
#line 1073 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1073 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1073); else ;
    
#line 1073 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1075 
  if ((unsigned int)keyconf->keylen != 13U && (unsigned int)keyconf->keylen != 5U) {
    {
      
#line 1077 
      bool __cond = (_Bool)((int)*("Bad WEP key length %d\n" + 21UL) != 10);
      
#line 1077 
      if ((int)__cond != 0) 
#line 1077 
                            __compiletime_assert_1078(); else ;
    }
    
#line 1077 
    __iwl_dbg(priv->dev,4194304U,(_Bool)0,"iwl_set_default_wep_key","Bad WEP key length %d\n",(int)keyconf->keylen);
    
#line 1079 
    __retres = -22;
    
#line 1079 
    goto return_label;
  }
  else ;
  
#line 1082 
  keyconf->hw_key_idx = (unsigned char)254U;
  
#line 1084 
  ctx->wep_keys[(int)keyconf->keyidx].key_size = keyconf->keylen;
  
#line 1085 
  memcpy((void *)(& ctx->wep_keys[(int)keyconf->keyidx].key),(void const *)(& keyconf->key),(unsigned long)keyconf->keylen);
  
#line 1088 
  ret = iwl_send_static_wepkey_cmd(priv,ctx,(_Bool)0);
  {
    
#line 1089 
    bool __cond_0 = (_Bool)((int)*("Set default WEP key: len=%d idx=%d ret=%d\n" + 41UL) != 10);
    
#line 1089 
    if ((int)__cond_0 != 0) 
#line 1089 
                            __compiletime_assert_1090(); else ;
  }
  
#line 1089 
  __iwl_dbg(priv->dev,4194304U,(_Bool)0,"iwl_set_default_wep_key","Set default WEP key: len=%d idx=%d ret=%d\n",(int)keyconf->keylen,(int)keyconf->keyidx,ret);
  
#line 1092 
  __retres = ret;
  return_label: 
#line 1092 
                return __retres;
}


#line 1110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static u8 iwlagn_key_sta_id(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  u8 __retres;
  
#line 1114 
  struct iwl_vif_priv *vif_priv = (struct iwl_vif_priv *)(& vif->drv_priv);
  
#line 1116 
  if (sta != (struct ieee80211_sta *)0) {
    int tmp;
    
#line 1117 
    tmp = iwl_sta_id(sta);
    
#line 1117 
    __retres = (unsigned char)tmp;
    
#line 1117 
    goto return_label;
  }
  else ;
  
#line 1124 
  if (vif->type == (unsigned int)NL80211_IFTYPE_STATION && vif_priv->ctx != (struct iwl_rxon_context *)0) {
    
#line 1125 
    __retres = (vif_priv->ctx)->ap_sta_id;
    
#line 1125 
    goto return_label;
  }
  else ;
  
#line 1127 
  __retres = (unsigned char)255U;
  return_label: 
#line 1127 
                return __retres;
}


#line 1130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
static int iwlagn_send_sta_key(struct iwl_priv *priv, struct ieee80211_key_conf *keyconf, u8 sta_id, u32 tkip_iv32, u16 *tkip_p1k, u32 cmd_flags)
{
  int __retres;
  __le16 key_flags;
  struct iwl_addsta_cmd sta_cmd;
  int i;
  int tmp_0;
  
#line 1139 
  ldv_spin_lock_bh_110(& priv->sta_lock);
  
#line 1140 
  memcpy((void *)(& sta_cmd),(void const *)(& priv->stations[(int)sta_id].sta),92UL);
  
#line 1141 
  ldv_spin_unlock_bh_111(& priv->sta_lock);
  
#line 1143 
  key_flags = (unsigned short)((int)((unsigned short)keyconf->keyidx) << 8U);
  
#line 1144 
  key_flags = (unsigned short)((unsigned int)key_flags | 8U);
  
#line 1146 
  switch (keyconf->cipher) {
    case (u32)1027076: 
#line 1147 
    ;
    
#line 1148 
    key_flags = (unsigned short)((unsigned int)key_flags | 2U);
    
#line 1149 
    memcpy((void *)(& sta_cmd.key.key),(void const *)(& keyconf->key),(unsigned long)keyconf->keylen);
    
#line 1150 
    goto ldv_53680;
    case (u32)1027074: 
#line 1151 
    ;
    
#line 1152 
    key_flags = (unsigned short)((unsigned int)key_flags | 3U);
    
#line 1153 
    sta_cmd.key.tkip_rx_tsc_byte2 = (unsigned char)tkip_iv32;
    
#line 1154 
    i = 0;
    
#line 1154 
    goto ldv_53683;
    ldv_53682: 
#line 1155 
    ;
    
#line 1155 
    sta_cmd.key.tkip_rx_ttak[i] = *(tkip_p1k + i);
    
#line 1154 
    i += 1;
    ldv_53683: 
#line 1155 
    ;
    
#line 1154 
    if (i <= 4) 
#line 1156 
                goto ldv_53682; else 
#line 1159 
                                     goto ldv_53684;
    ldv_53684: 
#line 1160 
    ;
    
#line 1156 
    memcpy((void *)(& sta_cmd.key.key),(void const *)(& keyconf->key),(unsigned long)keyconf->keylen);
    
#line 1157 
    goto ldv_53680;
    case (u32)1027077: 
#line 1158 
    ;
    
#line 1159 
    key_flags = (unsigned short)((unsigned int)key_flags | 4096U);
    case (u32)1027073: 
#line 1161 
    ;
    
#line 1162 
    key_flags = (unsigned short)((unsigned int)key_flags | 1U);
    
#line 1163 
    memcpy((void *)(& sta_cmd.key.key[3]),(void const *)(& keyconf->key),(unsigned long)keyconf->keylen);
    
#line 1164 
    goto ldv_53680;
    default: 
#line 1165 
    ;
    {
      
#line 1166 
      int __ret_warn_on = 1;
      
#line 1166 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 1166 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1166); else ;
      
#line 1166 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 1167 
    __retres = -22;
    
#line 1167 
    goto return_label;
  }
  ldv_53680: 
#line 1170 
  ;
  
#line 1170 
  if (((int)keyconf->flags & 8) == 0) 
#line 1171 
                                      key_flags = (unsigned short)((unsigned int)key_flags | 16384U); else ;
  
#line 1174 
  sta_cmd.key.key_offset = keyconf->hw_key_idx;
  
#line 1176 
  sta_cmd.key.key_flags = key_flags;
  
#line 1177 
  sta_cmd.mode = (unsigned char)1U;
  
#line 1178 
  sta_cmd.sta.modify_mask = (unsigned char)1U;
  
#line 1180 
  tmp_0 = iwl_send_add_sta(priv,& sta_cmd,(unsigned char)((int)((unsigned char)cmd_flags)));
  
#line 1180 
  __retres = tmp_0;
  return_label: 
#line 1180 
                return __retres;
}


#line 1183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
void iwl_update_tkip_key(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_key_conf *keyconf, struct ieee80211_sta *sta, u32 iv32, u16 *phase1key)
{
  int tmp_0;
  
#line 1188 
  u8 sta_id = iwlagn_key_sta_id(priv,vif,sta);
  
#line 1190 
  if ((unsigned int)sta_id == 255U) 
#line 1191 
                                    goto return_label; else ;
  
#line 1193 
  tmp_0 = iwl_scan_cancel(priv);
  
#line 1193 
  if (tmp_0 != 0) 
#line 1196 
                  goto return_label; else ;
  
#line 1199 
  iwlagn_send_sta_key(priv,keyconf,(unsigned char)((int)sta_id),iv32,phase1key,1U);
  return_label: 
#line 1200 
                return;
}


#line 1229 
void __compiletime_assert_1230(void);


#line 1233 
void __compiletime_assert_1234(void);


#line 1203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_remove_dynamic_key(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_key_conf *keyconf, struct ieee80211_sta *sta)
{
  int __retres;
  struct iwl_addsta_cmd sta_cmd;
  __le16 key_flags;
  int tmp_2_0;
  int tmp_3;
  
#line 1209 
  u8 sta_id = iwlagn_key_sta_id(priv,ctx->vif,sta);
  
#line 1213 
  if ((unsigned int)sta_id == 255U) {
    
#line 1214 
    __retres = -2;
    
#line 1214 
    goto return_label;
  }
  else ;
  
#line 1216 
  ldv_spin_lock_bh_112(& priv->sta_lock);
  
#line 1217 
  memcpy((void *)(& sta_cmd),(void const *)(& priv->stations[(int)sta_id].sta),92UL);
  
#line 1218 
  if (((unsigned long)priv->stations[(int)sta_id].used & 2UL) == 0UL) 
    
#line 1219 
    sta_id = (unsigned char)255U; else ;
  
#line 1220 
  ldv_spin_unlock_bh_113(& priv->sta_lock);
  
#line 1222 
  if ((unsigned int)sta_id == 255U) {
    
#line 1223 
    __retres = 0;
    
#line 1223 
    goto return_label;
  }
  else ;
  {
    int tmp_1;
    
#line 1225 
    if (debug_locks != 0) {
      int tmp_0;
      
#line 1225 
      tmp_0 = lock_is_held(& priv->mutex.dep_map);
      
#line 1225 
      if (tmp_0 == 0) 
#line 1225 
                      tmp_1 = 1; else 
#line 1225 
                                      tmp_1 = 0;
    }
    else 
#line 1225 
         tmp_1 = 0;
    
#line 1225 
    int __ret_warn_on = tmp_1;
    
#line 1225 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1225 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1225); else ;
    
#line 1225 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1227 
  ctx->key_mapping_keys = (u8)((int)ctx->key_mapping_keys - 1);
  {
    
#line 1229 
    bool __cond = (_Bool)((int)*("Remove dynamic key: idx=%d sta=%d\n" + 33UL) != 10);
    
#line 1229 
    if ((int)__cond != 0) 
#line 1229 
                          __compiletime_assert_1230(); else ;
  }
  
#line 1229 
  __iwl_dbg(priv->dev,4194304U,(_Bool)0,"iwl_remove_dynamic_key","Remove dynamic key: idx=%d sta=%d\n",(int)keyconf->keyidx,(int)sta_id);
  
#line 1232 
  tmp_2_0 = test_and_set_bit((long)keyconf->hw_key_idx,(unsigned long volatile *)(& priv->ucode_key_table));
  
#line 1232 
  if (tmp_2_0 == 0) {
    {
      
#line 1233 
      bool __cond_0 = (_Bool)((int)*("offset %d not used in uCode key table.\n" + 38UL) != 10);
      
#line 1233 
      if ((int)__cond_0 != 0) 
#line 1233 
                              __compiletime_assert_1234(); else ;
    }
    
#line 1233 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"offset %d not used in uCode key table.\n",(int)keyconf->hw_key_idx);
  }
  else ;
  
#line 1236 
  key_flags = (unsigned short)((int)((unsigned short)keyconf->keyidx) << 8U);
  
#line 1237 
  key_flags = (unsigned short)((unsigned int)key_flags | 2056U);
  
#line 1240 
  if (((int)keyconf->flags & 8) == 0) 
#line 1241 
                                      key_flags = (unsigned short)((unsigned int)key_flags | 16384U); else ;
  
#line 1243 
  sta_cmd.key.key_flags = key_flags;
  
#line 1244 
  sta_cmd.key.key_offset = keyconf->hw_key_idx;
  
#line 1245 
  sta_cmd.sta.modify_mask = (unsigned char)1U;
  
#line 1246 
  sta_cmd.mode = (unsigned char)1U;
  
#line 1248 
  tmp_3 = iwl_send_add_sta(priv,& sta_cmd,(unsigned char)0);
  
#line 1248 
  __retres = tmp_3;
  return_label: 
#line 1248 
                return __retres;
}


#line 1302 
void __compiletime_assert_1304(void);


#line 1251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_set_dynamic_key(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_key_conf *keyconf, struct ieee80211_sta *sta)
{
  int __retres;
  struct ieee80211_key_seq seq;
  u16 p1k[5U];
  int ret;
  u8 const *addr;
  int tmp_2_0;
  u8 *tmp_3;
  
#line 1259 
  u8 sta_id = iwlagn_key_sta_id(priv,ctx->vif,sta);
  
#line 1262 
  if ((unsigned int)sta_id == 255U) {
    
#line 1263 
    __retres = -22;
    
#line 1263 
    goto return_label;
  }
  else ;
  {
    int tmp_1;
    
#line 1265 
    if (debug_locks != 0) {
      int tmp_0;
      
#line 1265 
      tmp_0 = lock_is_held(& priv->mutex.dep_map);
      
#line 1265 
      if (tmp_0 == 0) 
#line 1265 
                      tmp_1 = 1; else 
#line 1265 
                                      tmp_1 = 0;
    }
    else 
#line 1265 
         tmp_1 = 0;
    
#line 1265 
    int __ret_warn_on = tmp_1;
    
#line 1265 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1265 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1265); else ;
    
#line 1265 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1267 
  tmp_2_0 = iwl_get_free_ucode_key_offset(priv);
  
#line 1267 
  keyconf->hw_key_idx = (unsigned char)tmp_2_0;
  
#line 1268 
  if ((unsigned int)keyconf->hw_key_idx == 255U) {
    
#line 1269 
    __retres = -28;
    
#line 1269 
    goto return_label;
  }
  else ;
  
#line 1271 
  ctx->key_mapping_keys = (u8)((int)ctx->key_mapping_keys + 1);
  
#line 1273 
  switch (keyconf->cipher) {
    case (u32)1027074: 
#line 1274 
    ;
    
#line 1275 
    if (sta != (struct ieee80211_sta *)0) 
#line 1276 
                                          addr = (u8 const *)(& sta->addr); else 
                                                                    
#line 1278 
                                                                    addr = (u8 const *)(& ctx->active.bssid_addr);
    
#line 1281 
    ieee80211_get_key_rx_seq(keyconf,0,& seq);
    
#line 1282 
    ieee80211_get_tkip_rx_p1k(keyconf,addr,seq.__anonCompField_ieee80211_key_seq_100.tkip.iv32,(u16 *)(& p1k));
    
#line 1283 
    ret = iwlagn_send_sta_key(priv,keyconf,(unsigned char)((int)sta_id),seq.__anonCompField_ieee80211_key_seq_100.tkip.iv32,(u16 *)(& p1k),0U);
    
#line 1285 
    goto ldv_53733;
    case (u32)1027076: 
#line 1286 
    ;
    case (u32)1027073: 
#line 1287 
    ;
    case (u32)1027077: 
#line 1288 
    ;
    
#line 1289 
    ret = iwlagn_send_sta_key(priv,keyconf,(unsigned char)((int)sta_id),0U,(u16 *)0U,0U);
    
#line 1291 
    goto ldv_53733;
    default: 
#line 1292 
    ;
    {
      
#line 1293 
      bool __cond = (_Bool)((int)*("Unknown cipher %x\n" + 17UL) != 10);
      
#line 1293 
      if ((int)__cond != 0) 
#line 1293 
                            __compiletime_assert_1293(); else ;
    }
    
#line 1293 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unknown cipher %x\n",keyconf->cipher);
    
#line 1294 
    ret = -22;
  }
  ldv_53733: 
#line 1297 
  ;
  
#line 1297 
  if (ret != 0) {
    
#line 1298 
    ctx->key_mapping_keys = (u8)((int)ctx->key_mapping_keys - 1);
    
#line 1299 
    set_bit((long)keyconf->hw_key_idx,(unsigned long volatile *)(& priv->ucode_key_table));
  }
  else ;
  {
    
#line 1302 
    bool __cond_0 = (_Bool)((int)*("Set dynamic key: cipher=%x len=%d idx=%d sta=%pM ret=%d\n" + 55UL) != 10);
    
#line 1302 
    if ((int)__cond_0 != 0) 
#line 1302 
                            __compiletime_assert_1304(); else ;
  }
  
#line 1302 
  ;
  
#line 1302 
  if (sta != (struct ieee80211_sta *)0) 
#line 1302 
                                        tmp_3 = (u8 *)(& sta->addr); else 
                                                                    
#line 1302 
                                                                    tmp_3 = (u8 *)0U;
  
#line 1302 
  ;
  
#line 1302 
  ;
  
#line 1302 
  ;
  
#line 1302 
  ;
  
#line 1302 
  __iwl_dbg(priv->dev,4194304U,(_Bool)0,"iwl_set_dynamic_key","Set dynamic key: cipher=%x len=%d idx=%d sta=%pM ret=%d\n",keyconf->cipher,(int)keyconf->keylen,(int)keyconf->keyidx,tmp_3,ret);
  
#line 1306 
  __retres = ret;
  return_label: 
#line 1306 
                return __retres;
}


#line 1325 
void __compiletime_assert_1325(void);


#line 1337 
void __compiletime_assert_1338(void);


#line 1316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwlagn_alloc_bcast_station(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int __retres;
  struct iwl_link_quality_cmd *link_cmd;
  u8 sta_id;
  
#line 1322 
  ldv_spin_lock_bh_114(& priv->sta_lock);
  
#line 1323 
  sta_id = iwl_prep_station(priv,ctx,(u8 const *)(& iwl_bcast_addr),(_Bool)0,(struct ieee80211_sta *)0);
  
#line 1324 
  if ((unsigned int)sta_id == 255U) {
    {
      
#line 1325 
      bool __cond = (_Bool)((int)*("Unable to prepare broadcast station\n" + 35UL) != 10);
      
#line 1325 
      if ((int)__cond != 0) 
#line 1325 
                            __compiletime_assert_1325(); else ;
    }
    
#line 1325 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to prepare broadcast station\n");
    
#line 1326 
    ldv_spin_unlock_bh_115(& priv->sta_lock);
    
#line 1328 
    __retres = -22;
    
#line 1328 
    goto return_label;
  }
  else ;
  
#line 1331 
  priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used | 1U);
  
#line 1332 
  priv->stations[(int)sta_id].used = (unsigned char)((unsigned int)priv->stations[(int)sta_id].used | 16U);
  
#line 1333 
  ldv_spin_unlock_bh_116(& priv->sta_lock);
  
#line 1335 
  link_cmd = iwl_sta_alloc_lq(priv,ctx,(unsigned char)((int)sta_id));
  
#line 1336 
  if (link_cmd == (struct iwl_link_quality_cmd *)0) {
    {
      
#line 1337 
      bool __cond_0 = (_Bool)((int)*("Unable to initialize rate scaling for bcast station.\n" + 52UL) != 10);
      
#line 1337 
      if ((int)__cond_0 != 0) 
#line 1337 
                              __compiletime_assert_1338(); else ;
    }
    
#line 1337 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to initialize rate scaling for bcast station.\n");
    
#line 1339 
    __retres = -12;
    
#line 1339 
    goto return_label;
  }
  else ;
  
#line 1342 
  ldv_spin_lock_bh_117(& priv->sta_lock);
  
#line 1343 
  priv->stations[(int)sta_id].lq = link_cmd;
  
#line 1344 
  ldv_spin_unlock_bh_118(& priv->sta_lock);
  
#line 1346 
  __retres = 0;
  return_label: 
#line 1346 
                return __retres;
}


#line 1371 
void __compiletime_assert_1371(void);


#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_update_bcast_station(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int __retres;
  struct iwl_link_quality_cmd *link_cmd;
  
#line 1359 
  u8 sta_id = ctx->bcast_sta_id;
  
#line 1361 
  link_cmd = iwl_sta_alloc_lq(priv,ctx,(unsigned char)((int)sta_id));
  
#line 1362 
  if (link_cmd == (struct iwl_link_quality_cmd *)0) {
    {
      
#line 1363 
      bool __cond = (_Bool)((int)*("Unable to initialize rate scaling for bcast station.\n" + 52UL) != 10);
      
#line 1363 
      if ((int)__cond != 0) 
#line 1363 
                            __compiletime_assert_1363(); else ;
    }
    
#line 1363 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unable to initialize rate scaling for bcast station.\n");
    
#line 1364 
    __retres = -12;
    
#line 1364 
    goto return_label;
  }
  else ;
  
#line 1367 
  ldv_spin_lock_bh_119(& priv->sta_lock);
  
#line 1368 
  if (priv->stations[(int)sta_id].lq != (struct iwl_link_quality_cmd *)0) 
    
#line 1369 
    kfree((void const *)priv->stations[(int)sta_id].lq);
  else {
    {
      
#line 1371 
      bool __cond_0 = (_Bool)((int)*("Bcast station rate scaling has not been initialized yet.\n" + 56UL) != 10);
      
#line 1371 
      if ((int)__cond_0 != 0) 
#line 1371 
                              __compiletime_assert_1371(); else ;
    }
    
#line 1371 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_update_bcast_station","Bcast station rate scaling has not been initialized yet.\n");
  }
  
#line 1372 
  priv->stations[(int)sta_id].lq = link_cmd;
  
#line 1373 
  ldv_spin_unlock_bh_120(& priv->sta_lock);
  
#line 1375 
  __retres = 0;
  return_label: 
#line 1375 
                return __retres;
}


#line 1378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_update_bcast_stations(struct iwl_priv *priv)
{
  struct iwl_rxon_context *ctx;
  
#line 1381 
  int ret = 0;
  
#line 1383 
  ctx = & priv->contexts[0];
  
#line 1383 
  goto ldv_53783;
  ldv_53782: 
#line 1384 
  ;
  
#line 1383 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    
#line 1384 
    ret = iwl_update_bcast_station(priv,ctx);
    
#line 1385 
    if (ret != 0) 
#line 1386 
                  goto ldv_53781; else ;
  }
  else ;
  
#line 1383 
  ctx += 1;
  ldv_53783: 
#line 1384 
  ;
  
#line 1383 
  if (& priv->contexts[2] > ctx) 
#line 1385 
                                 goto ldv_53782; else 
#line 1388 
                                                      goto ldv_53781;
  ldv_53781: 
#line 1389 
  ;
  
#line 1389 
  return ret;
}


#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_sta_tx_modify_enable_tid(struct iwl_priv *priv, int sta_id, int tid)
{
  struct iwl_addsta_cmd sta_cmd;
  int tmp_1;
  {
    int tmp_0;
    
#line 1399 
    if (debug_locks != 0) {
      int tmp;
      
#line 1399 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 1399 
      if (tmp == 0) 
#line 1399 
                    tmp_0 = 1; else 
#line 1399 
                                    tmp_0 = 0;
    }
    else 
#line 1399 
         tmp_0 = 0;
    
#line 1399 
    int __ret_warn_on = tmp_0;
    
#line 1399 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1399 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1399); else ;
    
#line 1399 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1402 
  ldv_spin_lock_bh_121(& priv->sta_lock);
  
#line 1403 
  priv->stations[sta_id].sta.sta.modify_mask = (unsigned char)2U;
  
#line 1404 
  priv->stations[sta_id].sta.tid_disable_tx = (unsigned short)((int)priv->stations[sta_id].sta.tid_disable_tx & ~ ((int)((unsigned short)(1 << tid))));
  
#line 1405 
  priv->stations[sta_id].sta.mode = (unsigned char)1U;
  
#line 1406 
  memcpy((void *)(& sta_cmd),(void const *)(& priv->stations[sta_id].sta),92UL);
  
#line 1407 
  ldv_spin_unlock_bh_122(& priv->sta_lock);
  
#line 1409 
  tmp_1 = iwl_send_add_sta(priv,& sta_cmd,(unsigned char)0);
  
#line 1409 
  return tmp_1;
}


#line 1412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_sta_rx_agg_start(struct iwl_priv *priv, struct ieee80211_sta *sta, int tid, u16 ssn)
{
  int __retres;
  int sta_id;
  struct iwl_addsta_cmd sta_cmd;
  int tmp_1;
  {
    int tmp_0;
    
#line 1418 
    if (debug_locks != 0) {
      int tmp;
      
#line 1418 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 1418 
      if (tmp == 0) 
#line 1418 
                    tmp_0 = 1; else 
#line 1418 
                                    tmp_0 = 0;
    }
    else 
#line 1418 
         tmp_0 = 0;
    
#line 1418 
    int __ret_warn_on = tmp_0;
    
#line 1418 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1418 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1418); else ;
    
#line 1418 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1420 
  sta_id = iwl_sta_id(sta);
  
#line 1421 
  if (sta_id == 255) {
    
#line 1422 
    __retres = -6;
    
#line 1422 
    goto return_label;
  }
  else ;
  
#line 1424 
  ldv_spin_lock_bh_123(& priv->sta_lock);
  
#line 1425 
  priv->stations[sta_id].sta.station_flags_msk = 0U;
  
#line 1426 
  priv->stations[sta_id].sta.sta.modify_mask = (unsigned char)8U;
  
#line 1427 
  priv->stations[sta_id].sta.add_immediate_ba_tid = (unsigned char)tid;
  
#line 1428 
  priv->stations[sta_id].sta.add_immediate_ba_ssn = ssn;
  
#line 1429 
  priv->stations[sta_id].sta.mode = (unsigned char)1U;
  
#line 1430 
  memcpy((void *)(& sta_cmd),(void const *)(& priv->stations[sta_id].sta),92UL);
  
#line 1431 
  ldv_spin_unlock_bh_124(& priv->sta_lock);
  
#line 1433 
  tmp_1 = iwl_send_add_sta(priv,& sta_cmd,(unsigned char)0);
  
#line 1433 
  __retres = tmp_1;
  return_label: 
#line 1433 
                return __retres;
}


#line 1446 
void __compiletime_assert_1446(void);


#line 1436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
int iwl_sta_rx_agg_stop(struct iwl_priv *priv, struct ieee80211_sta *sta, int tid)
{
  int __retres;
  int sta_id;
  struct iwl_addsta_cmd sta_cmd;
  int tmp_1;
  {
    int tmp_0;
    
#line 1442 
    if (debug_locks != 0) {
      int tmp;
      
#line 1442 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 1442 
      if (tmp == 0) 
#line 1442 
                    tmp_0 = 1; else 
#line 1442 
                                    tmp_0 = 0;
    }
    else 
#line 1442 
         tmp_0 = 0;
    
#line 1442 
    int __ret_warn_on = tmp_0;
    
#line 1442 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1442 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c",1442); else ;
    
#line 1442 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1444 
  sta_id = iwl_sta_id(sta);
  
#line 1445 
  if (sta_id == 255) {
    {
      
#line 1446 
      bool __cond = (_Bool)((int)*("Invalid station for AGG tid %d\n" + 30UL) != 10);
      
#line 1446 
      if ((int)__cond != 0) 
#line 1446 
                            __compiletime_assert_1446(); else ;
    }
    
#line 1446 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid station for AGG tid %d\n",tid);
    
#line 1447 
    __retres = -6;
    
#line 1447 
    goto return_label;
  }
  else ;
  
#line 1450 
  ldv_spin_lock_bh_125(& priv->sta_lock);
  
#line 1451 
  priv->stations[sta_id].sta.station_flags_msk = 0U;
  
#line 1452 
  priv->stations[sta_id].sta.sta.modify_mask = (unsigned char)16U;
  
#line 1453 
  priv->stations[sta_id].sta.remove_immediate_ba_tid = (unsigned char)tid;
  
#line 1454 
  priv->stations[sta_id].sta.mode = (unsigned char)1U;
  
#line 1455 
  memcpy((void *)(& sta_cmd),(void const *)(& priv->stations[sta_id].sta),92UL);
  
#line 1456 
  ldv_spin_unlock_bh_126(& priv->sta_lock);
  
#line 1458 
  tmp_1 = iwl_send_add_sta(priv,& sta_cmd,(unsigned char)0);
  
#line 1458 
  __retres = tmp_1;
  return_label: 
#line 1458 
                return __retres;
}


#line 1463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/sta.c"
void iwl_sta_modify_sleep_tx_count(struct iwl_priv *priv, int sta_id, int cnt)
{
  
#line 1465 
  struct iwl_addsta_cmd cmd = {.mode = (unsigned char)1U, .reserved = {(unsigned char)0, (unsigned char)0, (unsigned char)0}, .sta = {.addr = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .reserved1 = (unsigned short)0, .sta_id = (unsigned char)sta_id, .modify_mask = (unsigned char)32U, .reserved2 = (unsigned short)0}, .key = {.key_flags = (unsigned short)0, .tkip_rx_tsc_byte2 = (unsigned char)0, .reserved1 = (unsigned char)0, .tkip_rx_ttak = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}, .key_offset = (unsigned char)0, .reserved2 = (unsigned char)0, .key = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .tx_secur_seq_cnt = 0ULL, .hw_tkip_mic_rx_key = 0ULL, .hw_tkip_mic_tx_key = 0ULL}, .station_flags = 256U, .station_flags_msk = 256U, .tid_disable_tx = (unsigned short)0, .legacy_reserved = (unsigned short)0, .add_immediate_ba_tid = (unsigned char)0, .remove_immediate_ba_tid = (unsigned char)0, .add_immediate_ba_ssn = (unsigned short)0, .sleep_tx_count = (unsigned short)cnt, .reserved2 = (unsigned short)0};
  
#line 1474 
  iwl_send_add_sta(priv,& cmd,(unsigned char)1);
  
#line 1475 
  return;
}


#line 435  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void *kzalloc_4(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 438 
  tmp = ldv_kzalloc(size,flags);
  
#line 438 
  return tmp;
}


#line 752  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_74(spinlock_t *lock)
{
  
#line 756 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 758 
  spin_lock_bh_2(lock);
  
#line 759 
  return;
}


#line 762  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_75(spinlock_t *lock)
{
  
#line 766 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 768 
  spin_unlock_bh_2(lock);
  
#line 769 
  return;
}


#line 772  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_76_0(spinlock_t *lock)
{
  
#line 776 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 778 
  spin_lock_bh_2(lock);
  
#line 779 
  return;
}


#line 782  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_77_0(spinlock_t *lock)
{
  
#line 786 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 788 
  spin_unlock_bh_2(lock);
  
#line 789 
  return;
}


#line 792  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_78_0(spinlock_t *lock)
{
  
#line 796 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 798 
  spin_lock_bh_2(lock);
  
#line 799 
  return;
}


#line 802  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_79_0(spinlock_t *lock)
{
  
#line 806 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 808 
  spin_unlock_bh_2(lock);
  
#line 809 
  return;
}


#line 812  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_80(spinlock_t *lock)
{
  
#line 816 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 818 
  spin_unlock_bh_2(lock);
  
#line 819 
  return;
}


#line 822  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_81_0(spinlock_t *lock)
{
  
#line 826 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 828 
  spin_unlock_bh_2(lock);
  
#line 829 
  return;
}


#line 832  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_82(spinlock_t *lock)
{
  
#line 836 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 838 
  spin_unlock_bh_2(lock);
  
#line 839 
  return;
}


#line 842  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_83(spinlock_t *lock)
{
  
#line 846 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 848 
  spin_lock_bh_2(lock);
  
#line 849 
  return;
}


#line 852  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_84(spinlock_t *lock)
{
  
#line 856 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 858 
  spin_unlock_bh_2(lock);
  
#line 859 
  return;
}


#line 862  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_85(spinlock_t *lock)
{
  
#line 866 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 868 
  spin_lock_bh_2(lock);
  
#line 869 
  return;
}


#line 872  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_86(spinlock_t *lock)
{
  
#line 876 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 878 
  spin_unlock_bh_2(lock);
  
#line 879 
  return;
}


#line 882  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_87(spinlock_t *lock)
{
  
#line 886 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 888 
  spin_lock_bh_2(lock);
  
#line 889 
  return;
}


#line 892  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_88(spinlock_t *lock)
{
  
#line 896 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 898 
  spin_unlock_bh_2(lock);
  
#line 899 
  return;
}


#line 902  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_89(spinlock_t *lock)
{
  
#line 906 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 908 
  spin_unlock_bh_2(lock);
  
#line 909 
  return;
}


#line 912  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_90(spinlock_t *lock)
{
  
#line 916 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 918 
  spin_lock_bh_2(lock);
  
#line 919 
  return;
}


#line 922  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_91(spinlock_t *lock)
{
  
#line 926 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 928 
  spin_unlock_bh_2(lock);
  
#line 929 
  return;
}


#line 932  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_92(spinlock_t *lock)
{
  
#line 936 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 938 
  spin_lock_bh_2(lock);
  
#line 939 
  return;
}


#line 942  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_93(spinlock_t *lock)
{
  
#line 946 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 948 
  spin_unlock_bh_2(lock);
  
#line 949 
  return;
}


#line 952  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_94(spinlock_t *lock)
{
  
#line 956 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 958 
  spin_lock_bh_2(lock);
  
#line 959 
  return;
}


#line 962  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_95(spinlock_t *lock)
{
  
#line 966 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 968 
  spin_unlock_bh_2(lock);
  
#line 969 
  return;
}


#line 972  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_96(spinlock_t *lock)
{
  
#line 976 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 978 
  spin_lock_bh_2(lock);
  
#line 979 
  return;
}


#line 982  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_97(spinlock_t *lock)
{
  
#line 986 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 988 
  spin_lock_bh_2(lock);
  
#line 989 
  return;
}


#line 992  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_98(spinlock_t *lock)
{
  
#line 996 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 998 
  spin_unlock_bh_2(lock);
  
#line 999 
  return;
}


#line 1002  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_99(spinlock_t *lock)
{
  
#line 1006 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1008 
  spin_lock_bh_2(lock);
  
#line 1009 
  return;
}


#line 1012  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_100(spinlock_t *lock)
{
  
#line 1016 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1018 
  spin_unlock_bh_2(lock);
  
#line 1019 
  return;
}


#line 1022  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_101(spinlock_t *lock)
{
  
#line 1026 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1028 
  spin_lock_bh_2(lock);
  
#line 1029 
  return;
}


#line 1032  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_102(spinlock_t *lock)
{
  
#line 1036 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1038 
  spin_unlock_bh_2(lock);
  
#line 1039 
  return;
}


#line 1042  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_103(spinlock_t *lock)
{
  
#line 1046 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1048 
  spin_unlock_bh_2(lock);
  
#line 1049 
  return;
}


#line 1052  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_104(spinlock_t *lock)
{
  
#line 1056 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1058 
  spin_lock_bh_2(lock);
  
#line 1059 
  return;
}


#line 1062  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_105(spinlock_t *lock)
{
  
#line 1066 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1068 
  spin_unlock_bh_2(lock);
  
#line 1069 
  return;
}


#line 1072  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_106(spinlock_t *lock)
{
  
#line 1076 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1078 
  spin_lock_bh_2(lock);
  
#line 1079 
  return;
}


#line 1082  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_107(spinlock_t *lock)
{
  
#line 1086 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1088 
  spin_unlock_bh_2(lock);
  
#line 1089 
  return;
}


#line 1092  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_108(spinlock_t *lock)
{
  
#line 1096 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1098 
  spin_lock_bh_2(lock);
  
#line 1099 
  return;
}


#line 1102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_109(spinlock_t *lock)
{
  
#line 1106 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1108 
  spin_unlock_bh_2(lock);
  
#line 1109 
  return;
}


#line 1112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_110(spinlock_t *lock)
{
  
#line 1116 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1118 
  spin_lock_bh_2(lock);
  
#line 1119 
  return;
}


#line 1122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_111(spinlock_t *lock)
{
  
#line 1126 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1128 
  spin_unlock_bh_2(lock);
  
#line 1129 
  return;
}


#line 1132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_112(spinlock_t *lock)
{
  
#line 1136 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1138 
  spin_lock_bh_2(lock);
  
#line 1139 
  return;
}


#line 1142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_113(spinlock_t *lock)
{
  
#line 1146 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1148 
  spin_unlock_bh_2(lock);
  
#line 1149 
  return;
}


#line 1152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_114(spinlock_t *lock)
{
  
#line 1156 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1158 
  spin_lock_bh_2(lock);
  
#line 1159 
  return;
}


#line 1162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_115(spinlock_t *lock)
{
  
#line 1166 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1168 
  spin_unlock_bh_2(lock);
  
#line 1169 
  return;
}


#line 1172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_116(spinlock_t *lock)
{
  
#line 1176 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1178 
  spin_unlock_bh_2(lock);
  
#line 1179 
  return;
}


#line 1182  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_117(spinlock_t *lock)
{
  
#line 1186 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1188 
  spin_lock_bh_2(lock);
  
#line 1189 
  return;
}


#line 1192  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_118(spinlock_t *lock)
{
  
#line 1196 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1198 
  spin_unlock_bh_2(lock);
  
#line 1199 
  return;
}


#line 1202  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_119(spinlock_t *lock)
{
  
#line 1206 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1208 
  spin_lock_bh_2(lock);
  
#line 1209 
  return;
}


#line 1212  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_120(spinlock_t *lock)
{
  
#line 1216 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1218 
  spin_unlock_bh_2(lock);
  
#line 1219 
  return;
}


#line 1222  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_121(spinlock_t *lock)
{
  
#line 1226 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1228 
  spin_lock_bh_2(lock);
  
#line 1229 
  return;
}


#line 1232  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_122(spinlock_t *lock)
{
  
#line 1236 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1238 
  spin_unlock_bh_2(lock);
  
#line 1239 
  return;
}


#line 1242  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_123(spinlock_t *lock)
{
  
#line 1246 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1248 
  spin_lock_bh_2(lock);
  
#line 1249 
  return;
}


#line 1252  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_124(spinlock_t *lock)
{
  
#line 1256 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1258 
  spin_unlock_bh_2(lock);
  
#line 1259 
  return;
}


#line 1262  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_lock_bh_125(spinlock_t *lock)
{
  
#line 1266 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 1268 
  spin_lock_bh_2(lock);
  
#line 1269 
  return;
}


#line 1272  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_sta.c.aux"
static void ldv_spin_unlock_bh_126(spinlock_t *lock)
{
  
#line 1276 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 1278 
  spin_unlock_bh_2(lock);
  
#line 1279 
  return;
}


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 113 
void list_del(struct list_head *);


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_replace(struct list_head *old, struct list_head *new)
{
  
#line 126 
  new->next = old->next;
  
#line 127 
  (new->next)->prev = new;
  
#line 128 
  new->prev = old->prev;
  
#line 129 
  (new->prev)->next = new;
  
#line 130 
  return;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_3(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_74_0(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_77(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_3(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_75_0(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_76(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_78(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_79_1(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_80_0(spinlock_t *lock);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_5(size_t size, gfp_t flags);


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
__inline static int iwl_is_any_associated_2(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_rxon_context *ctx;
  
#line 942 
  ctx = & priv->contexts[0];
  
#line 942 
  goto ldv_52314;
  ldv_52313: 
#line 943 
  ;
  
#line 942 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    int tmp;
    
#line 943 
    tmp = iwl_is_associated_ctx(ctx);
    
#line 943 
    if (tmp != 0) {
      
#line 944 
      __retres = 1;
      
#line 944 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 942 
  ctx += 1;
  ldv_52314: 
#line 943 
  ;
  
#line 942 
  if (& priv->contexts[2] > ctx) 
#line 944 
                                 goto ldv_52313; else 
#line 947 
                                                      goto ldv_52315;
  ldv_52315: 
#line 948 
  ;
  
#line 945 
  __retres = 0;
  return_label: 
#line 945 
                return __retres;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
int iwl_send_calib_results(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_calib_result *res;
  struct iwl_calib_result *tmp;
  struct iwl_calib_result *tmp_0;
  
#line 95 
  struct iwl_host_cmd hcmd = {.data = {(void const *)0, (void const *)0}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 0U, .len = {(unsigned short)0, (unsigned short)0}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)176U};
  {
    
#line 100 
    struct list_head const *__mptr = (struct list_head const *)priv->calib_results.next;
    
#line 100 
    tmp = (struct iwl_calib_result *)__mptr;
  }
  
#line 100 
  res = tmp;
  
#line 100 
  goto ldv_52751;
  ldv_52750: 
#line 101 
  ;
  {
    int ret;
    
#line 103 
    hcmd.len[0] = (unsigned short)res->cmd_len;
    
#line 104 
    hcmd.data[0] = (void const *)(& res->hdr);
    
#line 105 
    hcmd.dataflags[0] = (unsigned char)1U;
    
#line 106 
    ret = iwl_dvm_send_cmd(priv,& hcmd);
    
#line 107 
    if (ret != 0) {
      {
        
#line 108 
        bool __cond = (_Bool)((int)*("Error %d on calib cmd %d\n" + 24UL) != 10);
        
#line 108 
        if ((int)__cond != 0) 
#line 108 
                              __compiletime_assert_109(); else ;
      }
      
#line 108 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error %d on calib cmd %d\n",ret,(int)res->hdr.op_code);
      
#line 110 
      __retres = ret;
      
#line 110 
      goto return_label;
    }
    else ;
  }
  {
    
#line 100 
    struct list_head const *__mptr_0 = (struct list_head const *)res->list.next;
    
#line 100 
    tmp_0 = (struct iwl_calib_result *)__mptr_0;
  }
  
#line 100 
  res = tmp_0;
  ldv_52751: 
#line 102 
  ;
  
#line 100 
  if (& res->list != & priv->calib_results) 
#line 102 
                                            goto ldv_52750; else 
#line 105 
                                                                 goto ldv_52752;
  ldv_52752: 
#line 106 
  ;
  
#line 114 
  __retres = 0;
  return_label: 
#line 114 
                return __retres;
}


#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
int iwl_calib_set(struct iwl_priv *priv, struct iwl_calib_hdr const *cmd, int len)
{
  int __retres;
  struct iwl_calib_result *res;
  struct iwl_calib_result *tmp;
  struct iwl_calib_result *tmp_1;
  struct iwl_calib_result *tmp_2;
  
#line 122 
  res = (struct iwl_calib_result *)kmalloc_5((unsigned long)len + 28UL,32U);
  
#line 124 
  if (res == (struct iwl_calib_result *)0) {
    
#line 125 
    __retres = -12;
    
#line 125 
    goto return_label;
  }
  else ;
  
#line 126 
  memcpy((void *)(& res->hdr),(void const *)cmd,(unsigned long)len);
  
#line 127 
  res->cmd_len = (unsigned long)len;
  {
    
#line 129 
    struct list_head const *__mptr = (struct list_head const *)priv->calib_results.next;
    
#line 129 
    tmp_1 = (struct iwl_calib_result *)__mptr;
  }
  
#line 129 
  tmp = tmp_1;
  
#line 129 
  goto ldv_52765;
  ldv_52764: 
#line 130 
  ;
  
#line 130 
  if ((int)tmp->hdr.op_code == (int)res->hdr.op_code) {
    
#line 131 
    list_replace(& tmp->list,& res->list);
    
#line 132 
    kfree((void const *)tmp);
    
#line 133 
    __retres = 0;
    
#line 133 
    goto return_label;
  }
  else ;
  {
    
#line 129 
    struct list_head const *__mptr_0 = (struct list_head const *)tmp->list.next;
    
#line 129 
    tmp_2 = (struct iwl_calib_result *)__mptr_0;
  }
  
#line 129 
  tmp = tmp_2;
  ldv_52765: 
#line 131 
  ;
  
#line 129 
  if (& tmp->list != & priv->calib_results) 
#line 131 
                                            goto ldv_52764; else 
#line 134 
                                                                 goto ldv_52766;
  ldv_52766: 
#line 135 
  ;
  
#line 138 
  list_add_tail(& res->list,& priv->calib_results);
  
#line 140 
  __retres = 0;
  return_label: 
#line 140 
                return __retres;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
void iwl_calib_free_results(struct iwl_priv *priv)
{
  struct iwl_calib_result *res;
  struct iwl_calib_result *tmp;
  struct iwl_calib_result *tmp_0;
  struct iwl_calib_result *tmp_1;
  struct iwl_calib_result *tmp_2;
  {
    
#line 147 
    struct list_head const *__mptr = (struct list_head const *)priv->calib_results.next;
    
#line 147 
    tmp_0 = (struct iwl_calib_result *)__mptr;
  }
  
#line 147 
  res = tmp_0;
  {
    
#line 147 
    struct list_head const *__mptr_0 = (struct list_head const *)res->list.next;
    
#line 147 
    tmp_1 = (struct iwl_calib_result *)__mptr_0;
  }
  
#line 148 
  tmp = tmp_1;
  
#line 147 
  goto ldv_52779;
  ldv_52778: 
#line 148 
  ;
  
#line 148 
  list_del(& res->list);
  
#line 149 
  kfree((void const *)res);
  
#line 147 
  res = tmp;
  {
    
#line 147 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp->list.next;
    
#line 147 
    tmp_2 = (struct iwl_calib_result *)__mptr_1;
  }
  
#line 147 
  tmp = tmp_2;
  ldv_52779: 
#line 149 
  ;
  
#line 147 
  if (& res->list != & priv->calib_results) 
#line 149 
                                            goto ldv_52778; else 
#line 152 
                                                                 goto ldv_52780;
  ldv_52780: 
#line 153 
  ;
  
#line 154 
  return;
}


#line 246 
void __compiletime_assert_248(void);


#line 256 
void __compiletime_assert_257(void);


#line 262 
void __compiletime_assert_263(void);


#line 264 
void __compiletime_assert_264(void);


#line 281 
void __compiletime_assert_283(void);


#line 295 
void __compiletime_assert_295(void);


#line 300 
void __compiletime_assert_300(void);


#line 305 
void __compiletime_assert_305(void);


#line 315 
void __compiletime_assert_315(void);


#line 329 
void __compiletime_assert_329(void);


#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
static int iwl_sens_energy_cck(struct iwl_priv *priv, u32 norm_fa, u32 rx_enable_time, struct statistics_general_data *rx_info)
{
  int __retres;
  u32 val;
  int tmp_0;
  int tmp_2;
  u32 tmp_4;
  u32 tmp_6;
  u32 tmp_8;
  u32 tmp_10;
  u32 tmp_14;
  
#line 170 
  u32 max_nrg_cck = 0U;
  
#line 171 
  int i = 0;
  
#line 172 
  u8 max_silence_rssi = (unsigned char)0U;
  
#line 173 
  u32 silence_ref = 0U;
  
#line 174 
  u8 silence_rssi_a = (unsigned char)0U;
  
#line 175 
  u8 silence_rssi_b = (unsigned char)0U;
  
#line 176 
  u8 silence_rssi_c = (unsigned char)0U;
  
#line 188 
  u32 false_alarms = norm_fa * 204800U;
  
#line 189 
  u32 max_false_alarms = rx_enable_time * 50U;
  
#line 190 
  u32 min_false_alarms = rx_enable_time * 5U;
  
#line 191 
  struct iwl_sensitivity_data *data = (struct iwl_sensitivity_data *)0;
  
#line 192 
  struct iwl_sensitivity_ranges const *ranges = priv->hw_params.sens;
  
#line 194 
  data = & priv->sensitivity_data;
  
#line 196 
  data->nrg_auto_corr_silence_diff = 0;
  
#line 201 
  silence_rssi_a = (unsigned char)(rx_info->beacon_silence_rssi_a >> 8);
  
#line 203 
  silence_rssi_b = (unsigned char)(rx_info->beacon_silence_rssi_b >> 8);
  
#line 205 
  silence_rssi_c = (unsigned char)(rx_info->beacon_silence_rssi_c >> 8);
  {
    int tmp;
    
#line 208 
    u8 _max1 = silence_rssi_b;
    
#line 208 
    u8 _max2 = silence_rssi_c;
    
#line 208 
    if ((int)_max1 > (int)_max2) 
#line 208 
                                 tmp = (int)_max1; else 
#line 208 
                                                        tmp = (int)_max2;
    
#line 208 
    tmp_0 = tmp;
  }
  
#line 208 
  val = (unsigned int)tmp_0;
  {
    int tmp_1;
    
#line 209 
    u8 _max1_0 = silence_rssi_a;
    
#line 209 
    unsigned char _max2_0 = (unsigned char)val;
    
#line 209 
    if ((int)_max1_0 > (int)_max2_0) 
#line 209 
                                     tmp_1 = (int)_max1_0; else 
#line 209 
                                                                tmp_1 = (int)_max2_0;
    
#line 209 
    tmp_2 = tmp_1;
  }
  
#line 209 
  max_silence_rssi = (unsigned char)tmp_2;
  
#line 212 
  data->nrg_silence_rssi[data->nrg_silence_idx] = max_silence_rssi;
  
#line 213 
  data->nrg_silence_idx += 1U;
  
#line 214 
  if (data->nrg_silence_idx > 19U) 
#line 215 
                                   data->nrg_silence_idx = 0U; else ;
  
#line 218 
  i = 0;
  
#line 218 
  goto ldv_52810;
  ldv_52809: 
#line 219 
  ;
  
#line 219 
  val = (unsigned int)data->nrg_silence_rssi[i];
  {
    u32 tmp_3;
    
#line 220 
    u32 _max1_1 = silence_ref;
    
#line 220 
    u32 _max2_1 = val;
    
#line 220 
    if (_max1_1 > _max2_1) 
#line 220 
                           tmp_3 = _max1_1; else 
#line 220 
                                                 tmp_3 = _max2_1;
    
#line 220 
    tmp_4 = tmp_3;
  }
  
#line 220 
  silence_ref = tmp_4;
  
#line 218 
  i += 1;
  ldv_52810: 
#line 219 
  ;
  
#line 218 
  if (i <= 19) 
#line 220 
               goto ldv_52809; else 
#line 223 
                                    goto ldv_52811;
  ldv_52811: 
#line 224 
  ;
  {
    
#line 222 
    bool __cond = (_Bool)((int)*("silence a %u, b %u, c %u, 20-bcn max %u\n" + 39UL) != 10);
    
#line 222 
    if ((int)__cond != 0) 
#line 222 
                          __compiletime_assert_224(); else ;
  }
  
#line 222 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","silence a %u, b %u, c %u, 20-bcn max %u\n",(int)silence_rssi_a,(int)silence_rssi_b,(int)silence_rssi_c,silence_ref);
  
#line 229 
  i = (int)data->nrg_energy_idx;
  {
    u32 tmp_5;
    
#line 230 
    u32 _min1 = rx_info->beacon_energy_b;
    
#line 230 
    u32 _min2 = rx_info->beacon_energy_c;
    
#line 230 
    if (_min1 < _min2) 
#line 230 
                       tmp_5 = _min1; else 
#line 230 
                                           tmp_5 = _min2;
    
#line 230 
    tmp_6 = tmp_5;
  }
  
#line 230 
  val = tmp_6;
  {
    u32 tmp_7;
    
#line 231 
    u32 _min1_0 = rx_info->beacon_energy_a;
    
#line 231 
    u32 _min2_0 = val;
    
#line 231 
    if (_min1_0 < _min2_0) 
#line 231 
                           tmp_7 = _min1_0; else 
#line 231 
                                                 tmp_7 = _min2_0;
    
#line 231 
    tmp_8 = tmp_7;
  }
  
#line 231 
  data->nrg_value[i] = tmp_8;
  
#line 233 
  data->nrg_energy_idx += 1U;
  
#line 234 
  if (data->nrg_energy_idx > 9U) 
#line 235 
                                 data->nrg_energy_idx = 0U; else ;
  
#line 241 
  max_nrg_cck = data->nrg_value[0];
  
#line 242 
  i = 1;
  
#line 242 
  goto ldv_52827;
  ldv_52826: 
#line 243 
  ;
  {
    u32 tmp_9;
    
#line 243 
    u32 _max1_2 = max_nrg_cck;
    
#line 243 
    u32 _max2_2 = data->nrg_value[i];
    
#line 243 
    if (_max1_2 > _max2_2) 
#line 243 
                           tmp_9 = _max1_2; else 
#line 243 
                                                 tmp_9 = _max2_2;
    
#line 243 
    tmp_10 = tmp_9;
  }
  
#line 243 
  max_nrg_cck = tmp_10;
  
#line 242 
  i += 1;
  ldv_52827: 
#line 243 
  ;
  
#line 242 
  if (i <= 9) 
#line 244 
              goto ldv_52826; else 
#line 247 
                                   goto ldv_52828;
  ldv_52828: 
#line 248 
  ;
  
#line 244 
  max_nrg_cck += 6U;
  {
    
#line 246 
    bool __cond_0 = (_Bool)((int)*("rx energy a %u, b %u, c %u, 10-bcn max/min %u\n" + 45UL) != 10);
    
#line 246 
    if ((int)__cond_0 != 0) 
#line 246 
                            __compiletime_assert_248(); else ;
  }
  
#line 246 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","rx energy a %u, b %u, c %u, 10-bcn max/min %u\n",rx_info->beacon_energy_a,rx_info->beacon_energy_b,rx_info->beacon_energy_c,max_nrg_cck + 4294967290U);
  
#line 252 
  if (false_alarms < min_false_alarms) 
#line 253 
                                       data->num_in_cck_no_fa += 1U; else 
                                                                    
#line 255 
                                                                    data->num_in_cck_no_fa = 0U;
  {
    
#line 256 
    bool __cond_1 = (_Bool)((int)*("consecutive bcns with few false alarms = %u\n" + 43UL) != 10);
    
#line 256 
    if ((int)__cond_1 != 0) 
#line 256 
                            __compiletime_assert_257(); else ;
  }
  
#line 256 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","consecutive bcns with few false alarms = %u\n",data->num_in_cck_no_fa);
  
#line 260 
  if (false_alarms > max_false_alarms && data->auto_corr_cck > 160U) {
    {
      
#line 262 
      bool __cond_2 = (_Bool)((int)*("norm FA %u > max FA %u\n" + 22UL) != 10);
      
#line 262 
      if ((int)__cond_2 != 0) 
#line 262 
                              __compiletime_assert_263(); else ;
    }
    
#line 262 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","norm FA %u > max FA %u\n",false_alarms,max_false_alarms);
    {
      
#line 264 
      bool __cond_3 = (_Bool)((int)*("... reducing sensitivity\n" + 24UL) != 10);
      
#line 264 
      if ((int)__cond_3 != 0) 
#line 264 
                              __compiletime_assert_264(); else ;
    }
    
#line 264 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","... reducing sensitivity\n");
    
#line 265 
    data->nrg_curr_state = 0U;
    
#line 267 
    data->nrg_silence_ref = silence_ref;
    
#line 271 
    data->nrg_th_cck += 4294967294U;
  }
  else 
    
#line 273 
    if (false_alarms < min_false_alarms) {
      
#line 274 
      data->nrg_curr_state = 1U;
      
#line 278 
      data->nrg_auto_corr_silence_diff = (int)data->nrg_silence_ref - (int)silence_ref;
      {
        
#line 281 
        bool __cond_4 = (_Bool)((int)*("norm FA %u < min FA %u, silence diff %d\n" + 39UL) != 10);
        
#line 281 
        if ((int)__cond_4 != 0) 
#line 281 
                                __compiletime_assert_283(); else ;
      }
      
#line 281 
      __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","norm FA %u < min FA %u, silence diff %d\n",false_alarms,min_false_alarms,data->nrg_auto_corr_silence_diff);
      
#line 291 
      if (data->nrg_prev_state != 0U && (data->nrg_auto_corr_silence_diff > 2 || data->num_in_cck_no_fa > 100U)) {
        unsigned int tmp_12;
        {
          
#line 295 
          bool __cond_5 = (_Bool)((int)*("... increasing sensitivity\n" + 26UL) != 10);
          
#line 295 
          if ((int)__cond_5 != 0) 
#line 295 
                                  __compiletime_assert_295(); else ;
        }
        
#line 295 
        __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","... increasing sensitivity\n");
        
#line 297 
        val = data->nrg_th_cck + 2U;
        {
          unsigned int tmp_11;
          
#line 298 
          unsigned int _min1_1 = (unsigned int)ranges->min_nrg_cck;
          
#line 298 
          u32 _min2_1 = val;
          
#line 298 
          if (_min1_1 < _min2_1) 
#line 298 
                                 tmp_11 = _min1_1; else 
#line 298 
                                                        tmp_11 = _min2_1;
          
#line 298 
          tmp_12 = tmp_11;
        }
        
#line 298 
        data->nrg_th_cck = tmp_12;
      }
      else {
        {
          
#line 300 
          bool __cond_6 = (_Bool)((int)*("... but not changing sensitivity\n" + 32UL) != 10);
          
#line 300 
          if ((int)__cond_6 != 0) 
#line 300 
                                  __compiletime_assert_300(); else ;
        }
        
#line 300 
        __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","... but not changing sensitivity\n");
      }
    }
    else {
      {
        
#line 305 
        bool __cond_7 = (_Bool)((int)*(" FA in safe zone\n" + 16UL) != 10);
        
#line 305 
        if ((int)__cond_7 != 0) 
#line 305 
                                __compiletime_assert_305(); else ;
      }
      
#line 305 
      __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck"," FA in safe zone\n");
      
#line 306 
      data->nrg_curr_state = 2U;
      
#line 309 
      data->nrg_silence_ref = silence_ref;
      
#line 314 
      if (data->nrg_prev_state == 0U) {
        {
          
#line 315 
          bool __cond_8 = (_Bool)((int)*("... increasing margin\n" + 21UL) != 10);
          
#line 315 
          if ((int)__cond_8 != 0) 
#line 315 
                                  __compiletime_assert_315(); else ;
        }
        
#line 315 
        __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","... increasing margin\n");
        
#line 316 
        if (data->nrg_th_cck > max_nrg_cck + 8U) 
#line 317 
                                                 data->nrg_th_cck += 4294967288U; else 
                                                                    
#line 319 
                                                                    data->nrg_th_cck = max_nrg_cck;
      }
      else ;
    }
  {
    u32 tmp_13;
    
#line 328 
    u32 _max1_3 = max_nrg_cck;
    
#line 328 
    u32 _max2_3 = data->nrg_th_cck;
    
#line 328 
    if (_max1_3 > _max2_3) 
#line 328 
                           tmp_13 = _max1_3; else 
#line 328 
                                                  tmp_13 = _max2_3;
    
#line 328 
    tmp_14 = tmp_13;
  }
  
#line 328 
  data->nrg_th_cck = tmp_14;
  {
    
#line 329 
    bool __cond_9 = (_Bool)((int)*("new nrg_th_cck %u\n" + 17UL) != 10);
    
#line 329 
    if ((int)__cond_9 != 0) 
#line 329 
                            __compiletime_assert_329(); else ;
  }
  
#line 329 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_energy_cck","new nrg_th_cck %u\n",data->nrg_th_cck);
  
#line 331 
  data->nrg_prev_state = data->nrg_curr_state;
  
#line 334 
  if (false_alarms > min_false_alarms) {
    unsigned int tmp_18;
    
#line 339 
    if (data->auto_corr_cck <= 159U) 
#line 340 
                                     data->auto_corr_cck = 161U;
    else {
      unsigned int tmp_16;
      
#line 342 
      val = data->auto_corr_cck + 3U;
      {
        unsigned int tmp_15;
        
#line 344 
        unsigned int _min1_2 = (unsigned int)ranges->auto_corr_max_cck;
        
#line 344 
        u32 _min2_2 = val;
        
#line 344 
        if (_min1_2 < _min2_2) 
#line 344 
                               tmp_15 = _min1_2; else 
#line 344 
                                                      tmp_15 = _min2_2;
        
#line 344 
        tmp_16 = tmp_15;
      }
      
#line 343 
      data->auto_corr_cck = tmp_16;
    }
    
#line 346 
    val = data->auto_corr_cck_mrc + 3U;
    {
      unsigned int tmp_17;
      
#line 348 
      unsigned int _min1_3 = (unsigned int)ranges->auto_corr_max_cck_mrc;
      
#line 348 
      u32 _min2_3 = val;
      
#line 348 
      if (_min1_3 < _min2_3) 
#line 348 
                             tmp_17 = _min1_3; else 
#line 348 
                                                    tmp_17 = _min2_3;
      
#line 348 
      tmp_18 = tmp_17;
    }
    
#line 347 
    data->auto_corr_cck_mrc = tmp_18;
  }
  else 
    
#line 349 
    if (false_alarms < min_false_alarms && (data->nrg_auto_corr_silence_diff > 2 || data->num_in_cck_no_fa > 100U)) {
      unsigned int tmp_20;
      unsigned int tmp_22;
      
#line 354 
      val = data->auto_corr_cck + 4294967293U;
      {
        unsigned int tmp_19;
        
#line 356 
        unsigned int _max1_4 = (unsigned int)ranges->auto_corr_min_cck;
        
#line 356 
        u32 _max2_4 = val;
        
#line 356 
        if (_max1_4 > _max2_4) 
#line 356 
                               tmp_19 = _max1_4; else 
#line 356 
                                                      tmp_19 = _max2_4;
        
#line 356 
        tmp_20 = tmp_19;
      }
      
#line 355 
      data->auto_corr_cck = tmp_20;
      
#line 357 
      val = data->auto_corr_cck_mrc + 4294967293U;
      {
        unsigned int tmp_21;
        
#line 359 
        unsigned int _max1_5 = (unsigned int)ranges->auto_corr_min_cck_mrc;
        
#line 359 
        u32 _max2_5 = val;
        
#line 359 
        if (_max1_5 > _max2_5) 
#line 359 
                               tmp_21 = _max1_5; else 
#line 359 
                                                      tmp_21 = _max2_5;
        
#line 359 
        tmp_22 = tmp_21;
      }
      
#line 358 
      data->auto_corr_cck_mrc = tmp_22;
    }
    else ;
  
#line 362 
  __retres = 0;
  
#line 362 
  return __retres;
}


#line 382 
void __compiletime_assert_383(void);


#line 405 
void __compiletime_assert_406(void);


#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
static int iwl_sens_auto_corr_ofdm(struct iwl_priv *priv, u32 norm_fa, u32 rx_enable_time)
{
  int __retres;
  u32 val;
  
#line 371 
  u32 false_alarms = norm_fa * 204800U;
  
#line 372 
  u32 max_false_alarms = rx_enable_time * 50U;
  
#line 373 
  u32 min_false_alarms = rx_enable_time * 5U;
  
#line 374 
  struct iwl_sensitivity_data *data = (struct iwl_sensitivity_data *)0;
  
#line 375 
  struct iwl_sensitivity_ranges const *ranges = priv->hw_params.sens;
  
#line 377 
  data = & priv->sensitivity_data;
  
#line 380 
  if (false_alarms > max_false_alarms) {
    unsigned int tmp_0;
    unsigned int tmp_2;
    unsigned int tmp_4;
    unsigned int tmp_6;
    {
      
#line 382 
      bool __cond = (_Bool)((int)*("norm FA %u > max FA %u)\n" + 23UL) != 10);
      
#line 382 
      if ((int)__cond != 0) 
#line 382 
                            __compiletime_assert_383(); else ;
    }
    
#line 382 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_auto_corr_ofdm","norm FA %u > max FA %u)\n",false_alarms,max_false_alarms);
    
#line 385 
    val = data->auto_corr_ofdm + 1U;
    {
      unsigned int tmp;
      
#line 387 
      unsigned int _min1 = (unsigned int)ranges->auto_corr_max_ofdm;
      
#line 387 
      u32 _min2 = val;
      
#line 387 
      if (_min1 < _min2) 
#line 387 
                         tmp = _min1; else 
#line 387 
                                           tmp = _min2;
      
#line 387 
      tmp_0 = tmp;
    }
    
#line 386 
    data->auto_corr_ofdm = tmp_0;
    
#line 389 
    val = data->auto_corr_ofdm_mrc + 1U;
    {
      unsigned int tmp_1;
      
#line 391 
      unsigned int _min1_0 = (unsigned int)ranges->auto_corr_max_ofdm_mrc;
      
#line 391 
      u32 _min2_0 = val;
      
#line 391 
      if (_min1_0 < _min2_0) 
#line 391 
                             tmp_1 = _min1_0; else 
#line 391 
                                                   tmp_1 = _min2_0;
      
#line 391 
      tmp_2 = tmp_1;
    }
    
#line 390 
    data->auto_corr_ofdm_mrc = tmp_2;
    
#line 393 
    val = data->auto_corr_ofdm_x1 + 1U;
    {
      unsigned int tmp_3;
      
#line 395 
      unsigned int _min1_1 = (unsigned int)ranges->auto_corr_max_ofdm_x1;
      
#line 395 
      u32 _min2_1 = val;
      
#line 395 
      if (_min1_1 < _min2_1) 
#line 395 
                             tmp_3 = _min1_1; else 
#line 395 
                                                   tmp_3 = _min2_1;
      
#line 395 
      tmp_4 = tmp_3;
    }
    
#line 394 
    data->auto_corr_ofdm_x1 = tmp_4;
    
#line 397 
    val = data->auto_corr_ofdm_mrc_x1 + 1U;
    {
      unsigned int tmp_5;
      
#line 399 
      unsigned int _min1_2 = (unsigned int)ranges->auto_corr_max_ofdm_mrc_x1;
      
#line 399 
      u32 _min2_2 = val;
      
#line 399 
      if (_min1_2 < _min2_2) 
#line 399 
                             tmp_5 = _min1_2; else 
#line 399 
                                                   tmp_5 = _min2_2;
      
#line 399 
      tmp_6 = tmp_5;
    }
    
#line 398 
    data->auto_corr_ofdm_mrc_x1 = tmp_6;
  }
  else 
    
#line 403 
    if (false_alarms < min_false_alarms) {
      unsigned int tmp_8;
      unsigned int tmp_10;
      unsigned int tmp_12;
      unsigned int tmp_14;
      {
        
#line 405 
        bool __cond_0 = (_Bool)((int)*("norm FA %u < min FA %u\n" + 22UL) != 10);
        
#line 405 
        if ((int)__cond_0 != 0) 
#line 405 
                                __compiletime_assert_406(); else ;
      }
      
#line 405 
      __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_auto_corr_ofdm","norm FA %u < min FA %u\n",false_alarms,min_false_alarms);
      
#line 408 
      val = data->auto_corr_ofdm + 4294967295U;
      {
        unsigned int tmp_7;
        
#line 410 
        unsigned int _max1 = (unsigned int)ranges->auto_corr_min_ofdm;
        
#line 410 
        u32 _max2 = val;
        
#line 410 
        if (_max1 > _max2) 
#line 410 
                           tmp_7 = _max1; else 
#line 410 
                                               tmp_7 = _max2;
        
#line 410 
        tmp_8 = tmp_7;
      }
      
#line 409 
      data->auto_corr_ofdm = tmp_8;
      
#line 412 
      val = data->auto_corr_ofdm_mrc + 4294967295U;
      {
        unsigned int tmp_9;
        
#line 414 
        unsigned int _max1_0 = (unsigned int)ranges->auto_corr_min_ofdm_mrc;
        
#line 414 
        u32 _max2_0 = val;
        
#line 414 
        if (_max1_0 > _max2_0) 
#line 414 
                               tmp_9 = _max1_0; else 
#line 414 
                                                     tmp_9 = _max2_0;
        
#line 414 
        tmp_10 = tmp_9;
      }
      
#line 413 
      data->auto_corr_ofdm_mrc = tmp_10;
      
#line 416 
      val = data->auto_corr_ofdm_x1 + 4294967295U;
      {
        unsigned int tmp_11;
        
#line 418 
        unsigned int _max1_1 = (unsigned int)ranges->auto_corr_min_ofdm_x1;
        
#line 418 
        u32 _max2_1 = val;
        
#line 418 
        if (_max1_1 > _max2_1) 
#line 418 
                               tmp_11 = _max1_1; else 
#line 418 
                                                      tmp_11 = _max2_1;
        
#line 418 
        tmp_12 = tmp_11;
      }
      
#line 417 
      data->auto_corr_ofdm_x1 = tmp_12;
      
#line 420 
      val = data->auto_corr_ofdm_mrc_x1 + 4294967295U;
      {
        unsigned int tmp_13;
        
#line 422 
        unsigned int _max1_2 = (unsigned int)ranges->auto_corr_min_ofdm_mrc_x1;
        
#line 422 
        u32 _max2_2 = val;
        
#line 422 
        if (_max1_2 > _max2_2) 
#line 422 
                               tmp_13 = _max1_2; else 
#line 422 
                                                      tmp_13 = _max2_2;
        
#line 422 
        tmp_14 = tmp_13;
      }
      
#line 421 
      data->auto_corr_ofdm_mrc_x1 = tmp_14;
    }
    else {
      {
        
#line 424 
        bool __cond_1 = (_Bool)((int)*("min FA %u < norm FA %u < max FA %u OK\n" + 37UL) != 10);
        
#line 424 
        if ((int)__cond_1 != 0) 
#line 424 
                                __compiletime_assert_425(); else ;
      }
      
#line 424 
      __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sens_auto_corr_ofdm","min FA %u < norm FA %u < max FA %u OK\n",min_false_alarms,false_alarms,max_false_alarms);
    }
  
#line 427 
  __retres = 0;
  
#line 427 
  return __retres;
}


#line 460 
void __compiletime_assert_463(void);


#line 465 
void __compiletime_assert_467(void);


#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
static void iwl_prepare_legacy_sensitivity_tbl(struct iwl_priv *priv, struct iwl_sensitivity_data *data, __le16 *tbl)
{
  
#line 434 
  *(tbl + 5U) = (unsigned short)data->auto_corr_ofdm;
  
#line 436 
  *(tbl + 6U) = (unsigned short)data->auto_corr_ofdm_mrc;
  
#line 438 
  *(tbl + 2U) = (unsigned short)data->auto_corr_ofdm_x1;
  
#line 440 
  *(tbl + 3U) = (unsigned short)data->auto_corr_ofdm_mrc_x1;
  
#line 443 
  *(tbl + 9U) = (unsigned short)data->auto_corr_cck;
  
#line 445 
  *(tbl + 4U) = (unsigned short)data->auto_corr_cck_mrc;
  
#line 448 
  *tbl = (unsigned short)data->nrg_th_cck;
  
#line 450 
  *(tbl + 1U) = (unsigned short)data->nrg_th_ofdm;
  
#line 453 
  *(tbl + 7U) = data->barker_corr_th_min;
  
#line 455 
  *(tbl + 8U) = data->barker_corr_th_min_mrc;
  
#line 457 
  *(tbl + 10U) = data->nrg_th_cca;
  {
    
#line 460 
    bool __cond = (_Bool)((int)*("ofdm: ac %u mrc %u x1 %u mrc_x1 %u thresh %u\n" + 44UL) != 10);
    
#line 460 
    if ((int)__cond != 0) 
#line 460 
                          __compiletime_assert_463(); else ;
  }
  
#line 460 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_prepare_legacy_sensitivity_tbl","ofdm: ac %u mrc %u x1 %u mrc_x1 %u thresh %u\n",data->auto_corr_ofdm,data->auto_corr_ofdm_mrc,data->auto_corr_ofdm_x1,data->auto_corr_ofdm_mrc_x1,data->nrg_th_ofdm);
  {
    
#line 465 
    bool __cond_0 = (_Bool)((int)*("cck: ac %u mrc %u thresh %u\n" + 27UL) != 10);
    
#line 465 
    if ((int)__cond_0 != 0) 
#line 465 
                            __compiletime_assert_467(); else ;
  }
  
#line 465 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_prepare_legacy_sensitivity_tbl","cck: ac %u mrc %u thresh %u\n",data->auto_corr_cck,data->auto_corr_cck_mrc,data->nrg_th_cck);
  
#line 466 
  return;
}


#line 494 
void __compiletime_assert_494(void);


#line 471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
static int iwl_sensitivity_write(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_sensitivity_cmd cmd;
  int tmp;
  int tmp_0;
  
#line 474 
  struct iwl_sensitivity_data *data = (struct iwl_sensitivity_data *)0;
  
#line 475 
  struct iwl_host_cmd cmd_out = {.data = {(void const *)(& cmd)}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 1U, .len = {(unsigned short)24U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)168U};
  
#line 482 
  data = & priv->sensitivity_data;
  
#line 484 
  memset((void *)(& cmd),0,24UL);
  
#line 486 
  iwl_prepare_legacy_sensitivity_tbl(priv,data,& cmd.table[0]);
  
#line 489 
  cmd.control = (unsigned short)1U;
  
#line 492 
  tmp = memcmp((void const *)(& cmd.table[0]),(void const *)(& priv->sensitivity_tbl[0]),22UL);
  
#line 492 
  if (tmp == 0) {
    {
      
#line 494 
      bool __cond = (_Bool)((int)*("No change in SENSITIVITY_CMD\n" + 28UL) != 10);
      
#line 494 
      if ((int)__cond != 0) 
#line 494 
                            __compiletime_assert_494(); else ;
    }
    
#line 494 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sensitivity_write","No change in SENSITIVITY_CMD\n");
    
#line 495 
    __retres = 0;
    
#line 495 
    goto return_label;
  }
  else ;
  
#line 499 
  memcpy((void *)(& priv->sensitivity_tbl[0]),(void const *)(& cmd.table[0]),22UL);
  
#line 502 
  tmp_0 = iwl_dvm_send_cmd(priv,& cmd_out);
  
#line 502 
  __retres = tmp_0;
  return_label: 
#line 502 
                return __retres;
}


#line 580 
void __compiletime_assert_580(void);


#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
static int iwl_enhance_sensitivity_write(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_enhance_sensitivity_cmd cmd;
  int tmp;
  int tmp_1;
  
#line 509 
  struct iwl_sensitivity_data *data = (struct iwl_sensitivity_data *)0;
  
#line 510 
  struct iwl_host_cmd cmd_out = {.data = {(void const *)(& cmd)}, .resp_pkt = (struct iwl_rx_packet *)0, ._rx_page_addr = 0UL, ._rx_page_order = 0U, .handler_status = 0, .flags = 1U, .len = {(unsigned short)48U}, .dataflags = {(unsigned char)0, (unsigned char)0}, .id = (unsigned char)168U};
  
#line 517 
  data = & priv->sensitivity_data;
  
#line 519 
  memset((void *)(& cmd),0,48UL);
  
#line 521 
  iwl_prepare_legacy_sensitivity_tbl(priv,data,& cmd.enhance_table[0]);
  
#line 523 
  if ((int)(priv->lib)->hd_v2 != 0) {
    
#line 524 
    cmd.enhance_table[11] = (unsigned short)1U;
    
#line 526 
    cmd.enhance_table[12] = (unsigned short)1U;
    
#line 528 
    cmd.enhance_table[13] = (unsigned short)1U;
    
#line 530 
    cmd.enhance_table[14] = (unsigned short)600U;
    
#line 532 
    cmd.enhance_table[15] = (unsigned short)40U;
    
#line 534 
    cmd.enhance_table[16] = (unsigned short)486U;
    
#line 536 
    cmd.enhance_table[17] = (unsigned short)45U;
    
#line 538 
    cmd.enhance_table[18] = (unsigned short)853U;
    
#line 540 
    cmd.enhance_table[19] = (unsigned short)60U;
    
#line 542 
    cmd.enhance_table[20] = (unsigned short)476U;
    
#line 544 
    cmd.enhance_table[21] = (unsigned short)99U;
  }
  else {
    
#line 547 
    cmd.enhance_table[11] = (unsigned short)0U;
    
#line 549 
    cmd.enhance_table[12] = (unsigned short)0U;
    
#line 551 
    cmd.enhance_table[13] = (unsigned short)0U;
    
#line 553 
    cmd.enhance_table[14] = (unsigned short)668U;
    
#line 555 
    cmd.enhance_table[15] = (unsigned short)4U;
    
#line 557 
    cmd.enhance_table[16] = (unsigned short)486U;
    
#line 559 
    cmd.enhance_table[17] = (unsigned short)37U;
    
#line 561 
    cmd.enhance_table[18] = (unsigned short)853U;
    
#line 563 
    cmd.enhance_table[19] = (unsigned short)4U;
    
#line 565 
    cmd.enhance_table[20] = (unsigned short)476U;
    
#line 567 
    cmd.enhance_table[21] = (unsigned short)99U;
  }
  
#line 572 
  cmd.control = (unsigned short)1U;
  
#line 575 
  tmp = memcmp((void const *)(& cmd.enhance_table[0]),(void const *)(& priv->sensitivity_tbl[0]),22UL);
  
#line 575 
  if (tmp == 0) {
    int tmp_0;
    
#line 576 
    tmp_0 = memcmp((void const *)(& cmd.enhance_table[11]),(void const *)(& priv->enhance_sensitivity_tbl[0]),24UL);
    
#line 576 
    if (tmp_0 == 0) {
      {
        
#line 580 
        bool __cond = (_Bool)((int)*("No change in SENSITIVITY_CMD\n" + 28UL) != 10);
        
#line 580 
        if ((int)__cond != 0) 
#line 580 
                              __compiletime_assert_580(); else ;
      }
      
#line 580 
      __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_enhance_sensitivity_write","No change in SENSITIVITY_CMD\n");
      
#line 581 
      __retres = 0;
      
#line 581 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 585 
  memcpy((void *)(& priv->sensitivity_tbl[0]),(void const *)(& cmd.enhance_table[0]),22UL);
  
#line 587 
  memcpy((void *)(& priv->enhance_sensitivity_tbl[0]),(void const *)(& cmd.enhance_table[11]),24UL);
  
#line 591 
  tmp_1 = iwl_dvm_send_cmd(priv,& cmd_out);
  
#line 591 
  __retres = tmp_1;
  return_label: 
#line 591 
                return __retres;
}


#line 604 
void __compiletime_assert_604(void);


#line 594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
void iwl_init_sensitivity(struct iwl_priv *priv)
{
  int i;
  
#line 596 
  int ret = 0;
  
#line 598 
  struct iwl_sensitivity_data *data = (struct iwl_sensitivity_data *)0;
  
#line 599 
  struct iwl_sensitivity_ranges const *ranges = priv->hw_params.sens;
  
#line 601 
  if ((priv->calib_disabled & 1U) != 0U) 
#line 602 
                                         goto return_label; else ;
  {
    
#line 604 
    bool __cond = (_Bool)((int)*("Start iwl_init_sensitivity\n" + 26UL) != 10);
    
#line 604 
    if ((int)__cond != 0) 
#line 604 
                          __compiletime_assert_604(); else ;
  }
  
#line 604 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_init_sensitivity","Start iwl_init_sensitivity\n");
  
#line 607 
  data = & priv->sensitivity_data;
  
#line 609 
  if (ranges == (struct iwl_sensitivity_ranges const *)0) 
#line 610 
                                                          goto return_label; else ;
  
#line 612 
  memset((void *)data,0,144UL);
  
#line 614 
  data->num_in_cck_no_fa = 0U;
  
#line 615 
  data->nrg_curr_state = 0U;
  
#line 616 
  data->nrg_prev_state = 0U;
  
#line 617 
  data->nrg_silence_ref = 0U;
  
#line 618 
  data->nrg_silence_idx = 0U;
  
#line 619 
  data->nrg_energy_idx = 0U;
  
#line 621 
  i = 0;
  
#line 621 
  goto ldv_52984;
  ldv_52983: 
#line 622 
  ;
  
#line 622 
  data->nrg_value[i] = 0U;
  
#line 621 
  i += 1;
  ldv_52984: 
#line 622 
  ;
  
#line 621 
  if (i <= 9) 
#line 623 
              goto ldv_52983; else 
#line 626 
                                   goto ldv_52985;
  ldv_52985: 
#line 627 
  ;
  
#line 624 
  i = 0;
  
#line 624 
  goto ldv_52987;
  ldv_52986: 
#line 625 
  ;
  
#line 625 
  data->nrg_silence_rssi[i] = (unsigned char)0U;
  
#line 624 
  i += 1;
  ldv_52987: 
#line 625 
  ;
  
#line 624 
  if (i <= 19) 
#line 626 
               goto ldv_52986; else 
#line 629 
                                    goto ldv_52988;
  ldv_52988: 
#line 630 
  ;
  
#line 627 
  data->auto_corr_ofdm = (unsigned int)ranges->auto_corr_min_ofdm;
  
#line 628 
  data->auto_corr_ofdm_mrc = (unsigned int)ranges->auto_corr_min_ofdm_mrc;
  
#line 629 
  data->auto_corr_ofdm_x1 = (unsigned int)ranges->auto_corr_min_ofdm_x1;
  
#line 630 
  data->auto_corr_ofdm_mrc_x1 = (unsigned int)ranges->auto_corr_min_ofdm_mrc_x1;
  
#line 631 
  data->auto_corr_cck = 125U;
  
#line 632 
  data->auto_corr_cck_mrc = (unsigned int)ranges->auto_corr_min_cck_mrc;
  
#line 633 
  data->nrg_th_cck = (unsigned int)ranges->nrg_th_cck;
  
#line 634 
  data->nrg_th_ofdm = (unsigned int)ranges->nrg_th_ofdm;
  
#line 635 
  data->barker_corr_th_min = ranges->barker_corr_th_min;
  
#line 636 
  data->barker_corr_th_min_mrc = ranges->barker_corr_th_min_mrc;
  
#line 637 
  data->nrg_th_cca = ranges->nrg_th_cca;
  
#line 639 
  data->last_bad_plcp_cnt_ofdm = 0U;
  
#line 640 
  data->last_fa_cnt_ofdm = 0U;
  
#line 641 
  data->last_bad_plcp_cnt_cck = 0U;
  
#line 642 
  data->last_fa_cnt_cck = 0U;
  
#line 644 
  if ((int)(priv->fw)->enhance_sensitivity_table != 0) {
    int tmp;
    
#line 645 
    tmp = iwl_enhance_sensitivity_write(priv);
    
#line 645 
    ret = tmp | ret;
  }
  else {
    int tmp_0;
    
#line 647 
    tmp_0 = iwl_sensitivity_write(priv);
    
#line 647 
    ret = tmp_0 | ret;
  }
  {
    
#line 648 
    bool __cond_0 = (_Bool)((int)*("<<return 0x%X\n" + 13UL) != 10);
    
#line 648 
    if ((int)__cond_0 != 0) 
#line 648 
                            __compiletime_assert_648(); else ;
  }
  
#line 648 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_init_sensitivity","<<return 0x%X\n",ret);
  return_label: 
#line 649 
                return;
}


#line 671 
void __compiletime_assert_671(void);


#line 710 
void __compiletime_assert_710(void);


#line 749 
void __compiletime_assert_750(void);


#line 651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
void iwl_sensitivity_calibration(struct iwl_priv *priv)
{
  u32 rx_enable_time;
  u32 fa_cck;
  u32 fa_ofdm;
  u32 bad_plcp_cck;
  u32 bad_plcp_ofdm;
  u32 norm_fa_ofdm;
  u32 norm_fa_cck;
  struct statistics_rx_non_phy *rx_info;
  struct statistics_rx_phy *ofdm;
  struct statistics_rx_phy *cck;
  struct statistics_general_data statis;
  int tmp;
  
#line 660 
  struct iwl_sensitivity_data *data = (struct iwl_sensitivity_data *)0;
  
#line 665 
  if ((priv->calib_disabled & 1U) != 0U) 
#line 666 
                                         goto return_label; else ;
  
#line 668 
  data = & priv->sensitivity_data;
  
#line 670 
  tmp = iwl_is_any_associated_2(priv);
  
#line 670 
  if (tmp == 0) {
    {
      
#line 671 
      bool __cond = (_Bool)((int)*("<< - not associated\n" + 19UL) != 10);
      
#line 671 
      if ((int)__cond != 0) 
#line 671 
                            __compiletime_assert_671(); else ;
    }
    
#line 671 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sensitivity_calibration","<< - not associated\n");
    
#line 672 
    goto return_label;
  }
  else ;
  
#line 675 
  ldv_spin_lock_bh_74_0(& priv->statistics.lock);
  
#line 676 
  rx_info = & priv->statistics.rx_non_phy;
  
#line 677 
  ofdm = & priv->statistics.rx_ofdm;
  
#line 678 
  cck = & priv->statistics.rx_cck;
  
#line 679 
  if (rx_info->interference_data_flag != 1U) {
    {
      
#line 680 
      bool __cond_0 = (_Bool)((int)*("<< invalid data.\n" + 16UL) != 10);
      
#line 680 
      if ((int)__cond_0 != 0) 
#line 680 
                              __compiletime_assert_680(); else ;
    }
    
#line 680 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sensitivity_calibration","<< invalid data.\n");
    
#line 681 
    ldv_spin_unlock_bh_75_0(& priv->statistics.lock);
    
#line 682 
    goto return_label;
  }
  else ;
  
#line 686 
  rx_enable_time = rx_info->channel_load;
  
#line 687 
  fa_cck = cck->false_alarm_cnt;
  
#line 688 
  fa_ofdm = ofdm->false_alarm_cnt;
  
#line 689 
  bad_plcp_cck = cck->plcp_err;
  
#line 690 
  bad_plcp_ofdm = ofdm->plcp_err;
  
#line 692 
  statis.beacon_silence_rssi_a = rx_info->beacon_silence_rssi_a;
  
#line 694 
  statis.beacon_silence_rssi_b = rx_info->beacon_silence_rssi_b;
  
#line 696 
  statis.beacon_silence_rssi_c = rx_info->beacon_silence_rssi_c;
  
#line 698 
  statis.beacon_energy_a = rx_info->beacon_energy_a;
  
#line 700 
  statis.beacon_energy_b = rx_info->beacon_energy_b;
  
#line 702 
  statis.beacon_energy_c = rx_info->beacon_energy_c;
  
#line 705 
  ldv_spin_unlock_bh_76(& priv->statistics.lock);
  {
    
#line 707 
    bool __cond_1 = (_Bool)((int)*("rx_enable_time = %u usecs\n" + 25UL) != 10);
    
#line 707 
    if ((int)__cond_1 != 0) 
#line 707 
                            __compiletime_assert_707(); else ;
  }
  
#line 707 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sensitivity_calibration","rx_enable_time = %u usecs\n",rx_enable_time);
  
#line 709 
  if (rx_enable_time == 0U) {
    {
      
#line 710 
      bool __cond_2 = (_Bool)((int)*("<< RX Enable Time == 0!\n" + 23UL) != 10);
      
#line 710 
      if ((int)__cond_2 != 0) 
#line 710 
                              __compiletime_assert_710(); else ;
    }
    
#line 710 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sensitivity_calibration","<< RX Enable Time == 0!\n");
    
#line 711 
    goto return_label;
  }
  else ;
  
#line 717 
  if (data->last_bad_plcp_cnt_cck > bad_plcp_cck) 
#line 718 
                                                  data->last_bad_plcp_cnt_cck = bad_plcp_cck;
  else {
    
#line 720 
    bad_plcp_cck -= data->last_bad_plcp_cnt_cck;
    
#line 721 
    data->last_bad_plcp_cnt_cck += bad_plcp_cck;
  }
  
#line 724 
  if (data->last_bad_plcp_cnt_ofdm > bad_plcp_ofdm) 
#line 725 
                                                    data->last_bad_plcp_cnt_ofdm = bad_plcp_ofdm;
  else {
    
#line 727 
    bad_plcp_ofdm -= data->last_bad_plcp_cnt_ofdm;
    
#line 728 
    data->last_bad_plcp_cnt_ofdm += bad_plcp_ofdm;
  }
  
#line 731 
  if (data->last_fa_cnt_ofdm > fa_ofdm) 
#line 732 
                                        data->last_fa_cnt_ofdm = fa_ofdm;
  else {
    
#line 734 
    fa_ofdm -= data->last_fa_cnt_ofdm;
    
#line 735 
    data->last_fa_cnt_ofdm += fa_ofdm;
  }
  
#line 738 
  if (data->last_fa_cnt_cck > fa_cck) 
#line 739 
                                      data->last_fa_cnt_cck = fa_cck;
  else {
    
#line 741 
    fa_cck -= data->last_fa_cnt_cck;
    
#line 742 
    data->last_fa_cnt_cck += fa_cck;
  }
  
#line 746 
  norm_fa_ofdm = fa_ofdm + bad_plcp_ofdm;
  
#line 747 
  norm_fa_cck = fa_cck + bad_plcp_cck;
  {
    
#line 749 
    bool __cond_3 = (_Bool)((int)*("cck: fa %u badp %u  ofdm: fa %u badp %u\n" + 39UL) != 10);
    
#line 749 
    if ((int)__cond_3 != 0) 
#line 749 
                            __compiletime_assert_750(); else ;
  }
  
#line 749 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_sensitivity_calibration","cck: fa %u badp %u  ofdm: fa %u badp %u\n",fa_cck,bad_plcp_cck,fa_ofdm,bad_plcp_ofdm);
  
#line 752 
  iwl_sens_auto_corr_ofdm(priv,norm_fa_ofdm,rx_enable_time);
  
#line 753 
  iwl_sens_energy_cck(priv,norm_fa_cck,rx_enable_time,& statis);
  
#line 754 
  if ((int)(priv->fw)->enhance_sensitivity_table != 0) 
#line 755 
                                                       iwl_enhance_sensitivity_write(priv); else 
                                                                    
#line 757 
                                                                    iwl_sensitivity_write(priv);
  return_label: 
#line 758 
                return;
}


#line 760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
__inline static u8 find_first_chain(u8 mask)
{
  u8 __retres;
  
#line 762 
  if (((unsigned long)mask & 1UL) != 0UL) {
    
#line 763 
    __retres = (unsigned char)0U;
    
#line 763 
    goto return_label;
  }
  else ;
  
#line 764 
  if (((unsigned long)mask & 2UL) != 0UL) {
    
#line 765 
    __retres = (unsigned char)1U;
    
#line 765 
    goto return_label;
  }
  else ;
  
#line 766 
  __retres = (unsigned char)2U;
  return_label: 
#line 766 
                return __retres;
}


#line 803 
void __compiletime_assert_804(void);


#line 805 
void __compiletime_assert_806(void);


#line 819 
void __compiletime_assert_821(void);


#line 859 
void __compiletime_assert_861(void);


#line 876 
void __compiletime_assert_877(void);


#line 773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
static void iwl_find_disconn_antenna(struct iwl_priv *priv, u32 *average_sig, struct iwl_chain_noise_data *data)
{
  u32 max_average_sig;
  u16 max_average_sig_antenna_i;
  u8 num_tx_chains;
  u8 first_chain;
  
#line 776 
  u32 active_chains = 0U;
  
#line 781 
  u16 i = (unsigned short)0U;
  
#line 783 
  *average_sig = data->chain_signal_a / 16U;
  
#line 784 
  *(average_sig + 1U) = data->chain_signal_b / 16U;
  
#line 785 
  *(average_sig + 2U) = data->chain_signal_c / 16U;
  
#line 787 
  if (*average_sig >= *(average_sig + 1U)) {
    
#line 788 
    max_average_sig = *average_sig;
    
#line 789 
    max_average_sig_antenna_i = (unsigned short)0U;
    
#line 790 
    active_chains = (unsigned int)(1 << (int)max_average_sig_antenna_i);
  }
  else {
    
#line 792 
    max_average_sig = *(average_sig + 1U);
    
#line 793 
    max_average_sig_antenna_i = (unsigned short)1U;
    
#line 794 
    active_chains = (unsigned int)(1 << (int)max_average_sig_antenna_i);
  }
  
#line 797 
  if (*(average_sig + 2U) >= max_average_sig) {
    
#line 798 
    max_average_sig = *(average_sig + 2U);
    
#line 799 
    max_average_sig_antenna_i = (unsigned short)2U;
    
#line 800 
    active_chains = (unsigned int)(1 << (int)max_average_sig_antenna_i);
  }
  else ;
  {
    
#line 803 
    bool __cond = (_Bool)((int)*("average_sig: a %d b %d c %d\n" + 27UL) != 10);
    
#line 803 
    if ((int)__cond != 0) 
#line 803 
                          __compiletime_assert_804(); else ;
  }
  
#line 803 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_find_disconn_antenna","average_sig: a %d b %d c %d\n",*average_sig,*(average_sig + 1U),*(average_sig + 2U));
  {
    
#line 805 
    bool __cond_0 = (_Bool)((int)*("max_average_sig = %d, antenna %d\n" + 32UL) != 10);
    
#line 805 
    if ((int)__cond_0 != 0) 
#line 805 
                            __compiletime_assert_806(); else ;
  }
  
#line 805 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_find_disconn_antenna","max_average_sig = %d, antenna %d\n",max_average_sig,(int)max_average_sig_antenna_i);
  
#line 809 
  i = (unsigned short)0U;
  
#line 809 
  goto ldv_53058;
  ldv_53057: 
#line 810 
  ;
  
#line 810 
  if ((int)i != (int)max_average_sig_antenna_i) {
    
#line 811 
    s32 rssi_delta = (int)(max_average_sig - *(average_sig + (int)i));
    
#line 815 
    if (rssi_delta > 15) 
#line 816 
                         data->disconn_array[(int)i] = (unsigned char)1U; else 
                                                                    
#line 818 
                                                                    active_chains = (unsigned int)(1 << (int)i) | active_chains;
    {
      
#line 819 
      bool __cond_1 = (_Bool)((int)*("i = %d  rssiDelta = %d  " + 45UL) != 10);
      
#line 819 
      if ((int)__cond_1 != 0) 
#line 819 
                              __compiletime_assert_821(); else ;
    }
    
#line 819 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_find_disconn_antenna","i = %d  rssiDelta = %d  ",(int)i,rssi_delta,(int)data->disconn_array[(int)i]);
  }
  else ;
  
#line 809 
  i = (u16)((int)i + 1);
  ldv_53058: 
#line 810 
  ;
  
#line 809 
  if ((unsigned int)i <= 2U) 
#line 811 
                             goto ldv_53057; else 
#line 814 
                                                  goto ldv_53059;
  ldv_53059: 
#line 815 
  ;
  
#line 835 
  active_chains = (unsigned int)(priv->nvm_data)->valid_rx_ant & active_chains;
  
#line 837 
  num_tx_chains = (unsigned char)0U;
  
#line 838 
  i = (unsigned short)0U;
  
#line 838 
  goto ldv_53068;
  ldv_53067: 
#line 839 
  ;
  {
    
#line 841 
    u8 ant_msk = (unsigned char)(1 << (int)i);
    
#line 842 
    if ((unsigned int)((int)(priv->nvm_data)->valid_tx_ant & (int)ant_msk) == 0U) 
      
#line 843 
      goto ldv_53061; else ;
    
#line 845 
    num_tx_chains = (u8)((int)num_tx_chains + 1);
    
#line 846 
    if ((unsigned int)data->disconn_array[(int)i] == 0U) 
#line 848 
                                                         goto ldv_53062; else ;
    
#line 849 
    if ((int)priv->hw_params.tx_chains_num == (int)num_tx_chains && (unsigned int)data->disconn_array[(int)i] != 0U) {
      
#line 855 
      first_chain = find_first_chain((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
      
#line 857 
      data->disconn_array[(int)first_chain] = (unsigned char)0U;
      
#line 858 
      active_chains = (unsigned int)(1UL << (int)first_chain) | active_chains;
      {
        
#line 859 
        bool __cond_2 = (_Bool)((int)*("All Tx chains are disconnected W/A - declare %d as connected\n" + 60UL) != 10);
        
#line 859 
        if ((int)__cond_2 != 0) 
#line 859 
                                __compiletime_assert_861(); else ;
      }
      
#line 859 
      __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_find_disconn_antenna","All Tx chains are disconnected W/A - declare %d as connected\n",(int)first_chain);
      
#line 862 
      goto ldv_53062;
    }
    else ;
  }
  ldv_53061: 
#line 865 
  ;
  
#line 838 
  i = (u16)((int)i + 1);
  ldv_53068: 
#line 839 
  ;
  
#line 838 
  if ((unsigned int)i <= 2U) 
#line 840 
                             goto ldv_53067; else 
#line 843 
                                                  goto ldv_53062;
  ldv_53062: 
#line 844 
  ;
  
#line 866 
  if ((unsigned int)(priv->nvm_data)->valid_rx_ant != active_chains && priv->chain_noise_data.active_chains != active_chains) {
    {
      
#line 868 
      bool __cond_3 = (_Bool)((int)*("Detected that not all antennas are connected! " + 73UL) != 10);
      
#line 868 
      if ((int)__cond_3 != 0) 
#line 868 
                              __compiletime_assert_872(); else ;
    }
    
#line 868 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_find_disconn_antenna","Detected that not all antennas are connected! ",active_chains,(int)(priv->nvm_data)->valid_rx_ant);
  }
  else ;
  
#line 875 
  data->active_chains = active_chains;
  {
    
#line 876 
    bool __cond_4 = (_Bool)((int)*("active_chains (bitwise) = 0x%x\n" + 30UL) != 10);
    
#line 876 
    if ((int)__cond_4 != 0) 
#line 876 
                            __compiletime_assert_877(); else ;
  }
  
#line 876 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_find_disconn_antenna","active_chains (bitwise) = 0x%x\n",active_chains);
  
#line 877 
  return;
}


#line 918 
void __compiletime_assert_919(void);


#line 880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
static void iwlagn_gain_computation(struct iwl_priv *priv, u32 *average_noise, u8 default_chain)
{
  int i;
  s32 delta_g;
  long tmp_2;
  
#line 886 
  struct iwl_chain_noise_data *data = & priv->chain_noise_data;
  
#line 891 
  i = (int)default_chain + 1;
  
#line 891 
  goto ldv_53098;
  ldv_53097: 
#line 892 
  ;
  
#line 892 
  if ((unsigned int)data->disconn_array[i] != 0U) {
    
#line 893 
    data->delta_gain_code[i] = (unsigned char)0U;
    
#line 894 
    goto ldv_53085;
  }
  else ;
  
#line 897 
  delta_g = ((priv->lib)->chain_noise_scale * ((int)*(average_noise + (int)default_chain) - (int)*(average_noise + i))) / 1500;
  {
    long tmp_0;
    long tmp_1;
    {
      long ret;
      {
        int tmp;
        
#line 903 
        int __x_0 = delta_g;
        
#line 903 
        if (__x_0 < 0) 
#line 903 
                       tmp = - __x_0; else 
#line 903 
                                           tmp = __x_0;
        
#line 903 
        ret = (long)tmp;
      }
      
#line 903 
      tmp_0 = ret;
    }
    
#line 903 
    long _min1 = tmp_0;
    
#line 903 
    long _min2 = 3L;
    
#line 903 
    if (_min1 < _min2) 
#line 903 
                       tmp_1 = _min1; else 
#line 903 
                                           tmp_1 = _min2;
    
#line 903 
    tmp_2 = tmp_1;
  }
  
#line 902 
  data->delta_gain_code[i] = (unsigned char)tmp_2;
  
#line 906 
  if (delta_g < 0) 
#line 915 
                   data->delta_gain_code[i] = (unsigned char)((unsigned int)data->delta_gain_code[i] | 4U); else ;
  ldv_53085: 
#line 916 
  ;
  
#line 891 
  i += 1;
  ldv_53098: 
#line 892 
  ;
  
#line 891 
  if (i <= 2) 
#line 893 
              goto ldv_53097; else 
#line 896 
                                   goto ldv_53099;
  ldv_53099: 
#line 897 
  ;
  {
    
#line 918 
    bool __cond = (_Bool)((int)*("Delta gains: ANT_B = %d  ANT_C = %d\n" + 35UL) != 10);
    
#line 918 
    if ((int)__cond != 0) 
#line 918 
                          __compiletime_assert_919(); else ;
  }
  
#line 918 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwlagn_gain_computation","Delta gains: ANT_B = %d  ANT_C = %d\n",(int)data->delta_gain_code[1],(int)data->delta_gain_code[2]);
  
#line 921 
  if ((unsigned int)data->radio_write == 0U) {
    struct iwl_calib_chain_noise_gain_cmd cmd;
    
#line 924 
    memset((void *)(& cmd),0,8UL);
    
#line 926 
    iwl_set_calib_hdr(& cmd.hdr,(unsigned char)((int)priv->phy_calib_chain_noise_gain_cmd));
    
#line 928 
    cmd.delta_gain_1 = data->delta_gain_code[1];
    
#line 929 
    cmd.delta_gain_2 = data->delta_gain_code[2];
    
#line 930 
    iwl_dvm_send_cmd_pdu(priv,(unsigned char)176,1U,(unsigned short)8,(void const *)(& cmd));
    
#line 933 
    data->radio_write = (unsigned char)1U;
    
#line 934 
    data->state = (unsigned char)2U;
  }
  else ;
  
#line 936 
  return;
}


#line 983 
void __compiletime_assert_983(void);


#line 992 
void __compiletime_assert_992(void);


#line 1041 
void __compiletime_assert_1042(void);


#line 1043 
void __compiletime_assert_1044(void);


#line 1079 
void __compiletime_assert_1081(void);


#line 1083 
void __compiletime_assert_1084(void);


#line 944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
void iwl_chain_noise_calibration(struct iwl_priv *priv)
{
  u32 chain_noise_a;
  u32 chain_noise_b;
  u32 chain_noise_c;
  u32 chain_sig_a;
  u32 chain_sig_b;
  u32 chain_sig_c;
  u8 rxon_band24;
  u8 stat_band24;
  struct statistics_rx_non_phy *rx_info;
  u8 tmp;
  
#line 946 
  struct iwl_chain_noise_data *data = (struct iwl_chain_noise_data *)0;
  
#line 954 
  u32 average_sig[3U] = {65535U};
  
#line 955 
  u32 average_noise[3U] = {65535U};
  
#line 956 
  u32 min_average_noise = 4294967295U;
  
#line 957 
  u16 min_average_noise_antenna_i = (unsigned short)65535U;
  
#line 958 
  u16 i = (unsigned short)0U;
  
#line 959 
  u16 rxon_chnum = (unsigned short)65535U;
  
#line 960 
  u16 stat_chnum = (unsigned short)65535U;
  
#line 970 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 972 
  if ((priv->calib_disabled & 2U) != 0U) 
#line 973 
                                         goto return_label; else ;
  
#line 975 
  data = & priv->chain_noise_data;
  
#line 981 
  if ((unsigned int)data->state != 1U) {
    
#line 982 
    if ((unsigned int)data->state == 0U) {
      {
        
#line 983 
        bool __cond = (_Bool)((int)*("Wait for noise calib reset\n" + 26UL) != 10);
        
#line 983 
        if ((int)__cond != 0) 
#line 983 
                              __compiletime_assert_983(); else ;
      }
      
#line 983 
      __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_chain_noise_calibration","Wait for noise calib reset\n");
    }
    else ;
    
#line 984 
    goto return_label;
  }
  else ;
  
#line 987 
  ldv_spin_lock_bh_77(& priv->statistics.lock);
  
#line 989 
  rx_info = & priv->statistics.rx_non_phy;
  
#line 991 
  if (rx_info->interference_data_flag != 1U) {
    {
      
#line 992 
      bool __cond_0 = (_Bool)((int)*(" << Interference data unavailable\n" + 33UL) != 10);
      
#line 992 
      if ((int)__cond_0 != 0) 
#line 992 
                              __compiletime_assert_992(); else ;
    }
    
#line 992 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_chain_noise_calibration"," << Interference data unavailable\n");
    
#line 993 
    ldv_spin_unlock_bh_78(& priv->statistics.lock);
    
#line 994 
    goto return_label;
  }
  else ;
  
#line 997 
  rxon_band24 = (unsigned char)((ctx->staging.flags & 1U) != 0U);
  
#line 998 
  rxon_chnum = ctx->staging.channel;
  
#line 999 
  stat_band24 = (unsigned char)((priv->statistics.flag & 2U) != 0U);
  
#line 1001 
  stat_chnum = (unsigned short)(priv->statistics.flag >> 16);
  
#line 1005 
  if ((int)rxon_chnum != (int)stat_chnum || (int)rxon_band24 != (int)stat_band24) {
    {
      
#line 1006 
      bool __cond_1 = (_Bool)((int)*("Stats not from chan=%d, band24=%d\n" + 33UL) != 10);
      
#line 1006 
      if ((int)__cond_1 != 0) 
#line 1006 
                              __compiletime_assert_1007(); else ;
    }
    
#line 1006 
    __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_chain_noise_calibration","Stats not from chan=%d, band24=%d\n",(int)rxon_chnum,(int)rxon_band24);
    
#line 1008 
    ldv_spin_unlock_bh_79_1(& priv->statistics.lock);
    
#line 1009 
    goto return_label;
  }
  else ;
  
#line 1016 
  chain_noise_a = rx_info->beacon_silence_rssi_a & 255U;
  
#line 1018 
  chain_noise_b = rx_info->beacon_silence_rssi_b & 255U;
  
#line 1020 
  chain_noise_c = rx_info->beacon_silence_rssi_c & 255U;
  
#line 1023 
  chain_sig_a = rx_info->beacon_rssi_a & 255U;
  
#line 1024 
  chain_sig_b = rx_info->beacon_rssi_b & 255U;
  
#line 1025 
  chain_sig_c = rx_info->beacon_rssi_c & 255U;
  
#line 1027 
  ldv_spin_unlock_bh_80_0(& priv->statistics.lock);
  
#line 1029 
  data->beacon_count = (u16)((int)data->beacon_count + 1);
  
#line 1031 
  data->chain_noise_a += chain_noise_a;
  
#line 1032 
  data->chain_noise_b += chain_noise_b;
  
#line 1033 
  data->chain_noise_c += chain_noise_c;
  
#line 1035 
  data->chain_signal_a += chain_sig_a;
  
#line 1036 
  data->chain_signal_b += chain_sig_b;
  
#line 1037 
  data->chain_signal_c += chain_sig_c;
  {
    
#line 1039 
    bool __cond_2 = (_Bool)((int)*("chan=%d, band24=%d, beacon=%d\n" + 29UL) != 10);
    
#line 1039 
    if ((int)__cond_2 != 0) 
#line 1039 
                            __compiletime_assert_1040(); else ;
  }
  
#line 1039 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_chain_noise_calibration","chan=%d, band24=%d, beacon=%d\n",(int)rxon_chnum,(int)rxon_band24,(int)data->beacon_count);
  {
    
#line 1041 
    bool __cond_3 = (_Bool)((int)*("chain_sig: a %d b %d c %d\n" + 25UL) != 10);
    
#line 1041 
    if ((int)__cond_3 != 0) 
#line 1041 
                            __compiletime_assert_1042(); else ;
  }
  
#line 1041 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_chain_noise_calibration","chain_sig: a %d b %d c %d\n",chain_sig_a,chain_sig_b,chain_sig_c);
  {
    
#line 1043 
    bool __cond_4 = (_Bool)((int)*("chain_noise: a %d b %d c %d\n" + 27UL) != 10);
    
#line 1043 
    if ((int)__cond_4 != 0) 
#line 1043 
                            __compiletime_assert_1044(); else ;
  }
  
#line 1043 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_chain_noise_calibration","chain_noise: a %d b %d c %d\n",chain_noise_a,chain_noise_b,chain_noise_c);
  
#line 1049 
  if ((unsigned int)data->beacon_count != 16U) 
#line 1050 
                                               goto return_label; else ;
  
#line 1053 
  if ((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) {
    
#line 1057 
    data->active_chains = (unsigned int)(priv->nvm_data)->valid_rx_ant;
    
#line 1058 
    i = (unsigned short)0U;
    
#line 1058 
    goto ldv_53153;
    ldv_53152: 
#line 1059 
    ;
    
#line 1059 
    if ((data->active_chains & (unsigned int)(1 << (int)i)) == 0U) 
#line 1060 
                                                                   data->disconn_array[(int)i] = (unsigned char)1U; else ;
    
#line 1058 
    i = (u16)((int)i + 1);
    ldv_53153: 
#line 1059 
    ;
    
#line 1058 
    if ((unsigned int)i <= 2U) 
#line 1060 
                               goto ldv_53152; else 
#line 1063 
                                                    goto ldv_53154;
    ldv_53154: 
#line 1064 
    ;
  }
  else 
#line 1062 
       iwl_find_disconn_antenna(priv,(u32 *)(& average_sig),data);
  
#line 1065 
  average_noise[0] = data->chain_noise_a / 16U;
  
#line 1066 
  average_noise[1] = data->chain_noise_b / 16U;
  
#line 1067 
  average_noise[2] = data->chain_noise_c / 16U;
  
#line 1069 
  i = (unsigned short)0U;
  
#line 1069 
  goto ldv_53156;
  ldv_53155: 
#line 1070 
  ;
  
#line 1070 
  if ((unsigned int)data->disconn_array[(int)i] == 0U && average_noise[(int)i] <= min_average_noise) {
    
#line 1074 
    min_average_noise = average_noise[(int)i];
    
#line 1075 
    min_average_noise_antenna_i = i;
  }
  else ;
  
#line 1069 
  i = (u16)((int)i + 1);
  ldv_53156: 
#line 1070 
  ;
  
#line 1069 
  if ((unsigned int)i <= 2U) 
#line 1071 
                             goto ldv_53155; else 
#line 1074 
                                                  goto ldv_53157;
  ldv_53157: 
#line 1075 
  ;
  {
    
#line 1079 
    bool __cond_5 = (_Bool)((int)*("average_noise: a %d b %d c %d\n" + 29UL) != 10);
    
#line 1079 
    if ((int)__cond_5 != 0) 
#line 1079 
                            __compiletime_assert_1081(); else ;
  }
  
#line 1079 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_chain_noise_calibration","average_noise: a %d b %d c %d\n",average_noise[0],average_noise[1],average_noise[2]);
  {
    
#line 1083 
    bool __cond_6 = (_Bool)((int)*("min_average_noise = %d, antenna %d\n" + 34UL) != 10);
    
#line 1083 
    if ((int)__cond_6 != 0) 
#line 1083 
                            __compiletime_assert_1084(); else ;
  }
  
#line 1083 
  __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwl_chain_noise_calibration","min_average_noise = %d, antenna %d\n",min_average_noise,(int)min_average_noise_antenna_i);
  
#line 1088 
  tmp = find_first_chain((unsigned char)((int)(priv->nvm_data)->valid_rx_ant));
  
#line 1086 
  ;
  
#line 1086 
  iwlagn_gain_computation(priv,(u32 *)(& average_noise),(unsigned char)((int)tmp));
  
#line 1093 
  iwl_update_chain_flags(priv);
  
#line 1095 
  data->state = (unsigned char)3U;
  
#line 1096 
  iwl_power_update_mode(priv,(_Bool)0);
  return_label: 
#line 1097 
                return;
}


#line 1099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/calib.c"
void iwl_reset_run_time_calib(struct iwl_priv *priv)
{
  int i;
  
#line 1102 
  memset((void *)(& priv->sensitivity_data),0,144UL);
  
#line 1104 
  memset((void *)(& priv->chain_noise_data),0,40UL);
  
#line 1106 
  i = 0;
  
#line 1106 
  goto ldv_53171;
  ldv_53170: 
#line 1107 
  ;
  
#line 1107 
  priv->chain_noise_data.delta_gain_code[i] = (unsigned char)4U;
  
#line 1106 
  i += 1;
  ldv_53171: 
#line 1107 
  ;
  
#line 1106 
  if (i <= 2) 
#line 1108 
              goto ldv_53170; else 
#line 1111 
                                   goto ldv_53172;
  ldv_53172: 
#line 1112 
  ;
  
#line 1112 
  iwl_send_statistics_request(priv,(unsigned char)1,(_Bool)1);
  
#line 1113 
  return;
}


#line 414  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_calib.c.aux"
static void *kmalloc_5(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 417 
  tmp = ldv_kmalloc(size,flags);
  
#line 417 
  return tmp;
}


#line 752  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_calib.c.aux"
static void ldv_spin_lock_bh_74_0(spinlock_t *lock)
{
  
#line 756 
  ldv_spin_model_lock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 758 
  spin_lock_bh_3(lock);
  
#line 759 
  return;
}


#line 762  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_calib.c.aux"
static void ldv_spin_unlock_bh_75_0(spinlock_t *lock)
{
  
#line 766 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 768 
  spin_unlock_bh_3(lock);
  
#line 769 
  return;
}


#line 772  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_calib.c.aux"
static void ldv_spin_unlock_bh_76(spinlock_t *lock)
{
  
#line 776 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 778 
  spin_unlock_bh_3(lock);
  
#line 779 
  return;
}


#line 782  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_calib.c.aux"
static void ldv_spin_lock_bh_77(spinlock_t *lock)
{
  
#line 786 
  ldv_spin_model_lock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 788 
  spin_lock_bh_3(lock);
  
#line 789 
  return;
}


#line 792  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_calib.c.aux"
static void ldv_spin_unlock_bh_78(spinlock_t *lock)
{
  
#line 796 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 798 
  spin_unlock_bh_3(lock);
  
#line 799 
  return;
}


#line 802  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_calib.c.aux"
static void ldv_spin_unlock_bh_79_1(spinlock_t *lock)
{
  
#line 806 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 808 
  spin_unlock_bh_3(lock);
  
#line 809 
  return;
}


#line 812  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_calib.c.aux"
static void ldv_spin_unlock_bh_80_0(spinlock_t *lock)
{
  
#line 816 
  ldv_spin_model_unlock((char *)"lock_of_NOT_ARG_SIGN");
  
#line 818 
  spin_unlock_bh_3(lock);
  
#line 819 
  return;
}


#line 982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_set_pmi(struct iwl_trans *trans, bool state)
{
  
#line 984 
  if ((trans->ops)->set_pmi != (void (*)(struct iwl_trans *, bool ))0) 
    
#line 985 
    (*((trans->ops)->set_pmi))(trans,(_Bool)((bool)((int)state) != 0)); else ;
  
#line 986 
  return;
}


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.h"
int iwl_power_set_mode(struct iwl_priv *priv, struct iwl_powertable_cmd *cmd, bool force);


#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static void iwl_dvm_set_pmi(struct iwl_priv *priv, bool state)
{
  
#line 446 
  if ((int)state != 0) 
#line 447 
                       set_bit(13L,(unsigned long volatile *)(& priv->status)); else 
                                                                    
#line 449 
                                                                    set_bit(13L,(unsigned long volatile *)(& priv->status));
  
#line 450 
  iwl_trans_set_pmi(priv->trans,(_Bool)((bool)((int)state) != 0));
  
#line 451 
  return;
}


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static bool force_cam = (_Bool)1;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static struct iwl_power_vec_entry const range_0[5U] = {{.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 204800U, .tx_data_timeout = 512000U, .sleep_interval = {1U, 1U, 2U, 2U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 204800U, .tx_data_timeout = 307200U, .sleep_interval = {1U, 2U, 2U, 2U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 51200U, .tx_data_timeout = 102400U, .sleep_interval = {2U, 2U, 2U, 2U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 51200U, .tx_data_timeout = 25600U, .sleep_interval = {2U, 2U, 4U, 4U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)1U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 25600U, .tx_data_timeout = 25600U, .sleep_interval = {2U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)2U}};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static struct iwl_power_vec_entry const range_1[5U] = {{.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 204800U, .tx_data_timeout = 512000U, .sleep_interval = {1U, 2U, 3U, 4U, 4U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 204800U, .tx_data_timeout = 307200U, .sleep_interval = {1U, 2U, 3U, 4U, 7U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 51200U, .tx_data_timeout = 102400U, .sleep_interval = {2U, 4U, 6U, 7U, 9U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 51200U, .tx_data_timeout = 25600U, .sleep_interval = {2U, 4U, 6U, 9U, 10U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)1U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 25600U, .tx_data_timeout = 25600U, .sleep_interval = {2U, 4U, 6U, 10U, 10U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)2U}};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static struct iwl_power_vec_entry const range_2[5U] = {{.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 204800U, .tx_data_timeout = 512000U, .sleep_interval = {1U, 2U, 3U, 4U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 204800U, .tx_data_timeout = 307200U, .sleep_interval = {2U, 4U, 6U, 7U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 51200U, .tx_data_timeout = 102400U, .sleep_interval = {2U, 7U, 9U, 9U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 51200U, .tx_data_timeout = 25600U, .sleep_interval = {2U, 7U, 9U, 9U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)1U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 25600U, .tx_data_timeout = 25600U, .sleep_interval = {4U, 7U, 10U, 10U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static struct iwl_power_vec_entry const apm_range_0[5U] = {{.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 6U, 8U, 255U}, .keep_alive_beacons = 2U}, .no_dtim = (unsigned char)2U}};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static struct iwl_power_vec_entry const apm_range_1[5U] = {{.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 6U, 8U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)2U}};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static struct iwl_power_vec_entry const apm_range_2[5U] = {{.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 4U, 6U, 255U}, .keep_alive_beacons = 0U}, .no_dtim = (unsigned char)0U}, {.cmd = {.flags = (unsigned short)515U, .keep_alive_seconds = (unsigned char)0U, .debug_flags = (unsigned char)0U, .rx_data_timeout = 50U, .tx_data_timeout = 50U, .sleep_interval = {1U, 2U, 6U, 8U, 255U}, .keep_alive_beacons = 2U}, .no_dtim = (unsigned char)2U}};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static void iwl_static_sleep_cmd(struct iwl_priv *priv, struct iwl_powertable_cmd *cmd, enum iwl_power_level lvl, int period)
{
  struct iwl_power_vec_entry const *table;
  int i;
  u8 skip;
  u32 slp_itrvl;
  int tmp;
  bool tmp_0;
  
#line 164 
  int max_sleep[5U] = {0};
  
#line 169 
  if ((int)(priv->lib)->adv_pm != 0) {
    
#line 170 
    table = (struct iwl_power_vec_entry const *)(& apm_range_2);
    
#line 171 
    if (period <= 10) 
#line 172 
                      table = (struct iwl_power_vec_entry const *)(& apm_range_1); else ;
    
#line 173 
    if (period <= 2) 
#line 174 
                     table = (struct iwl_power_vec_entry const *)(& apm_range_0); else ;
  }
  else {
    
#line 176 
    table = (struct iwl_power_vec_entry const *)(& range_2);
    
#line 177 
    if (period <= 10) 
#line 178 
                      table = (struct iwl_power_vec_entry const *)(& range_1); else ;
    
#line 179 
    if (period <= 2) 
#line 180 
                     table = (struct iwl_power_vec_entry const *)(& range_0); else ;
  }
  {
    
#line 183 
    int __ret_warn_on = lvl > (unsigned int)IWL_POWER_INDEX_5;
    
#line 183 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 183 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c",183); else ;
    
#line 183 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 183 
  if ((long)tmp != 0L) 
#line 184 
                       memset((void *)cmd,0,36UL); else 
#line 186 
                                                        *cmd = (table + lvl)->cmd;
  
#line 188 
  if (period == 0) {
    
#line 189 
    skip = (unsigned char)0U;
    
#line 190 
    period = 1;
    
#line 191 
    i = 0;
    
#line 191 
    goto ldv_55136;
    ldv_55135: 
#line 192 
    ;
    
#line 192 
    max_sleep[i] = 1;
    
#line 191 
    i += 1;
    ldv_55136: 
#line 192 
    ;
    
#line 191 
    if (i <= 4) 
#line 193 
                goto ldv_55135; else 
#line 196 
                                     goto ldv_55137;
    ldv_55137: 
#line 197 
    ;
  }
  else {
    
#line 195 
    skip = (table + lvl)->no_dtim;
    
#line 196 
    i = 0;
    
#line 196 
    goto ldv_55139;
    ldv_55138: 
#line 197 
    ;
    
#line 197 
    max_sleep[i] = (int)cmd->sleep_interval[i];
    
#line 196 
    i += 1;
    ldv_55139: 
#line 197 
    ;
    
#line 196 
    if (i <= 4) 
#line 198 
                goto ldv_55138; else 
#line 201 
                                     goto ldv_55140;
    ldv_55140: 
#line 202 
    ;
    
#line 198 
    max_sleep[4] = (int)skip + 1;
  }
  
#line 201 
  slp_itrvl = cmd->sleep_interval[4];
  
#line 203 
  if (slp_itrvl == 255U) 
#line 204 
                         cmd->sleep_interval[4] = (unsigned int)(((int)skip + 1) * period); else ;
  
#line 207 
  slp_itrvl = cmd->sleep_interval[4];
  
#line 208 
  if (slp_itrvl > (unsigned int)period) 
#line 209 
                                        cmd->sleep_interval[4] = (slp_itrvl / (unsigned int)period) * (unsigned int)period; else ;
  
#line 212 
  if ((unsigned int)skip != 0U) 
#line 213 
                                cmd->flags = (unsigned short)((unsigned int)cmd->flags | 4U); else 
                                                                    
#line 215 
                                                                    cmd->flags = (unsigned short)((unsigned int)cmd->flags & 65531U);
  
#line 217 
  if ((int)((priv->cfg)->base_params)->shadow_reg_enable != 0) 
#line 218 
                                                               cmd->flags = (unsigned short)((unsigned int)cmd->flags | 64U); else 
                                                                    
#line 220 
                                                                    cmd->flags = (unsigned short)((unsigned int)cmd->flags & 65471U);
  
#line 222 
  tmp_0 = iwl_advanced_bt_coexist(priv);
  
#line 222 
  if ((int)tmp_0 != 0) 
    
#line 223 
    if (! ((priv->lib)->bt_params)->bt_sco_disable) 
#line 224 
                                                    cmd->flags = (unsigned short)((unsigned int)cmd->flags | 256U); else 
                                                                    
#line 226 
                                                                    cmd->flags = (unsigned short)((unsigned int)cmd->flags & 65279U);
  else ;
  
#line 230 
  slp_itrvl = cmd->sleep_interval[4];
  
#line 231 
  if (slp_itrvl > 10U) 
#line 232 
                       cmd->sleep_interval[4] = 10U; else ;
  
#line 236 
  i = 4;
  
#line 236 
  goto ldv_55142;
  ldv_55141: 
#line 237 
  ;
  
#line 237 
  if (cmd->sleep_interval[i] > (unsigned int)(max_sleep[i] * period)) 
    
#line 239 
    cmd->sleep_interval[i] = (unsigned int)(max_sleep[i] * period); else ;
  
#line 241 
  if (i != 4) {
    
#line 242 
    if (cmd->sleep_interval[i] > cmd->sleep_interval[i + 1]) 
#line 244 
                                                             cmd->sleep_interval[i] = cmd->sleep_interval[i + 1]; else ;
  }
  else ;
  
#line 236 
  i -= 1;
  ldv_55142: 
#line 237 
  ;
  
#line 236 
  if (i >= 0) 
#line 238 
              goto ldv_55141; else 
#line 241 
                                   goto ldv_55143;
  ldv_55143: 
#line 242 
  ;
  
#line 249 
  if ((int)priv->power_data.bus_pm != 0) 
#line 250 
                                         cmd->flags = (unsigned short)((unsigned int)cmd->flags | 8U); else 
                                                                    
#line 252 
                                                                    cmd->flags = (unsigned short)((unsigned int)cmd->flags & 65527U);
  {
    
#line 254 
    bool __cond = (_Bool)((int)*("numSkipDtim = %u, dtimPeriod = %d\n" + 33UL) != 10);
    
#line 254 
    if ((int)__cond != 0) 
#line 254 
                          __compiletime_assert_255(); else ;
  }
  
#line 254 
  __iwl_dbg(priv->dev,256U,(_Bool)0,"iwl_static_sleep_cmd","numSkipDtim = %u, dtimPeriod = %d\n",(int)skip,period);
  {
    
#line 258 
    bool __cond_0 = (_Bool)((int)*("Sleep command for index %d\n" + 26UL) != 10);
    
#line 258 
    if ((int)__cond_0 != 0) 
#line 258 
                            __compiletime_assert_258(); else ;
  }
  
#line 258 
  __iwl_dbg(priv->dev,256U,(_Bool)0,"iwl_static_sleep_cmd","Sleep command for index %d\n",(unsigned int)lvl + 1U);
  
#line 259 
  return;
}


#line 269 
void __compiletime_assert_269(void);


#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static void iwl_power_sleep_cam_cmd(struct iwl_priv *priv, struct iwl_powertable_cmd *cmd)
{
  
#line 264 
  memset((void *)cmd,0,36UL);
  
#line 266 
  if ((int)priv->power_data.bus_pm != 0) 
#line 267 
                                         cmd->flags = (unsigned short)((unsigned int)cmd->flags | 8U); else ;
  {
    
#line 269 
    bool __cond = (_Bool)((int)*("Sleep command for CAM\n" + 21UL) != 10);
    
#line 269 
    if ((int)__cond != 0) 
#line 269 
                          __compiletime_assert_269(); else ;
  }
  
#line 269 
  __iwl_dbg(priv->dev,256U,(_Bool)0,"iwl_power_sleep_cam_cmd","Sleep command for CAM\n");
  
#line 270 
  return;
}


#line 274 
void __compiletime_assert_274(void);


#line 276 
void __compiletime_assert_276(void);


#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static int iwl_set_power(struct iwl_priv *priv, struct iwl_powertable_cmd *cmd)
{
  int tmp;
  {
    
#line 274 
    bool __cond = (_Bool)((int)*("Sending power/sleep command\n" + 27UL) != 10);
    
#line 274 
    if ((int)__cond != 0) 
#line 274 
                          __compiletime_assert_274(); else ;
  }
  
#line 274 
  __iwl_dbg(priv->dev,256U,(_Bool)0,"iwl_set_power","Sending power/sleep command\n");
  {
    
#line 275 
    bool __cond_0 = (_Bool)((int)*("Flags value = 0x%08X\n" + 20UL) != 10);
    
#line 275 
    if ((int)__cond_0 != 0) 
#line 275 
                            __compiletime_assert_275(); else ;
  }
  
#line 275 
  __iwl_dbg(priv->dev,256U,(_Bool)0,"iwl_set_power","Flags value = 0x%08X\n",(int)cmd->flags);
  {
    
#line 276 
    bool __cond_1 = (_Bool)((int)*("Tx timeout = %u\n" + 15UL) != 10);
    
#line 276 
    if ((int)__cond_1 != 0) 
#line 276 
                            __compiletime_assert_276(); else ;
  }
  
#line 276 
  __iwl_dbg(priv->dev,256U,(_Bool)0,"iwl_set_power","Tx timeout = %u\n",cmd->tx_data_timeout);
  {
    
#line 277 
    bool __cond_2 = (_Bool)((int)*("Rx timeout = %u\n" + 15UL) != 10);
    
#line 277 
    if ((int)__cond_2 != 0) 
#line 277 
                            __compiletime_assert_277(); else ;
  }
  
#line 277 
  __iwl_dbg(priv->dev,256U,(_Bool)0,"iwl_set_power","Rx timeout = %u\n",cmd->rx_data_timeout);
  {
    
#line 278 
    bool __cond_3 = (_Bool)((int)*("Sleep interval vector = { %d , %d , %d , %d , %d }\n" + 50UL) != 10);
    
#line 278 
    if ((int)__cond_3 != 0) 
#line 278 
                            __compiletime_assert_283(); else ;
  }
  
#line 278 
  __iwl_dbg(priv->dev,256U,(_Bool)0,"iwl_set_power","Sleep interval vector = { %d , %d , %d , %d , %d }\n",cmd->sleep_interval[0],cmd->sleep_interval[1],cmd->sleep_interval[2],cmd->sleep_interval[3],cmd->sleep_interval[4]);
  
#line 285 
  tmp = iwl_dvm_send_cmd_pdu(priv,(unsigned char)119,0U,(unsigned short)36,(void const *)cmd);
  
#line 285 
  return tmp;
}


#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
static void iwl_power_build_cmd(struct iwl_priv *priv, struct iwl_powertable_cmd *cmd)
{
  int dtimper;
  int tmp;
  
#line 292 
  bool enabled = (_Bool)(((priv->hw)->conf.flags & 2U) != 0U);
  
#line 295 
  if ((int)force_cam != 0) {
    
#line 296 
    iwl_power_sleep_cam_cmd(priv,cmd);
    
#line 297 
    goto return_label;
  }
  else ;
  
#line 300 
  tmp = (int)(priv->hw)->conf.ps_dtim_period != 0;
  
#line 300 
  if (tmp) ; else 
#line 300 
                  tmp = 1;
  
#line 300 
  dtimper = tmp;
  
#line 302 
  if ((int)priv->wowlan != 0) 
#line 303 
                              iwl_static_sleep_cmd(priv,cmd,(enum iwl_power_level)IWL_POWER_INDEX_5,dtimper);
  else 
    
#line 304 
    if (! (priv->lib)->no_idle_support && ((priv->hw)->conf.flags & 4U) != 0U) 
      
#line 306 
      iwl_static_sleep_cmd(priv,cmd,(enum iwl_power_level)IWL_POWER_INDEX_5,20);
    else {
      bool tmp_1;
      
#line 307 
      tmp_1 = iwl_tt_is_low_power_state(priv);
      
#line 307 
      if ((int)tmp_1 != 0) {
        u8 tmp_0;
        
#line 309 
        ;
        
#line 310 
        tmp_0 = iwl_tt_current_power_mode(priv);
        
#line 309 
        ;
        
#line 309 
        ;
        
#line 309 
        iwl_static_sleep_cmd(priv,cmd,(enum iwl_power_level)tmp_0,dtimper);
      }
      else 
        
#line 311 
        if (! enabled) 
#line 312 
                       iwl_power_sleep_cam_cmd(priv,cmd);
        else 
          
#line 313 
          if (priv->power_data.debug_sleep_level_override >= 0) 
#line 314 
                                                                iwl_static_sleep_cmd(priv,cmd,(enum iwl_power_level)priv->power_data.debug_sleep_level_override,dtimper);
          else 
            
#line 320 
            if ((unsigned int)iwlwifi_mod_params.power_level + 4294967295U <= 4U) 
              
#line 322 
              iwl_static_sleep_cmd(priv,cmd,(enum iwl_power_level)(iwlwifi_mod_params.power_level + -1),dtimper); else 
                                                                    
#line 325 
                                                                    iwl_static_sleep_cmd(priv,cmd,(enum iwl_power_level)IWL_POWER_INDEX_1,dtimper);
    }
  return_label: 
#line 326 
                return;
}


#line 366 
void __compiletime_assert_369(void);


#line 373 
void __compiletime_assert_373(void);


#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
int iwl_power_set_mode(struct iwl_priv *priv, struct iwl_powertable_cmd *cmd, bool force)
{
  int __retres;
  int ret;
  bool update_chains;
  int tmp_1;
  int tmp_2_0;
  int tmp_3;
  {
    int tmp_0;
    
#line 336 
    if (debug_locks != 0) {
      int tmp;
      
#line 336 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 336 
      if (tmp == 0) 
#line 336 
                    tmp_0 = 1; else 
#line 336 
                                    tmp_0 = 0;
    }
    else 
#line 336 
         tmp_0 = 0;
    
#line 336 
    int __ret_warn_on = tmp_0;
    
#line 336 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 336 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c",336); else ;
    
#line 336 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 339 
  update_chains = (_Bool)(((unsigned int)priv->chain_noise_data.state == 3U || (unsigned int)priv->chain_noise_data.state == 0U) != 0);
  
#line 342 
  tmp_1 = memcmp((void const *)(& priv->power_data.sleep_cmd),(void const *)cmd,36UL);
  
#line 342 
  if (tmp_1 == 0) {
    
#line 342 
    if (! force) {
      
#line 343 
      __retres = 0;
      
#line 343 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 345 
  tmp_2_0 = iwl_is_ready_rf(priv);
  
#line 345 
  if (tmp_2_0 == 0) {
    
#line 346 
    __retres = -5;
    
#line 346 
    goto return_label;
  }
  else ;
  
#line 349 
  memcpy((void *)(& priv->power_data.sleep_cmd_next),(void const *)cmd,36UL);
  
#line 350 
  tmp_3 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
  
#line 350 
  if (tmp_3 != 0) {
    
#line 350 
    if (! force) {
      {
        
#line 351 
        bool __cond = (_Bool)((int)*("Defer power set mode while scanning\n" + 35UL) != 10);
        
#line 351 
        if ((int)__cond != 0) 
#line 351 
                              __compiletime_assert_351(); else ;
      }
      
#line 351 
      __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_power_set_mode","Defer power set mode while scanning\n");
      
#line 352 
      __retres = 0;
      
#line 352 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 355 
  if (((int)cmd->flags & 1) != 0) 
#line 356 
                                  iwl_dvm_set_pmi(priv,(_Bool)1); else ;
  
#line 358 
  ret = iwl_set_power(priv,cmd);
  
#line 359 
  if (ret == 0) {
    
#line 360 
    if (((int)cmd->flags & 1) == 0) 
#line 361 
                                    iwl_dvm_set_pmi(priv,(_Bool)0); else ;
    
#line 363 
    if ((int)update_chains != 0) 
#line 364 
                                 iwl_update_chain_flags(priv);
    else {
      {
        
#line 366 
        bool __cond_0 = (_Bool)((int)*("Cannot update the power, chain noise " + 60UL) != 10);
        
#line 366 
        if ((int)__cond_0 != 0) 
#line 366 
                                __compiletime_assert_369(); else ;
      }
      
#line 366 
      __iwl_dbg(priv->dev,256U,(_Bool)0,"iwl_power_set_mode","Cannot update the power, chain noise ",(int)priv->chain_noise_data.state);
    }
    
#line 371 
    memcpy((void *)(& priv->power_data.sleep_cmd),(void const *)cmd,36UL);
  }
  else {
    {
      
#line 373 
      bool __cond_1 = (_Bool)((int)*("set power fail, ret = %d\n" + 24UL) != 10);
      
#line 373 
      if ((int)__cond_1 != 0) 
#line 373 
                              __compiletime_assert_373(); else ;
    }
    
#line 373 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"set power fail, ret = %d\n",ret);
  }
  
#line 375 
  __retres = ret;
  return_label: 
#line 375 
                return __retres;
}


#line 378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
int iwl_power_update_mode(struct iwl_priv *priv, bool force)
{
  struct iwl_powertable_cmd cmd;
  int tmp;
  
#line 382 
  iwl_power_build_cmd(priv,& cmd);
  
#line 383 
  tmp = iwl_power_set_mode(priv,& cmd,(_Bool)((bool)((int)force) != 0));
  
#line 383 
  return tmp;
}


#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/power.c"
void iwl_power_initialize(struct iwl_priv *priv)
{
  
#line 389 
  priv->power_data.bus_pm = (priv->trans)->pm_support;
  
#line 391 
  priv->power_data.debug_sleep_level_override = -1;
  
#line 393 
  memset((void *)(& priv->power_data.sleep_cmd),0,36UL);
  
#line 394 
  return;
}


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rxon.c.aux"
static void ldv_mutex_lock_74_3(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_76_2(struct mutex *ldv_func_arg1);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  rcu_read_lock_sched_notrace();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  rcu_read_unlock_sched_notrace();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_75_3(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_77_2(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_79_2(struct mutex *ldv_func_arg1);


#line 4747  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta *ieee80211_find_sta(struct ieee80211_vif *, u8 const *);


#line 5233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static bool conf_is_ht40_minus(struct ieee80211_conf *conf)
{
  bool __retres;
  
#line 5235 
  __retres = (_Bool)((conf->chandef.width == (unsigned int)NL80211_CHAN_WIDTH_40 && conf->chandef.center_freq1 < (unsigned int)(conf->chandef.chan)->center_freq) != 0);
  
#line 5235 
  return __retres;
}


#line 5240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static bool conf_is_ht40_plus(struct ieee80211_conf *conf)
{
  bool __retres;
  
#line 5242 
  __retres = (_Bool)((conf->chandef.width == (unsigned int)NL80211_CHAN_WIDTH_40 && conf->chandef.center_freq1 > (unsigned int)(conf->chandef.chan)->center_freq) != 0);
  
#line 5242 
  return __retres;
}


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/dev.h"
__inline static int iwl_is_any_associated_3(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_rxon_context *ctx;
  
#line 942 
  ctx = & priv->contexts[0];
  
#line 942 
  goto ldv_52463;
  ldv_52462: 
#line 943 
  ;
  
#line 942 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    int tmp;
    
#line 943 
    tmp = iwl_is_associated_ctx(ctx);
    
#line 943 
    if (tmp != 0) {
      
#line 944 
      __retres = 1;
      
#line 944 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 942 
  ctx += 1;
  ldv_52463: 
#line 943 
  ;
  
#line 942 
  if (& priv->contexts[2] > ctx) 
#line 944 
                                 goto ldv_52462; else 
#line 947 
                                                      goto ldv_52464;
  ldv_52464: 
#line 948 
  ;
  
#line 945 
  __retres = 0;
  return_label: 
#line 945 
                return __retres;
}


#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
void iwlagn_config_ht40(struct ieee80211_conf *conf, struct iwl_rxon_context *ctx);


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
void __compiletime_assert_68(void);


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
void iwl_connection_init_rx_config(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  
#line 40 
  memset((void *)(& ctx->staging),0,50UL);
  
#line 42 
  if (ctx->vif == (struct ieee80211_vif *)0) 
#line 43 
                                             ctx->staging.dev_type = ctx->unused_devtype;
  else {
    
#line 45 
    switch ((unsigned int)(ctx->vif)->type) {
      case (unsigned int)3: 
#line 46 
      ;
      
#line 47 
      ctx->staging.dev_type = ctx->ap_devtype;
      
#line 48 
      goto ldv_52879;
      case (unsigned int)2: 
#line 50 
      ;
      
#line 51 
      ctx->staging.dev_type = ctx->station_devtype;
      
#line 52 
      ctx->staging.filter_flags = 4U;
      
#line 53 
      goto ldv_52879;
      case (unsigned int)1: 
#line 55 
      ;
      
#line 56 
      ctx->staging.dev_type = ctx->ibss_devtype;
      
#line 57 
      ctx->staging.flags = 32U;
      
#line 58 
      ctx->staging.filter_flags = 68U;
      
#line 60 
      goto ldv_52879;
      case (unsigned int)6: 
#line 62 
      ;
      
#line 63 
      ctx->staging.dev_type = (unsigned char)6U;
      
#line 64 
      goto ldv_52879;
      default: 
#line 66 
      ;
      {
        
#line 67 
        bool __cond = (_Bool)((int)*("Unsupported interface type %d\n" + 29UL) != 10);
        
#line 67 
        if ((int)__cond != 0) 
#line 67 
                              __compiletime_assert_68(); else ;
      }
      
#line 67 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unsupported interface type %d\n",(unsigned int)(ctx->vif)->type);
      
#line 69 
      goto ldv_52879;
    }
    ldv_52879: 
#line 81 
    ;
  }
  
#line 81 
  ctx->staging.channel = ((priv->hw)->conf.chandef.chan)->hw_value;
  
#line 83 
  priv->band = ((priv->hw)->conf.chandef.chan)->band;
  
#line 85 
  iwl_set_flags_for_band(priv,ctx,priv->band,ctx->vif);
  
#line 88 
  ctx->staging.flags &= 4194303999U;
  
#line 90 
  if (ctx->vif != (struct ieee80211_vif *)0) 
#line 91 
                                             memcpy((void *)(& ctx->staging.node_addr),(void const *)(& (ctx->vif)->addr),6UL); else ;
  
#line 93 
  ctx->staging.ofdm_ht_single_stream_basic_rates = (unsigned char)255U;
  
#line 94 
  ctx->staging.ofdm_ht_dual_stream_basic_rates = (unsigned char)255U;
  
#line 95 
  ctx->staging.ofdm_ht_triple_stream_basic_rates = (unsigned char)255U;
  
#line 96 
  return;
}


#line 112 
void __compiletime_assert_113(void);


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwlagn_disable_bss(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct iwl_rxon_cmd *send)
{
  int ret;
  
#line 102 
  __le32 old_filter = send->filter_flags;
  
#line 105 
  send->filter_flags &= 4294967263U;
  
#line 106 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)((int)ctx->rxon_cmd),0U,(unsigned short)50,(void const *)send);
  
#line 109 
  send->filter_flags = old_filter;
  
#line 111 
  if (ret != 0) {
    int tmp_1;
    
#line 112 
    tmp_1 = iwl_is_rfkill(priv);
    
#line 112 
    if (tmp_1 == 0) {
      {
        
#line 112 
        bool __cond = (_Bool)((int)*("Error clearing ASSOC_MSK on BSS (%d)\n" + 36UL) != 10);
        
#line 112 
        if ((int)__cond != 0) 
#line 112 
                              __compiletime_assert_113(); else ;
      }
      
#line 112 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error clearing ASSOC_MSK on BSS (%d)\n",ret);
    }
    else {
      int tmp_0;
      bool tmp;
      
#line 112 
      ;
      
#line 112 
      tmp = iwl_have_debug_level(128U);
      
#line 112 
      if ((int)tmp != 0) 
#line 112 
                         tmp_0 = 0; else 
#line 112 
                                         tmp_0 = 1;
      
#line 112 
      ;
      
#line 112 
      __iwl_err(priv->dev,(_Bool)1,(_Bool)((int)((_Bool)(tmp_0 != 0))),"Error clearing ASSOC_MSK on BSS (%d)\n",ret);
    }
  }
  else ;
  
#line 115 
  return ret;
}


#line 143 
void __compiletime_assert_143(void);


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwlagn_disable_pan(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct iwl_rxon_cmd *send)
{
  struct iwl_notification_wait disable_wait;
  int ret;
  
#line 123 
  __le32 old_filter = send->filter_flags;
  
#line 124 
  u8 old_dev_type = send->dev_type;
  
#line 126 
  u8 const deactivate_cmd[1U] = {(unsigned char)189U};
  
#line 130 
  iwl_init_notification_wait(& priv->notif_wait,& disable_wait,(u8 const *)(& deactivate_cmd),1,(bool (*)(struct iwl_notif_wait_data *, struct iwl_rx_packet *, void *))0,(void *)0);
  
#line 134 
  send->filter_flags &= 4294967263U;
  
#line 135 
  send->dev_type = (unsigned char)9U;
  
#line 136 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)((int)ctx->rxon_cmd),0U,(unsigned short)50,(void const *)send);
  
#line 139 
  send->filter_flags = old_filter;
  
#line 140 
  send->dev_type = old_dev_type;
  
#line 142 
  if (ret != 0) {
    {
      
#line 143 
      bool __cond = (_Bool)((int)*("Error disabling PAN (%d)\n" + 24UL) != 10);
      
#line 143 
      if ((int)__cond != 0) 
#line 143 
                            __compiletime_assert_143(); else ;
    }
    
#line 143 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error disabling PAN (%d)\n",ret);
    
#line 144 
    iwl_remove_notification(& priv->notif_wait,& disable_wait);
  }
  else {
    
#line 146 
    ret = iwl_wait_notification(& priv->notif_wait,& disable_wait,250UL);
    
#line 148 
    if (ret != 0) {
      {
        
#line 149 
        bool __cond_0 = (_Bool)((int)*("Timed out waiting for PAN disable\n" + 33UL) != 10);
        
#line 149 
        if ((int)__cond_0 != 0) 
#line 149 
                                __compiletime_assert_149(); else ;
      }
      
#line 149 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Timed out waiting for PAN disable\n");
    }
    else ;
  }
  
#line 152 
  return ret;
}


#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwlagn_disconn_pan(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct iwl_rxon_cmd *send)
{
  int ret;
  
#line 159 
  __le32 old_filter = send->filter_flags;
  
#line 162 
  send->filter_flags &= 4294967263U;
  
#line 163 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)((int)ctx->rxon_cmd),0U,(unsigned short)50,(void const *)send);
  
#line 166 
  send->filter_flags = old_filter;
  
#line 168 
  return ret;
}


#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static void iwlagn_update_qos(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int ret;
  
#line 176 
  if (! ctx->is_active) 
#line 177 
                        goto return_label; else ;
  
#line 179 
  ctx->qos_data.def_qos_parm.qos_flags = 0U;
  
#line 181 
  if (ctx->qos_data.qos_active != 0) 
#line 182 
                                     ctx->qos_data.def_qos_parm.qos_flags |= 1U; else ;
  
#line 185 
  if ((int)ctx->ht.enabled != 0) 
#line 186 
                                 ctx->qos_data.def_qos_parm.qos_flags |= 2U; else ;
  {
    
#line 188 
    bool __cond = (_Bool)((int)*("send QoS cmd with Qos active=%d FLAGS=0x%X\n" + 42UL) != 10);
    
#line 188 
    if ((int)__cond != 0) 
#line 188 
                          __compiletime_assert_190(); else ;
  }
  
#line 188 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_update_qos","send QoS cmd with Qos active=%d FLAGS=0x%X\n",ctx->qos_data.qos_active,ctx->qos_data.def_qos_parm.qos_flags);
  
#line 192 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)((int)ctx->qos_cmd),0U,(unsigned short)36,(void const *)(& ctx->qos_data.def_qos_parm));
  
#line 195 
  if (ret != 0) {
    int tmp_1;
    
#line 196 
    tmp_1 = iwl_is_rfkill(priv);
    
#line 196 
    if (tmp_1 == 0) {
      {
        
#line 196 
        bool __cond_0 = (_Bool)((int)*("Failed to update QoS\n" + 20UL) != 10);
        
#line 196 
        if ((int)__cond_0 != 0) 
#line 196 
                                __compiletime_assert_196(); else ;
      }
      
#line 196 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Failed to update QoS\n");
    }
    else {
      int tmp_0;
      bool tmp;
      
#line 196 
      tmp = iwl_have_debug_level(128U);
      
#line 196 
      if ((int)tmp != 0) 
#line 196 
                         tmp_0 = 0; else 
#line 196 
                                         tmp_0 = 1;
      
#line 196 
      ;
      
#line 196 
      __iwl_err(priv->dev,(_Bool)1,(_Bool)((int)((_Bool)(tmp_0 != 0))),"Failed to update QoS\n");
    }
  }
  else ;
  return_label: 
#line 197 
                return;
}


#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwlagn_update_beacon(struct iwl_priv *priv, struct ieee80211_vif *vif)
{
  int __retres;
  int tmp_1;
  {
    int tmp_0;
    
#line 202 
    if (debug_locks != 0) {
      int tmp;
      
#line 202 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 202 
      if (tmp == 0) 
#line 202 
                    tmp_0 = 1; else 
#line 202 
                                    tmp_0 = 0;
    }
    else 
#line 202 
         tmp_0 = 0;
    
#line 202 
    int __ret_warn_on = tmp_0;
    
#line 202 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 202 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c",202); else ;
    
#line 202 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 204 
  consume_skb(priv->beacon_skb);
  
#line 205 
  priv->beacon_skb = ieee80211_beacon_get(priv->hw,vif);
  
#line 206 
  if (priv->beacon_skb == (struct sk_buff *)0) {
    
#line 207 
    __retres = -12;
    
#line 207 
    goto return_label;
  }
  else ;
  
#line 208 
  tmp_1 = iwlagn_send_beacon_cmd(priv);
  
#line 208 
  __retres = tmp_1;
  return_label: 
#line 208 
                return __retres;
}


#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwlagn_send_rxon_assoc(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int __retres;
  struct iwl_rxon_assoc_cmd rxon_assoc;
  
#line 214 
  int ret = 0;
  
#line 216 
  struct iwl_rxon_cmd const *rxon1 = (struct iwl_rxon_cmd const *)(& ctx->staging);
  
#line 217 
  struct iwl_rxon_cmd const *rxon2 = & ctx->active;
  
#line 219 
  if ((((((((rxon1->flags == rxon2->flags && rxon1->filter_flags == rxon2->filter_flags) && (int)rxon1->cck_basic_rates == (int)rxon2->cck_basic_rates) && (int)rxon1->ofdm_ht_single_stream_basic_rates == (int)rxon2->ofdm_ht_single_stream_basic_rates) && (int)rxon1->ofdm_ht_dual_stream_basic_rates == (int)rxon2->ofdm_ht_dual_stream_basic_rates) && (int)rxon1->ofdm_ht_triple_stream_basic_rates == (int)rxon2->ofdm_ht_triple_stream_basic_rates) && (int)rxon1->acquisition_data == (int)rxon2->acquisition_data) && (int)rxon1->rx_chain == (int)rxon2->rx_chain) && (int)rxon1->ofdm_basic_rates == (int)rxon2->ofdm_basic_rates) {
    {
      
#line 231 
      bool __cond = (_Bool)((int)*("Using current RXON_ASSOC.  Not resending.\n" + 41UL) != 10);
      
#line 231 
      if ((int)__cond != 0) 
#line 231 
                            __compiletime_assert_231(); else ;
    }
    
#line 231 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_send_rxon_assoc","Using current RXON_ASSOC.  Not resending.\n");
    
#line 232 
    __retres = 0;
    
#line 232 
    goto return_label;
  }
  else ;
  
#line 235 
  rxon_assoc.flags = ctx->staging.flags;
  
#line 236 
  rxon_assoc.filter_flags = ctx->staging.filter_flags;
  
#line 237 
  rxon_assoc.ofdm_basic_rates = ctx->staging.ofdm_basic_rates;
  
#line 238 
  rxon_assoc.cck_basic_rates = ctx->staging.cck_basic_rates;
  
#line 239 
  rxon_assoc.reserved1 = (unsigned short)0U;
  
#line 240 
  rxon_assoc.reserved2 = (unsigned char)0U;
  
#line 241 
  rxon_assoc.reserved3 = 0U;
  
#line 242 
  rxon_assoc.ofdm_ht_single_stream_basic_rates = ctx->staging.ofdm_ht_single_stream_basic_rates;
  
#line 244 
  rxon_assoc.ofdm_ht_dual_stream_basic_rates = ctx->staging.ofdm_ht_dual_stream_basic_rates;
  
#line 246 
  rxon_assoc.rx_chain_select_flags = ctx->staging.rx_chain;
  
#line 247 
  rxon_assoc.ofdm_ht_triple_stream_basic_rates = ctx->staging.ofdm_ht_triple_stream_basic_rates;
  
#line 249 
  rxon_assoc.acquisition_data = ctx->staging.acquisition_data;
  
#line 251 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)((int)ctx->rxon_assoc_cmd),1U,(unsigned short)24,(void const *)(& rxon_assoc));
  
#line 253 
  __retres = ret;
  return_label: 
#line 253 
                return __retres;
}


#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static u16 iwl_adjust_beacon_interval(u16 beacon_val, u16 max_beacon_val)
{
  u16 __retres;
  u16 new_val;
  u16 beacon_factor;
  
#line 267 
  if ((unsigned int)beacon_val == 0U) {
    
#line 268 
    __retres = (unsigned short)200U;
    
#line 268 
    goto return_label;
  }
  else ;
  
#line 282 
  beacon_factor = (unsigned short)(((int)beacon_val + (int)max_beacon_val) / (int)max_beacon_val);
  
#line 283 
  new_val = (unsigned short)((int)beacon_val / (int)beacon_factor);
  
#line 285 
  if ((unsigned int)new_val == 0U) 
#line 286 
                                   new_val = max_beacon_val; else ;
  
#line 288 
  __retres = new_val;
  return_label: 
#line 288 
                return __retres;
}


#line 349 
void __compiletime_assert_353(void);


#line 291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwl_send_rxon_timing(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  u64 tsf;
  s32 interval_tm;
  s32 rem;
  u16 beacon_int;
  uint32_t tmp_4;
  int tmp_6;
  
#line 296 
  struct ieee80211_conf *conf = (struct ieee80211_conf *)0;
  
#line 298 
  struct ieee80211_vif *vif = ctx->vif;
  
#line 300 
  conf = & (priv->hw)->conf;
  {
    int tmp_0;
    
#line 302 
    if (debug_locks != 0) {
      int tmp;
      
#line 302 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 302 
      if (tmp == 0) 
#line 302 
                    tmp_0 = 1; else 
#line 302 
                                    tmp_0 = 0;
    }
    else 
#line 302 
         tmp_0 = 0;
    
#line 302 
    int __ret_warn_on = tmp_0;
    
#line 302 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 302 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c",302); else ;
    
#line 302 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 304 
  memset((void *)(& ctx->timing),0,20UL);
  
#line 306 
  ctx->timing.timestamp = priv->timestamp;
  
#line 307 
  ctx->timing.listen_interval = conf->listen_interval;
  
#line 309 
  if (vif != (struct ieee80211_vif *)0) 
#line 309 
                                        beacon_int = vif->bss_conf.beacon_int; else 
                                                                    
#line 309 
                                                                    beacon_int = (unsigned short)0U;
  
#line 315 
  ctx->timing.atim_window = (unsigned short)0U;
  
#line 317 
  if (ctx->ctxid == (unsigned int)IWL_RXON_CTX_PAN && (ctx->vif == (struct ieee80211_vif *)0 || (ctx->vif)->type != (unsigned int)NL80211_IFTYPE_STATION)) {
    int tmp_3;
    
#line 318 
    tmp_3 = iwl_is_associated(priv,(enum iwl_rxon_context_id)IWL_RXON_CTX_BSS);
    
#line 318 
    if (tmp_3 != 0) {
      
#line 319 
      if (priv->contexts[0].vif != (struct ieee80211_vif *)0) {
        
#line 320 
        if ((unsigned int)(priv->contexts[0].vif)->bss_conf.beacon_int != 0U) {
          
#line 322 
          ctx->timing.beacon_interval = priv->contexts[0].timing.beacon_interval;
          
#line 324 
          beacon_int = ctx->timing.beacon_interval;
        }
        else 
#line 317 
             goto _LAND_5;
      }
      else 
#line 317 
           goto _LAND_5;
    }
    else 
#line 317 
         goto _LAND_5;
  }
  else {
    _LAND_5: 
#line 325 
    ;
    
#line 325 
    if (ctx->ctxid == (unsigned int)IWL_RXON_CTX_BSS) {
      int tmp_1;
      
#line 325 
      tmp_1 = iwl_is_associated(priv,(enum iwl_rxon_context_id)IWL_RXON_CTX_PAN);
      
#line 325 
      if (tmp_1 != 0) {
        
#line 326 
        if (priv->contexts[1].vif != (struct ieee80211_vif *)0) {
          
#line 327 
          if ((unsigned int)(priv->contexts[1].vif)->bss_conf.beacon_int != 0U) {
            int tmp_2_0;
            
#line 328 
            tmp_2_0 = iwl_is_associated_ctx(ctx);
            
#line 328 
            if (tmp_2_0 == 0) 
#line 325 
                              goto _LOR;
            else 
              
#line 329 
              if (ctx->vif == (struct ieee80211_vif *)0) 
#line 325 
                                                         goto _LOR;
              else 
                
#line 329 
                if ((unsigned int)(ctx->vif)->bss_conf.beacon_int == 0U) {
                  _LOR: {
                          
#line 331 
                          ctx->timing.beacon_interval = priv->contexts[1].timing.beacon_interval;
                          
#line 333 
                          beacon_int = ctx->timing.beacon_interval;
                        }
                }
                else 
#line 325 
                     goto _LAND_2;
          }
          else 
#line 325 
               goto _LAND_2;
        }
        else 
#line 325 
             goto _LAND_2;
      }
      else 
#line 325 
           goto _LAND_2;
    }
    else {
      _LAND_2: {
                 
#line 335 
                 beacon_int = iwl_adjust_beacon_interval((unsigned short)((int)beacon_int),(unsigned short)4096);
                 
#line 337 
                 ctx->timing.beacon_interval = beacon_int;
               }
    }
  }
  
#line 340 
  ctx->beacon_int = (int)beacon_int;
  
#line 342 
  tsf = priv->timestamp;
  
#line 343 
  interval_tm = (int)beacon_int * 1024;
  {
    uint32_t __rem;
    
#line 344 
    uint32_t __base = (unsigned int)interval_tm;
    
#line 344 
    __rem = (unsigned int)(tsf % (unsigned long long)__base);
    
#line 344 
    tsf /= (unsigned long long)__base;
    
#line 344 
    tmp_4 = __rem;
  }
  
#line 344 
  rem = (int)tmp_4;
  
#line 345 
  ctx->timing.beacon_init_val = (unsigned int)(interval_tm - rem);
  
#line 347 
  if (vif != (struct ieee80211_vif *)0) {
    unsigned int tmp_5;
    
#line 347 
    if ((int)vif->bss_conf.dtim_period != 0) 
#line 347 
                                             tmp_5 = (unsigned int)((unsigned char)((int)vif->bss_conf.dtim_period)); else 
                                                                    
#line 347 
                                                                    tmp_5 = 1U;
    
#line 347 
    ctx->timing.dtim_period = (unsigned char)tmp_5;
  }
  else 
#line 347 
       ctx->timing.dtim_period = (unsigned char)1U;
  {
    
#line 349 
    bool __cond = (_Bool)((int)*("beacon interval %d beacon timer %d beacon tim %d\n" + 48UL) != 10);
    
#line 349 
    if ((int)__cond != 0) 
#line 349 
                          __compiletime_assert_353(); else ;
  }
  
#line 349 
  __iwl_dbg(priv->dev,4097U,(_Bool)0,"iwl_send_rxon_timing","beacon interval %d beacon timer %d beacon tim %d\n",(int)ctx->timing.beacon_interval,ctx->timing.beacon_init_val,(int)ctx->timing.atim_window);
  
#line 355 
  tmp_6 = iwl_dvm_send_cmd_pdu(priv,(unsigned char)((int)ctx->rxon_timing_cmd),0U,(unsigned short)20,(void const *)(& ctx->timing));
  
#line 355 
  return tmp_6;
}


#line 374 
void __compiletime_assert_374(void);


#line 393 
void __compiletime_assert_393(void);


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwlagn_rxon_disconn(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int __retres;
  int ret;
  
#line 363 
  struct iwl_rxon_cmd *active = (struct iwl_rxon_cmd *)(& ctx->active);
  
#line 365 
  if (ctx->ctxid == (unsigned int)IWL_RXON_CTX_BSS) 
#line 366 
                                                    ret = iwlagn_disable_bss(priv,ctx,& ctx->staging);
  else {
    
#line 368 
    ret = iwlagn_disable_pan(priv,ctx,& ctx->staging);
    
#line 369 
    if (ret != 0) {
      
#line 370 
      __retres = ret;
      
#line 370 
      goto return_label;
    }
    else ;
    
#line 371 
    if (ctx->vif != (struct ieee80211_vif *)0) {
      
#line 372 
      ret = iwl_send_rxon_timing(priv,ctx);
      
#line 373 
      if (ret != 0) {
        {
          
#line 374 
          bool __cond = (_Bool)((int)*("Failed to send timing (%d)!\n" + 27UL) != 10);
          
#line 374 
          if ((int)__cond != 0) 
#line 374 
                                __compiletime_assert_374(); else ;
        }
        
#line 374 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Failed to send timing (%d)!\n",ret);
        
#line 375 
        __retres = ret;
        
#line 375 
        goto return_label;
      }
      else ;
      
#line 377 
      ret = iwlagn_disconn_pan(priv,ctx,& ctx->staging);
    }
    else ;
  }
  
#line 380 
  if (ret != 0) {
    
#line 381 
    __retres = ret;
    
#line 381 
    goto return_label;
  }
  else ;
  
#line 387 
  iwl_clear_ucode_stations(priv,ctx);
  
#line 389 
  iwl_update_bcast_station(priv,ctx);
  
#line 390 
  iwl_restore_stations(priv,ctx);
  
#line 391 
  ret = iwl_restore_default_wep_keys(priv,ctx);
  
#line 392 
  if (ret != 0) {
    {
      
#line 393 
      bool __cond_0 = (_Bool)((int)*("Failed to restore WEP keys (%d)\n" + 31UL) != 10);
      
#line 393 
      if ((int)__cond_0 != 0) 
#line 393 
                              __compiletime_assert_393(); else ;
    }
    
#line 393 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Failed to restore WEP keys (%d)\n",ret);
    
#line 394 
    __retres = ret;
    
#line 394 
    goto return_label;
  }
  else ;
  
#line 397 
  memcpy((void *)active,(void const *)(& ctx->staging),50UL);
  
#line 398 
  __retres = 0;
  return_label: 
#line 398 
                return __retres;
}


#line 425 
void __compiletime_assert_427(void);


#line 442 
void __compiletime_assert_442(void);


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwl_set_tx_power(struct iwl_priv *priv, s8 tx_power, bool force)
{
  int __retres;
  int ret;
  s8 prev_tx_power;
  bool defer;
  int tmp_1;
  int tmp_4;
  int tmp_2_0;
  
#line 406 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 408 
  if ((priv->calib_disabled & 4U) != 0U) {
    
#line 409 
    __retres = 0;
    
#line 409 
    goto return_label;
  }
  else ;
  {
    int tmp_0;
    
#line 411 
    if (debug_locks != 0) {
      int tmp;
      
#line 411 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 411 
      if (tmp == 0) 
#line 411 
                    tmp_0 = 1; else 
#line 411 
                                    tmp_0 = 0;
    }
    else 
#line 411 
         tmp_0 = 0;
    
#line 411 
    int __ret_warn_on = tmp_0;
    
#line 411 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 411 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c",411); else ;
    
#line 411 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 413 
  if ((int)priv->tx_power_user_lmt == (int)tx_power && ! force) {
    
#line 414 
    __retres = 0;
    
#line 414 
    goto return_label;
  }
  else ;
  
#line 416 
  if ((int)tx_power < 0) {
    {
      
#line 417 
      bool __cond = (_Bool)((int)*("Requested user TXPOWER %d below lower limit %d.\n" + 47UL) != 10);
      
#line 417 
      if ((int)__cond != 0) 
#line 417 
                            __compiletime_assert_420(); else ;
    }
    
#line 417 
    __iwl_warn(priv->dev,"Requested user TXPOWER %d below lower limit %d.\n",(int)tx_power,0);
    
#line 421 
    __retres = -22;
    
#line 421 
    goto return_label;
  }
  else ;
  
#line 424 
  if ((int)tx_power > ((int)(priv->nvm_data)->max_tx_pwr_half_dbm + 1) / 2) {
    {
      
#line 425 
      bool __cond_0 = (_Bool)((int)*("Requested user TXPOWER %d above upper limit %d.\n" + 47UL) != 10);
      
#line 425 
      if ((int)__cond_0 != 0) 
#line 425 
                              __compiletime_assert_427(); else ;
    }
    
#line 425 
    __iwl_warn(priv->dev,"Requested user TXPOWER %d above upper limit %d.\n",(int)tx_power,(int)(priv->nvm_data)->max_tx_pwr_half_dbm);
    
#line 428 
    __retres = -22;
    
#line 428 
    goto return_label;
  }
  else ;
  
#line 431 
  tmp_1 = iwl_is_ready_rf(priv);
  
#line 431 
  if (tmp_1 == 0) {
    
#line 432 
    __retres = -5;
    
#line 432 
    goto return_label;
  }
  else ;
  
#line 436 
  priv->tx_power_next = tx_power;
  
#line 439 
  tmp_2_0 = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
  
#line 439 
  if (tmp_2_0 != 0) 
#line 439 
                    tmp_4 = 1;
  else {
    int tmp_3;
    
#line 439 
    tmp_3 = memcmp((void const *)(& ctx->active),(void const *)(& ctx->staging),50UL);
    
#line 439 
    if (tmp_3 != 0) 
#line 439 
                    tmp_4 = 1; else 
#line 439 
                                    tmp_4 = 0;
  }
  
#line 439 
  defer = (_Bool)(tmp_4 != 0);
  
#line 441 
  if ((int)defer != 0 && ! force) {
    {
      
#line 442 
      bool __cond_1 = (_Bool)((int)*("Deferring tx power set\n" + 22UL) != 10);
      
#line 442 
      if ((int)__cond_1 != 0) 
#line 442 
                              __compiletime_assert_442(); else ;
    }
    
#line 442 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_set_tx_power","Deferring tx power set\n");
    
#line 443 
    __retres = 0;
    
#line 443 
    goto return_label;
  }
  else ;
  
#line 446 
  prev_tx_power = priv->tx_power_user_lmt;
  
#line 447 
  priv->tx_power_user_lmt = tx_power;
  
#line 449 
  ret = iwlagn_send_tx_power(priv);
  
#line 452 
  if (ret != 0) {
    
#line 453 
    priv->tx_power_user_lmt = prev_tx_power;
    
#line 454 
    priv->tx_power_next = prev_tx_power;
  }
  else ;
  
#line 456 
  __retres = ret;
  return_label: 
#line 456 
                return __retres;
}


#line 484 
void __compiletime_assert_486(void);


#line 501 
void __compiletime_assert_501(void);


#line 459  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwlagn_rxon_connect(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int __retres;
  int ret;
  
#line 463 
  struct iwl_rxon_cmd *active = (struct iwl_rxon_cmd *)(& ctx->active);
  
#line 466 
  if (ctx->ctxid == (unsigned int)IWL_RXON_CTX_BSS) {
    
#line 467 
    ret = iwl_send_rxon_timing(priv,ctx);
    
#line 468 
    if (ret != 0) {
      {
        
#line 469 
        bool __cond = (_Bool)((int)*("Failed to send timing (%d)!\n" + 27UL) != 10);
        
#line 469 
        if ((int)__cond != 0) 
#line 469 
                              __compiletime_assert_469(); else ;
      }
      
#line 469 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Failed to send timing (%d)!\n",ret);
      
#line 470 
      __retres = ret;
      
#line 470 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 474 
  iwlagn_update_qos(priv,ctx);
  
#line 481 
  if (ctx->vif != (struct ieee80211_vif *)0 && (ctx->vif)->type == (unsigned int)NL80211_IFTYPE_AP) {
    
#line 482 
    ret = iwlagn_update_beacon(priv,ctx->vif);
    
#line 483 
    if (ret != 0) {
      {
        
#line 484 
        bool __cond_0 = (_Bool)((int)*("Error sending required beacon (%d)!\n" + 35UL) != 10);
        
#line 484 
        if ((int)__cond_0 != 0) 
#line 484 
                                __compiletime_assert_486(); else ;
      }
      
#line 484 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error sending required beacon (%d)!\n",ret);
      
#line 487 
      __retres = ret;
      
#line 487 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 491 
  priv->start_calib = (unsigned char)0U;
  
#line 498 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)((int)ctx->rxon_cmd),0U,(unsigned short)50,(void const *)(& ctx->staging));
  
#line 500 
  if (ret != 0) {
    {
      
#line 501 
      bool __cond_1 = (_Bool)((int)*("Error setting new RXON (%d)\n" + 27UL) != 10);
      
#line 501 
      if ((int)__cond_1 != 0) 
#line 501 
                              __compiletime_assert_501(); else ;
    }
    
#line 501 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error setting new RXON (%d)\n",ret);
    
#line 502 
    __retres = ret;
    
#line 502 
    goto return_label;
  }
  else ;
  
#line 504 
  memcpy((void *)active,(void const *)(& ctx->staging),50UL);
  
#line 507 
  if (ctx->vif != (struct ieee80211_vif *)0 && (ctx->vif)->type == (unsigned int)NL80211_IFTYPE_ADHOC) {
    int tmp;
    
#line 508 
    tmp = iwlagn_update_beacon(priv,ctx->vif);
    
#line 508 
    if (tmp != 0) {
      {
        
#line 509 
        bool __cond_2 = (_Bool)((int)*("Error sending IBSS beacon\n" + 25UL) != 10);
        
#line 509 
        if ((int)__cond_2 != 0) 
#line 509 
                                __compiletime_assert_509(); else ;
      }
      
#line 509 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error sending IBSS beacon\n");
    }
    else ;
  }
  else ;
  
#line 510 
  iwl_init_sensitivity(priv);
  
#line 519 
  ret = iwl_set_tx_power(priv,(signed char)((int)priv->tx_power_next),(_Bool)1);
  
#line 520 
  if (ret != 0) {
    {
      
#line 521 
      bool __cond_3 = (_Bool)((int)*("Error sending TX power (%d)\n" + 27UL) != 10);
      
#line 521 
      if ((int)__cond_3 != 0) 
#line 521 
                              __compiletime_assert_521(); else ;
    }
    
#line 521 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error sending TX power (%d)\n",ret);
    
#line 522 
    __retres = ret;
    
#line 522 
    goto return_label;
  }
  else ;
  
#line 525 
  if (((ctx->vif != (struct ieee80211_vif *)0 && (ctx->vif)->type == (unsigned int)NL80211_IFTYPE_STATION) && (priv->cfg)->ht_params != (struct iwl_ht_params const *)0) && ((priv->cfg)->ht_params)->smps_mode != (unsigned int)IEEE80211_SMPS_AUTOMATIC) 
    
#line 527 
    ieee80211_request_smps(ctx->vif,((priv->cfg)->ht_params)->smps_mode); else ;
  
#line 530 
  __retres = 0;
  return_label: 
#line 530 
                return __retres;
}


#line 543 
void __compiletime_assert_543(void);


#line 577 
void __compiletime_assert_579(void);


#line 616 
void __compiletime_assert_616(void);


#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
int iwlagn_set_pan_params(struct iwl_priv *priv)
{
  int __retres;
  struct iwl_wipan_params_cmd cmd;
  struct iwl_rxon_context *ctx_bss;
  struct iwl_rxon_context *ctx_pan;
  int ret;
  
#line 537 
  int slot0 = 300;
  
#line 537 
  int slot1 = 0;
  
#line 540 
  if ((unsigned int)priv->valid_contexts == 1U) {
    
#line 541 
    __retres = 0;
    
#line 541 
    goto return_label;
  }
  else ;
  {
    
#line 543 
    bool __cond = (_Bool)0;
    
#line 543 
    if ((int)__cond != 0) 
#line 543 
                          __compiletime_assert_543(); else ;
  }
  {
    int tmp_0;
    
#line 545 
    if (debug_locks != 0) {
      int tmp;
      
#line 545 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 545 
      if (tmp == 0) 
#line 545 
                    tmp_0 = 1; else 
#line 545 
                                    tmp_0 = 0;
    }
    else 
#line 545 
         tmp_0 = 0;
    
#line 545 
    int __ret_warn_on = tmp_0;
    
#line 545 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 545 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c",545); else ;
    
#line 545 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 547 
  ctx_bss = & priv->contexts[0];
  
#line 548 
  ctx_pan = & priv->contexts[1];
  
#line 556 
  if (! ctx_pan->is_active) {
    
#line 557 
    __retres = 0;
    
#line 557 
    goto return_label;
  }
  else ;
  
#line 559 
  memset((void *)(& cmd),0,44UL);
  
#line 562 
  cmd.num_slots = (unsigned char)2U;
  
#line 564 
  cmd.slots[0].type = (unsigned char)0U;
  
#line 565 
  cmd.slots[1].type = (unsigned char)1U;
  
#line 567 
  if (ctx_bss->vif != (struct ieee80211_vif *)0 && ctx_pan->vif != (struct ieee80211_vif *)0) {
    int tmp_1;
    int tmp_4;
    
#line 568 
    int bcnint = ctx_pan->beacon_int;
    
#line 569 
    tmp_1 = (int)(ctx_pan->vif)->bss_conf.dtim_period != 0;
    
#line 569 
    if (tmp_1) ; else 
#line 569 
                      tmp_1 = 1;
    
#line 569 
    int dtim = tmp_1;
    
#line 572 
    cmd.flags = (unsigned short)((unsigned int)cmd.flags | 8U);
    
#line 574 
    if (((ctx_pan->vif)->type == (unsigned int)NL80211_IFTYPE_AP && bcnint != 0) && ctx_bss->beacon_int != bcnint) {
      {
        
#line 577 
        bool __cond_0 = (_Bool)((int)*("beacon intervals don\'t match (%d, %d)\n" + 37UL) != 10);
        
#line 577 
        if ((int)__cond_0 != 0) 
#line 577 
                                __compiletime_assert_579(); else ;
      }
      
#line 577 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"beacon intervals don\'t match (%d, %d)\n",ctx_bss->beacon_int,ctx_pan->beacon_int);
    }
    else {
      int tmp_3;
      {
        int tmp_2_0;
        
#line 581 
        int __max1 = bcnint;
        
#line 581 
        int __max2 = ctx_bss->beacon_int;
        
#line 581 
        if (__max1 > __max2) 
#line 581 
                             tmp_2_0 = __max1; else 
#line 581 
                                                    tmp_2_0 = __max2;
        
#line 581 
        tmp_3 = tmp_2_0;
      }
      
#line 581 
      bcnint = tmp_3;
    }
    
#line 583 
    if (bcnint == 0) 
#line 584 
                     bcnint = 200; else ;
    
#line 585 
    slot0 = bcnint / 2;
    
#line 586 
    slot1 = bcnint - slot0;
    
#line 588 
    tmp_4 = constant_test_bit(9L,(unsigned long const volatile *)(& priv->status));
    
#line 588 
    if (tmp_4 != 0) 
#line 588 
                    goto _LOR;
    else 
      
#line 589 
      if (! (ctx_bss->vif)->bss_conf.idle && ! (ctx_bss->vif)->bss_conf.assoc) {
        _LOR: {
                
#line 591 
                slot0 = (dtim * bcnint) * 3 + -20;
                
#line 592 
                slot1 = 20;
              }
      }
      else 
        
#line 593 
        if (! (ctx_pan->vif)->bss_conf.idle && ! (ctx_pan->vif)->bss_conf.assoc) {
          
#line 595 
          slot1 = (dtim * bcnint) * 3 + -20;
          
#line 596 
          slot0 = 20;
        }
        else ;
  }
  else 
    
#line 598 
    if (ctx_pan->vif != (struct ieee80211_vif *)0) {
      int tmp_6;
      int tmp_8;
      int tmp_9;
      
#line 599 
      slot0 = 0;
      {
        int tmp_5;
        
#line 600 
        int __max1_0 = 1;
        
#line 600 
        int __max2_0 = (int)(ctx_pan->vif)->bss_conf.dtim_period;
        
#line 600 
        if (__max1_0 > __max2_0) 
#line 600 
                                 tmp_5 = __max1_0; else 
#line 600 
                                                        tmp_5 = __max2_0;
        
#line 600 
        tmp_6 = tmp_5;
      }
      
#line 600 
      slot1 = tmp_6 * ctx_pan->beacon_int;
      {
        int tmp_7;
        
#line 602 
        int __max1_1 = 200;
        
#line 602 
        int __max2_1 = slot1;
        
#line 602 
        if (__max1_1 > __max2_1) 
#line 602 
                                 tmp_7 = __max1_1; else 
#line 602 
                                                        tmp_7 = __max2_1;
        
#line 602 
        tmp_8 = tmp_7;
      }
      
#line 602 
      slot1 = tmp_8;
      
#line 604 
      tmp_9 = constant_test_bit(9L,(unsigned long const volatile *)(& priv->status));
      
#line 604 
      if (tmp_9 != 0) {
        
#line 605 
        slot0 = slot1 * 3 + -20;
        
#line 606 
        slot1 = 20;
      }
      else ;
    }
    else ;
  
#line 610 
  cmd.slots[0].width = (unsigned short)slot0;
  
#line 611 
  cmd.slots[1].width = (unsigned short)slot1;
  
#line 613 
  ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)178,0U,(unsigned short)44,(void const *)(& cmd));
  
#line 615 
  if (ret != 0) {
    {
      
#line 616 
      bool __cond_1 = (_Bool)((int)*("Error setting PAN parameters (%d)\n" + 33UL) != 10);
      
#line 616 
      if ((int)__cond_1 != 0) 
#line 616 
                              __compiletime_assert_616(); else ;
    }
    
#line 616 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error setting PAN parameters (%d)\n",ret);
  }
  else ;
  
#line 618 
  __retres = ret;
  return_label: 
#line 618 
                return __retres;
}


#line 686 
void __compiletime_assert_687(void);


#line 697 
void __compiletime_assert_700(void);


#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static void _iwl_set_rxon_ht(struct iwl_priv *priv, struct iwl_ht_config *ht_conf, struct iwl_rxon_context *ctx)
{
  bool tmp;
  
#line 625 
  struct iwl_rxon_cmd *rxon = & ctx->staging;
  
#line 627 
  if (! ctx->ht.enabled) {
    
#line 628 
    rxon->flags &= 4164943871U;
    
#line 632 
    goto return_label;
  }
  else ;
  
#line 638 
  rxon->flags |= (unsigned int)((int)ctx->ht.protection << 23);
  
#line 644 
  rxon->flags &= 4190109695U;
  
#line 646 
  tmp = iwl_is_ht40_tx_allowed(priv,ctx,(struct ieee80211_sta *)0);
  
#line 646 
  if ((int)tmp != 0) 
    
#line 648 
    if ((unsigned int)ctx->ht.protection == 2U) {
      
#line 650 
      rxon->flags |= 33554432U;
      
#line 655 
      switch ((int)ctx->ht.extension_chan_offset) {
        case 1: 
#line 656 
        ;
        
#line 657 
        rxon->flags &= 4290772991U;
        
#line 659 
        goto ldv_53091;
        case 3: 
#line 660 
        ;
        
#line 661 
        rxon->flags |= 4194304U;
        
#line 663 
        goto ldv_53091;
      }
      ldv_53091: 
#line 665 
      ;
    }
    else {
      
#line 670 
      switch ((int)ctx->ht.extension_chan_offset) {
        case 1: 
#line 671 
        ;
        
#line 672 
        rxon->flags &= 4290772991U;
        
#line 674 
        rxon->flags |= 67108864U;
        
#line 675 
        goto ldv_53094;
        case 3: 
#line 676 
        ;
        
#line 677 
        rxon->flags |= 4194304U;
        
#line 678 
        rxon->flags |= 67108864U;
        
#line 679 
        goto ldv_53094;
        case 0: 
#line 680 
        ;
        default: 
#line 681 
        ;
        {
          
#line 686 
          bool __cond = (_Bool)((int)*("invalid extension channel offset\n" + 32UL) != 10);
          
#line 686 
          if ((int)__cond != 0) 
#line 686 
                                __compiletime_assert_687(); else ;
        }
        
#line 686 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"invalid extension channel offset\n");
        
#line 688 
        goto ldv_53094;
      }
      ldv_53094: 
#line 690 
      ;
    }
  else 
#line 692 
       rxon->flags = rxon->flags;
  
#line 695 
  iwlagn_set_rxon_chain(priv,ctx);
  {
    
#line 697 
    bool __cond_0 = (_Bool)((int)*("rxon flags 0x%X operation mode :0x%X " + 66UL) != 10);
    
#line 697 
    if ((int)__cond_0 != 0) 
#line 697 
                            __compiletime_assert_700(); else ;
  }
  
#line 697 
  __iwl_dbg(priv->dev,4097U,(_Bool)0,"_iwl_set_rxon_ht","rxon flags 0x%X operation mode :0x%X ",rxon->flags,(int)ctx->ht.protection,(int)ctx->ht.extension_chan_offset);
  return_label: 
#line 698 
                return;
}


#line 703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
void iwl_set_rxon_ht(struct iwl_priv *priv, struct iwl_ht_config *ht_conf)
{
  struct iwl_rxon_context *ctx;
  
#line 707 
  ctx = & priv->contexts[0];
  
#line 707 
  goto ldv_53113;
  ldv_53112: 
#line 708 
  ;
  
#line 707 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) 
    
#line 708 
    _iwl_set_rxon_ht(priv,ht_conf,ctx); else ;
  
#line 707 
  ctx += 1;
  ldv_53113: 
#line 708 
  ;
  
#line 707 
  if (& priv->contexts[2] > ctx) 
#line 709 
                                 goto ldv_53112; else 
#line 712 
                                                      goto ldv_53114;
  ldv_53114: 
#line 713 
  ;
  
#line 714 
  return;
}


#line 736 
void __compiletime_assert_736(void);


#line 718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
void iwl_set_rxon_channel(struct iwl_priv *priv, struct ieee80211_channel *ch, struct iwl_rxon_context *ctx)
{
  
#line 721 
  enum ieee80211_band band = ch->band;
  
#line 722 
  u16 channel = ch->hw_value;
  
#line 724 
  if ((int)ctx->staging.channel == (int)channel && priv->band == band) 
    
#line 726 
    goto return_label; else ;
  
#line 728 
  ctx->staging.channel = channel;
  
#line 729 
  if (band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 730 
                                                 ctx->staging.flags &= 4294967294U; else 
                                                                    
#line 732 
                                                                    ctx->staging.flags |= 1U;
  
#line 734 
  priv->band = band;
  {
    
#line 736 
    bool __cond = (_Bool)((int)*("Staging channel set to %d [%d]\n" + 30UL) != 10);
    
#line 736 
    if ((int)__cond != 0) 
#line 736 
                          __compiletime_assert_736(); else ;
  }
  
#line 736 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_set_rxon_channel","Staging channel set to %d [%d]\n",(int)channel,(unsigned int)band);
  return_label: 
#line 737 
                return;
}


#line 740  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
void iwl_set_flags_for_band(struct iwl_priv *priv, struct iwl_rxon_context *ctx, enum ieee80211_band band, struct ieee80211_vif *vif)
{
  
#line 745 
  if (band == (unsigned int)IEEE80211_BAND_5GHZ) {
    
#line 746 
    ctx->staging.flags &= 4294967288U;
    
#line 749 
    ctx->staging.flags |= 16U;
  }
  else {
    
#line 752 
    if (vif != (struct ieee80211_vif *)0 && (int)vif->bss_conf.use_short_slot != 0) 
      
#line 753 
      ctx->staging.flags |= 16U; else 
#line 755 
                                      ctx->staging.flags &= 4294967279U;
    
#line 757 
    ctx->staging.flags |= 1U;
    
#line 758 
    ctx->staging.flags |= 4U;
    
#line 759 
    ctx->staging.flags &= 4294967293U;
  }
  
#line 761 
  return;
}


#line 763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static void iwl_set_rxon_hwcrypto(struct iwl_priv *priv, struct iwl_rxon_context *ctx, int hw_decrypt)
{
  
#line 766 
  struct iwl_rxon_cmd *rxon = & ctx->staging;
  
#line 768 
  if (hw_decrypt != 0) 
#line 769 
                       rxon->filter_flags &= 4294967287U; else 
#line 771 
                                                               rxon->filter_flags |= 8U;
  
#line 772 
  return;
}


#line 784 
void __compiletime_assert_784(void);


#line 788 
void __compiletime_assert_788(void);


#line 793 
void __compiletime_assert_793(void);


#line 797 
void __compiletime_assert_797(void);


#line 802 
void __compiletime_assert_802(void);


#line 809 
void __compiletime_assert_809(void);


#line 814 
void __compiletime_assert_814(void);


#line 820 
void __compiletime_assert_820(void);


#line 826 
void __compiletime_assert_826(void);


#line 833 
void __compiletime_assert_833(void);


#line 838 
void __compiletime_assert_838(void);


#line 776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwl_check_rxon_cmd(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int tmp_0;
  
#line 779 
  struct iwl_rxon_cmd *rxon = & ctx->staging;
  
#line 780 
  u32 errors = 0U;
  
#line 782 
  if ((rxon->flags & 1U) != 0U) {
    
#line 783 
    if ((rxon->flags & 8192U) != 0U) {
      {
        
#line 784 
        bool __cond = (_Bool)((int)*("check 2.4G: wrong narrow\n" + 24UL) != 10);
        
#line 784 
        if ((int)__cond != 0) 
#line 784 
                              __compiletime_assert_784(); else ;
      }
      
#line 784 
      __iwl_warn(priv->dev,"check 2.4G: wrong narrow\n");
      
#line 785 
      errors |= 1U;
    }
    else ;
    
#line 787 
    if ((rxon->flags & 4096U) != 0U) {
      {
        
#line 788 
        bool __cond_0 = (_Bool)((int)*("check 2.4G: wrong radar\n" + 23UL) != 10);
        
#line 788 
        if ((int)__cond_0 != 0) 
#line 788 
                                __compiletime_assert_788(); else ;
      }
      
#line 788 
      __iwl_warn(priv->dev,"check 2.4G: wrong radar\n");
      
#line 789 
      errors |= 2U;
    }
    else ;
  }
  else {
    
#line 792 
    if ((rxon->flags & 16U) == 0U) {
      {
        
#line 793 
        bool __cond_1 = (_Bool)((int)*("check 5.2G: not short slot!\n" + 27UL) != 10);
        
#line 793 
        if ((int)__cond_1 != 0) 
#line 793 
                                __compiletime_assert_793(); else ;
      }
      
#line 793 
      __iwl_warn(priv->dev,"check 5.2G: not short slot!\n");
      
#line 794 
      errors |= 4U;
    }
    else ;
    
#line 796 
    if ((rxon->flags & 2U) != 0U) {
      {
        
#line 797 
        bool __cond_2 = (_Bool)((int)*("check 5.2G: CCK!\n" + 16UL) != 10);
        
#line 797 
        if ((int)__cond_2 != 0) 
#line 797 
                                __compiletime_assert_797(); else ;
      }
      
#line 797 
      __iwl_warn(priv->dev,"check 5.2G: CCK!\n");
      
#line 798 
      errors |= 8U;
    }
    else ;
  }
  
#line 801 
  if ((((int)rxon->node_addr[0] | (int)rxon->bssid_addr[0]) & 1) != 0) {
    {
      
#line 802 
      bool __cond_3 = (_Bool)((int)*("mac/bssid mcast!\n" + 16UL) != 10);
      
#line 802 
      if ((int)__cond_3 != 0) 
#line 802 
                              __compiletime_assert_802(); else ;
    }
    
#line 802 
    __iwl_warn(priv->dev,"mac/bssid mcast!\n");
    
#line 803 
    errors |= 16U;
  }
  else ;
  
#line 807 
  if (((int)rxon->ofdm_basic_rates & 16) == 0 && ((int)rxon->cck_basic_rates & 1) == 0) {
    {
      
#line 809 
      bool __cond_4 = (_Bool)((int)*("neither 1 nor 6 are basic\n" + 25UL) != 10);
      
#line 809 
      if ((int)__cond_4 != 0) 
#line 809 
                              __compiletime_assert_809(); else ;
    }
    
#line 809 
    __iwl_warn(priv->dev,"neither 1 nor 6 are basic\n");
    
#line 810 
    errors |= 32U;
  }
  else ;
  
#line 813 
  if ((unsigned int)rxon->assoc_id > 2007U) {
    {
      
#line 814 
      bool __cond_5 = (_Bool)((int)*("aid > 2007\n" + 10UL) != 10);
      
#line 814 
      if ((int)__cond_5 != 0) 
#line 814 
                              __compiletime_assert_814(); else ;
    }
    
#line 814 
    __iwl_warn(priv->dev,"aid > 2007\n");
    
#line 815 
    errors |= 64U;
  }
  else ;
  
#line 818 
  if ((rxon->flags & 18U) == 18U) {
    {
      
#line 820 
      bool __cond_6 = (_Bool)((int)*("CCK and short slot\n" + 18UL) != 10);
      
#line 820 
      if ((int)__cond_6 != 0) 
#line 820 
                              __compiletime_assert_820(); else ;
    }
    
#line 820 
    __iwl_warn(priv->dev,"CCK and short slot\n");
    
#line 821 
    errors |= 128U;
  }
  else ;
  
#line 824 
  if ((rxon->flags & 6U) == 6U) {
    {
      
#line 826 
      bool __cond_7 = (_Bool)((int)*("CCK and auto detect\n" + 19UL) != 10);
      
#line 826 
      if ((int)__cond_7 != 0) 
#line 826 
                              __compiletime_assert_826(); else ;
    }
    
#line 826 
    __iwl_warn(priv->dev,"CCK and auto detect\n");
    
#line 827 
    errors |= 256U;
  }
  else ;
  
#line 830 
  if ((rxon->flags & 12U) == 8U) {
    {
      
#line 833 
      bool __cond_8 = (_Bool)((int)*("TGg but no auto-detect\n" + 22UL) != 10);
      
#line 833 
      if ((int)__cond_8 != 0) 
#line 833 
                              __compiletime_assert_833(); else ;
    }
    
#line 833 
    __iwl_warn(priv->dev,"TGg but no auto-detect\n");
    
#line 834 
    errors |= 512U;
  }
  else ;
  
#line 837 
  if ((unsigned int)rxon->channel == 0U) {
    {
      
#line 838 
      bool __cond_9 = (_Bool)((int)*("zero channel is invalid\n" + 23UL) != 10);
      
#line 838 
      if ((int)__cond_9 != 0) 
#line 838 
                              __compiletime_assert_838(); else ;
    }
    
#line 838 
    __iwl_warn(priv->dev,"zero channel is invalid\n");
    
#line 839 
    errors |= 1024U;
  }
  else ;
  {
    
#line 842 
    int __ret_warn_on = errors != 0U;
    
#line 842 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 842 
                                          warn_slowpath_fmt("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c",843,"Invalid RXON (%#x), channel %d",errors,(int)rxon->channel); else ;
    
#line 842 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 845 
  if (errors != 0U) 
#line 845 
                    tmp_0 = -22; else 
#line 845 
                                      tmp_0 = 0;
  
#line 845 
  return tmp_0;
}


#line 878 
void __compiletime_assert_878(void);


#line 879 
void __compiletime_assert_879(void);


#line 880 
void __compiletime_assert_881(void);


#line 882 
void __compiletime_assert_882(void);


#line 883 
void __compiletime_assert_883(void);


#line 884 
void __compiletime_assert_884(void);


#line 885 
void __compiletime_assert_886(void);


#line 887 
void __compiletime_assert_888(void);


#line 889 
void __compiletime_assert_890(void);


#line 891 
void __compiletime_assert_891(void);


#line 898 
void __compiletime_assert_899(void);


#line 902 
void __compiletime_assert_903(void);


#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static int iwl_full_rxon_required(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int __retres;
  int tmp;
  int tmp_1;
  bool tmp_0;
  int tmp_3;
  bool tmp_2;
  int tmp_5;
  bool tmp_4;
  
#line 859 
  struct iwl_rxon_cmd const *staging = (struct iwl_rxon_cmd const *)(& ctx->staging);
  
#line 860 
  struct iwl_rxon_cmd const *active = & ctx->active;
  
#line 877 
  tmp = iwl_is_associated_ctx(ctx);
  
#line 877 
  if (tmp == 0) {
    {
      
#line 877 
      bool __cond = (_Bool)((int)*("need full RXON - " + 44UL) != 10);
      
#line 877 
      if ((int)__cond != 0) 
#line 877 
                            __compiletime_assert_877(); else ;
    }
    
#line 877 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ");
    
#line 877 
    __retres = 1;
    
#line 877 
    goto return_label;
  }
  else ;
  
#line 878 
  tmp_0 = ether_addr_equal((u8 const *)(& staging->bssid_addr),(u8 const *)(& active->bssid_addr));
  
#line 878 
  if (tmp_0) 
#line 878 
             tmp_1 = 0; else 
#line 878 
                             tmp_1 = 1;
  
#line 878 
  if (tmp_1) {
    {
      
#line 878 
      bool __cond_0 = (_Bool)((int)*("need full RXON - " + 75UL) != 10);
      
#line 878 
      if ((int)__cond_0 != 0) 
#line 878 
                              __compiletime_assert_878(); else ;
    }
    
#line 878 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ");
    
#line 878 
    __retres = 1;
    
#line 878 
    goto return_label;
  }
  else ;
  
#line 879 
  tmp_2 = ether_addr_equal((u8 const *)(& staging->node_addr),(u8 const *)(& active->node_addr));
  
#line 879 
  if (tmp_2) 
#line 879 
             tmp_3 = 0; else 
#line 879 
                             tmp_3 = 1;
  
#line 879 
  if (tmp_3) {
    {
      
#line 879 
      bool __cond_1 = (_Bool)((int)*("need full RXON - " + 73UL) != 10);
      
#line 879 
      if ((int)__cond_1 != 0) 
#line 879 
                              __compiletime_assert_879(); else ;
    }
    
#line 879 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ");
    
#line 879 
    __retres = 1;
    
#line 879 
    goto return_label;
  }
  else ;
  
#line 880 
  tmp_4 = ether_addr_equal((u8 const *)(& staging->wlap_bssid_addr),(u8 const *)(& active->wlap_bssid_addr));
  
#line 880 
  if (tmp_4) 
#line 880 
             tmp_5 = 0; else 
#line 880 
                             tmp_5 = 1;
  
#line 880 
  if (tmp_5) {
    {
      
#line 880 
      bool __cond_2 = (_Bool)((int)*("need full RXON - " + 85UL) != 10);
      
#line 880 
      if ((int)__cond_2 != 0) 
#line 880 
                              __compiletime_assert_881(); else ;
    }
    
#line 880 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ");
    
#line 880 
    __retres = 1;
    
#line 880 
    goto return_label;
  }
  else ;
  
#line 882 
  if ((int)staging->dev_type != (int)active->dev_type) {
    {
      
#line 882 
      bool __cond_3 = (_Bool)((int)*("need full RXON - " + 65UL) != 10);
      
#line 882 
      if ((int)__cond_3 != 0) 
#line 882 
                              __compiletime_assert_882(); else ;
    }
    
#line 882 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ",(int)staging->dev_type,(int)active->dev_type);
    
#line 882 
    __retres = 1;
    
#line 882 
    goto return_label;
  }
  else ;
  
#line 883 
  if ((int)staging->channel != (int)active->channel) {
    {
      
#line 883 
      bool __cond_4 = (_Bool)((int)*("need full RXON - " + 63UL) != 10);
      
#line 883 
      if ((int)__cond_4 != 0) 
#line 883 
                              __compiletime_assert_883(); else ;
    }
    
#line 883 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ",(int)staging->channel,(int)active->channel);
    
#line 883 
    __retres = 1;
    
#line 883 
    goto return_label;
  }
  else ;
  
#line 884 
  if ((int)staging->air_propagation != (int)active->air_propagation) {
    {
      
#line 884 
      bool __cond_5 = (_Bool)((int)*("need full RXON - " + 79UL) != 10);
      
#line 884 
      if ((int)__cond_5 != 0) 
#line 884 
                              __compiletime_assert_884(); else ;
    }
    
#line 884 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ",(int)staging->air_propagation,(int)active->air_propagation);
    
#line 884 
    __retres = 1;
    
#line 884 
    goto return_label;
  }
  else ;
  
#line 885 
  if ((int)staging->ofdm_ht_single_stream_basic_rates != (int)active->ofdm_ht_single_stream_basic_rates) {
    {
      
#line 885 
      bool __cond_6 = (_Bool)((int)*("need full RXON - " + 115UL) != 10);
      
#line 885 
      if ((int)__cond_6 != 0) 
#line 885 
                              __compiletime_assert_886(); else ;
    }
    
#line 885 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ",(int)staging->ofdm_ht_single_stream_basic_rates,(int)active->ofdm_ht_single_stream_basic_rates);
    
#line 885 
    __retres = 1;
    
#line 885 
    goto return_label;
  }
  else ;
  
#line 887 
  if ((int)staging->ofdm_ht_dual_stream_basic_rates != (int)active->ofdm_ht_dual_stream_basic_rates) {
    {
      
#line 887 
      bool __cond_7 = (_Bool)((int)*("need full RXON - " + 111UL) != 10);
      
#line 887 
      if ((int)__cond_7 != 0) 
#line 887 
                              __compiletime_assert_888(); else ;
    }
    
#line 887 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ",(int)staging->ofdm_ht_dual_stream_basic_rates,(int)active->ofdm_ht_dual_stream_basic_rates);
    
#line 887 
    __retres = 1;
    
#line 887 
    goto return_label;
  }
  else ;
  
#line 889 
  if ((int)staging->ofdm_ht_triple_stream_basic_rates != (int)active->ofdm_ht_triple_stream_basic_rates) {
    {
      
#line 889 
      bool __cond_8 = (_Bool)((int)*("need full RXON - " + 115UL) != 10);
      
#line 889 
      if ((int)__cond_8 != 0) 
#line 889 
                              __compiletime_assert_890(); else ;
    }
    
#line 889 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ",(int)staging->ofdm_ht_triple_stream_basic_rates,(int)active->ofdm_ht_triple_stream_basic_rates);
    
#line 889 
    __retres = 1;
    
#line 889 
    goto return_label;
  }
  else ;
  
#line 891 
  if ((int)staging->assoc_id != (int)active->assoc_id) {
    {
      
#line 891 
      bool __cond_9 = (_Bool)((int)*("need full RXON - " + 65UL) != 10);
      
#line 891 
      if ((int)__cond_9 != 0) 
#line 891 
                              __compiletime_assert_891(); else ;
    }
    
#line 891 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ",(int)staging->assoc_id,(int)active->assoc_id);
    
#line 891 
    __retres = 1;
    
#line 891 
    goto return_label;
  }
  else ;
  
#line 898 
  if (((staging->flags ^ active->flags) & 1U) != 0U) {
    {
      
#line 898 
      bool __cond_10 = (_Bool)((int)*("need full RXON - " + 107UL) != 10);
      
#line 898 
      if ((int)__cond_10 != 0) 
#line 898 
                               __compiletime_assert_899(); else ;
    }
    
#line 898 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ",staging->flags & 1U,active->flags & 1U);
    
#line 898 
    __retres = 1;
    
#line 898 
    goto return_label;
  }
  else ;
  
#line 902 
  if (((staging->filter_flags ^ active->filter_flags) & 32U) != 0U) {
    {
      
#line 902 
      bool __cond_11 = (_Bool)((int)*("need full RXON - " + 121UL) != 10);
      
#line 902 
      if ((int)__cond_11 != 0) 
#line 902 
                               __compiletime_assert_903(); else ;
    }
    
#line 902 
    __iwl_dbg(priv->dev,1U,(_Bool)0,"iwl_full_rxon_required","need full RXON - ",staging->filter_flags & 32U,active->filter_flags & 32U);
    
#line 902 
    __retres = 1;
    
#line 902 
    goto return_label;
  }
  else ;
  
#line 908 
  __retres = 0;
  return_label: 
#line 908 
                return __retres;
}


#line 922 
void __compiletime_assert_923(void);


#line 924 
void __compiletime_assert_925(void);


#line 926 
void __compiletime_assert_926(void);


#line 929 
void __compiletime_assert_930(void);


#line 931 
void __compiletime_assert_931(void);


#line 932 
void __compiletime_assert_932(void);


#line 933 
void __compiletime_assert_934(void);


#line 912  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
void iwl_print_rx_config_cmd(struct iwl_priv *priv, enum iwl_rxon_context_id ctxid)
{
  bool tmp;
  
#line 915 
  struct iwl_rxon_context *ctx = & priv->contexts[(unsigned int)ctxid];
  
#line 916 
  struct iwl_rxon_cmd *rxon = & ctx->staging;
  {
    
#line 918 
    bool __cond = (_Bool)((int)*("RX CONFIG:\n" + 10UL) != 10);
    
#line 918 
    if ((int)__cond != 0) 
#line 918 
                          __compiletime_assert_918(); else ;
  }
  
#line 918 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","RX CONFIG:\n");
  
#line 919 
  tmp = iwl_have_debug_level(128U);
  
#line 919 
  if ((int)tmp != 0) 
#line 919 
                     print_hex_dump("\001","iwl data: ",2,16,1,(void const *)rxon,50UL,(_Bool)1); else ;
  {
    
#line 920 
    bool __cond_0 = (_Bool)((int)*("u16 channel: 0x%x\n" + 17UL) != 10);
    
#line 920 
    if ((int)__cond_0 != 0) 
#line 920 
                            __compiletime_assert_921(); else ;
  }
  
#line 920 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","u16 channel: 0x%x\n",(int)rxon->channel);
  {
    
#line 922 
    bool __cond_1 = (_Bool)((int)*("u32 flags: 0x%08X\n" + 17UL) != 10);
    
#line 922 
    if ((int)__cond_1 != 0) 
#line 922 
                            __compiletime_assert_923(); else ;
  }
  
#line 922 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","u32 flags: 0x%08X\n",rxon->flags);
  {
    
#line 924 
    bool __cond_2 = (_Bool)((int)*("u32 filter_flags: 0x%08x\n" + 24UL) != 10);
    
#line 924 
    if ((int)__cond_2 != 0) 
#line 924 
                            __compiletime_assert_925(); else ;
  }
  
#line 924 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","u32 filter_flags: 0x%08x\n",rxon->filter_flags);
  {
    
#line 926 
    bool __cond_3 = (_Bool)((int)*("u8 dev_type: 0x%x\n" + 17UL) != 10);
    
#line 926 
    if ((int)__cond_3 != 0) 
#line 926 
                            __compiletime_assert_926(); else ;
  }
  
#line 926 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","u8 dev_type: 0x%x\n",(int)rxon->dev_type);
  {
    
#line 927 
    bool __cond_4 = (_Bool)((int)*("u8 ofdm_basic_rates: 0x%02x\n" + 27UL) != 10);
    
#line 927 
    if ((int)__cond_4 != 0) 
#line 927 
                            __compiletime_assert_928(); else ;
  }
  
#line 927 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","u8 ofdm_basic_rates: 0x%02x\n",(int)rxon->ofdm_basic_rates);
  {
    
#line 929 
    bool __cond_5 = (_Bool)((int)*("u8 cck_basic_rates: 0x%02x\n" + 26UL) != 10);
    
#line 929 
    if ((int)__cond_5 != 0) 
#line 929 
                            __compiletime_assert_930(); else ;
  }
  
#line 929 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","u8 cck_basic_rates: 0x%02x\n",(int)rxon->cck_basic_rates);
  {
    
#line 931 
    bool __cond_6 = (_Bool)((int)*("u8[6] node_addr: %pM\n" + 20UL) != 10);
    
#line 931 
    if ((int)__cond_6 != 0) 
#line 931 
                            __compiletime_assert_931(); else ;
  }
  
#line 931 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","u8[6] node_addr: %pM\n",(u8 *)(& rxon->node_addr));
  {
    
#line 932 
    bool __cond_7 = (_Bool)((int)*("u8[6] bssid_addr: %pM\n" + 21UL) != 10);
    
#line 932 
    if ((int)__cond_7 != 0) 
#line 932 
                            __compiletime_assert_932(); else ;
  }
  
#line 932 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","u8[6] bssid_addr: %pM\n",(u8 *)(& rxon->bssid_addr));
  {
    
#line 933 
    bool __cond_8 = (_Bool)((int)*("u16 assoc_id: 0x%x\n" + 18UL) != 10);
    
#line 933 
    if ((int)__cond_8 != 0) 
#line 933 
                            __compiletime_assert_934(); else ;
  }
  
#line 933 
  __iwl_dbg(priv->dev,128U,(_Bool)0,"iwl_print_rx_config_cmd","u16 assoc_id: 0x%x\n",(int)rxon->assoc_id);
  
#line 934 
  return;
}


#line 960 
void __compiletime_assert_960(void);


#line 938  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static void iwl_calc_basic_rates(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  
#line 941 
  int lowest_present_ofdm = 100;
  
#line 942 
  int lowest_present_cck = 100;
  
#line 943 
  u8 cck = (unsigned char)0U;
  
#line 944 
  u8 ofdm = (unsigned char)0U;
  
#line 946 
  if (ctx->vif != (struct ieee80211_vif *)0) {
    struct ieee80211_supported_band *sband;
    int i;
    unsigned long tmp;
    unsigned long tmp_0;
    
#line 948 
    unsigned long basic = (unsigned long)(ctx->vif)->bss_conf.basic_rates;
    
#line 951 
    sband = ((priv->hw)->wiphy)->bands[(unsigned int)((priv->hw)->conf.chandef.chan)->band];
    
#line 953 
    tmp = find_first_bit((unsigned long const *)(& basic),64UL);
    
#line 953 
    i = (int)tmp;
    
#line 953 
    goto ldv_53314;
    ldv_53313: 
#line 954 
    ;
    {
      
#line 954 
      int hw = (int)(sband->bitrates + i)->hw_value;
      
#line 955 
      if (hw > 3) {
        
#line 956 
        ofdm = (unsigned char)((int)((unsigned char)(1UL << (hw + -4))) | (int)ofdm);
        
#line 957 
        if (lowest_present_ofdm > hw) 
#line 958 
                                      lowest_present_ofdm = hw; else ;
      }
      else {
        {
          
#line 960 
          bool __cond = (_Bool)0;
          
#line 960 
          if ((int)__cond != 0) 
#line 960 
                                __compiletime_assert_960(); else ;
        }
        
#line 962 
        cck = (unsigned char)((int)((unsigned char)(1UL << hw)) | (int)cck);
        
#line 963 
        if (lowest_present_cck > hw) 
#line 964 
                                     lowest_present_cck = hw; else ;
      }
    }
    
#line 953 
    tmp_0 = find_next_bit((unsigned long const *)(& basic),64UL,(unsigned long)(i + 1));
    
#line 953 
    i = (int)tmp_0;
    ldv_53314: 
#line 954 
    ;
    
#line 953 
    if (i <= 63) 
#line 955 
                 goto ldv_53313; else 
#line 958 
                                      goto ldv_53315;
    ldv_53315: 
#line 959 
    ;
  }
  else ;
  
#line 992 
  if (lowest_present_ofdm > 8) 
#line 993 
                               ofdm = (unsigned char)((unsigned int)ofdm | 16U); else ;
  
#line 994 
  if (lowest_present_ofdm > 6) 
#line 995 
                               ofdm = (unsigned char)((unsigned int)ofdm | 4U); else ;
  
#line 997 
  ofdm = (unsigned char)((unsigned int)ofdm | 1U);
  
#line 1012 
  if (lowest_present_cck > 3) 
#line 1013 
                              cck = (unsigned char)((unsigned int)cck | 8U); else ;
  
#line 1014 
  if (lowest_present_cck > 2) 
#line 1015 
                              cck = (unsigned char)((unsigned int)cck | 4U); else ;
  
#line 1016 
  if (lowest_present_cck > 1) 
#line 1017 
                              cck = (unsigned char)((unsigned int)cck | 2U); else ;
  
#line 1019 
  cck = (unsigned char)((unsigned int)cck | 1U);
  {
    
#line 1021 
    bool __cond_0 = (_Bool)((int)*("Set basic rates cck:0x%.2x ofdm:0x%.2x\n" + 38UL) != 10);
    
#line 1021 
    if ((int)__cond_0 != 0) 
#line 1021 
                            __compiletime_assert_1022(); else ;
  }
  
#line 1021 
  __iwl_dbg(priv->dev,1048576U,(_Bool)0,"iwl_calc_basic_rates","Set basic rates cck:0x%.2x ofdm:0x%.2x\n",(int)cck,(int)ofdm);
  
#line 1025 
  ctx->staging.cck_basic_rates = cck;
  
#line 1026 
  ctx->staging.ofdm_basic_rates = ofdm;
  
#line 1027 
  return;
}


#line 1060 
void __compiletime_assert_1060(void);


#line 1087 
void __compiletime_assert_1087(void);


#line 1097 
void __compiletime_assert_1098(void);


#line 1129 
void __compiletime_assert_1136(void);


#line 1047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
int iwlagn_commit_rxon(struct iwl_priv *priv, struct iwl_rxon_context *ctx)
{
  int __retres;
  int ret;
  int tmp_1;
  int tmp_2_0;
  int tmp_3;
  char *tmp_4;
  
#line 1050 
  struct iwl_rxon_cmd *active = (struct iwl_rxon_cmd *)(& ctx->active);
  
#line 1051 
  bool new_assoc = (_Bool)((ctx->staging.filter_flags & 32U) != 0U);
  {
    int tmp_0;
    
#line 1054 
    if (debug_locks != 0) {
      int tmp;
      
#line 1054 
      tmp = lock_is_held(& priv->mutex.dep_map);
      
#line 1054 
      if (tmp == 0) 
#line 1054 
                    tmp_0 = 1; else 
#line 1054 
                                    tmp_0 = 0;
    }
    else 
#line 1054 
         tmp_0 = 0;
    
#line 1054 
    int __ret_warn_on = tmp_0;
    
#line 1054 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1054 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c",1054); else ;
    
#line 1054 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1056 
  tmp_1 = iwl_is_alive(priv);
  
#line 1056 
  if (tmp_1 == 0) {
    
#line 1057 
    __retres = -16;
    
#line 1057 
    goto return_label;
  }
  else ;
  {
    
#line 1060 
    bool __cond = (_Bool)0;
    
#line 1060 
    if ((int)__cond != 0) 
#line 1060 
                          __compiletime_assert_1060(); else ;
  }
  
#line 1062 
  if (! ctx->is_active) {
    
#line 1063 
    __retres = 0;
    
#line 1063 
    goto return_label;
  }
  else ;
  
#line 1066 
  ctx->staging.flags |= 32768U;
  
#line 1069 
  iwl_calc_basic_rates(priv,ctx);
  
#line 1075 
  if (! priv->hw_params.use_rts_for_aggregation) 
#line 1076 
                                                 ctx->staging.flags |= 1073741824U; else ;
  
#line 1078 
  if ((ctx->vif != (struct ieee80211_vif *)0 && (int)(ctx->vif)->bss_conf.use_short_slot != 0) || (ctx->staging.flags & 1U) == 0U) 
    
#line 1080 
    ctx->staging.flags |= 16U; else 
#line 1082 
                                    ctx->staging.flags &= 4294967279U;
  
#line 1084 
  iwl_print_rx_config_cmd(priv,ctx->ctxid);
  
#line 1085 
  ret = iwl_check_rxon_cmd(priv,ctx);
  
#line 1086 
  if (ret != 0) {
    {
      
#line 1087 
      bool __cond_0 = (_Bool)((int)*("Invalid RXON configuration. Not committing.\n" + 43UL) != 10);
      
#line 1087 
      if ((int)__cond_0 != 0) 
#line 1087 
                              __compiletime_assert_1087(); else ;
    }
    
#line 1087 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid RXON configuration. Not committing.\n");
    
#line 1088 
    __retres = -22;
    
#line 1088 
    goto return_label;
  }
  else ;
  
#line 1095 
  tmp_2_0 = constant_test_bit(11L,(unsigned long const volatile *)(& priv->status));
  
#line 1095 
  if (tmp_2_0 != 0) {
    
#line 1095 
    if ((int)priv->switch_channel != (int)ctx->staging.channel) {
      {
        
#line 1097 
        bool __cond_1 = (_Bool)((int)*("abort channel switch on %d\n" + 26UL) != 10);
        
#line 1097 
        if ((int)__cond_1 != 0) 
#line 1097 
                                __compiletime_assert_1098(); else ;
      }
      
#line 1097 
      __iwl_dbg(priv->dev,268435456U,(_Bool)0,"iwlagn_commit_rxon","abort channel switch on %d\n",(int)priv->switch_channel);
      
#line 1099 
      iwl_chswitch_done(priv,(_Bool)0);
    }
    else ;
  }
  else ;
  
#line 1107 
  tmp_3 = iwl_full_rxon_required(priv,ctx);
  
#line 1107 
  if (tmp_3 == 0) {
    
#line 1108 
    ret = iwlagn_send_rxon_assoc(priv,ctx);
    
#line 1109 
    if (ret != 0) {
      {
        
#line 1110 
        bool __cond_2 = (_Bool)((int)*("Error setting RXON_ASSOC (%d)\n" + 29UL) != 10);
        
#line 1110 
        if ((int)__cond_2 != 0) 
#line 1110 
                                __compiletime_assert_1110(); else ;
      }
      
#line 1110 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error setting RXON_ASSOC (%d)\n",ret);
      
#line 1111 
      __retres = ret;
      
#line 1111 
      goto return_label;
    }
    else ;
    
#line 1114 
    memcpy((void *)active,(void const *)(& ctx->staging),50UL);
    
#line 1119 
    iwl_set_tx_power(priv,(signed char)((int)priv->tx_power_next),(_Bool)0);
    
#line 1122 
    iwl_power_update_mode(priv,(_Bool)1);
    
#line 1124 
    __retres = 0;
    
#line 1124 
    goto return_label;
  }
  else ;
  
#line 1127 
  iwl_set_rxon_hwcrypto(priv,ctx,iwlwifi_mod_params.sw_crypto == 0);
  {
    
#line 1129 
    bool __cond_3 = (_Bool)((int)*("Going to commit RXON\n" + 86UL) != 10);
    
#line 1129 
    if ((int)__cond_3 != 0) 
#line 1129 
                            __compiletime_assert_1136(); else ;
  }
  
#line 1129 
  ;
  
#line 1129 
  ;
  
#line 1129 
  if ((int)new_assoc != 0) 
#line 1129 
                           tmp_4 = (char *)""; else 
#line 1129 
                                                    tmp_4 = (char *)"out";
  
#line 1129 
  ;
  
#line 1129 
  __iwl_dbg(priv->dev,1U,(_Bool)0,"iwlagn_commit_rxon","Going to commit RXON\n",tmp_4,(int)ctx->staging.channel,(u8 *)(& ctx->staging.bssid_addr));
  
#line 1144 
  ret = iwlagn_rxon_disconn(priv,ctx);
  
#line 1145 
  if (ret != 0) {
    
#line 1146 
    __retres = ret;
    
#line 1146 
    goto return_label;
  }
  else ;
  
#line 1148 
  ret = iwlagn_set_pan_params(priv);
  
#line 1149 
  if (ret != 0) {
    
#line 1150 
    __retres = ret;
    
#line 1150 
    goto return_label;
  }
  else ;
  
#line 1152 
  if ((int)new_assoc != 0) {
    int tmp_5;
    
#line 1153 
    tmp_5 = iwlagn_rxon_connect(priv,ctx);
    
#line 1153 
    __retres = tmp_5;
    
#line 1153 
    goto return_label;
  }
  else ;
  
#line 1155 
  __retres = 0;
  return_label: 
#line 1155 
                return __retres;
}


#line 1158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
void iwlagn_config_ht40(struct ieee80211_conf *conf, struct iwl_rxon_context *ctx)
{
  bool tmp_0;
  
#line 1161 
  tmp_0 = conf_is_ht40_minus(conf);
  
#line 1161 
  if ((int)tmp_0 != 0) {
    
#line 1162 
    ctx->ht.extension_chan_offset = (unsigned char)3U;
    
#line 1164 
    ctx->ht.is_40mhz = (_Bool)1;
  }
  else {
    bool tmp;
    
#line 1165 
    tmp = conf_is_ht40_plus(conf);
    
#line 1165 
    if ((int)tmp != 0) {
      
#line 1166 
      ctx->ht.extension_chan_offset = (unsigned char)1U;
      
#line 1168 
      ctx->ht.is_40mhz = (_Bool)1;
    }
    else {
      
#line 1170 
      ctx->ht.extension_chan_offset = (unsigned char)0U;
      
#line 1172 
      ctx->ht.is_40mhz = (_Bool)0;
    }
  }
  
#line 1174 
  return;
}


#line 1184 
void __compiletime_assert_1184(void);


#line 1189 
void __compiletime_assert_1189(void);


#line 1194 
void __compiletime_assert_1194(void);


#line 1256 
void __compiletime_assert_1256(void);


#line 1273 
void __compiletime_assert_1273(void);


#line 1176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
int iwlagn_mac_config(struct ieee80211_hw *hw, u32 changed)
{
  struct iwl_rxon_context *ctx;
  int tmp;
  int tmp_0;
  
#line 1178 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1180 
  struct ieee80211_conf *conf = & hw->conf;
  
#line 1181 
  struct ieee80211_channel *channel = conf->chandef.chan;
  
#line 1182 
  int ret = 0;
  {
    
#line 1184 
    bool __cond = (_Bool)((int)*("enter: changed %#x\n" + 18UL) != 10);
    
#line 1184 
    if ((int)__cond != 0) 
#line 1184 
                          __compiletime_assert_1184(); else ;
  }
  
#line 1184 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_config","enter: changed %#x\n",changed);
  
#line 1186 
  ldv_mutex_lock_74_3(& priv->mutex);
  
#line 1188 
  tmp = constant_test_bit(7L,(unsigned long const volatile *)(& priv->status));
  
#line 1188 
  if ((long)(tmp != 0) != 0L) {
    {
      
#line 1189 
      bool __cond_0 = (_Bool)((int)*("leave - scanning\n" + 16UL) != 10);
      
#line 1189 
      if ((int)__cond_0 != 0) 
#line 1189 
                              __compiletime_assert_1189(); else ;
    }
    
#line 1189 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_config","leave - scanning\n");
    
#line 1190 
    goto out;
  }
  else ;
  
#line 1193 
  tmp_0 = iwl_is_ready(priv);
  
#line 1193 
  if (tmp_0 == 0) {
    {
      
#line 1194 
      bool __cond_1 = (_Bool)((int)*("leave - not ready\n" + 17UL) != 10);
      
#line 1194 
      if ((int)__cond_1 != 0) 
#line 1194 
                              __compiletime_assert_1194(); else ;
    }
    
#line 1194 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_config","leave - not ready\n");
    
#line 1195 
    goto out;
  }
  else ;
  
#line 1198 
  if ((changed & 66U) != 0U) {
    
#line 1201 
    priv->current_ht_config.smps = conf->smps_mode;
    
#line 1210 
    ctx = & priv->contexts[0];
    
#line 1210 
    goto ldv_53379;
    ldv_53378: 
#line 1211 
    ;
    
#line 1210 
    if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) 
      
#line 1211 
      iwlagn_set_rxon_chain(priv,ctx); else ;
    
#line 1210 
    ctx += 1;
    ldv_53379: 
#line 1211 
    ;
    
#line 1210 
    if (& priv->contexts[2] > ctx) 
#line 1212 
                                   goto ldv_53378; else 
#line 1215 
                                                        goto ldv_53380;
    ldv_53380: 
#line 1216 
    ;
  }
  else ;
  
#line 1214 
  if ((changed & 64U) != 0U) {
    
#line 1215 
    ctx = & priv->contexts[0];
    
#line 1215 
    goto ldv_53382;
    ldv_53381: 
#line 1216 
    ;
    
#line 1215 
    if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
      bool tmp_1;
      
#line 1217 
      tmp_1 = conf_is_ht(conf);
      
#line 1217 
      ;
      
#line 1217 
      if ((int)ctx->ht.enabled != (int)tmp_1) 
#line 1218 
                                              ctx->ht.enabled = conf_is_ht(conf); else ;
      
#line 1220 
      if ((int)ctx->ht.enabled != 0) 
        
#line 1223 
        if (! ctx->ht.is_40mhz) 
#line 1225 
                                iwlagn_config_ht40(conf,ctx);
        else {
          int tmp_2;
          
#line 1223 
          tmp_2 = iwl_is_associated_ctx(ctx);
          
#line 1223 
          if (tmp_2 == 0) 
#line 1225 
                          iwlagn_config_ht40(conf,ctx); else ;
        }
      else 
#line 1227 
           ctx->ht.is_40mhz = (_Bool)0;
      
#line 1233 
      ctx->ht.protection = (unsigned char)0U;
      
#line 1238 
      if ((int)ctx->staging.channel != (int)channel->hw_value) 
#line 1240 
                                                               ctx->staging.flags = 0U; else ;
      
#line 1242 
      iwl_set_rxon_channel(priv,channel,ctx);
      
#line 1243 
      iwl_set_rxon_ht(priv,& priv->current_ht_config);
      
#line 1245 
      iwl_set_flags_for_band(priv,ctx,channel->band,ctx->vif);
    }
    else ;
    
#line 1215 
    ctx += 1;
    ldv_53382: 
#line 1216 
    ;
    
#line 1215 
    if (& priv->contexts[2] > ctx) 
#line 1217 
                                   goto ldv_53381; else 
#line 1220 
                                                        goto ldv_53383;
    ldv_53383: 
#line 1221 
    ;
    
#line 1249 
    iwl_update_bcast_stations(priv);
  }
  else ;
  
#line 1252 
  if ((changed & 272U) != 0U) {
    
#line 1254 
    ret = iwl_power_update_mode(priv,(_Bool)0);
    
#line 1255 
    if (ret != 0) {
      {
        
#line 1256 
        bool __cond_2 = (_Bool)((int)*("Error setting sleep level\n" + 25UL) != 10);
        
#line 1256 
        if ((int)__cond_2 != 0) 
#line 1256 
                                __compiletime_assert_1256(); else ;
      }
      
#line 1256 
      __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_config","Error setting sleep level\n");
    }
    else ;
  }
  else ;
  
#line 1259 
  if ((changed & 32U) != 0U) {
    {
      
#line 1260 
      bool __cond_3 = (_Bool)((int)*("TX Power old=%d new=%d\n" + 22UL) != 10);
      
#line 1260 
      if ((int)__cond_3 != 0) 
#line 1260 
                              __compiletime_assert_1261(); else ;
    }
    
#line 1260 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_config","TX Power old=%d new=%d\n",(int)priv->tx_power_user_lmt,conf->power_level);
    
#line 1263 
    iwl_set_tx_power(priv,(signed char)((int)((signed char)conf->power_level)),(_Bool)0);
  }
  else ;
  
#line 1266 
  ctx = & priv->contexts[0];
  
#line 1266 
  goto ldv_53394;
  ldv_53393: 
#line 1267 
  ;
  
#line 1266 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    int tmp_3;
    
#line 1267 
    tmp_3 = memcmp((void const *)(& ctx->staging),(void const *)(& ctx->active),50UL);
    
#line 1267 
    if (tmp_3 == 0) 
#line 1268 
                    goto ldv_53392; else ;
    
#line 1269 
    iwlagn_commit_rxon(priv,ctx);
  }
  else ;
  ldv_53392: 
#line 1271 
  ;
  
#line 1266 
  ctx += 1;
  ldv_53394: 
#line 1267 
  ;
  
#line 1266 
  if (& priv->contexts[2] > ctx) 
#line 1268 
                                 goto ldv_53393; else 
#line 1271 
                                                      goto ldv_53395;
  ldv_53395: 
#line 1272 
  ;
  out: 
#line 1271 
  ;
  
#line 1272 
  ldv_mutex_unlock_75_3(& priv->mutex);
  {
    
#line 1273 
    bool __cond_4 = (_Bool)((int)*("leave\n" + 5UL) != 10);
    
#line 1273 
    if ((int)__cond_4 != 0) 
#line 1273 
                            __compiletime_assert_1273(); else ;
  }
  
#line 1273 
  __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_mac_config","leave\n");
  
#line 1275 
  return ret;
}


#line 1278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static void iwlagn_check_needed_chains(struct iwl_priv *priv, struct iwl_rxon_context *ctx, struct ieee80211_bss_conf *bss_conf)
{
  struct iwl_rxon_context *tmp;
  struct ieee80211_sta *sta;
  struct ieee80211_sta_ht_cap *ht_cap;
  bool need_multiple;
  
#line 1282 
  struct ieee80211_vif *vif = ctx->vif;
  
#line 1285 
  struct iwl_ht_config *ht_conf = & priv->current_ht_config;
  {
    int tmp_1;
    
#line 1289 
    if (debug_locks != 0) {
      int tmp_0;
      
#line 1289 
      tmp_0 = lock_is_held(& priv->mutex.dep_map);
      
#line 1289 
      if (tmp_0 == 0) 
#line 1289 
                      tmp_1 = 1; else 
#line 1289 
                                      tmp_1 = 0;
    }
    else 
#line 1289 
         tmp_1 = 0;
    
#line 1289 
    int __ret_warn_on = tmp_1;
    
#line 1289 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1289 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c",1289); else ;
    
#line 1289 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1291 
  switch ((unsigned int)vif->type) {
    case (unsigned int)2: 
#line 1292 
    ;
    
#line 1293 
    rcu_read_lock();
    
#line 1294 
    sta = ieee80211_find_sta(vif,bss_conf->bssid);
    
#line 1295 
    if (sta == (struct ieee80211_sta *)0) {
      
#line 1302 
      need_multiple = (_Bool)0;
      
#line 1303 
      rcu_read_unlock();
      
#line 1304 
      goto ldv_53414;
    }
    else ;
    
#line 1307 
    ht_cap = & sta->ht_cap;
    
#line 1309 
    need_multiple = (_Bool)1;
    
#line 1315 
    if ((unsigned int)ht_cap->mcs.rx_mask[1] == 0U && (unsigned int)ht_cap->mcs.rx_mask[2] == 0U) 
      
#line 1317 
      need_multiple = (_Bool)0;
    else 
      
#line 1318 
      if (((int)ht_cap->mcs.tx_params & 1) == 0) 
#line 1321 
                                                 need_multiple = (_Bool)0;
      else 
        
#line 1322 
        if (((int)ht_cap->mcs.tx_params & 2) != 0) {
          int maxstreams;
          
#line 1333 
          maxstreams = (int)ht_cap->mcs.tx_params & 12;
          
#line 1335 
          maxstreams >>= 2;
          
#line 1337 
          maxstreams += 1;
          
#line 1339 
          if (maxstreams <= 1) 
#line 1340 
                               need_multiple = (_Bool)0; else ;
        }
        else ;
    
#line 1343 
    rcu_read_unlock();
    
#line 1344 
    goto ldv_53414;
    case (unsigned int)1: 
#line 1345 
    ;
    
#line 1347 
    need_multiple = (_Bool)0;
    
#line 1348 
    goto ldv_53414;
    default: 
#line 1349 
    ;
    
#line 1351 
    need_multiple = (_Bool)1;
    
#line 1352 
    goto ldv_53414;
  }
  ldv_53414: 
#line 1355 
  ;
  
#line 1355 
  ctx->ht_need_multiple_chains = need_multiple;
  
#line 1357 
  if (! need_multiple) {
    
#line 1359 
    tmp = & priv->contexts[0];
    
#line 1359 
    goto ldv_53421;
    ldv_53420: 
#line 1360 
    ;
    
#line 1359 
    if ((((unsigned long)priv->valid_contexts >> (unsigned int)tmp->ctxid) & 1UL) != 0UL) {
      
#line 1360 
      if (tmp->vif == (struct ieee80211_vif *)0) 
#line 1361 
                                                 goto ldv_53418; else ;
      
#line 1362 
      if ((int)tmp->ht_need_multiple_chains != 0) {
        
#line 1363 
        need_multiple = (_Bool)1;
        
#line 1364 
        goto ldv_53419;
      }
      else ;
    }
    else ;
    ldv_53418: 
#line 1367 
    ;
    
#line 1359 
    tmp += 1;
    ldv_53421: 
#line 1360 
    ;
    
#line 1359 
    if (& priv->contexts[2] > tmp) 
#line 1361 
                                   goto ldv_53420; else 
#line 1364 
                                                        goto ldv_53419;
    ldv_53419: 
#line 1365 
    ;
  }
  else ;
  
#line 1369 
  ht_conf->single_chain_sufficient = (_Bool)(! ((int)need_multiple != 0));
  
#line 1370 
  return;
}


#line 1400 
void __compiletime_assert_1401(void);


#line 1403 
void __compiletime_assert_1403(void);


#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
static void iwlagn_chain_noise_reset(struct iwl_priv *priv)
{
  int ret;
  
#line 1374 
  struct iwl_chain_noise_data *data = & priv->chain_noise_data;
  
#line 1377 
  if ((priv->calib_disabled & 2U) != 0U) 
#line 1378 
                                         goto return_label; else ;
  
#line 1380 
  if ((unsigned int)data->state == 0U) {
    int tmp;
    
#line 1380 
    tmp = iwl_is_any_associated_3(priv);
    
#line 1380 
    if (tmp != 0) {
      struct iwl_calib_chain_noise_reset_cmd cmd;
      
#line 1385 
      data->chain_noise_a = 0U;
      
#line 1386 
      data->chain_noise_b = 0U;
      
#line 1387 
      data->chain_noise_c = 0U;
      
#line 1388 
      data->chain_signal_a = 0U;
      
#line 1389 
      data->chain_signal_b = 0U;
      
#line 1390 
      data->chain_signal_c = 0U;
      
#line 1391 
      data->beacon_count = (unsigned short)0U;
      
#line 1393 
      memset((void *)(& cmd),0,4UL);
      
#line 1394 
      iwl_set_calib_hdr(& cmd.hdr,(unsigned char)((int)priv->phy_calib_chain_noise_reset_cmd));
      
#line 1396 
      ret = iwl_dvm_send_cmd_pdu(priv,(unsigned char)176,0U,(unsigned short)4,(void const *)(& cmd));
      
#line 1399 
      if (ret != 0) {
        {
          
#line 1400 
          bool __cond = (_Bool)((int)*("Could not send REPLY_PHY_CALIBRATION_CMD\n" + 40UL) != 10);
          
#line 1400 
          if ((int)__cond != 0) 
#line 1400 
                                __compiletime_assert_1401(); else ;
        }
        
#line 1400 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Could not send REPLY_PHY_CALIBRATION_CMD\n");
      }
      else ;
      
#line 1402 
      data->state = (unsigned char)1U;
      {
        
#line 1403 
        bool __cond_0 = (_Bool)((int)*("Run chain_noise_calibrate\n" + 25UL) != 10);
        
#line 1403 
        if ((int)__cond_0 != 0) 
#line 1403 
                                __compiletime_assert_1403(); else ;
      }
      
#line 1403 
      __iwl_dbg(priv->dev,2097152U,(_Bool)0,"iwlagn_chain_noise_reset","Run chain_noise_calibrate\n");
    }
    else ;
  }
  else ;
  return_label: 
#line 1405 
                return;
}


#line 1428 
void __compiletime_assert_1428(void);


#line 1434 
void __compiletime_assert_1434(void);


#line 1538 
void __compiletime_assert_1540(void);


#line 1545 
void __compiletime_assert_1545(void);


#line 1407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
void iwlagn_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *bss_conf, u32 changes)
{
  int ret;
  int tmp_0;
  
#line 1412 
  struct iwl_priv *priv = (struct iwl_priv *)(& ((struct iwl_op_mode *)hw->priv)->op_mode_specific);
  
#line 1413 
  struct iwl_rxon_context *ctx = iwl_rxon_ctx_from_vif(vif);
  
#line 1415 
  bool force = (_Bool)0;
  
#line 1417 
  ldv_mutex_lock_76_2(& priv->mutex);
  
#line 1419 
  if ((changes & 16384U) != 0U && (int)bss_conf->idle != 0) 
#line 1424 
                                                            iwlagn_lift_passive_no_rx(priv); else ;
  
#line 1427 
  tmp_0 = iwl_is_ready(priv);
  
#line 1427 
  if ((long)(tmp_0 == 0) != 0L) {
    {
      
#line 1428 
      bool __cond = (_Bool)((int)*("leave - not ready\n" + 17UL) != 10);
      
#line 1428 
      if ((int)__cond != 0) 
#line 1428 
                            __compiletime_assert_1428(); else ;
    }
    
#line 1428 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_bss_info_changed","leave - not ready\n");
    
#line 1429 
    ldv_mutex_unlock_77_2(& priv->mutex);
    
#line 1430 
    goto return_label;
  }
  else ;
  
#line 1433 
  if ((long)(ctx->vif == (struct ieee80211_vif *)0) != 0L) {
    {
      
#line 1434 
      bool __cond_0 = (_Bool)((int)*("leave - vif is NULL\n" + 19UL) != 10);
      
#line 1434 
      if ((int)__cond_0 != 0) 
#line 1434 
                              __compiletime_assert_1434(); else ;
    }
    
#line 1434 
    __iwl_dbg(priv->dev,2U,(_Bool)0,"iwlagn_bss_info_changed","leave - vif is NULL\n");
    
#line 1435 
    ldv_mutex_unlock_78(& priv->mutex);
    
#line 1436 
    goto return_label;
  }
  else ;
  
#line 1439 
  if ((changes & 64U) != 0U) 
#line 1440 
                             force = (_Bool)1; else ;
  
#line 1442 
  if ((changes & 8192U) != 0U) {
    
#line 1443 
    ctx->qos_data.qos_active = (int)bss_conf->qos;
    
#line 1444 
    iwlagn_update_qos(priv,ctx);
  }
  else ;
  
#line 1447 
  ctx->staging.assoc_id = vif->bss_conf.aid;
  
#line 1448 
  if ((int)vif->bss_conf.use_short_preamble != 0) 
#line 1449 
                                                  ctx->staging.flags |= 32U; else 
                                                                    
#line 1451 
                                                                    ctx->staging.flags &= 4294967263U;
  
#line 1453 
  if ((changes & 1U) != 0U) {
    
#line 1454 
    if ((int)bss_conf->assoc != 0) {
      
#line 1455 
      priv->timestamp = bss_conf->sync_tsf;
      
#line 1456 
      ctx->staging.filter_flags |= 32U;
    }
    else {
      
#line 1458 
      ctx->staging.filter_flags &= 4294967263U;
      
#line 1460 
      if (ctx->ctxid == (unsigned int)IWL_RXON_CTX_BSS) 
#line 1461 
                                                        priv->have_rekey_data = (_Bool)0; else ;
    }
    
#line 1464 
    iwlagn_bt_coex_rssi_monitor(priv);
  }
  else ;
  
#line 1467 
  if ((int)ctx->ht.enabled != 0) {
    
#line 1468 
    ctx->ht.protection = (unsigned char)((unsigned int)((unsigned char)bss_conf->ht_operation_mode) & 3U);
    
#line 1470 
    ctx->ht.non_gf_sta_present = (_Bool)(((int)bss_conf->ht_operation_mode & 4) != 0);
    
#line 1472 
    iwlagn_check_needed_chains(priv,ctx,bss_conf);
    
#line 1473 
    iwl_set_rxon_ht(priv,& priv->current_ht_config);
  }
  else ;
  
#line 1476 
  iwlagn_set_rxon_chain(priv,ctx);
  
#line 1478 
  if ((int)bss_conf->use_cts_prot != 0 && priv->band != (unsigned int)IEEE80211_BAND_5GHZ) 
    
#line 1479 
    ctx->staging.flags |= 8U; else 
#line 1481 
                                   ctx->staging.flags &= 4294967287U;
  
#line 1483 
  if ((int)bss_conf->use_cts_prot != 0) 
#line 1484 
                                        ctx->staging.flags |= 1073741824U; else 
                                                                    
#line 1486 
                                                                    ctx->staging.flags &= 3221225471U;
  
#line 1488 
  memcpy((void *)(& ctx->staging.bssid_addr),(void const *)bss_conf->bssid,6UL);
  
#line 1490 
  if (vif->type == (unsigned int)NL80211_IFTYPE_AP || vif->type == (unsigned int)NL80211_IFTYPE_ADHOC) 
    
#line 1492 
    if ((int)vif->bss_conf.enable_beacon != 0) {
      
#line 1493 
      ctx->staging.filter_flags |= 32U;
      
#line 1494 
      priv->beacon_ctx = ctx;
    }
    else {
      
#line 1496 
      ctx->staging.filter_flags &= 4294967263U;
      
#line 1497 
      priv->beacon_ctx = (struct iwl_rxon_context *)0;
    }
  else ;
  
#line 1509 
  if (vif->type == (unsigned int)NL80211_IFTYPE_STATION) 
    
#line 1510 
    if (! bss_conf->assoc) 
#line 1511 
                           ctx->staging.filter_flags |= 64U; else 
#line 1513 
                                                                  ctx->staging.filter_flags &= 4294967231U;
  else ;
  
#line 1517 
  if ((int)force != 0) 
#line 1518 
                       iwlagn_commit_rxon(priv,ctx);
  else {
    int tmp_1;
    
#line 1517 
    tmp_1 = memcmp((void const *)(& ctx->staging),(void const *)(& ctx->active),50UL);
    
#line 1517 
    if (tmp_1 != 0) 
#line 1518 
                    iwlagn_commit_rxon(priv,ctx); else ;
  }
  
#line 1520 
  if ((changes & 1U) != 0U && (int)bss_conf->assoc != 0) {
    
#line 1526 
    if ((unsigned int)priv->chain_noise_data.state == 3U) 
#line 1527 
                                                          iwl_power_update_mode(priv,(_Bool)0); else ;
    
#line 1530 
    iwlagn_chain_noise_reset(priv);
    
#line 1531 
    priv->start_calib = (unsigned char)1U;
  }
  else ;
  
#line 1534 
  if ((changes & 2048U) != 0U) {
    
#line 1535 
    ret = iwlagn_manage_ibss_station(priv,vif,(_Bool)((bool)((int)bss_conf->ibss_joined) != 0));
    
#line 1537 
    if (ret != 0) {
      char *tmp_2;
      {
        
#line 1538 
        bool __cond_1 = (_Bool)((int)*("failed to %s IBSS station %pM\n" + 29UL) != 10);
        
#line 1538 
        if ((int)__cond_1 != 0) 
#line 1538 
                                __compiletime_assert_1540(); else ;
      }
      
#line 1538 
      ;
      
#line 1538 
      if ((int)bss_conf->ibss_joined != 0) 
#line 1538 
                                           tmp_2 = (char *)"add"; else 
                                                                    
#line 1538 
                                                                    tmp_2 = (char *)"remove";
      
#line 1538 
      ;
      
#line 1538 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"failed to %s IBSS station %pM\n",tmp_2,bss_conf->bssid);
    }
    else ;
  }
  else ;
  
#line 1543 
  if ((changes & 256U) != 0U && priv->beacon_ctx == ctx) {
    int tmp_3;
    
#line 1544 
    tmp_3 = iwlagn_update_beacon(priv,vif);
    
#line 1544 
    if (tmp_3 != 0) {
      {
        
#line 1545 
        bool __cond_2 = (_Bool)((int)*("Error updating beacon\n" + 21UL) != 10);
        
#line 1545 
        if ((int)__cond_2 != 0) 
#line 1545 
                                __compiletime_assert_1545(); else ;
      }
      
#line 1545 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Error updating beacon\n");
    }
    else ;
  }
  else ;
  
#line 1548 
  ldv_mutex_unlock_79_2(& priv->mutex);
  return_label: 
#line 1549 
                return;
}


#line 1551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/rxon.c"
void iwlagn_post_scan(struct iwl_priv *priv)
{
  struct iwl_rxon_context *ctx;
  
#line 1559 
  iwl_power_set_mode(priv,& priv->power_data.sleep_cmd_next,(_Bool)0);
  
#line 1560 
  iwl_set_tx_power(priv,(signed char)((int)priv->tx_power_next),(_Bool)0);
  
#line 1566 
  ctx = & priv->contexts[0];
  
#line 1566 
  goto ldv_53469;
  ldv_53468: 
#line 1567 
  ;
  
#line 1566 
  if ((((unsigned long)priv->valid_contexts >> (unsigned int)ctx->ctxid) & 1UL) != 0UL) {
    int tmp;
    
#line 1567 
    tmp = memcmp((void const *)(& ctx->staging),(void const *)(& ctx->active),50UL);
    
#line 1567 
    if (tmp != 0) 
#line 1568 
                  iwlagn_commit_rxon(priv,ctx); else ;
  }
  else ;
  
#line 1566 
  ctx += 1;
  ldv_53469: 
#line 1567 
  ;
  
#line 1566 
  if (& priv->contexts[2] > ctx) 
#line 1568 
                                 goto ldv_53468; else 
#line 1571 
                                                      goto ldv_53470;
  ldv_53470: 
#line 1572 
  ;
  
#line 1570 
  iwlagn_set_pan_params(priv);
  
#line 1571 
  return;
}


#line 752  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rxon.c.aux"
static void ldv_mutex_lock_74_3(struct mutex *ldv_func_arg1)
{
  
#line 756 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 757 
  return;
}


#line 760  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rxon.c.aux"
static void ldv_mutex_unlock_75_3(struct mutex *ldv_func_arg1)
{
  
#line 764 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 765 
  return;
}


#line 768  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rxon.c.aux"
static void ldv_mutex_lock_76_2(struct mutex *ldv_func_arg1)
{
  
#line 772 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 773 
  return;
}


#line 776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rxon.c.aux"
static void ldv_mutex_unlock_77_2(struct mutex *ldv_func_arg1)
{
  
#line 780 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 781 
  return;
}


#line 784  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rxon.c.aux"
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1)
{
  
#line 788 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 789 
  return;
}


#line 792  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_rxon.c.aux"
static void ldv_mutex_unlock_79_2(struct mutex *ldv_func_arg1)
{
  
#line 796 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_iwl_priv");
  
#line 797 
  return;
}


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/byteorder/little_endian.h"
__inline static __u32 __le32_to_cpup(__le32 const *p)
{
  __u32 __retres;
  
#line 57 
  __retres = *p;
  
#line 57 
  return __retres;
}


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
static void atomic_inc_0(atomic_t *v);


#line 159 
static int atomic_add_return_0(int i, atomic_t *v);


#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_sub_return_0(int i, atomic_t *v)
{
  int tmp;
  
#line 173 
  tmp = atomic_add_return_0(- i,v);
  
#line 173 
  return tmp;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_74_0(spinlock_t *lock);


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_4(spinlock_t *lock)
{
  
#line 361 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 362 
  return;
}


#line 387 
static void ldv_spin_lock_bh_77_0(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_81(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_83_0(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_85_0(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_88(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_90_0(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_75_0(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_76(spinlock_t *lock);


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_4(spinlock_t *lock)
{
  
#line 414 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 415 
  return;
}


#line 440 
static void ldv_spin_unlock_bh_78_0(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_79_2(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_80_1(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_82_0(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_84_0(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_86_0(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_89_0(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_91_0(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_92(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_93_0(spinlock_t *lock);


#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
int rcu_read_lock_held(void);


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
static bool ldv_queue_work_87(struct workqueue_struct *wq, struct work_struct *work);


#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void *kmem_cache_alloc(struct kmem_cache *, gfp_t);


#line 852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 1011  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_queue_empty(struct sk_buff_head const *list)
{
  int __retres;
  
#line 1013 
  __retres = (struct sk_buff const *)list->next == (struct sk_buff const *)list;
  
#line 1013 
  return __retres;
}


#line 1259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head const *list_)
{
  
#line 1261 
  struct sk_buff *skb = list_->next;
  
#line 1263 
  if (skb == (struct sk_buff *)list_) 
#line 1264 
                                      skb = (struct sk_buff *)0; else ;
  
#line 1265 
  return skb;
}


#line 1331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  struct sk_buff *tmp;
  
#line 1333 
  tmp = (struct sk_buff *)list;
  
#line 1333 
  list->next = tmp;
  
#line 1333 
  list->prev = tmp;
  
#line 1334 
  list->qlen = 0U;
  
#line 1335 
  return;
}


#line 1520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  struct sk_buff *next;
  struct sk_buff *prev;
  struct sk_buff *tmp;
  
#line 1524 
  list->qlen -= 1U;
  
#line 1525 
  next = skb->__anonCompField_sk_buff_68.__anonCompField___anonunion_228_67.next;
  
#line 1526 
  prev = skb->__anonCompField_sk_buff_68.__anonCompField___anonunion_228_67.prev;
  
#line 1527 
  tmp = (struct sk_buff *)0;
  
#line 1527 
  skb->__anonCompField_sk_buff_68.__anonCompField___anonunion_228_67.prev = tmp;
  
#line 1527 
  skb->__anonCompField_sk_buff_68.__anonCompField___anonunion_228_67.next = tmp;
  
#line 1528 
  next->__anonCompField_sk_buff_68.__anonCompField___anonunion_228_67.prev = prev;
  
#line 1529 
  prev->__anonCompField_sk_buff_68.__anonCompField___anonunion_228_67.next = next;
  
#line 1530 
  return;
}


#line 1541  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  
#line 1543 
  struct sk_buff *skb = skb_peek((struct sk_buff_head const *)list);
  
#line 1544 
  if (skb != (struct sk_buff *)0) 
#line 1545 
                                  __skb_unlink(skb,list); else ;
  
#line 1546 
  return skb;
}


#line 281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_morefrags(__le16 fc)
{
  int __retres;
  
#line 283 
  __retres = ((int)fc & 1024) != 0;
  
#line 283 
  return __retres;
}


#line 335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_mgmt(__le16 fc)
{
  int __retres;
  
#line 337 
  __retres = ((int)fc & 12) == 0;
  
#line 337 
  return __retres;
}


#line 393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_assoc_req(__le16 fc)
{
  int __retres;
  
#line 395 
  __retres = ((int)fc & 252) == 0;
  
#line 395 
  return __retres;
}


#line 413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_reassoc_req(__le16 fc)
{
  int __retres;
  
#line 415 
  __retres = ((int)fc & 252) == 32;
  
#line 415 
  return __retres;
}


#line 443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_probe_resp(__le16 fc)
{
  int __retres;
  
#line 445 
  __retres = ((int)fc & 252) == 80;
  
#line 445 
  return __retres;
}


#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_auth(__le16 fc)
{
  int __retres;
  
#line 485 
  __retres = ((int)fc & 252) == 176;
  
#line 485 
  return __retres;
}


#line 513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_back_req(__le16 fc)
{
  int __retres;
  
#line 515 
  __retres = ((int)fc & 252) == 132;
  
#line 515 
  return __retres;
}


#line 603  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_qos_nullfunc(__le16 fc)
{
  int __retres;
  
#line 605 
  __retres = ((int)fc & 252) == 200;
  
#line 605 
  return __retres;
}


#line 3689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
unsigned int ieee80211_hdrlen(__le16);


#line 3888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
void ieee80211_tx_status(struct ieee80211_hw *, struct sk_buff *);


#line 4314 
void ieee80211_get_tkip_p2k(struct ieee80211_key_conf *, struct sk_buff *, u8 *);


#line 4707 
void ieee80211_start_tx_ba_cb_irqsafe(struct ieee80211_vif *, u8 const *, u16);


#line 4733 
void ieee80211_stop_tx_ba_cb_irqsafe(struct ieee80211_vif *, u8 const *, u16);


#line 5179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static s8 rate_lowest_index_0(struct ieee80211_supported_band *sband, struct ieee80211_sta *sta)
{
  s8 __retres;
  int i;
  int tmp;
  
#line 5184 
  i = 0;
  
#line 5184 
  goto ldv_49853;
  ldv_49852: 
#line 5185 
  ;
  
#line 5185 
  tmp = rate_supported(sta,sband->band,i);
  
#line 5185 
  if (tmp != 0) {
    
#line 5186 
    __retres = (signed char)i;
    
#line 5186 
    goto return_label;
  }
  else ;
  
#line 5184 
  i += 1;
  ldv_49853: 
#line 5185 
  ;
  
#line 5184 
  if (sband->n_bitrates > i) 
#line 5186 
                             goto ldv_49852; else 
#line 5189 
                                                  goto ldv_49854;
  ldv_49854: 
#line 5190 
  ;
  {
    bool __warned;
    
#line 5189 
    int __ret_warn_once = 1;
    
#line 5189 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp_0;
      {
        
#line 5189 
        int __ret_warn_on = ! __warned;
        
#line 5189 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 5189 
                                              warn_slowpath_null("include/net/mac80211.h",5189); else ;
        
#line 5189 
        tmp_0 = (long)(__ret_warn_on != 0);
      }
      
#line 5189 
      if ((long)tmp_0 != 0L) 
#line 5189 
                             __warned = (_Bool)1; else ;
    }
    else ;
    
#line 5189 
    long tmp_2 = (long)(__ret_warn_once != 0);
  }
  
#line 5192 
  __retres = (signed char)0;
  return_label: 
#line 5192 
                return __retres;
}


#line 805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static struct iwl_device_cmd *iwl_trans_alloc_tx_cmd(struct iwl_trans *trans)
{
  struct iwl_device_cmd *__retres;
  
#line 807 
  u8 *dev_cmd_ptr = kmem_cache_alloc(trans->dev_cmd_pool,32U);
  
#line 809 
  if ((long)(dev_cmd_ptr == (u8 *)0U) != 0L) {
    
#line 810 
    __retres = (struct iwl_device_cmd *)0;
    
#line 810 
    goto return_label;
  }
  else ;
  
#line 812 
  __retres = (struct iwl_device_cmd *)(dev_cmd_ptr + trans->dev_cmd_headroom);
  return_label: 
#line 812 
                return __retres;
}


#line 831 
void __compiletime_assert_831(void);


#line 824  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static int iwl_trans_tx(struct iwl_trans *trans, struct sk_buff *skb, struct iwl_device_cmd *dev_cmd, int queue)
{
  int __retres;
  int tmp;
  int tmp_0;
  
#line 827 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& trans->status));
  
#line 827 
  if ((long)(tmp != 0) != 0L) {
    
#line 828 
    __retres = -5;
    
#line 828 
    goto return_label;
  }
  else ;
  
#line 830 
  if ((long)(trans->state != (unsigned int)IWL_TRANS_FW_ALIVE) != 0L) {
    {
      
#line 831 
      bool __cond = (_Bool)((int)*("%s bad state = %d\n" + 17UL) != 10);
      
#line 831 
      if ((int)__cond != 0) 
#line 831 
                            __compiletime_assert_831(); else ;
    }
    
#line 831 
    __iwl_err(trans->dev,(_Bool)0,(_Bool)0,"%s bad state = %d\n","iwl_trans_tx",(unsigned int)trans->state);
  }
  else ;
  
#line 833 
  tmp_0 = (*((trans->ops)->tx))(trans,skb,dev_cmd,queue);
  
#line 833 
  __retres = tmp_0;
  return_label: 
#line 833 
                return __retres;
}


#line 840 
void __compiletime_assert_840(void);


#line 836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_reclaim(struct iwl_trans *trans, int queue, int ssn, struct sk_buff_head *skbs)
{
  
#line 839 
  if ((long)(trans->state != (unsigned int)IWL_TRANS_FW_ALIVE) != 0L) {
    {
      
#line 840 
      bool __cond = (_Bool)((int)*("%s bad state = %d\n" + 17UL) != 10);
      
#line 840 
      if ((int)__cond != 0) 
#line 840 
                            __compiletime_assert_840(); else ;
    }
    
#line 840 
    __iwl_err(trans->dev,(_Bool)0,(_Bool)0,"%s bad state = %d\n","iwl_trans_reclaim",(unsigned int)trans->state);
  }
  else ;
  
#line 842 
  (*((trans->ops)->reclaim))(trans,queue,ssn,skbs);
  
#line 843 
  return;
}


#line 845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_txq_disable(struct iwl_trans *trans, int queue, bool configure_scd)
{
  
#line 848 
  (*((trans->ops)->txq_disable))(trans,queue,(_Bool)((bool)((int)configure_scd) != 0));
  
#line 849 
  return;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/iwl-trans.h"
__inline static void iwl_trans_txq_enable(struct iwl_trans *trans, int queue, int fifo, int sta_id, int tid, int frame_limit, u16 ssn, unsigned int queue_wdg_timeout)
{
  
#line 869 
  struct iwl_trans_txq_scd_cfg cfg = {.fifo = (unsigned char)fifo, .sta_id = (signed char)sta_id, .tid = (unsigned char)tid, .aggregate = (_Bool)(sta_id >= 0), .frame_limit = frame_limit};
  
#line 877 
  iwl_trans_txq_enable_cfg(trans,queue,(unsigned short)((int)ssn),(struct iwl_trans_txq_scd_cfg const *)(& cfg),queue_wdg_timeout);
  
#line 878 
  return;
}


#line 225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static u32 iwl_tx_status_to_mac80211(u32 status)
{
  u32 __retres;
  
#line 227 
  status &= 255U;
  
#line 229 
  switch (status) {
    case (u32)1: 
#line 230 
    ;
    case (u32)2: 
#line 231 
    ;
    
#line 232 
    __retres = 512U;
    
#line 232 
    goto return_label;
    case (u32)136: 
#line 233 
    ;
    case (u32)144: 
#line 234 
    ;
    
#line 235 
    __retres = 256U;
    
#line 235 
    goto return_label;
    default: 
#line 236 
    ;
    
#line 237 
    __retres = 0U;
    
#line 237 
    goto return_label;
  }
  return_label: 
#line 229 
                return __retres;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/agn.h"
__inline static bool iwl_is_tx_success(u32 status)
{
  bool __retres;
  
#line 243 
  status &= 255U;
  
#line 244 
  __retres = (_Bool)(status + 4294967295U <= 1U);
  
#line 244 
  return __retres;
}


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static u8 const tid_to_ac[8U] = {(unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)2U, (unsigned char)1U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_tx_cmd_protection(struct iwl_priv *priv, struct ieee80211_tx_info *info, __le16 fc, __le32 *tx_flags)
{
  
#line 55 
  if ((((int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags & 1) != 0 || ((int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags & 2) != 0) || (info->flags & 64U) != 0U) 
    
#line 58 
    *tx_flags |= 1U; else ;
  
#line 59 
  return;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_tx_cmd_build_basic(struct iwl_priv *priv, struct sk_buff *skb, struct iwl_tx_cmd *tx_cmd, struct ieee80211_tx_info *info, struct ieee80211_hdr *hdr, u8 sta_id)
{
  int tmp_3;
  int tmp_4;
  int tmp_6;
  int tmp_9;
  
#line 70 
  __le16 fc = hdr->frame_control;
  
#line 71 
  __le32 tx_flags = tx_cmd->tx_flags;
  
#line 73 
  tx_cmd->stop_time.life_time = 4294967295U;
  
#line 75 
  if ((info->flags & 4U) == 0U) 
#line 76 
                                tx_flags |= 8U; else 
#line 78 
                                                     tx_flags &= 4294967287U;
  
#line 80 
  tmp_3 = ieee80211_is_probe_resp((unsigned short)((int)fc));
  
#line 80 
  if (tmp_3 != 0) 
#line 81 
                  tx_flags |= 65536U;
  else {
    int tmp_2;
    
#line 82 
    tmp_2 = ieee80211_is_back_req((unsigned short)((int)fc));
    
#line 82 
    if (tmp_2 != 0) 
#line 83 
                    tx_flags |= 72U;
    else 
      
#line 84 
      if (((unsigned int)info->band == 0U && (priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) {
        int tmp;
        
#line 86 
        tmp = ieee80211_is_auth((unsigned short)((int)fc));
        
#line 86 
        if (tmp != 0) 
#line 90 
                      tx_flags |= 4096U;
        else {
          int tmp_0;
          
#line 87 
          tmp_0 = ieee80211_is_assoc_req((unsigned short)((int)fc));
          
#line 87 
          if (tmp_0 != 0) 
#line 90 
                          tx_flags |= 4096U;
          else {
            int tmp_1;
            
#line 87 
            tmp_1 = ieee80211_is_reassoc_req((unsigned short)((int)fc));
            
#line 87 
            if (tmp_1 != 0) 
#line 90 
                            tx_flags |= 4096U;
            else 
              
#line 88 
              if ((info->__anonCompField_ieee80211_tx_info_99.control.flags & 1U) != 0U) 
                
#line 90 
                tx_flags |= 4096U; else ;
          }
        }
      }
      else ;
  }
  
#line 93 
  tx_cmd->sta_id = sta_id;
  
#line 94 
  tmp_4 = ieee80211_has_morefrags((unsigned short)((int)fc));
  
#line 94 
  if (tmp_4 != 0) 
#line 95 
                  tx_flags |= 16384U; else ;
  
#line 97 
  tmp_6 = ieee80211_is_data_qos((unsigned short)((int)fc));
  
#line 97 
  if (tmp_6 != 0) {
    
#line 98 
    u8 *qc = ieee80211_get_qos_ctl(hdr);
    
#line 99 
    tx_cmd->tid_tspec = (unsigned char)((unsigned int)*qc & 15U);
    
#line 100 
    tx_flags &= 4294959103U;
  }
  else {
    
#line 102 
    tx_cmd->tid_tspec = (unsigned char)8U;
    
#line 103 
    if ((info->flags & 2U) != 0U) 
#line 104 
                                  tx_flags |= 8192U; else 
#line 106 
                                                          tx_flags &= 4294959103U;
  }
  
#line 109 
  iwlagn_tx_cmd_protection(priv,info,(unsigned short)((int)fc),& tx_flags);
  
#line 111 
  tx_flags &= 4294963455U;
  
#line 112 
  tmp_9 = ieee80211_is_mgmt((unsigned short)((int)fc));
  
#line 112 
  if (tmp_9 != 0) {
    int tmp_7;
    
#line 113 
    tmp_7 = ieee80211_is_assoc_req((unsigned short)((int)fc));
    
#line 113 
    if (tmp_7 != 0) 
#line 113 
                    goto _LOR;
    else {
      int tmp_8;
      
#line 113 
      tmp_8 = ieee80211_is_reassoc_req((unsigned short)((int)fc));
      
#line 113 
      if (tmp_8 != 0) _LOR: 
#line 114 
                            tx_cmd->timeout.pm_frame_timeout = (unsigned short)3U; else 
                                                                    
#line 116 
                                                                    tx_cmd->timeout.pm_frame_timeout = (unsigned short)2U;
    }
  }
  else 
#line 118 
       tx_cmd->timeout.pm_frame_timeout = (unsigned short)0U;
  
#line 121 
  tx_cmd->driver_txop = (unsigned short)0U;
  
#line 122 
  tx_cmd->tx_flags = tx_flags;
  
#line 123 
  tx_cmd->next_frame_len = (unsigned short)0U;
  
#line 124 
  return;
}


#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_tx_cmd_build_rate(struct iwl_priv *priv, struct iwl_tx_cmd *tx_cmd, struct ieee80211_tx_info *info, struct ieee80211_sta *sta, __le16 fc)
{
  u32 rate_flags;
  int rate_idx;
  u8 rts_retry_limit;
  u8 data_retry_limit;
  u8 rate_plcp;
  int tmp_4;
  u32 tmp_7;
  
#line 138 
  if ((int)priv->wowlan != 0) {
    
#line 139 
    rts_retry_limit = (unsigned char)7U;
    
#line 140 
    data_retry_limit = (unsigned char)7U;
  }
  else {
    int tmp_2;
    
#line 143 
    rts_retry_limit = (unsigned char)60U;
    
#line 146 
    tmp_2 = ieee80211_is_probe_resp((unsigned short)((int)fc));
    
#line 146 
    if (tmp_2 != 0) {
      int tmp_0;
      
#line 147 
      data_retry_limit = (unsigned char)3U;
      {
        int tmp;
        
#line 149 
        u8 _min1 = data_retry_limit;
        
#line 149 
        u8 _min2 = rts_retry_limit;
        
#line 149 
        if ((int)_min1 < (int)_min2) 
#line 149 
                                     tmp = (int)_min1; else 
#line 149 
                                                            tmp = (int)_min2;
        
#line 149 
        tmp_0 = tmp;
      }
      
#line 148 
      rts_retry_limit = (unsigned char)tmp_0;
    }
    else {
      int tmp_1;
      
#line 150 
      tmp_1 = ieee80211_is_back_req((unsigned short)((int)fc));
      
#line 150 
      if (tmp_1 != 0) 
#line 151 
                      data_retry_limit = (unsigned char)60U; else 
#line 153 
                                                                  data_retry_limit = (unsigned char)15U;
    }
  }
  
#line 156 
  tx_cmd->data_retry_limit = data_retry_limit;
  
#line 157 
  tx_cmd->rts_retry_limit = rts_retry_limit;
  
#line 161 
  tmp_4 = ieee80211_is_data((unsigned short)((int)fc));
  
#line 161 
  if (tmp_4 != 0) {
    
#line 162 
    tx_cmd->initial_rate_index = (unsigned char)0U;
    
#line 163 
    tx_cmd->tx_flags |= 16U;
    
#line 164 
    goto return_label;
  }
  else {
    int tmp_3;
    
#line 165 
    tmp_3 = ieee80211_is_back_req((unsigned short)((int)fc));
    
#line 165 
    if (tmp_3 != 0) 
#line 166 
                    tx_cmd->tx_flags |= 16U; else ;
  }
  
#line 174 
  rate_idx = (int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].idx;
  
#line 175 
  if (((int)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_854_97.__anonCompField___anonunion_855_96.rates[0].flags & 8) != 0 || (unsigned int)rate_idx > 12U) {
    s8 tmp_5;
    
#line 177 
    tmp_5 = rate_lowest_index_0(& (priv->nvm_data)->bands[(int)info->band],sta);
    
#line 177 
    rate_idx = (int)tmp_5;
  }
  else ;
  
#line 180 
  if ((unsigned int)info->band == 1U) 
#line 181 
                                      rate_idx += 4; else ;
  
#line 183 
  rate_plcp = iwl_rates[rate_idx].plcp;
  
#line 185 
  rate_flags = 0U;
  
#line 188 
  if ((unsigned int)rate_idx <= 3U) 
#line 189 
                                    rate_flags |= 512U; else ;
  
#line 192 
  if (((priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0 && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) && (int)priv->bt_full_concurrent != 0) {
    u8 tmp_6;
    
#line 197 
    tmp_6 = first_antenna((unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
    
#line 196 
    ;
    
#line 196 
    ;
    
#line 196 
    priv->mgmt_tx_ant = iwl_toggle_tx_ant(priv,(unsigned char)((int)priv->mgmt_tx_ant),(unsigned char)((int)tmp_6));
  }
  else 
#line 199 
       priv->mgmt_tx_ant = iwl_toggle_tx_ant(priv,(unsigned char)((int)priv->mgmt_tx_ant),(unsigned char)((int)(priv->nvm_data)->valid_tx_ant));
  
#line 202 
  tmp_7 = iwl_ant_idx_to_flags((unsigned char)((int)priv->mgmt_tx_ant));
  
#line 202 
  rate_flags = tmp_7 | rate_flags;
  
#line 205 
  tx_cmd->rate_n_flags = iwl_hw_set_rate_n_flags((unsigned char)((int)rate_plcp),rate_flags);
  return_label: 
#line 206 
                return;
}


#line 237 
void __compiletime_assert_238(void);


#line 242 
void __compiletime_assert_242(void);


#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_tx_cmd_build_hwcrypto(struct iwl_priv *priv, struct ieee80211_tx_info *info, struct iwl_tx_cmd *tx_cmd, struct sk_buff *skb_frag)
{
  
#line 213 
  struct ieee80211_key_conf *keyconf = info->__anonCompField_ieee80211_tx_info_99.control.hw_key;
  
#line 215 
  switch (keyconf->cipher) {
    case (u32)1027076: 
#line 216 
    ;
    
#line 217 
    tx_cmd->sec_ctl = (unsigned char)2U;
    
#line 218 
    memcpy((void *)(& tx_cmd->key),(void const *)(& keyconf->key),(unsigned long)keyconf->keylen);
    
#line 219 
    if ((info->flags & 64U) != 0U) 
#line 220 
                                   tx_cmd->tx_flags |= 4194304U; else ;
    
#line 221 
    goto ldv_55231;
    case (u32)1027074: 
#line 223 
    ;
    
#line 224 
    tx_cmd->sec_ctl = (unsigned char)3U;
    
#line 225 
    ieee80211_get_tkip_p2k(keyconf,skb_frag,(u8 *)(& tx_cmd->key));
    
#line 226 
    goto ldv_55231;
    case (u32)1027077: 
#line 228 
    ;
    
#line 229 
    tx_cmd->sec_ctl = (unsigned char)((unsigned int)tx_cmd->sec_ctl | 8U);
    case (u32)1027073: 
#line 231 
    ;
    
#line 232 
    tx_cmd->sec_ctl = (unsigned char)((unsigned int)((int)tx_cmd->sec_ctl | (int)((unsigned char)((int)keyconf->keyidx << 6))) | 1U);
    
#line 235 
    memcpy((void *)(& tx_cmd->key[3]),(void const *)(& keyconf->key),(unsigned long)keyconf->keylen);
    {
      
#line 237 
      bool __cond = (_Bool)((int)*("Configuring packet for WEP encryption " + 49UL) != 10);
      
#line 237 
      if ((int)__cond != 0) 
#line 237 
                            __compiletime_assert_238(); else ;
    }
    
#line 237 
    __iwl_dbg(priv->dev,8388608U,(_Bool)0,"iwlagn_tx_cmd_build_hwcrypto","Configuring packet for WEP encryption ",(int)keyconf->keyidx);
    
#line 239 
    goto ldv_55231;
    default: 
#line 241 
    ;
    {
      
#line 242 
      bool __cond_0 = (_Bool)((int)*("Unknown encode cipher %x\n" + 24UL) != 10);
      
#line 242 
      if ((int)__cond_0 != 0) 
#line 242 
                              __compiletime_assert_242(); else ;
    }
    
#line 242 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Unknown encode cipher %x\n",keyconf->cipher);
    
#line 243 
    goto ldv_55231;
  }
  ldv_55231: 
#line 245 
  ;
  
#line 246 
  return;
}


#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static int iwl_sta_id_or_broadcast(struct iwl_rxon_context *context, struct ieee80211_sta *sta)
{
  int __retres;
  int sta_id;
  
#line 262 
  if (sta == (struct ieee80211_sta *)0) {
    
#line 263 
    __retres = (int)context->bcast_sta_id;
    
#line 263 
    goto return_label;
  }
  else ;
  
#line 265 
  sta_id = iwl_sta_id(sta);
  {
    
#line 271 
    int __ret_warn_on = sta_id == 255;
    
#line 271 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 271 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c",271); else ;
    
#line 271 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 273 
  __retres = sta_id;
  return_label: 
#line 273 
                return __retres;
}


#line 308 
void __compiletime_assert_308(void);


#line 312 
void __compiletime_assert_312(void);


#line 405 
void __compiletime_assert_407(void);


#line 408 
void __compiletime_assert_410(void);


#line 452 
void __compiletime_assert_453(void);


#line 279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
int iwlagn_tx_skb(struct iwl_priv *priv, struct ieee80211_sta *sta, struct sk_buff *skb)
{
  int __retres;
  struct iwl_device_cmd *dev_cmd;
  struct iwl_tx_cmd *tx_cmd;
  __le16 fc;
  u8 hdr_len;
  u16 len;
  u8 sta_id;
  int txq_id;
  int tmp_0;
  int tmp_3;
  int tmp_11;
  unsigned int tmp_12;
  int tmp_14;
  int tmp_19;
  int tmp_22_0;
  
#line 283 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 284 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  
#line 285 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)0;
  
#line 286 
  struct iwl_rxon_context *ctx = & priv->contexts[0];
  
#line 291 
  u16 seq_number = (unsigned short)0U;
  
#line 292 
  u8 tid = (unsigned char)8U;
  
#line 293 
  bool is_agg = (_Bool)0;
  
#line 293 
  bool is_data_qos = (_Bool)0;
  
#line 296 
  if (info->__anonCompField_ieee80211_tx_info_99.control.vif != (struct ieee80211_vif *)0) 
    
#line 297 
    ctx = iwl_rxon_ctx_from_vif(info->__anonCompField_ieee80211_tx_info_99.control.vif); else ;
  
#line 299 
  tmp_0 = iwl_is_rfkill(priv);
  
#line 299 
  if (tmp_0 != 0) {
    {
      
#line 300 
      bool __cond = (_Bool)((int)*("Dropping - RF KILL\n" + 18UL) != 10);
      
#line 300 
      if ((int)__cond != 0) 
#line 300 
                            __compiletime_assert_300(); else ;
    }
    
#line 300 
    __iwl_dbg(priv->dev,8192U,(_Bool)0,"iwlagn_tx_skb","Dropping - RF KILL\n");
    
#line 301 
    goto drop_unlock_priv;
  }
  else ;
  
#line 304 
  fc = hdr->frame_control;
  
#line 307 
  tmp_3 = ieee80211_is_auth((unsigned short)((int)fc));
  
#line 307 
  if (tmp_3 != 0) {
    {
      
#line 308 
      bool __cond_0 = (_Bool)((int)*("Sending AUTH frame\n" + 18UL) != 10);
      
#line 308 
      if ((int)__cond_0 != 0) 
#line 308 
                              __compiletime_assert_308(); else ;
    }
    
#line 308 
    __iwl_dbg(priv->dev,8388608U,(_Bool)0,"iwlagn_tx_skb","Sending AUTH frame\n");
  }
  else {
    int tmp_2;
    
#line 309 
    tmp_2 = ieee80211_is_assoc_req((unsigned short)((int)fc));
    
#line 309 
    if (tmp_2 != 0) {
      {
        
#line 310 
        bool __cond_1 = (_Bool)((int)*("Sending ASSOC frame\n" + 19UL) != 10);
        
#line 310 
        if ((int)__cond_1 != 0) 
#line 310 
                                __compiletime_assert_310(); else ;
      }
      
#line 310 
      __iwl_dbg(priv->dev,8388608U,(_Bool)0,"iwlagn_tx_skb","Sending ASSOC frame\n");
    }
    else {
      int tmp_1;
      
#line 311 
      tmp_1 = ieee80211_is_reassoc_req((unsigned short)((int)fc));
      
#line 311 
      if (tmp_1 != 0) {
        {
          
#line 312 
          bool __cond_2 = (_Bool)((int)*("Sending REASSOC frame\n" + 21UL) != 10);
          
#line 312 
          if ((int)__cond_2 != 0) 
#line 312 
                                  __compiletime_assert_312(); else ;
        }
        
#line 312 
        __iwl_dbg(priv->dev,8388608U,(_Bool)0,"iwlagn_tx_skb","Sending REASSOC frame\n");
      }
      else ;
    }
  }
  
#line 315 
  tmp_11 = ieee80211_is_probe_resp((unsigned short)((int)fc));
  
#line 315 
  if ((long)(tmp_11 != 0) != 0L) {
    struct iwl_wipan_noa_data *tmp_8;
    {
      struct iwl_wipan_noa_data *tmp_5;
      {
        struct iwl_wipan_noa_data *tmp_4;
        {
          union __anonunion___u_7227 __u;
          
#line 317 
          __read_once_size((void const volatile *)(& priv->noa_data),(void *)(& __u.__c),8);
          
#line 317 
          tmp_4 = __u.__val;
        }
        
#line 317 
        struct iwl_wipan_noa_data *_________p1 = tmp_4;
        
#line 317 
        tmp_5 = _________p1;
      }
      
#line 317 
      struct iwl_wipan_noa_data *________p1 = tmp_5;
      {
        bool __warned;
        int tmp_6;
        
#line 317 
        tmp_6 = debug_lockdep_rcu_enabled();
        
#line 317 
        if (tmp_6 != 0) {
          
#line 317 
          if (! __warned) {
            int tmp_7;
            
#line 317 
            tmp_7 = rcu_read_lock_held();
            
#line 317 
            if (tmp_7 == 0) {
              
#line 317 
              __warned = (_Bool)1;
              
#line 317 
              lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c",317,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 317 
      tmp_8 = ________p1;
    }
    
#line 316 
    struct iwl_wipan_noa_data *noa_data = tmp_8;
    
#line 319 
    if (noa_data != (struct iwl_wipan_noa_data *)0) {
      int tmp_10;
      
#line 319 
      tmp_10 = pskb_expand_head(skb,0,(int)noa_data->length,32U);
      
#line 319 
      if (tmp_10 == 0) {
        unsigned char *tmp_9;
        
#line 322 
        ;
        
#line 322 
        ;
        
#line 322 
        tmp_9 = skb_put(skb,noa_data->length);
        
#line 322 
        memcpy((void *)tmp_9,(void const *)(& noa_data->data),(unsigned long)noa_data->length);
        
#line 324 
        hdr = (struct ieee80211_hdr *)skb->data;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 328 
  tmp_12 = ieee80211_hdrlen((unsigned short)((int)fc));
  
#line 328 
  hdr_len = (unsigned char)tmp_12;
  
#line 331 
  tmp_14 = ieee80211_is_data((unsigned short)((int)fc));
  
#line 331 
  if (tmp_14 == 0) 
#line 332 
                   sta_id = ctx->bcast_sta_id;
  else {
    int tmp_13;
    
#line 335 
    tmp_13 = iwl_sta_id_or_broadcast(ctx,sta);
    
#line 335 
    sta_id = (unsigned char)tmp_13;
    
#line 336 
    if ((unsigned int)sta_id == 255U) {
      {
        
#line 337 
        bool __cond_3 = (_Bool)((int)*("Dropping - INVALID STATION: %pM\n" + 31UL) != 10);
        
#line 337 
        if ((int)__cond_3 != 0) 
#line 337 
                                __compiletime_assert_338(); else ;
      }
      
#line 337 
      __iwl_dbg(priv->dev,8192U,(_Bool)0,"iwlagn_tx_skb","Dropping - INVALID STATION: %pM\n",(u8 *)(& hdr->addr1));
      
#line 339 
      goto drop_unlock_priv;
    }
    else ;
  }
  
#line 343 
  if (sta != (struct ieee80211_sta *)0) 
#line 344 
                                        sta_priv = (struct iwl_station_priv *)(& sta->drv_priv); else ;
  
#line 346 
  if ((sta_priv != (struct iwl_station_priv *)0 && (int)sta_priv->asleep != 0) && (info->flags & 131072U) != 0U) 
    
#line 361 
    iwl_sta_modify_sleep_tx_count(priv,(int)sta_id,1); else ;
  
#line 364 
  dev_cmd = iwl_trans_alloc_tx_cmd(priv->trans);
  
#line 366 
  if ((long)(dev_cmd == (struct iwl_device_cmd *)0) != 0L) 
#line 367 
                                                           goto drop_unlock_priv; else ;
  
#line 369 
  memset((void *)dev_cmd,0,324UL);
  
#line 370 
  dev_cmd->hdr.cmd = (unsigned char)28U;
  
#line 371 
  tx_cmd = (struct iwl_tx_cmd *)(& dev_cmd->payload);
  
#line 374 
  len = (unsigned short)skb->len;
  
#line 375 
  tx_cmd->len = len;
  
#line 377 
  if (info->__anonCompField_ieee80211_tx_info_99.control.hw_key != (struct ieee80211_key_conf *)0) 
    
#line 378 
    iwlagn_tx_cmd_build_hwcrypto(priv,info,tx_cmd,skb); else ;
  
#line 381 
  iwlagn_tx_cmd_build_basic(priv,skb,tx_cmd,info,hdr,(unsigned char)((int)sta_id));
  
#line 383 
  iwlagn_tx_cmd_build_rate(priv,tx_cmd,info,sta,(unsigned short)((int)fc));
  
#line 385 
  memset((void *)(& info->__anonCompField_ieee80211_tx_info_99.status),0,40UL);
  
#line 387 
  info->__anonCompField_ieee80211_tx_info_99.driver_data[0] = (void *)ctx;
  
#line 388 
  info->__anonCompField_ieee80211_tx_info_99.driver_data[1] = (void *)dev_cmd;
  
#line 391 
  ldv_spin_lock_74_0(& priv->sta_lock);
  
#line 393 
  tmp_19 = ieee80211_is_data_qos((unsigned short)((int)fc));
  
#line 393 
  if (tmp_19 != 0) {
    int tmp_20;
    
#line 393 
    tmp_20 = ieee80211_is_qos_nullfunc((unsigned short)((int)fc));
    
#line 393 
    if (tmp_20 == 0) {
      struct iwl_tid_data *tid_data;
      int tmp_16;
      int tmp_18;
      
#line 394 
      u8 *qc = (u8 *)0U;
      
#line 396 
      qc = ieee80211_get_qos_ctl(hdr);
      
#line 397 
      tid = (unsigned char)((unsigned int)*qc & 15U);
      {
        bool __warned_0;
        
#line 398 
        int __ret_warn_once = (unsigned int)tid > 7U;
        
#line 398 
        if ((long)(__ret_warn_once != 0) != 0L) {
          int tmp_15;
          {
            
#line 398 
            int __ret_warn_on = ! __warned_0;
            
#line 398 
            if ((long)(__ret_warn_on != 0) != 0L) 
#line 398 
                                                  warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c",398); else ;
            
#line 398 
            tmp_15 = (long)(__ret_warn_on != 0);
          }
          
#line 398 
          if ((long)tmp_15 != 0L) 
#line 398 
                                  __warned_0 = (_Bool)1; else ;
        }
        else ;
        
#line 398 
        tmp_16 = (long)(__ret_warn_once != 0);
      }
      
#line 398 
      if ((long)tmp_16 != 0L) 
#line 399 
                              goto drop_unlock_sta; else ;
      
#line 400 
      tid_data = & priv->tid_data[(int)sta_id][(int)tid];
      
#line 403 
      if ((info->flags & 64U) != 0U && tid_data->agg.state != (unsigned int)IWL_AGG_ON) {
        {
          
#line 405 
          bool __cond_4 = (_Bool)((int)*("TX_CTL_AMPDU while not in AGG: Tx flags = 0x%08x, agg.state = %d\n" + 64UL) != 10);
          
#line 405 
          if ((int)__cond_4 != 0) 
#line 405 
                                  __compiletime_assert_407(); else ;
        }
        
#line 405 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"TX_CTL_AMPDU while not in AGG: Tx flags = 0x%08x, agg.state = %d\n",info->flags,(unsigned int)tid_data->agg.state);
        {
          
#line 408 
          bool __cond_5 = (_Bool)((int)*("sta_id = %d, tid = %d seq_num = %d\n" + 34UL) != 10);
          
#line 408 
          if ((int)__cond_5 != 0) 
#line 408 
                                  __compiletime_assert_410(); else ;
        }
        
#line 408 
        __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"sta_id = %d, tid = %d seq_num = %d\n",(int)sta_id,(int)tid,(int)tid_data->seq_number >> 4);
        
#line 411 
        goto drop_unlock_sta;
      }
      else ;
      {
        bool __warned_1;
        
#line 417 
        int __ret_warn_once_0 = (tid_data->agg.state != (unsigned int)IWL_AGG_ON && tid_data->agg.state != (unsigned int)IWL_AGG_OFF) != 0;
        
#line 417 
        if ((long)(__ret_warn_once_0 != 0) != 0L) {
          int tmp_17;
          {
            
#line 417 
            int __ret_warn_on_0 = ! __warned_1;
            
#line 417 
            if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 417 
                                                    warn_slowpath_fmt("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c",419,"Tx while agg.state = %d\n",(unsigned int)tid_data->agg.state); else ;
            
#line 417 
            tmp_17 = (long)(__ret_warn_on_0 != 0);
          }
          
#line 417 
          if ((long)tmp_17 != 0L) 
#line 417 
                                  __warned_1 = (_Bool)1; else ;
        }
        else ;
        
#line 417 
        tmp_18 = (long)(__ret_warn_once_0 != 0);
      }
      
#line 417 
      if ((long)tmp_18 != 0L) 
#line 420 
                              goto drop_unlock_sta; else ;
      
#line 422 
      seq_number = tid_data->seq_number;
      
#line 423 
      seq_number = (unsigned short)((unsigned int)seq_number & 65520U);
      
#line 424 
      hdr->seq_ctrl = (unsigned short)((unsigned int)hdr->seq_ctrl & 15U);
      
#line 425 
      hdr->seq_ctrl = (unsigned short)((int)hdr->seq_ctrl | (int)seq_number);
      
#line 426 
      seq_number = (unsigned short)((unsigned int)seq_number + 16U);
      
#line 428 
      if ((info->flags & 64U) != 0U) 
#line 429 
                                     is_agg = (_Bool)1; else ;
      
#line 430 
      is_data_qos = (_Bool)1;
    }
    else ;
  }
  else ;
  
#line 434 
  memcpy((void *)(& tx_cmd->hdr),(void const *)hdr,(unsigned long)hdr_len);
  
#line 436 
  txq_id = (int)info->hw_queue;
  
#line 438 
  if ((int)is_agg != 0) 
#line 439 
                        txq_id = (int)priv->tid_data[(int)sta_id][(int)tid].agg.txq_id;
  else 
    
#line 440 
    if ((info->flags & 32U) != 0U) 
#line 445 
                                   hdr->frame_control = (unsigned short)((unsigned int)hdr->frame_control | 8192U); else ;
  {
    bool __warned_2;
    
#line 449 
    int __ret_warn_once_1 = ((int)is_agg != 0 && (int)priv->queue_to_mac80211[txq_id] != (int)info->hw_queue) != 0;
    
#line 449 
    if ((long)(__ret_warn_once_1 != 0) != 0L) {
      int tmp_21;
      {
        
#line 449 
        int __ret_warn_on_1 = ! __warned_2;
        
#line 449 
        if ((long)(__ret_warn_on_1 != 0) != 0L) 
#line 449 
                                                warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c",450); else ;
        
#line 449 
        tmp_21 = (long)(__ret_warn_on_1 != 0);
      }
      
#line 449 
      if ((long)tmp_21 != 0L) 
#line 449 
                              __warned_2 = (_Bool)1; else ;
    }
    else ;
    
#line 449 
    long tmp_22 = (long)(__ret_warn_once_1 != 0);
  }
  {
    
#line 452 
    bool __cond_6 = (_Bool)((int)*("TX to [%d|%d] Q:%d - seq: 0x%x\n" + 30UL) != 10);
    
#line 452 
    if ((int)__cond_6 != 0) 
#line 452 
                            __compiletime_assert_453(); else ;
  }
  
#line 452 
  __iwl_dbg(priv->dev,8388608U,(_Bool)0,"iwlagn_tx_skb","TX to [%d|%d] Q:%d - seq: 0x%x\n",(int)sta_id,(int)tid,txq_id,(int)seq_number);
  
#line 455 
  tmp_22_0 = iwl_trans_tx(priv->trans,skb,dev_cmd,txq_id);
  
#line 455 
  if (tmp_22_0 != 0) 
#line 456 
                     goto drop_unlock_sta; else ;
  
#line 458 
  if ((int)is_data_qos != 0) {
    int tmp_23;
    
#line 458 
    tmp_23 = ieee80211_has_morefrags((unsigned short)((int)fc));
    
#line 458 
    if (tmp_23 == 0) 
#line 459 
                     priv->tid_data[(int)sta_id][(int)tid].seq_number = seq_number; else ;
  }
  else ;
  
#line 461 
  ldv_spin_unlock_75_0(& priv->sta_lock);
  
#line 470 
  if ((sta_priv != (struct iwl_station_priv *)0 && (int)sta_priv->client != 0) && ! is_agg) 
    
#line 471 
    atomic_inc_0(& sta_priv->pending_frames); else ;
  
#line 473 
  __retres = 0;
  
#line 473 
  goto return_label;
  drop_unlock_sta: 
#line 475 
  ;
  
#line 476 
  if (dev_cmd != (struct iwl_device_cmd *)0) 
#line 477 
                                             iwl_trans_free_tx_cmd(priv->trans,dev_cmd); else ;
  
#line 478 
  ldv_spin_unlock_76(& priv->sta_lock);
  drop_unlock_priv: 
#line 479 
  ;
  
#line 480 
  __retres = -1;
  return_label: 
#line 480 
                return __retres;
}


#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static int iwlagn_alloc_agg_txq(struct iwl_priv *priv, int mq)
{
  int __retres;
  int q;
  int tmp;
  
#line 487 
  q = 11;
  
#line 487 
  goto ldv_55341;
  ldv_55340: 
#line 488 
  ;
  
#line 489 
  tmp = test_and_set_bit((long)q,(unsigned long volatile *)(& priv->agg_q_alloc));
  
#line 489 
  if (tmp == 0) {
    
#line 490 
    priv->queue_to_mac80211[q] = (unsigned char)mq;
    
#line 491 
    __retres = q;
    
#line 491 
    goto return_label;
  }
  else ;
  
#line 488 
  q += 1;
  ldv_55341: 
#line 489 
  ;
  
#line 488 
  if (((priv->cfg)->base_params)->num_of_queues > q) 
#line 490 
                                                     goto ldv_55340; else 
                                                                    
#line 493 
                                                                    goto ldv_55342;
  ldv_55342: 
#line 494 
  ;
  
#line 495 
  __retres = -28;
  return_label: 
#line 495 
                return __retres;
}


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_dealloc_agg_txq(struct iwl_priv *priv, int q)
{
  
#line 500 
  set_bit((long)q,(unsigned long volatile *)(& priv->agg_q_alloc));
  
#line 501 
  priv->queue_to_mac80211[q] = (unsigned char)255U;
  
#line 502 
  return;
}


#line 514 
void __compiletime_assert_514(void);


#line 531 
void __compiletime_assert_531(void);


#line 543 
void __compiletime_assert_545(void);


#line 554 
void __compiletime_assert_556(void);


#line 567 
void __compiletime_assert_568(void);


#line 585 
void __compiletime_assert_586(void);


#line 504  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
int iwlagn_tx_agg_stop(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta, u16 tid)
{
  int __retres;
  struct iwl_tid_data *tid_data;
  int sta_id;
  int txq_id;
  enum iwl_agg_state agg_state;
  int tmp_1;
  int tmp_4;
  
#line 511 
  sta_id = iwl_sta_id(sta);
  
#line 513 
  if (sta_id == 255) {
    {
      
#line 514 
      bool __cond = (_Bool)((int)*("Invalid station for AGG tid %d\n" + 30UL) != 10);
      
#line 514 
      if ((int)__cond != 0) 
#line 514 
                            __compiletime_assert_514(); else ;
    }
    
#line 514 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Invalid station for AGG tid %d\n",(int)tid);
    
#line 515 
    __retres = -6;
    
#line 515 
    goto return_label;
  }
  else ;
  
#line 518 
  ldv_spin_lock_bh_77_0(& priv->sta_lock);
  
#line 520 
  tid_data = & priv->tid_data[sta_id][(int)tid];
  
#line 521 
  txq_id = (int)tid_data->agg.txq_id;
  
#line 523 
  switch ((unsigned int)tid_data->agg.state) {
    case (unsigned int)3: 
#line 524 
    ;
    {
      
#line 531 
      bool __cond_0 = (_Bool)((int)*("AGG stop before setup done\n" + 26UL) != 10);
      
#line 531 
      if ((int)__cond_0 != 0) 
#line 531 
                              __compiletime_assert_531(); else ;
    }
    
#line 531 
    __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_tx_agg_stop","AGG stop before setup done\n");
    
#line 532 
    goto turn_off;
    case (unsigned int)1: 
#line 533 
    ;
    {
      
#line 538 
      bool __cond_1 = (_Bool)((int)*("AGG stop before AGG became operational\n" + 38UL) != 10);
      
#line 538 
      if ((int)__cond_1 != 0) 
#line 538 
                              __compiletime_assert_538(); else ;
    }
    
#line 538 
    __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_tx_agg_stop","AGG stop before AGG became operational\n");
    
#line 539 
    goto turn_off;
    case (unsigned int)2: 
#line 540 
    ;
    
#line 541 
    goto ldv_55374;
    default: 
#line 542 
    ;
    {
      
#line 543 
      bool __cond_2 = (_Bool)((int)*("Stopping AGG while state not ON or starting for %d on %d (%d)\n" + 61UL) != 10);
      
#line 543 
      if ((int)__cond_2 != 0) 
#line 543 
                              __compiletime_assert_545(); else ;
    }
    
#line 543 
    __iwl_warn(priv->dev,"Stopping AGG while state not ON or starting for %d on %d (%d)\n",sta_id,(int)tid,(unsigned int)tid_data->agg.state);
    
#line 546 
    ldv_spin_unlock_bh_78_0(& priv->sta_lock);
    
#line 547 
    __retres = 0;
    
#line 547 
    goto return_label;
  }
  ldv_55374: 
#line 550 
  ;
  
#line 550 
  tid_data->agg.ssn = (unsigned short)((int)tid_data->seq_number >> 4);
  
#line 553 
  if (0 != 0) {
    int tmp;
    
#line 553 
    tmp = constant_test_bit((long)txq_id,(unsigned long const volatile *)(& priv->agg_q_alloc));
    
#line 553 
    tmp_1 = tmp == 0;
  }
  else {
    int tmp_0;
    
#line 553 
    tmp_0 = variable_test_bit((long)txq_id,(unsigned long const volatile *)(& priv->agg_q_alloc));
    
#line 553 
    tmp_1 = tmp_0 == 0;
  }
  
#line 553 
  if (tmp_1) {
    {
      
#line 554 
      bool __cond_3 = (_Bool)((int)*("stopping AGG on STA/TID %d/%d but hwq %d not used\n" + 49UL) != 10);
      
#line 554 
      if ((int)__cond_3 != 0) 
#line 554 
                              __compiletime_assert_556(); else ;
    }
    
#line 554 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_tx_agg_stop","stopping AGG on STA/TID %d/%d but hwq %d not used\n",sta_id,(int)tid,txq_id);
  }
  else 
    
#line 557 
    if ((int)tid_data->agg.ssn != (int)tid_data->next_reclaimed) {
      {
        
#line 558 
        bool __cond_4 = (_Bool)((int)*("Can\'t proceed: ssn %d, next_recl = %d\n" + 37UL) != 10);
        
#line 558 
        if ((int)__cond_4 != 0) 
#line 558 
                                __compiletime_assert_561(); else ;
      }
      
#line 558 
      __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_tx_agg_stop","Can\'t proceed: ssn %d, next_recl = %d\n",(int)tid_data->agg.ssn,(int)tid_data->next_reclaimed);
      
#line 562 
      tid_data->agg.state = IWL_EMPTYING_HW_QUEUE_DELBA;
      
#line 563 
      ldv_spin_unlock_bh_79_2(& priv->sta_lock);
      
#line 564 
      __retres = 0;
      
#line 564 
      goto return_label;
    }
    else ;
  {
    
#line 567 
    bool __cond_5 = (_Bool)((int)*("Can proceed: ssn = next_recl = %d\n" + 33UL) != 10);
    
#line 567 
    if ((int)__cond_5 != 0) 
#line 567 
                            __compiletime_assert_568(); else ;
  }
  
#line 567 
  __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_tx_agg_stop","Can proceed: ssn = next_recl = %d\n",(int)tid_data->agg.ssn);
  turn_off: 
#line 569 
  ;
  
#line 570 
  agg_state = tid_data->agg.state;
  
#line 571 
  tid_data->agg.state = IWL_AGG_OFF;
  
#line 573 
  ldv_spin_unlock_bh_80_1(& priv->sta_lock);
  
#line 575 
  if (0 != 0) {
    int tmp_2;
    
#line 575 
    tmp_2 = constant_test_bit((long)txq_id,(unsigned long const volatile *)(& priv->agg_q_alloc));
    
#line 575 
    tmp_4 = tmp_2 != 0;
  }
  else {
    int tmp_3;
    
#line 575 
    tmp_3 = variable_test_bit((long)txq_id,(unsigned long const volatile *)(& priv->agg_q_alloc));
    
#line 575 
    tmp_4 = tmp_3 != 0;
  }
  
#line 575 
  if (tmp_4) {
    
#line 582 
    if (agg_state == (unsigned int)IWL_AGG_ON) 
#line 583 
                                               iwl_trans_txq_disable(priv->trans,txq_id,(_Bool)1);
    else {
      {
        
#line 585 
        bool __cond_6 = (_Bool)((int)*("Don\'t disable tx agg: %d\n" + 24UL) != 10);
        
#line 585 
        if ((int)__cond_6 != 0) 
#line 585 
                                __compiletime_assert_586(); else ;
      }
      
#line 585 
      __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_tx_agg_stop","Don\'t disable tx agg: %d\n",(unsigned int)agg_state);
    }
    
#line 587 
    iwlagn_dealloc_agg_txq(priv,txq_id);
  }
  else ;
  
#line 590 
  ieee80211_stop_tx_ba_cb_irqsafe(vif,(u8 const *)(& sta->addr),(unsigned short)((int)tid));
  
#line 592 
  __retres = 0;
  return_label: 
#line 592 
                return __retres;
}


#line 602 
void __compiletime_assert_603(void);


#line 607 
void __compiletime_assert_607(void);


#line 614 
void __compiletime_assert_614(void);


#line 620 
void __compiletime_assert_622(void);


#line 638 
void __compiletime_assert_639(void);


#line 595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
int iwlagn_tx_agg_start(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta, u16 tid, u16 *ssn)
{
  int __retres;
  struct iwl_tid_data *tid_data;
  int sta_id;
  int txq_id;
  int ret;
  
#line 598 
  struct iwl_rxon_context *ctx = iwl_rxon_ctx_from_vif(vif);
  {
    
#line 602 
    bool __cond = (_Bool)((int)*("TX AGG request on ra = %pM tid = %d\n" + 35UL) != 10);
    
#line 602 
    if ((int)__cond != 0) 
#line 602 
                          __compiletime_assert_603(); else ;
  }
  
#line 602 
  __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_tx_agg_start","TX AGG request on ra = %pM tid = %d\n",(u8 *)(& sta->addr),(int)tid);
  
#line 605 
  sta_id = iwl_sta_id(sta);
  
#line 606 
  if (sta_id == 255) {
    {
      
#line 607 
      bool __cond_0 = (_Bool)((int)*("Start AGG on invalid station\n" + 28UL) != 10);
      
#line 607 
      if ((int)__cond_0 != 0) 
#line 607 
                              __compiletime_assert_607(); else ;
    }
    
#line 607 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Start AGG on invalid station\n");
    
#line 608 
    __retres = -6;
    
#line 608 
    goto return_label;
  }
  else ;
  
#line 610 
  if ((long)((unsigned int)tid > 7U) != 0L) {
    
#line 611 
    __retres = -22;
    
#line 611 
    goto return_label;
  }
  else ;
  
#line 613 
  if (priv->tid_data[sta_id][(int)tid].agg.state != (unsigned int)IWL_AGG_OFF) {
    {
      
#line 614 
      bool __cond_1 = (_Bool)((int)*("Start AGG when state is not IWL_AGG_OFF !\n" + 41UL) != 10);
      
#line 614 
      if ((int)__cond_1 != 0) 
#line 614 
                              __compiletime_assert_614(); else ;
    }
    
#line 614 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Start AGG when state is not IWL_AGG_OFF !\n");
    
#line 615 
    __retres = -6;
    
#line 615 
    goto return_label;
  }
  else ;
  
#line 618 
  txq_id = iwlagn_alloc_agg_txq(priv,(int)ctx->ac_to_queue[(int)tid_to_ac[(int)tid]]);
  
#line 619 
  if (txq_id < 0) {
    {
      
#line 620 
      bool __cond_2 = (_Bool)((int)*("No free aggregation queue for %pM/%d\n" + 36UL) != 10);
      
#line 620 
      if ((int)__cond_2 != 0) 
#line 620 
                              __compiletime_assert_622(); else ;
    }
    
#line 620 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_tx_agg_start","No free aggregation queue for %pM/%d\n",(u8 *)(& sta->addr),(int)tid);
    
#line 623 
    __retres = txq_id;
    
#line 623 
    goto return_label;
  }
  else ;
  
#line 626 
  ret = iwl_sta_tx_modify_enable_tid(priv,sta_id,(int)tid);
  
#line 627 
  if (ret != 0) {
    
#line 628 
    __retres = ret;
    
#line 628 
    goto return_label;
  }
  else ;
  
#line 630 
  ldv_spin_lock_bh_81(& priv->sta_lock);
  
#line 631 
  tid_data = & priv->tid_data[sta_id][(int)tid];
  
#line 632 
  tid_data->agg.ssn = (unsigned short)((int)tid_data->seq_number >> 4);
  
#line 633 
  tid_data->agg.txq_id = (unsigned short)txq_id;
  
#line 635 
  *ssn = tid_data->agg.ssn;
  
#line 637 
  if ((int)*ssn == (int)tid_data->next_reclaimed) {
    {
      
#line 638 
      bool __cond_3 = (_Bool)((int)*("Can proceed: ssn = next_recl = %d\n" + 33UL) != 10);
      
#line 638 
      if ((int)__cond_3 != 0) 
#line 638 
                              __compiletime_assert_639(); else ;
    }
    
#line 638 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_tx_agg_start","Can proceed: ssn = next_recl = %d\n",(int)tid_data->agg.ssn);
    
#line 640 
    tid_data->agg.state = IWL_AGG_STARTING;
    
#line 641 
    ieee80211_start_tx_ba_cb_irqsafe(vif,(u8 const *)(& sta->addr),(unsigned short)((int)tid));
  }
  else {
    {
      
#line 643 
      bool __cond_4 = (_Bool)((int)*("Can\'t proceed: ssn %d, " + 42UL) != 10);
      
#line 643 
      if ((int)__cond_4 != 0) 
#line 643 
                              __compiletime_assert_646(); else ;
    }
    
#line 643 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_tx_agg_start","Can\'t proceed: ssn %d, ",(int)tid_data->agg.ssn,(int)tid_data->next_reclaimed);
    
#line 647 
    tid_data->agg.state = IWL_EMPTYING_HW_QUEUE_ADDBA;
  }
  
#line 649 
  ldv_spin_unlock_bh_82_0(& priv->sta_lock);
  
#line 651 
  __retres = ret;
  return_label: 
#line 651 
                return __retres;
}


#line 671 
void __compiletime_assert_672(void);


#line 691 
void __compiletime_assert_692(void);


#line 654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
int iwlagn_tx_agg_flush(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta, u16 tid)
{
  int __retres;
  struct iwl_tid_data *tid_data;
  enum iwl_agg_state agg_state;
  int sta_id;
  int txq_id;
  int tmp;
  int tmp_2;
  
#line 660 
  sta_id = iwl_sta_id(sta);
  
#line 666 
  ldv_spin_lock_bh_83_0(& priv->sta_lock);
  
#line 668 
  tid_data = & priv->tid_data[sta_id][(int)tid];
  
#line 669 
  txq_id = (int)tid_data->agg.txq_id;
  
#line 670 
  agg_state = tid_data->agg.state;
  {
    
#line 671 
    bool __cond = (_Bool)((int)*("Flush AGG: sta %d tid %d q %d state %d\n" + 38UL) != 10);
    
#line 671 
    if ((int)__cond != 0) 
#line 671 
                          __compiletime_assert_672(); else ;
  }
  
#line 671 
  __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_tx_agg_flush","Flush AGG: sta %d tid %d q %d state %d\n",sta_id,(int)tid,txq_id,(unsigned int)tid_data->agg.state);
  
#line 674 
  tid_data->agg.state = IWL_AGG_OFF;
  
#line 676 
  ldv_spin_unlock_bh_84_0(& priv->sta_lock);
  
#line 678 
  tmp = iwlagn_txfifo_flush(priv,(unsigned int)(1UL << txq_id));
  
#line 678 
  if (tmp != 0) {
    {
      
#line 679 
      bool __cond_0 = (_Bool)((int)*("Couldn\'t flush the AGG queue\n" + 28UL) != 10);
      
#line 679 
      if ((int)__cond_0 != 0) 
#line 679 
                              __compiletime_assert_679(); else ;
    }
    
#line 679 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Couldn\'t flush the AGG queue\n");
  }
  else ;
  
#line 681 
  if (0 != 0) {
    int tmp_0;
    
#line 681 
    tmp_0 = constant_test_bit((long)txq_id,(unsigned long const volatile *)(& priv->agg_q_alloc));
    
#line 681 
    tmp_2 = tmp_0 != 0;
  }
  else {
    int tmp_1;
    
#line 681 
    tmp_1 = variable_test_bit((long)txq_id,(unsigned long const volatile *)(& priv->agg_q_alloc));
    
#line 681 
    tmp_2 = tmp_1 != 0;
  }
  
#line 681 
  if (tmp_2) {
    
#line 688 
    if (agg_state == (unsigned int)IWL_AGG_ON) 
#line 689 
                                               iwl_trans_txq_disable(priv->trans,txq_id,(_Bool)1);
    else {
      {
        
#line 691 
        bool __cond_1 = (_Bool)((int)*("Don\'t disable tx agg: %d\n" + 24UL) != 10);
        
#line 691 
        if ((int)__cond_1 != 0) 
#line 691 
                                __compiletime_assert_692(); else ;
      }
      
#line 691 
      __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_tx_agg_flush","Don\'t disable tx agg: %d\n",(unsigned int)agg_state);
    }
    
#line 693 
    iwlagn_dealloc_agg_txq(priv,txq_id);
  }
  else ;
  
#line 696 
  __retres = 0;
  
#line 696 
  return __retres;
}


#line 756 
void __compiletime_assert_757(void);


#line 699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
int iwlagn_tx_agg_oper(struct iwl_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta, u16 tid, u8 buf_size)
{
  int q;
  int fifo;
  u16 ssn;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 702 
  struct iwl_station_priv *sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
  
#line 703 
  struct iwl_rxon_context *ctx = iwl_rxon_ctx_from_vif(vif);
  {
    int tmp_0;
    
#line 707 
    int __min1 = (int)buf_size;
    
#line 707 
    int __min2 = 63;
    
#line 707 
    if (__min1 < __min2) 
#line 707 
                         tmp_0 = __min1; else 
#line 707 
                                              tmp_0 = __min2;
    
#line 707 
    tmp_1 = tmp_0;
  }
  
#line 707 
  buf_size = (unsigned char)tmp_1;
  
#line 709 
  ldv_spin_lock_bh_85_0(& priv->sta_lock);
  
#line 710 
  ssn = priv->tid_data[(int)sta_priv->sta_id][(int)tid].agg.ssn;
  
#line 711 
  q = (int)priv->tid_data[(int)sta_priv->sta_id][(int)tid].agg.txq_id;
  
#line 712 
  priv->tid_data[(int)sta_priv->sta_id][(int)tid].agg.state = IWL_AGG_ON;
  
#line 713 
  ldv_spin_unlock_bh_86_0(& priv->sta_lock);
  
#line 715 
  fifo = (int)ctx->ac_to_fifo[(int)tid_to_ac[(int)tid]];
  
#line 717 
  iwl_trans_txq_enable(priv->trans,q,fifo,(int)sta_priv->sta_id,(int)tid,(int)buf_size,(unsigned short)((int)ssn),0U);
  
#line 726 
  if ((unsigned int)sta_priv->max_agg_bufsize == 0U) 
#line 727 
                                                     sta_priv->max_agg_bufsize = (unsigned char)63U; else ;
  {
    int tmp_2;
    
#line 738 
    u8 _min1 = sta_priv->max_agg_bufsize;
    
#line 738 
    u8 _min2 = buf_size;
    
#line 738 
    if ((int)_min1 < (int)_min2) 
#line 738 
                                 tmp_2 = (int)_min1; else 
#line 738 
                                                          tmp_2 = (int)_min2;
    
#line 738 
    tmp_3 = tmp_2;
  }
  
#line 737 
  sta_priv->max_agg_bufsize = (unsigned char)tmp_3;
  
#line 740 
  if ((int)priv->hw_params.use_rts_for_aggregation != 0) 
#line 746 
                                                         sta_priv->lq_sta.lq.general_params.flags = (unsigned char)((unsigned int)sta_priv->lq_sta.lq.general_params.flags | 1U); else ;
  
#line 749 
  priv->agg_tids_count = (u8)((int)priv->agg_tids_count + 1);
  {
    
#line 750 
    bool __cond = (_Bool)((int)*("priv->agg_tids_count = %u\n" + 25UL) != 10);
    
#line 750 
    if ((int)__cond != 0) 
#line 750 
                          __compiletime_assert_751(); else ;
  }
  
#line 750 
  __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_tx_agg_oper","priv->agg_tids_count = %u\n",(int)priv->agg_tids_count);
  
#line 753 
  sta_priv->lq_sta.lq.agg_params.agg_frame_cnt_limit = sta_priv->max_agg_bufsize;
  {
    
#line 756 
    bool __cond_0 = (_Bool)((int)*("Tx aggregation enabled on ra = %pM tid = %d\n" + 43UL) != 10);
    
#line 756 
    if ((int)__cond_0 != 0) 
#line 756 
                            __compiletime_assert_757(); else ;
  }
  
#line 756 
  __iwl_dbg(priv->dev,67108864U,(_Bool)0,"iwlagn_tx_agg_oper","Tx aggregation enabled on ra = %pM tid = %d\n",(u8 *)(& sta->addr),(int)tid);
  
#line 759 
  tmp_4 = iwl_send_lq_cmd(priv,ctx,& sta_priv->lq_sta.lq,(unsigned char)1,(_Bool)0);
  
#line 759 
  return tmp_4;
}


#line 793 
void __compiletime_assert_795(void);


#line 763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_check_ratid_empty(struct iwl_priv *priv, int sta_id, u8 tid)
{
  enum iwl_rxon_context_id ctx;
  struct ieee80211_vif *vif;
  u8 *addr;
  
#line 765 
  struct iwl_tid_data *tid_data = & priv->tid_data[sta_id][(int)tid];
  {
    int tmp_0;
    
#line 770 
    if (debug_locks != 0) {
      int tmp;
      
#line 770 
      tmp = lock_is_held(& priv->sta_lock.__anonCompField_spinlock_18.__anonCompField___anonunion_34_17.dep_map);
      
#line 770 
      if (tmp == 0) 
#line 770 
                    tmp_0 = 1; else 
#line 770 
                                    tmp_0 = 0;
    }
    else 
#line 770 
         tmp_0 = 0;
    
#line 770 
    int __ret_warn_on = tmp_0;
    
#line 770 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 770 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c",770); else ;
    
#line 770 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 772 
  addr = (u8 *)(& priv->stations[sta_id].sta.sta.addr);
  
#line 773 
  ctx = (enum iwl_rxon_context_id)priv->stations[sta_id].ctxid;
  
#line 774 
  vif = priv->contexts[(unsigned int)ctx].vif;
  
#line 776 
  switch ((unsigned int)priv->tid_data[sta_id][(int)tid].agg.state) {
    case (unsigned int)4: 
#line 777 
    ;
    
#line 779 
    if ((int)tid_data->agg.ssn == (int)tid_data->next_reclaimed) {
      {
        
#line 780 
        bool __cond = (_Bool)((int)*("Can continue DELBA flow ssn = next_recl = %d\n" + 44UL) != 10);
        
#line 780 
        if ((int)__cond != 0) 
#line 780 
                              __compiletime_assert_782(); else ;
      }
      
#line 780 
      __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_check_ratid_empty","Can continue DELBA flow ssn = next_recl = %d\n",(int)tid_data->next_reclaimed);
      
#line 783 
      iwl_trans_txq_disable(priv->trans,(int)tid_data->agg.txq_id,(_Bool)1);
      
#line 785 
      iwlagn_dealloc_agg_txq(priv,(int)tid_data->agg.txq_id);
      
#line 786 
      tid_data->agg.state = IWL_AGG_OFF;
      
#line 787 
      ieee80211_stop_tx_ba_cb_irqsafe(vif,(u8 const *)addr,(unsigned short)((int)tid));
    }
    else ;
    
#line 789 
    goto ldv_55500;
    case (unsigned int)3: 
#line 790 
    ;
    
#line 792 
    if ((int)tid_data->agg.ssn == (int)tid_data->next_reclaimed) {
      {
        
#line 793 
        bool __cond_0 = (_Bool)((int)*("Can continue ADDBA flow ssn = next_recl = %d\n" + 44UL) != 10);
        
#line 793 
        if ((int)__cond_0 != 0) 
#line 793 
                                __compiletime_assert_795(); else ;
      }
      
#line 793 
      __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_check_ratid_empty","Can continue ADDBA flow ssn = next_recl = %d\n",(int)tid_data->next_reclaimed);
      
#line 796 
      tid_data->agg.state = IWL_AGG_STARTING;
      
#line 797 
      ieee80211_start_tx_ba_cb_irqsafe(vif,(u8 const *)addr,(unsigned short)((int)tid));
    }
    else ;
    
#line 799 
    goto ldv_55500;
    default: 
#line 800 
    ;
    
#line 801 
    goto ldv_55500;
  }
  ldv_55500: 
#line 803 
  ;
  
#line 804 
  return;
}


#line 805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_non_agg_tx_status(struct iwl_priv *priv, struct iwl_rxon_context *ctx, u8 const *addr1)
{
  struct ieee80211_sta *sta;
  struct iwl_station_priv *sta_priv;
  
#line 812 
  rcu_read_lock();
  
#line 813 
  sta = ieee80211_find_sta(ctx->vif,addr1);
  
#line 814 
  if (sta != (struct ieee80211_sta *)0) {
    
#line 815 
    sta_priv = (struct iwl_station_priv *)(& sta->drv_priv);
    
#line 817 
    if ((int)sta_priv->client != 0) {
      int tmp;
      
#line 817 
      tmp = atomic_sub_return_0(1,& sta_priv->pending_frames);
      
#line 817 
      if (tmp == 0) 
#line 819 
                    ieee80211_sta_block_awake(priv->hw,sta,(_Bool)0); else ;
    }
    else ;
  }
  else ;
  
#line 821 
  rcu_read_unlock();
  
#line 822 
  return;
}


#line 827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_hwrate_to_tx_control(struct iwl_priv *priv, u32 rate_n_flags, struct ieee80211_tx_info *info)
{
  int tmp;
  
#line 830 
  struct ieee80211_tx_rate *r = & info->__anonCompField_ieee80211_tx_info_99.status.rates[0];
  
#line 832 
  info->__anonCompField_ieee80211_tx_info_99.status.antenna = (unsigned char)((unsigned int)((unsigned char)(rate_n_flags >> 14)) & 7U);
  
#line 834 
  if ((rate_n_flags & 256U) != 0U) 
#line 835 
                                   r->flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))((unsigned int)r->flags | 8U); else ;
  
#line 836 
  if ((rate_n_flags & 1024U) != 0U) 
#line 837 
                                    r->flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))((unsigned int)r->flags | 16U); else ;
  
#line 838 
  if ((rate_n_flags & 2048U) != 0U) 
#line 839 
                                    r->flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))((unsigned int)r->flags | 32U); else ;
  
#line 840 
  if ((rate_n_flags & 4096U) != 0U) 
#line 841 
                                    r->flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))((unsigned int)r->flags | 64U); else ;
  
#line 842 
  if ((rate_n_flags & 8192U) != 0U) 
#line 843 
                                    r->flags = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))((unsigned int)r->flags | 128U); else ;
  
#line 844 
  tmp = iwlagn_hwrate_to_mac80211_idx(rate_n_flags,(enum ieee80211_band)info->band);
  
#line 844 
  r->idx = (signed char)tmp;
  
#line 845 
  return;
}


#line 848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
char const *iwl_get_tx_fail_reason(u32 status)
{
  char const *__retres;
  
#line 853 
  switch (status & 255U) {
    case (unsigned int)1: 
#line 854 
    ;
    
#line 855 
    __retres = "SUCCESS";
    
#line 855 
    goto return_label;
    case (unsigned int)64: 
#line 856 
    ;
    
#line 856 
    __retres = "DELAY";
    
#line 856 
    goto return_label;
    case (unsigned int)65: 
#line 857 
    ;
    
#line 857 
    __retres = "FEW_BYTES";
    
#line 857 
    goto return_label;
    case (unsigned int)66: 
#line 858 
    ;
    
#line 858 
    __retres = "BT_PRIO";
    
#line 858 
    goto return_label;
    case (unsigned int)67: 
#line 859 
    ;
    
#line 859 
    __retres = "QUIET_PERIOD";
    
#line 859 
    goto return_label;
    case (unsigned int)68: 
#line 860 
    ;
    
#line 860 
    __retres = "CALC_TTAK";
    
#line 860 
    goto return_label;
    case (unsigned int)129: 
#line 861 
    ;
    
#line 861 
    __retres = "INTERNAL_CROSSED_RETRY";
    
#line 861 
    goto return_label;
    case (unsigned int)130: 
#line 862 
    ;
    
#line 862 
    __retres = "SHORT_LIMIT";
    
#line 862 
    goto return_label;
    case (unsigned int)131: 
#line 863 
    ;
    
#line 863 
    __retres = "LONG_LIMIT";
    
#line 863 
    goto return_label;
    case (unsigned int)132: 
#line 864 
    ;
    
#line 864 
    __retres = "FIFO_UNDERRUN";
    
#line 864 
    goto return_label;
    case (unsigned int)133: 
#line 865 
    ;
    
#line 865 
    __retres = "DRAIN_FLOW";
    
#line 865 
    goto return_label;
    case (unsigned int)134: 
#line 866 
    ;
    
#line 866 
    __retres = "RFKILL_FLUSH";
    
#line 866 
    goto return_label;
    case (unsigned int)135: 
#line 867 
    ;
    
#line 867 
    __retres = "LIFE_EXPIRE";
    
#line 867 
    goto return_label;
    case (unsigned int)136: 
#line 868 
    ;
    
#line 868 
    __retres = "DEST_PS";
    
#line 868 
    goto return_label;
    case (unsigned int)137: 
#line 869 
    ;
    
#line 869 
    __retres = "HOST_ABORTED";
    
#line 869 
    goto return_label;
    case (unsigned int)138: 
#line 870 
    ;
    
#line 870 
    __retres = "BT_RETRY";
    
#line 870 
    goto return_label;
    case (unsigned int)139: 
#line 871 
    ;
    
#line 871 
    __retres = "STA_INVALID";
    
#line 871 
    goto return_label;
    case (unsigned int)140: 
#line 872 
    ;
    
#line 872 
    __retres = "FRAG_DROPPED";
    
#line 872 
    goto return_label;
    case (unsigned int)141: 
#line 873 
    ;
    
#line 873 
    __retres = "TID_DISABLE";
    
#line 873 
    goto return_label;
    case (unsigned int)142: 
#line 874 
    ;
    
#line 874 
    __retres = "FIFO_FLUSHED";
    
#line 874 
    goto return_label;
    case (unsigned int)143: 
#line 875 
    ;
    
#line 875 
    __retres = "INSUFFICIENT_CF_POLL";
    
#line 875 
    goto return_label;
    case (unsigned int)144: 
#line 876 
    ;
    
#line 876 
    __retres = "PASSIVE_NO_RX";
    
#line 876 
    goto return_label;
    case (unsigned int)145: 
#line 877 
    ;
    
#line 877 
    __retres = "NO_BEACON_ON_RADAR";
    
#line 877 
    goto return_label;
  }
  
#line 880 
  __retres = "UNKNOWN";
  return_label: 
#line 880 
                return __retres;
}


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_count_agg_tx_err_status(struct iwl_priv *priv, u16 status)
{
  
#line 889 
  status = (unsigned short)((unsigned int)status & 4095U);
  
#line 891 
  switch ((int)status) {
    case 1: 
#line 892 
    ;
    
#line 893 
    priv->reply_agg_tx_stats.underrun += 1U;
    
#line 894 
    goto ldv_55551;
    case 2: 
#line 895 
    ;
    
#line 896 
    priv->reply_agg_tx_stats.bt_prio += 1U;
    
#line 897 
    goto ldv_55551;
    case 4: 
#line 898 
    ;
    
#line 899 
    priv->reply_agg_tx_stats.few_bytes += 1U;
    
#line 900 
    goto ldv_55551;
    case 8: 
#line 901 
    ;
    
#line 902 
    priv->reply_agg_tx_stats.abort += 1U;
    
#line 903 
    goto ldv_55551;
    case 16: 
#line 904 
    ;
    
#line 905 
    priv->reply_agg_tx_stats.last_sent_ttl += 1U;
    
#line 906 
    goto ldv_55551;
    case 32: 
#line 907 
    ;
    
#line 908 
    priv->reply_agg_tx_stats.last_sent_try += 1U;
    
#line 909 
    goto ldv_55551;
    case 64: 
#line 910 
    ;
    
#line 911 
    priv->reply_agg_tx_stats.last_sent_bt_kill += 1U;
    
#line 912 
    goto ldv_55551;
    case 128: 
#line 913 
    ;
    
#line 914 
    priv->reply_agg_tx_stats.scd_query += 1U;
    
#line 915 
    goto ldv_55551;
    case 256: 
#line 916 
    ;
    
#line 917 
    priv->reply_agg_tx_stats.bad_crc32 += 1U;
    
#line 918 
    goto ldv_55551;
    case 511: 
#line 919 
    ;
    
#line 920 
    priv->reply_agg_tx_stats.response += 1U;
    
#line 921 
    goto ldv_55551;
    case 512: 
#line 922 
    ;
    
#line 923 
    priv->reply_agg_tx_stats.dump_tx += 1U;
    
#line 924 
    goto ldv_55551;
    case 1024: 
#line 925 
    ;
    
#line 926 
    priv->reply_agg_tx_stats.delay_tx += 1U;
    
#line 927 
    goto ldv_55551;
    default: 
#line 928 
    ;
    
#line 929 
    priv->reply_agg_tx_stats.unknown += 1U;
    
#line 930 
    goto ldv_55551;
  }
  ldv_55551: 
#line 932 
  ;
  
#line 933 
  return;
}


#line 934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
__inline static u32 iwlagn_get_scd_ssn(struct iwlagn_tx_resp *tx_resp)
{
  u32 __retres;
  __u32 tmp;
  
#line 937 
  tmp = __le32_to_cpup((__le32 const *)(& tx_resp->status) + (int)tx_resp->frame_count);
  
#line 937 
  __retres = tmp & 4095U;
  
#line 937 
  return __retres;
}


#line 968 
void __compiletime_assert_968(void);


#line 974 
void __compiletime_assert_977(void);


#line 940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwl_rx_reply_tx_agg(struct iwl_priv *priv, struct iwlagn_tx_resp *tx_resp)
{
  int i;
  u32 tmp_0;
  
#line 943 
  struct agg_tx_status *frame_status = & tx_resp->status;
  
#line 944 
  int tid = (int)tx_resp->ra_tid & 15;
  
#line 946 
  int sta_id = (int)tx_resp->ra_tid >> 4;
  
#line 948 
  struct iwl_ht_agg *agg = & priv->tid_data[sta_id][tid].agg;
  
#line 949 
  u32 status = (unsigned int)tx_resp->status.status;
  {
    
#line 952 
    int __ret_warn_on = tid == 8;
    
#line 952 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 952 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c",952); else ;
    
#line 952 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 954 
  if ((int)agg->wait_for_ba != 0) {
    {
      
#line 955 
      bool __cond = (_Bool)((int)*("got tx response w/o block-ack\n" + 29UL) != 10);
      
#line 955 
      if ((int)__cond != 0) 
#line 955 
                            __compiletime_assert_956(); else ;
    }
    
#line 955 
    __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwl_rx_reply_tx_agg","got tx response w/o block-ack\n");
  }
  else ;
  
#line 958 
  agg->rate_n_flags = tx_resp->rate_n_flags;
  
#line 959 
  agg->wait_for_ba = (_Bool)((unsigned int)tx_resp->frame_count > 1U);
  
#line 965 
  if ((((unsigned int)tx_resp->bt_kill_count != 0U && (unsigned int)tx_resp->frame_count == 1U) && (priv->lib)->bt_params != (struct iwl_dvm_bt_params const *)0) && (int)((priv->lib)->bt_params)->advanced_bt_coexist != 0) {
    {
      
#line 968 
      bool __cond_0 = (_Bool)((int)*("receive reply tx w/ bt_kill\n" + 27UL) != 10);
      
#line 968 
      if ((int)__cond_0 != 0) 
#line 968 
                              __compiletime_assert_968(); else ;
    }
    
#line 968 
    __iwl_dbg(priv->dev,32768U,(_Bool)0,"iwl_rx_reply_tx_agg","receive reply tx w/ bt_kill\n");
  }
  else ;
  
#line 971 
  if ((unsigned int)tx_resp->frame_count == 1U) 
#line 972 
                                                goto return_label; else ;
  {
    
#line 974 
    bool __cond_1 = (_Bool)((int)*("TXQ %d initial_rate 0x%x ssn %d frm_cnt %d\n" + 42UL) != 10);
    
#line 974 
    if ((int)__cond_1 != 0) 
#line 974 
                            __compiletime_assert_977(); else ;
  }
  
#line 974 
  ;
  
#line 974 
  tmp_0 = iwlagn_get_scd_ssn(tx_resp);
  
#line 974 
  ;
  
#line 974 
  ;
  
#line 974 
  ;
  
#line 974 
  __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwl_rx_reply_tx_agg","TXQ %d initial_rate 0x%x ssn %d frm_cnt %d\n",(int)agg->txq_id,tx_resp->rate_n_flags,tmp_0,(int)tx_resp->frame_count);
  
#line 980 
  i = 0;
  
#line 980 
  goto ldv_55600;
  ldv_55599: 
#line 981 
  ;
  {
    
#line 981 
    u16 fstatus = (frame_status + i)->status;
    
#line 982 
    u8 retry_cnt = (unsigned char)((int)fstatus >> 12);
    
#line 984 
    if ((status & 4095U) != 0U) 
#line 985 
                                iwlagn_count_agg_tx_err_status(priv,(unsigned short)((int)fstatus)); else ;
    
#line 987 
    if ((status & 12U) != 0U) 
#line 989 
                              goto ldv_55594; else ;
    
#line 991 
    if ((status & 4095U) != 0U || (unsigned int)retry_cnt > 1U) {
      char const *tmp_0_0;
      {
        
#line 992 
        bool __cond_2 = (_Bool)((int)*("%d: status %s (0x%04x), try-count (0x%01x)\n" + 42UL) != 10);
        
#line 992 
        if ((int)__cond_2 != 0) 
#line 992 
                                __compiletime_assert_997(); else ;
      }
      
#line 992 
      ;
      
#line 992 
      ;
      
#line 992 
      tmp_0_0 = iwl_get_agg_tx_fail_reason((unsigned short)((int)fstatus));
      
#line 992 
      ;
      
#line 992 
      ;
      
#line 992 
      __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwl_rx_reply_tx_agg","%d: status %s (0x%04x), try-count (0x%01x)\n",i,tmp_0_0,(int)fstatus & 4095,(int)retry_cnt);
    }
    else ;
  }
  ldv_55594: 
#line 995 
  ;
  
#line 980 
  i += 1;
  ldv_55600: 
#line 981 
  ;
  
#line 980 
  if ((int)tx_resp->frame_count > i) 
#line 982 
                                     goto ldv_55599; else 
#line 985 
                                                          goto ldv_55601;
  ldv_55601: 
#line 986 
  ;
  return_label: 
#line 987 
                return;
}


#line 1004  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
char const *iwl_get_agg_tx_fail_reason(u16 status)
{
  char const *__retres;
  
#line 1006 
  status = (unsigned short)((unsigned int)status & 4095U);
  
#line 1007 
  switch ((int)status) {
    case 0: 
#line 1008 
    ;
    
#line 1009 
    __retres = "SUCCESS";
    
#line 1009 
    goto return_label;
    case 1: 
#line 1010 
    ;
    
#line 1010 
    __retres = "UNDERRUN_MSK";
    
#line 1010 
    goto return_label;
    case 2: 
#line 1011 
    ;
    
#line 1011 
    __retres = "BT_PRIO_MSK";
    
#line 1011 
    goto return_label;
    case 4: 
#line 1012 
    ;
    
#line 1012 
    __retres = "FEW_BYTES_MSK";
    
#line 1012 
    goto return_label;
    case 8: 
#line 1013 
    ;
    
#line 1013 
    __retres = "ABORT_MSK";
    
#line 1013 
    goto return_label;
    case 16: 
#line 1014 
    ;
    
#line 1014 
    __retres = "LAST_SENT_TTL_MSK";
    
#line 1014 
    goto return_label;
    case 32: 
#line 1015 
    ;
    
#line 1015 
    __retres = "LAST_SENT_TRY_CNT_MSK";
    
#line 1015 
    goto return_label;
    case 64: 
#line 1016 
    ;
    
#line 1016 
    __retres = "LAST_SENT_BT_KILL_MSK";
    
#line 1016 
    goto return_label;
    case 128: 
#line 1017 
    ;
    
#line 1017 
    __retres = "SCD_QUERY_MSK";
    
#line 1017 
    goto return_label;
    case 256: 
#line 1018 
    ;
    
#line 1018 
    __retres = "TEST_BAD_CRC32_MSK";
    
#line 1018 
    goto return_label;
    case 511: 
#line 1019 
    ;
    
#line 1019 
    __retres = "RESPONSE_MSK";
    
#line 1019 
    goto return_label;
    case 512: 
#line 1020 
    ;
    
#line 1020 
    __retres = "DUMP_TX_MSK";
    
#line 1020 
    goto return_label;
    case 1024: 
#line 1021 
    ;
    
#line 1021 
    __retres = "DELAY_TX_MSK";
    
#line 1021 
    goto return_label;
  }
  
#line 1024 
  __retres = "UNKNOWN";
  return_label: 
#line 1024 
                return __retres;
}


#line 1028  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_count_tx_err_status(struct iwl_priv *priv, u16 status)
{
  
#line 1030 
  status = (unsigned short)((unsigned int)status & 255U);
  
#line 1032 
  switch ((int)status) {
    case 64: 
#line 1033 
    ;
    
#line 1034 
    priv->reply_tx_stats.pp_delay += 1U;
    
#line 1035 
    goto ldv_55623;
    case 65: 
#line 1036 
    ;
    
#line 1037 
    priv->reply_tx_stats.pp_few_bytes += 1U;
    
#line 1038 
    goto ldv_55623;
    case 66: 
#line 1039 
    ;
    
#line 1040 
    priv->reply_tx_stats.pp_bt_prio += 1U;
    
#line 1041 
    goto ldv_55623;
    case 67: 
#line 1042 
    ;
    
#line 1043 
    priv->reply_tx_stats.pp_quiet_period += 1U;
    
#line 1044 
    goto ldv_55623;
    case 68: 
#line 1045 
    ;
    
#line 1046 
    priv->reply_tx_stats.pp_calc_ttak += 1U;
    
#line 1047 
    goto ldv_55623;
    case 129: 
#line 1048 
    ;
    
#line 1049 
    priv->reply_tx_stats.int_crossed_retry += 1U;
    
#line 1050 
    goto ldv_55623;
    case 130: 
#line 1051 
    ;
    
#line 1052 
    priv->reply_tx_stats.short_limit += 1U;
    
#line 1053 
    goto ldv_55623;
    case 131: 
#line 1054 
    ;
    
#line 1055 
    priv->reply_tx_stats.long_limit += 1U;
    
#line 1056 
    goto ldv_55623;
    case 132: 
#line 1057 
    ;
    
#line 1058 
    priv->reply_tx_stats.fifo_underrun += 1U;
    
#line 1059 
    goto ldv_55623;
    case 133: 
#line 1060 
    ;
    
#line 1061 
    priv->reply_tx_stats.drain_flow += 1U;
    
#line 1062 
    goto ldv_55623;
    case 134: 
#line 1063 
    ;
    
#line 1064 
    priv->reply_tx_stats.rfkill_flush += 1U;
    
#line 1065 
    goto ldv_55623;
    case 135: 
#line 1066 
    ;
    
#line 1067 
    priv->reply_tx_stats.life_expire += 1U;
    
#line 1068 
    goto ldv_55623;
    case 136: 
#line 1069 
    ;
    
#line 1070 
    priv->reply_tx_stats.dest_ps += 1U;
    
#line 1071 
    goto ldv_55623;
    case 137: 
#line 1072 
    ;
    
#line 1073 
    priv->reply_tx_stats.host_abort += 1U;
    
#line 1074 
    goto ldv_55623;
    case 138: 
#line 1075 
    ;
    
#line 1076 
    priv->reply_tx_stats.bt_retry += 1U;
    
#line 1077 
    goto ldv_55623;
    case 139: 
#line 1078 
    ;
    
#line 1079 
    priv->reply_tx_stats.sta_invalid += 1U;
    
#line 1080 
    goto ldv_55623;
    case 140: 
#line 1081 
    ;
    
#line 1082 
    priv->reply_tx_stats.frag_drop += 1U;
    
#line 1083 
    goto ldv_55623;
    case 141: 
#line 1084 
    ;
    
#line 1085 
    priv->reply_tx_stats.tid_disable += 1U;
    
#line 1086 
    goto ldv_55623;
    case 142: 
#line 1087 
    ;
    
#line 1088 
    priv->reply_tx_stats.fifo_flush += 1U;
    
#line 1089 
    goto ldv_55623;
    case 143: 
#line 1090 
    ;
    
#line 1091 
    priv->reply_tx_stats.insuff_cf_poll += 1U;
    
#line 1092 
    goto ldv_55623;
    case 144: 
#line 1093 
    ;
    
#line 1094 
    priv->reply_tx_stats.fail_hw_drop += 1U;
    
#line 1095 
    goto ldv_55623;
    case 145: 
#line 1096 
    ;
    
#line 1097 
    priv->reply_tx_stats.sta_color_mismatch += 1U;
    
#line 1098 
    goto ldv_55623;
    default: 
#line 1099 
    ;
    
#line 1100 
    priv->reply_tx_stats.unknown += 1U;
    
#line 1101 
    goto ldv_55623;
  }
  ldv_55623: 
#line 1103 
  ;
  
#line 1104 
  return;
}


#line 1105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwlagn_set_tx_status(struct iwl_priv *priv, struct ieee80211_tx_info *info, struct iwlagn_tx_resp *tx_resp)
{
  u32 tmp;
  int tmp_1;
  bool tmp_0;
  
#line 1109 
  u16 status = tx_resp->status.status;
  
#line 1111 
  info->flags &= 4294967231U;
  
#line 1113 
  info->__anonCompField_ieee80211_tx_info_99.status.rates[0].count = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))))((unsigned int)tx_resp->failure_frame + 1U);
  
#line 1114 
  tmp = iwl_tx_status_to_mac80211((unsigned int)status);
  
#line 1114 
  info->flags |= tmp;
  
#line 1115 
  iwlagn_hwrate_to_tx_control(priv,tx_resp->rate_n_flags,info);
  
#line 1117 
  tmp_0 = iwl_is_tx_success((unsigned int)status);
  
#line 1117 
  if (tmp_0) 
#line 1117 
             tmp_1 = 0; else 
#line 1117 
                             tmp_1 = 1;
  
#line 1117 
  if (tmp_1) 
#line 1118 
             iwlagn_count_tx_err_status(priv,(unsigned short)((int)status)); else ;
  
#line 1119 
  return;
}


#line 1125 
void __compiletime_assert_1125(void);


#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
static void iwl_check_abort_status(struct iwl_priv *priv, u8 frame_count, u32 status)
{
  
#line 1124 
  if ((unsigned int)frame_count == 1U && status == 134U) {
    int tmp;
    {
      
#line 1125 
      bool __cond = (_Bool)((int)*("Tx flush command to flush out all frames\n" + 40UL) != 10);
      
#line 1125 
      if ((int)__cond != 0) 
#line 1125 
                            __compiletime_assert_1125(); else ;
    }
    
#line 1125 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Tx flush command to flush out all frames\n");
    
#line 1126 
    tmp = constant_test_bit(5L,(unsigned long const volatile *)(& priv->status));
    
#line 1126 
    if (tmp == 0) 
#line 1127 
                  ldv_queue_work_87(priv->workqueue,& priv->tx_flush); else ;
  }
  else ;
  
#line 1129 
  return;
}


#line 1162 
void __compiletime_assert_1163(void);


#line 1191 
void __compiletime_assert_1192(void);


#line 1219 
void __compiletime_assert_1220(void);


#line 1251 
void __compiletime_assert_1252(void);


#line 1258 
void __compiletime_assert_1259(void);


#line 1261 
void __compiletime_assert_1266(void);


#line 1131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
int iwlagn_rx_reply_tx(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  struct ieee80211_hdr *hdr;
  u32 tmp_0;
  int tid;
  int sta_id;
  int freed;
  struct ieee80211_tx_info *info;
  struct sk_buff_head skbs;
  struct sk_buff *skb;
  struct iwl_rxon_context *ctx;
  int tmp_8;
  
#line 1134 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 1135 
  u16 sequence = pkt->hdr.sequence;
  
#line 1136 
  int txq_id = ((int)sequence >> 8) & 31;
  
#line 1137 
  int cmd_index = (int)sequence & 255;
  
#line 1138 
  struct iwlagn_tx_resp *tx_resp = (struct iwlagn_tx_resp *)(& pkt->data);
  
#line 1140 
  u32 status = (unsigned int)tx_resp->status.status;
  
#line 1141 
  tmp_0 = iwlagn_get_scd_ssn(tx_resp);
  
#line 1141 
  u16 ssn = (unsigned short)tmp_0;
  
#line 1149 
  bool is_agg = (_Bool)(txq_id > 10);
  
#line 1151 
  tid = (int)tx_resp->ra_tid & 15;
  
#line 1153 
  sta_id = (int)tx_resp->ra_tid >> 4;
  
#line 1156 
  ldv_spin_lock_bh_88(& priv->sta_lock);
  
#line 1158 
  if ((int)is_agg != 0) {
    {
      bool __warned;
      
#line 1159 
      int __ret_warn_once = (sta_id > 15 || tid > 7) != 0;
      
#line 1159 
      if ((long)(__ret_warn_once != 0) != 0L) {
        int tmp_1;
        {
          
#line 1159 
          int __ret_warn_on = ! __warned;
          
#line 1159 
          if ((long)(__ret_warn_on != 0) != 0L) 
#line 1159 
                                                warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c",1160); else ;
          
#line 1159 
          tmp_1 = (long)(__ret_warn_on != 0);
        }
        
#line 1159 
        if ((long)tmp_1 != 0L) 
#line 1159 
                               __warned = (_Bool)1; else ;
      }
      else ;
      
#line 1159 
      long tmp_2 = (long)(__ret_warn_once != 0);
    }
    
#line 1161 
    if ((int)priv->tid_data[sta_id][tid].agg.txq_id != txq_id) {
      {
        
#line 1162 
        bool __cond = (_Bool)((int)*("txq_id mismatch: %d %d\n" + 22UL) != 10);
        
#line 1162 
        if ((int)__cond != 0) 
#line 1162 
                              __compiletime_assert_1163(); else ;
      }
      
#line 1162 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"txq_id mismatch: %d %d\n",txq_id,(int)priv->tid_data[sta_id][tid].agg.txq_id);
    }
    else ;
    
#line 1164 
    iwl_rx_reply_tx_agg(priv,tx_resp);
  }
  else ;
  
#line 1167 
  __skb_queue_head_init(& skbs);
  
#line 1169 
  if ((unsigned int)tx_resp->frame_count == 1U) {
    int tmp_2_0;
    struct ieee80211_tx_info *tmp_6;
    char const *tmp_7;
    
#line 1170 
    u16 next_reclaimed = tx_resp->seq_ctl;
    
#line 1171 
    next_reclaimed = (unsigned short)((unsigned int)((unsigned short)(((int)next_reclaimed + 16) >> 4)) & 4095U);
    
#line 1173 
    if ((int)is_agg != 0) 
#line 1185 
                          next_reclaimed = ssn; else ;
    
#line 1188 
    if (tid != 8) {
      
#line 1189 
      priv->tid_data[sta_id][tid].next_reclaimed = next_reclaimed;
      {
        
#line 1191 
        bool __cond_0 = (_Bool)((int)*("Next reclaimed packet:%d\n" + 24UL) != 10);
        
#line 1191 
        if ((int)__cond_0 != 0) 
#line 1191 
                                __compiletime_assert_1192(); else ;
      }
      
#line 1191 
      __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwlagn_rx_reply_tx","Next reclaimed packet:%d\n",(int)next_reclaimed);
    }
    else ;
    
#line 1195 
    iwl_trans_reclaim(priv->trans,txq_id,(int)ssn,& skbs);
    
#line 1197 
    iwlagn_check_ratid_empty(priv,sta_id,(unsigned char)((int)((unsigned char)tid)));
    
#line 1198 
    freed = 0;
    
#line 1201 
    skb = skbs.next;
    
#line 1201 
    goto ldv_55710;
    ldv_55709: 
#line 1202 
    ;
    
#line 1202 
    hdr = (struct ieee80211_hdr *)skb->data;
    
#line 1204 
    tmp_2_0 = ieee80211_is_data_qos((unsigned short)((int)hdr->frame_control));
    
#line 1204 
    if (tmp_2_0 == 0) 
#line 1205 
                      priv->last_seq_ctl = tx_resp->seq_ctl; else ;
    
#line 1207 
    info = IEEE80211_SKB_CB(skb);
    
#line 1208 
    ctx = (struct iwl_rxon_context *)info->__anonCompField_ieee80211_tx_info_99.driver_data[0];
    
#line 1209 
    iwl_trans_free_tx_cmd(priv->trans,(struct iwl_device_cmd *)info->__anonCompField_ieee80211_tx_info_99.driver_data[1]);
    
#line 1212 
    memset((void *)(& info->__anonCompField_ieee80211_tx_info_99.status),0,40UL);
    
#line 1214 
    if ((status == 144U && ctx->vif != (struct ieee80211_vif *)0) && (ctx->vif)->type == (unsigned int)NL80211_IFTYPE_STATION) {
      char const *tmp_3;
      
#line 1218 
      priv->passive_no_rx = (_Bool)1;
      {
        
#line 1219 
        bool __cond_1 = (_Bool)((int)*("stop all queues: passive channel\n" + 32UL) != 10);
        
#line 1219 
        if ((int)__cond_1 != 0) 
#line 1219 
                                __compiletime_assert_1220(); else ;
      }
      
#line 1219 
      __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_rx_reply_tx","stop all queues: passive channel\n");
      
#line 1221 
      ieee80211_stop_queues(priv->hw);
      {
        
#line 1223 
        bool __cond_2 = (_Bool)((int)*("TXQ %d status %s (0x%08x) " + 54UL) != 10);
        
#line 1223 
        if ((int)__cond_2 != 0) 
#line 1223 
                                __compiletime_assert_1230(); else ;
      }
      
#line 1223 
      ;
      
#line 1223 
      ;
      
#line 1223 
      ;
      
#line 1223 
      tmp_3 = iwl_get_tx_fail_reason(status);
      
#line 1223 
      ;
      
#line 1223 
      ;
      
#line 1223 
      __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwlagn_rx_reply_tx","TXQ %d status %s (0x%08x) ",txq_id,tmp_3,status,tx_resp->rate_n_flags,(int)tx_resp->failure_frame);
      {
        
#line 1232 
        bool __cond_3 = (_Bool)((int)*("FrameCnt = %d, idx=%d\n" + 21UL) != 10);
        
#line 1232 
        if ((int)__cond_3 != 0) 
#line 1232 
                                __compiletime_assert_1234(); else ;
      }
      
#line 1232 
      __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwlagn_rx_reply_tx","FrameCnt = %d, idx=%d\n",(int)tx_resp->frame_count,cmd_index);
    }
    else ;
    
#line 1238 
    if ((int)is_agg != 0) {
      int tmp_5;
      bool tmp_4;
      
#line 1238 
      tmp_4 = iwl_is_tx_success(status);
      
#line 1238 
      if (tmp_4) 
#line 1238 
                 tmp_5 = 0; else 
#line 1238 
                                 tmp_5 = 1;
      
#line 1238 
      if (tmp_5) 
#line 1239 
                 info->flags |= 2048U; else ;
    }
    else ;
    
#line 1240 
    ;
    
#line 1240 
    tmp_6 = IEEE80211_SKB_CB(skb);
    
#line 1240 
    ;
    
#line 1240 
    iwlagn_set_tx_status(priv,tmp_6,tx_resp);
    
#line 1242 
    if (! is_agg) 
#line 1243 
                  iwlagn_non_agg_tx_status(priv,ctx,(u8 const *)(& hdr->addr1)); else ;
    
#line 1245 
    freed += 1;
    
#line 1201 
    skb = skb->__anonCompField_sk_buff_68.__anonCompField___anonunion_228_67.next;
    ldv_55710: 
#line 1202 
    ;
    
#line 1201 
    if ((struct sk_buff *)(& skbs) != skb) 
#line 1203 
                                           goto ldv_55709; else 
#line 1206 
                                                                goto ldv_55711;
    ldv_55711: 
#line 1207 
    ;
    
#line 1248 
    if (tid != 8) {
      
#line 1249 
      priv->tid_data[sta_id][tid].next_reclaimed = next_reclaimed;
      {
        
#line 1251 
        bool __cond_4 = (_Bool)((int)*("Next reclaimed packet:%d\n" + 24UL) != 10);
        
#line 1251 
        if ((int)__cond_4 != 0) 
#line 1251 
                                __compiletime_assert_1252(); else ;
      }
      
#line 1251 
      __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwlagn_rx_reply_tx","Next reclaimed packet:%d\n",(int)next_reclaimed);
    }
    else ;
    
#line 1255 
    if (! is_agg && freed != 1) {
      {
        
#line 1256 
        bool __cond_5 = (_Bool)((int)*("Q: %d, freed %d\n" + 15UL) != 10);
        
#line 1256 
        if ((int)__cond_5 != 0) 
#line 1256 
                                __compiletime_assert_1256(); else ;
      }
      
#line 1256 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Q: %d, freed %d\n",txq_id,freed);
    }
    else ;
    {
      
#line 1258 
      bool __cond_6 = (_Bool)((int)*("TXQ %d status %s (0x%08x)\n" + 25UL) != 10);
      
#line 1258 
      if ((int)__cond_6 != 0) 
#line 1258 
                              __compiletime_assert_1259(); else ;
    }
    
#line 1258 
    ;
    
#line 1258 
    tmp_7 = iwl_get_tx_fail_reason(status);
    
#line 1258 
    ;
    
#line 1258 
    ;
    
#line 1258 
    __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwlagn_rx_reply_tx","TXQ %d status %s (0x%08x)\n",txq_id,tmp_7,status);
    {
      
#line 1261 
      bool __cond_7 = (_Bool)((int)*("\t\t\t\tinitial_rate 0x%x retries %d, idx=%d ssn=%d seq_ctl=0x%x\n" + 60UL) != 10);
      
#line 1261 
      if ((int)__cond_7 != 0) 
#line 1261 
                              __compiletime_assert_1266(); else ;
    }
    
#line 1261 
    __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwlagn_rx_reply_tx","\t\t\t\tinitial_rate 0x%x retries %d, idx=%d ssn=%d seq_ctl=0x%x\n",tx_resp->rate_n_flags,(int)tx_resp->failure_frame,(int)sequence & 255,(int)ssn,(int)tx_resp->seq_ctl);
  }
  else ;
  
#line 1269 
  iwl_check_abort_status(priv,(unsigned char)((int)tx_resp->frame_count),status);
  
#line 1270 
  ldv_spin_unlock_bh_89_0(& priv->sta_lock);
  
#line 1272 
  goto ldv_55729;
  ldv_55728: 
#line 1273 
  ;
  
#line 1273 
  skb = __skb_dequeue(& skbs);
  
#line 1274 
  ieee80211_tx_status(priv->hw,skb);
  ldv_55729: 
#line 1275 
  ;
  
#line 1272 
  tmp_8 = skb_queue_empty((struct sk_buff_head const *)(& skbs));
  
#line 1272 
  if (tmp_8 == 0) 
#line 1274 
                  goto ldv_55728; else 
#line 1277 
                                       goto ldv_55730;
  ldv_55730: 
#line 1278 
  ;
  
#line 1277 
  __retres = 0;
  
#line 1277 
  return __retres;
}


#line 1307 
void __compiletime_assert_1308(void);


#line 1320 
void __compiletime_assert_1320(void);


#line 1332 
void __compiletime_assert_1334(void);


#line 1347 
void __compiletime_assert_1351(void);


#line 1364 
void __compiletime_assert_1366(void);


#line 1286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c"
int iwlagn_rx_reply_compressed_ba(struct iwl_priv *priv, struct iwl_rx_cmd_buffer *rxb, struct iwl_device_cmd *cmd)
{
  int __retres;
  struct iwl_ht_agg *agg;
  struct sk_buff_head reclaimed_skbs;
  struct sk_buff *skb;
  int sta_id;
  int tid;
  int freed;
  int tmp_3;
  
#line 1290 
  struct iwl_rx_packet *pkt = rxb_addr(rxb);
  
#line 1291 
  struct iwl_compressed_ba_resp *ba_resp = (struct iwl_compressed_ba_resp *)(& pkt->data);
  
#line 1300 
  u16 scd_flow = ba_resp->scd_flow;
  
#line 1304 
  u16 ba_resp_scd_ssn = ba_resp->scd_ssn;
  
#line 1306 
  if ((int)scd_flow >= ((priv->cfg)->base_params)->num_of_queues) {
    {
      
#line 1307 
      bool __cond = (_Bool)((int)*("BUG_ON scd_flow is bigger than number of queues\n" + 47UL) != 10);
      
#line 1307 
      if ((int)__cond != 0) 
#line 1307 
                            __compiletime_assert_1308(); else ;
    }
    
#line 1307 
    __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"BUG_ON scd_flow is bigger than number of queues\n");
    
#line 1309 
    __retres = 0;
    
#line 1309 
    goto return_label;
  }
  else ;
  
#line 1312 
  sta_id = (int)ba_resp->sta_id;
  
#line 1313 
  tid = (int)ba_resp->tid;
  
#line 1314 
  agg = & priv->tid_data[sta_id][tid].agg;
  
#line 1316 
  ldv_spin_lock_bh_90_0(& priv->sta_lock);
  
#line 1318 
  if ((long)(! agg->wait_for_ba) != 0L) {
    
#line 1319 
    if ((long)(ba_resp->bitmap != 0ULL) != 0L) {
      {
        
#line 1320 
        bool __cond_0 = (_Bool)((int)*("Received BA when not expected\n" + 29UL) != 10);
        
#line 1320 
        if ((int)__cond_0 != 0) 
#line 1320 
                                __compiletime_assert_1320(); else ;
      }
      
#line 1320 
      __iwl_err(priv->dev,(_Bool)0,(_Bool)0,"Received BA when not expected\n");
    }
    else ;
    
#line 1321 
    ldv_spin_unlock_bh_91_0(& priv->sta_lock);
    
#line 1322 
    __retres = 0;
    
#line 1322 
    goto return_label;
  }
  else ;
  
#line 1325 
  if ((long)((int)agg->txq_id != (int)scd_flow) != 0L) {
    {
      
#line 1332 
      bool __cond_1 = (_Bool)((int)*("Bad queue mapping txq_id=%d, agg_txq[sta:%d,tid:%d]=%d\n" + 54UL) != 10);
      
#line 1332 
      if ((int)__cond_1 != 0) 
#line 1332 
                              __compiletime_assert_1334(); else ;
    }
    
#line 1332 
    __iwl_dbg(priv->dev,2147483648U,(_Bool)0,"iwlagn_rx_reply_compressed_ba","Bad queue mapping txq_id=%d, agg_txq[sta:%d,tid:%d]=%d\n",(int)scd_flow,sta_id,tid,(int)agg->txq_id);
    
#line 1335 
    ldv_spin_unlock_bh_92(& priv->sta_lock);
    
#line 1336 
    __retres = 0;
    
#line 1336 
    goto return_label;
  }
  else ;
  
#line 1339 
  __skb_queue_head_init(& reclaimed_skbs);
  
#line 1344 
  iwl_trans_reclaim(priv->trans,(int)scd_flow,(int)ba_resp_scd_ssn,& reclaimed_skbs);
  {
    
#line 1347 
    bool __cond_2 = (_Bool)((int)*("REPLY_COMPRESSED_BA [%d] Received from %pM, " + 55UL) != 10);
    
#line 1347 
    if ((int)__cond_2 != 0) 
#line 1347 
                            __compiletime_assert_1351(); else ;
  }
  
#line 1347 
  __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwlagn_rx_reply_compressed_ba","REPLY_COMPRESSED_BA [%d] Received from %pM, ",(int)agg->wait_for_ba,(u8 *)(& ba_resp->sta_addr_lo32),(int)ba_resp->sta_id);
  {
    
#line 1352 
    bool __cond_3 = (_Bool)((int)*("TID = %d, SeqCtl = %d, bitmap = 0x%llx, " + 85UL) != 10);
    
#line 1352 
    if ((int)__cond_3 != 0) 
#line 1352 
                            __compiletime_assert_1357(); else ;
  }
  
#line 1352 
  __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwlagn_rx_reply_compressed_ba","TID = %d, SeqCtl = %d, bitmap = 0x%llx, ",(int)ba_resp->tid,(int)ba_resp->seq_ctl,ba_resp->bitmap,(int)scd_flow,(int)ba_resp_scd_ssn,(int)ba_resp->txed,(int)ba_resp->txed_2_done);
  
#line 1360 
  agg->wait_for_ba = (_Bool)0;
  
#line 1363 
  if ((int)ba_resp->txed_2_done > (int)ba_resp->txed) {
    {
      
#line 1364 
      bool __cond_4 = (_Bool)((int)*("bogus sent(%d) and ack(%d) count\n" + 32UL) != 10);
      
#line 1364 
      if ((int)__cond_4 != 0) 
#line 1364 
                              __compiletime_assert_1366(); else ;
    }
    
#line 1364 
    __iwl_dbg(priv->dev,1073741824U,(_Bool)0,"iwlagn_rx_reply_compressed_ba","bogus sent(%d) and ack(%d) count\n",(int)ba_resp->txed,(int)ba_resp->txed_2_done);
    
#line 1371 
    ba_resp->txed = ba_resp->txed_2_done;
  }
  else ;
  
#line 1374 
  priv->tid_data[sta_id][tid].next_reclaimed = ba_resp_scd_ssn;
  
#line 1376 
  iwlagn_check_ratid_empty(priv,sta_id,(unsigned char)((int)((unsigned char)tid)));
  
#line 1377 
  freed = 0;
  
#line 1379 
  skb = reclaimed_skbs.next;
  
#line 1379 
  goto ldv_55779;
  ldv_55778: 
#line 1380 
  ;
  {
    int tmp_2_0;
    
#line 1380 
    struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
    
#line 1381 
    struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
    
#line 1383 
    tmp_2_0 = ieee80211_is_data_qos((unsigned short)((int)hdr->frame_control));
    
#line 1383 
    if (tmp_2_0 != 0) 
#line 1384 
                      freed += 1;
    else {
      bool __warned;
      
#line 1386 
      int __ret_warn_once = 1;
      
#line 1386 
      if ((long)(__ret_warn_once != 0) != 0L) {
        int tmp_1;
        {
          
#line 1386 
          int __ret_warn_on = ! __warned;
          
#line 1386 
          if ((long)(__ret_warn_on != 0) != 0L) 
#line 1386 
                                                warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/iwlwifi/dvm/tx.c",1386); else ;
          
#line 1386 
          tmp_1 = (long)(__ret_warn_on != 0);
        }
        
#line 1386 
        if ((long)tmp_1 != 0L) 
#line 1386 
                               __warned = (_Bool)1; else ;
      }
      else ;
      
#line 1386 
      long tmp_2 = (long)(__ret_warn_once != 0);
    }
    
#line 1388 
    iwl_trans_free_tx_cmd(priv->trans,(struct iwl_device_cmd *)info->__anonCompField_ieee80211_tx_info_99.driver_data[1]);
    
#line 1390 
    memset((void *)(& info->__anonCompField_ieee80211_tx_info_99.status),0,40UL);
    
#line 1395 
    info->flags |= 512U;
    
#line 1397 
    if (freed == 1) {
      
#line 1400 
      info = IEEE80211_SKB_CB(skb);
      
#line 1401 
      memset((void *)(& info->__anonCompField_ieee80211_tx_info_99.status),0,40UL);
      
#line 1402 
      info->flags |= 1024U;
      
#line 1403 
      info->__anonCompField_ieee80211_tx_info_99.status.ampdu_ack_len = ba_resp->txed_2_done;
      
#line 1404 
      info->__anonCompField_ieee80211_tx_info_99.status.ampdu_len = ba_resp->txed;
      
#line 1405 
      iwlagn_hwrate_to_tx_control(priv,agg->rate_n_flags,info);
    }
    else ;
  }
  
#line 1379 
  skb = skb->__anonCompField_sk_buff_68.__anonCompField___anonunion_228_67.next;
  ldv_55779: 
#line 1380 
  ;
  
#line 1379 
  if ((struct sk_buff *)(& reclaimed_skbs) != skb) 
#line 1381 
                                                   goto ldv_55778; else 
                                                                    
#line 1384 
                                                                    goto ldv_55780;
  ldv_55780: 
#line 1385 
  ;
  
#line 1410 
  ldv_spin_unlock_bh_93_0(& priv->sta_lock);
  
#line 1412 
  goto ldv_55782;
  ldv_55781: 
#line 1413 
  ;
  
#line 1413 
  skb = __skb_dequeue(& reclaimed_skbs);
  
#line 1414 
  ieee80211_tx_status(priv->hw,skb);
  ldv_55782: 
#line 1415 
  ;
  
#line 1412 
  tmp_3 = skb_queue_empty((struct sk_buff_head const *)(& reclaimed_skbs));
  
#line 1412 
  if (tmp_3 == 0) 
#line 1414 
                  goto ldv_55781; else 
#line 1417 
                                       goto ldv_55783;
  ldv_55783: 
#line 1418 
  ;
  
#line 1417 
  __retres = 0;
  return_label: 
#line 1417 
                return __retres;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void atomic_inc_0(atomic_t *v)
{
  
#line 122 
  ldv_atomic_inc(v);
  
#line 123 
  return;
}


#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static int atomic_add_return_0(int i, atomic_t *v)
{
  int tmp;
  
#line 157 
  tmp = ldv_atomic_add_return(i,v);
  
#line 157 
  return tmp;
}


#line 752  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_lock_74_0(spinlock_t *lock)
{
  
#line 756 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 758 
  spin_lock_0(lock);
  
#line 759 
  return;
}


#line 762  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_75_0(spinlock_t *lock)
{
  
#line 766 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 768 
  spin_unlock_0(lock);
  
#line 769 
  return;
}


#line 772  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_76(spinlock_t *lock)
{
  
#line 776 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 778 
  spin_unlock_0(lock);
  
#line 779 
  return;
}


#line 782  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_lock_bh_77_0(spinlock_t *lock)
{
  
#line 786 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 788 
  spin_lock_bh_4(lock);
  
#line 789 
  return;
}


#line 792  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_78_0(spinlock_t *lock)
{
  
#line 796 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 798 
  spin_unlock_bh_4(lock);
  
#line 799 
  return;
}


#line 802  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_79_2(spinlock_t *lock)
{
  
#line 806 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 808 
  spin_unlock_bh_4(lock);
  
#line 809 
  return;
}


#line 812  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_80_1(spinlock_t *lock)
{
  
#line 816 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 818 
  spin_unlock_bh_4(lock);
  
#line 819 
  return;
}


#line 822  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_lock_bh_81(spinlock_t *lock)
{
  
#line 826 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 828 
  spin_lock_bh_4(lock);
  
#line 829 
  return;
}


#line 832  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_82_0(spinlock_t *lock)
{
  
#line 836 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 838 
  spin_unlock_bh_4(lock);
  
#line 839 
  return;
}


#line 842  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_lock_bh_83_0(spinlock_t *lock)
{
  
#line 846 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 848 
  spin_lock_bh_4(lock);
  
#line 849 
  return;
}


#line 852  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_84_0(spinlock_t *lock)
{
  
#line 856 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 858 
  spin_unlock_bh_4(lock);
  
#line 859 
  return;
}


#line 862  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_lock_bh_85_0(spinlock_t *lock)
{
  
#line 866 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 868 
  spin_lock_bh_4(lock);
  
#line 869 
  return;
}


#line 872  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_86_0(spinlock_t *lock)
{
  
#line 876 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 878 
  spin_unlock_bh_4(lock);
  
#line 879 
  return;
}


#line 882  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static bool ldv_queue_work_87(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 886 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 886 
  __retres = tmp != 0;
  
#line 886 
  return __retres;
}


#line 890  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_lock_bh_88(spinlock_t *lock)
{
  
#line 894 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 896 
  spin_lock_bh_4(lock);
  
#line 897 
  return;
}


#line 900  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_89_0(spinlock_t *lock)
{
  
#line 904 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 906 
  spin_unlock_bh_4(lock);
  
#line 907 
  return;
}


#line 910  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_lock_bh_90_0(spinlock_t *lock)
{
  
#line 914 
  ldv_spin_model_lock((char *)"sta_lock_of_iwl_priv");
  
#line 916 
  spin_lock_bh_4(lock);
  
#line 917 
  return;
}


#line 920  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_91_0(spinlock_t *lock)
{
  
#line 924 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 926 
  spin_unlock_bh_4(lock);
  
#line 927 
  return;
}


#line 930  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_92(spinlock_t *lock)
{
  
#line 934 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 936 
  spin_unlock_bh_4(lock);
  
#line 937 
  return;
}


#line 940  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/weaver/.tmp_tx.c.aux"
static void ldv_spin_unlock_bh_93_0(spinlock_t *lock)
{
  
#line 944 
  ldv_spin_model_unlock((char *)"sta_lock_of_iwl_priv");
  
#line 946 
  spin_unlock_bh_4(lock);
  
#line 947 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
__inline static void *ERR_PTR(long error)
{
  void *__retres;
  
#line 25 
  __retres = (void *)error;
  
#line 25 
  return __retres;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
int main(void);


#line 156 
void *ldv_character_driver_scenario_15(void *arg0);


#line 157 
void *ldv_character_driver_scenario_11(void *arg0);


#line 158 
void *ldv_character_driver_scenario_34(void *arg0);


#line 159 
void *ldv_character_driver_scenario_41(void *arg0);


#line 160 
void *ldv_character_driver_scenario_22(void *arg0);


#line 161 
void *ldv_character_driver_scenario_48(void *arg0);


#line 162 
void ldv_dispatch_instance_deregister_6_1(struct timer_list *arg0);


#line 163 
void *ldv_character_driver_scenario_23(void *arg0);


#line 164 
void *ldv_character_driver_scenario_17(void *arg0);


#line 165 
void *ldv_character_driver_scenario_43(void *arg0);


#line 166 
void ldv_dispatch_deregister_7_2(struct ieee80211_hw *arg0);


#line 167 
void *ldv_character_driver_scenario_20(void *arg0);


#line 168 
void *ldv_character_driver_scenario_29(void *arg0);


#line 169 
void *ldv_character_driver_scenario_37(void *arg0);


#line 170 
void *ldv_character_driver_scenario_10(void *arg0);


#line 171 
void *ldv_character_driver_scenario_40(void *arg0);


#line 172 
void *ldv_initialization_1(void *arg0);


#line 173 
void *ldv_character_driver_scenario_26(void *arg0);


#line 174 
void *ldv_character_driver_scenario_16(void *arg0);


#line 175 
void *ldv_character_driver_scenario_14(void *arg0);


#line 176 
void *ldv_character_driver_scenario_38(void *arg0);


#line 177 
void *ldv_character_driver_scenario_12(void *arg0);


#line 178 
void *ldv_character_driver_scenario_21(void *arg0);


#line 179 
void ldv_dispatch_instance_register_2_3(struct timer_list *arg0);


#line 180 
void *ldv_character_driver_scenario_47(void *arg0);


#line 181 
void *ldv_character_driver_scenario_49(void *arg0);


#line 182 
void *ldv_character_driver_scenario_35(void *arg0);


#line 183 
void *ldv_timer_scenario_25(void *arg0);


#line 185 
void *ldv_character_driver_scenario_19(void *arg0);


#line 188 
void *ldv_character_driver_scenario_42(void *arg0);


#line 190 
void *ldv_character_driver_scenario_39(void *arg0);


#line 192 
void ldv_dispatch_register_8_3(struct file_operations *arg0);


#line 193 
void *ldv_character_driver_scenario_45(void *arg0);


#line 194 
void *ldv_character_driver_scenario_36(void *arg0);


#line 195 
void *ldv_character_driver_scenario_18(void *arg0);


#line 196 
void *ldv_character_driver_scenario_13(void *arg0);


#line 197 
void *ldv_character_driver_scenario_32(void *arg0);


#line 198 
void *ldv_character_driver_scenario_28(void *arg0);


#line 199 
void ldv_dispatch_deregister_4_1(struct file_operations *arg0);


#line 200 
void *ldv_character_driver_scenario_24(void *arg0);


#line 201 
void *ldv_character_driver_scenario_27(void *arg0);


#line 202 
void *ldv_character_driver_scenario_33(void *arg0);


#line 203 
void ldv_dispatch_register_5_3(struct ieee80211_hw *arg0);


#line 205 
void *ldv_character_driver_scenario_31(void *arg0);


#line 206 
void *ldv_ieee80211_scenario_30(void *arg0);


#line 207 
void *ldv_character_driver_scenario_44(void *arg0);


#line 209 
void *ldv_character_driver_scenario_46(void *arg0);


#line 212  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_25;

#line 213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_33;

#line 214  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_21;

#line 215  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 216  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_10;

#line 217  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_42;

#line 218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_37;

#line 219  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_40;

#line 220  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_36;

#line 221  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 222  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 223  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_39;

#line 224  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 225  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_31;

#line 226  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_35;

#line 227  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_44;

#line 228  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_22;

#line 229  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_34;

#line 230  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_28;

#line 231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_20;

#line 232  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 233  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_47;

#line 234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_38;

#line 235  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_41;

#line 236  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_19;

#line 237  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_24;

#line 238  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_48;

#line 239  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 240  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_49;

#line 241  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_23;

#line 242  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 243  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 244  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_29;

#line 245  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_32;

#line 246  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_26;

#line 247  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_45;

#line 248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_43;

#line 249  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_27;

#line 250  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_30;

#line 251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_46;

#line 255  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_6_timer_list;
  
#line 261 
  ldv_6_timer_list = arg0;
  
#line 265 
  ldv_dispatch_instance_deregister_6_1(ldv_6_timer_list);
  
#line 266 
  ;
  
#line 266 
  __retres = 0;
  
#line 266 
  return __retres;
}


#line 274  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 277 
  ldv_initialize();
  
#line 280 
  ldv_initialization_1((void *)0);
  
#line 282 
  __retres = 0;
  
#line 282 
  return __retres;
}


#line 287  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_15(void *arg0)
{
  void *__retres;
  struct file *ldv_15_resource_1;
  int ldv_15_ldv_param_2_3;
  long long ldv_15_ldv_param_1_2;
  char *ldv_15_ldv_param_1_4;
  struct inode *ldv_15_resource_0;
  unsigned long ldv_15_size_cnt;
  long long *ldv_15_ldv_param_3_5;
  char *ldv_15_ldv_param_1_6;
  long long *ldv_15_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 298 
  struct file_operations *ldv_15_container = ldv_emg_alias_iwl_dbgfs_ucode_tracing_ops_2;
  
#line 299 
  int ldv_15_ret = ldv_undef_int();
  
#line 302 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 306 
  ldv_15_ret = ldv_undef_int();
  
#line 309 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 310 
    ldv_15_container = data->arg0;
    
#line 311 
    ldv_free((void *)data);
  }
  else ;
  
#line 316 
  ldv_15_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 317 
  tmp_1 = ldv_undef_int();
  
#line 317 
  ldv_15_size_cnt = (unsigned long)tmp_1;
  
#line 324 
  goto ldv_main_15;
  
#line 326 
  __retres = (void *)0;
  
#line 326 
  goto return_label;
  ldv_main_15: 
#line 329 
  ;
  
#line 332 
  tmp_3 = ldv_undef_int();
  
#line 332 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 335 
    ldv_15_ret = (*ldv_emg_alias_simple_open_5)(ldv_15_resource_0,ldv_15_resource_1);
    
#line 337 
    ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    
#line 340 
    tmp_2 = ldv_undef_int();
    
#line 340 
    if (tmp_2 != 0) {
      
#line 342 
      __VERIFIER_assume(ldv_15_ret == 0);
      
#line 349 
      goto ldv_call_15;
    }
    else {
      
#line 353 
      __VERIFIER_assume(ldv_15_ret != 0);
      
#line 360 
      goto ldv_main_15;
    }
  }
  else {
    
#line 365 
    ldv_free((void *)ldv_15_resource_0);
    
#line 373 
    __retres = (void *)0;
    
#line 373 
    goto return_label;
  }
  
#line 376 
  __retres = (void *)0;
  
#line 376 
  goto return_label;
  ldv_call_15: 
#line 379 
  ;
  
#line 382 
  tmp_4 = ldv_undef_int();
  
#line 382 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 383 
    ;
    
#line 385 
    ldv_15_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 386 
    ldv_15_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 395 
    __VERIFIER_assume(ldv_15_size_cnt <= 2147479552UL);
    
#line 397 
    ldv_emg_wrapper_iwl_dbgfs_ucode_tracing_write_4(ldv_15_resource_1,ldv_15_ldv_param_1_6,ldv_15_size_cnt,ldv_15_ldv_param_3_7);
    
#line 401 
    ldv_free((void *)ldv_15_ldv_param_3_7);
    
#line 402 
    ldv_free((void *)ldv_15_ldv_param_1_6);
    
#line 409 
    goto ldv_call_15;
    case 2: 
#line 412 
    ;
    
#line 414 
    if (ldv_15_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 416 
      (*(ldv_15_container->release))(ldv_15_resource_0,ldv_15_resource_1); else ;
    
#line 424 
    goto ldv_main_15;
    case 3: 
#line 427 
    ;
    
#line 431 
    tmp_9 = ldv_undef_int();
    
#line 431 
    if (tmp_9 != 0) 
#line 434 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_15_resource_1,ldv_15_ldv_param_1_2,ldv_15_ldv_param_2_3);
    else {
      
#line 440 
      ldv_15_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 441 
      ldv_15_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 446 
      ldv_emg_wrapper_iwl_dbgfs_ucode_tracing_read_3(ldv_15_resource_1,ldv_15_ldv_param_1_4,ldv_15_size_cnt,ldv_15_ldv_param_3_5);
      
#line 450 
      ldv_free((void *)ldv_15_ldv_param_3_5);
      
#line 451 
      ldv_free((void *)ldv_15_ldv_param_1_4);
    }
    
#line 455 
    goto ldv_50293;
    default: 
#line 457 
    ;
    
#line 457 
    __VERIFIER_assume(0);
  }
  ldv_50293: 
#line 466 
  ;
  
#line 466 
  goto ldv_call_15;
  
#line 468 
  __retres = (void *)0;
  return_label: 
#line 468 
                return __retres;
}


#line 473  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_11(void *arg0)
{
  void *__retres;
  struct file *ldv_11_resource_1;
  int ldv_11_ldv_param_2_3;
  long long ldv_11_ldv_param_1_2;
  char *ldv_11_ldv_param_1_4;
  struct inode *ldv_11_resource_0;
  unsigned long ldv_11_size_cnt;
  long long *ldv_11_ldv_param_3_5;
  char *ldv_11_ldv_param_1_6;
  long long *ldv_11_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 484 
  struct file_operations *ldv_11_container = ldv_emg_alias_iwl_dbgfs_current_sleep_command_ops_2;
  
#line 485 
  int ldv_11_ret = ldv_undef_int();
  
#line 488 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 492 
  ldv_11_ret = ldv_undef_int();
  
#line 495 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 496 
    ldv_11_container = data->arg0;
    
#line 497 
    ldv_free((void *)data);
  }
  else ;
  
#line 502 
  ldv_11_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 503 
  tmp_1 = ldv_undef_int();
  
#line 503 
  ldv_11_size_cnt = (unsigned long)tmp_1;
  
#line 510 
  goto ldv_main_11;
  
#line 512 
  __retres = (void *)0;
  
#line 512 
  goto return_label;
  ldv_main_11: 
#line 515 
  ;
  
#line 518 
  tmp_3 = ldv_undef_int();
  
#line 518 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 521 
    ldv_11_ret = (*ldv_emg_alias_simple_open_5)(ldv_11_resource_0,ldv_11_resource_1);
    
#line 523 
    ldv_11_ret = ldv_filter_err_code(ldv_11_ret);
    
#line 526 
    tmp_2 = ldv_undef_int();
    
#line 526 
    if (tmp_2 != 0) {
      
#line 528 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 535 
      goto ldv_call_11;
    }
    else {
      
#line 539 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 546 
      goto ldv_main_11;
    }
  }
  else {
    
#line 551 
    ldv_free((void *)ldv_11_resource_0);
    
#line 559 
    __retres = (void *)0;
    
#line 559 
    goto return_label;
  }
  
#line 562 
  __retres = (void *)0;
  
#line 562 
  goto return_label;
  ldv_call_11: 
#line 565 
  ;
  
#line 568 
  tmp_4 = ldv_undef_int();
  
#line 568 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 569 
    ;
    
#line 571 
    ldv_11_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 572 
    ldv_11_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 576 
    if (ldv_11_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 582 
      __VERIFIER_assume(ldv_11_size_cnt <= 2147479552UL);
      
#line 584 
      (*(ldv_11_container->write))(ldv_11_resource_1,(char const *)ldv_11_ldv_param_1_6,ldv_11_size_cnt,ldv_11_ldv_param_3_7);
    }
    else ;
    
#line 589 
    ldv_free((void *)ldv_11_ldv_param_1_6);
    
#line 590 
    ldv_free((void *)ldv_11_ldv_param_3_7);
    
#line 597 
    goto ldv_call_11;
    case 2: 
#line 600 
    ;
    
#line 602 
    if (ldv_11_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 604 
      (*(ldv_11_container->release))(ldv_11_resource_0,ldv_11_resource_1); else ;
    
#line 612 
    goto ldv_main_11;
    case 3: 
#line 615 
    ;
    
#line 619 
    tmp_9 = ldv_undef_int();
    
#line 619 
    if (tmp_9 != 0) 
#line 622 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_11_resource_1,ldv_11_ldv_param_1_2,ldv_11_ldv_param_2_3);
    else {
      
#line 628 
      ldv_11_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 629 
      ldv_11_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 634 
      ldv_emg_wrapper_iwl_dbgfs_current_sleep_command_read_3(ldv_11_resource_1,ldv_11_ldv_param_1_4,ldv_11_size_cnt,ldv_11_ldv_param_3_5);
      
#line 638 
      ldv_free((void *)ldv_11_ldv_param_1_4);
      
#line 639 
      ldv_free((void *)ldv_11_ldv_param_3_5);
    }
    
#line 643 
    goto ldv_50315;
    default: 
#line 645 
    ;
    
#line 645 
    __VERIFIER_assume(0);
  }
  ldv_50315: 
#line 654 
  ;
  
#line 654 
  goto ldv_call_11;
  
#line 656 
  __retres = (void *)0;
  return_label: 
#line 656 
                return __retres;
}


#line 661  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_34(void *arg0)
{
  void *__retres;
  struct file *ldv_34_resource_1;
  int ldv_34_ldv_param_2_3;
  long long ldv_34_ldv_param_1_2;
  char *ldv_34_ldv_param_1_4;
  struct inode *ldv_34_resource_0;
  unsigned long ldv_34_size_cnt;
  long long *ldv_34_ldv_param_3_5;
  char *ldv_34_ldv_param_1_6;
  long long *ldv_34_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 672 
  struct file_operations *ldv_34_container = ldv_emg_alias_iwl_dbgfs_stations_ops_2;
  
#line 673 
  int ldv_34_ret = ldv_undef_int();
  
#line 676 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 680 
  ldv_34_ret = ldv_undef_int();
  
#line 683 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 684 
    ldv_34_container = data->arg0;
    
#line 685 
    ldv_free((void *)data);
  }
  else ;
  
#line 690 
  ldv_34_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 691 
  tmp_1 = ldv_undef_int();
  
#line 691 
  ldv_34_size_cnt = (unsigned long)tmp_1;
  
#line 698 
  goto ldv_main_34;
  
#line 700 
  __retres = (void *)0;
  
#line 700 
  goto return_label;
  ldv_main_34: 
#line 703 
  ;
  
#line 706 
  tmp_3 = ldv_undef_int();
  
#line 706 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 709 
    ldv_34_ret = (*ldv_emg_alias_simple_open_5)(ldv_34_resource_0,ldv_34_resource_1);
    
#line 711 
    ldv_34_ret = ldv_filter_err_code(ldv_34_ret);
    
#line 714 
    tmp_2 = ldv_undef_int();
    
#line 714 
    if (tmp_2 != 0) {
      
#line 716 
      __VERIFIER_assume(ldv_34_ret == 0);
      
#line 723 
      goto ldv_call_34;
    }
    else {
      
#line 727 
      __VERIFIER_assume(ldv_34_ret != 0);
      
#line 734 
      goto ldv_main_34;
    }
  }
  else {
    
#line 739 
    ldv_free((void *)ldv_34_resource_0);
    
#line 747 
    __retres = (void *)0;
    
#line 747 
    goto return_label;
  }
  
#line 750 
  __retres = (void *)0;
  
#line 750 
  goto return_label;
  ldv_call_34: 
#line 753 
  ;
  
#line 756 
  tmp_4 = ldv_undef_int();
  
#line 756 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 757 
    ;
    
#line 759 
    ldv_34_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 760 
    ldv_34_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 764 
    if (ldv_34_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 770 
      __VERIFIER_assume(ldv_34_size_cnt <= 2147479552UL);
      
#line 772 
      (*(ldv_34_container->write))(ldv_34_resource_1,(char const *)ldv_34_ldv_param_1_6,ldv_34_size_cnt,ldv_34_ldv_param_3_7);
    }
    else ;
    
#line 777 
    ldv_free((void *)ldv_34_ldv_param_1_6);
    
#line 778 
    ldv_free((void *)ldv_34_ldv_param_3_7);
    
#line 785 
    goto ldv_call_34;
    case 2: 
#line 788 
    ;
    
#line 790 
    if (ldv_34_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 792 
      (*(ldv_34_container->release))(ldv_34_resource_0,ldv_34_resource_1); else ;
    
#line 800 
    goto ldv_main_34;
    case 3: 
#line 803 
    ;
    
#line 807 
    tmp_9 = ldv_undef_int();
    
#line 807 
    if (tmp_9 != 0) 
#line 810 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_34_resource_1,ldv_34_ldv_param_1_2,ldv_34_ldv_param_2_3);
    else {
      
#line 816 
      ldv_34_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 817 
      ldv_34_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 822 
      ldv_emg_wrapper_iwl_dbgfs_stations_read_3(ldv_34_resource_1,ldv_34_ldv_param_1_4,ldv_34_size_cnt,ldv_34_ldv_param_3_5);
      
#line 826 
      ldv_free((void *)ldv_34_ldv_param_1_4);
      
#line 827 
      ldv_free((void *)ldv_34_ldv_param_3_5);
    }
    
#line 831 
    goto ldv_50337;
    default: 
#line 833 
    ;
    
#line 833 
    __VERIFIER_assume(0);
  }
  ldv_50337: 
#line 842 
  ;
  
#line 842 
  goto ldv_call_34;
  
#line 844 
  __retres = (void *)0;
  return_label: 
#line 844 
                return __retres;
}


#line 849  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_41(void *arg0)
{
  void *__retres;
  struct file *ldv_41_resource_1;
  int ldv_41_ldv_param_2_3;
  long long ldv_41_ldv_param_1_2;
  char *ldv_41_ldv_param_1_4;
  struct inode *ldv_41_resource_0;
  unsigned long ldv_41_size_cnt;
  long long *ldv_41_ldv_param_3_5;
  char *ldv_41_ldv_param_1_6;
  long long *ldv_41_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 860 
  struct file_operations *ldv_41_container = ldv_emg_alias_iwl_dbgfs_plcp_delta_ops_2;
  
#line 861 
  int ldv_41_ret = ldv_undef_int();
  
#line 864 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 868 
  ldv_41_ret = ldv_undef_int();
  
#line 871 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 872 
    ldv_41_container = data->arg0;
    
#line 873 
    ldv_free((void *)data);
  }
  else ;
  
#line 878 
  ldv_41_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 879 
  tmp_1 = ldv_undef_int();
  
#line 879 
  ldv_41_size_cnt = (unsigned long)tmp_1;
  
#line 886 
  goto ldv_main_41;
  
#line 888 
  __retres = (void *)0;
  
#line 888 
  goto return_label;
  ldv_main_41: 
#line 891 
  ;
  
#line 894 
  tmp_3 = ldv_undef_int();
  
#line 894 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 897 
    ldv_41_ret = (*ldv_emg_alias_simple_open_5)(ldv_41_resource_0,ldv_41_resource_1);
    
#line 899 
    ldv_41_ret = ldv_filter_err_code(ldv_41_ret);
    
#line 902 
    tmp_2 = ldv_undef_int();
    
#line 902 
    if (tmp_2 != 0) {
      
#line 904 
      __VERIFIER_assume(ldv_41_ret == 0);
      
#line 911 
      goto ldv_call_41;
    }
    else {
      
#line 915 
      __VERIFIER_assume(ldv_41_ret != 0);
      
#line 922 
      goto ldv_main_41;
    }
  }
  else {
    
#line 927 
    ldv_free((void *)ldv_41_resource_0);
    
#line 935 
    __retres = (void *)0;
    
#line 935 
    goto return_label;
  }
  
#line 938 
  __retres = (void *)0;
  
#line 938 
  goto return_label;
  ldv_call_41: 
#line 941 
  ;
  
#line 944 
  tmp_4 = ldv_undef_int();
  
#line 944 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 945 
    ;
    
#line 947 
    ldv_41_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 948 
    ldv_41_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 957 
    __VERIFIER_assume(ldv_41_size_cnt <= 2147479552UL);
    
#line 959 
    ldv_emg_wrapper_iwl_dbgfs_plcp_delta_write_4(ldv_41_resource_1,ldv_41_ldv_param_1_6,ldv_41_size_cnt,ldv_41_ldv_param_3_7);
    
#line 963 
    ldv_free((void *)ldv_41_ldv_param_1_6);
    
#line 964 
    ldv_free((void *)ldv_41_ldv_param_3_7);
    
#line 971 
    goto ldv_call_41;
    case 2: 
#line 974 
    ;
    
#line 976 
    if (ldv_41_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 978 
      (*(ldv_41_container->release))(ldv_41_resource_0,ldv_41_resource_1); else ;
    
#line 986 
    goto ldv_main_41;
    case 3: 
#line 989 
    ;
    
#line 993 
    tmp_9 = ldv_undef_int();
    
#line 993 
    if (tmp_9 != 0) 
#line 996 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_41_resource_1,ldv_41_ldv_param_1_2,ldv_41_ldv_param_2_3);
    else {
      
#line 1002 
      ldv_41_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1003 
      ldv_41_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1008 
      ldv_emg_wrapper_iwl_dbgfs_plcp_delta_read_3(ldv_41_resource_1,ldv_41_ldv_param_1_4,ldv_41_size_cnt,ldv_41_ldv_param_3_5);
      
#line 1012 
      ldv_free((void *)ldv_41_ldv_param_3_5);
      
#line 1013 
      ldv_free((void *)ldv_41_ldv_param_1_4);
    }
    
#line 1017 
    goto ldv_50359;
    default: 
#line 1019 
    ;
    
#line 1019 
    __VERIFIER_assume(0);
  }
  ldv_50359: 
#line 1028 
  ;
  
#line 1028 
  goto ldv_call_41;
  
#line 1030 
  __retres = (void *)0;
  return_label: 
#line 1030 
                return __retres;
}


#line 1035  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_22(void *arg0)
{
  void *__retres;
  struct file *ldv_22_resource_1;
  int ldv_22_ldv_param_2_3;
  long long ldv_22_ldv_param_1_2;
  char *ldv_22_ldv_param_1_4;
  struct inode *ldv_22_resource_0;
  unsigned long ldv_22_size_cnt;
  long long *ldv_22_ldv_param_3_5;
  char *ldv_22_ldv_param_1_6;
  long long *ldv_22_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1046 
  struct file_operations *ldv_22_container = ldv_emg_alias_iwl_dbgfs_temperature_ops_2;
  
#line 1047 
  int ldv_22_ret = ldv_undef_int();
  
#line 1050 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 1054 
  ldv_22_ret = ldv_undef_int();
  
#line 1057 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 1058 
    ldv_22_container = data->arg0;
    
#line 1059 
    ldv_free((void *)data);
  }
  else ;
  
#line 1064 
  ldv_22_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1065 
  tmp_1 = ldv_undef_int();
  
#line 1065 
  ldv_22_size_cnt = (unsigned long)tmp_1;
  
#line 1072 
  goto ldv_main_22;
  
#line 1074 
  __retres = (void *)0;
  
#line 1074 
  goto return_label;
  ldv_main_22: 
#line 1077 
  ;
  
#line 1080 
  tmp_3 = ldv_undef_int();
  
#line 1080 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1083 
    ldv_22_ret = (*ldv_emg_alias_simple_open_5)(ldv_22_resource_0,ldv_22_resource_1);
    
#line 1085 
    ldv_22_ret = ldv_filter_err_code(ldv_22_ret);
    
#line 1088 
    tmp_2 = ldv_undef_int();
    
#line 1088 
    if (tmp_2 != 0) {
      
#line 1090 
      __VERIFIER_assume(ldv_22_ret == 0);
      
#line 1097 
      goto ldv_call_22;
    }
    else {
      
#line 1101 
      __VERIFIER_assume(ldv_22_ret != 0);
      
#line 1108 
      goto ldv_main_22;
    }
  }
  else {
    
#line 1113 
    ldv_free((void *)ldv_22_resource_0);
    
#line 1121 
    __retres = (void *)0;
    
#line 1121 
    goto return_label;
  }
  
#line 1124 
  __retres = (void *)0;
  
#line 1124 
  goto return_label;
  ldv_call_22: 
#line 1127 
  ;
  
#line 1130 
  tmp_4 = ldv_undef_int();
  
#line 1130 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 1131 
    ;
    
#line 1133 
    ldv_22_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1134 
    ldv_22_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1138 
    if (ldv_22_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 1144 
      __VERIFIER_assume(ldv_22_size_cnt <= 2147479552UL);
      
#line 1146 
      (*(ldv_22_container->write))(ldv_22_resource_1,(char const *)ldv_22_ldv_param_1_6,ldv_22_size_cnt,ldv_22_ldv_param_3_7);
    }
    else ;
    
#line 1151 
    ldv_free((void *)ldv_22_ldv_param_1_6);
    
#line 1152 
    ldv_free((void *)ldv_22_ldv_param_3_7);
    
#line 1159 
    goto ldv_call_22;
    case 2: 
#line 1162 
    ;
    
#line 1164 
    if (ldv_22_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 1166 
      (*(ldv_22_container->release))(ldv_22_resource_0,ldv_22_resource_1); else ;
    
#line 1174 
    goto ldv_main_22;
    case 3: 
#line 1177 
    ;
    
#line 1181 
    tmp_9 = ldv_undef_int();
    
#line 1181 
    if (tmp_9 != 0) 
#line 1184 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_22_resource_1,ldv_22_ldv_param_1_2,ldv_22_ldv_param_2_3);
    else {
      
#line 1190 
      ldv_22_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1191 
      ldv_22_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1196 
      ldv_emg_wrapper_iwl_dbgfs_temperature_read_3(ldv_22_resource_1,ldv_22_ldv_param_1_4,ldv_22_size_cnt,ldv_22_ldv_param_3_5);
      
#line 1200 
      ldv_free((void *)ldv_22_ldv_param_1_4);
      
#line 1201 
      ldv_free((void *)ldv_22_ldv_param_3_5);
    }
    
#line 1205 
    goto ldv_50381;
    default: 
#line 1207 
    ;
    
#line 1207 
    __VERIFIER_assume(0);
  }
  ldv_50381: 
#line 1216 
  ;
  
#line 1216 
  goto ldv_call_22;
  
#line 1218 
  __retres = (void *)0;
  return_label: 
#line 1218 
                return __retres;
}


#line 1223  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_48(void *arg0)
{
  void *__retres;
  struct file *ldv_48_resource_1;
  int ldv_48_ldv_param_2_3;
  long long ldv_48_ldv_param_1_2;
  char *ldv_48_ldv_param_1_4;
  struct inode *ldv_48_resource_0;
  unsigned long ldv_48_size_cnt;
  long long *ldv_48_ldv_param_3_5;
  char *ldv_48_ldv_param_1_6;
  long long *ldv_48_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1234 
  struct file_operations *ldv_48_container = ldv_emg_alias_rs_sta_dbgfs_rate_scale_data_ops_2;
  
#line 1235 
  int ldv_48_ret = ldv_undef_int();
  
#line 1238 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 1242 
  ldv_48_ret = ldv_undef_int();
  
#line 1245 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 1246 
    ldv_48_container = data->arg0;
    
#line 1247 
    ldv_free((void *)data);
  }
  else ;
  
#line 1252 
  ldv_48_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1253 
  tmp_1 = ldv_undef_int();
  
#line 1253 
  ldv_48_size_cnt = (unsigned long)tmp_1;
  
#line 1260 
  goto ldv_main_48;
  
#line 1262 
  __retres = (void *)0;
  
#line 1262 
  goto return_label;
  ldv_main_48: 
#line 1265 
  ;
  
#line 1268 
  tmp_3 = ldv_undef_int();
  
#line 1268 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1271 
    ldv_48_ret = (*ldv_emg_alias_simple_open_5)(ldv_48_resource_0,ldv_48_resource_1);
    
#line 1273 
    ldv_48_ret = ldv_filter_err_code(ldv_48_ret);
    
#line 1276 
    tmp_2 = ldv_undef_int();
    
#line 1276 
    if (tmp_2 != 0) {
      
#line 1278 
      __VERIFIER_assume(ldv_48_ret == 0);
      
#line 1285 
      goto ldv_call_48;
    }
    else {
      
#line 1289 
      __VERIFIER_assume(ldv_48_ret != 0);
      
#line 1296 
      goto ldv_main_48;
    }
  }
  else {
    
#line 1301 
    ldv_free((void *)ldv_48_resource_0);
    
#line 1309 
    __retres = (void *)0;
    
#line 1309 
    goto return_label;
  }
  
#line 1312 
  __retres = (void *)0;
  
#line 1312 
  goto return_label;
  ldv_call_48: 
#line 1315 
  ;
  
#line 1318 
  tmp_4 = ldv_undef_int();
  
#line 1318 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 1319 
    ;
    
#line 1321 
    ldv_48_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1322 
    ldv_48_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1326 
    if (ldv_48_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 1332 
      __VERIFIER_assume(ldv_48_size_cnt <= 2147479552UL);
      
#line 1334 
      (*(ldv_48_container->write))(ldv_48_resource_1,(char const *)ldv_48_ldv_param_1_6,ldv_48_size_cnt,ldv_48_ldv_param_3_7);
    }
    else ;
    
#line 1339 
    ldv_free((void *)ldv_48_ldv_param_3_7);
    
#line 1340 
    ldv_free((void *)ldv_48_ldv_param_1_6);
    
#line 1347 
    goto ldv_call_48;
    case 2: 
#line 1350 
    ;
    
#line 1352 
    if (ldv_48_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 1354 
      (*(ldv_48_container->release))(ldv_48_resource_0,ldv_48_resource_1); else ;
    
#line 1362 
    goto ldv_main_48;
    case 3: 
#line 1365 
    ;
    
#line 1369 
    tmp_9 = ldv_undef_int();
    
#line 1369 
    if (tmp_9 != 0) 
#line 1372 
                    (*ldv_emg_alias_default_llseek_3)(ldv_48_resource_1,ldv_48_ldv_param_1_2,ldv_48_ldv_param_2_3);
    else {
      
#line 1378 
      ldv_48_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1379 
      ldv_48_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1384 
      ldv_emg_wrapper_rs_sta_dbgfs_rate_scale_data_read_4(ldv_48_resource_1,ldv_48_ldv_param_1_4,ldv_48_size_cnt,ldv_48_ldv_param_3_5);
      
#line 1388 
      ldv_free((void *)ldv_48_ldv_param_1_4);
      
#line 1389 
      ldv_free((void *)ldv_48_ldv_param_3_5);
    }
    
#line 1393 
    goto ldv_50403;
    default: 
#line 1395 
    ;
    
#line 1395 
    __VERIFIER_assume(0);
  }
  ldv_50403: 
#line 1404 
  ;
  
#line 1404 
  goto ldv_call_48;
  
#line 1406 
  __retres = (void *)0;
  return_label: 
#line 1406 
                return __retres;
}


#line 1411  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_6_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_25 *cf_arg_25;
  int tmp;
  
#line 1414 
  tmp = ldv_undef_int();
  
#line 1414 
  switch (tmp) {
    case 0: 
#line 1415 
    ;
    
#line 1416 
    ret = pthread_join(ldv_thread_25,(void **)0);
    
#line 1417 
    __VERIFIER_assume(ret == 0);
    
#line 1418 
    goto ldv_50411;
    default: 
#line 1420 
    ;
    
#line 1420 
    __VERIFIER_assume(0);
  }
  ldv_50411: 
#line 1421 
  ;
  
#line 1422 
  return;
}


#line 1426  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_23(void *arg0)
{
  void *__retres;
  struct file *ldv_23_resource_1;
  int ldv_23_ldv_param_2_3;
  long long ldv_23_ldv_param_1_2;
  char *ldv_23_ldv_param_1_4;
  struct inode *ldv_23_resource_0;
  unsigned long ldv_23_size_cnt;
  long long *ldv_23_ldv_param_3_5;
  char *ldv_23_ldv_param_1_6;
  long long *ldv_23_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1437 
  struct file_operations *ldv_23_container = ldv_emg_alias_iwl_dbgfs_ucode_tx_stats_ops_2;
  
#line 1438 
  int ldv_23_ret = ldv_undef_int();
  
#line 1441 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 1445 
  ldv_23_ret = ldv_undef_int();
  
#line 1448 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 1449 
    ldv_23_container = data->arg0;
    
#line 1450 
    ldv_free((void *)data);
  }
  else ;
  
#line 1455 
  ldv_23_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1456 
  tmp_1 = ldv_undef_int();
  
#line 1456 
  ldv_23_size_cnt = (unsigned long)tmp_1;
  
#line 1463 
  goto ldv_main_23;
  
#line 1465 
  __retres = (void *)0;
  
#line 1465 
  goto return_label;
  ldv_main_23: 
#line 1468 
  ;
  
#line 1471 
  tmp_3 = ldv_undef_int();
  
#line 1471 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1474 
    ldv_23_ret = (*ldv_emg_alias_simple_open_5)(ldv_23_resource_0,ldv_23_resource_1);
    
#line 1476 
    ldv_23_ret = ldv_filter_err_code(ldv_23_ret);
    
#line 1479 
    tmp_2 = ldv_undef_int();
    
#line 1479 
    if (tmp_2 != 0) {
      
#line 1481 
      __VERIFIER_assume(ldv_23_ret == 0);
      
#line 1488 
      goto ldv_call_23;
    }
    else {
      
#line 1492 
      __VERIFIER_assume(ldv_23_ret != 0);
      
#line 1499 
      goto ldv_main_23;
    }
  }
  else {
    
#line 1504 
    ldv_free((void *)ldv_23_resource_0);
    
#line 1512 
    __retres = (void *)0;
    
#line 1512 
    goto return_label;
  }
  
#line 1515 
  __retres = (void *)0;
  
#line 1515 
  goto return_label;
  ldv_call_23: 
#line 1518 
  ;
  
#line 1521 
  tmp_4 = ldv_undef_int();
  
#line 1521 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 1522 
    ;
    
#line 1524 
    ldv_23_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1525 
    ldv_23_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1529 
    if (ldv_23_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 1535 
      __VERIFIER_assume(ldv_23_size_cnt <= 2147479552UL);
      
#line 1537 
      (*(ldv_23_container->write))(ldv_23_resource_1,(char const *)ldv_23_ldv_param_1_6,ldv_23_size_cnt,ldv_23_ldv_param_3_7);
    }
    else ;
    
#line 1542 
    ldv_free((void *)ldv_23_ldv_param_1_6);
    
#line 1543 
    ldv_free((void *)ldv_23_ldv_param_3_7);
    
#line 1550 
    goto ldv_call_23;
    case 2: 
#line 1553 
    ;
    
#line 1555 
    if (ldv_23_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 1557 
      (*(ldv_23_container->release))(ldv_23_resource_0,ldv_23_resource_1); else ;
    
#line 1565 
    goto ldv_main_23;
    case 3: 
#line 1568 
    ;
    
#line 1572 
    tmp_9 = ldv_undef_int();
    
#line 1572 
    if (tmp_9 != 0) 
#line 1575 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_23_resource_1,ldv_23_ldv_param_1_2,ldv_23_ldv_param_2_3);
    else {
      
#line 1581 
      ldv_23_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1582 
      ldv_23_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1587 
      ldv_emg_wrapper_iwl_dbgfs_ucode_tx_stats_read_3(ldv_23_resource_1,ldv_23_ldv_param_1_4,ldv_23_size_cnt,ldv_23_ldv_param_3_5);
      
#line 1591 
      ldv_free((void *)ldv_23_ldv_param_3_5);
      
#line 1592 
      ldv_free((void *)ldv_23_ldv_param_1_4);
    }
    
#line 1596 
    goto ldv_50433;
    default: 
#line 1598 
    ;
    
#line 1598 
    __VERIFIER_assume(0);
  }
  ldv_50433: 
#line 1607 
  ;
  
#line 1607 
  goto ldv_call_23;
  
#line 1609 
  __retres = (void *)0;
  return_label: 
#line 1609 
                return __retres;
}


#line 1614  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_17(void *arg0)
{
  void *__retres;
  struct file *ldv_17_resource_1;
  int ldv_17_ldv_param_2_3;
  long long ldv_17_ldv_param_1_2;
  char *ldv_17_ldv_param_1_4;
  struct inode *ldv_17_resource_0;
  unsigned long ldv_17_size_cnt;
  long long *ldv_17_ldv_param_3_5;
  char *ldv_17_ldv_param_1_6;
  long long *ldv_17_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1625 
  struct file_operations *ldv_17_container = ldv_emg_alias_iwl_dbgfs_rf_reset_ops_2;
  
#line 1626 
  int ldv_17_ret = ldv_undef_int();
  
#line 1629 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 1633 
  ldv_17_ret = ldv_undef_int();
  
#line 1636 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 1637 
    ldv_17_container = data->arg0;
    
#line 1638 
    ldv_free((void *)data);
  }
  else ;
  
#line 1643 
  ldv_17_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1644 
  tmp_1 = ldv_undef_int();
  
#line 1644 
  ldv_17_size_cnt = (unsigned long)tmp_1;
  
#line 1651 
  goto ldv_main_17;
  
#line 1653 
  __retres = (void *)0;
  
#line 1653 
  goto return_label;
  ldv_main_17: 
#line 1656 
  ;
  
#line 1659 
  tmp_3 = ldv_undef_int();
  
#line 1659 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1662 
    ldv_17_ret = (*ldv_emg_alias_simple_open_5)(ldv_17_resource_0,ldv_17_resource_1);
    
#line 1664 
    ldv_17_ret = ldv_filter_err_code(ldv_17_ret);
    
#line 1667 
    tmp_2 = ldv_undef_int();
    
#line 1667 
    if (tmp_2 != 0) {
      
#line 1669 
      __VERIFIER_assume(ldv_17_ret == 0);
      
#line 1676 
      goto ldv_call_17;
    }
    else {
      
#line 1680 
      __VERIFIER_assume(ldv_17_ret != 0);
      
#line 1687 
      goto ldv_main_17;
    }
  }
  else {
    
#line 1692 
    ldv_free((void *)ldv_17_resource_0);
    
#line 1700 
    __retres = (void *)0;
    
#line 1700 
    goto return_label;
  }
  
#line 1703 
  __retres = (void *)0;
  
#line 1703 
  goto return_label;
  ldv_call_17: 
#line 1706 
  ;
  
#line 1709 
  tmp_4 = ldv_undef_int();
  
#line 1709 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 1710 
    ;
    
#line 1712 
    ldv_17_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1713 
    ldv_17_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1722 
    __VERIFIER_assume(ldv_17_size_cnt <= 2147479552UL);
    
#line 1724 
    ldv_emg_wrapper_iwl_dbgfs_rf_reset_write_4(ldv_17_resource_1,ldv_17_ldv_param_1_6,ldv_17_size_cnt,ldv_17_ldv_param_3_7);
    
#line 1728 
    ldv_free((void *)ldv_17_ldv_param_3_7);
    
#line 1729 
    ldv_free((void *)ldv_17_ldv_param_1_6);
    
#line 1736 
    goto ldv_call_17;
    case 2: 
#line 1739 
    ;
    
#line 1741 
    if (ldv_17_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 1743 
      (*(ldv_17_container->release))(ldv_17_resource_0,ldv_17_resource_1); else ;
    
#line 1751 
    goto ldv_main_17;
    case 3: 
#line 1754 
    ;
    
#line 1758 
    tmp_9 = ldv_undef_int();
    
#line 1758 
    if (tmp_9 != 0) 
#line 1761 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_17_resource_1,ldv_17_ldv_param_1_2,ldv_17_ldv_param_2_3);
    else {
      
#line 1767 
      ldv_17_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1768 
      ldv_17_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1773 
      ldv_emg_wrapper_iwl_dbgfs_rf_reset_read_3(ldv_17_resource_1,ldv_17_ldv_param_1_4,ldv_17_size_cnt,ldv_17_ldv_param_3_5);
      
#line 1777 
      ldv_free((void *)ldv_17_ldv_param_1_4);
      
#line 1778 
      ldv_free((void *)ldv_17_ldv_param_3_5);
    }
    
#line 1782 
    goto ldv_50455;
    default: 
#line 1784 
    ;
    
#line 1784 
    __VERIFIER_assume(0);
  }
  ldv_50455: 
#line 1793 
  ;
  
#line 1793 
  goto ldv_call_17;
  
#line 1795 
  __retres = (void *)0;
  return_label: 
#line 1795 
                return __retres;
}


#line 1800  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_43(void *arg0)
{
  void *__retres;
  struct file *ldv_43_resource_1;
  int ldv_43_ldv_param_2_3;
  long long ldv_43_ldv_param_1_2;
  char *ldv_43_ldv_param_1_4;
  struct inode *ldv_43_resource_0;
  unsigned long ldv_43_size_cnt;
  long long *ldv_43_ldv_param_3_5;
  char *ldv_43_ldv_param_1_6;
  long long *ldv_43_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1811 
  struct file_operations *ldv_43_container = ldv_emg_alias_iwl_dbgfs_ucode_bt_stats_ops_2;
  
#line 1812 
  int ldv_43_ret = ldv_undef_int();
  
#line 1815 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 1819 
  ldv_43_ret = ldv_undef_int();
  
#line 1822 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 1823 
    ldv_43_container = data->arg0;
    
#line 1824 
    ldv_free((void *)data);
  }
  else ;
  
#line 1829 
  ldv_43_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1830 
  tmp_1 = ldv_undef_int();
  
#line 1830 
  ldv_43_size_cnt = (unsigned long)tmp_1;
  
#line 1837 
  goto ldv_main_43;
  
#line 1839 
  __retres = (void *)0;
  
#line 1839 
  goto return_label;
  ldv_main_43: 
#line 1842 
  ;
  
#line 1845 
  tmp_3 = ldv_undef_int();
  
#line 1845 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1848 
    ldv_43_ret = (*ldv_emg_alias_simple_open_5)(ldv_43_resource_0,ldv_43_resource_1);
    
#line 1850 
    ldv_43_ret = ldv_filter_err_code(ldv_43_ret);
    
#line 1853 
    tmp_2 = ldv_undef_int();
    
#line 1853 
    if (tmp_2 != 0) {
      
#line 1855 
      __VERIFIER_assume(ldv_43_ret == 0);
      
#line 1862 
      goto ldv_call_43;
    }
    else {
      
#line 1866 
      __VERIFIER_assume(ldv_43_ret != 0);
      
#line 1873 
      goto ldv_main_43;
    }
  }
  else {
    
#line 1878 
    ldv_free((void *)ldv_43_resource_0);
    
#line 1886 
    __retres = (void *)0;
    
#line 1886 
    goto return_label;
  }
  
#line 1889 
  __retres = (void *)0;
  
#line 1889 
  goto return_label;
  ldv_call_43: 
#line 1892 
  ;
  
#line 1895 
  tmp_4 = ldv_undef_int();
  
#line 1895 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 1896 
    ;
    
#line 1898 
    ldv_43_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1899 
    ldv_43_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1903 
    if (ldv_43_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 1909 
      __VERIFIER_assume(ldv_43_size_cnt <= 2147479552UL);
      
#line 1911 
      (*(ldv_43_container->write))(ldv_43_resource_1,(char const *)ldv_43_ldv_param_1_6,ldv_43_size_cnt,ldv_43_ldv_param_3_7);
    }
    else ;
    
#line 1916 
    ldv_free((void *)ldv_43_ldv_param_3_7);
    
#line 1917 
    ldv_free((void *)ldv_43_ldv_param_1_6);
    
#line 1924 
    goto ldv_call_43;
    case 2: 
#line 1927 
    ;
    
#line 1929 
    if (ldv_43_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 1931 
      (*(ldv_43_container->release))(ldv_43_resource_0,ldv_43_resource_1); else ;
    
#line 1939 
    goto ldv_main_43;
    case 3: 
#line 1942 
    ;
    
#line 1946 
    tmp_9 = ldv_undef_int();
    
#line 1946 
    if (tmp_9 != 0) 
#line 1949 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_43_resource_1,ldv_43_ldv_param_1_2,ldv_43_ldv_param_2_3);
    else {
      
#line 1955 
      ldv_43_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1956 
      ldv_43_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1961 
      ldv_emg_wrapper_iwl_dbgfs_ucode_bt_stats_read_3(ldv_43_resource_1,ldv_43_ldv_param_1_4,ldv_43_size_cnt,ldv_43_ldv_param_3_5);
      
#line 1965 
      ldv_free((void *)ldv_43_ldv_param_1_4);
      
#line 1966 
      ldv_free((void *)ldv_43_ldv_param_3_5);
    }
    
#line 1970 
    goto ldv_50477;
    default: 
#line 1972 
    ;
    
#line 1972 
    __VERIFIER_assume(0);
  }
  ldv_50477: 
#line 1981 
  ;
  
#line 1981 
  goto ldv_call_43;
  
#line 1983 
  __retres = (void *)0;
  return_label: 
#line 1983 
                return __retres;
}


#line 1988  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_7_2(struct ieee80211_hw *arg0)
{
  int ret;
  struct ldv_struct_ieee80211_scenario_30 *cf_arg_30;
  int tmp;
  
#line 1991 
  tmp = ldv_undef_int();
  
#line 1991 
  switch (tmp) {
    case 0: 
#line 1992 
    ;
    
#line 1993 
    ret = pthread_join(ldv_thread_30,(void **)0);
    
#line 1994 
    __VERIFIER_assume(ret == 0);
    
#line 1995 
    goto ldv_50485;
    default: 
#line 1997 
    ;
    
#line 1997 
    __VERIFIER_assume(0);
  }
  ldv_50485: 
#line 1998 
  ;
  
#line 1999 
  return;
}


#line 2003  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_20(void *arg0)
{
  void *__retres;
  struct file *ldv_20_resource_1;
  int ldv_20_ldv_param_2_3;
  long long ldv_20_ldv_param_1_2;
  char *ldv_20_ldv_param_1_4;
  struct inode *ldv_20_resource_0;
  unsigned long ldv_20_size_cnt;
  long long *ldv_20_ldv_param_3_5;
  char *ldv_20_ldv_param_1_6;
  long long *ldv_20_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2014 
  struct file_operations *ldv_20_container = ldv_emg_alias_iwl_dbgfs_sram_ops_2;
  
#line 2015 
  int ldv_20_ret = ldv_undef_int();
  
#line 2018 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 2022 
  ldv_20_ret = ldv_undef_int();
  
#line 2025 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 2026 
    ldv_20_container = data->arg0;
    
#line 2027 
    ldv_free((void *)data);
  }
  else ;
  
#line 2032 
  ldv_20_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2033 
  tmp_1 = ldv_undef_int();
  
#line 2033 
  ldv_20_size_cnt = (unsigned long)tmp_1;
  
#line 2040 
  goto ldv_main_20;
  
#line 2042 
  __retres = (void *)0;
  
#line 2042 
  goto return_label;
  ldv_main_20: 
#line 2045 
  ;
  
#line 2048 
  tmp_3 = ldv_undef_int();
  
#line 2048 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2051 
    ldv_20_ret = (*ldv_emg_alias_simple_open_5)(ldv_20_resource_0,ldv_20_resource_1);
    
#line 2053 
    ldv_20_ret = ldv_filter_err_code(ldv_20_ret);
    
#line 2056 
    tmp_2 = ldv_undef_int();
    
#line 2056 
    if (tmp_2 != 0) {
      
#line 2058 
      __VERIFIER_assume(ldv_20_ret == 0);
      
#line 2065 
      goto ldv_call_20;
    }
    else {
      
#line 2069 
      __VERIFIER_assume(ldv_20_ret != 0);
      
#line 2076 
      goto ldv_main_20;
    }
  }
  else {
    
#line 2081 
    ldv_free((void *)ldv_20_resource_0);
    
#line 2089 
    __retres = (void *)0;
    
#line 2089 
    goto return_label;
  }
  
#line 2092 
  __retres = (void *)0;
  
#line 2092 
  goto return_label;
  ldv_call_20: 
#line 2095 
  ;
  
#line 2098 
  tmp_4 = ldv_undef_int();
  
#line 2098 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 2099 
    ;
    
#line 2101 
    ldv_20_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2102 
    ldv_20_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2111 
    __VERIFIER_assume(ldv_20_size_cnt <= 2147479552UL);
    
#line 2113 
    ldv_emg_wrapper_iwl_dbgfs_sram_write_4(ldv_20_resource_1,ldv_20_ldv_param_1_6,ldv_20_size_cnt,ldv_20_ldv_param_3_7);
    
#line 2117 
    ldv_free((void *)ldv_20_ldv_param_3_7);
    
#line 2118 
    ldv_free((void *)ldv_20_ldv_param_1_6);
    
#line 2125 
    goto ldv_call_20;
    case 2: 
#line 2128 
    ;
    
#line 2130 
    if (ldv_20_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 2132 
      (*(ldv_20_container->release))(ldv_20_resource_0,ldv_20_resource_1); else ;
    
#line 2140 
    goto ldv_main_20;
    case 3: 
#line 2143 
    ;
    
#line 2147 
    tmp_9 = ldv_undef_int();
    
#line 2147 
    if (tmp_9 != 0) 
#line 2150 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_20_resource_1,ldv_20_ldv_param_1_2,ldv_20_ldv_param_2_3);
    else {
      
#line 2156 
      ldv_20_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2157 
      ldv_20_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2162 
      ldv_emg_wrapper_iwl_dbgfs_sram_read_3(ldv_20_resource_1,ldv_20_ldv_param_1_4,ldv_20_size_cnt,ldv_20_ldv_param_3_5);
      
#line 2166 
      ldv_free((void *)ldv_20_ldv_param_1_4);
      
#line 2167 
      ldv_free((void *)ldv_20_ldv_param_3_5);
    }
    
#line 2171 
    goto ldv_50507;
    default: 
#line 2173 
    ;
    
#line 2173 
    __VERIFIER_assume(0);
  }
  ldv_50507: 
#line 2182 
  ;
  
#line 2182 
  goto ldv_call_20;
  
#line 2184 
  __retres = (void *)0;
  return_label: 
#line 2184 
                return __retres;
}


#line 2189  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_42(void *arg0)
{
  void *__retres;
  struct file *ldv_42_resource_1;
  int ldv_42_ldv_param_2_3;
  long long ldv_42_ldv_param_1_2;
  char *ldv_42_ldv_param_1_4;
  struct inode *ldv_42_resource_0;
  unsigned long ldv_42_size_cnt;
  long long *ldv_42_ldv_param_3_5;
  char *ldv_42_ldv_param_1_6;
  long long *ldv_42_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2200 
  struct file_operations *ldv_42_container = ldv_emg_alias_iwl_dbgfs_bt_traffic_ops_2;
  
#line 2201 
  int ldv_42_ret = ldv_undef_int();
  
#line 2204 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 2208 
  ldv_42_ret = ldv_undef_int();
  
#line 2211 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 2212 
    ldv_42_container = data->arg0;
    
#line 2213 
    ldv_free((void *)data);
  }
  else ;
  
#line 2218 
  ldv_42_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2219 
  tmp_1 = ldv_undef_int();
  
#line 2219 
  ldv_42_size_cnt = (unsigned long)tmp_1;
  
#line 2226 
  goto ldv_main_42;
  
#line 2228 
  __retres = (void *)0;
  
#line 2228 
  goto return_label;
  ldv_main_42: 
#line 2231 
  ;
  
#line 2234 
  tmp_3 = ldv_undef_int();
  
#line 2234 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2237 
    ldv_42_ret = (*ldv_emg_alias_simple_open_5)(ldv_42_resource_0,ldv_42_resource_1);
    
#line 2239 
    ldv_42_ret = ldv_filter_err_code(ldv_42_ret);
    
#line 2242 
    tmp_2 = ldv_undef_int();
    
#line 2242 
    if (tmp_2 != 0) {
      
#line 2244 
      __VERIFIER_assume(ldv_42_ret == 0);
      
#line 2251 
      goto ldv_call_42;
    }
    else {
      
#line 2255 
      __VERIFIER_assume(ldv_42_ret != 0);
      
#line 2262 
      goto ldv_main_42;
    }
  }
  else {
    
#line 2267 
    ldv_free((void *)ldv_42_resource_0);
    
#line 2275 
    __retres = (void *)0;
    
#line 2275 
    goto return_label;
  }
  
#line 2278 
  __retres = (void *)0;
  
#line 2278 
  goto return_label;
  ldv_call_42: 
#line 2281 
  ;
  
#line 2284 
  tmp_4 = ldv_undef_int();
  
#line 2284 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 2285 
    ;
    
#line 2287 
    ldv_42_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2288 
    ldv_42_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2292 
    if (ldv_42_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 2298 
      __VERIFIER_assume(ldv_42_size_cnt <= 2147479552UL);
      
#line 2300 
      (*(ldv_42_container->write))(ldv_42_resource_1,(char const *)ldv_42_ldv_param_1_6,ldv_42_size_cnt,ldv_42_ldv_param_3_7);
    }
    else ;
    
#line 2305 
    ldv_free((void *)ldv_42_ldv_param_1_6);
    
#line 2306 
    ldv_free((void *)ldv_42_ldv_param_3_7);
    
#line 2313 
    goto ldv_call_42;
    case 2: 
#line 2316 
    ;
    
#line 2318 
    if (ldv_42_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 2320 
      (*(ldv_42_container->release))(ldv_42_resource_0,ldv_42_resource_1); else ;
    
#line 2328 
    goto ldv_main_42;
    case 3: 
#line 2331 
    ;
    
#line 2335 
    tmp_9 = ldv_undef_int();
    
#line 2335 
    if (tmp_9 != 0) 
#line 2338 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_42_resource_1,ldv_42_ldv_param_1_2,ldv_42_ldv_param_2_3);
    else {
      
#line 2344 
      ldv_42_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2345 
      ldv_42_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2350 
      ldv_emg_wrapper_iwl_dbgfs_bt_traffic_read_4(ldv_42_resource_1,ldv_42_ldv_param_1_4,ldv_42_size_cnt,ldv_42_ldv_param_3_5);
      
#line 2354 
      ldv_free((void *)ldv_42_ldv_param_1_4);
      
#line 2355 
      ldv_free((void *)ldv_42_ldv_param_3_5);
    }
    
#line 2359 
    goto ldv_50529;
    default: 
#line 2361 
    ;
    
#line 2361 
    __VERIFIER_assume(0);
  }
  ldv_50529: 
#line 2370 
  ;
  
#line 2370 
  goto ldv_call_42;
  
#line 2372 
  __retres = (void *)0;
  return_label: 
#line 2372 
                return __retres;
}


#line 2377  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_37(void *arg0)
{
  void *__retres;
  struct file *ldv_37_resource_1;
  int ldv_37_ldv_param_2_3;
  long long ldv_37_ldv_param_1_2;
  char *ldv_37_ldv_param_1_4;
  struct inode *ldv_37_resource_0;
  unsigned long ldv_37_size_cnt;
  long long *ldv_37_ldv_param_3_5;
  char *ldv_37_ldv_param_1_6;
  long long *ldv_37_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2388 
  struct file_operations *ldv_37_container = ldv_emg_alias_iwl_dbgfs_qos_ops_2;
  
#line 2389 
  int ldv_37_ret = ldv_undef_int();
  
#line 2392 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 2396 
  ldv_37_ret = ldv_undef_int();
  
#line 2399 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 2400 
    ldv_37_container = data->arg0;
    
#line 2401 
    ldv_free((void *)data);
  }
  else ;
  
#line 2406 
  ldv_37_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2407 
  tmp_1 = ldv_undef_int();
  
#line 2407 
  ldv_37_size_cnt = (unsigned long)tmp_1;
  
#line 2414 
  goto ldv_main_37;
  
#line 2416 
  __retres = (void *)0;
  
#line 2416 
  goto return_label;
  ldv_main_37: 
#line 2419 
  ;
  
#line 2422 
  tmp_3 = ldv_undef_int();
  
#line 2422 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2425 
    ldv_37_ret = (*ldv_emg_alias_simple_open_5)(ldv_37_resource_0,ldv_37_resource_1);
    
#line 2427 
    ldv_37_ret = ldv_filter_err_code(ldv_37_ret);
    
#line 2430 
    tmp_2 = ldv_undef_int();
    
#line 2430 
    if (tmp_2 != 0) {
      
#line 2432 
      __VERIFIER_assume(ldv_37_ret == 0);
      
#line 2439 
      goto ldv_call_37;
    }
    else {
      
#line 2443 
      __VERIFIER_assume(ldv_37_ret != 0);
      
#line 2450 
      goto ldv_main_37;
    }
  }
  else {
    
#line 2455 
    ldv_free((void *)ldv_37_resource_0);
    
#line 2463 
    __retres = (void *)0;
    
#line 2463 
    goto return_label;
  }
  
#line 2466 
  __retres = (void *)0;
  
#line 2466 
  goto return_label;
  ldv_call_37: 
#line 2469 
  ;
  
#line 2472 
  tmp_4 = ldv_undef_int();
  
#line 2472 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 2473 
    ;
    
#line 2475 
    ldv_37_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2476 
    ldv_37_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2480 
    if (ldv_37_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 2486 
      __VERIFIER_assume(ldv_37_size_cnt <= 2147479552UL);
      
#line 2488 
      (*(ldv_37_container->write))(ldv_37_resource_1,(char const *)ldv_37_ldv_param_1_6,ldv_37_size_cnt,ldv_37_ldv_param_3_7);
    }
    else ;
    
#line 2493 
    ldv_free((void *)ldv_37_ldv_param_1_6);
    
#line 2494 
    ldv_free((void *)ldv_37_ldv_param_3_7);
    
#line 2501 
    goto ldv_call_37;
    case 2: 
#line 2504 
    ;
    
#line 2506 
    if (ldv_37_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 2508 
      (*(ldv_37_container->release))(ldv_37_resource_0,ldv_37_resource_1); else ;
    
#line 2516 
    goto ldv_main_37;
    case 3: 
#line 2519 
    ;
    
#line 2523 
    tmp_9 = ldv_undef_int();
    
#line 2523 
    if (tmp_9 != 0) 
#line 2526 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_37_resource_1,ldv_37_ldv_param_1_2,ldv_37_ldv_param_2_3);
    else {
      
#line 2532 
      ldv_37_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2533 
      ldv_37_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2538 
      ldv_emg_wrapper_iwl_dbgfs_qos_read_3(ldv_37_resource_1,ldv_37_ldv_param_1_4,ldv_37_size_cnt,ldv_37_ldv_param_3_5);
      
#line 2542 
      ldv_free((void *)ldv_37_ldv_param_3_5);
      
#line 2543 
      ldv_free((void *)ldv_37_ldv_param_1_4);
    }
    
#line 2547 
    goto ldv_50551;
    default: 
#line 2549 
    ;
    
#line 2549 
    __VERIFIER_assume(0);
  }
  ldv_50551: 
#line 2558 
  ;
  
#line 2558 
  goto ldv_call_37;
  
#line 2560 
  __retres = (void *)0;
  return_label: 
#line 2560 
                return __retres;
}


#line 2565  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_10(void *arg0)
{
  void *__retres;
  struct file *ldv_10_resource_1;
  int ldv_10_ldv_param_2_3;
  long long ldv_10_ldv_param_1_2;
  char *ldv_10_ldv_param_1_4;
  struct inode *ldv_10_resource_0;
  unsigned long ldv_10_size_cnt;
  long long *ldv_10_ldv_param_3_5;
  char *ldv_10_ldv_param_1_6;
  long long *ldv_10_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2576 
  struct file_operations *ldv_10_container = ldv_emg_alias_rs_sta_dbgfs_stats_table_ops_2;
  
#line 2577 
  int ldv_10_ret = ldv_undef_int();
  
#line 2580 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 2584 
  ldv_10_ret = ldv_undef_int();
  
#line 2587 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 2588 
    ldv_10_container = data->arg0;
    
#line 2589 
    ldv_free((void *)data);
  }
  else ;
  
#line 2594 
  ldv_10_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2595 
  tmp_1 = ldv_undef_int();
  
#line 2595 
  ldv_10_size_cnt = (unsigned long)tmp_1;
  
#line 2602 
  goto ldv_main_10;
  
#line 2604 
  __retres = (void *)0;
  
#line 2604 
  goto return_label;
  ldv_main_10: 
#line 2607 
  ;
  
#line 2610 
  tmp_3 = ldv_undef_int();
  
#line 2610 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2613 
    ldv_10_ret = (*ldv_emg_alias_simple_open_5)(ldv_10_resource_0,ldv_10_resource_1);
    
#line 2615 
    ldv_10_ret = ldv_filter_err_code(ldv_10_ret);
    
#line 2618 
    tmp_2 = ldv_undef_int();
    
#line 2618 
    if (tmp_2 != 0) {
      
#line 2620 
      __VERIFIER_assume(ldv_10_ret == 0);
      
#line 2627 
      goto ldv_call_10;
    }
    else {
      
#line 2631 
      __VERIFIER_assume(ldv_10_ret != 0);
      
#line 2638 
      goto ldv_main_10;
    }
  }
  else {
    
#line 2643 
    ldv_free((void *)ldv_10_resource_0);
    
#line 2651 
    __retres = (void *)0;
    
#line 2651 
    goto return_label;
  }
  
#line 2654 
  __retres = (void *)0;
  
#line 2654 
  goto return_label;
  ldv_call_10: 
#line 2657 
  ;
  
#line 2660 
  tmp_4 = ldv_undef_int();
  
#line 2660 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 2661 
    ;
    
#line 2663 
    ldv_10_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2664 
    ldv_10_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2668 
    if (ldv_10_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 2674 
      __VERIFIER_assume(ldv_10_size_cnt <= 2147479552UL);
      
#line 2676 
      (*(ldv_10_container->write))(ldv_10_resource_1,(char const *)ldv_10_ldv_param_1_6,ldv_10_size_cnt,ldv_10_ldv_param_3_7);
    }
    else ;
    
#line 2681 
    ldv_free((void *)ldv_10_ldv_param_3_7);
    
#line 2682 
    ldv_free((void *)ldv_10_ldv_param_1_6);
    
#line 2689 
    goto ldv_call_10;
    case 2: 
#line 2692 
    ;
    
#line 2694 
    if (ldv_10_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 2696 
      (*(ldv_10_container->release))(ldv_10_resource_0,ldv_10_resource_1); else ;
    
#line 2704 
    goto ldv_main_10;
    case 3: 
#line 2707 
    ;
    
#line 2711 
    tmp_9 = ldv_undef_int();
    
#line 2711 
    if (tmp_9 != 0) 
#line 2714 
                    (*ldv_emg_alias_default_llseek_3)(ldv_10_resource_1,ldv_10_ldv_param_1_2,ldv_10_ldv_param_2_3);
    else {
      
#line 2720 
      ldv_10_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2721 
      ldv_10_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2726 
      ldv_emg_wrapper_rs_sta_dbgfs_stats_table_read_3(ldv_10_resource_1,ldv_10_ldv_param_1_4,ldv_10_size_cnt,ldv_10_ldv_param_3_5);
      
#line 2730 
      ldv_free((void *)ldv_10_ldv_param_1_4);
      
#line 2731 
      ldv_free((void *)ldv_10_ldv_param_3_5);
    }
    
#line 2735 
    goto ldv_50573;
    default: 
#line 2737 
    ;
    
#line 2737 
    __VERIFIER_assume(0);
  }
  ldv_50573: 
#line 2746 
  ;
  
#line 2746 
  goto ldv_call_10;
  
#line 2748 
  __retres = (void *)0;
  return_label: 
#line 2748 
                return __retres;
}


#line 2753  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_40(void *arg0)
{
  void *__retres;
  struct file *ldv_40_resource_1;
  int ldv_40_ldv_param_2_3;
  long long ldv_40_ldv_param_1_2;
  char *ldv_40_ldv_param_1_4;
  struct inode *ldv_40_resource_0;
  unsigned long ldv_40_size_cnt;
  long long *ldv_40_ldv_param_3_5;
  char *ldv_40_ldv_param_1_6;
  long long *ldv_40_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2764 
  struct file_operations *ldv_40_container = ldv_emg_alias_iwl_dbgfs_rxon_filter_flags_ops_2;
  
#line 2765 
  int ldv_40_ret = ldv_undef_int();
  
#line 2768 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 2772 
  ldv_40_ret = ldv_undef_int();
  
#line 2775 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 2776 
    ldv_40_container = data->arg0;
    
#line 2777 
    ldv_free((void *)data);
  }
  else ;
  
#line 2782 
  ldv_40_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2783 
  tmp_1 = ldv_undef_int();
  
#line 2783 
  ldv_40_size_cnt = (unsigned long)tmp_1;
  
#line 2790 
  goto ldv_main_40;
  
#line 2792 
  __retres = (void *)0;
  
#line 2792 
  goto return_label;
  ldv_main_40: 
#line 2795 
  ;
  
#line 2798 
  tmp_3 = ldv_undef_int();
  
#line 2798 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2801 
    ldv_40_ret = (*ldv_emg_alias_simple_open_5)(ldv_40_resource_0,ldv_40_resource_1);
    
#line 2803 
    ldv_40_ret = ldv_filter_err_code(ldv_40_ret);
    
#line 2806 
    tmp_2 = ldv_undef_int();
    
#line 2806 
    if (tmp_2 != 0) {
      
#line 2808 
      __VERIFIER_assume(ldv_40_ret == 0);
      
#line 2815 
      goto ldv_call_40;
    }
    else {
      
#line 2819 
      __VERIFIER_assume(ldv_40_ret != 0);
      
#line 2826 
      goto ldv_main_40;
    }
  }
  else {
    
#line 2831 
    ldv_free((void *)ldv_40_resource_0);
    
#line 2839 
    __retres = (void *)0;
    
#line 2839 
    goto return_label;
  }
  
#line 2842 
  __retres = (void *)0;
  
#line 2842 
  goto return_label;
  ldv_call_40: 
#line 2845 
  ;
  
#line 2848 
  tmp_4 = ldv_undef_int();
  
#line 2848 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 2849 
    ;
    
#line 2851 
    ldv_40_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2852 
    ldv_40_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2856 
    if (ldv_40_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 2862 
      __VERIFIER_assume(ldv_40_size_cnt <= 2147479552UL);
      
#line 2864 
      (*(ldv_40_container->write))(ldv_40_resource_1,(char const *)ldv_40_ldv_param_1_6,ldv_40_size_cnt,ldv_40_ldv_param_3_7);
    }
    else ;
    
#line 2869 
    ldv_free((void *)ldv_40_ldv_param_1_6);
    
#line 2870 
    ldv_free((void *)ldv_40_ldv_param_3_7);
    
#line 2877 
    goto ldv_call_40;
    case 2: 
#line 2880 
    ;
    
#line 2882 
    if (ldv_40_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 2884 
      (*(ldv_40_container->release))(ldv_40_resource_0,ldv_40_resource_1); else ;
    
#line 2892 
    goto ldv_main_40;
    case 3: 
#line 2895 
    ;
    
#line 2899 
    tmp_9 = ldv_undef_int();
    
#line 2899 
    if (tmp_9 != 0) 
#line 2902 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_40_resource_1,ldv_40_ldv_param_1_2,ldv_40_ldv_param_2_3);
    else {
      
#line 2908 
      ldv_40_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2909 
      ldv_40_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2914 
      ldv_emg_wrapper_iwl_dbgfs_rxon_filter_flags_read_3(ldv_40_resource_1,ldv_40_ldv_param_1_4,ldv_40_size_cnt,ldv_40_ldv_param_3_5);
      
#line 2918 
      ldv_free((void *)ldv_40_ldv_param_3_5);
      
#line 2919 
      ldv_free((void *)ldv_40_ldv_param_1_4);
    }
    
#line 2923 
    goto ldv_50595;
    default: 
#line 2925 
    ;
    
#line 2925 
    __VERIFIER_assume(0);
  }
  ldv_50595: 
#line 2934 
  ;
  
#line 2934 
  goto ldv_call_40;
  
#line 2936 
  __retres = (void *)0;
  return_label: 
#line 2936 
                return __retres;
}


#line 2941  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 2948 
  ldv_1_ret = ldv_emg_iwl_init();
  
#line 2949 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 2952 
  tmp = ldv_undef_int();
  
#line 2952 
  if (tmp != 0) {
    
#line 2954 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 2958 
    __retres = (void *)0;
    
#line 2958 
    goto return_label;
  }
  else {
    
#line 2962 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 2967 
    ldv_emg_iwl_exit();
    
#line 2971 
    __retres = (void *)0;
    
#line 2971 
    goto return_label;
  }
  
#line 2974 
  __retres = (void *)0;
  return_label: 
#line 2974 
                return __retres;
}


#line 2979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_25(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_25_container;
  
#line 2984 
  struct ldv_struct_timer_scenario_25 *data = (struct ldv_struct_timer_scenario_25 *)arg0;
  
#line 2989 
  if (data != (struct ldv_struct_timer_scenario_25 *)0) {
    
#line 2990 
    ldv_25_container = data->arg0;
    
#line 2991 
    ldv_free((void *)data);
  }
  else ;
  
#line 2996 
  if (ldv_25_container->function != (void (*)(unsigned long ))0) {
    
#line 2998 
    ldv_switch_to_interrupt_context();
    
#line 3000 
    (*(ldv_25_container->function))(ldv_25_container->data);
    
#line 3002 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 3011 
  __retres = (void *)0;
  
#line 3011 
  goto return_label;
  
#line 3013 
  __retres = (void *)0;
  return_label: 
#line 3013 
                return __retres;
}


#line 3018  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_16(void *arg0)
{
  void *__retres;
  struct file *ldv_16_resource_1;
  int ldv_16_ldv_param_2_3;
  long long ldv_16_ldv_param_1_2;
  char *ldv_16_ldv_param_1_4;
  struct inode *ldv_16_resource_0;
  unsigned long ldv_16_size_cnt;
  long long *ldv_16_ldv_param_3_5;
  char *ldv_16_ldv_param_1_6;
  long long *ldv_16_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 3029 
  struct file_operations *ldv_16_container = ldv_emg_alias_iwl_dbgfs_log_event_ops_2;
  
#line 3030 
  int ldv_16_ret = ldv_undef_int();
  
#line 3033 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 3037 
  ldv_16_ret = ldv_undef_int();
  
#line 3040 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 3041 
    ldv_16_container = data->arg0;
    
#line 3042 
    ldv_free((void *)data);
  }
  else ;
  
#line 3047 
  ldv_16_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 3048 
  tmp_1 = ldv_undef_int();
  
#line 3048 
  ldv_16_size_cnt = (unsigned long)tmp_1;
  
#line 3055 
  goto ldv_main_16;
  
#line 3057 
  __retres = (void *)0;
  
#line 3057 
  goto return_label;
  ldv_main_16: 
#line 3060 
  ;
  
#line 3063 
  tmp_3 = ldv_undef_int();
  
#line 3063 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 3066 
    ldv_16_ret = (*ldv_emg_alias_simple_open_5)(ldv_16_resource_0,ldv_16_resource_1);
    
#line 3068 
    ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    
#line 3071 
    tmp_2 = ldv_undef_int();
    
#line 3071 
    if (tmp_2 != 0) {
      
#line 3073 
      __VERIFIER_assume(ldv_16_ret == 0);
      
#line 3080 
      goto ldv_call_16;
    }
    else {
      
#line 3084 
      __VERIFIER_assume(ldv_16_ret != 0);
      
#line 3091 
      goto ldv_main_16;
    }
  }
  else {
    
#line 3096 
    ldv_free((void *)ldv_16_resource_0);
    
#line 3104 
    __retres = (void *)0;
    
#line 3104 
    goto return_label;
  }
  
#line 3107 
  __retres = (void *)0;
  
#line 3107 
  goto return_label;
  ldv_call_16: 
#line 3110 
  ;
  
#line 3113 
  tmp_4 = ldv_undef_int();
  
#line 3113 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 3114 
    ;
    
#line 3116 
    ldv_16_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 3117 
    ldv_16_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 3126 
    __VERIFIER_assume(ldv_16_size_cnt <= 2147479552UL);
    
#line 3128 
    ldv_emg_wrapper_iwl_dbgfs_log_event_write_4(ldv_16_resource_1,ldv_16_ldv_param_1_6,ldv_16_size_cnt,ldv_16_ldv_param_3_7);
    
#line 3132 
    ldv_free((void *)ldv_16_ldv_param_1_6);
    
#line 3133 
    ldv_free((void *)ldv_16_ldv_param_3_7);
    
#line 3140 
    goto ldv_call_16;
    case 2: 
#line 3143 
    ;
    
#line 3145 
    if (ldv_16_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 3147 
      (*(ldv_16_container->release))(ldv_16_resource_0,ldv_16_resource_1); else ;
    
#line 3155 
    goto ldv_main_16;
    case 3: 
#line 3158 
    ;
    
#line 3162 
    tmp_9 = ldv_undef_int();
    
#line 3162 
    if (tmp_9 != 0) 
#line 3165 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_16_resource_1,ldv_16_ldv_param_1_2,ldv_16_ldv_param_2_3);
    else {
      
#line 3171 
      ldv_16_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 3172 
      ldv_16_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 3177 
      ldv_emg_wrapper_iwl_dbgfs_log_event_read_3(ldv_16_resource_1,ldv_16_ldv_param_1_4,ldv_16_size_cnt,ldv_16_ldv_param_3_5);
      
#line 3181 
      ldv_free((void *)ldv_16_ldv_param_1_4);
      
#line 3182 
      ldv_free((void *)ldv_16_ldv_param_3_5);
    }
    
#line 3186 
    goto ldv_50626;
    default: 
#line 3188 
    ;
    
#line 3188 
    __VERIFIER_assume(0);
  }
  ldv_50626: 
#line 3197 
  ;
  
#line 3197 
  goto ldv_call_16;
  
#line 3199 
  __retres = (void *)0;
  return_label: 
#line 3199 
                return __retres;
}


#line 3204  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_29(void *arg0)
{
  void *__retres;
  struct file *ldv_29_resource_1;
  int ldv_29_ldv_param_2_3;
  long long ldv_29_ldv_param_1_2;
  char *ldv_29_ldv_param_1_4;
  struct inode *ldv_29_resource_0;
  unsigned long ldv_29_size_cnt;
  long long *ldv_29_ldv_param_3_5;
  char *ldv_29_ldv_param_1_6;
  long long *ldv_29_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 3215 
  struct file_operations *ldv_29_container = ldv_emg_alias_iwl_dbgfs_wowlan_sram_ops_2;
  
#line 3216 
  int ldv_29_ret = ldv_undef_int();
  
#line 3219 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 3223 
  ldv_29_ret = ldv_undef_int();
  
#line 3226 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 3227 
    ldv_29_container = data->arg0;
    
#line 3228 
    ldv_free((void *)data);
  }
  else ;
  
#line 3233 
  ldv_29_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 3234 
  tmp_1 = ldv_undef_int();
  
#line 3234 
  ldv_29_size_cnt = (unsigned long)tmp_1;
  
#line 3241 
  goto ldv_main_29;
  
#line 3243 
  __retres = (void *)0;
  
#line 3243 
  goto return_label;
  ldv_main_29: 
#line 3246 
  ;
  
#line 3249 
  tmp_3 = ldv_undef_int();
  
#line 3249 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 3252 
    ldv_29_ret = (*ldv_emg_alias_simple_open_5)(ldv_29_resource_0,ldv_29_resource_1);
    
#line 3254 
    ldv_29_ret = ldv_filter_err_code(ldv_29_ret);
    
#line 3257 
    tmp_2 = ldv_undef_int();
    
#line 3257 
    if (tmp_2 != 0) {
      
#line 3259 
      __VERIFIER_assume(ldv_29_ret == 0);
      
#line 3266 
      goto ldv_call_29;
    }
    else {
      
#line 3270 
      __VERIFIER_assume(ldv_29_ret != 0);
      
#line 3277 
      goto ldv_main_29;
    }
  }
  else {
    
#line 3282 
    ldv_free((void *)ldv_29_resource_0);
    
#line 3290 
    __retres = (void *)0;
    
#line 3290 
    goto return_label;
  }
  
#line 3293 
  __retres = (void *)0;
  
#line 3293 
  goto return_label;
  ldv_call_29: 
#line 3296 
  ;
  
#line 3299 
  tmp_4 = ldv_undef_int();
  
#line 3299 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 3300 
    ;
    
#line 3302 
    ldv_29_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 3303 
    ldv_29_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 3307 
    if (ldv_29_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 3313 
      __VERIFIER_assume(ldv_29_size_cnt <= 2147479552UL);
      
#line 3315 
      (*(ldv_29_container->write))(ldv_29_resource_1,(char const *)ldv_29_ldv_param_1_6,ldv_29_size_cnt,ldv_29_ldv_param_3_7);
    }
    else ;
    
#line 3320 
    ldv_free((void *)ldv_29_ldv_param_1_6);
    
#line 3321 
    ldv_free((void *)ldv_29_ldv_param_3_7);
    
#line 3328 
    goto ldv_call_29;
    case 2: 
#line 3331 
    ;
    
#line 3333 
    if (ldv_29_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 3335 
      (*(ldv_29_container->release))(ldv_29_resource_0,ldv_29_resource_1); else ;
    
#line 3343 
    goto ldv_main_29;
    case 3: 
#line 3346 
    ;
    
#line 3350 
    tmp_9 = ldv_undef_int();
    
#line 3350 
    if (tmp_9 != 0) 
#line 3353 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_29_resource_1,ldv_29_ldv_param_1_2,ldv_29_ldv_param_2_3);
    else {
      
#line 3359 
      ldv_29_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 3360 
      ldv_29_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 3365 
      ldv_emg_wrapper_iwl_dbgfs_wowlan_sram_read_3(ldv_29_resource_1,ldv_29_ldv_param_1_4,ldv_29_size_cnt,ldv_29_ldv_param_3_5);
      
#line 3369 
      ldv_free((void *)ldv_29_ldv_param_3_5);
      
#line 3370 
      ldv_free((void *)ldv_29_ldv_param_1_4);
    }
    
#line 3374 
    goto ldv_50648;
    default: 
#line 3376 
    ;
    
#line 3376 
    __VERIFIER_assume(0);
  }
  ldv_50648: 
#line 3385 
  ;
  
#line 3385 
  goto ldv_call_29;
  
#line 3387 
  __retres = (void *)0;
  return_label: 
#line 3387 
                return __retres;
}


#line 3392  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_14(void *arg0)
{
  void *__retres;
  struct file *ldv_14_resource_1;
  int ldv_14_ldv_param_2_3;
  long long ldv_14_ldv_param_1_2;
  char *ldv_14_ldv_param_1_4;
  struct inode *ldv_14_resource_0;
  unsigned long ldv_14_size_cnt;
  long long *ldv_14_ldv_param_3_5;
  char *ldv_14_ldv_param_1_6;
  long long *ldv_14_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 3403 
  struct file_operations *ldv_14_container = ldv_emg_alias_rs_sta_dbgfs_scale_table_ops_2;
  
#line 3404 
  int ldv_14_ret = ldv_undef_int();
  
#line 3407 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 3411 
  ldv_14_ret = ldv_undef_int();
  
#line 3414 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 3415 
    ldv_14_container = data->arg0;
    
#line 3416 
    ldv_free((void *)data);
  }
  else ;
  
#line 3421 
  ldv_14_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 3422 
  tmp_1 = ldv_undef_int();
  
#line 3422 
  ldv_14_size_cnt = (unsigned long)tmp_1;
  
#line 3429 
  goto ldv_main_14;
  
#line 3431 
  __retres = (void *)0;
  
#line 3431 
  goto return_label;
  ldv_main_14: 
#line 3434 
  ;
  
#line 3437 
  tmp_3 = ldv_undef_int();
  
#line 3437 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 3440 
    ldv_14_ret = (*ldv_emg_alias_simple_open_5)(ldv_14_resource_0,ldv_14_resource_1);
    
#line 3442 
    ldv_14_ret = ldv_filter_err_code(ldv_14_ret);
    
#line 3445 
    tmp_2 = ldv_undef_int();
    
#line 3445 
    if (tmp_2 != 0) {
      
#line 3447 
      __VERIFIER_assume(ldv_14_ret == 0);
      
#line 3454 
      goto ldv_call_14;
    }
    else {
      
#line 3458 
      __VERIFIER_assume(ldv_14_ret != 0);
      
#line 3465 
      goto ldv_main_14;
    }
  }
  else {
    
#line 3470 
    ldv_free((void *)ldv_14_resource_0);
    
#line 3478 
    __retres = (void *)0;
    
#line 3478 
    goto return_label;
  }
  
#line 3481 
  __retres = (void *)0;
  
#line 3481 
  goto return_label;
  ldv_call_14: 
#line 3484 
  ;
  
#line 3487 
  tmp_4 = ldv_undef_int();
  
#line 3487 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 3488 
    ;
    
#line 3490 
    ldv_14_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 3491 
    ldv_14_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 3500 
    __VERIFIER_assume(ldv_14_size_cnt <= 2147479552UL);
    
#line 3502 
    ldv_emg_wrapper_rs_sta_dbgfs_scale_table_write_4(ldv_14_resource_1,ldv_14_ldv_param_1_6,ldv_14_size_cnt,ldv_14_ldv_param_3_7);
    
#line 3506 
    ldv_free((void *)ldv_14_ldv_param_3_7);
    
#line 3507 
    ldv_free((void *)ldv_14_ldv_param_1_6);
    
#line 3514 
    goto ldv_call_14;
    case 2: 
#line 3517 
    ;
    
#line 3519 
    if (ldv_14_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 3521 
      (*(ldv_14_container->release))(ldv_14_resource_0,ldv_14_resource_1); else ;
    
#line 3529 
    goto ldv_main_14;
    case 3: 
#line 3532 
    ;
    
#line 3536 
    tmp_9 = ldv_undef_int();
    
#line 3536 
    if (tmp_9 != 0) 
#line 3539 
                    (*ldv_emg_alias_default_llseek_3)(ldv_14_resource_1,ldv_14_ldv_param_1_2,ldv_14_ldv_param_2_3);
    else {
      
#line 3545 
      ldv_14_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 3546 
      ldv_14_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 3551 
      ldv_emg_wrapper_rs_sta_dbgfs_scale_table_read_3(ldv_14_resource_1,ldv_14_ldv_param_1_4,ldv_14_size_cnt,ldv_14_ldv_param_3_5);
      
#line 3555 
      ldv_free((void *)ldv_14_ldv_param_3_5);
      
#line 3556 
      ldv_free((void *)ldv_14_ldv_param_1_4);
    }
    
#line 3560 
    goto ldv_50670;
    default: 
#line 3562 
    ;
    
#line 3562 
    __VERIFIER_assume(0);
  }
  ldv_50670: 
#line 3571 
  ;
  
#line 3571 
  goto ldv_call_14;
  
#line 3573 
  __retres = (void *)0;
  return_label: 
#line 3573 
                return __retres;
}


#line 3578  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_38(void *arg0)
{
  void *__retres;
  struct file *ldv_38_resource_1;
  int ldv_38_ldv_param_2_3;
  long long ldv_38_ldv_param_1_2;
  char *ldv_38_ldv_param_1_4;
  struct inode *ldv_38_resource_0;
  unsigned long ldv_38_size_cnt;
  long long *ldv_38_ldv_param_3_5;
  char *ldv_38_ldv_param_1_6;
  long long *ldv_38_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 3589 
  struct file_operations *ldv_38_container = ldv_emg_alias_iwl_dbgfs_ucode_rx_stats_ops_2;
  
#line 3590 
  int ldv_38_ret = ldv_undef_int();
  
#line 3593 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 3597 
  ldv_38_ret = ldv_undef_int();
  
#line 3600 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 3601 
    ldv_38_container = data->arg0;
    
#line 3602 
    ldv_free((void *)data);
  }
  else ;
  
#line 3607 
  ldv_38_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 3608 
  tmp_1 = ldv_undef_int();
  
#line 3608 
  ldv_38_size_cnt = (unsigned long)tmp_1;
  
#line 3615 
  goto ldv_main_38;
  
#line 3617 
  __retres = (void *)0;
  
#line 3617 
  goto return_label;
  ldv_main_38: 
#line 3620 
  ;
  
#line 3623 
  tmp_3 = ldv_undef_int();
  
#line 3623 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 3626 
    ldv_38_ret = (*ldv_emg_alias_simple_open_5)(ldv_38_resource_0,ldv_38_resource_1);
    
#line 3628 
    ldv_38_ret = ldv_filter_err_code(ldv_38_ret);
    
#line 3631 
    tmp_2 = ldv_undef_int();
    
#line 3631 
    if (tmp_2 != 0) {
      
#line 3633 
      __VERIFIER_assume(ldv_38_ret == 0);
      
#line 3640 
      goto ldv_call_38;
    }
    else {
      
#line 3644 
      __VERIFIER_assume(ldv_38_ret != 0);
      
#line 3651 
      goto ldv_main_38;
    }
  }
  else {
    
#line 3656 
    ldv_free((void *)ldv_38_resource_0);
    
#line 3664 
    __retres = (void *)0;
    
#line 3664 
    goto return_label;
  }
  
#line 3667 
  __retres = (void *)0;
  
#line 3667 
  goto return_label;
  ldv_call_38: 
#line 3670 
  ;
  
#line 3673 
  tmp_4 = ldv_undef_int();
  
#line 3673 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 3674 
    ;
    
#line 3676 
    ldv_38_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 3677 
    ldv_38_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 3681 
    if (ldv_38_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 3687 
      __VERIFIER_assume(ldv_38_size_cnt <= 2147479552UL);
      
#line 3689 
      (*(ldv_38_container->write))(ldv_38_resource_1,(char const *)ldv_38_ldv_param_1_6,ldv_38_size_cnt,ldv_38_ldv_param_3_7);
    }
    else ;
    
#line 3694 
    ldv_free((void *)ldv_38_ldv_param_1_6);
    
#line 3695 
    ldv_free((void *)ldv_38_ldv_param_3_7);
    
#line 3702 
    goto ldv_call_38;
    case 2: 
#line 3705 
    ;
    
#line 3707 
    if (ldv_38_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 3709 
      (*(ldv_38_container->release))(ldv_38_resource_0,ldv_38_resource_1); else ;
    
#line 3717 
    goto ldv_main_38;
    case 3: 
#line 3720 
    ;
    
#line 3724 
    tmp_9 = ldv_undef_int();
    
#line 3724 
    if (tmp_9 != 0) 
#line 3727 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_38_resource_1,ldv_38_ldv_param_1_2,ldv_38_ldv_param_2_3);
    else {
      
#line 3733 
      ldv_38_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 3734 
      ldv_38_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 3739 
      ldv_emg_wrapper_iwl_dbgfs_ucode_rx_stats_read_3(ldv_38_resource_1,ldv_38_ldv_param_1_4,ldv_38_size_cnt,ldv_38_ldv_param_3_5);
      
#line 3743 
      ldv_free((void *)ldv_38_ldv_param_3_5);
      
#line 3744 
      ldv_free((void *)ldv_38_ldv_param_1_4);
    }
    
#line 3748 
    goto ldv_50692;
    default: 
#line 3750 
    ;
    
#line 3750 
    __VERIFIER_assume(0);
  }
  ldv_50692: 
#line 3759 
  ;
  
#line 3759 
  goto ldv_call_38;
  
#line 3761 
  __retres = (void *)0;
  return_label: 
#line 3761 
                return __retres;
}


#line 3766  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_12(void *arg0)
{
  void *__retres;
  struct file *ldv_12_resource_1;
  int ldv_12_ldv_param_2_3;
  long long ldv_12_ldv_param_1_2;
  char *ldv_12_ldv_param_1_4;
  unsigned long ldv_12_size_cnt;
  long long *ldv_12_ldv_param_3_5;
  struct inode *ldv_12_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 3775 
  struct file_operations *ldv_12_container = ldv_emg_alias_iwl_dbgfs_clear_ucode_statistics_ops_2;
  
#line 3776 
  int ldv_12_ret = ldv_undef_int();
  
#line 3779 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 3783 
  ldv_12_ret = ldv_undef_int();
  
#line 3786 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 3787 
    ldv_12_container = data->arg0;
    
#line 3788 
    ldv_free((void *)data);
  }
  else ;
  
#line 3793 
  ldv_12_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 3794 
  tmp_1 = ldv_undef_int();
  
#line 3794 
  ldv_12_size_cnt = (unsigned long)tmp_1;
  
#line 3801 
  goto ldv_main_12;
  
#line 3803 
  __retres = (void *)0;
  
#line 3803 
  goto return_label;
  ldv_main_12: 
#line 3806 
  ;
  
#line 3809 
  tmp_3 = ldv_undef_int();
  
#line 3809 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 3812 
    ldv_12_ret = (*ldv_emg_alias_simple_open_5)(ldv_12_resource_0,ldv_12_resource_1);
    
#line 3814 
    ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    
#line 3817 
    tmp_2 = ldv_undef_int();
    
#line 3817 
    if (tmp_2 != 0) {
      
#line 3819 
      __VERIFIER_assume(ldv_12_ret == 0);
      
#line 3826 
      goto ldv_call_12;
    }
    else {
      
#line 3830 
      __VERIFIER_assume(ldv_12_ret != 0);
      
#line 3837 
      goto ldv_main_12;
    }
  }
  else {
    
#line 3842 
    ldv_free((void *)ldv_12_resource_0);
    
#line 3850 
    __retres = (void *)0;
    
#line 3850 
    goto return_label;
  }
  
#line 3853 
  __retres = (void *)0;
  
#line 3853 
  goto return_label;
  ldv_call_12: 
#line 3856 
  ;
  
#line 3859 
  tmp_4 = ldv_undef_int();
  
#line 3859 
  switch (tmp_4) {
    case 1: 
#line 3860 
    ;
    
#line 3866 
    (*ldv_emg_alias_generic_file_llseek_3)(ldv_12_resource_1,ldv_12_ldv_param_1_2,ldv_12_ldv_param_2_3);
    
#line 3876 
    goto ldv_call_12;
    case 2: 
#line 3879 
    ;
    
#line 3881 
    ldv_12_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 3882 
    ldv_12_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 3891 
    __VERIFIER_assume(ldv_12_size_cnt <= 2147479552UL);
    
#line 3893 
    ldv_emg_wrapper_iwl_dbgfs_clear_ucode_statistics_write_3(ldv_12_resource_1,ldv_12_ldv_param_1_4,ldv_12_size_cnt,ldv_12_ldv_param_3_5);
    
#line 3897 
    ldv_free((void *)ldv_12_ldv_param_3_5);
    
#line 3898 
    ldv_free((void *)ldv_12_ldv_param_1_4);
    
#line 3905 
    goto ldv_call_12;
    case 3: 
#line 3908 
    ;
    
#line 3910 
    if (ldv_12_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 3912 
      (*(ldv_12_container->release))(ldv_12_resource_0,ldv_12_resource_1); else ;
    
#line 3920 
    goto ldv_main_12;
    default: 
#line 3923 
    ;
    
#line 3923 
    __VERIFIER_assume(0);
  }
  
#line 3926 
  __retres = (void *)0;
  return_label: 
#line 3926 
                return __retres;
}


#line 3931  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_2_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_25 *cf_arg_25;
  int tmp;
  
#line 3934 
  tmp = ldv_undef_int();
  
#line 3934 
  switch (tmp) {
    case 0: 
#line 3935 
    ;
    
#line 3936 
    cf_arg_25 = (struct ldv_struct_timer_scenario_25 *)ldv_xmalloc(16UL);
    
#line 3937 
    cf_arg_25->arg0 = arg0;
    
#line 3938 
    ret = pthread_create(& ldv_thread_25,(pthread_attr_t const *)0,& ldv_timer_scenario_25,(void *)cf_arg_25);
    
#line 3939 
    __VERIFIER_assume(ret == 0);
    
#line 3940 
    goto ldv_50719;
    default: 
#line 3942 
    ;
    
#line 3942 
    __VERIFIER_assume(0);
  }
  ldv_50719: 
#line 3943 
  ;
  
#line 3944 
  return;
}


#line 3948  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_47(void *arg0)
{
  void *__retres;
  struct file *ldv_47_resource_1;
  int ldv_47_ldv_param_2_3;
  long long ldv_47_ldv_param_1_2;
  char *ldv_47_ldv_param_1_4;
  struct inode *ldv_47_resource_0;
  unsigned long ldv_47_size_cnt;
  long long *ldv_47_ldv_param_3_5;
  char *ldv_47_ldv_param_1_6;
  long long *ldv_47_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 3959 
  struct file_operations *ldv_47_container = ldv_emg_alias_iwl_dbgfs_calib_disabled_ops_2;
  
#line 3960 
  int ldv_47_ret = ldv_undef_int();
  
#line 3963 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 3967 
  ldv_47_ret = ldv_undef_int();
  
#line 3970 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 3971 
    ldv_47_container = data->arg0;
    
#line 3972 
    ldv_free((void *)data);
  }
  else ;
  
#line 3977 
  ldv_47_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 3978 
  tmp_1 = ldv_undef_int();
  
#line 3978 
  ldv_47_size_cnt = (unsigned long)tmp_1;
  
#line 3985 
  goto ldv_main_47;
  
#line 3987 
  __retres = (void *)0;
  
#line 3987 
  goto return_label;
  ldv_main_47: 
#line 3990 
  ;
  
#line 3993 
  tmp_3 = ldv_undef_int();
  
#line 3993 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 3996 
    ldv_47_ret = (*ldv_emg_alias_simple_open_5)(ldv_47_resource_0,ldv_47_resource_1);
    
#line 3998 
    ldv_47_ret = ldv_filter_err_code(ldv_47_ret);
    
#line 4001 
    tmp_2 = ldv_undef_int();
    
#line 4001 
    if (tmp_2 != 0) {
      
#line 4003 
      __VERIFIER_assume(ldv_47_ret == 0);
      
#line 4010 
      goto ldv_call_47;
    }
    else {
      
#line 4014 
      __VERIFIER_assume(ldv_47_ret != 0);
      
#line 4021 
      goto ldv_main_47;
    }
  }
  else {
    
#line 4026 
    ldv_free((void *)ldv_47_resource_0);
    
#line 4034 
    __retres = (void *)0;
    
#line 4034 
    goto return_label;
  }
  
#line 4037 
  __retres = (void *)0;
  
#line 4037 
  goto return_label;
  ldv_call_47: 
#line 4040 
  ;
  
#line 4043 
  tmp_4 = ldv_undef_int();
  
#line 4043 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 4044 
    ;
    
#line 4046 
    ldv_47_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 4047 
    ldv_47_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 4056 
    __VERIFIER_assume(ldv_47_size_cnt <= 2147479552UL);
    
#line 4058 
    ldv_emg_wrapper_iwl_dbgfs_calib_disabled_write_4(ldv_47_resource_1,ldv_47_ldv_param_1_6,ldv_47_size_cnt,ldv_47_ldv_param_3_7);
    
#line 4062 
    ldv_free((void *)ldv_47_ldv_param_1_6);
    
#line 4063 
    ldv_free((void *)ldv_47_ldv_param_3_7);
    
#line 4070 
    goto ldv_call_47;
    case 2: 
#line 4073 
    ;
    
#line 4075 
    if (ldv_47_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 4077 
      (*(ldv_47_container->release))(ldv_47_resource_0,ldv_47_resource_1); else ;
    
#line 4085 
    goto ldv_main_47;
    case 3: 
#line 4088 
    ;
    
#line 4092 
    tmp_9 = ldv_undef_int();
    
#line 4092 
    if (tmp_9 != 0) 
#line 4095 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_47_resource_1,ldv_47_ldv_param_1_2,ldv_47_ldv_param_2_3);
    else {
      
#line 4101 
      ldv_47_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 4102 
      ldv_47_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 4107 
      ldv_emg_wrapper_iwl_dbgfs_calib_disabled_read_3(ldv_47_resource_1,ldv_47_ldv_param_1_4,ldv_47_size_cnt,ldv_47_ldv_param_3_5);
      
#line 4111 
      ldv_free((void *)ldv_47_ldv_param_1_4);
      
#line 4112 
      ldv_free((void *)ldv_47_ldv_param_3_5);
    }
    
#line 4116 
    goto ldv_50741;
    default: 
#line 4118 
    ;
    
#line 4118 
    __VERIFIER_assume(0);
  }
  ldv_50741: 
#line 4127 
  ;
  
#line 4127 
  goto ldv_call_47;
  
#line 4129 
  __retres = (void *)0;
  return_label: 
#line 4129 
                return __retres;
}


#line 4134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_49(void *arg0)
{
  void *__retres;
  struct file *ldv_49_resource_1;
  int ldv_49_ldv_param_2_3;
  long long ldv_49_ldv_param_1_2;
  char *ldv_49_ldv_param_1_4;
  struct inode *ldv_49_resource_0;
  unsigned long ldv_49_size_cnt;
  long long *ldv_49_ldv_param_3_5;
  char *ldv_49_ldv_param_1_6;
  long long *ldv_49_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 4145 
  struct file_operations *ldv_49_container = ldv_emg_alias_iwl_dbgfs_rx_handlers_ops_2;
  
#line 4146 
  int ldv_49_ret = ldv_undef_int();
  
#line 4149 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 4153 
  ldv_49_ret = ldv_undef_int();
  
#line 4156 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 4157 
    ldv_49_container = data->arg0;
    
#line 4158 
    ldv_free((void *)data);
  }
  else ;
  
#line 4163 
  ldv_49_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 4164 
  tmp_1 = ldv_undef_int();
  
#line 4164 
  ldv_49_size_cnt = (unsigned long)tmp_1;
  
#line 4171 
  goto ldv_main_49;
  
#line 4173 
  __retres = (void *)0;
  
#line 4173 
  goto return_label;
  ldv_main_49: 
#line 4176 
  ;
  
#line 4179 
  tmp_3 = ldv_undef_int();
  
#line 4179 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 4182 
    ldv_49_ret = (*ldv_emg_alias_simple_open_5)(ldv_49_resource_0,ldv_49_resource_1);
    
#line 4184 
    ldv_49_ret = ldv_filter_err_code(ldv_49_ret);
    
#line 4187 
    tmp_2 = ldv_undef_int();
    
#line 4187 
    if (tmp_2 != 0) {
      
#line 4189 
      __VERIFIER_assume(ldv_49_ret == 0);
      
#line 4196 
      goto ldv_call_49;
    }
    else {
      
#line 4200 
      __VERIFIER_assume(ldv_49_ret != 0);
      
#line 4207 
      goto ldv_main_49;
    }
  }
  else {
    
#line 4212 
    ldv_free((void *)ldv_49_resource_0);
    
#line 4220 
    __retres = (void *)0;
    
#line 4220 
    goto return_label;
  }
  
#line 4223 
  __retres = (void *)0;
  
#line 4223 
  goto return_label;
  ldv_call_49: 
#line 4226 
  ;
  
#line 4229 
  tmp_4 = ldv_undef_int();
  
#line 4229 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 4230 
    ;
    
#line 4232 
    ldv_49_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 4233 
    ldv_49_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 4242 
    __VERIFIER_assume(ldv_49_size_cnt <= 2147479552UL);
    
#line 4244 
    ldv_emg_wrapper_iwl_dbgfs_rx_handlers_write_4(ldv_49_resource_1,ldv_49_ldv_param_1_6,ldv_49_size_cnt,ldv_49_ldv_param_3_7);
    
#line 4248 
    ldv_free((void *)ldv_49_ldv_param_1_6);
    
#line 4249 
    ldv_free((void *)ldv_49_ldv_param_3_7);
    
#line 4256 
    goto ldv_call_49;
    case 2: 
#line 4259 
    ;
    
#line 4261 
    if (ldv_49_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 4263 
      (*(ldv_49_container->release))(ldv_49_resource_0,ldv_49_resource_1); else ;
    
#line 4271 
    goto ldv_main_49;
    case 3: 
#line 4274 
    ;
    
#line 4278 
    tmp_9 = ldv_undef_int();
    
#line 4278 
    if (tmp_9 != 0) 
#line 4281 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_49_resource_1,ldv_49_ldv_param_1_2,ldv_49_ldv_param_2_3);
    else {
      
#line 4287 
      ldv_49_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 4288 
      ldv_49_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 4293 
      ldv_emg_wrapper_iwl_dbgfs_rx_handlers_read_3(ldv_49_resource_1,ldv_49_ldv_param_1_4,ldv_49_size_cnt,ldv_49_ldv_param_3_5);
      
#line 4297 
      ldv_free((void *)ldv_49_ldv_param_3_5);
      
#line 4298 
      ldv_free((void *)ldv_49_ldv_param_1_4);
    }
    
#line 4302 
    goto ldv_50763;
    default: 
#line 4304 
    ;
    
#line 4304 
    __VERIFIER_assume(0);
  }
  ldv_50763: 
#line 4313 
  ;
  
#line 4313 
  goto ldv_call_49;
  
#line 4315 
  __retres = (void *)0;
  return_label: 
#line 4315 
                return __retres;
}


#line 4320  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_35(void *arg0)
{
  void *__retres;
  struct file *ldv_35_resource_1;
  int ldv_35_ldv_param_2_3;
  long long ldv_35_ldv_param_1_2;
  char *ldv_35_ldv_param_1_4;
  unsigned long ldv_35_size_cnt;
  long long *ldv_35_ldv_param_3_5;
  struct inode *ldv_35_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 4329 
  struct file_operations *ldv_35_container = ldv_emg_alias_iwl_dbgfs_fw_restart_ops_2;
  
#line 4330 
  int ldv_35_ret = ldv_undef_int();
  
#line 4333 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 4337 
  ldv_35_ret = ldv_undef_int();
  
#line 4340 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 4341 
    ldv_35_container = data->arg0;
    
#line 4342 
    ldv_free((void *)data);
  }
  else ;
  
#line 4347 
  ldv_35_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 4348 
  tmp_1 = ldv_undef_int();
  
#line 4348 
  ldv_35_size_cnt = (unsigned long)tmp_1;
  
#line 4355 
  goto ldv_main_35;
  
#line 4357 
  __retres = (void *)0;
  
#line 4357 
  goto return_label;
  ldv_main_35: 
#line 4360 
  ;
  
#line 4363 
  tmp_3 = ldv_undef_int();
  
#line 4363 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 4366 
    ldv_35_ret = (*ldv_emg_alias_simple_open_5)(ldv_35_resource_0,ldv_35_resource_1);
    
#line 4368 
    ldv_35_ret = ldv_filter_err_code(ldv_35_ret);
    
#line 4371 
    tmp_2 = ldv_undef_int();
    
#line 4371 
    if (tmp_2 != 0) {
      
#line 4373 
      __VERIFIER_assume(ldv_35_ret == 0);
      
#line 4380 
      goto ldv_call_35;
    }
    else {
      
#line 4384 
      __VERIFIER_assume(ldv_35_ret != 0);
      
#line 4391 
      goto ldv_main_35;
    }
  }
  else {
    
#line 4396 
    ldv_free((void *)ldv_35_resource_0);
    
#line 4404 
    __retres = (void *)0;
    
#line 4404 
    goto return_label;
  }
  
#line 4407 
  __retres = (void *)0;
  
#line 4407 
  goto return_label;
  ldv_call_35: 
#line 4410 
  ;
  
#line 4413 
  tmp_4 = ldv_undef_int();
  
#line 4413 
  switch (tmp_4) {
    case 1: 
#line 4414 
    ;
    
#line 4420 
    (*ldv_emg_alias_generic_file_llseek_3)(ldv_35_resource_1,ldv_35_ldv_param_1_2,ldv_35_ldv_param_2_3);
    
#line 4430 
    goto ldv_call_35;
    case 2: 
#line 4433 
    ;
    
#line 4435 
    ldv_35_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 4436 
    ldv_35_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 4445 
    __VERIFIER_assume(ldv_35_size_cnt <= 2147479552UL);
    
#line 4447 
    ldv_emg_wrapper_iwl_dbgfs_fw_restart_write_3(ldv_35_resource_1,ldv_35_ldv_param_1_4,ldv_35_size_cnt,ldv_35_ldv_param_3_5);
    
#line 4451 
    ldv_free((void *)ldv_35_ldv_param_3_5);
    
#line 4452 
    ldv_free((void *)ldv_35_ldv_param_1_4);
    
#line 4459 
    goto ldv_call_35;
    case 3: 
#line 4462 
    ;
    
#line 4464 
    if (ldv_35_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 4466 
      (*(ldv_35_container->release))(ldv_35_resource_0,ldv_35_resource_1); else ;
    
#line 4474 
    goto ldv_main_35;
    default: 
#line 4477 
    ;
    
#line 4477 
    __VERIFIER_assume(0);
  }
  
#line 4480 
  __retres = (void *)0;
  return_label: 
#line 4480 
                return __retres;
}


#line 4485  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_21(void *arg0)
{
  void *__retres;
  struct file *ldv_21_resource_1;
  int ldv_21_ldv_param_2_3;
  long long ldv_21_ldv_param_1_2;
  char *ldv_21_ldv_param_1_4;
  struct inode *ldv_21_resource_0;
  unsigned long ldv_21_size_cnt;
  long long *ldv_21_ldv_param_3_5;
  char *ldv_21_ldv_param_1_6;
  long long *ldv_21_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 4496 
  struct file_operations *ldv_21_container = ldv_emg_alias_iwl_dbgfs_status_ops_2;
  
#line 4497 
  int ldv_21_ret = ldv_undef_int();
  
#line 4500 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 4504 
  ldv_21_ret = ldv_undef_int();
  
#line 4507 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 4508 
    ldv_21_container = data->arg0;
    
#line 4509 
    ldv_free((void *)data);
  }
  else ;
  
#line 4514 
  ldv_21_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 4515 
  tmp_1 = ldv_undef_int();
  
#line 4515 
  ldv_21_size_cnt = (unsigned long)tmp_1;
  
#line 4522 
  goto ldv_main_21;
  
#line 4524 
  __retres = (void *)0;
  
#line 4524 
  goto return_label;
  ldv_main_21: 
#line 4527 
  ;
  
#line 4530 
  tmp_3 = ldv_undef_int();
  
#line 4530 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 4533 
    ldv_21_ret = (*ldv_emg_alias_simple_open_5)(ldv_21_resource_0,ldv_21_resource_1);
    
#line 4535 
    ldv_21_ret = ldv_filter_err_code(ldv_21_ret);
    
#line 4538 
    tmp_2 = ldv_undef_int();
    
#line 4538 
    if (tmp_2 != 0) {
      
#line 4540 
      __VERIFIER_assume(ldv_21_ret == 0);
      
#line 4547 
      goto ldv_call_21;
    }
    else {
      
#line 4551 
      __VERIFIER_assume(ldv_21_ret != 0);
      
#line 4558 
      goto ldv_main_21;
    }
  }
  else {
    
#line 4563 
    ldv_free((void *)ldv_21_resource_0);
    
#line 4571 
    __retres = (void *)0;
    
#line 4571 
    goto return_label;
  }
  
#line 4574 
  __retres = (void *)0;
  
#line 4574 
  goto return_label;
  ldv_call_21: 
#line 4577 
  ;
  
#line 4580 
  tmp_4 = ldv_undef_int();
  
#line 4580 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 4581 
    ;
    
#line 4583 
    ldv_21_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 4584 
    ldv_21_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 4588 
    if (ldv_21_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 4594 
      __VERIFIER_assume(ldv_21_size_cnt <= 2147479552UL);
      
#line 4596 
      (*(ldv_21_container->write))(ldv_21_resource_1,(char const *)ldv_21_ldv_param_1_6,ldv_21_size_cnt,ldv_21_ldv_param_3_7);
    }
    else ;
    
#line 4601 
    ldv_free((void *)ldv_21_ldv_param_3_7);
    
#line 4602 
    ldv_free((void *)ldv_21_ldv_param_1_6);
    
#line 4609 
    goto ldv_call_21;
    case 2: 
#line 4612 
    ;
    
#line 4614 
    if (ldv_21_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 4616 
      (*(ldv_21_container->release))(ldv_21_resource_0,ldv_21_resource_1); else ;
    
#line 4624 
    goto ldv_main_21;
    case 3: 
#line 4627 
    ;
    
#line 4631 
    tmp_9 = ldv_undef_int();
    
#line 4631 
    if (tmp_9 != 0) 
#line 4634 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_21_resource_1,ldv_21_ldv_param_1_2,ldv_21_ldv_param_2_3);
    else {
      
#line 4640 
      ldv_21_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 4641 
      ldv_21_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 4646 
      ldv_emg_wrapper_iwl_dbgfs_status_read_3(ldv_21_resource_1,ldv_21_ldv_param_1_4,ldv_21_size_cnt,ldv_21_ldv_param_3_5);
      
#line 4650 
      ldv_free((void *)ldv_21_ldv_param_1_4);
      
#line 4651 
      ldv_free((void *)ldv_21_ldv_param_3_5);
    }
    
#line 4655 
    goto ldv_50804;
    default: 
#line 4657 
    ;
    
#line 4657 
    __VERIFIER_assume(0);
  }
  ldv_50804: 
#line 4666 
  ;
  
#line 4666 
  goto ldv_call_21;
  
#line 4668 
  __retres = (void *)0;
  return_label: 
#line 4668 
                return __retres;
}


#line 4673  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  struct dentry *__retres;
  struct dentry *ldv_8_dentry;
  struct file_operations *ldv_8_file_operations;
  int tmp_1;
  
#line 4681 
  tmp_1 = ldv_undef_int();
  
#line 4681 
  if (tmp_1 != 0) {
    
#line 4683 
    ldv_8_dentry = (struct dentry *)ldv_xmalloc_unknown_size(0UL);
    
#line 4684 
    ldv_8_file_operations = arg4;
    
#line 4688 
    ldv_dispatch_register_8_3(ldv_8_file_operations);
    
#line 4692 
    __retres = ldv_8_dentry;
    
#line 4692 
    goto return_label;
  }
  else {
    struct dentry *tmp_0;
    
#line 4699 
    tmp_0 = (struct dentry *)ERR_PTR(-19L);
    
#line 4699 
    __retres = tmp_0;
    
#line 4699 
    goto return_label;
  }
  return_label: 
#line 4681 
                return __retres;
}


#line 4709  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_19(void *arg0)
{
  void *__retres;
  struct file *ldv_19_resource_1;
  int ldv_19_ldv_param_2_3;
  long long ldv_19_ldv_param_1_2;
  char *ldv_19_ldv_param_1_4;
  struct inode *ldv_19_resource_0;
  unsigned long ldv_19_size_cnt;
  long long *ldv_19_ldv_param_3_5;
  char *ldv_19_ldv_param_1_6;
  long long *ldv_19_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 4720 
  struct file_operations *ldv_19_container = ldv_emg_alias_iwl_dbgfs_sleep_level_override_ops_2;
  
#line 4721 
  int ldv_19_ret = ldv_undef_int();
  
#line 4724 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 4728 
  ldv_19_ret = ldv_undef_int();
  
#line 4731 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 4732 
    ldv_19_container = data->arg0;
    
#line 4733 
    ldv_free((void *)data);
  }
  else ;
  
#line 4738 
  ldv_19_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 4739 
  tmp_1 = ldv_undef_int();
  
#line 4739 
  ldv_19_size_cnt = (unsigned long)tmp_1;
  
#line 4746 
  goto ldv_main_19;
  
#line 4748 
  __retres = (void *)0;
  
#line 4748 
  goto return_label;
  ldv_main_19: 
#line 4751 
  ;
  
#line 4754 
  tmp_3 = ldv_undef_int();
  
#line 4754 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 4757 
    ldv_19_ret = (*ldv_emg_alias_simple_open_5)(ldv_19_resource_0,ldv_19_resource_1);
    
#line 4759 
    ldv_19_ret = ldv_filter_err_code(ldv_19_ret);
    
#line 4762 
    tmp_2 = ldv_undef_int();
    
#line 4762 
    if (tmp_2 != 0) {
      
#line 4764 
      __VERIFIER_assume(ldv_19_ret == 0);
      
#line 4771 
      goto ldv_call_19;
    }
    else {
      
#line 4775 
      __VERIFIER_assume(ldv_19_ret != 0);
      
#line 4782 
      goto ldv_main_19;
    }
  }
  else {
    
#line 4787 
    ldv_free((void *)ldv_19_resource_0);
    
#line 4795 
    __retres = (void *)0;
    
#line 4795 
    goto return_label;
  }
  
#line 4798 
  __retres = (void *)0;
  
#line 4798 
  goto return_label;
  ldv_call_19: 
#line 4801 
  ;
  
#line 4804 
  tmp_4 = ldv_undef_int();
  
#line 4804 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 4805 
    ;
    
#line 4807 
    ldv_19_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 4808 
    ldv_19_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 4817 
    __VERIFIER_assume(ldv_19_size_cnt <= 2147479552UL);
    
#line 4819 
    ldv_emg_wrapper_iwl_dbgfs_sleep_level_override_write_4(ldv_19_resource_1,ldv_19_ldv_param_1_6,ldv_19_size_cnt,ldv_19_ldv_param_3_7);
    
#line 4823 
    ldv_free((void *)ldv_19_ldv_param_3_7);
    
#line 4824 
    ldv_free((void *)ldv_19_ldv_param_1_6);
    
#line 4831 
    goto ldv_call_19;
    case 2: 
#line 4834 
    ;
    
#line 4836 
    if (ldv_19_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 4838 
      (*(ldv_19_container->release))(ldv_19_resource_0,ldv_19_resource_1); else ;
    
#line 4846 
    goto ldv_main_19;
    case 3: 
#line 4849 
    ;
    
#line 4853 
    tmp_9 = ldv_undef_int();
    
#line 4853 
    if (tmp_9 != 0) 
#line 4856 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_19_resource_1,ldv_19_ldv_param_1_2,ldv_19_ldv_param_2_3);
    else {
      
#line 4862 
      ldv_19_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 4863 
      ldv_19_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 4868 
      ldv_emg_wrapper_iwl_dbgfs_sleep_level_override_read_3(ldv_19_resource_1,ldv_19_ldv_param_1_4,ldv_19_size_cnt,ldv_19_ldv_param_3_5);
      
#line 4872 
      ldv_free((void *)ldv_19_ldv_param_1_4);
      
#line 4873 
      ldv_free((void *)ldv_19_ldv_param_3_5);
    }
    
#line 4877 
    goto ldv_50835;
    default: 
#line 4879 
    ;
    
#line 4879 
    __VERIFIER_assume(0);
  }
  ldv_50835: 
#line 4888 
  ;
  
#line 4888 
  goto ldv_call_19;
  
#line 4890 
  __retres = (void *)0;
  return_label: 
#line 4890 
                return __retres;
}


#line 4895  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1)
{
  _Bool __retres;
  struct work_struct *ldv_9_work_struct;
  int tmp;
  
#line 4902 
  tmp = ldv_undef_int();
  
#line 4902 
  if (tmp != 0) {
    
#line 4904 
    ldv_9_work_struct = arg1;
    
#line 4908 
    if (ldv_9_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 4910 
      (*(ldv_9_work_struct->func))(ldv_9_work_struct); else ;
    
#line 4915 
    __retres = (_Bool)1;
    
#line 4915 
    goto return_label;
  }
  else {
    
#line 4922 
    __retres = (_Bool)0;
    
#line 4922 
    goto return_label;
  }
  return_label: 
#line 4902 
                return __retres;
}


#line 4932  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
struct ieee80211_hw *ldv_emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1)
{
  struct ieee80211_hw *__retres;
  struct ieee80211_hw *ldv_5_ieee80211_hw;
  int tmp_0;
  
#line 4935 
  struct ieee80211_ops *ldv_5_ieee80211_ops = (struct ieee80211_ops *)(& iwlagn_hw_ops);
  
#line 4940 
  tmp_0 = ldv_undef_int();
  
#line 4940 
  if (tmp_0 != 0) {
    
#line 4942 
    ldv_5_ieee80211_ops = arg1;
    
#line 4943 
    ldv_5_ieee80211_hw = (struct ieee80211_hw *)ldv_xmalloc_unknown_size(0UL);
    
#line 4947 
    ldv_dispatch_register_5_3(ldv_5_ieee80211_hw);
    
#line 4951 
    __retres = ldv_5_ieee80211_hw;
    
#line 4951 
    goto return_label;
  }
  else {
    
#line 4958 
    __retres = (struct ieee80211_hw *)0;
    
#line 4958 
    goto return_label;
  }
  return_label: 
#line 4940 
                return __retres;
}


#line 4968  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_debugfs_remove(struct dentry *arg0)
{
  struct dentry *ldv_4_dentry;
  struct file_operations *ldv_4_file_operations;
  
#line 4975 
  ldv_4_dentry = arg0;
  
#line 4976 
  ldv_free((void *)ldv_4_dentry);
  
#line 4980 
  ldv_dispatch_deregister_4_1(ldv_4_file_operations);
  
#line 4984 
  goto return_label;
  return_label: 
#line 4986 
                return;
}


#line 4991  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_39(void *arg0)
{
  void *__retres;
  struct file *ldv_39_resource_1;
  int ldv_39_ldv_param_2_3;
  long long ldv_39_ldv_param_1_2;
  char *ldv_39_ldv_param_1_4;
  struct inode *ldv_39_resource_0;
  unsigned long ldv_39_size_cnt;
  long long *ldv_39_ldv_param_3_5;
  char *ldv_39_ldv_param_1_6;
  long long *ldv_39_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 5002 
  struct file_operations *ldv_39_container = ldv_emg_alias_iwl_dbgfs_reply_tx_error_ops_2;
  
#line 5003 
  int ldv_39_ret = ldv_undef_int();
  
#line 5006 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 5010 
  ldv_39_ret = ldv_undef_int();
  
#line 5013 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 5014 
    ldv_39_container = data->arg0;
    
#line 5015 
    ldv_free((void *)data);
  }
  else ;
  
#line 5020 
  ldv_39_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 5021 
  tmp_1 = ldv_undef_int();
  
#line 5021 
  ldv_39_size_cnt = (unsigned long)tmp_1;
  
#line 5028 
  goto ldv_main_39;
  
#line 5030 
  __retres = (void *)0;
  
#line 5030 
  goto return_label;
  ldv_main_39: 
#line 5033 
  ;
  
#line 5036 
  tmp_3 = ldv_undef_int();
  
#line 5036 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 5039 
    ldv_39_ret = (*ldv_emg_alias_simple_open_5)(ldv_39_resource_0,ldv_39_resource_1);
    
#line 5041 
    ldv_39_ret = ldv_filter_err_code(ldv_39_ret);
    
#line 5044 
    tmp_2 = ldv_undef_int();
    
#line 5044 
    if (tmp_2 != 0) {
      
#line 5046 
      __VERIFIER_assume(ldv_39_ret == 0);
      
#line 5053 
      goto ldv_call_39;
    }
    else {
      
#line 5057 
      __VERIFIER_assume(ldv_39_ret != 0);
      
#line 5064 
      goto ldv_main_39;
    }
  }
  else {
    
#line 5069 
    ldv_free((void *)ldv_39_resource_0);
    
#line 5077 
    __retres = (void *)0;
    
#line 5077 
    goto return_label;
  }
  
#line 5080 
  __retres = (void *)0;
  
#line 5080 
  goto return_label;
  ldv_call_39: 
#line 5083 
  ;
  
#line 5086 
  tmp_4 = ldv_undef_int();
  
#line 5086 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 5087 
    ;
    
#line 5089 
    ldv_39_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 5090 
    ldv_39_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 5094 
    if (ldv_39_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 5100 
      __VERIFIER_assume(ldv_39_size_cnt <= 2147479552UL);
      
#line 5102 
      (*(ldv_39_container->write))(ldv_39_resource_1,(char const *)ldv_39_ldv_param_1_6,ldv_39_size_cnt,ldv_39_ldv_param_3_7);
    }
    else ;
    
#line 5107 
    ldv_free((void *)ldv_39_ldv_param_1_6);
    
#line 5108 
    ldv_free((void *)ldv_39_ldv_param_3_7);
    
#line 5115 
    goto ldv_call_39;
    case 2: 
#line 5118 
    ;
    
#line 5120 
    if (ldv_39_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 5122 
      (*(ldv_39_container->release))(ldv_39_resource_0,ldv_39_resource_1); else ;
    
#line 5130 
    goto ldv_main_39;
    case 3: 
#line 5133 
    ;
    
#line 5137 
    tmp_9 = ldv_undef_int();
    
#line 5137 
    if (tmp_9 != 0) 
#line 5140 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_39_resource_1,ldv_39_ldv_param_1_2,ldv_39_ldv_param_2_3);
    else {
      
#line 5146 
      ldv_39_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 5147 
      ldv_39_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 5152 
      ldv_emg_wrapper_iwl_dbgfs_reply_tx_error_read_3(ldv_39_resource_1,ldv_39_ldv_param_1_4,ldv_39_size_cnt,ldv_39_ldv_param_3_5);
      
#line 5156 
      ldv_free((void *)ldv_39_ldv_param_1_4);
      
#line 5157 
      ldv_free((void *)ldv_39_ldv_param_3_5);
    }
    
#line 5161 
    goto ldv_50873;
    default: 
#line 5163 
    ;
    
#line 5163 
    __VERIFIER_assume(0);
  }
  ldv_50873: 
#line 5172 
  ;
  
#line 5172 
  goto ldv_call_39;
  
#line 5174 
  __retres = (void *)0;
  return_label: 
#line 5174 
                return __retres;
}


#line 5179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_ieee80211_free_hw(struct ieee80211_hw *arg0)
{
  struct ieee80211_hw *ldv_7_ieee80211_hw;
  
#line 5185 
  ldv_dispatch_deregister_7_2(ldv_7_ieee80211_hw);
  
#line 5189 
  ldv_free((void *)ldv_7_ieee80211_hw);
  
#line 5193 
  goto return_label;
  return_label: 
#line 5195 
                return;
}


#line 5200  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_8_3(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_10;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_11;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_12;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_13;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_14;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_15;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_16;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_17;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_18;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_19;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_20;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_21;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_22;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_23;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_24;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_26;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_27;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_28;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_29;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_31;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_32;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_33;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_34;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_35;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_36;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_37;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_38;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_39;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_40;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_41;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_42;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_43;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_44;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_45;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_46;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_47;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_48;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_49;
  int tmp;
  
#line 5240 
  tmp = ldv_undef_int();
  
#line 5240 
  switch (tmp) {
    case 0: 
#line 5241 
    ;
    
#line 5242 
    cf_arg_10 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5243 
    cf_arg_10->arg0 = arg0;
    
#line 5244 
    ret = pthread_create(& ldv_thread_10,(pthread_attr_t const *)0,& ldv_character_driver_scenario_10,(void *)cf_arg_10);
    
#line 5245 
    __VERIFIER_assume(ret == 0);
    
#line 5246 
    goto ldv_50922;
    case 1: 
#line 5248 
    ;
    
#line 5249 
    cf_arg_11 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5250 
    cf_arg_11->arg0 = arg0;
    
#line 5251 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_character_driver_scenario_11,(void *)cf_arg_11);
    
#line 5252 
    __VERIFIER_assume(ret == 0);
    
#line 5253 
    goto ldv_50922;
    case 2: 
#line 5255 
    ;
    
#line 5256 
    cf_arg_12 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5257 
    cf_arg_12->arg0 = arg0;
    
#line 5258 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_character_driver_scenario_12,(void *)cf_arg_12);
    
#line 5259 
    __VERIFIER_assume(ret == 0);
    
#line 5260 
    goto ldv_50922;
    case 3: 
#line 5262 
    ;
    
#line 5263 
    cf_arg_13 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5264 
    cf_arg_13->arg0 = arg0;
    
#line 5265 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_character_driver_scenario_13,(void *)cf_arg_13);
    
#line 5266 
    __VERIFIER_assume(ret == 0);
    
#line 5267 
    goto ldv_50922;
    case 4: 
#line 5269 
    ;
    
#line 5270 
    cf_arg_14 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5271 
    cf_arg_14->arg0 = arg0;
    
#line 5272 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_character_driver_scenario_14,(void *)cf_arg_14);
    
#line 5273 
    __VERIFIER_assume(ret == 0);
    
#line 5274 
    goto ldv_50922;
    case 5: 
#line 5276 
    ;
    
#line 5277 
    cf_arg_15 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5278 
    cf_arg_15->arg0 = arg0;
    
#line 5279 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_character_driver_scenario_15,(void *)cf_arg_15);
    
#line 5280 
    __VERIFIER_assume(ret == 0);
    
#line 5281 
    goto ldv_50922;
    case 6: 
#line 5283 
    ;
    
#line 5284 
    cf_arg_16 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5285 
    cf_arg_16->arg0 = arg0;
    
#line 5286 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_character_driver_scenario_16,(void *)cf_arg_16);
    
#line 5287 
    __VERIFIER_assume(ret == 0);
    
#line 5288 
    goto ldv_50922;
    case 7: 
#line 5290 
    ;
    
#line 5291 
    cf_arg_17 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5292 
    cf_arg_17->arg0 = arg0;
    
#line 5293 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_character_driver_scenario_17,(void *)cf_arg_17);
    
#line 5294 
    __VERIFIER_assume(ret == 0);
    
#line 5295 
    goto ldv_50922;
    case 8: 
#line 5297 
    ;
    
#line 5298 
    cf_arg_18 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5299 
    cf_arg_18->arg0 = arg0;
    
#line 5300 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_character_driver_scenario_18,(void *)cf_arg_18);
    
#line 5301 
    __VERIFIER_assume(ret == 0);
    
#line 5302 
    goto ldv_50922;
    case 9: 
#line 5304 
    ;
    
#line 5305 
    cf_arg_19 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5306 
    cf_arg_19->arg0 = arg0;
    
#line 5307 
    ret = pthread_create(& ldv_thread_19,(pthread_attr_t const *)0,& ldv_character_driver_scenario_19,(void *)cf_arg_19);
    
#line 5308 
    __VERIFIER_assume(ret == 0);
    
#line 5309 
    goto ldv_50922;
    case 10: 
#line 5311 
    ;
    
#line 5312 
    cf_arg_20 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5313 
    cf_arg_20->arg0 = arg0;
    
#line 5314 
    ret = pthread_create(& ldv_thread_20,(pthread_attr_t const *)0,& ldv_character_driver_scenario_20,(void *)cf_arg_20);
    
#line 5315 
    __VERIFIER_assume(ret == 0);
    
#line 5316 
    goto ldv_50922;
    case 11: 
#line 5318 
    ;
    
#line 5319 
    cf_arg_21 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5320 
    cf_arg_21->arg0 = arg0;
    
#line 5321 
    ret = pthread_create(& ldv_thread_21,(pthread_attr_t const *)0,& ldv_character_driver_scenario_21,(void *)cf_arg_21);
    
#line 5322 
    __VERIFIER_assume(ret == 0);
    
#line 5323 
    goto ldv_50922;
    case 12: 
#line 5325 
    ;
    
#line 5326 
    cf_arg_22 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5327 
    cf_arg_22->arg0 = arg0;
    
#line 5328 
    ret = pthread_create(& ldv_thread_22,(pthread_attr_t const *)0,& ldv_character_driver_scenario_22,(void *)cf_arg_22);
    
#line 5329 
    __VERIFIER_assume(ret == 0);
    
#line 5330 
    goto ldv_50922;
    case 13: 
#line 5332 
    ;
    
#line 5333 
    cf_arg_23 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5334 
    cf_arg_23->arg0 = arg0;
    
#line 5335 
    ret = pthread_create(& ldv_thread_23,(pthread_attr_t const *)0,& ldv_character_driver_scenario_23,(void *)cf_arg_23);
    
#line 5336 
    __VERIFIER_assume(ret == 0);
    
#line 5337 
    goto ldv_50922;
    case 14: 
#line 5339 
    ;
    
#line 5340 
    cf_arg_24 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5341 
    cf_arg_24->arg0 = arg0;
    
#line 5342 
    ret = pthread_create(& ldv_thread_24,(pthread_attr_t const *)0,& ldv_character_driver_scenario_24,(void *)cf_arg_24);
    
#line 5343 
    __VERIFIER_assume(ret == 0);
    
#line 5344 
    goto ldv_50922;
    case 15: 
#line 5346 
    ;
    
#line 5347 
    cf_arg_26 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5348 
    cf_arg_26->arg0 = arg0;
    
#line 5349 
    ret = pthread_create(& ldv_thread_26,(pthread_attr_t const *)0,& ldv_character_driver_scenario_26,(void *)cf_arg_26);
    
#line 5350 
    __VERIFIER_assume(ret == 0);
    
#line 5351 
    goto ldv_50922;
    case 16: 
#line 5353 
    ;
    
#line 5354 
    cf_arg_27 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5355 
    cf_arg_27->arg0 = arg0;
    
#line 5356 
    ret = pthread_create(& ldv_thread_27,(pthread_attr_t const *)0,& ldv_character_driver_scenario_27,(void *)cf_arg_27);
    
#line 5357 
    __VERIFIER_assume(ret == 0);
    
#line 5358 
    goto ldv_50922;
    case 17: 
#line 5360 
    ;
    
#line 5361 
    cf_arg_28 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5362 
    cf_arg_28->arg0 = arg0;
    
#line 5363 
    ret = pthread_create(& ldv_thread_28,(pthread_attr_t const *)0,& ldv_character_driver_scenario_28,(void *)cf_arg_28);
    
#line 5364 
    __VERIFIER_assume(ret == 0);
    
#line 5365 
    goto ldv_50922;
    case 18: 
#line 5367 
    ;
    
#line 5368 
    cf_arg_29 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5369 
    cf_arg_29->arg0 = arg0;
    
#line 5370 
    ret = pthread_create(& ldv_thread_29,(pthread_attr_t const *)0,& ldv_character_driver_scenario_29,(void *)cf_arg_29);
    
#line 5371 
    __VERIFIER_assume(ret == 0);
    
#line 5372 
    goto ldv_50922;
    case 19: 
#line 5374 
    ;
    
#line 5375 
    cf_arg_31 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5376 
    cf_arg_31->arg0 = arg0;
    
#line 5377 
    ret = pthread_create(& ldv_thread_31,(pthread_attr_t const *)0,& ldv_character_driver_scenario_31,(void *)cf_arg_31);
    
#line 5378 
    __VERIFIER_assume(ret == 0);
    
#line 5379 
    goto ldv_50922;
    case 20: 
#line 5381 
    ;
    
#line 5382 
    cf_arg_32 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5383 
    cf_arg_32->arg0 = arg0;
    
#line 5384 
    ret = pthread_create(& ldv_thread_32,(pthread_attr_t const *)0,& ldv_character_driver_scenario_32,(void *)cf_arg_32);
    
#line 5385 
    __VERIFIER_assume(ret == 0);
    
#line 5386 
    goto ldv_50922;
    case 21: 
#line 5388 
    ;
    
#line 5389 
    cf_arg_33 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5390 
    cf_arg_33->arg0 = arg0;
    
#line 5391 
    ret = pthread_create(& ldv_thread_33,(pthread_attr_t const *)0,& ldv_character_driver_scenario_33,(void *)cf_arg_33);
    
#line 5392 
    __VERIFIER_assume(ret == 0);
    
#line 5393 
    goto ldv_50922;
    case 22: 
#line 5395 
    ;
    
#line 5396 
    cf_arg_34 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5397 
    cf_arg_34->arg0 = arg0;
    
#line 5398 
    ret = pthread_create(& ldv_thread_34,(pthread_attr_t const *)0,& ldv_character_driver_scenario_34,(void *)cf_arg_34);
    
#line 5399 
    __VERIFIER_assume(ret == 0);
    
#line 5400 
    goto ldv_50922;
    case 23: 
#line 5402 
    ;
    
#line 5403 
    cf_arg_35 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5404 
    cf_arg_35->arg0 = arg0;
    
#line 5405 
    ret = pthread_create(& ldv_thread_35,(pthread_attr_t const *)0,& ldv_character_driver_scenario_35,(void *)cf_arg_35);
    
#line 5406 
    __VERIFIER_assume(ret == 0);
    
#line 5407 
    goto ldv_50922;
    case 24: 
#line 5409 
    ;
    
#line 5410 
    cf_arg_36 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5411 
    cf_arg_36->arg0 = arg0;
    
#line 5412 
    ret = pthread_create(& ldv_thread_36,(pthread_attr_t const *)0,& ldv_character_driver_scenario_36,(void *)cf_arg_36);
    
#line 5413 
    __VERIFIER_assume(ret == 0);
    
#line 5414 
    goto ldv_50922;
    case 25: 
#line 5416 
    ;
    
#line 5417 
    cf_arg_37 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5418 
    cf_arg_37->arg0 = arg0;
    
#line 5419 
    ret = pthread_create(& ldv_thread_37,(pthread_attr_t const *)0,& ldv_character_driver_scenario_37,(void *)cf_arg_37);
    
#line 5420 
    __VERIFIER_assume(ret == 0);
    
#line 5421 
    goto ldv_50922;
    case 26: 
#line 5423 
    ;
    
#line 5424 
    cf_arg_38 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5425 
    cf_arg_38->arg0 = arg0;
    
#line 5426 
    ret = pthread_create(& ldv_thread_38,(pthread_attr_t const *)0,& ldv_character_driver_scenario_38,(void *)cf_arg_38);
    
#line 5427 
    __VERIFIER_assume(ret == 0);
    
#line 5428 
    goto ldv_50922;
    case 27: 
#line 5430 
    ;
    
#line 5431 
    cf_arg_39 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5432 
    cf_arg_39->arg0 = arg0;
    
#line 5433 
    ret = pthread_create(& ldv_thread_39,(pthread_attr_t const *)0,& ldv_character_driver_scenario_39,(void *)cf_arg_39);
    
#line 5434 
    __VERIFIER_assume(ret == 0);
    
#line 5435 
    goto ldv_50922;
    case 28: 
#line 5437 
    ;
    
#line 5438 
    cf_arg_40 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5439 
    cf_arg_40->arg0 = arg0;
    
#line 5440 
    ret = pthread_create(& ldv_thread_40,(pthread_attr_t const *)0,& ldv_character_driver_scenario_40,(void *)cf_arg_40);
    
#line 5441 
    __VERIFIER_assume(ret == 0);
    
#line 5442 
    goto ldv_50922;
    case 29: 
#line 5444 
    ;
    
#line 5445 
    cf_arg_41 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5446 
    cf_arg_41->arg0 = arg0;
    
#line 5447 
    ret = pthread_create(& ldv_thread_41,(pthread_attr_t const *)0,& ldv_character_driver_scenario_41,(void *)cf_arg_41);
    
#line 5448 
    __VERIFIER_assume(ret == 0);
    
#line 5449 
    goto ldv_50922;
    case 30: 
#line 5451 
    ;
    
#line 5452 
    cf_arg_42 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5453 
    cf_arg_42->arg0 = arg0;
    
#line 5454 
    ret = pthread_create(& ldv_thread_42,(pthread_attr_t const *)0,& ldv_character_driver_scenario_42,(void *)cf_arg_42);
    
#line 5455 
    __VERIFIER_assume(ret == 0);
    
#line 5456 
    goto ldv_50922;
    case 31: 
#line 5458 
    ;
    
#line 5459 
    cf_arg_43 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5460 
    cf_arg_43->arg0 = arg0;
    
#line 5461 
    ret = pthread_create(& ldv_thread_43,(pthread_attr_t const *)0,& ldv_character_driver_scenario_43,(void *)cf_arg_43);
    
#line 5462 
    __VERIFIER_assume(ret == 0);
    
#line 5463 
    goto ldv_50922;
    case 32: 
#line 5465 
    ;
    
#line 5466 
    cf_arg_44 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5467 
    cf_arg_44->arg0 = arg0;
    
#line 5468 
    ret = pthread_create(& ldv_thread_44,(pthread_attr_t const *)0,& ldv_character_driver_scenario_44,(void *)cf_arg_44);
    
#line 5469 
    __VERIFIER_assume(ret == 0);
    
#line 5470 
    goto ldv_50922;
    case 33: 
#line 5472 
    ;
    
#line 5473 
    cf_arg_45 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5474 
    cf_arg_45->arg0 = arg0;
    
#line 5475 
    ret = pthread_create(& ldv_thread_45,(pthread_attr_t const *)0,& ldv_character_driver_scenario_45,(void *)cf_arg_45);
    
#line 5476 
    __VERIFIER_assume(ret == 0);
    
#line 5477 
    goto ldv_50922;
    case 34: 
#line 5479 
    ;
    
#line 5480 
    cf_arg_46 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5481 
    cf_arg_46->arg0 = arg0;
    
#line 5482 
    ret = pthread_create(& ldv_thread_46,(pthread_attr_t const *)0,& ldv_character_driver_scenario_46,(void *)cf_arg_46);
    
#line 5483 
    __VERIFIER_assume(ret == 0);
    
#line 5484 
    goto ldv_50922;
    case 35: 
#line 5486 
    ;
    
#line 5487 
    cf_arg_47 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5488 
    cf_arg_47->arg0 = arg0;
    
#line 5489 
    ret = pthread_create(& ldv_thread_47,(pthread_attr_t const *)0,& ldv_character_driver_scenario_47,(void *)cf_arg_47);
    
#line 5490 
    __VERIFIER_assume(ret == 0);
    
#line 5491 
    goto ldv_50922;
    case 36: 
#line 5493 
    ;
    
#line 5494 
    cf_arg_48 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5495 
    cf_arg_48->arg0 = arg0;
    
#line 5496 
    ret = pthread_create(& ldv_thread_48,(pthread_attr_t const *)0,& ldv_character_driver_scenario_48,(void *)cf_arg_48);
    
#line 5497 
    __VERIFIER_assume(ret == 0);
    
#line 5498 
    goto ldv_50922;
    case 37: 
#line 5500 
    ;
    
#line 5501 
    cf_arg_49 = (struct ldv_struct_character_driver_scenario_10 *)ldv_xmalloc(16UL);
    
#line 5502 
    cf_arg_49->arg0 = arg0;
    
#line 5503 
    ret = pthread_create(& ldv_thread_49,(pthread_attr_t const *)0,& ldv_character_driver_scenario_49,(void *)cf_arg_49);
    
#line 5504 
    __VERIFIER_assume(ret == 0);
    
#line 5505 
    goto ldv_50922;
    default: 
#line 5507 
    ;
    
#line 5507 
    __VERIFIER_assume(0);
  }
  ldv_50922: 
#line 5508 
  ;
  
#line 5509 
  return;
}


#line 5513  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_45(void *arg0)
{
  void *__retres;
  struct file *ldv_45_resource_1;
  int ldv_45_ldv_param_2_3;
  long long ldv_45_ldv_param_1_2;
  char *ldv_45_ldv_param_1_4;
  unsigned long ldv_45_size_cnt;
  long long *ldv_45_ldv_param_3_5;
  struct inode *ldv_45_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 5522 
  struct file_operations *ldv_45_container = ldv_emg_alias_iwl_dbgfs_txfifo_flush_ops_2;
  
#line 5523 
  int ldv_45_ret = ldv_undef_int();
  
#line 5526 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 5530 
  ldv_45_ret = ldv_undef_int();
  
#line 5533 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 5534 
    ldv_45_container = data->arg0;
    
#line 5535 
    ldv_free((void *)data);
  }
  else ;
  
#line 5540 
  ldv_45_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 5541 
  tmp_1 = ldv_undef_int();
  
#line 5541 
  ldv_45_size_cnt = (unsigned long)tmp_1;
  
#line 5548 
  goto ldv_main_45;
  
#line 5550 
  __retres = (void *)0;
  
#line 5550 
  goto return_label;
  ldv_main_45: 
#line 5553 
  ;
  
#line 5556 
  tmp_3 = ldv_undef_int();
  
#line 5556 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 5559 
    ldv_45_ret = (*ldv_emg_alias_simple_open_5)(ldv_45_resource_0,ldv_45_resource_1);
    
#line 5561 
    ldv_45_ret = ldv_filter_err_code(ldv_45_ret);
    
#line 5564 
    tmp_2 = ldv_undef_int();
    
#line 5564 
    if (tmp_2 != 0) {
      
#line 5566 
      __VERIFIER_assume(ldv_45_ret == 0);
      
#line 5573 
      goto ldv_call_45;
    }
    else {
      
#line 5577 
      __VERIFIER_assume(ldv_45_ret != 0);
      
#line 5584 
      goto ldv_main_45;
    }
  }
  else {
    
#line 5589 
    ldv_free((void *)ldv_45_resource_0);
    
#line 5597 
    __retres = (void *)0;
    
#line 5597 
    goto return_label;
  }
  
#line 5600 
  __retres = (void *)0;
  
#line 5600 
  goto return_label;
  ldv_call_45: 
#line 5603 
  ;
  
#line 5606 
  tmp_4 = ldv_undef_int();
  
#line 5606 
  switch (tmp_4) {
    case 1: 
#line 5607 
    ;
    
#line 5613 
    (*ldv_emg_alias_generic_file_llseek_3)(ldv_45_resource_1,ldv_45_ldv_param_1_2,ldv_45_ldv_param_2_3);
    
#line 5623 
    goto ldv_call_45;
    case 2: 
#line 5626 
    ;
    
#line 5628 
    ldv_45_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 5629 
    ldv_45_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 5638 
    __VERIFIER_assume(ldv_45_size_cnt <= 2147479552UL);
    
#line 5640 
    ldv_emg_wrapper_iwl_dbgfs_txfifo_flush_write_3(ldv_45_resource_1,ldv_45_ldv_param_1_4,ldv_45_size_cnt,ldv_45_ldv_param_3_5);
    
#line 5644 
    ldv_free((void *)ldv_45_ldv_param_1_4);
    
#line 5645 
    ldv_free((void *)ldv_45_ldv_param_3_5);
    
#line 5652 
    goto ldv_call_45;
    case 3: 
#line 5655 
    ;
    
#line 5657 
    if (ldv_45_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 5659 
      (*(ldv_45_container->release))(ldv_45_resource_0,ldv_45_resource_1); else ;
    
#line 5667 
    goto ldv_main_45;
    default: 
#line 5670 
    ;
    
#line 5670 
    __VERIFIER_assume(0);
  }
  
#line 5673 
  __retres = (void *)0;
  return_label: 
#line 5673 
                return __retres;
}


#line 5678  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_36(void *arg0)
{
  void *__retres;
  struct file *ldv_36_resource_1;
  int ldv_36_ldv_param_2_3;
  long long ldv_36_ldv_param_1_2;
  char *ldv_36_ldv_param_1_4;
  struct inode *ldv_36_resource_0;
  unsigned long ldv_36_size_cnt;
  long long *ldv_36_ldv_param_3_5;
  char *ldv_36_ldv_param_1_6;
  long long *ldv_36_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 5689 
  struct file_operations *ldv_36_container = ldv_emg_alias_iwl_dbgfs_ucode_general_stats_ops_2;
  
#line 5690 
  int ldv_36_ret = ldv_undef_int();
  
#line 5693 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 5697 
  ldv_36_ret = ldv_undef_int();
  
#line 5700 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 5701 
    ldv_36_container = data->arg0;
    
#line 5702 
    ldv_free((void *)data);
  }
  else ;
  
#line 5707 
  ldv_36_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 5708 
  tmp_1 = ldv_undef_int();
  
#line 5708 
  ldv_36_size_cnt = (unsigned long)tmp_1;
  
#line 5715 
  goto ldv_main_36;
  
#line 5717 
  __retres = (void *)0;
  
#line 5717 
  goto return_label;
  ldv_main_36: 
#line 5720 
  ;
  
#line 5723 
  tmp_3 = ldv_undef_int();
  
#line 5723 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 5726 
    ldv_36_ret = (*ldv_emg_alias_simple_open_5)(ldv_36_resource_0,ldv_36_resource_1);
    
#line 5728 
    ldv_36_ret = ldv_filter_err_code(ldv_36_ret);
    
#line 5731 
    tmp_2 = ldv_undef_int();
    
#line 5731 
    if (tmp_2 != 0) {
      
#line 5733 
      __VERIFIER_assume(ldv_36_ret == 0);
      
#line 5740 
      goto ldv_call_36;
    }
    else {
      
#line 5744 
      __VERIFIER_assume(ldv_36_ret != 0);
      
#line 5751 
      goto ldv_main_36;
    }
  }
  else {
    
#line 5756 
    ldv_free((void *)ldv_36_resource_0);
    
#line 5764 
    __retres = (void *)0;
    
#line 5764 
    goto return_label;
  }
  
#line 5767 
  __retres = (void *)0;
  
#line 5767 
  goto return_label;
  ldv_call_36: 
#line 5770 
  ;
  
#line 5773 
  tmp_4 = ldv_undef_int();
  
#line 5773 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 5774 
    ;
    
#line 5776 
    ldv_36_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 5777 
    ldv_36_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 5781 
    if (ldv_36_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 5787 
      __VERIFIER_assume(ldv_36_size_cnt <= 2147479552UL);
      
#line 5789 
      (*(ldv_36_container->write))(ldv_36_resource_1,(char const *)ldv_36_ldv_param_1_6,ldv_36_size_cnt,ldv_36_ldv_param_3_7);
    }
    else ;
    
#line 5794 
    ldv_free((void *)ldv_36_ldv_param_3_7);
    
#line 5795 
    ldv_free((void *)ldv_36_ldv_param_1_6);
    
#line 5802 
    goto ldv_call_36;
    case 2: 
#line 5805 
    ;
    
#line 5807 
    if (ldv_36_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 5809 
      (*(ldv_36_container->release))(ldv_36_resource_0,ldv_36_resource_1); else ;
    
#line 5817 
    goto ldv_main_36;
    case 3: 
#line 5820 
    ;
    
#line 5824 
    tmp_9 = ldv_undef_int();
    
#line 5824 
    if (tmp_9 != 0) 
#line 5827 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_36_resource_1,ldv_36_ldv_param_1_2,ldv_36_ldv_param_2_3);
    else {
      
#line 5833 
      ldv_36_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 5834 
      ldv_36_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 5839 
      ldv_emg_wrapper_iwl_dbgfs_ucode_general_stats_read_3(ldv_36_resource_1,ldv_36_ldv_param_1_4,ldv_36_size_cnt,ldv_36_ldv_param_3_5);
      
#line 5843 
      ldv_free((void *)ldv_36_ldv_param_3_5);
      
#line 5844 
      ldv_free((void *)ldv_36_ldv_param_1_4);
    }
    
#line 5848 
    goto ldv_51000;
    default: 
#line 5850 
    ;
    
#line 5850 
    __VERIFIER_assume(0);
  }
  ldv_51000: 
#line 5859 
  ;
  
#line 5859 
  goto ldv_call_36;
  
#line 5861 
  __retres = (void *)0;
  return_label: 
#line 5861 
                return __retres;
}


#line 5866  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_18(void *arg0)
{
  void *__retres;
  struct file *ldv_18_resource_1;
  int ldv_18_ldv_param_2_3;
  long long ldv_18_ldv_param_1_2;
  char *ldv_18_ldv_param_1_4;
  struct inode *ldv_18_resource_0;
  unsigned long ldv_18_size_cnt;
  long long *ldv_18_ldv_param_3_5;
  char *ldv_18_ldv_param_1_6;
  long long *ldv_18_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 5877 
  struct file_operations *ldv_18_container = ldv_emg_alias_iwl_dbgfs_rxon_flags_ops_2;
  
#line 5878 
  int ldv_18_ret = ldv_undef_int();
  
#line 5881 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 5885 
  ldv_18_ret = ldv_undef_int();
  
#line 5888 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 5889 
    ldv_18_container = data->arg0;
    
#line 5890 
    ldv_free((void *)data);
  }
  else ;
  
#line 5895 
  ldv_18_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 5896 
  tmp_1 = ldv_undef_int();
  
#line 5896 
  ldv_18_size_cnt = (unsigned long)tmp_1;
  
#line 5903 
  goto ldv_main_18;
  
#line 5905 
  __retres = (void *)0;
  
#line 5905 
  goto return_label;
  ldv_main_18: 
#line 5908 
  ;
  
#line 5911 
  tmp_3 = ldv_undef_int();
  
#line 5911 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 5914 
    ldv_18_ret = (*ldv_emg_alias_simple_open_5)(ldv_18_resource_0,ldv_18_resource_1);
    
#line 5916 
    ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    
#line 5919 
    tmp_2 = ldv_undef_int();
    
#line 5919 
    if (tmp_2 != 0) {
      
#line 5921 
      __VERIFIER_assume(ldv_18_ret == 0);
      
#line 5928 
      goto ldv_call_18;
    }
    else {
      
#line 5932 
      __VERIFIER_assume(ldv_18_ret != 0);
      
#line 5939 
      goto ldv_main_18;
    }
  }
  else {
    
#line 5944 
    ldv_free((void *)ldv_18_resource_0);
    
#line 5952 
    __retres = (void *)0;
    
#line 5952 
    goto return_label;
  }
  
#line 5955 
  __retres = (void *)0;
  
#line 5955 
  goto return_label;
  ldv_call_18: 
#line 5958 
  ;
  
#line 5961 
  tmp_4 = ldv_undef_int();
  
#line 5961 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 5962 
    ;
    
#line 5964 
    ldv_18_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 5965 
    ldv_18_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 5969 
    if (ldv_18_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 5975 
      __VERIFIER_assume(ldv_18_size_cnt <= 2147479552UL);
      
#line 5977 
      (*(ldv_18_container->write))(ldv_18_resource_1,(char const *)ldv_18_ldv_param_1_6,ldv_18_size_cnt,ldv_18_ldv_param_3_7);
    }
    else ;
    
#line 5982 
    ldv_free((void *)ldv_18_ldv_param_1_6);
    
#line 5983 
    ldv_free((void *)ldv_18_ldv_param_3_7);
    
#line 5990 
    goto ldv_call_18;
    case 2: 
#line 5993 
    ;
    
#line 5995 
    if (ldv_18_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 5997 
      (*(ldv_18_container->release))(ldv_18_resource_0,ldv_18_resource_1); else ;
    
#line 6005 
    goto ldv_main_18;
    case 3: 
#line 6008 
    ;
    
#line 6012 
    tmp_9 = ldv_undef_int();
    
#line 6012 
    if (tmp_9 != 0) 
#line 6015 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_18_resource_1,ldv_18_ldv_param_1_2,ldv_18_ldv_param_2_3);
    else {
      
#line 6021 
      ldv_18_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 6022 
      ldv_18_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 6027 
      ldv_emg_wrapper_iwl_dbgfs_rxon_flags_read_3(ldv_18_resource_1,ldv_18_ldv_param_1_4,ldv_18_size_cnt,ldv_18_ldv_param_3_5);
      
#line 6031 
      ldv_free((void *)ldv_18_ldv_param_3_5);
      
#line 6032 
      ldv_free((void *)ldv_18_ldv_param_1_4);
    }
    
#line 6036 
    goto ldv_51022;
    default: 
#line 6038 
    ;
    
#line 6038 
    __VERIFIER_assume(0);
  }
  ldv_51022: 
#line 6047 
  ;
  
#line 6047 
  goto ldv_call_18;
  
#line 6049 
  __retres = (void *)0;
  return_label: 
#line 6049 
                return __retres;
}


#line 6054  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_13(void *arg0)
{
  void *__retres;
  struct file *ldv_13_resource_1;
  int ldv_13_ldv_param_2_3;
  long long ldv_13_ldv_param_1_2;
  char *ldv_13_ldv_param_1_4;
  struct inode *ldv_13_resource_0;
  unsigned long ldv_13_size_cnt;
  long long *ldv_13_ldv_param_3_5;
  char *ldv_13_ldv_param_1_6;
  long long *ldv_13_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 6065 
  struct file_operations *ldv_13_container = ldv_emg_alias_iwl_dbgfs_chain_noise_ops_2;
  
#line 6066 
  int ldv_13_ret = ldv_undef_int();
  
#line 6069 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 6073 
  ldv_13_ret = ldv_undef_int();
  
#line 6076 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 6077 
    ldv_13_container = data->arg0;
    
#line 6078 
    ldv_free((void *)data);
  }
  else ;
  
#line 6083 
  ldv_13_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 6084 
  tmp_1 = ldv_undef_int();
  
#line 6084 
  ldv_13_size_cnt = (unsigned long)tmp_1;
  
#line 6091 
  goto ldv_main_13;
  
#line 6093 
  __retres = (void *)0;
  
#line 6093 
  goto return_label;
  ldv_main_13: 
#line 6096 
  ;
  
#line 6099 
  tmp_3 = ldv_undef_int();
  
#line 6099 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 6102 
    ldv_13_ret = (*ldv_emg_alias_simple_open_5)(ldv_13_resource_0,ldv_13_resource_1);
    
#line 6104 
    ldv_13_ret = ldv_filter_err_code(ldv_13_ret);
    
#line 6107 
    tmp_2 = ldv_undef_int();
    
#line 6107 
    if (tmp_2 != 0) {
      
#line 6109 
      __VERIFIER_assume(ldv_13_ret == 0);
      
#line 6116 
      goto ldv_call_13;
    }
    else {
      
#line 6120 
      __VERIFIER_assume(ldv_13_ret != 0);
      
#line 6127 
      goto ldv_main_13;
    }
  }
  else {
    
#line 6132 
    ldv_free((void *)ldv_13_resource_0);
    
#line 6140 
    __retres = (void *)0;
    
#line 6140 
    goto return_label;
  }
  
#line 6143 
  __retres = (void *)0;
  
#line 6143 
  goto return_label;
  ldv_call_13: 
#line 6146 
  ;
  
#line 6149 
  tmp_4 = ldv_undef_int();
  
#line 6149 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 6150 
    ;
    
#line 6152 
    ldv_13_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 6153 
    ldv_13_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 6157 
    if (ldv_13_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 6163 
      __VERIFIER_assume(ldv_13_size_cnt <= 2147479552UL);
      
#line 6165 
      (*(ldv_13_container->write))(ldv_13_resource_1,(char const *)ldv_13_ldv_param_1_6,ldv_13_size_cnt,ldv_13_ldv_param_3_7);
    }
    else ;
    
#line 6170 
    ldv_free((void *)ldv_13_ldv_param_3_7);
    
#line 6171 
    ldv_free((void *)ldv_13_ldv_param_1_6);
    
#line 6178 
    goto ldv_call_13;
    case 2: 
#line 6181 
    ;
    
#line 6183 
    if (ldv_13_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 6185 
      (*(ldv_13_container->release))(ldv_13_resource_0,ldv_13_resource_1); else ;
    
#line 6193 
    goto ldv_main_13;
    case 3: 
#line 6196 
    ;
    
#line 6200 
    tmp_9 = ldv_undef_int();
    
#line 6200 
    if (tmp_9 != 0) 
#line 6203 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_13_resource_1,ldv_13_ldv_param_1_2,ldv_13_ldv_param_2_3);
    else {
      
#line 6209 
      ldv_13_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 6210 
      ldv_13_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 6215 
      ldv_emg_wrapper_iwl_dbgfs_chain_noise_read_3(ldv_13_resource_1,ldv_13_ldv_param_1_4,ldv_13_size_cnt,ldv_13_ldv_param_3_5);
      
#line 6219 
      ldv_free((void *)ldv_13_ldv_param_3_5);
      
#line 6220 
      ldv_free((void *)ldv_13_ldv_param_1_4);
    }
    
#line 6224 
    goto ldv_51044;
    default: 
#line 6226 
    ;
    
#line 6226 
    __VERIFIER_assume(0);
  }
  ldv_51044: 
#line 6235 
  ;
  
#line 6235 
  goto ldv_call_13;
  
#line 6237 
  __retres = (void *)0;
  return_label: 
#line 6237 
                return __retres;
}


#line 6242  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_32(void *arg0)
{
  void *__retres;
  struct file *ldv_32_resource_1;
  int ldv_32_ldv_param_2_3;
  long long ldv_32_ldv_param_1_2;
  char *ldv_32_ldv_param_1_4;
  struct inode *ldv_32_resource_0;
  unsigned long ldv_32_size_cnt;
  long long *ldv_32_ldv_param_3_5;
  char *ldv_32_ldv_param_1_6;
  long long *ldv_32_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 6253 
  struct file_operations *ldv_32_container = ldv_emg_alias_iwl_dbgfs_thermal_throttling_ops_2;
  
#line 6254 
  int ldv_32_ret = ldv_undef_int();
  
#line 6257 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 6261 
  ldv_32_ret = ldv_undef_int();
  
#line 6264 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 6265 
    ldv_32_container = data->arg0;
    
#line 6266 
    ldv_free((void *)data);
  }
  else ;
  
#line 6271 
  ldv_32_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 6272 
  tmp_1 = ldv_undef_int();
  
#line 6272 
  ldv_32_size_cnt = (unsigned long)tmp_1;
  
#line 6279 
  goto ldv_main_32;
  
#line 6281 
  __retres = (void *)0;
  
#line 6281 
  goto return_label;
  ldv_main_32: 
#line 6284 
  ;
  
#line 6287 
  tmp_3 = ldv_undef_int();
  
#line 6287 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 6290 
    ldv_32_ret = (*ldv_emg_alias_simple_open_5)(ldv_32_resource_0,ldv_32_resource_1);
    
#line 6292 
    ldv_32_ret = ldv_filter_err_code(ldv_32_ret);
    
#line 6295 
    tmp_2 = ldv_undef_int();
    
#line 6295 
    if (tmp_2 != 0) {
      
#line 6297 
      __VERIFIER_assume(ldv_32_ret == 0);
      
#line 6304 
      goto ldv_call_32;
    }
    else {
      
#line 6308 
      __VERIFIER_assume(ldv_32_ret != 0);
      
#line 6315 
      goto ldv_main_32;
    }
  }
  else {
    
#line 6320 
    ldv_free((void *)ldv_32_resource_0);
    
#line 6328 
    __retres = (void *)0;
    
#line 6328 
    goto return_label;
  }
  
#line 6331 
  __retres = (void *)0;
  
#line 6331 
  goto return_label;
  ldv_call_32: 
#line 6334 
  ;
  
#line 6337 
  tmp_4 = ldv_undef_int();
  
#line 6337 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 6338 
    ;
    
#line 6340 
    ldv_32_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 6341 
    ldv_32_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 6345 
    if (ldv_32_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 6351 
      __VERIFIER_assume(ldv_32_size_cnt <= 2147479552UL);
      
#line 6353 
      (*(ldv_32_container->write))(ldv_32_resource_1,(char const *)ldv_32_ldv_param_1_6,ldv_32_size_cnt,ldv_32_ldv_param_3_7);
    }
    else ;
    
#line 6358 
    ldv_free((void *)ldv_32_ldv_param_1_6);
    
#line 6359 
    ldv_free((void *)ldv_32_ldv_param_3_7);
    
#line 6366 
    goto ldv_call_32;
    case 2: 
#line 6369 
    ;
    
#line 6371 
    if (ldv_32_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 6373 
      (*(ldv_32_container->release))(ldv_32_resource_0,ldv_32_resource_1); else ;
    
#line 6381 
    goto ldv_main_32;
    case 3: 
#line 6384 
    ;
    
#line 6388 
    tmp_9 = ldv_undef_int();
    
#line 6388 
    if (tmp_9 != 0) 
#line 6391 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_32_resource_1,ldv_32_ldv_param_1_2,ldv_32_ldv_param_2_3);
    else {
      
#line 6397 
      ldv_32_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 6398 
      ldv_32_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 6403 
      ldv_emg_wrapper_iwl_dbgfs_thermal_throttling_read_3(ldv_32_resource_1,ldv_32_ldv_param_1_4,ldv_32_size_cnt,ldv_32_ldv_param_3_5);
      
#line 6407 
      ldv_free((void *)ldv_32_ldv_param_3_5);
      
#line 6408 
      ldv_free((void *)ldv_32_ldv_param_1_4);
    }
    
#line 6412 
    goto ldv_51066;
    default: 
#line 6414 
    ;
    
#line 6414 
    __VERIFIER_assume(0);
  }
  ldv_51066: 
#line 6423 
  ;
  
#line 6423 
  goto ldv_call_32;
  
#line 6425 
  __retres = (void *)0;
  return_label: 
#line 6425 
                return __retres;
}


#line 6430  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_28(void *arg0)
{
  void *__retres;
  struct file *ldv_28_resource_1;
  int ldv_28_ldv_param_2_3;
  long long ldv_28_ldv_param_1_2;
  char *ldv_28_ldv_param_1_4;
  struct inode *ldv_28_resource_0;
  unsigned long ldv_28_size_cnt;
  long long *ldv_28_ldv_param_3_5;
  char *ldv_28_ldv_param_1_6;
  long long *ldv_28_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 6441 
  struct file_operations *ldv_28_container = ldv_emg_alias_iwl_dbgfs_nvm_ops_2;
  
#line 6442 
  int ldv_28_ret = ldv_undef_int();
  
#line 6445 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 6449 
  ldv_28_ret = ldv_undef_int();
  
#line 6452 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 6453 
    ldv_28_container = data->arg0;
    
#line 6454 
    ldv_free((void *)data);
  }
  else ;
  
#line 6459 
  ldv_28_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 6460 
  tmp_1 = ldv_undef_int();
  
#line 6460 
  ldv_28_size_cnt = (unsigned long)tmp_1;
  
#line 6467 
  goto ldv_main_28;
  
#line 6469 
  __retres = (void *)0;
  
#line 6469 
  goto return_label;
  ldv_main_28: 
#line 6472 
  ;
  
#line 6475 
  tmp_3 = ldv_undef_int();
  
#line 6475 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 6478 
    ldv_28_ret = (*ldv_emg_alias_simple_open_5)(ldv_28_resource_0,ldv_28_resource_1);
    
#line 6480 
    ldv_28_ret = ldv_filter_err_code(ldv_28_ret);
    
#line 6483 
    tmp_2 = ldv_undef_int();
    
#line 6483 
    if (tmp_2 != 0) {
      
#line 6485 
      __VERIFIER_assume(ldv_28_ret == 0);
      
#line 6492 
      goto ldv_call_28;
    }
    else {
      
#line 6496 
      __VERIFIER_assume(ldv_28_ret != 0);
      
#line 6503 
      goto ldv_main_28;
    }
  }
  else {
    
#line 6508 
    ldv_free((void *)ldv_28_resource_0);
    
#line 6516 
    __retres = (void *)0;
    
#line 6516 
    goto return_label;
  }
  
#line 6519 
  __retres = (void *)0;
  
#line 6519 
  goto return_label;
  ldv_call_28: 
#line 6522 
  ;
  
#line 6525 
  tmp_4 = ldv_undef_int();
  
#line 6525 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 6526 
    ;
    
#line 6528 
    ldv_28_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 6529 
    ldv_28_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 6533 
    if (ldv_28_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 6539 
      __VERIFIER_assume(ldv_28_size_cnt <= 2147479552UL);
      
#line 6541 
      (*(ldv_28_container->write))(ldv_28_resource_1,(char const *)ldv_28_ldv_param_1_6,ldv_28_size_cnt,ldv_28_ldv_param_3_7);
    }
    else ;
    
#line 6546 
    ldv_free((void *)ldv_28_ldv_param_1_6);
    
#line 6547 
    ldv_free((void *)ldv_28_ldv_param_3_7);
    
#line 6554 
    goto ldv_call_28;
    case 2: 
#line 6557 
    ;
    
#line 6559 
    if (ldv_28_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 6561 
      (*(ldv_28_container->release))(ldv_28_resource_0,ldv_28_resource_1); else ;
    
#line 6569 
    goto ldv_main_28;
    case 3: 
#line 6572 
    ;
    
#line 6576 
    tmp_9 = ldv_undef_int();
    
#line 6576 
    if (tmp_9 != 0) 
#line 6579 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_28_resource_1,ldv_28_ldv_param_1_2,ldv_28_ldv_param_2_3);
    else {
      
#line 6585 
      ldv_28_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 6586 
      ldv_28_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 6591 
      ldv_emg_wrapper_iwl_dbgfs_nvm_read_3(ldv_28_resource_1,ldv_28_ldv_param_1_4,ldv_28_size_cnt,ldv_28_ldv_param_3_5);
      
#line 6595 
      ldv_free((void *)ldv_28_ldv_param_1_4);
      
#line 6596 
      ldv_free((void *)ldv_28_ldv_param_3_5);
    }
    
#line 6600 
    goto ldv_51088;
    default: 
#line 6602 
    ;
    
#line 6602 
    __VERIFIER_assume(0);
  }
  ldv_51088: 
#line 6611 
  ;
  
#line 6611 
  goto ldv_call_28;
  
#line 6613 
  __retres = (void *)0;
  return_label: 
#line 6613 
                return __retres;
}


#line 6618  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_4_1(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_10;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_11;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_12;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_13;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_14;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_15;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_16;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_17;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_18;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_19;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_20;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_21;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_22;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_23;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_24;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_26;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_27;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_28;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_29;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_31;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_32;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_33;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_34;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_35;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_36;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_37;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_38;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_39;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_40;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_41;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_42;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_43;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_44;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_45;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_46;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_47;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_48;
  struct ldv_struct_character_driver_scenario_10 *cf_arg_49;
  int tmp;
  
#line 6658 
  tmp = ldv_undef_int();
  
#line 6658 
  switch (tmp) {
    case 0: 
#line 6659 
    ;
    
#line 6660 
    ret = pthread_join(ldv_thread_10,(void **)0);
    
#line 6661 
    __VERIFIER_assume(ret == 0);
    
#line 6662 
    goto ldv_51133;
    case 1: 
#line 6664 
    ;
    
#line 6665 
    ret = pthread_join(ldv_thread_11,(void **)0);
    
#line 6666 
    __VERIFIER_assume(ret == 0);
    
#line 6667 
    goto ldv_51133;
    case 2: 
#line 6669 
    ;
    
#line 6670 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 6671 
    __VERIFIER_assume(ret == 0);
    
#line 6672 
    goto ldv_51133;
    case 3: 
#line 6674 
    ;
    
#line 6675 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 6676 
    __VERIFIER_assume(ret == 0);
    
#line 6677 
    goto ldv_51133;
    case 4: 
#line 6679 
    ;
    
#line 6680 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 6681 
    __VERIFIER_assume(ret == 0);
    
#line 6682 
    goto ldv_51133;
    case 5: 
#line 6684 
    ;
    
#line 6685 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 6686 
    __VERIFIER_assume(ret == 0);
    
#line 6687 
    goto ldv_51133;
    case 6: 
#line 6689 
    ;
    
#line 6690 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 6691 
    __VERIFIER_assume(ret == 0);
    
#line 6692 
    goto ldv_51133;
    case 7: 
#line 6694 
    ;
    
#line 6695 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 6696 
    __VERIFIER_assume(ret == 0);
    
#line 6697 
    goto ldv_51133;
    case 8: 
#line 6699 
    ;
    
#line 6700 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 6701 
    __VERIFIER_assume(ret == 0);
    
#line 6702 
    goto ldv_51133;
    case 9: 
#line 6704 
    ;
    
#line 6705 
    ret = pthread_join(ldv_thread_19,(void **)0);
    
#line 6706 
    __VERIFIER_assume(ret == 0);
    
#line 6707 
    goto ldv_51133;
    case 10: 
#line 6709 
    ;
    
#line 6710 
    ret = pthread_join(ldv_thread_20,(void **)0);
    
#line 6711 
    __VERIFIER_assume(ret == 0);
    
#line 6712 
    goto ldv_51133;
    case 11: 
#line 6714 
    ;
    
#line 6715 
    ret = pthread_join(ldv_thread_21,(void **)0);
    
#line 6716 
    __VERIFIER_assume(ret == 0);
    
#line 6717 
    goto ldv_51133;
    case 12: 
#line 6719 
    ;
    
#line 6720 
    ret = pthread_join(ldv_thread_22,(void **)0);
    
#line 6721 
    __VERIFIER_assume(ret == 0);
    
#line 6722 
    goto ldv_51133;
    case 13: 
#line 6724 
    ;
    
#line 6725 
    ret = pthread_join(ldv_thread_23,(void **)0);
    
#line 6726 
    __VERIFIER_assume(ret == 0);
    
#line 6727 
    goto ldv_51133;
    case 14: 
#line 6729 
    ;
    
#line 6730 
    ret = pthread_join(ldv_thread_24,(void **)0);
    
#line 6731 
    __VERIFIER_assume(ret == 0);
    
#line 6732 
    goto ldv_51133;
    case 15: 
#line 6734 
    ;
    
#line 6735 
    ret = pthread_join(ldv_thread_26,(void **)0);
    
#line 6736 
    __VERIFIER_assume(ret == 0);
    
#line 6737 
    goto ldv_51133;
    case 16: 
#line 6739 
    ;
    
#line 6740 
    ret = pthread_join(ldv_thread_27,(void **)0);
    
#line 6741 
    __VERIFIER_assume(ret == 0);
    
#line 6742 
    goto ldv_51133;
    case 17: 
#line 6744 
    ;
    
#line 6745 
    ret = pthread_join(ldv_thread_28,(void **)0);
    
#line 6746 
    __VERIFIER_assume(ret == 0);
    
#line 6747 
    goto ldv_51133;
    case 18: 
#line 6749 
    ;
    
#line 6750 
    ret = pthread_join(ldv_thread_29,(void **)0);
    
#line 6751 
    __VERIFIER_assume(ret == 0);
    
#line 6752 
    goto ldv_51133;
    case 19: 
#line 6754 
    ;
    
#line 6755 
    ret = pthread_join(ldv_thread_31,(void **)0);
    
#line 6756 
    __VERIFIER_assume(ret == 0);
    
#line 6757 
    goto ldv_51133;
    case 20: 
#line 6759 
    ;
    
#line 6760 
    ret = pthread_join(ldv_thread_32,(void **)0);
    
#line 6761 
    __VERIFIER_assume(ret == 0);
    
#line 6762 
    goto ldv_51133;
    case 21: 
#line 6764 
    ;
    
#line 6765 
    ret = pthread_join(ldv_thread_33,(void **)0);
    
#line 6766 
    __VERIFIER_assume(ret == 0);
    
#line 6767 
    goto ldv_51133;
    case 22: 
#line 6769 
    ;
    
#line 6770 
    ret = pthread_join(ldv_thread_34,(void **)0);
    
#line 6771 
    __VERIFIER_assume(ret == 0);
    
#line 6772 
    goto ldv_51133;
    case 23: 
#line 6774 
    ;
    
#line 6775 
    ret = pthread_join(ldv_thread_35,(void **)0);
    
#line 6776 
    __VERIFIER_assume(ret == 0);
    
#line 6777 
    goto ldv_51133;
    case 24: 
#line 6779 
    ;
    
#line 6780 
    ret = pthread_join(ldv_thread_36,(void **)0);
    
#line 6781 
    __VERIFIER_assume(ret == 0);
    
#line 6782 
    goto ldv_51133;
    case 25: 
#line 6784 
    ;
    
#line 6785 
    ret = pthread_join(ldv_thread_37,(void **)0);
    
#line 6786 
    __VERIFIER_assume(ret == 0);
    
#line 6787 
    goto ldv_51133;
    case 26: 
#line 6789 
    ;
    
#line 6790 
    ret = pthread_join(ldv_thread_38,(void **)0);
    
#line 6791 
    __VERIFIER_assume(ret == 0);
    
#line 6792 
    goto ldv_51133;
    case 27: 
#line 6794 
    ;
    
#line 6795 
    ret = pthread_join(ldv_thread_39,(void **)0);
    
#line 6796 
    __VERIFIER_assume(ret == 0);
    
#line 6797 
    goto ldv_51133;
    case 28: 
#line 6799 
    ;
    
#line 6800 
    ret = pthread_join(ldv_thread_40,(void **)0);
    
#line 6801 
    __VERIFIER_assume(ret == 0);
    
#line 6802 
    goto ldv_51133;
    case 29: 
#line 6804 
    ;
    
#line 6805 
    ret = pthread_join(ldv_thread_41,(void **)0);
    
#line 6806 
    __VERIFIER_assume(ret == 0);
    
#line 6807 
    goto ldv_51133;
    case 30: 
#line 6809 
    ;
    
#line 6810 
    ret = pthread_join(ldv_thread_42,(void **)0);
    
#line 6811 
    __VERIFIER_assume(ret == 0);
    
#line 6812 
    goto ldv_51133;
    case 31: 
#line 6814 
    ;
    
#line 6815 
    ret = pthread_join(ldv_thread_43,(void **)0);
    
#line 6816 
    __VERIFIER_assume(ret == 0);
    
#line 6817 
    goto ldv_51133;
    case 32: 
#line 6819 
    ;
    
#line 6820 
    ret = pthread_join(ldv_thread_44,(void **)0);
    
#line 6821 
    __VERIFIER_assume(ret == 0);
    
#line 6822 
    goto ldv_51133;
    case 33: 
#line 6824 
    ;
    
#line 6825 
    ret = pthread_join(ldv_thread_45,(void **)0);
    
#line 6826 
    __VERIFIER_assume(ret == 0);
    
#line 6827 
    goto ldv_51133;
    case 34: 
#line 6829 
    ;
    
#line 6830 
    ret = pthread_join(ldv_thread_46,(void **)0);
    
#line 6831 
    __VERIFIER_assume(ret == 0);
    
#line 6832 
    goto ldv_51133;
    case 35: 
#line 6834 
    ;
    
#line 6835 
    ret = pthread_join(ldv_thread_47,(void **)0);
    
#line 6836 
    __VERIFIER_assume(ret == 0);
    
#line 6837 
    goto ldv_51133;
    case 36: 
#line 6839 
    ;
    
#line 6840 
    ret = pthread_join(ldv_thread_48,(void **)0);
    
#line 6841 
    __VERIFIER_assume(ret == 0);
    
#line 6842 
    goto ldv_51133;
    case 37: 
#line 6844 
    ;
    
#line 6845 
    ret = pthread_join(ldv_thread_49,(void **)0);
    
#line 6846 
    __VERIFIER_assume(ret == 0);
    
#line 6847 
    goto ldv_51133;
    default: 
#line 6849 
    ;
    
#line 6849 
    __VERIFIER_assume(0);
  }
  ldv_51133: 
#line 6850 
  ;
  
#line 6851 
  return;
}


#line 6855  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_24(void *arg0)
{
  void *__retres;
  struct file *ldv_24_resource_1;
  int ldv_24_ldv_param_2_3;
  long long ldv_24_ldv_param_1_2;
  char *ldv_24_ldv_param_1_4;
  struct inode *ldv_24_resource_0;
  unsigned long ldv_24_size_cnt;
  long long *ldv_24_ldv_param_3_5;
  char *ldv_24_ldv_param_1_6;
  long long *ldv_24_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 6866 
  struct file_operations *ldv_24_container = ldv_emg_alias_iwl_dbgfs_channels_ops_2;
  
#line 6867 
  int ldv_24_ret = ldv_undef_int();
  
#line 6870 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 6874 
  ldv_24_ret = ldv_undef_int();
  
#line 6877 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 6878 
    ldv_24_container = data->arg0;
    
#line 6879 
    ldv_free((void *)data);
  }
  else ;
  
#line 6884 
  ldv_24_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 6885 
  tmp_1 = ldv_undef_int();
  
#line 6885 
  ldv_24_size_cnt = (unsigned long)tmp_1;
  
#line 6892 
  goto ldv_main_24;
  
#line 6894 
  __retres = (void *)0;
  
#line 6894 
  goto return_label;
  ldv_main_24: 
#line 6897 
  ;
  
#line 6900 
  tmp_3 = ldv_undef_int();
  
#line 6900 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 6903 
    ldv_24_ret = (*ldv_emg_alias_simple_open_5)(ldv_24_resource_0,ldv_24_resource_1);
    
#line 6905 
    ldv_24_ret = ldv_filter_err_code(ldv_24_ret);
    
#line 6908 
    tmp_2 = ldv_undef_int();
    
#line 6908 
    if (tmp_2 != 0) {
      
#line 6910 
      __VERIFIER_assume(ldv_24_ret == 0);
      
#line 6917 
      goto ldv_call_24;
    }
    else {
      
#line 6921 
      __VERIFIER_assume(ldv_24_ret != 0);
      
#line 6928 
      goto ldv_main_24;
    }
  }
  else {
    
#line 6933 
    ldv_free((void *)ldv_24_resource_0);
    
#line 6941 
    __retres = (void *)0;
    
#line 6941 
    goto return_label;
  }
  
#line 6944 
  __retres = (void *)0;
  
#line 6944 
  goto return_label;
  ldv_call_24: 
#line 6947 
  ;
  
#line 6950 
  tmp_4 = ldv_undef_int();
  
#line 6950 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 6951 
    ;
    
#line 6953 
    ldv_24_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 6954 
    ldv_24_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 6958 
    if (ldv_24_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 6964 
      __VERIFIER_assume(ldv_24_size_cnt <= 2147479552UL);
      
#line 6966 
      (*(ldv_24_container->write))(ldv_24_resource_1,(char const *)ldv_24_ldv_param_1_6,ldv_24_size_cnt,ldv_24_ldv_param_3_7);
    }
    else ;
    
#line 6971 
    ldv_free((void *)ldv_24_ldv_param_3_7);
    
#line 6972 
    ldv_free((void *)ldv_24_ldv_param_1_6);
    
#line 6979 
    goto ldv_call_24;
    case 2: 
#line 6982 
    ;
    
#line 6984 
    if (ldv_24_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 6986 
      (*(ldv_24_container->release))(ldv_24_resource_0,ldv_24_resource_1); else ;
    
#line 6994 
    goto ldv_main_24;
    case 3: 
#line 6997 
    ;
    
#line 7001 
    tmp_9 = ldv_undef_int();
    
#line 7001 
    if (tmp_9 != 0) 
#line 7004 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_24_resource_1,ldv_24_ldv_param_1_2,ldv_24_ldv_param_2_3);
    else {
      
#line 7010 
      ldv_24_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 7011 
      ldv_24_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 7016 
      ldv_emg_wrapper_iwl_dbgfs_channels_read_3(ldv_24_resource_1,ldv_24_ldv_param_1_4,ldv_24_size_cnt,ldv_24_ldv_param_3_5);
      
#line 7020 
      ldv_free((void *)ldv_24_ldv_param_1_4);
      
#line 7021 
      ldv_free((void *)ldv_24_ldv_param_3_5);
    }
    
#line 7025 
    goto ldv_51192;
    default: 
#line 7027 
    ;
    
#line 7027 
    __VERIFIER_assume(0);
  }
  ldv_51192: 
#line 7036 
  ;
  
#line 7036 
  goto ldv_call_24;
  
#line 7038 
  __retres = (void *)0;
  return_label: 
#line 7038 
                return __retres;
}


#line 7043  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_26(void *arg0)
{
  void *__retres;
  struct file *ldv_26_resource_1;
  int ldv_26_ldv_param_2_3;
  long long ldv_26_ldv_param_1_2;
  char *ldv_26_ldv_param_1_4;
  struct inode *ldv_26_resource_0;
  unsigned long ldv_26_size_cnt;
  long long *ldv_26_ldv_param_3_5;
  char *ldv_26_ldv_param_1_6;
  long long *ldv_26_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 7054 
  struct file_operations *ldv_26_container = ldv_emg_alias_iwl_dbgfs_disable_ht40_ops_2;
  
#line 7055 
  int ldv_26_ret = ldv_undef_int();
  
#line 7058 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 7062 
  ldv_26_ret = ldv_undef_int();
  
#line 7065 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 7066 
    ldv_26_container = data->arg0;
    
#line 7067 
    ldv_free((void *)data);
  }
  else ;
  
#line 7072 
  ldv_26_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 7073 
  tmp_1 = ldv_undef_int();
  
#line 7073 
  ldv_26_size_cnt = (unsigned long)tmp_1;
  
#line 7080 
  goto ldv_main_26;
  
#line 7082 
  __retres = (void *)0;
  
#line 7082 
  goto return_label;
  ldv_main_26: 
#line 7085 
  ;
  
#line 7088 
  tmp_3 = ldv_undef_int();
  
#line 7088 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 7091 
    ldv_26_ret = (*ldv_emg_alias_simple_open_5)(ldv_26_resource_0,ldv_26_resource_1);
    
#line 7093 
    ldv_26_ret = ldv_filter_err_code(ldv_26_ret);
    
#line 7096 
    tmp_2 = ldv_undef_int();
    
#line 7096 
    if (tmp_2 != 0) {
      
#line 7098 
      __VERIFIER_assume(ldv_26_ret == 0);
      
#line 7105 
      goto ldv_call_26;
    }
    else {
      
#line 7109 
      __VERIFIER_assume(ldv_26_ret != 0);
      
#line 7116 
      goto ldv_main_26;
    }
  }
  else {
    
#line 7121 
    ldv_free((void *)ldv_26_resource_0);
    
#line 7129 
    __retres = (void *)0;
    
#line 7129 
    goto return_label;
  }
  
#line 7132 
  __retres = (void *)0;
  
#line 7132 
  goto return_label;
  ldv_call_26: 
#line 7135 
  ;
  
#line 7138 
  tmp_4 = ldv_undef_int();
  
#line 7138 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 7139 
    ;
    
#line 7141 
    ldv_26_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 7142 
    ldv_26_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 7151 
    __VERIFIER_assume(ldv_26_size_cnt <= 2147479552UL);
    
#line 7153 
    ldv_emg_wrapper_iwl_dbgfs_disable_ht40_write_4(ldv_26_resource_1,ldv_26_ldv_param_1_6,ldv_26_size_cnt,ldv_26_ldv_param_3_7);
    
#line 7157 
    ldv_free((void *)ldv_26_ldv_param_3_7);
    
#line 7158 
    ldv_free((void *)ldv_26_ldv_param_1_6);
    
#line 7165 
    goto ldv_call_26;
    case 2: 
#line 7168 
    ;
    
#line 7170 
    if (ldv_26_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 7172 
      (*(ldv_26_container->release))(ldv_26_resource_0,ldv_26_resource_1); else ;
    
#line 7180 
    goto ldv_main_26;
    case 3: 
#line 7183 
    ;
    
#line 7187 
    tmp_9 = ldv_undef_int();
    
#line 7187 
    if (tmp_9 != 0) 
#line 7190 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_26_resource_1,ldv_26_ldv_param_1_2,ldv_26_ldv_param_2_3);
    else {
      
#line 7196 
      ldv_26_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 7197 
      ldv_26_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 7202 
      ldv_emg_wrapper_iwl_dbgfs_disable_ht40_read_3(ldv_26_resource_1,ldv_26_ldv_param_1_4,ldv_26_size_cnt,ldv_26_ldv_param_3_5);
      
#line 7206 
      ldv_free((void *)ldv_26_ldv_param_3_5);
      
#line 7207 
      ldv_free((void *)ldv_26_ldv_param_1_4);
    }
    
#line 7211 
    goto ldv_51214;
    default: 
#line 7213 
    ;
    
#line 7213 
    __VERIFIER_assume(0);
  }
  ldv_51214: 
#line 7222 
  ;
  
#line 7222 
  goto ldv_call_26;
  
#line 7224 
  __retres = (void *)0;
  return_label: 
#line 7224 
                return __retres;
}


#line 7229  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_27(void *arg0)
{
  void *__retres;
  struct file *ldv_27_resource_1;
  int ldv_27_ldv_param_2_3;
  long long ldv_27_ldv_param_1_2;
  char *ldv_27_ldv_param_1_4;
  unsigned long ldv_27_size_cnt;
  long long *ldv_27_ldv_param_3_5;
  struct inode *ldv_27_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 7238 
  struct file_operations *ldv_27_container = ldv_emg_alias_iwl_dbgfs_echo_test_ops_2;
  
#line 7239 
  int ldv_27_ret = ldv_undef_int();
  
#line 7242 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 7246 
  ldv_27_ret = ldv_undef_int();
  
#line 7249 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 7250 
    ldv_27_container = data->arg0;
    
#line 7251 
    ldv_free((void *)data);
  }
  else ;
  
#line 7256 
  ldv_27_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 7257 
  tmp_1 = ldv_undef_int();
  
#line 7257 
  ldv_27_size_cnt = (unsigned long)tmp_1;
  
#line 7264 
  goto ldv_main_27;
  
#line 7266 
  __retres = (void *)0;
  
#line 7266 
  goto return_label;
  ldv_main_27: 
#line 7269 
  ;
  
#line 7272 
  tmp_3 = ldv_undef_int();
  
#line 7272 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 7275 
    ldv_27_ret = (*ldv_emg_alias_simple_open_5)(ldv_27_resource_0,ldv_27_resource_1);
    
#line 7277 
    ldv_27_ret = ldv_filter_err_code(ldv_27_ret);
    
#line 7280 
    tmp_2 = ldv_undef_int();
    
#line 7280 
    if (tmp_2 != 0) {
      
#line 7282 
      __VERIFIER_assume(ldv_27_ret == 0);
      
#line 7289 
      goto ldv_call_27;
    }
    else {
      
#line 7293 
      __VERIFIER_assume(ldv_27_ret != 0);
      
#line 7300 
      goto ldv_main_27;
    }
  }
  else {
    
#line 7305 
    ldv_free((void *)ldv_27_resource_0);
    
#line 7313 
    __retres = (void *)0;
    
#line 7313 
    goto return_label;
  }
  
#line 7316 
  __retres = (void *)0;
  
#line 7316 
  goto return_label;
  ldv_call_27: 
#line 7319 
  ;
  
#line 7322 
  tmp_4 = ldv_undef_int();
  
#line 7322 
  switch (tmp_4) {
    case 1: 
#line 7323 
    ;
    
#line 7329 
    (*ldv_emg_alias_generic_file_llseek_3)(ldv_27_resource_1,ldv_27_ldv_param_1_2,ldv_27_ldv_param_2_3);
    
#line 7339 
    goto ldv_call_27;
    case 2: 
#line 7342 
    ;
    
#line 7344 
    ldv_27_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 7345 
    ldv_27_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 7354 
    __VERIFIER_assume(ldv_27_size_cnt <= 2147479552UL);
    
#line 7356 
    ldv_emg_wrapper_iwl_dbgfs_echo_test_write_3(ldv_27_resource_1,ldv_27_ldv_param_1_4,ldv_27_size_cnt,ldv_27_ldv_param_3_5);
    
#line 7360 
    ldv_free((void *)ldv_27_ldv_param_1_4);
    
#line 7361 
    ldv_free((void *)ldv_27_ldv_param_3_5);
    
#line 7368 
    goto ldv_call_27;
    case 3: 
#line 7371 
    ;
    
#line 7373 
    if (ldv_27_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 7375 
      (*(ldv_27_container->release))(ldv_27_resource_0,ldv_27_resource_1); else ;
    
#line 7383 
    goto ldv_main_27;
    default: 
#line 7386 
    ;
    
#line 7386 
    __VERIFIER_assume(0);
  }
  
#line 7389 
  __retres = (void *)0;
  return_label: 
#line 7389 
                return __retres;
}


#line 7394  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_33(void *arg0)
{
  void *__retres;
  struct file *ldv_33_resource_1;
  int ldv_33_ldv_param_2_3;
  long long ldv_33_ldv_param_1_2;
  char *ldv_33_ldv_param_1_4;
  struct inode *ldv_33_resource_0;
  unsigned long ldv_33_size_cnt;
  long long *ldv_33_ldv_param_3_5;
  char *ldv_33_ldv_param_1_6;
  long long *ldv_33_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 7405 
  struct file_operations *ldv_33_container = ldv_emg_alias_iwl_dbgfs_power_save_status_ops_2;
  
#line 7406 
  int ldv_33_ret = ldv_undef_int();
  
#line 7409 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 7413 
  ldv_33_ret = ldv_undef_int();
  
#line 7416 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 7417 
    ldv_33_container = data->arg0;
    
#line 7418 
    ldv_free((void *)data);
  }
  else ;
  
#line 7423 
  ldv_33_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 7424 
  tmp_1 = ldv_undef_int();
  
#line 7424 
  ldv_33_size_cnt = (unsigned long)tmp_1;
  
#line 7431 
  goto ldv_main_33;
  
#line 7433 
  __retres = (void *)0;
  
#line 7433 
  goto return_label;
  ldv_main_33: 
#line 7436 
  ;
  
#line 7439 
  tmp_3 = ldv_undef_int();
  
#line 7439 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 7442 
    ldv_33_ret = (*ldv_emg_alias_simple_open_5)(ldv_33_resource_0,ldv_33_resource_1);
    
#line 7444 
    ldv_33_ret = ldv_filter_err_code(ldv_33_ret);
    
#line 7447 
    tmp_2 = ldv_undef_int();
    
#line 7447 
    if (tmp_2 != 0) {
      
#line 7449 
      __VERIFIER_assume(ldv_33_ret == 0);
      
#line 7456 
      goto ldv_call_33;
    }
    else {
      
#line 7460 
      __VERIFIER_assume(ldv_33_ret != 0);
      
#line 7467 
      goto ldv_main_33;
    }
  }
  else {
    
#line 7472 
    ldv_free((void *)ldv_33_resource_0);
    
#line 7480 
    __retres = (void *)0;
    
#line 7480 
    goto return_label;
  }
  
#line 7483 
  __retres = (void *)0;
  
#line 7483 
  goto return_label;
  ldv_call_33: 
#line 7486 
  ;
  
#line 7489 
  tmp_4 = ldv_undef_int();
  
#line 7489 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 7490 
    ;
    
#line 7492 
    ldv_33_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 7493 
    ldv_33_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 7497 
    if (ldv_33_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 7503 
      __VERIFIER_assume(ldv_33_size_cnt <= 2147479552UL);
      
#line 7505 
      (*(ldv_33_container->write))(ldv_33_resource_1,(char const *)ldv_33_ldv_param_1_6,ldv_33_size_cnt,ldv_33_ldv_param_3_7);
    }
    else ;
    
#line 7510 
    ldv_free((void *)ldv_33_ldv_param_1_6);
    
#line 7511 
    ldv_free((void *)ldv_33_ldv_param_3_7);
    
#line 7518 
    goto ldv_call_33;
    case 2: 
#line 7521 
    ;
    
#line 7523 
    if (ldv_33_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 7525 
      (*(ldv_33_container->release))(ldv_33_resource_0,ldv_33_resource_1); else ;
    
#line 7533 
    goto ldv_main_33;
    case 3: 
#line 7536 
    ;
    
#line 7540 
    tmp_9 = ldv_undef_int();
    
#line 7540 
    if (tmp_9 != 0) 
#line 7543 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_33_resource_1,ldv_33_ldv_param_1_2,ldv_33_ldv_param_2_3);
    else {
      
#line 7549 
      ldv_33_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 7550 
      ldv_33_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 7555 
      ldv_emg_wrapper_iwl_dbgfs_power_save_status_read_3(ldv_33_resource_1,ldv_33_ldv_param_1_4,ldv_33_size_cnt,ldv_33_ldv_param_3_5);
      
#line 7559 
      ldv_free((void *)ldv_33_ldv_param_3_5);
      
#line 7560 
      ldv_free((void *)ldv_33_ldv_param_1_4);
    }
    
#line 7564 
    goto ldv_51255;
    default: 
#line 7566 
    ;
    
#line 7566 
    __VERIFIER_assume(0);
  }
  ldv_51255: 
#line 7575 
  ;
  
#line 7575 
  goto ldv_call_33;
  
#line 7577 
  __retres = (void *)0;
  return_label: 
#line 7577 
                return __retres;
}


#line 7582  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_5_3(struct ieee80211_hw *arg0)
{
  int ret;
  struct ldv_struct_ieee80211_scenario_30 *cf_arg_30;
  int tmp;
  
#line 7585 
  tmp = ldv_undef_int();
  
#line 7585 
  switch (tmp) {
    case 0: 
#line 7586 
    ;
    
#line 7587 
    cf_arg_30 = (struct ldv_struct_ieee80211_scenario_30 *)ldv_xmalloc(16UL);
    
#line 7588 
    cf_arg_30->arg0 = arg0;
    
#line 7589 
    ret = pthread_create(& ldv_thread_30,(pthread_attr_t const *)0,& ldv_ieee80211_scenario_30,(void *)cf_arg_30);
    
#line 7590 
    __VERIFIER_assume(ret == 0);
    
#line 7591 
    goto ldv_51263;
    default: 
#line 7593 
    ;
    
#line 7593 
    __VERIFIER_assume(0);
  }
  ldv_51263: 
#line 7594 
  ;
  
#line 7595 
  return;
}


#line 7599  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2)
{
  _Bool __retres;
  struct work_struct *ldv_3_ldv_param_0_2;
  struct delayed_work *ldv_3_delayed_work;
  int tmp_0;
  
#line 7607 
  tmp_0 = ldv_undef_int();
  
#line 7607 
  if (tmp_0 != 0) {
    
#line 7609 
    ldv_3_delayed_work = arg1;
    
#line 7613 
    ldv_3_ldv_param_0_2 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    
#line 7617 
    if (ldv_3_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      
#line 7619 
      (*(ldv_3_delayed_work->work.func))(ldv_3_ldv_param_0_2); else ;
    
#line 7624 
    ldv_free((void *)ldv_3_ldv_param_0_2);
    
#line 7628 
    __retres = (_Bool)1;
    
#line 7628 
    goto return_label;
  }
  else {
    
#line 7635 
    __retres = (_Bool)0;
    
#line 7635 
    goto return_label;
  }
  return_label: 
#line 7607 
                return __retres;
}


#line 7645  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_31(void *arg0)
{
  void *__retres;
  struct file *ldv_31_resource_1;
  int ldv_31_ldv_param_2_3;
  long long ldv_31_ldv_param_1_2;
  char *ldv_31_ldv_param_1_4;
  struct inode *ldv_31_resource_0;
  unsigned long ldv_31_size_cnt;
  long long *ldv_31_ldv_param_3_5;
  char *ldv_31_ldv_param_1_6;
  long long *ldv_31_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 7656 
  struct file_operations *ldv_31_container = ldv_emg_alias_iwl_dbgfs_protection_mode_ops_2;
  
#line 7657 
  int ldv_31_ret = ldv_undef_int();
  
#line 7660 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 7664 
  ldv_31_ret = ldv_undef_int();
  
#line 7667 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 7668 
    ldv_31_container = data->arg0;
    
#line 7669 
    ldv_free((void *)data);
  }
  else ;
  
#line 7674 
  ldv_31_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 7675 
  tmp_1 = ldv_undef_int();
  
#line 7675 
  ldv_31_size_cnt = (unsigned long)tmp_1;
  
#line 7682 
  goto ldv_main_31;
  
#line 7684 
  __retres = (void *)0;
  
#line 7684 
  goto return_label;
  ldv_main_31: 
#line 7687 
  ;
  
#line 7690 
  tmp_3 = ldv_undef_int();
  
#line 7690 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 7693 
    ldv_31_ret = (*ldv_emg_alias_simple_open_5)(ldv_31_resource_0,ldv_31_resource_1);
    
#line 7695 
    ldv_31_ret = ldv_filter_err_code(ldv_31_ret);
    
#line 7698 
    tmp_2 = ldv_undef_int();
    
#line 7698 
    if (tmp_2 != 0) {
      
#line 7700 
      __VERIFIER_assume(ldv_31_ret == 0);
      
#line 7707 
      goto ldv_call_31;
    }
    else {
      
#line 7711 
      __VERIFIER_assume(ldv_31_ret != 0);
      
#line 7718 
      goto ldv_main_31;
    }
  }
  else {
    
#line 7723 
    ldv_free((void *)ldv_31_resource_0);
    
#line 7731 
    __retres = (void *)0;
    
#line 7731 
    goto return_label;
  }
  
#line 7734 
  __retres = (void *)0;
  
#line 7734 
  goto return_label;
  ldv_call_31: 
#line 7737 
  ;
  
#line 7740 
  tmp_4 = ldv_undef_int();
  
#line 7740 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 7741 
    ;
    
#line 7743 
    ldv_31_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 7744 
    ldv_31_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 7753 
    __VERIFIER_assume(ldv_31_size_cnt <= 2147479552UL);
    
#line 7755 
    ldv_emg_wrapper_iwl_dbgfs_protection_mode_write_4(ldv_31_resource_1,ldv_31_ldv_param_1_6,ldv_31_size_cnt,ldv_31_ldv_param_3_7);
    
#line 7759 
    ldv_free((void *)ldv_31_ldv_param_1_6);
    
#line 7760 
    ldv_free((void *)ldv_31_ldv_param_3_7);
    
#line 7767 
    goto ldv_call_31;
    case 2: 
#line 7770 
    ;
    
#line 7772 
    if (ldv_31_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 7774 
      (*(ldv_31_container->release))(ldv_31_resource_0,ldv_31_resource_1); else ;
    
#line 7782 
    goto ldv_main_31;
    case 3: 
#line 7785 
    ;
    
#line 7789 
    tmp_9 = ldv_undef_int();
    
#line 7789 
    if (tmp_9 != 0) 
#line 7792 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_31_resource_1,ldv_31_ldv_param_1_2,ldv_31_ldv_param_2_3);
    else {
      
#line 7798 
      ldv_31_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 7799 
      ldv_31_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 7804 
      ldv_emg_wrapper_iwl_dbgfs_protection_mode_read_3(ldv_31_resource_1,ldv_31_ldv_param_1_4,ldv_31_size_cnt,ldv_31_ldv_param_3_5);
      
#line 7808 
      ldv_free((void *)ldv_31_ldv_param_1_4);
      
#line 7809 
      ldv_free((void *)ldv_31_ldv_param_3_5);
    }
    
#line 7813 
    goto ldv_51292;
    default: 
#line 7815 
    ;
    
#line 7815 
    __VERIFIER_assume(0);
  }
  ldv_51292: 
#line 7824 
  ;
  
#line 7824 
  goto ldv_call_31;
  
#line 7826 
  __retres = (void *)0;
  return_label: 
#line 7826 
                return __retres;
}


#line 7831  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_ieee80211_scenario_30(void *arg0)
{
  void *__retres;
  unsigned short *ldv_30_ldv_param_5_40;
  struct ieee80211_vif *ldv_30_ldv_param_1_10;
  struct ieee80211_sta *ldv_30_ldv_param_2_28;
  enum ieee80211_sta_state *ldv_30_ldv_param_3_29;
  enum ieee80211_ampdu_mlme_action *ldv_30_ldv_param_2_43;
  struct cfg80211_wowlan *ldv_30_ldv_param_1_55;
  struct ieee80211_vif *ldv_30_ldv_param_1_48;
  enum ieee80211_sta_state *ldv_30_ldv_param_4_30;
  unsigned short ldv_30_ldv_param_4_45;
  struct ieee80211_tx_queue_params *ldv_30_ldv_param_3_17;
  unsigned int *ldv_30_ldv_param_2_21;
  struct ieee80211_key_conf *ldv_30_ldv_param_4_26;
  enum sta_notify_cmd *ldv_30_ldv_param_2_3;
  enum nl80211_iftype *ldv_30_ldv_param_2_53;
  struct ieee80211_event *ldv_30_ldv_param_2_51;
  struct sk_buff *ldv_30_ldv_param_2_19;
  struct ieee80211_vif *ldv_30_ldv_param_1_33;
  struct ieee80211_sta *ldv_30_ldv_param_3_44;
  struct ieee80211_hw *ldv_30_resource;
  struct ieee80211_vif *ldv_30_ldv_param_1_32;
  struct ieee80211_vif *ldv_30_ldv_param_1_36;
  unsigned short *ldv_30_ldv_param_5_46;
  unsigned short ldv_30_ldv_param_2_16;
  struct ieee80211_sta *ldv_30_ldv_param_3_25;
  struct ieee80211_vif *ldv_30_ldv_param_1_52;
  struct ieee80211_vif *ldv_30_ldv_param_1_13;
  struct ieee80211_vif *ldv_30_ldv_param_1_15;
  struct cfg80211_gtk_rekey_data *ldv_30_ldv_param_2_49;
  _Bool ldv_30_ldv_param_3_12;
  struct ieee80211_vif *ldv_30_ldv_param_2_24;
  struct ieee80211_vif *ldv_30_ldv_param_1_8;
  struct ieee80211_vif *ldv_30_ldv_param_1_42;
  struct ieee80211_vif *ldv_30_ldv_param_1_2;
  struct ieee80211_sta *ldv_30_ldv_param_1_5;
  unsigned long long ldv_30_ldv_param_3_22;
  unsigned int ldv_30_ldv_param_2_11;
  struct ieee80211_sta *ldv_30_ldv_param_3_38;
  struct ieee80211_key_conf *ldv_30_ldv_param_2_37;
  struct ieee80211_vif *ldv_30_ldv_param_1_27;
  enum set_key_cmd *ldv_30_ldv_param_1_23;
  struct ieee80211_tx_control *ldv_30_ldv_param_1_18;
  unsigned int ldv_30_ldv_param_1_20;
  _Bool ldv_30_ldv_param_1_41;
  struct ieee80211_vif *ldv_30_ldv_param_1_7;
  unsigned int ldv_30_ldv_param_1_31;
  struct ieee80211_bss_conf *ldv_30_ldv_param_2_34;
  unsigned int ldv_30_ldv_param_3_35;
  struct ieee80211_sta *ldv_30_ldv_param_3_4;
  unsigned char ldv_30_ldv_param_6_47;
  _Bool ldv_30_ldv_param_3_54;
  struct ieee80211_channel_switch *ldv_30_ldv_param_2_14;
  _Bool ldv_30_ldv_param_2_6;
  struct ieee80211_scan_request *ldv_30_ldv_param_2_9;
  unsigned int ldv_30_ldv_param_4_39;
  struct ieee80211_vif *ldv_30_ldv_param_1_50;
  int tmp_1;
  int tmp_2;
  
#line 7888 
  int ldv_30_ret = ldv_undef_int();
  
#line 7891 
  struct ldv_struct_ieee80211_scenario_30 *data = (struct ldv_struct_ieee80211_scenario_30 *)arg0;
  
#line 7895 
  ldv_30_ret = ldv_undef_int();
  
#line 7898 
  if (data != (struct ldv_struct_ieee80211_scenario_30 *)0) {
    
#line 7899 
    ldv_30_resource = data->arg0;
    
#line 7900 
    ldv_free((void *)data);
  }
  else ;
  
#line 7908 
  goto ldv_main_30;
  
#line 7910 
  __retres = (void *)0;
  
#line 7910 
  goto return_label;
  ldv_main_30: 
#line 7913 
  ;
  
#line 7916 
  tmp_1 = ldv_undef_int();
  
#line 7916 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 7919 
    rtnl_lock();
    
#line 7921 
    ldv_30_ret = ldv_emg_wrapper_iwlagn_mac_start_2(ldv_30_resource);
    
#line 7923 
    ldv_30_ret = ldv_filter_err_code(ldv_30_ret);
    
#line 7924 
    rtnl_unlock();
    
#line 7927 
    tmp_0 = ldv_undef_int();
    
#line 7927 
    if (tmp_0 != 0) {
      
#line 7929 
      __VERIFIER_assume(ldv_30_ret == 0);
      
#line 7936 
      goto ldv_started_30;
    }
    else {
      
#line 7940 
      __VERIFIER_assume(ldv_30_ret != 0);
      
#line 7947 
      goto ldv_main_30;
    }
  }
  else {
    
#line 7956 
    __retres = (void *)0;
    
#line 7956 
    goto return_label;
  }
  
#line 7959 
  __retres = (void *)0;
  
#line 7959 
  goto return_label;
  ldv_started_30: 
#line 7962 
  ;
  
#line 7965 
  tmp_2 = ldv_undef_int();
  
#line 7965 
  switch (tmp_2) {
    int tmp_7;
    case 1: 
#line 7966 
    ;
    
#line 7968 
    ldv_30_ldv_param_1_55 = (struct cfg80211_wowlan *)ldv_xmalloc_unknown_size(0UL);
    
#line 7973 
    ldv_emg_wrapper_iwlagn_mac_suspend_22(ldv_30_resource,ldv_30_ldv_param_1_55);
    
#line 7977 
    ldv_free((void *)ldv_30_ldv_param_1_55);
    
#line 7982 
    ldv_emg_wrapper_iwlagn_mac_resume_23(ldv_30_resource);
    
#line 7989 
    goto ldv_started_30;
    case 2: 
#line 7992 
    ;
    
#line 7995 
    rtnl_lock();
    
#line 7997 
    ldv_emg_wrapper_iwlagn_mac_stop_24(ldv_30_resource);
    
#line 7999 
    rtnl_unlock();
    
#line 8006 
    goto ldv_main_30;
    case 3: 
#line 8009 
    ;
    
#line 8011 
    ldv_30_ldv_param_2_3 = (enum sta_notify_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 8012 
    ldv_30_ldv_param_1_2 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    
#line 8013 
    ldv_30_ldv_param_3_4 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    
#line 8016 
    tmp_7 = ldv_undef_int();
    
#line 8016 
    switch (tmp_7) {
      case 1: 
#line 8017 
      ;
      
#line 8020 
      ldv_emg_wrapper_iwlagn_mac_sta_notify_3(ldv_30_resource,ldv_30_ldv_param_1_2,*ldv_30_ldv_param_2_3,ldv_30_ldv_param_3_4);
      
#line 8023 
      goto ldv_51360;
      case 2: 
#line 8025 
      ;
      
#line 8027 
      ldv_30_ldv_param_1_52 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8028 
      ldv_30_ldv_param_2_53 = (enum nl80211_iftype *)ldv_xmalloc_unknown_size(0UL);
      
#line 8033 
      ldv_emg_wrapper_iwlagn_mac_change_interface_14(ldv_30_resource,ldv_30_ldv_param_1_52,*ldv_30_ldv_param_2_53,(_Bool)((_Bool)((int)ldv_30_ldv_param_3_54) != 0));
      
#line 8037 
      ldv_free((void *)ldv_30_ldv_param_1_52);
      
#line 8038 
      ldv_free((void *)ldv_30_ldv_param_2_53);
      
#line 8041 
      goto ldv_51360;
      case 3: 
#line 8043 
      ;
      
#line 8045 
      ldv_30_ldv_param_1_50 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8046 
      ldv_30_ldv_param_2_51 = (struct ieee80211_event *)ldv_xmalloc_unknown_size(0UL);
      
#line 8051 
      ldv_emg_wrapper_iwlagn_mac_event_callback_20(ldv_30_resource,ldv_30_ldv_param_1_50,ldv_30_ldv_param_2_51);
      
#line 8055 
      ldv_free((void *)ldv_30_ldv_param_1_50);
      
#line 8056 
      ldv_free((void *)ldv_30_ldv_param_2_51);
      
#line 8059 
      goto ldv_51360;
      case 4: 
#line 8061 
      ;
      
#line 8063 
      ldv_30_ldv_param_2_49 = (struct cfg80211_gtk_rekey_data *)ldv_xmalloc_unknown_size(0UL);
      
#line 8064 
      ldv_30_ldv_param_1_48 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8069 
      ldv_emg_wrapper_iwlagn_mac_set_rekey_data_21(ldv_30_resource,ldv_30_ldv_param_1_48,ldv_30_ldv_param_2_49);
      
#line 8073 
      ldv_free((void *)ldv_30_ldv_param_2_49);
      
#line 8074 
      ldv_free((void *)ldv_30_ldv_param_1_48);
      
#line 8077 
      goto ldv_51360;
      case 5: 
#line 8079 
      ;
      
#line 8081 
      ldv_30_ldv_param_5_46 = (unsigned short *)ldv_xmalloc_unknown_size(0UL);
      
#line 8082 
      ldv_30_ldv_param_1_42 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8083 
      ldv_30_ldv_param_3_44 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 8084 
      ldv_30_ldv_param_2_43 = (enum ieee80211_ampdu_mlme_action *)ldv_xmalloc_unknown_size(0UL);
      
#line 8089 
      ldv_emg_wrapper_iwlagn_mac_ampdu_action_19(ldv_30_resource,ldv_30_ldv_param_1_42,*ldv_30_ldv_param_2_43,ldv_30_ldv_param_3_44,(unsigned short)((int)ldv_30_ldv_param_4_45),ldv_30_ldv_param_5_46,(unsigned char)((int)ldv_30_ldv_param_6_47));
      
#line 8093 
      ldv_free((void *)ldv_30_ldv_param_5_46);
      
#line 8094 
      ldv_free((void *)ldv_30_ldv_param_1_42);
      
#line 8095 
      ldv_free((void *)ldv_30_ldv_param_3_44);
      
#line 8096 
      ldv_free((void *)ldv_30_ldv_param_2_43);
      
#line 8099 
      goto ldv_51360;
      case 6: 
#line 8101 
      ;
      
#line 8107 
      ldv_emg_wrapper_iwlagn_mac_set_wakeup_16(ldv_30_resource,(_Bool)((_Bool)((int)ldv_30_ldv_param_1_41) != 0));
      
#line 8113 
      goto ldv_51360;
      case 7: 
#line 8115 
      ;
      
#line 8117 
      ldv_30_ldv_param_5_40 = (unsigned short *)ldv_xmalloc_unknown_size(0UL);
      
#line 8118 
      ldv_30_ldv_param_3_38 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 8119 
      ldv_30_ldv_param_2_37 = (struct ieee80211_key_conf *)ldv_xmalloc_unknown_size(0UL);
      
#line 8120 
      ldv_30_ldv_param_1_36 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8125 
      ldv_emg_wrapper_iwlagn_mac_update_tkip_key_15(ldv_30_resource,ldv_30_ldv_param_1_36,ldv_30_ldv_param_2_37,ldv_30_ldv_param_3_38,ldv_30_ldv_param_4_39,ldv_30_ldv_param_5_40);
      
#line 8129 
      ldv_free((void *)ldv_30_ldv_param_5_40);
      
#line 8130 
      ldv_free((void *)ldv_30_ldv_param_3_38);
      
#line 8131 
      ldv_free((void *)ldv_30_ldv_param_2_37);
      
#line 8132 
      ldv_free((void *)ldv_30_ldv_param_1_36);
      
#line 8135 
      goto ldv_51360;
      case 8: 
#line 8137 
      ;
      
#line 8139 
      ldv_30_ldv_param_1_33 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8140 
      ldv_30_ldv_param_2_34 = (struct ieee80211_bss_conf *)ldv_xmalloc_unknown_size(0UL);
      
#line 8145 
      iwlagn_bss_info_changed(ldv_30_resource,ldv_30_ldv_param_1_33,ldv_30_ldv_param_2_34,ldv_30_ldv_param_3_35);
      
#line 8149 
      ldv_free((void *)ldv_30_ldv_param_1_33);
      
#line 8150 
      ldv_free((void *)ldv_30_ldv_param_2_34);
      
#line 8153 
      goto ldv_51360;
      case 9: 
#line 8155 
      ;
      
#line 8157 
      ldv_30_ldv_param_1_32 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8162 
      ldv_emg_wrapper_iwlagn_mac_remove_interface_8(ldv_30_resource,ldv_30_ldv_param_1_32);
      
#line 8166 
      ldv_free((void *)ldv_30_ldv_param_1_32);
      
#line 8169 
      goto ldv_51360;
      case 10: 
#line 8171 
      ;
      
#line 8177 
      iwlagn_mac_config(ldv_30_resource,ldv_30_ldv_param_1_31);
      
#line 8183 
      goto ldv_51360;
      case 11: 
#line 8185 
      ;
      
#line 8187 
      ldv_30_ldv_param_1_27 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8188 
      ldv_30_ldv_param_3_29 = (enum ieee80211_sta_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 8189 
      ldv_30_ldv_param_2_28 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 8190 
      ldv_30_ldv_param_4_30 = (enum ieee80211_sta_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 8195 
      ldv_emg_wrapper_iwlagn_mac_sta_state_13(ldv_30_resource,ldv_30_ldv_param_1_27,ldv_30_ldv_param_2_28,*ldv_30_ldv_param_3_29,*ldv_30_ldv_param_4_30);
      
#line 8199 
      ldv_free((void *)ldv_30_ldv_param_1_27);
      
#line 8200 
      ldv_free((void *)ldv_30_ldv_param_3_29);
      
#line 8201 
      ldv_free((void *)ldv_30_ldv_param_2_28);
      
#line 8202 
      ldv_free((void *)ldv_30_ldv_param_4_30);
      
#line 8205 
      goto ldv_51360;
      case 12: 
#line 8207 
      ;
      
#line 8209 
      ldv_30_ldv_param_1_23 = (enum set_key_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 8210 
      ldv_30_ldv_param_4_26 = (struct ieee80211_key_conf *)ldv_xmalloc_unknown_size(0UL);
      
#line 8211 
      ldv_30_ldv_param_2_24 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8212 
      ldv_30_ldv_param_3_25 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 8217 
      ldv_emg_wrapper_iwlagn_mac_set_key_7(ldv_30_resource,*ldv_30_ldv_param_1_23,ldv_30_ldv_param_2_24,ldv_30_ldv_param_3_25,ldv_30_ldv_param_4_26);
      
#line 8221 
      ldv_free((void *)ldv_30_ldv_param_1_23);
      
#line 8222 
      ldv_free((void *)ldv_30_ldv_param_4_26);
      
#line 8223 
      ldv_free((void *)ldv_30_ldv_param_2_24);
      
#line 8224 
      ldv_free((void *)ldv_30_ldv_param_3_25);
      
#line 8227 
      goto ldv_51360;
      case 13: 
#line 8229 
      ;
      
#line 8231 
      ldv_30_ldv_param_2_21 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 8236 
      ldv_emg_wrapper_iwlagn_configure_filter_11(ldv_30_resource,ldv_30_ldv_param_1_20,ldv_30_ldv_param_2_21,ldv_30_ldv_param_3_22);
      
#line 8240 
      ldv_free((void *)ldv_30_ldv_param_2_21);
      
#line 8243 
      goto ldv_51360;
      case 14: 
#line 8245 
      ;
      
#line 8247 
      ldv_30_ldv_param_1_18 = (struct ieee80211_tx_control *)ldv_xmalloc_unknown_size(0UL);
      
#line 8248 
      ldv_30_ldv_param_2_19 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 8253 
      ldv_emg_wrapper_iwlagn_mac_tx_10(ldv_30_resource,ldv_30_ldv_param_1_18,ldv_30_ldv_param_2_19);
      
#line 8257 
      ldv_free((void *)ldv_30_ldv_param_1_18);
      
#line 8258 
      ldv_free((void *)ldv_30_ldv_param_2_19);
      
#line 8261 
      goto ldv_51360;
      case 15: 
#line 8263 
      ;
      
#line 8265 
      ldv_30_ldv_param_3_17 = (struct ieee80211_tx_queue_params *)ldv_xmalloc_unknown_size(0UL);
      
#line 8266 
      ldv_30_ldv_param_1_15 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8271 
      ldv_emg_wrapper_iwlagn_mac_conf_tx_9(ldv_30_resource,ldv_30_ldv_param_1_15,(unsigned short)((int)ldv_30_ldv_param_2_16),ldv_30_ldv_param_3_17);
      
#line 8275 
      ldv_free((void *)ldv_30_ldv_param_3_17);
      
#line 8276 
      ldv_free((void *)ldv_30_ldv_param_1_15);
      
#line 8279 
      goto ldv_51360;
      case 16: 
#line 8281 
      ;
      
#line 8283 
      ldv_30_ldv_param_1_13 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8284 
      ldv_30_ldv_param_2_14 = (struct ieee80211_channel_switch *)ldv_xmalloc_unknown_size(0UL);
      
#line 8289 
      ldv_emg_wrapper_iwlagn_mac_channel_switch_18(ldv_30_resource,ldv_30_ldv_param_1_13,ldv_30_ldv_param_2_14);
      
#line 8293 
      ldv_free((void *)ldv_30_ldv_param_1_13);
      
#line 8294 
      ldv_free((void *)ldv_30_ldv_param_2_14);
      
#line 8297 
      goto ldv_51360;
      case 17: 
#line 8299 
      ;
      
#line 8301 
      ldv_30_ldv_param_1_10 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8306 
      ldv_emg_wrapper_iwlagn_mac_flush_17(ldv_30_resource,ldv_30_ldv_param_1_10,ldv_30_ldv_param_2_11,(_Bool)((_Bool)((int)ldv_30_ldv_param_3_12) != 0));
      
#line 8310 
      ldv_free((void *)ldv_30_ldv_param_1_10);
      
#line 8313 
      goto ldv_51360;
      case 18: 
#line 8315 
      ;
      
#line 8317 
      ldv_30_ldv_param_2_9 = (struct ieee80211_scan_request *)ldv_xmalloc_unknown_size(0UL);
      
#line 8318 
      ldv_30_ldv_param_1_8 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8323 
      ldv_emg_wrapper_iwlagn_mac_hw_scan_12(ldv_30_resource,ldv_30_ldv_param_1_8,ldv_30_ldv_param_2_9);
      
#line 8327 
      ldv_free((void *)ldv_30_ldv_param_2_9);
      
#line 8328 
      ldv_free((void *)ldv_30_ldv_param_1_8);
      
#line 8331 
      goto ldv_51360;
      case 19: 
#line 8333 
      ;
      
#line 8336 
      ldv_emg_wrapper_iwlagn_mac_tx_last_beacon_6(ldv_30_resource);
      
#line 8339 
      goto ldv_51360;
      case 20: 
#line 8341 
      ;
      
#line 8343 
      ldv_30_ldv_param_1_7 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 8348 
      ldv_emg_wrapper_iwlagn_mac_add_interface_5(ldv_30_resource,ldv_30_ldv_param_1_7);
      
#line 8352 
      ldv_free((void *)ldv_30_ldv_param_1_7);
      
#line 8355 
      goto ldv_51360;
      case 21: 
#line 8357 
      ;
      
#line 8359 
      ldv_30_ldv_param_1_5 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 8364 
      ldv_emg_wrapper_iwlagn_mac_set_tim_4(ldv_30_resource,ldv_30_ldv_param_1_5,(_Bool)((_Bool)((int)ldv_30_ldv_param_2_6) != 0));
      
#line 8368 
      ldv_free((void *)ldv_30_ldv_param_1_5);
      
#line 8371 
      goto ldv_51360;
      default: 
#line 8373 
      ;
      
#line 8373 
      __VERIFIER_assume(0);
    }
    ldv_51360: 
#line 8375 
    ;
    
#line 8375 
    goto ldv_51382;
    default: 
#line 8377 
    ;
    
#line 8377 
    __VERIFIER_assume(0);
  }
  ldv_51382: 
#line 8380 
  ;
  
#line 8380 
  ldv_free((void *)ldv_30_ldv_param_2_3);
  
#line 8381 
  ldv_free((void *)ldv_30_ldv_param_1_2);
  
#line 8382 
  ldv_free((void *)ldv_30_ldv_param_3_4);
  
#line 8389 
  goto ldv_started_30;
  
#line 8391 
  __retres = (void *)0;
  return_label: 
#line 8391 
                return __retres;
}


#line 8396  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_44(void *arg0)
{
  void *__retres;
  struct file *ldv_44_resource_1;
  int ldv_44_ldv_param_2_3;
  long long ldv_44_ldv_param_1_2;
  char *ldv_44_ldv_param_1_4;
  struct inode *ldv_44_resource_0;
  unsigned long ldv_44_size_cnt;
  long long *ldv_44_ldv_param_3_5;
  char *ldv_44_ldv_param_1_6;
  long long *ldv_44_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 8407 
  struct file_operations *ldv_44_container = ldv_emg_alias_iwl_dbgfs_missed_beacon_ops_2;
  
#line 8408 
  int ldv_44_ret = ldv_undef_int();
  
#line 8411 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 8415 
  ldv_44_ret = ldv_undef_int();
  
#line 8418 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 8419 
    ldv_44_container = data->arg0;
    
#line 8420 
    ldv_free((void *)data);
  }
  else ;
  
#line 8425 
  ldv_44_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 8426 
  tmp_1 = ldv_undef_int();
  
#line 8426 
  ldv_44_size_cnt = (unsigned long)tmp_1;
  
#line 8433 
  goto ldv_main_44;
  
#line 8435 
  __retres = (void *)0;
  
#line 8435 
  goto return_label;
  ldv_main_44: 
#line 8438 
  ;
  
#line 8441 
  tmp_3 = ldv_undef_int();
  
#line 8441 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 8444 
    ldv_44_ret = (*ldv_emg_alias_simple_open_5)(ldv_44_resource_0,ldv_44_resource_1);
    
#line 8446 
    ldv_44_ret = ldv_filter_err_code(ldv_44_ret);
    
#line 8449 
    tmp_2 = ldv_undef_int();
    
#line 8449 
    if (tmp_2 != 0) {
      
#line 8451 
      __VERIFIER_assume(ldv_44_ret == 0);
      
#line 8458 
      goto ldv_call_44;
    }
    else {
      
#line 8462 
      __VERIFIER_assume(ldv_44_ret != 0);
      
#line 8469 
      goto ldv_main_44;
    }
  }
  else {
    
#line 8474 
    ldv_free((void *)ldv_44_resource_0);
    
#line 8482 
    __retres = (void *)0;
    
#line 8482 
    goto return_label;
  }
  
#line 8485 
  __retres = (void *)0;
  
#line 8485 
  goto return_label;
  ldv_call_44: 
#line 8488 
  ;
  
#line 8491 
  tmp_4 = ldv_undef_int();
  
#line 8491 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 8492 
    ;
    
#line 8494 
    ldv_44_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 8495 
    ldv_44_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 8504 
    __VERIFIER_assume(ldv_44_size_cnt <= 2147479552UL);
    
#line 8506 
    ldv_emg_wrapper_iwl_dbgfs_missed_beacon_write_4(ldv_44_resource_1,ldv_44_ldv_param_1_6,ldv_44_size_cnt,ldv_44_ldv_param_3_7);
    
#line 8510 
    ldv_free((void *)ldv_44_ldv_param_3_7);
    
#line 8511 
    ldv_free((void *)ldv_44_ldv_param_1_6);
    
#line 8518 
    goto ldv_call_44;
    case 2: 
#line 8521 
    ;
    
#line 8523 
    if (ldv_44_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 8525 
      (*(ldv_44_container->release))(ldv_44_resource_0,ldv_44_resource_1); else ;
    
#line 8533 
    goto ldv_main_44;
    case 3: 
#line 8536 
    ;
    
#line 8540 
    tmp_9 = ldv_undef_int();
    
#line 8540 
    if (tmp_9 != 0) 
#line 8543 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_44_resource_1,ldv_44_ldv_param_1_2,ldv_44_ldv_param_2_3);
    else {
      
#line 8549 
      ldv_44_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 8550 
      ldv_44_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 8555 
      ldv_emg_wrapper_iwl_dbgfs_missed_beacon_read_3(ldv_44_resource_1,ldv_44_ldv_param_1_4,ldv_44_size_cnt,ldv_44_ldv_param_3_5);
      
#line 8559 
      ldv_free((void *)ldv_44_ldv_param_3_5);
      
#line 8560 
      ldv_free((void *)ldv_44_ldv_param_1_4);
    }
    
#line 8564 
    goto ldv_51404;
    default: 
#line 8566 
    ;
    
#line 8566 
    __VERIFIER_assume(0);
  }
  ldv_51404: 
#line 8575 
  ;
  
#line 8575 
  goto ldv_call_44;
  
#line 8577 
  __retres = (void *)0;
  return_label: 
#line 8577 
                return __retres;
}


#line 8582  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_2_timer_list;
  int tmp_0;
  
#line 8589 
  tmp_0 = ldv_undef_int();
  
#line 8589 
  if (tmp_0 != 0) {
    
#line 8591 
    ldv_2_timer_list = arg0;
    
#line 8595 
    ldv_dispatch_instance_register_2_3(ldv_2_timer_list);
    
#line 8599 
    __retres = 0;
    
#line 8599 
    goto return_label;
  }
  else {
    int tmp;
    
#line 8606 
    tmp = ldv_undef_int_negative();
    
#line 8606 
    __retres = tmp;
    
#line 8606 
    goto return_label;
  }
  return_label: 
#line 8589 
                return __retres;
}


#line 8616  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/iwlwifi/dvm/iwldvm.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_46(void *arg0)
{
  void *__retres;
  struct file *ldv_46_resource_1;
  int ldv_46_ldv_param_2_3;
  long long ldv_46_ldv_param_1_2;
  char *ldv_46_ldv_param_1_4;
  struct inode *ldv_46_resource_0;
  unsigned long ldv_46_size_cnt;
  long long *ldv_46_ldv_param_3_5;
  char *ldv_46_ldv_param_1_6;
  long long *ldv_46_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 8627 
  struct file_operations *ldv_46_container = ldv_emg_alias_iwl_dbgfs_sensitivity_ops_2;
  
#line 8628 
  int ldv_46_ret = ldv_undef_int();
  
#line 8631 
  struct ldv_struct_character_driver_scenario_10 *data = (struct ldv_struct_character_driver_scenario_10 *)arg0;
  
#line 8635 
  ldv_46_ret = ldv_undef_int();
  
#line 8638 
  if (data != (struct ldv_struct_character_driver_scenario_10 *)0) {
    
#line 8639 
    ldv_46_container = data->arg0;
    
#line 8640 
    ldv_free((void *)data);
  }
  else ;
  
#line 8645 
  ldv_46_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 8646 
  tmp_1 = ldv_undef_int();
  
#line 8646 
  ldv_46_size_cnt = (unsigned long)tmp_1;
  
#line 8653 
  goto ldv_main_46;
  
#line 8655 
  __retres = (void *)0;
  
#line 8655 
  goto return_label;
  ldv_main_46: 
#line 8658 
  ;
  
#line 8661 
  tmp_3 = ldv_undef_int();
  
#line 8661 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 8664 
    ldv_46_ret = (*ldv_emg_alias_simple_open_5)(ldv_46_resource_0,ldv_46_resource_1);
    
#line 8666 
    ldv_46_ret = ldv_filter_err_code(ldv_46_ret);
    
#line 8669 
    tmp_2 = ldv_undef_int();
    
#line 8669 
    if (tmp_2 != 0) {
      
#line 8671 
      __VERIFIER_assume(ldv_46_ret == 0);
      
#line 8678 
      goto ldv_call_46;
    }
    else {
      
#line 8682 
      __VERIFIER_assume(ldv_46_ret != 0);
      
#line 8689 
      goto ldv_main_46;
    }
  }
  else {
    
#line 8694 
    ldv_free((void *)ldv_46_resource_0);
    
#line 8702 
    __retres = (void *)0;
    
#line 8702 
    goto return_label;
  }
  
#line 8705 
  __retres = (void *)0;
  
#line 8705 
  goto return_label;
  ldv_call_46: 
#line 8708 
  ;
  
#line 8711 
  tmp_4 = ldv_undef_int();
  
#line 8711 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 8712 
    ;
    
#line 8714 
    ldv_46_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 8715 
    ldv_46_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 8719 
    if (ldv_46_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 8725 
      __VERIFIER_assume(ldv_46_size_cnt <= 2147479552UL);
      
#line 8727 
      (*(ldv_46_container->write))(ldv_46_resource_1,(char const *)ldv_46_ldv_param_1_6,ldv_46_size_cnt,ldv_46_ldv_param_3_7);
    }
    else ;
    
#line 8732 
    ldv_free((void *)ldv_46_ldv_param_3_7);
    
#line 8733 
    ldv_free((void *)ldv_46_ldv_param_1_6);
    
#line 8740 
    goto ldv_call_46;
    case 2: 
#line 8743 
    ;
    
#line 8745 
    if (ldv_46_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 8747 
      (*(ldv_46_container->release))(ldv_46_resource_0,ldv_46_resource_1); else ;
    
#line 8755 
    goto ldv_main_46;
    case 3: 
#line 8758 
    ;
    
#line 8762 
    tmp_9 = ldv_undef_int();
    
#line 8762 
    if (tmp_9 != 0) 
#line 8765 
                    (*ldv_emg_alias_generic_file_llseek_3)(ldv_46_resource_1,ldv_46_ldv_param_1_2,ldv_46_ldv_param_2_3);
    else {
      
#line 8771 
      ldv_46_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 8772 
      ldv_46_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 8777 
      ldv_emg_wrapper_iwl_dbgfs_sensitivity_read_3(ldv_46_resource_1,ldv_46_ldv_param_1_4,ldv_46_size_cnt,ldv_46_ldv_param_3_5);
      
#line 8781 
      ldv_free((void *)ldv_46_ldv_param_3_5);
      
#line 8782 
      ldv_free((void *)ldv_46_ldv_param_1_4);
    }
    
#line 8786 
    goto ldv_51431;
    default: 
#line 8788 
    ;
    
#line 8788 
    __VERIFIER_assume(0);
  }
  ldv_51431: 
#line 8797 
  ;
  
#line 8797 
  goto ldv_call_46;
  
#line 8799 
  __retres = (void *)0;
  return_label: 
#line 8799 
                return __retres;
}


